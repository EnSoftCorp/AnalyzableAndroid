public class com.android.server.pm.PackageManagerService extends android.content.pm.IPackageManager$Stub
{
    private static final int ADD_EVENTS;
    private static final int BLUETOOTH_UID;
    static final int BROADCAST_DELAY;
    static final int CHECK_PENDING_VERIFICATION;
    private static final boolean DEBUG_APP_DIR_OBSERVER;
    private static final boolean DEBUG_BROADCASTS;
    private static final boolean DEBUG_INSTALL;
    private static final boolean DEBUG_INTENT_MATCHING;
    private static final boolean DEBUG_PACKAGE_INFO;
    private static final boolean DEBUG_PACKAGE_SCANNING;
    static final boolean DEBUG_PREFERRED;
    private static final boolean DEBUG_REMOVE;
    static final boolean DEBUG_SD_INSTALL;
    static final boolean DEBUG_SETTINGS;
    private static final boolean DEBUG_SHOW_INFO;
    static final boolean DEBUG_UPGRADE;
    private static final boolean DEBUG_VERIFY;
    static final android.content.ComponentName DEFAULT_CONTAINER_COMPONENT;
    static final java.lang.String DEFAULT_CONTAINER_PACKAGE;
    private static final int DEFAULT_VERIFICATION_RESPONSE;
    private static final long DEFAULT_VERIFICATION_TIMEOUT;
    private static final boolean DEFAULT_VERIFY_ENABLE;
    static final int DEX_OPT_DEFERRED;
    static final int DEX_OPT_FAILED;
    static final int DEX_OPT_PERFORMED;
    static final int DEX_OPT_SKIPPED;
    static final int END_COPY;
    static final int FIND_INSTALL_LOC;
    private static final boolean GET_CERTIFICATES;
    static final int INIT_COPY;
    private static final java.lang.String INSTALL_PACKAGE_SUFFIX;
    private static final java.lang.String LIB_DIR_NAME;
    private static final int LOG_UID;
    static final int MCS_BOUND;
    static final int MCS_GIVE_UP;
    static final int MCS_RECONNECT;
    static final int MCS_UNBIND;
    private static final int NFC_UID;
    private static final int OBSERVER_EVENTS;
    private static final java.lang.String PACKAGE_MIME_TYPE;
    static final int PACKAGE_VERIFIED;
    static final int POST_INSTALL;
    private static final int RADIO_UID;
    static final int REMOVE_CHATTY;
    private static final int REMOVE_EVENTS;
    static final int SCAN_BOOTING;
    static final int SCAN_DEFER_DEX;
    static final int SCAN_DELETE_DATA_ON_FAILURES;
    static final int SCAN_FORCE_DEX;
    static final int SCAN_MONITOR;
    static final int SCAN_NEW_INSTALL;
    static final int SCAN_NO_DEX;
    static final int SCAN_NO_PATHS;
    static final int SCAN_UPDATE_SIGNATURE;
    static final int SCAN_UPDATE_TIME;
    private static final java.lang.String SD_ENCRYPTION_ALGORITHM;
    private static final java.lang.String SD_ENCRYPTION_KEYSTORE_NAME;
    static final int SEND_PENDING_BROADCAST;
    private static final int SHELL_UID;
    static final int START_CLEANING_PACKAGE;
    static final java.lang.String TAG;
    static final int UPDATED_MEDIA_STATUS;
    static final int UPDATE_PERMISSIONS_ALL;
    static final int UPDATE_PERMISSIONS_REPLACE_ALL;
    static final int UPDATE_PERMISSIONS_REPLACE_PKG;
    private static final long WATCHDOG_TIMEOUT;
    static final int WRITE_PACKAGE_RESTRICTIONS;
    static final int WRITE_SETTINGS;
    static final int WRITE_SETTINGS_DELAY;
    private static final java.util.Comparator mProviderInitOrderSorter;
    private static final java.util.Comparator mResolvePrioritySorter;
    static final java.lang.String mTempContainerPrefix;
    static com.android.server.pm.UserManagerService sUserManager;
    final com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities;
    android.content.pm.ApplicationInfo mAndroidApplication;
    final java.io.File mAppDataDir;
    final java.util.HashMap mAppDirs;
    final java.io.File mAppInstallDir;
    final android.os.FileObserver mAppInstallObserver;
    private java.io.File mAppLibInstallDir;
    final java.lang.String mAsecInternalPath;
    final java.util.HashMap mAvailableFeatures;
    private com.android.internal.app.IMediaContainerService mContainerService;
    final android.content.Context mContext;
    android.content.ComponentName mCustomResolverComponentName;
    private final com.android.server.pm.PackageManagerService$DefaultContainerConnection mDefContainerConn;
    final int mDefParseFlags;
    java.util.HashSet mDeferredDexOpt;
    private java.util.HashSet mDirtyUsers;
    final android.os.FileObserver mDrmAppInstallObserver;
    final java.io.File mDrmAppPrivateInstallDir;
    final boolean mFactoryTest;
    boolean mFoundPolicyFile;
    final android.os.FileObserver mFrameworkInstallObserver;
    int[] mGlobalGids;
    final com.android.server.pm.PackageManagerService$PackageHandler mHandler;
    final android.os.HandlerThread mHandlerThread;
    boolean mHasSystemUidErrors;
    final java.lang.Object mInstallLock;
    final com.android.server.pm.Installer mInstaller;
    final java.util.HashMap mInstrumentation;
    int mLastScanError;
    private boolean mMediaMounted;
    final android.util.DisplayMetrics mMetrics;
    int mNextInstallToken;
    final boolean mNoDexOpt;
    final boolean mOnlyCore;
    final java.util.HashMap mPackages;
    final com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts;
    final android.util.SparseArray mPendingVerification;
    private int mPendingVerificationToken;
    final java.util.HashMap mPermissionGroups;
    android.content.pm.PackageParser$Package mPlatformPackage;
    final android.os.FileObserver mPrivilegedInstallObserver;
    final java.util.HashSet mProtectedBroadcasts;
    final com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders;
    final java.util.HashMap mProvidersByAuthority;
    final com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers;
    private final java.lang.String mRequiredVerifierPackage;
    final android.content.pm.ActivityInfo mResolveActivity;
    android.content.ComponentName mResolveComponentName;
    final android.content.pm.ResolveInfo mResolveInfo;
    boolean mResolverReplaced;
    boolean mRestoredSettings;
    final android.util.SparseArray mRunningInstalls;
    boolean mSafeMode;
    final java.lang.String mSdkCodename;
    final int mSdkVersion;
    final java.lang.String[] mSeparateProcesses;
    final com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices;
    final com.android.server.pm.Settings mSettings;
    final java.util.HashMap mSharedLibraries;
    final android.os.FileObserver mSystemInstallObserver;
    final android.util.SparseArray mSystemPermissions;
    boolean mSystemReady;
    java.lang.String[] mTmpSharedLibraries;
    final java.util.HashSet mTransferedPackages;
    final java.io.File mUserAppDataDir;
    final android.os.FileObserver mVendorInstallObserver;

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        com.android.server.pm.PackageManagerService$3 $r1;
        com.android.server.pm.PackageManagerService$4 $r2;

        <com.android.server.pm.PackageManagerService: java.lang.String mTempContainerPrefix> = "smdl2tmp";

        <com.android.server.pm.PackageManagerService: int WRITE_SETTINGS_DELAY> = 10000;

        <com.android.server.pm.PackageManagerService: int WRITE_SETTINGS> = 13;

        <com.android.server.pm.PackageManagerService: int WRITE_PACKAGE_RESTRICTIONS> = 14;

        <com.android.server.pm.PackageManagerService: long WATCHDOG_TIMEOUT> = 600000L;

        <com.android.server.pm.PackageManagerService: int UPDATE_PERMISSIONS_REPLACE_PKG> = 2;

        <com.android.server.pm.PackageManagerService: int UPDATE_PERMISSIONS_REPLACE_ALL> = 4;

        <com.android.server.pm.PackageManagerService: int UPDATE_PERMISSIONS_ALL> = 1;

        <com.android.server.pm.PackageManagerService: int UPDATED_MEDIA_STATUS> = 12;

        <com.android.server.pm.PackageManagerService: java.lang.String TAG> = "PackageManager";

        <com.android.server.pm.PackageManagerService: int START_CLEANING_PACKAGE> = 7;

        <com.android.server.pm.PackageManagerService: int SHELL_UID> = 2000;

        <com.android.server.pm.PackageManagerService: int SEND_PENDING_BROADCAST> = 1;

        <com.android.server.pm.PackageManagerService: java.lang.String SD_ENCRYPTION_KEYSTORE_NAME> = "AppsOnSD";

        <com.android.server.pm.PackageManagerService: java.lang.String SD_ENCRYPTION_ALGORITHM> = "AES";

        <com.android.server.pm.PackageManagerService: int SCAN_UPDATE_TIME> = 64;

        <com.android.server.pm.PackageManagerService: int SCAN_UPDATE_SIGNATURE> = 8;

        <com.android.server.pm.PackageManagerService: int SCAN_NO_PATHS> = 32;

        <com.android.server.pm.PackageManagerService: int SCAN_NO_DEX> = 2;

        <com.android.server.pm.PackageManagerService: int SCAN_NEW_INSTALL> = 16;

        <com.android.server.pm.PackageManagerService: int SCAN_MONITOR> = 1;

        <com.android.server.pm.PackageManagerService: int SCAN_FORCE_DEX> = 4;

        <com.android.server.pm.PackageManagerService: int SCAN_DELETE_DATA_ON_FAILURES> = 512;

        <com.android.server.pm.PackageManagerService: int SCAN_DEFER_DEX> = 128;

        <com.android.server.pm.PackageManagerService: int SCAN_BOOTING> = 256;

        <com.android.server.pm.PackageManagerService: int REMOVE_EVENTS> = 584;

        <com.android.server.pm.PackageManagerService: int REMOVE_CHATTY> = 65536;

        <com.android.server.pm.PackageManagerService: int RADIO_UID> = 1001;

        <com.android.server.pm.PackageManagerService: int POST_INSTALL> = 9;

        <com.android.server.pm.PackageManagerService: int PACKAGE_VERIFIED> = 15;

        <com.android.server.pm.PackageManagerService: java.lang.String PACKAGE_MIME_TYPE> = "application/vnd.android.package-archive";

        <com.android.server.pm.PackageManagerService: int OBSERVER_EVENTS> = 712;

        <com.android.server.pm.PackageManagerService: int NFC_UID> = 1027;

        <com.android.server.pm.PackageManagerService: int MCS_UNBIND> = 6;

        <com.android.server.pm.PackageManagerService: int MCS_RECONNECT> = 10;

        <com.android.server.pm.PackageManagerService: int MCS_GIVE_UP> = 11;

        <com.android.server.pm.PackageManagerService: int MCS_BOUND> = 3;

        <com.android.server.pm.PackageManagerService: int LOG_UID> = 1007;

        <com.android.server.pm.PackageManagerService: java.lang.String LIB_DIR_NAME> = "lib";

        <com.android.server.pm.PackageManagerService: java.lang.String INSTALL_PACKAGE_SUFFIX> = "-";

        <com.android.server.pm.PackageManagerService: int INIT_COPY> = 5;

        <com.android.server.pm.PackageManagerService: boolean GET_CERTIFICATES> = 1;

        <com.android.server.pm.PackageManagerService: int FIND_INSTALL_LOC> = 8;

        <com.android.server.pm.PackageManagerService: int END_COPY> = 4;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_SKIPPED> = 0;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_PERFORMED> = 1;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_FAILED> = -1;

        <com.android.server.pm.PackageManagerService: int DEX_OPT_DEFERRED> = 2;

        <com.android.server.pm.PackageManagerService: boolean DEFAULT_VERIFY_ENABLE> = 1;

        <com.android.server.pm.PackageManagerService: long DEFAULT_VERIFICATION_TIMEOUT> = 10000L;

        <com.android.server.pm.PackageManagerService: int DEFAULT_VERIFICATION_RESPONSE> = 1;

        <com.android.server.pm.PackageManagerService: java.lang.String DEFAULT_CONTAINER_PACKAGE> = "com.android.defcontainer";

        <com.android.server.pm.PackageManagerService: boolean DEBUG_VERIFY> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_UPGRADE> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_SHOW_INFO> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_SETTINGS> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_SD_INSTALL> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_REMOVE> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_PREFERRED> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_PACKAGE_SCANNING> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_PACKAGE_INFO> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_INTENT_MATCHING> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_INSTALL> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_BROADCASTS> = 0;

        <com.android.server.pm.PackageManagerService: boolean DEBUG_APP_DIR_OBSERVER> = 0;

        <com.android.server.pm.PackageManagerService: int CHECK_PENDING_VERIFICATION> = 16;

        <com.android.server.pm.PackageManagerService: int BROADCAST_DELAY> = 10000;

        <com.android.server.pm.PackageManagerService: int BLUETOOTH_UID> = 1002;

        <com.android.server.pm.PackageManagerService: int ADD_EVENTS> = 136;

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.defcontainer", "com.android.defcontainer.DefaultContainerService");

        <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT> = $r0;

        $r1 = new com.android.server.pm.PackageManagerService$3;

        specialinvoke $r1.<com.android.server.pm.PackageManagerService$3: void <init>()>();

        <com.android.server.pm.PackageManagerService: java.util.Comparator mResolvePrioritySorter> = $r1;

        $r2 = new com.android.server.pm.PackageManagerService$4;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$4: void <init>()>();

        <com.android.server.pm.PackageManagerService: java.util.Comparator mProviderInitOrderSorter> = $r2;

        return;
    }

    public void <init>(android.content.Context, com.android.server.pm.Installer, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context r1;
        com.android.server.pm.Installer r2, $r138, $r225, $r235;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z24, $z26, $z27, $z30, $z31, $z32, $z33;
        java.lang.String r3, r4, r9, r11, r24, r27, r33, r37, r41, $r46, $r47, $r65, $r66, $r91, $r101, $r112, $r114, $r115, $r119, $r126, $r127, $r134, $r142, $r146, $r156, $r160, $r175, $r180, $r185, $r188, $r192, $r205, $r212, $r215, $r217, $r218, $r219, $r223, $r228, $r229, $r231, $r233, $r237, $r238, $r251, $r257, $r261, $r262;
        java.lang.Object r5, $r48, $r88, $r96, $r163, $r167, $r184, $r186, $r195, $r200, $r227;
        java.lang.Throwable r6, r7, $r245, $r264;
        java.util.HashMap r8, $r42, $r43, $r44, $r49, $r50, $r52, $r55, $r95, $r118, $r162, $r183, $r187, $r194, $r236;
        java.io.File r10, r15, r17, r19, r21, r22, r36, $r89, $r90, $r92, $r93, $r102, $r103, $r117, $r121, $r124, $r129, $r132, $r133, $r140, $r158, $r161, $r177, $r178, $r211, $r214, $r216, $r230, $r234;
        long l0, $l15, $l20, $l27, $l28, $l30, $l35;
        short s1, $s19;
        java.util.HashSet r12, $r57, $r63, $r64, $r105;
        int i2, i3, i4, i5, i6, i8, i9, i10, i11, $i12, $i13, $i17, $i23, $i24, $i25, $i29, $i33, $i37, $i38, $i39, $i40, $i41, $i42, $i46;
        java.lang.String[] r13, r16, r18, $r256;
        java.util.Iterator r14, r25, r31;
        java.util.ArrayList r20, r23, $r139;
        byte b7, $b32;
        android.content.pm.ApplicationInfo r26;
        android.content.pm.PackageParser$Package r28, $r189;
        com.android.server.pm.PackageSetting r29, r30, r32, $r201;
        java.io.IOException r34, r40, $r243, $r250;
        android.os.HandlerThread $r39, $r79, $r80, $r99;
        android.util.SparseArray $r45, $r61, $r67;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r51;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r53, $r56;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r54;
        com.android.server.pm.PackageManagerService$DefaultContainerConnection $r58;
        android.content.pm.ResolveInfo $r59;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r60;
        android.content.pm.ActivityInfo $r62;
        com.android.server.pm.Settings $r69, $r71, $r73, $r74, $r83, $r85, $r87, $r107, $r136, $r137, $r144, $r145, $r151, $r153, $r157, $r166, $r190, $r191, $r193, $r202, $r208;
        android.util.DisplayMetrics $r75, $r78;
        android.view.Display $r76;
        android.view.WindowManager $r77;
        com.android.server.pm.PackageManagerService$PackageHandler $r81, $r100;
        com.android.server.pm.UserManagerService $r94, $r108;
        android.os.Looper $r97;
        com.android.server.Watchdog $r98;
        android.content.ComponentName $r104;
        java.util.List $r106;
        android.content.res.Resources $r109;
        java.lang.StringBuilder $r110, $r111, $r113, $r116, $r120, $r122, $r147, $r148, $r149, $r150, $r152, $r154, $r164, $r165, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r196, $r197, $r198, $r199, $r203, $r204, $r206, $r207, $r209, $r210, $r213, $r220, $r221, $r222, $r232, $r239, $r240, $r242, $r244, $r246, $r247, $r248, $r249, $r252, $r253, $r254, $r255, $r258, $r259, $r260, $r263, $r266;
        com.android.server.pm.PackageManagerService$AppDirObserver $r123, $r128, $r135, $r141, $r176, $r179;
        android.os.FileObserver $r125, $r130, $r131, $r143, $r159, $r181;
        float $f0, $f1;
        java.lang.Runtime $r155;
        java.util.Collection $r182, $r226;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry $r224;
        java.io.FileNotFoundException $r241, $r265;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.Installer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.content.pm.IPackageManager$Stub: void <init>()>();

        $r39 = new android.os.HandlerThread;

        specialinvoke $r39.<android.os.HandlerThread: void <init>(java.lang.String,int)>("PackageManager", 10);

        r0.<com.android.server.pm.PackageManagerService: android.os.HandlerThread mHandlerThread> = $r39;

        $i12 = <android.os.Build$VERSION: int SDK_INT>;

        r0.<com.android.server.pm.PackageManagerService: int mSdkVersion> = $i12;

        $r46 = "REL";

        $r47 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $z5 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z5 == 0 goto label018;

        r3 = null;

     label001:
        r0.<com.android.server.pm.PackageManagerService: java.lang.String mSdkCodename> = r3;

        $r48 = new java.lang.Object;

        specialinvoke $r48.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock> = $r48;

        $r43 = new java.util.HashMap;

        specialinvoke $r43.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAppDirs> = $r43;

        $r42 = new java.util.HashMap;

        specialinvoke $r42.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages> = $r42;

        $r45 = new android.util.SparseArray;

        specialinvoke $r45.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mSystemPermissions> = $r45;

        $r44 = new java.util.HashMap;

        specialinvoke $r44.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries> = $r44;

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries> = null;

        $r55 = new java.util.HashMap;

        specialinvoke $r55.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures> = $r55;

        $r56 = new com.android.server.pm.PackageManagerService$ActivityIntentResolver;

        specialinvoke $r56.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities> = $r56;

        $r53 = new com.android.server.pm.PackageManagerService$ActivityIntentResolver;

        specialinvoke $r53.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers> = $r53;

        $r54 = new com.android.server.pm.PackageManagerService$ServiceIntentResolver;

        specialinvoke $r54.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices> = $r54;

        $r51 = new com.android.server.pm.PackageManagerService$ProviderIntentResolver;

        specialinvoke $r51.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders> = $r51;

        $r52 = new java.util.HashMap;

        specialinvoke $r52.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority> = $r52;

        $r49 = new java.util.HashMap;

        specialinvoke $r49.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation> = $r49;

        $r50 = new java.util.HashMap;

        specialinvoke $r50.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups> = $r50;

        $r63 = new java.util.HashSet;

        specialinvoke $r63.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages> = $r63;

        $r64 = new java.util.HashSet;

        specialinvoke $r64.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mProtectedBroadcasts> = $r64;

        $r61 = new android.util.SparseArray;

        specialinvoke $r61.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification> = $r61;

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt> = null;

        r0.<com.android.server.pm.PackageManagerService: int mPendingVerificationToken> = 0;

        $r62 = new android.content.pm.ActivityInfo;

        specialinvoke $r62.<android.content.pm.ActivityInfo: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity> = $r62;

        $r59 = new android.content.pm.ResolveInfo;

        specialinvoke $r59.<android.content.pm.ResolveInfo: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo> = $r59;

        r0.<com.android.server.pm.PackageManagerService: boolean mResolverReplaced> = 0;

        $r60 = new com.android.server.pm.PackageManagerService$PendingPackageBroadcasts;

        specialinvoke $r60.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts> = $r60;

        r0.<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService mContainerService> = null;

        $r57 = new java.util.HashSet;

        specialinvoke $r57.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers> = $r57;

        $r58 = new com.android.server.pm.PackageManagerService$DefaultContainerConnection;

        specialinvoke $r58.<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection mDefContainerConn> = $r58;

        $r67 = new android.util.SparseArray;

        specialinvoke $r67.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mRunningInstalls> = $r67;

        r0.<com.android.server.pm.PackageManagerService: int mNextInstallToken> = 1;

        r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted> = 0;

        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3060, $l15);

        $i13 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        if $i13 > 0 goto label002;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "**** ro.build.version.sdk not set!");

     label002:
        r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.PackageManagerService: boolean mFactoryTest> = z0;

        r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore> = z1;

        $r66 = "eng";

        $r65 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.build.type");

        $z6 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r65);

        r0.<com.android.server.pm.PackageManagerService: boolean mNoDexOpt> = $z6;

        $r75 = new android.util.DisplayMetrics;

        specialinvoke $r75.<android.util.DisplayMetrics: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics> = $r75;

        $r74 = new com.android.server.pm.Settings;

        specialinvoke $r74.<com.android.server.pm.Settings: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings> = $r74;

        $r73 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r73.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.system", 1000, 1073741825);

        $r71 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r71.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.phone", 1001, 1073741825);

        $r69 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r69.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.log", 1007, 1073741825);

        $r83 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r83.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.nfc", 1027, 1073741825);

        $r85 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r85.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.bluetooth", 1002, 1073741825);

        $r87 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r87.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>("android.uid.shell", 2000, 1073741825);

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.separate_processes");

        if r4 == null goto label020;

        $i46 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i46 <= 0 goto label020;

        $r228 = "*";

        $z27 = virtualinvoke $r228.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z27 == 0 goto label019;

        r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags> = 8;

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses> = null;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Running with debug.separate_processes: * (ALL)");

     label003:
        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller> = r2;

        $r88 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r77 = (android.view.WindowManager) $r88;

        $r76 = interfaceinvoke $r77.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r78 = r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r76.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r78);

        r5 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r5;

     label004:
        r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r8;

     label005:
        $r79 = r0.<com.android.server.pm.PackageManagerService: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r79.<android.os.HandlerThread: void start()>();

        $r81 = new com.android.server.pm.PackageManagerService$PackageHandler;

        $r80 = r0.<com.android.server.pm.PackageManagerService: android.os.HandlerThread mHandlerThread>;

        $r97 = virtualinvoke $r80.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r81.<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(com.android.server.pm.PackageManagerService,android.os.Looper)>(r0, $r97);

        r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler> = $r81;

        $r98 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r100 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r99 = r0.<com.android.server.pm.PackageManagerService: android.os.HandlerThread mHandlerThread>;

        $r101 = virtualinvoke $r99.<android.os.HandlerThread: java.lang.String getName()>();

        virtualinvoke $r98.<com.android.server.Watchdog: void addThread(android.os.Handler,java.lang.String,long)>($r100, $r101, 600000L);

        r10 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r102 = new java.io.File;

        specialinvoke $r102.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "data");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mAppDataDir> = $r102;

        $r103 = new java.io.File;

        specialinvoke $r103.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "app");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir> = $r103;

        $r89 = new java.io.File;

        specialinvoke $r89.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "app-lib");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mAppLibInstallDir> = $r89;

        $r90 = new java.io.File;

        specialinvoke $r90.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "app-asec");

        $r91 = virtualinvoke $r90.<java.io.File: java.lang.String getPath()>();

        r0.<com.android.server.pm.PackageManagerService: java.lang.String mAsecInternalPath> = $r91;

        $r92 = new java.io.File;

        specialinvoke $r92.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "user");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mUserAppDataDir> = $r92;

        $r93 = new java.io.File;

        specialinvoke $r93.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "app-private");

        r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir> = $r93;

        $r94 = new com.android.server.pm.UserManagerService;

        $r96 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        $r95 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        specialinvoke $r94.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object)>(r1, r0, $r96, $r95);

        <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager> = $r94;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void readPermissions()>();

        $z9 = staticinvoke <com.android.server.pm.SELinuxMMAC: boolean readInstallPolicy()>();

        r0.<com.android.server.pm.PackageManagerService: boolean mFoundPolicyFile> = $z9;

        $r107 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r108 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r106 = virtualinvoke $r108.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(0);

        $i17 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $z11 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        $z10 = virtualinvoke $r107.<com.android.server.pm.Settings: boolean readLPw(com.android.server.pm.PackageManagerService,java.util.List,int,boolean)>(r0, $r106, $i17, $z11);

        r0.<com.android.server.pm.PackageManagerService: boolean mRestoredSettings> = $z10;

        $r109 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r9 = virtualinvoke $r109.<android.content.res.Resources: java.lang.String getString(int)>(17039417);

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z7 == 0 goto label021;

     label006:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3070, l0);

     label007:
        s1 = 417;

     label008:
        $z8 = r0.<com.android.server.pm.PackageManagerService: boolean mNoDexOpt>;

        if $z8 == 0 goto label010;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Running ENG build: no pre-dexopt!");

     label009:
        s1 = 419;

     label010:
        $r105 = new java.util.HashSet;

        specialinvoke $r105.<java.util.HashSet: void <init>()>();

        r12 = $r105;

        r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.boot.class.path");

     label011:
        if r11 == null goto label029;

     label012:
        r13 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String[] splitString(java.lang.String,char)>(r11, 58);

     label013:
        i2 = 0;

     label014:
        i3 = lengthof r13;

     label015:
        if i2 >= i3 goto label030;

     label016:
        $r229 = r13[i2];

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>($r229);

     label017:
        i2 = i2 + 1;

        goto label014;

     label018:
        r3 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        goto label001;

     label019:
        r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags> = 0;

        $r256 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses> = $r256;

        $r255 = new java.lang.StringBuilder;

        specialinvoke $r255.<java.lang.StringBuilder: void <init>()>();

        $r254 = virtualinvoke $r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running with debug.separate_processes: ");

        $r258 = virtualinvoke $r254.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r257 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r257);

        goto label003;

     label020:
        r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags> = 0;

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses> = null;

        goto label003;

     label021:
        $r104 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r9);

        r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName> = $r104;

     label022:
        goto label006;

     label023:
        $r264 := @caughtexception;

        r7 = $r264;

     label024:
        exitmonitor r8;

     label025:
        throw r7;

     label026:
        $r245 := @caughtexception;

        r6 = $r245;

     label027:
        exitmonitor r5;

     label028:
        throw r6;

     label029:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "No BOOTCLASSPATH found!");

     label030:
        $r118 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        i4 = virtualinvoke $r118.<java.util.HashMap: int size()>();

     label031:
        z2 = 0;

        if i4 <= 0 goto label043;

     label032:
        $r236 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r226 = virtualinvoke $r236.<java.util.HashMap: java.util.Collection values()>();

        r14 = interfaceinvoke $r226.<java.util.Collection: java.util.Iterator iterator()>();

     label033:
        $z26 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label043;

        $r227 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r224 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r227;

        r41 = $r224.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

     label034:
        if r41 == null goto label033;

     label035:
        $z24 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>(r41);

        if $z24 == 0 goto label033;

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>(r41);

        $r225 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r225.<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean)>(r41, 1000, 1);

     label036:
        z2 = 1;

        goto label033;

     label037:
        $r265 := @caughtexception;

     label038:
        $r266 = new java.lang.StringBuilder;

        specialinvoke $r266.<java.lang.StringBuilder: void <init>()>();

        $r260 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Library not found: ");

        $r259 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r261 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r261);

     label039:
        goto label033;

     label040:
        $r243 := @caughtexception;

        r40 = $r243;

     label041:
        $r244 = new java.lang.StringBuilder;

        specialinvoke $r244.<java.lang.StringBuilder: void <init>()>();

        $r248 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot dexopt ");

        $r246 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r247 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; is it an APK or JAR? ");

        $r238 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r239 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r238);

        $r237 = virtualinvoke $r239.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r237);

     label042:
        goto label033;

     label043:
        $r117 = new java.io.File;

        $r121 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r117.<java.io.File: void <init>(java.io.File,java.lang.String)>($r121, "framework");

        r15 = $r117;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke r15.<java.io.File: java.lang.String getPath()>();

        $r120 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

        $r111 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/framework-res.apk");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>($r112);

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke r15.<java.io.File: java.lang.String getPath()>();

        $r116 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r113 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/core-libart.jar");

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.util.HashSet: boolean add(java.lang.Object)>($r114);

        r18 = virtualinvoke r15.<java.io.File: java.lang.String[] list()>();

     label044:
        if r18 == null goto label059;

        i10 = 0;

     label045:
        i11 = lengthof r18;

     label046:
        if i10 >= i11 goto label059;

     label047:
        $r230 = new java.io.File;

        $r231 = r18[i10];

        specialinvoke $r230.<java.io.File: void <init>(java.io.File,java.lang.String)>(r15, $r231);

        r36 = $r230;

        r37 = virtualinvoke r36.<java.io.File: java.lang.String getPath()>();

        $z31 = virtualinvoke r12.<java.util.HashSet: boolean contains(java.lang.Object)>(r37);

        if $z31 == 0 goto label049;

     label048:
        goto label104;

     label049:
        $z32 = virtualinvoke r37.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z32 != 0 goto label051;

        z4 = virtualinvoke r37.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");

     label050:
        if z4 == 0 goto label104;

     label051:
        $z33 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>(r37);

        if $z33 == 0 goto label104;

        $r235 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r235.<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean)>(r37, 1000, 1);

     label052:
        z2 = 1;

        goto label104;

     label053:
        $r241 := @caughtexception;

     label054:
        $r242 = new java.lang.StringBuilder;

        specialinvoke $r242.<java.lang.StringBuilder: void <init>()>();

        $r240 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jar not found: ");

        $r263 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r262 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r262);

     label055:
        goto label104;

     label056:
        $r250 := @caughtexception;

        r34 = $r250;

     label057:
        $r249 = new java.lang.StringBuilder;

        specialinvoke $r249.<java.lang.StringBuilder: void <init>()>();

        $r253 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception reading jar: ");

        $r252 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r251 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r251, r34);

     label058:
        goto label104;

     label059:
        if z2 == 0 goto label067;

     label060:
        $r211 = new java.io.File;

        specialinvoke $r211.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, "dalvik-cache");

        r19 = $r211;

        r16 = virtualinvoke r19.<java.io.File: java.lang.String[] list()>();

     label061:
        if r16 == null goto label067;

        i9 = 0;

     label062:
        i8 = lengthof r16;

     label063:
        if i9 >= i8 goto label067;

     label064:
        r33 = r16[i9];

        $z21 = virtualinvoke r33.<java.lang.String: boolean startsWith(java.lang.String)>("data@app@");

        if $z21 != 0 goto label065;

        $z30 = virtualinvoke r33.<java.lang.String: boolean startsWith(java.lang.String)>("data@app-private@");

        if $z30 == 0 goto label105;

     label065:
        $r210 = new java.lang.StringBuilder;

        specialinvoke $r210.<java.lang.StringBuilder: void <init>()>();

        $r209 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pruning dalvik file: ");

        $r232 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r233 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r233);

        $r234 = new java.io.File;

        specialinvoke $r234.<java.io.File: void <init>(java.io.File,java.lang.String)>(r19, r33);

        virtualinvoke $r234.<java.io.File: boolean delete()>();

     label066:
        goto label105;

     label067:
        $r135 = new com.android.server.pm.PackageManagerService$AppDirObserver;

        $r134 = virtualinvoke r15.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r135.<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean)>(r0, $r134, 712, 1, 0);

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mFrameworkInstallObserver> = $r135;

        $r131 = r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mFrameworkInstallObserver>;

        virtualinvoke $r131.<android.os.FileObserver: void startWatching()>();

        $s19 = s1 | 2;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r15, 193, $s19, 0L);

        $r133 = new java.io.File;

        $r132 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r133.<java.io.File: void <init>(java.io.File,java.lang.String)>($r132, "priv-app");

        r17 = $r133;

        $r128 = new com.android.server.pm.PackageManagerService$AppDirObserver;

        $r127 = virtualinvoke r17.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r128.<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean)>(r0, $r127, 712, 1, 1);

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mPrivilegedInstallObserver> = $r128;

        $r130 = r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mPrivilegedInstallObserver>;

        virtualinvoke $r130.<android.os.FileObserver: void startWatching()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r17, 193, s1, 0L);

        $r129 = new java.io.File;

        $r124 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r129.<java.io.File: void <init>(java.io.File,java.lang.String)>($r124, "app");

        r21 = $r129;

        $r123 = new com.android.server.pm.PackageManagerService$AppDirObserver;

        $r126 = virtualinvoke r21.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r123.<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean)>(r0, $r126, 712, 1, 0);

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mSystemInstallObserver> = $r123;

        $r125 = r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mSystemInstallObserver>;

        virtualinvoke $r125.<android.os.FileObserver: void startWatching()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r21, 65, s1, 0L);

        $r140 = new java.io.File;

        specialinvoke $r140.<java.io.File: void <init>(java.lang.String)>("/vendor/app");

        r22 = $r140;

        $r141 = new com.android.server.pm.PackageManagerService$AppDirObserver;

        $r142 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r141.<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean)>(r0, $r142, 712, 1, 0);

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mVendorInstallObserver> = $r141;

        $r143 = r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mVendorInstallObserver>;

        virtualinvoke $r143.<android.os.FileObserver: void startWatching()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>(r22, 65, s1, 0L);

        $r138 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r138.<com.android.server.pm.Installer: int moveFiles()>();

        $r139 = new java.util.ArrayList;

        specialinvoke $r139.<java.util.ArrayList: void <init>()>();

        r20 = $r139;

        $z15 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        if $z15 != 0 goto label075;

        $r202 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r183 = $r202.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r182 = virtualinvoke $r183.<java.util.HashMap: java.util.Collection values()>();

        r31 = interfaceinvoke $r182.<java.util.Collection: java.util.Iterator iterator()>();

     label068:
        $z18 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label075;

        $r184 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r30 = (com.android.server.pm.PackageSetting) $r184;

        $i37 = r30.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i38 = 1 & $i37;

        if $i38 == 0 goto label068;

        $r187 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r185 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r186 = virtualinvoke $r187.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r185);

        $r189 = (android.content.pm.PackageParser$Package) $r186;

        if $r189 == null goto label070;

        $r208 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r217 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z20 = virtualinvoke $r208.<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>($r217);

        if $z20 == 0 goto label068;

        $r207 = new java.lang.StringBuilder;

        specialinvoke $r207.<java.lang.StringBuilder: void <init>()>();

        $r206 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting better updatd system app for ");

        $r205 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r204 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r205);

        $r203 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; removing system app");

        $r212 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r212);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>(r30, 1);

     label069:
        goto label068;

     label070:
        $r190 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r188 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $z19 = virtualinvoke $r190.<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>($r188);

        if $z19 != 0 goto label072;

        interfaceinvoke r31.<java.util.Iterator: void remove()>();

        $r213 = new java.lang.StringBuilder;

        specialinvoke $r213.<java.lang.StringBuilder: void <init>()>();

        $r222 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r223 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r220 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r223);

        $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer exists; wiping its data");

        $r218 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r218);

        $r219 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r219);

     label071:
        goto label068;

     label072:
        $r191 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r192 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r29 = virtualinvoke $r191.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r192);

        $r216 = r29.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        if $r216 == null goto label073;

        $r214 = r29.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z22 = virtualinvoke $r214.<java.io.File: boolean exists()>();

        if $z22 != 0 goto label068;

     label073:
        $r215 = r30.<com.android.server.pm.PackageSetting: java.lang.String name>;

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r215);

     label074:
        goto label068;

     label075:
        $r136 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r23 = virtualinvoke $r136.<com.android.server.pm.Settings: java.util.ArrayList getListOfIncompleteInstallPackagesLPr()>();

     label076:
        i6 = 0;

     label077:
        i5 = virtualinvoke r23.<java.util.ArrayList: int size()>();

     label078:
        if i6 >= i5 goto label081;

     label079:
        $r200 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r201 = (com.android.server.pm.PackageSetting) $r200;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void cleanupInstallFailedPackage(com.android.server.pm.PackageSetting)>($r201);

     label080:
        i6 = i6 + 1;

        goto label077;

     label081:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void deleteTempPackageFiles()>();

        $r137 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r137.<com.android.server.pm.Settings: void pruneSharedUsersLPw()>();

        $z14 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        if $z14 != 0 goto label089;

        $l35 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3080, $l35);

        $r176 = new com.android.server.pm.PackageManagerService$AppDirObserver;

        $r177 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir>;

        $r180 = virtualinvoke $r177.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r176.<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean)>(r0, $r180, 712, 0, 0);

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mAppInstallObserver> = $r176;

        $r181 = r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mAppInstallObserver>;

        virtualinvoke $r181.<android.os.FileObserver: void startWatching()>();

        $r178 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>($r178, 0, s1, 0L);

        $r179 = new com.android.server.pm.PackageManagerService$AppDirObserver;

        $r161 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        $r160 = virtualinvoke $r161.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r179.<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean)>(r0, $r160, 712, 0, 0);

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mDrmAppInstallObserver> = $r179;

        $r159 = r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mDrmAppInstallObserver>;

        virtualinvoke $r159.<android.os.FileObserver: void startWatching()>();

        $r158 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>($r158, 16, s1, 0L);

        r25 = interfaceinvoke r20.<java.util.List: java.util.Iterator iterator()>();

     label082:
        $z17 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label090;

        $r163 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r163;

        $r162 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r167 = virtualinvoke $r162.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r24);

        r28 = (android.content.pm.PackageParser$Package) $r167;

        $r166 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r166.<com.android.server.pm.Settings: void removeDisabledSystemPackageLPw(java.lang.String)>(r24);

     label083:
        if r28 != null goto label087;

     label084:
        $r196 = new java.lang.StringBuilder;

        specialinvoke $r196.<java.lang.StringBuilder: void <init>()>();

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated system package ");

        $r198 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r199 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer exists; wiping its data");

        r27 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>(r24);

     label085:
        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, r27);

     label086:
        goto label082;

     label087:
        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r164 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated system app + ");

        $r170 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r169 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer present; removing system privileges for ");

        $r168 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        r27 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>();

        r26 = r28.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i39 = r26.<android.content.pm.ApplicationInfo: int flags>;

        $i40 = -2 & $i39;

        r26.<android.content.pm.ApplicationInfo: int flags> = $i40;

        $r193 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r194 = $r193.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r195 = virtualinvoke $r194.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r24);

        r32 = (com.android.server.pm.PackageSetting) $r195;

        $i41 = r32.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i42 = -2 & $i41;

        r32.<com.android.server.pm.PackageSetting: int pkgFlags> = $i42;

     label088:
        goto label085;

     label089:
        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mAppInstallObserver> = null;

        r0.<com.android.server.pm.PackageManagerService: android.os.FileObserver mDrmAppInstallObserver> = null;

     label090:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateAllSharedLibrariesLPw()>();

        $l20 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3090, $l20);

        $r150 = new java.lang.StringBuilder;

        specialinvoke $r150.<java.lang.StringBuilder: void <init>()>();

        $r149 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time to scan packages: ");

        $l28 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l27 = $l28 - l0;

        $f1 = (float) $l27;

        $f0 = $f1 / 1000.0F;

        $r148 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r146 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r146);

        $r145 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i24 = $r145.<com.android.server.pm.Settings: int mInternalSdkPlatform>;

        $i25 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        if $i24 == $i25 goto label102;

     label091:
        z3 = 1;

     label092:
        if z3 == 0 goto label094;

     label093:
        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Platform changed from ");

        $r151 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i29 = $r151.<com.android.server.pm.Settings: int mInternalSdkPlatform>;

        $r172 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i33 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r171 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r174 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; regranting permissions for internal storage");

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r175);

     label094:
        $r144 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i23 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r144.<com.android.server.pm.Settings: int mInternalSdkPlatform> = $i23;

     label095:
        if z3 == 0 goto label103;

        b7 = 6;

     label096:
        $b32 = b7 | 1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>(null, null, $b32);

        $z16 = r0.<com.android.server.pm.PackageManagerService: boolean mRestoredSettings>;

        if $z16 != 0 goto label099;

     label097:
        if z1 != 0 goto label099;

     label098:
        $r153 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r153.<com.android.server.pm.Settings: void readDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>(r0, 0);

     label099:
        $r157 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r157.<com.android.server.pm.Settings: void writeLPr()>();

        $l30 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3100, $l30);

        $r155 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r155.<java.lang.Runtime: void gc()>();

        $r156 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.lang.String getRequiredVerifierLPr()>();

        r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage> = $r156;

        exitmonitor r8;

     label100:
        exitmonitor r5;

     label101:
        return;

     label102:
        z3 = 0;

        goto label092;

     label103:
        b7 = 0;

        goto label096;

     label104:
        i10 = i10 + 1;

        goto label045;

     label105:
        i9 = i9 + 1;

        goto label062;

        catch java.lang.Throwable from label004 to label005 with label026;
        catch java.lang.Throwable from label005 to label006 with label023;
        catch java.lang.Throwable from label006 to label007 with label023;
        catch java.lang.Throwable from label008 to label009 with label023;
        catch java.lang.Throwable from label010 to label011 with label023;
        catch java.lang.Throwable from label012 to label013 with label023;
        catch java.lang.Throwable from label014 to label015 with label023;
        catch java.lang.Throwable from label016 to label017 with label023;
        catch java.lang.Throwable from label021 to label022 with label023;
        catch java.lang.Throwable from label024 to label025 with label023;
        catch java.lang.Throwable from label025 to label026 with label026;
        catch java.lang.Throwable from label027 to label028 with label026;
        catch java.lang.Throwable from label029 to label030 with label023;
        catch java.lang.Throwable from label030 to label031 with label023;
        catch java.lang.Throwable from label032 to label033 with label023;
        catch java.lang.Throwable from label033 to label034 with label023;
        catch java.io.FileNotFoundException from label035 to label036 with label037;
        catch java.io.IOException from label035 to label036 with label040;
        catch java.lang.Throwable from label035 to label036 with label023;
        catch java.lang.Throwable from label038 to label039 with label023;
        catch java.lang.Throwable from label041 to label042 with label023;
        catch java.lang.Throwable from label043 to label044 with label023;
        catch java.lang.Throwable from label045 to label046 with label023;
        catch java.lang.Throwable from label047 to label048 with label023;
        catch java.lang.Throwable from label049 to label050 with label023;
        catch java.io.FileNotFoundException from label051 to label052 with label053;
        catch java.io.IOException from label051 to label052 with label056;
        catch java.lang.Throwable from label051 to label052 with label023;
        catch java.lang.Throwable from label054 to label055 with label023;
        catch java.lang.Throwable from label057 to label058 with label023;
        catch java.lang.Throwable from label060 to label061 with label023;
        catch java.lang.Throwable from label062 to label063 with label023;
        catch java.lang.Throwable from label064 to label065 with label023;
        catch java.lang.Throwable from label065 to label066 with label023;
        catch java.lang.Throwable from label067 to label068 with label023;
        catch java.lang.Throwable from label068 to label069 with label023;
        catch java.lang.Throwable from label070 to label071 with label023;
        catch java.lang.Throwable from label072 to label073 with label023;
        catch java.lang.Throwable from label073 to label074 with label023;
        catch java.lang.Throwable from label075 to label076 with label023;
        catch java.lang.Throwable from label077 to label078 with label023;
        catch java.lang.Throwable from label079 to label080 with label023;
        catch java.lang.Throwable from label081 to label082 with label023;
        catch java.lang.Throwable from label082 to label083 with label023;
        catch java.lang.Throwable from label084 to label085 with label023;
        catch java.lang.Throwable from label085 to label086 with label023;
        catch java.lang.Throwable from label087 to label088 with label023;
        catch java.lang.Throwable from label089 to label090 with label023;
        catch java.lang.Throwable from label090 to label091 with label023;
        catch java.lang.Throwable from label093 to label094 with label023;
        catch java.lang.Throwable from label094 to label095 with label023;
        catch java.lang.Throwable from label096 to label097 with label023;
        catch java.lang.Throwable from label098 to label099 with label023;
        catch java.lang.Throwable from label099 to label100 with label023;
        catch java.lang.Throwable from label100 to label101 with label026;
    }

    static java.util.HashSet access$1000(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashSet $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers>;

        return $r1;
    }

    static int access$1100(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getDefaultVerificationResponse()>();

        return $i0;
    }

    static void access$1200(com.android.server.pm.PackageManagerService, int, android.net.Uri, int, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.net.Uri r1;
        android.os.UserHandle r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        r2 := @parameter4: android.os.UserHandle;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void broadcastPackageVerified(int,android.net.Uri,int,android.os.UserHandle)>(i0, r1, i1, r2);

        return;
    }

    static void access$1300(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallArgs, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$InstallArgs;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void processPendingInstall(com.android.server.pm.PackageManagerService$InstallArgs,int)>(r1, i0);

        return;
    }

    static boolean access$1700(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.ApplicationInfo)>(r0);

        return $z0;
    }

    static java.util.Comparator access$1800()
    {
        java.util.Comparator $r0;

        $r0 = <com.android.server.pm.PackageManagerService: java.util.Comparator mResolvePrioritySorter>;

        return $r0;
    }

    static boolean access$1900(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isPackageFilename(java.lang.String)>(r0);

        return $z0;
    }

    static com.android.server.pm.PackageManagerService$DefaultContainerConnection access$200(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$DefaultContainerConnection $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection mDefContainerConn>;

        return $r1;
    }

    static boolean access$2000(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean ignoreCodePath(java.lang.String)>(r0);

        return $z0;
    }

    static android.content.pm.PackageParser$Package access$2100(com.android.server.pm.PackageManagerService, java.io.File, int, int, long, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1;
        int i0, i1;
        long l2;
        android.os.UserHandle r2;
        android.content.pm.PackageParser$Package $r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        r2 := @parameter5: android.os.UserHandle;

        $r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>(r1, i0, i1, l2, r2);

        return $r3;
    }

    static void access$2200(com.android.server.pm.PackageManagerService, java.lang.String, android.content.pm.PackageParser$Package, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        android.content.pm.PackageParser$Package r2;
        int i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.pm.PackageParser$Package;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>(r1, r2, i0);

        return;
    }

    static void access$2300(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallArgs, boolean, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        boolean z0;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$InstallArgs;

        z0 := @parameter2: boolean;

        r2 := @parameter3: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs,boolean,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r1, z0, r2);

        return;
    }

    static boolean access$2400(com.android.server.pm.PackageManagerService, java.lang.String, int, android.content.pm.PackageStats)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PackageStats r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: android.content.pm.PackageStats;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean getPackageSizeInfoLI(java.lang.String,int,android.content.pm.PackageStats)>(r1, i0, r2);

        return $z0;
    }

    static long access$2500(com.android.internal.app.IMediaContainerService, java.io.File[]) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService r0;
        java.io.File[] r1;
        long $l0;

        r0 := @parameter0: com.android.internal.app.IMediaContainerService;

        r1 := @parameter1: java.io.File[];

        $l0 = staticinvoke <com.android.server.pm.PackageManagerService: long calculateDirectorySize(com.android.internal.app.IMediaContainerService,java.io.File[])>(r0, r1);

        return $l0;
    }

    static java.io.File access$2600(com.android.server.pm.PackageManagerService, java.io.File)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, $r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.io.File;

        $r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File createTempPackageFile(java.io.File)>(r1);

        return $r2;
    }

    static com.android.server.pm.PackageManagerService$InstallArgs access$2700(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$InstallParams)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallParams r1;
        com.android.server.pm.PackageManagerService$InstallArgs $r2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$InstallParams;

        $r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(com.android.server.pm.PackageManagerService$InstallParams)>(r1);

        return $r2;
    }

    static java.lang.String access$2800(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        return $r1;
    }

    static boolean access$2900(com.android.server.pm.PackageManagerService, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isVerificationEnabled(int)>(i0);

        return $z0;
    }

    static com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.internal.app.IMediaContainerService $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService mContainerService>;

        return $r1;
    }

    static int access$3008(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        i0 = r0.<com.android.server.pm.PackageManagerService: int mPendingVerificationToken>;

        $i1 = i0 + 1;

        r0.<com.android.server.pm.PackageManagerService: int mPendingVerificationToken> = $i1;

        return i0;
    }

    static com.android.internal.app.IMediaContainerService access$302(com.android.server.pm.PackageManagerService, com.android.internal.app.IMediaContainerService)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.internal.app.IMediaContainerService r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.internal.app.IMediaContainerService;

        r0.<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService mContainerService> = r1;

        return r1;
    }

    static java.util.List access$3100(com.android.server.pm.PackageManagerService, android.content.pm.PackageInfoLite, java.util.List, com.android.server.pm.PackageVerificationState)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageInfoLite r1;
        java.util.List r2, $r4;
        com.android.server.pm.PackageVerificationState r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: android.content.pm.PackageInfoLite;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.android.server.pm.PackageVerificationState;

        $r4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List matchVerifiers(android.content.pm.PackageInfoLite,java.util.List,com.android.server.pm.PackageVerificationState)>(r1, r2, r3);

        return $r4;
    }

    static android.content.ComponentName access$3200(com.android.server.pm.PackageManagerService, java.lang.String, java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.List r2;
        android.content.ComponentName $r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName matchComponentForVerifier(java.lang.String,java.util.List)>(r1, r2);

        return $r3;
    }

    static long access$3300(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        long $l0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $l0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: long getVerificationTimeout()>();

        return $l0;
    }

    static com.android.server.pm.PackageManagerService$InstallArgs access$3400(com.android.server.pm.PackageManagerService, android.net.Uri, int, java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        android.net.Uri r1;
        int i0;
        java.lang.String r2, r3;
        com.android.server.pm.PackageManagerService$InstallArgs $r4;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $r4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(android.net.Uri,int,java.lang.String,java.lang.String)>(r1, i0, r2, r3);

        return $r4;
    }

    static void access$3500(com.android.server.pm.PackageManagerService, com.android.server.pm.PackageManagerService$MoveParams, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$MoveParams r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: com.android.server.pm.PackageManagerService$MoveParams;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void processPendingMove(com.android.server.pm.PackageManagerService$MoveParams,int)>(r1, i0);

        return;
    }

    static java.lang.String access$3600(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getNextCodePath(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    static java.io.File access$3700(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppLibInstallDir>;

        return $r1;
    }

    static int access$3800(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        int $i0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $i0 = staticinvoke <com.android.server.pm.PackageManagerService: int copyNativeLibrariesForInternalApp(java.io.File,java.io.File)>(r0, r1);

        return $i0;
    }

    static boolean access$3900(com.android.server.pm.PackageManagerService, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isAsecExternal(java.lang.String)>(r1);

        return $z0;
    }

    static void access$400(com.android.server.pm.PackageManagerService, java.lang.String, boolean, java.util.ArrayList, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        boolean z0;
        java.util.ArrayList r2;
        int i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.ArrayList;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageChangedBroadcast(java.lang.String,boolean,java.util.ArrayList,int)>(r1, z0, r2, i0);

        return;
    }

    static java.lang.String access$4000(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $r1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.lang.String getEncryptKey()>();

        return $r1;
    }

    static int access$4100(com.android.server.pm.PackageManagerService, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int deletePackageX(java.lang.String,int,int)>(r1, i0, i1);

        return $i2;
    }

    static boolean access$4300(com.android.server.pm.PackageManagerService, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearApplicationUserDataLI(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static void access$4400(com.android.server.pm.PackageManagerService, java.lang.String, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void clearExternalStorageDataSync(java.lang.String,int,boolean)>(r1, i0, z0);

        return;
    }

    static boolean access$4500(com.android.server.pm.PackageManagerService, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteApplicationCacheFilesLI(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static void access$4600(com.android.server.pm.PackageManagerService, boolean, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1, z2;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean,boolean)>(z0, z1, z2);

        return;
    }

    static int access$4800(com.android.server.pm.PackageManagerService, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        int $i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: android.content.pm.PackageParser$Package;

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int moveDexFilesLI(android.content.pm.PackageParser$Package)>(r1);

        return $i0;
    }

    static boolean access$500(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r0);

        return $z0;
    }

    static boolean access$600(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r0);

        return $z0;
    }

    static void access$700(com.android.server.pm.PackageManagerService, boolean, boolean, java.util.ArrayList, int[], android.content.IIntentReceiver)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1;
        java.util.ArrayList r1;
        int[] r2;
        android.content.IIntentReceiver r3;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.util.ArrayList;

        r2 := @parameter4: int[];

        r3 := @parameter5: android.content.IIntentReceiver;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(z0, z1, r1, r2, r3);

        return;
    }

    static int access$800(com.android.server.pm.PackageManagerService)
    {
        com.android.server.pm.PackageManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUnknownSourcesSettings()>();

        return $i0;
    }

    static void access$900(com.android.server.pm.PackageManagerService, java.util.Set)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Set r1;

        r0 := @parameter0: com.android.server.pm.PackageManagerService;

        r1 := @parameter1: java.util.Set;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void unloadAllContainers(java.util.Set)>(r1);

        return;
    }

    private void addPackageHoldingPermissions(java.util.ArrayList, com.android.server.pm.PackageSetting, java.lang.String[], boolean[], int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.ArrayList r1;
        com.android.server.pm.PackageSetting r2;
        java.lang.String[] r3, $r10, $r13;
        boolean[] r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        com.android.server.pm.GrantedPermissions r5;
        android.content.pm.PackageInfo r6;
        com.android.server.pm.SharedUserSetting $r7;
        java.lang.String $r8, $r11, $r14;
        android.content.pm.PackageParser$Package $r9, $r12;
        boolean $z1, $z2;
        java.util.HashSet $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: boolean[];

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 = 0;

        $r7 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r7 == null goto label04;

        r5 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label01:
        i3 = 0;

     label02:
        $i6 = lengthof r3;

        if i3 >= $i6 goto label06;

        $r15 = r5.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r14 = r3[i3];

        $z2 = virtualinvoke $r15.<java.util.HashSet: boolean contains(java.lang.Object)>($r14);

        if $z2 == 0 goto label05;

        r4[i3] = 1;

        i2 = i2 + 1;

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        r5 = r2;

        goto label01;

     label05:
        r4[i3] = 0;

        goto label03;

     label06:
        if i2 != 0 goto label07;

        return;

     label07:
        $r9 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r9 == null goto label10;

        $r12 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>($r12, i0, i1);

     label08:
        $i7 = i0 & 4096;

        if $i7 != 0 goto label09;

        $i8 = lengthof r3;

        if i2 != $i8 goto label11;

        r6.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions> = r3;

     label09:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        return;

     label10:
        $r8 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>($r8, i0, i1);

        goto label08;

     label11:
        $r10 = newarray (java.lang.String)[i2];

        r6.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions> = $r10;

        i4 = 0;

        i5 = 0;

     label12:
        $i9 = lengthof r3;

        if i5 >= $i9 goto label09;

        $z1 = r4[i5];

        if $z1 == 0 goto label13;

        $r13 = r6.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        $r11 = r3[i5];

        $r13[i4] = $r11;

        i4 = i4 + 1;

     label13:
        i5 = i5 + 1;

        goto label12;
    }

    private void addPreferredActivityInternal(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1, i2, $i3, $i4, $i6;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        boolean z0;
        java.util.HashMap r4;
        java.lang.Throwable r5, $r24;
        android.content.Context $r6, $r19;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r20, $r21, $r22;
        java.lang.String $r13, $r23;
        com.android.server.pm.Settings $r14, $r18;
        android.util.LogPrinter $r15;
        com.android.server.pm.PreferredActivity $r16;
        com.android.server.pm.PreferredIntentResolver $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        z0 := @parameter4: boolean;

        i1 := @parameter5: int;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>(i2, i1, 1, "add preferred activity");

        $i3 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i3 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot set a preferred activity with no filter actions");

        return;

     label1:
        r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r4;

     label2:
        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i4 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS");

        if $i4 == 0 goto label8;

        $i6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidTargetSdkVersionLockedLPr(int)>(i2);

        if $i6 >= 8 goto label7;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring addPreferredActivity() from uid ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        exitmonitor r4;

     label3:
        return;

     label4:
        $r24 := @caughtexception;

        r5 = $r24;

     label5:
        exitmonitor r4;

     label6:
        throw r5;

     label7:
        $r19 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r19.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

     label8:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding preferred activity ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r13);

        $r15 = new android.util.LogPrinter;

        specialinvoke $r15.<android.util.LogPrinter: void <init>(int,java.lang.String)>(4, "PackageManager");

        virtualinvoke r1.<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>($r15, "  ");

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r17 = virtualinvoke $r14.<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>(i1);

        $r16 = new com.android.server.pm.PreferredActivity;

        specialinvoke $r16.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>(r1, i0, r2, r3, z0);

        virtualinvoke $r17.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>($r16);

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r18.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        exitmonitor r4;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    private int addSharedLibraryLPw(com.android.server.pm.PackageManagerService$SharedLibraryEntry, int, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r1;
        int i0, i1, $i2;
        android.content.pm.PackageParser$Package r2, r3;
        java.lang.String r4, $r5, $r6, $r9, $r12, $r13, $r14, $r15, $r16, $r17;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        java.lang.String[] $r10, $r11, $r18;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$SharedLibraryEntry;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.PackageParser$Package;

        $r5 = r1.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        if $r5 == null goto label2;

        $r18 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries>;

        $r17 = r1.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        $r18[i0] = $r17;

        i0 = i0 + 1;

     label1:
        return i0;

     label2:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = r1.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (android.content.pm.PackageParser$Package) $r8;

        if r2 == null goto label4;

        $r14 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r13 = r1.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label4;

        if r3 == null goto label3;

        $r15 = r3.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label4;

     label3:
        r3 = r2;

     label4:
        if r3 == null goto label1;

        r4 = r3.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries>;

        $r12 = $r11[i1];

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label1;

        i1 = i1 + 1;

        goto label5;

     label6:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries>;

        $r9 = r3.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $r10[i0] = $r9;

        $i2 = i0 + 1;

        return $i2;
    }

    static int[] appendInts(int[], int[])
    {
        int[] r0, r1;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r1 != null goto label2;

     label1:
        return r0;

     label2:
        if r0 != null goto label3;

        return r1;

     label3:
        i0 = lengthof r1;

        i1 = 0;

     label4:
        if i1 >= i0 goto label1;

        $i2 = r1[i1];

        r0 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>(r0, $i2);

        i1 = i1 + 1;

        goto label4;
    }

    static java.lang.String arrayToString(int[])
    {
        int[] r0;
        java.lang.StringBuffer r1, $r2;
        int i0, $i1, $i2;
        java.lang.String $r5;

        r0 := @parameter0: int[];

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        if r0 == null goto label3;

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i2 = r0[i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private void broadcastPackageVerified(int, android.net.Uri, int, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.net.Uri r1;
        android.os.UserHandle r2;
        android.content.Intent r3, $r4;
        android.content.Context $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.UserHandle;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_VERIFIED");

        r3 = $r4;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(r1, "application/vnd.android.package-archive");

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_ID", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_RESULT", i1);

        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r3, r2, "android.permission.PACKAGE_VERIFICATION_AGENT");

        return;
    }

    private static long calculateDirectorySize(com.android.internal.app.IMediaContainerService, java.io.File[]) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService r0;
        java.io.File[] r1;
        long l0, $l3;
        int i1, i2;
        java.io.File $r2;
        java.lang.String $r3;

        r0 := @parameter0: com.android.internal.app.IMediaContainerService;

        r1 := @parameter1: java.io.File[];

        l0 = 0L;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $l3 = interfaceinvoke r0.<com.android.internal.app.IMediaContainerService: long calculateDirectorySize(java.lang.String)>($r3);

        l0 = l0 + $l3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return l0;
    }

    private static void checkGrantRevokePermissions(android.content.pm.PackageParser$Package, com.android.server.pm.BasePermission)
    {
        android.content.pm.PackageParser$Package r0;
        com.android.server.pm.BasePermission r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, z2, $z3;
        java.lang.String $r2, $r11, $r12, $r16, $r22, $r25, $r26, $r29;
        java.util.ArrayList $r3, $r4;
        java.lang.Boolean $r5;
        java.lang.Object $r6;
        java.lang.SecurityException $r7, $r15, $r23;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r24, $r27, $r28;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: com.android.server.pm.BasePermission;

        $r3 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r2 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>($r2);

        if i0 != -1 goto label01;

        $r23 = new java.lang.SecurityException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r26 = r0.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not requested permission ");

        $r25 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r29);

        throw $r23;

     label01:
        $i1 = r1.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i2 = 15 & $i1;

        if $i2 != 0 goto label05;

        z0 = 1;

     label02:
        $i3 = r1.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i4 = 15 & $i3;

        if $i4 != 1 goto label06;

        z1 = 1;

     label03:
        $i5 = r1.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i6 = 32 & $i5;

        if $i6 == 0 goto label07;

        z2 = 1;

     label04:
        if z0 != 0 goto label08;

        if z1 != 0 goto label08;

        if z2 != 0 goto label08;

        $r15 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r16 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a changeable permission type");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label05:
        z0 = 0;

        goto label02;

     label06:
        z1 = 0;

        goto label03;

     label07:
        z2 = 0;

        goto label04;

     label08:
        if z0 != 0 goto label09;

        if z1 == 0 goto label10;

     label09:
        $r4 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissionsRequired>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.Boolean) $r6;

        $z3 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label10;

        $r7 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t change ");

        $r11 = r1.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". It is required by the application");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label10:
        return;
    }

    private com.android.server.pm.BasePermission checkPermissionTreeLP(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r7, $r14, $r16;
        com.android.server.pm.BasePermission r2;
        java.lang.SecurityException $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r15, $r17;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)>(r1);

        if r2 == null goto label2;

        $i0 = r2.<com.android.server.pm.BasePermission: int uid>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        if $i0 != $i2 goto label1;

        return r2;

     label1:
        $r8 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to add to permission tree ");

        $r14 = r2.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by uid ");

        $i4 = r2.<com.android.server.pm.BasePermission: int uid>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label2:
        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission tree found for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    private void checkValidCaller(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2;
        java.lang.SecurityException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if $i2 == i1 goto label1;

        if i0 == 1000 goto label1;

        if i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = new java.lang.SecurityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller uid=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not privileged to communicate with user=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    private android.content.pm.ResolveInfo chooseBestActivity(android.content.Intent, java.lang.String, int, java.util.List, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2, $r26, $r32, $r35;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.List r3;
        boolean z0, $z1, $z2;
        android.content.pm.ResolveInfo r4, r5, r6, r7, $r10, $r12, $r13, $r15, $r38;
        java.lang.Object $r8, $r9, $r11, $r39;
        android.content.pm.ActivityInfo $r14, $r16, $r18, $r20, $r22, $r23, $r25, $r33;
        android.content.pm.ApplicationInfo $r17, $r19, $r21, $r24;
        java.lang.StringBuilder $r27, $r28, $r29, $r30, $r31, $r34, $r36, $r37;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        if r3 == null goto label9;

        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if i2 != 1 goto label1;

        $r39 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r38 = (android.content.pm.ResolveInfo) $r39;

        return $r38;

     label1:
        if i2 <= 1 goto label9;

        $i3 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i4 = 8 & $i3;

        if $i4 == 0 goto label5;

        z0 = 1;

     label2:
        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (android.content.pm.ResolveInfo) $r9;

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        r5 = (android.content.pm.ResolveInfo) $r8;

        if z0 == 0 goto label3;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r26 = $r25.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i13 = r4.<android.content.pm.ResolveInfo: int priority>;

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r33 = r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r32 = $r33.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i14 = r5.<android.content.pm.ResolveInfo: int priority>;

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r35);

     label3:
        $i5 = r4.<android.content.pm.ResolveInfo: int priority>;

        $i6 = r5.<android.content.pm.ResolveInfo: int priority>;

        if $i5 != $i6 goto label4;

        $i7 = r4.<android.content.pm.ResolveInfo: int preferredOrder>;

        $i8 = r5.<android.content.pm.ResolveInfo: int preferredOrder>;

        if $i7 != $i8 goto label4;

        $z1 = r4.<android.content.pm.ResolveInfo: boolean isDefault>;

        $z2 = r5.<android.content.pm.ResolveInfo: boolean isDefault>;

        if $z1 == $z2 goto label6;

     label4:
        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (android.content.pm.ResolveInfo) $r11;

        return $r10;

     label5:
        z0 = 0;

        goto label2;

     label6:
        $i9 = r4.<android.content.pm.ResolveInfo: int priority>;

        r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r1, r2, i0, r3, $i9, 1, 0, z0, i1);

        if r6 == null goto label7;

        return r6;

     label7:
        if i1 == 0 goto label8;

        $r12 = new android.content.pm.ResolveInfo;

        $r15 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        specialinvoke $r12.<android.content.pm.ResolveInfo: void <init>(android.content.pm.ResolveInfo)>($r15);

        r7 = $r12;

        $r14 = new android.content.pm.ActivityInfo;

        $r18 = r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        specialinvoke $r14.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>($r18);

        r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r14;

        $r22 = r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r19 = new android.content.pm.ApplicationInfo;

        $r16 = r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r16.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke $r19.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>($r17);

        $r22.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r19;

        $r23 = r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r23.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r20 = r7.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r21 = $r20.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r21.<android.content.pm.ApplicationInfo: int uid>;

        $i10 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i12);

        $i11 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, $i10);

        $r24.<android.content.pm.ApplicationInfo: int uid> = $i11;

        return r7;

     label8:
        $r13 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        return $r13;

     label9:
        return null;
    }

    static java.lang.String cidFromCodePath(java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, $i1, $i2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i2 = 1 + $i1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);

        return $r2;
    }

    private boolean clearApplicationUserDataLI(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r12, $r21, $r26, $r30;
        int i0, i1, $i2;
        java.util.HashMap r2, $r6, $r28;
        java.lang.Throwable r3, $r35;
        android.content.pm.PackageParser$Package r4, $r34;
        boolean z0;
        com.android.server.pm.PackageSetting r5;
        java.lang.Object $r7, $r29;
        com.android.server.pm.Installer $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r27, $r31, $r32, $r33;
        android.content.pm.ApplicationInfo $r13, $r14, $r16;
        com.android.server.pm.Settings $r25;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label01:
        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r7;

     label03:
        z0 = 0;

        if r4 != null goto label13;

        z0 = 1;

     label04:
        $r25 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r28 = $r25.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r29 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r29;

     label05:
        if r5 == null goto label07;

     label06:
        $r34 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r34 != null goto label12;

     label07:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r30);

        exitmonitor r2;

     label08:
        return 0;

     label09:
        $r35 := @caughtexception;

        r3 = $r35;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        r4 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label13:
        if z0 != 0 goto label18;

        if r4 != null goto label16;

     label14:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r26);

        exitmonitor r2;

     label15:
        return 0;

     label16:
        $r16 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r16 != null goto label18;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r21);

        exitmonitor r2;

     label17:
        return 0;

     label18:
        if r4 == null goto label22;

     label19:
        $r14 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r14 == null goto label22;

        $r13 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i1 = $r13.<android.content.pm.ApplicationInfo: int uid>;

     label20:
        exitmonitor r2;

     label21:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $i2 = virtualinvoke $r8.<com.android.server.pm.Installer: int clearUserData(java.lang.String,int)>(r1, i0);

        if $i2 >= 0 goto label23;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove cache files for package: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r12);

        return 0;

     label22:
        i1 = -1;

        goto label20;

     label23:
        staticinvoke <com.android.server.pm.PackageManagerService: void removeKeystoreDataIfNeeded(int,int)>(i0, i1);

        return 1;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label19 to label20 with label09;
        catch java.lang.Throwable from label20 to label21 with label09;
    }

    private static void clearDirectory(com.android.internal.app.IMediaContainerService, java.io.File[])
    {
        com.android.internal.app.IMediaContainerService r0;
        java.io.File[] r1;
        int i0, i1;
        java.io.File r2;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @parameter0: com.android.internal.app.IMediaContainerService;

        r1 := @parameter1: java.io.File[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

     label2:
        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke r0.<com.android.internal.app.IMediaContainerService: void clearDirectory(java.lang.String)>($r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void clearExternalStorageDataSync(java.lang.String, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.content.Intent r3, r32;
        int[] r4, r6;
        com.android.server.pm.PackageManagerService$ClearStorageConnection r5, r33;
        java.lang.Throwable r7, r8, $r29, $r31;
        long l4, l5, l6, $l7;
        com.android.internal.app.IMediaContainerService r9, r11, $r19, $r22, $r24;
        android.os.Environment$UserEnvironment r10, r34;
        android.content.ComponentName $r13;
        android.content.Context $r16, $r18, $r27, $r30;
        android.os.UserHandle $r17;
        java.io.File[] $r20, $r23, $r25;
        com.android.server.pm.UserManagerService $r26;
        byte $b8;
        java.lang.InterruptedException $r28;
        android.content.ServiceConnection r35, r36, r37, r38;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z2 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        if $z2 == 0 goto label03;

        z1 = 1;

     label01:
        if z1 != 0 goto label07;

     label02:
        return;

     label03:
        r2 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z3 != 0 goto label04;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted_ro");

        if $z5 == 0 goto label06;

     label04:
        z1 = 1;

     label05:
        goto label01;

     label06:
        z1 = 0;

        goto label05;

     label07:
        r32 = new android.content.Intent;

        specialinvoke r32.<android.content.Intent: void <init>()>();

        $r13 = <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT>;

        r3 = virtualinvoke r32.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r13);

        if i0 != -1 goto label19;

        $r26 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r4 = virtualinvoke $r26.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

     label08:
        r33 = new com.android.server.pm.PackageManagerService$ClearStorageConnection;

        specialinvoke r33.<com.android.server.pm.PackageManagerService$ClearStorageConnection: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>(r0, null);

        r5 = r33;

        $r18 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r17 = <android.os.UserHandle: android.os.UserHandle OWNER>;

        r35 = (android.content.ServiceConnection) r5;

        $z4 = virtualinvoke $r18.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r3, r35, 1, $r17);

        if $z4 == 0 goto label02;

        r6 = r4;

     label09:
        i1 = lengthof r6;

     label10:
        i2 = 0;

     label11:
        if i2 >= i1 goto label31;

     label12:
        i3 = r6[i2];

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = 5000L + $l7;

        entermonitor r5;

     label13:
        l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label14:
        r9 = r5.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

     label15:
        if r9 != null goto label20;

        $b8 = l5 cmp l4;

        if $b8 >= 0 goto label20;

        l6 = l4 - l5;

     label16:
        virtualinvoke r5.<java.lang.Object: void wait(long)>(l6);

     label17:
        goto label14;

     label18:
        $r28 := @caughtexception;

        goto label14;

     label19:
        r4 = newarray (int)[1];

        r4[0] = i0;

        goto label08;

     label20:
        exitmonitor r5;

     label21:
        r11 = r5.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

     label22:
        if r11 != null goto label27;

        $r27 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        r36 = (android.content.ServiceConnection) r5;

        virtualinvoke $r27.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r36);

        return;

     label23:
        $r29 := @caughtexception;

        r8 = $r29;

     label24:
        exitmonitor r5;

     label25:
        throw r8;

     label26:
        $r31 := @caughtexception;

        r7 = $r31;

        $r30 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        r37 = (android.content.ServiceConnection) r5;

        virtualinvoke $r30.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r37);

        throw r7;

     label27:
        r34 = new android.os.Environment$UserEnvironment;

        specialinvoke r34.<android.os.Environment$UserEnvironment: void <init>(int)>(i3);

        r10 = r34;

        $r19 = r5.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        $r20 = virtualinvoke r10.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)>(r1);

        staticinvoke <com.android.server.pm.PackageManagerService: void clearDirectory(com.android.internal.app.IMediaContainerService,java.io.File[])>($r19, $r20);

     label28:
        if z0 == 0 goto label30;

     label29:
        $r24 = r5.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        $r25 = virtualinvoke r10.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)>(r1);

        staticinvoke <com.android.server.pm.PackageManagerService: void clearDirectory(com.android.internal.app.IMediaContainerService,java.io.File[])>($r24, $r25);

        $r22 = r5.<com.android.server.pm.PackageManagerService$ClearStorageConnection: com.android.internal.app.IMediaContainerService mContainerService>;

        $r23 = virtualinvoke r10.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)>(r1);

        staticinvoke <com.android.server.pm.PackageManagerService: void clearDirectory(com.android.internal.app.IMediaContainerService,java.io.File[])>($r22, $r23);

     label30:
        i2 = i2 + 1;

        goto label11;

     label31:
        $r16 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        r38 = (android.content.ServiceConnection) r5;

        virtualinvoke $r16.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r38);

        return;

        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.InterruptedException from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
        catch java.lang.Throwable from label29 to label30 with label26;
    }

    private boolean collectCertificatesLI(android.content.pm.PackageParser, com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package, java.io.File, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser r1;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.PackageParser$Package r3;
        java.io.File r4, $r10;
        int i0, $i2, $i7;
        java.lang.StringBuilder $r5, $r7, $r8, $r13, $r15, $r16, $r17;
        java.lang.String $r6, $r9, $r14, $r18;
        boolean $z0, $z1;
        long $l3, $l5;
        byte $b4;
        android.content.pm.Signature[] $r11, $r19, $r21;
        com.android.server.pm.PackageSignatures $r12, $r20, $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        r3 := @parameter2: android.content.pm.PackageParser$Package;

        r4 := @parameter3: java.io.File;

        i0 := @parameter4: int;

        if r2 == null goto label4;

        $r10 = r2.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z1 = virtualinvoke $r10.<java.io.File: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        $l3 = r2.<com.android.server.pm.PackageSetting: long timeStamp>;

        $l5 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $b4 = $l3 cmp $l5;

        if $b4 != 0 goto label4;

        $r12 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r11 = $r12.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r11 == null goto label2;

        $r20 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r19 = $r20.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $i7 = lengthof $r19;

        if $i7 == 0 goto label2;

        $r22 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r21 = $r22.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        r3.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures> = $r21;

     label1:
        return 1;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PackageSetting for ");

        $r14 = r2.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing signatures.  Collecting certs again to recover them.");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r18);

     label3:
        $z0 = virtualinvoke r1.<android.content.pm.PackageParser: boolean collectCertificates(android.content.pm.PackageParser$Package,int)>(r3, i0);

        if $z0 != 0 goto label1;

        $i2 = virtualinvoke r1.<android.content.pm.PackageParser: int getParseError()>();

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = $i2;

        return 0;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<java.io.File: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed; collecting certs");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r9);

        goto label3;
    }

    static boolean comparePermissionInfos(android.content.pm.PermissionInfo, android.content.pm.PermissionInfo)
    {
        android.content.pm.PermissionInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r2, $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r4, $r5;

        r0 := @parameter0: android.content.pm.PermissionInfo;

        r1 := @parameter1: android.content.pm.PermissionInfo;

        $i1 = r0.<android.content.pm.PermissionInfo: int icon>;

        $i0 = r1.<android.content.pm.PermissionInfo: int icon>;

        if $i1 == $i0 goto label2;

     label1:
        return 0;

     label2:
        $i3 = r0.<android.content.pm.PermissionInfo: int logo>;

        $i2 = r1.<android.content.pm.PermissionInfo: int logo>;

        if $i3 != $i2 goto label1;

        $i5 = r0.<android.content.pm.PermissionInfo: int protectionLevel>;

        $i4 = r1.<android.content.pm.PermissionInfo: int protectionLevel>;

        if $i5 != $i4 goto label1;

        $r3 = r0.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r2 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r4 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r4);

        if $z1 == 0 goto label1;

        $r7 = r0.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r6 = r1.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>($r7, $r6);

        if $z2 == 0 goto label1;

        return 1;
    }

    static int compareSignatures(android.content.pm.Signature[], android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0, r1;
        java.util.HashSet r2, r3, $r4, $r5;
        int i0, i1, i2, i3;
        boolean $z0;
        android.content.pm.Signature $r6, $r7;

        r0 := @parameter0: android.content.pm.Signature[];

        r1 := @parameter1: android.content.pm.Signature[];

        if r0 != null goto label2;

        if r1 != null goto label1;

        return 1;

     label1:
        return -1;

     label2:
        if r1 != null goto label3;

        return -2;

     label3:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        i0 = lengthof r0;

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        $r7 = r0[i1];

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label4;

     label5:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r3 = $r5;

        i2 = lengthof r1;

        i3 = 0;

     label6:
        if i3 >= i2 goto label7;

        $r6 = r1[i3];

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label6;

     label7:
        $z0 = virtualinvoke r2.<java.util.HashSet: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label8;

        return 0;

     label8:
        return -3;
    }

    static boolean compareStrings(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        boolean z0, $z1;
        java.lang.Class r2, r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        if r0 != null goto label2;

        z0 = 0;

        if r1 != null goto label1;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        if r1 == null goto label1;

        r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        z0 = 0;

        if r2 != r3 goto label1;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    private static int copyNativeLibrariesForInternalApp(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        libcore.io.ErrnoException r2, $r19;
        boolean $z0, $z1, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r5, $r7, $r14, $r16, $r18, $r23, r24, r26, r28;
        java.lang.String $r6, $r8, $r10, $r13, $r15, $r21, $r22;
        libcore.io.Os $r9;
        java.io.IOException r25, r27, r29;
        java.lang.Throwable r30;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label4;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        $z3 = virtualinvoke r1.<java.io.File: boolean mkdir()>();

        if $z3 != 0 goto label1;

        r25 = new java.io.IOException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ");

        $r13 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw r25;

     label1:
        $r9 = <libcore.io.Libcore: libcore.io.Os os>;

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $i3 = <libcore.io.OsConstants: int S_IRWXU>;

        $i1 = <libcore.io.OsConstants: int S_IRGRP>;

        $i5 = $i3 | $i1;

        $i2 = <libcore.io.OsConstants: int S_IXGRP>;

        $i7 = $i5 | $i2;

        $i4 = <libcore.io.OsConstants: int S_IROTH>;

        $i9 = $i7 | $i4;

        $i6 = <libcore.io.OsConstants: int S_IXOTH>;

        $i8 = $i9 | $i6;

        interfaceinvoke $r9.<libcore.io.Os: void chmod(java.lang.String,int)>($r10, $i8);

     label2:
        $i0 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesIfNeededLI(java.io.File,java.io.File)>(r0, r1);

        return $i0;

     label3:
        $r19 := @caughtexception;

        r2 = $r19;

        r27 = new java.io.IOException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot chmod native library directory ");

        $r22 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r30 = (java.lang.Throwable) r2;

        specialinvoke r27.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r30);

        throw r27;

     label4:
        $z1 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>(r1);

        if $z1 != 0 goto label2;

        r29 = new java.io.IOException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set SELinux context for ");

        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw r29;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    private int createDataDirsLI(java.lang.String, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4, $i5;
        int[] r3;
        com.android.server.pm.UserManagerService $r4;
        com.android.server.pm.Installer $r5, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r3 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i1 = virtualinvoke $r5.<com.android.server.pm.Installer: int install(java.lang.String,int,int,java.lang.String)>(r1, i0, i0, r2);

        if i1 >= 0 goto label1;

        return i1;

     label1:
        i2 = lengthof r3;

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        i4 = r3[i3];

        if i4 == 0 goto label3;

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i4, i0);

        i1 = virtualinvoke $r6.<com.android.server.pm.Installer: int createUserData(java.lang.String,int,int)>(r1, $i5, i4);

        if i1 >= 0 goto label3;

        return i1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return i1;
    }

    private com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.lang.String r1, r2, r3, $r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.pm.PackageManagerService$FileInstallArgs $r4;
        com.android.server.pm.PackageManagerService$AsecInstallArgs $r5;
        java.io.File $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>(i0);

        if $z1 == 0 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label4;

        $r5 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>(i0);

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installForwardLocked(int)>(i0);

        specialinvoke $r5.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r0, r1, r2, r3, $z3, $z4);

        return $r5;

     label2:
        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installForwardLocked(int)>(i0);

        if $z2 == 0 goto label3;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        if $z5 != 0 goto label3;

        z0 = 1;

        goto label1;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $r4 = new com.android.server.pm.PackageManagerService$FileInstallArgs;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2, r3);

        return $r4;
    }

    private com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(android.net.Uri, int, java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        android.net.Uri r1;
        int i0;
        java.lang.String r2, r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.pm.PackageManagerService$AsecInstallArgs $r4;
        com.android.server.pm.PackageManagerService$FileInstallArgs $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>(i0);

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installForwardLocked(int)>(i0);

        if $z3 == 0 goto label2;

     label1:
        $r4 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        $r6 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getNextCodePath(java.lang.String,java.lang.String,java.lang.String)>($r5, r2, "/pkg.apk");

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>(i0);

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installForwardLocked(int)>(i0);

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,android.net.Uri,java.lang.String,boolean,boolean)>(r0, r1, $r6, $z1, $z2);

        return $r4;

     label2:
        $r7 = new com.android.server.pm.PackageManagerService$FileInstallArgs;

        specialinvoke $r7.<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,android.net.Uri,java.lang.String,java.lang.String)>(r0, r1, r2, r3);

        return $r7;
    }

    private com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(com.android.server.pm.PackageManagerService$InstallParams)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallParams r1;
        int $i0;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$AsecInstallArgs $r2;
        com.android.server.pm.PackageManagerService$FileInstallArgs $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$InstallParams;

        $i0 = r1.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean installOnSd(int)>($i0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallParams: boolean isForwardLocked()>();

        if $z1 == 0 goto label2;

     label1:
        $r2 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>(r0, r1);

        return $r2;

     label2:
        $r3 = new com.android.server.pm.PackageManagerService$FileInstallArgs;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>(r0, r1);

        return $r3;
    }

    private java.io.File createTempPackageFile(java.io.File)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, r3, r4;
        boolean z0;
        java.lang.String $r6;
        java.io.IOException $r7, $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.File;

     label1:
        r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("vmdl", ".tmp", r1);

     label2:
        r4 = r3;

     label3:
        $r6 = virtualinvoke r4.<java.io.File: java.lang.String getCanonicalPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r6, 384, -1, -1);

        z0 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>(r4);

     label4:
        if z0 != 0 goto label5;

        r4 = null;

     label5:
        return r4;

     label6:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t create temp file for downloaded package file.");

        return null;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Trouble getting the canoncical path for a temp file.");

        return null;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label7;
    }

    private boolean deleteApplicationCacheFilesLI(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r13, $r19, $r24;
        int i0, $i1;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r25;
        android.content.pm.PackageParser$Package r4;
        java.lang.Object $r6;
        android.content.pm.ApplicationInfo $r7;
        com.android.server.pm.Installer $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label1:
        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label2:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r6;

        exitmonitor r2;

     label3:
        if r4 != null goto label7;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r24);

        return 0;

     label4:
        $r25 := @caughtexception;

        r3 = $r25;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r7 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r7 != null goto label8;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r19);

        return 0;

     label8:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $i1 = virtualinvoke $r8.<com.android.server.pm.Installer: int deleteCacheFiles(java.lang.String,int)>(r1, i0);

        if $i1 >= 0 goto label9;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t remove cache files for package: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r13);

        return 0;

     label9:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private boolean deleteInstalledPackageLI(com.android.server.pm.PackageSetting, boolean, int, int[], boolean[], com.android.server.pm.PackageManagerService$PackageRemovedInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        boolean z0, z1;
        int i0, $i1, $i2;
        int[] r2;
        boolean[] r3;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r4;
        java.lang.String $r5, $r6, $r7;
        com.android.server.pm.PackageManagerService$InstallArgs $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: int[];

        r3 := @parameter4: boolean[];

        r4 := @parameter5: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        z1 := @parameter6: boolean;

        if r4 == null goto label1;

        $i2 = r1.<com.android.server.pm.PackageSetting: int appId>;

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid> = $i2;

     label1:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageDataLI(com.android.server.pm.PackageSetting,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,int,boolean)>(r1, r2, r3, r4, i0, z1);

        if z0 == 0 goto label2;

        if r4 == null goto label2;

        $i1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)>(r1);

        $r7 = r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r6 = r1.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        $r8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(int,java.lang.String,java.lang.String,java.lang.String)>($i1, $r7, $r6, $r5);

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args> = $r8;

     label2:
        return 1;
    }

    private boolean deletePackageLI(java.lang.String, android.os.UserHandle, boolean, int[], boolean[], int, com.android.server.pm.PackageManagerService$PackageRemovedInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r22;
        android.os.UserHandle r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int[] r3, $r15, $r17;
        boolean[] r4;
        int i0, i1, i2, $i3, $i5, $i6, $i7, $i8;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r5;
        java.util.HashMap r6, $r11;
        java.lang.Throwable r7, $r25;
        com.android.server.pm.PackageSetting r8;
        com.android.server.pm.Settings $r9, $r13, $r18, $r20;
        java.lang.Object $r10;
        com.android.server.pm.KeySetManager $r12;
        com.android.server.pm.Installer $r14;
        com.android.server.pm.UserManagerService $r16;
        java.lang.StringBuilder $r19, $r21, $r23, $r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        z0 := @parameter2: boolean;

        r3 := @parameter3: int[];

        r4 := @parameter4: boolean[];

        i0 := @parameter5: int;

        r5 := @parameter6: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        z1 := @parameter7: boolean;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

        return 0;

     label01:
        i1 = -1;

        i2 = -1;

        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label02:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = $r9.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (com.android.server.pm.PackageSetting) $r10;

     label03:
        if r8 != null goto label09;

     label04:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r22);

        exitmonitor r6;

     label05:
        return 0;

     label06:
        $r25 := @caughtexception;

        r7 = $r25;

     label07:
        exitmonitor r6;

     label08:
        throw r7;

     label09:
        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r8);

        if $z2 == 0 goto label11;

     label10:
        $i8 = i0 & 4;

        if $i8 == 0 goto label13;

     label11:
        if r2 == null goto label13;

     label12:
        $i5 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        if $i5 == -1 goto label13;

        $i6 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r8.<com.android.server.pm.PackageSetting: void setUserState(int,int,boolean,boolean,boolean,boolean,java.lang.String,java.util.HashSet,java.util.HashSet)>($i6, 0, 0, 1, 1, 0, null, null, null);

        $z6 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r8);

        if $z6 != 0 goto label18;

        $r16 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r17 = virtualinvoke $r16.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $z7 = virtualinvoke r8.<com.android.server.pm.PackageSetting: boolean isAnyInstalled(int[])>($r17);

        if $z7 == 0 goto label16;

        i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        i2 = r8.<com.android.server.pm.PackageSetting: int appId>;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

     label13:
        exitmonitor r6;

     label14:
        if i1 < 0 goto label20;

        if r5 == null goto label15;

        r5.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r1;

        r5.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId> = i2;

        $r15 = newarray (int)[1];

        $r15[0] = i1;

        r5.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int[] removedUsers> = $r15;

     label15:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r14.<com.android.server.pm.Installer: int clearUserData(java.lang.String,int)>(r1, i1);

        staticinvoke <com.android.server.pm.PackageManagerService: void removeKeystoreDataIfNeeded(int,int)>(i1, i2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void schedulePackageCleaning(java.lang.String,int,boolean)>(r1, i1, 0);

        return 1;

     label16:
        $i7 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r8.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, $i7);

     label17:
        goto label13;

     label18:
        i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        i2 = r8.<com.android.server.pm.PackageSetting: int appId>;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r18.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

     label19:
        goto label13;

     label20:
        goto label21;

     label21:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r13.<com.android.server.pm.Settings: com.android.server.pm.KeySetManager mKeySetManager>;

        virtualinvoke $r12.<com.android.server.pm.KeySetManager: void removeAppKeySetData(java.lang.String)>(r1);

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r8);

        if $z3 == 0 goto label22;

        $z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteSystemPackageLI(com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, r3, r4, i0, r5, z1);

        return $z4;

     label22:
        $i3 = r8.<com.android.server.pm.PackageSetting: int appId>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>(r1, $i3, "uninstall pkg");

        $z5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteInstalledPackageLI(com.android.server.pm.PackageSetting,boolean,int,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, z0, i0, r3, r4, r5, z1);

        return $z5;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label18 to label19 with label06;
    }

    private int deletePackageX(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r28;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r2, $r15;
        java.util.HashMap r3, $r16, $r25;
        java.lang.Throwable r4, r10, r13, $r31, $r32, $r33;
        com.android.server.pm.PackageSetting r5;
        int[] r6;
        boolean[] r7;
        java.lang.Object r8, r11, r12, $r19;
        android.os.UserHandle r9, $r20;
        boolean z0, z1, z2, z3, $z4;
        android.os.Bundle r14, $r23;
        com.android.server.pm.Settings $r17;
        com.android.server.pm.UserManagerService $r18;
        com.android.server.pm.PackageManagerService$InstallArgs $r21, $r24;
        java.lang.Runtime $r22;
        java.lang.StringBuilder $r26, $r27, $r29, $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r15 = new com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r15.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>();

        r2 = $r15;

        $z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdmin(java.lang.String,int)>(r1, i0);

        if $z4 == 0 goto label01;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not removing package ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": has active device admin");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        return -2;

     label01:
        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label02:
        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r19 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r19;

        $r18 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r6 = virtualinvoke $r18.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $i5 = lengthof r6;

        r7 = newarray (boolean)[$i5];

     label03:
        i2 = 0;

     label04:
        i3 = lengthof r6;

     label05:
        if i2 >= i3 goto label09;

        if r5 == null goto label35;

     label06:
        $i8 = r6[i2];

        z3 = virtualinvoke r5.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i8);

     label07:
        r7[i2] = z3;

     label08:
        i2 = i2 + 1;

        goto label04;

     label09:
        exitmonitor r3;

     label10:
        r8 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r8;

        $i7 = i1 & 2;

        if $i7 == 0 goto label25;

     label11:
        r9 = <android.os.UserHandle: android.os.UserHandle ALL>;

     label12:
        $i6 = i1 | 65536;

        z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r1, r9, 1, r6, r7, $i6, r2, 1);

        z2 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: boolean isRemovedPackageSystemUpdate>;

     label13:
        z1 = 0;

        if z0 == 0 goto label16;

        z1 = 0;

        if z2 != 0 goto label16;

     label14:
        $r25 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        r12 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

     label15:
        z1 = 0;

        if r12 != null goto label16;

        z1 = 1;

     label16:
        exitmonitor r8;

     label17:
        if z0 == 0 goto label19;

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)>(1, z2, z1);

        if z2 == 0 goto label19;

        $r23 = new android.os.Bundle;

        specialinvoke $r23.<android.os.Bundle: void <init>(int)>(1);

        r14 = $r23;

        $i9 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId>;

        if $i9 < 0 goto label30;

        i4 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId>;

     label18:
        virtualinvoke r14.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", i4);

        virtualinvoke r14.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", 1);

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_ADDED", r1, r14, null, null, null);

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_REPLACED", r1, r14, null, null, null);

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.MY_PACKAGE_REPLACED", null, null, r1, null, null);

     label19:
        $r22 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r22.<java.lang.Runtime: void gc()>();

        $r21 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args>;

        if $r21 == null goto label21;

        r11 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r11;

     label20:
        $r24 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args>;

        virtualinvoke $r24.<com.android.server.pm.PackageManagerService$InstallArgs: boolean doPostDeleteLI(boolean)>(1);

        exitmonitor r11;

     label21:
        if z0 == 0 goto label34;

        return 1;

     label22:
        $r32 := @caughtexception;

        r4 = $r32;

     label23:
        exitmonitor r3;

     label24:
        throw r4;

     label25:
        $r20 = new android.os.UserHandle;

        specialinvoke $r20.<android.os.UserHandle: void <init>(int)>(i0);

        r9 = $r20;

     label26:
        goto label12;

     label27:
        $r31 := @caughtexception;

        r10 = $r31;

     label28:
        exitmonitor r8;

     label29:
        throw r10;

     label30:
        i4 = r2.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid>;

        goto label18;

     label31:
        $r33 := @caughtexception;

        r13 = $r33;

     label32:
        exitmonitor r11;

     label33:
        throw r13;

     label34:
        return -1;

     label35:
        z3 = 0;

        goto label07;

        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    private boolean deleteSystemPackageLI(com.android.server.pm.PackageSetting, int[], boolean[], int, com.android.server.pm.PackageManagerService$PackageRemovedInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1, r7, r13;
        int[] r2;
        boolean[] r3;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r4;
        boolean z0, z1, $z2, $z4, $z5;
        java.util.HashMap r5, r8, r12, $r24;
        java.lang.Throwable r6, r9, r11, $r38, $r42, $r43;
        android.content.pm.PackageParser$Package r10;
        short s2;
        java.lang.String $r14, $r16, $r17, $r22, $r23, $r33, $r35, $r37, $r40;
        com.android.server.pm.Settings $r15, $r18, $r25, $r26, $r27;
        java.io.File $r20, $r21;
        java.lang.Object $r28;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r34, $r36, $r39, $r41;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: int[];

        r3 := @parameter2: boolean[];

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        z0 := @parameter5: boolean;

        if r2 == null goto label04;

        if r3 == null goto label04;

        z1 = 1;

     label01:
        r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r5;

     label02:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r7 = virtualinvoke $r15.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r14);

        exitmonitor r5;

     label03:
        if r7 != null goto label08;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to delete unknown system package ");

        $r40 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r37 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r37);

        return 0;

     label04:
        z1 = 0;

        goto label01;

     label05:
        $r42 := @caughtexception;

        r6 = $r42;

     label06:
        exitmonitor r5;

     label07:
        throw r6;

     label08:
        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: boolean isRemovedPackageSystemUpdate> = 1;

        $i5 = r7.<com.android.server.pm.PackageSetting: int versionCode>;

        $i4 = r1.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i5 >= $i4 goto label10;

        i1 = i0 & -2;

     label09:
        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deleteInstalledPackageLI(com.android.server.pm.PackageSetting,boolean,int,int[],boolean[],com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r1, 1, i1, r2, r3, r4, z0);

        if $z2 != 0 goto label11;

        return 0;

     label10:
        i1 = i0 | 1;

        goto label09;

     label11:
        r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r8;

     label12:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r18.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>($r16);

        $r17 = r1.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        staticinvoke <com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesLI(java.lang.String)>($r17);

        exitmonitor r8;

     label13:
        s2 = 5;

        $r21 = r7.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>($r21);

        if $z4 == 0 goto label14;

        s2 = 133;

     label14:
        $r20 = r7.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        r10 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>($r20, s2, 33, 0L, null);

        if r10 != null goto label18;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to restore system package:");

        $r33 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with error:");

        $i8 = r0.<com.android.server.pm.PackageManagerService: int mLastScanError>;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r35);

        return 0;

     label15:
        $r38 := @caughtexception;

        r9 = $r38;

     label16:
        exitmonitor r8;

     label17:
        throw r9;

     label18:
        r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r12;

     label19:
        $r22 = r10.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r22, r10, 3);

     label20:
        if z1 == 0 goto label26;

     label21:
        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r24 = $r26.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r23 = r10.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r28 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);

        r13 = (com.android.server.pm.PackageSetting) $r28;

     label22:
        i3 = 0;

     label23:
        $i7 = lengthof r2;

        if i3 >= $i7 goto label25;

        $z5 = r3[i3];

        $i6 = r2[i3];

        virtualinvoke r13.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z5, $i6);

     label24:
        i3 = i3 + 1;

        goto label23;

     label25:
        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r27.<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>();

     label26:
        if z0 == 0 goto label28;

     label27:
        $r25 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r25.<com.android.server.pm.Settings: void writeLPr()>();

     label28:
        exitmonitor r12;

     label29:
        return 1;

     label30:
        $r43 := @caughtexception;

        r11 = $r43;

     label31:
        exitmonitor r12;

     label32:
        throw r11;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    private void deleteTempPackageFiles()
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$6 r1, $r2;
        java.io.File $r3, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r2 = new com.android.server.pm.PackageManagerService$6;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$6: void <init>(com.android.server.pm.PackageManagerService)>(r0);

        r1 = $r2;

        $r3 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppInstallDir>;

        staticinvoke <com.android.server.pm.PackageManagerService: void deleteTempPackageFilesInDirectory(java.io.File,java.io.FilenameFilter)>($r3, r1);

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        staticinvoke <com.android.server.pm.PackageManagerService: void deleteTempPackageFilesInDirectory(java.io.File,java.io.FilenameFilter)>($r4, r1);

        return;
    }

    private static final void deleteTempPackageFilesInDirectory(java.io.File, java.io.FilenameFilter)
    {
        java.io.File r0, $r3;
        java.io.FilenameFilter r1;
        java.lang.String[] r2;
        int i0, $i1;
        java.lang.String $r4;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.FilenameFilter;

        r2 = virtualinvoke r0.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>(r1);

        if r2 != null goto label2;

     label1:
        return;

     label2:
        i0 = 0;

     label3:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label1;

        $r3 = new java.io.File;

        $r4 = r2[i0];

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r4);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        i0 = i0 + 1;

        goto label3;
    }

    private void enforceCrossUserPermission(int, int, boolean, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2;
        boolean z0;
        java.lang.String r1, $r9;
        android.content.Context $r3, $r4, $r11;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        if i1 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid userId ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if i1 != $i2 goto label3;

     label2:
        return;

     label3:
        if i0 == 1000 goto label2;

        if i0 == 0 goto label2;

        if z0 == 0 goto label4;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", r1);

        return;

     label4:
        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", r1);

     label5:
        return;

     label6:
        $r10 := @caughtexception;

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS", r1);

        return;

        catch java.lang.SecurityException from label4 to label5 with label6;
    }

    private static final void enforceSystemOrRoot(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        java.lang.SecurityException $r1;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label1;

        if i0 == 0 goto label1;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(r0);

        throw $r1;

     label1:
        return;
    }

    private com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r8, $r9, $r10;
        java.util.Iterator r2;
        com.android.server.pm.BasePermission r3;
        com.android.server.pm.Settings $r4;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        int $i0, $i1, $i3;
        char $c2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r5 = $r4.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.BasePermission) $r7;

        $r8 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r9 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label1;

        $r10 = r3.<com.android.server.pm.BasePermission: java.lang.String name>;

        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if $c2 != 46 goto label1;

        return r3;

     label2:
        return null;
    }

    private static java.lang.String fixProcessName(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        return r0;

     label1:
        return r1;
    }

    private android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLPw(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.PackageInfo r3;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        android.content.pm.PackageParser$Package $r8, $r9;
        android.content.pm.PackageUserState $r10;
        android.content.pm.ApplicationInfo $r11, $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r7;

        if r2 == null goto label1;

        $r8 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r8 != null goto label3;

        r3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>(r1, i0, i1);

        if r3 == null goto label1;

        $r12 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        return $r12;

     label3:
        $r9 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r10 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r11 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r9, i0, $r10, i1);

        return $r11;
    }

    private android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r13, $r15, $r18, $r19;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.pm.PackageSetting r2;
        android.content.pm.PackageParser$Package r3, $r9;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        android.content.pm.PackageInfo $r8;
        android.content.pm.ApplicationInfo $r10, $r11, $r12, $r14, $r17, $r20;
        java.io.File $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r6 = $r5.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.pm.PackageSetting) $r7;

        if r2 == null goto label1;

        r3 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if r3 != null goto label3;

        $i2 = i0 & 8192;

        if $i2 == 0 goto label1;

        $r9 = new android.content.pm.PackageParser$Package;

        specialinvoke $r9.<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>(r1);

        r3 = $r9;

        $r10 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r10.<android.content.pm.ApplicationInfo: java.lang.String packageName> = r1;

        $r11 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = r2.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i4 = 16777216 | $i3;

        $r11.<android.content.pm.ApplicationInfo: int flags> = $i4;

        $r12 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = r2.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r12.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir> = $r13;

        $r14 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r15 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r14.<android.content.pm.ApplicationInfo: java.lang.String sourceDir> = $r15;

        $r17 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r16 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getDataPathForPackage(java.lang.String,int)>(r1, 0);

        $r19 = virtualinvoke $r16.<java.io.File: java.lang.String getPath()>();

        $r17.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r19;

        $r20 = r3.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r18 = r2.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        $r20.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r18;

     label3:
        $r8 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>(r3, i0, i1);

        return $r8;
    }

    static final android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission, int)
    {
        com.android.server.pm.BasePermission r0;
        int i0, $i1;
        android.content.pm.PermissionInfo r1, $r3, $r8;
        android.content.pm.PackageParser$Permission $r2, $r7;
        java.lang.String $r4, $r5, $r6;

        r0 := @parameter0: com.android.server.pm.BasePermission;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r2 == null goto label1;

        $r7 = r0.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r8 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r7, i0);

        return $r8;

     label1:
        $r3 = new android.content.pm.PermissionInfo;

        specialinvoke $r3.<android.content.pm.PermissionInfo: void <init>()>();

        r1 = $r3;

        $r4 = r0.<com.android.server.pm.BasePermission: java.lang.String name>;

        r1.<android.content.pm.PermissionInfo: java.lang.String name> = $r4;

        $r5 = r0.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        r1.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r5;

        $r6 = r0.<com.android.server.pm.BasePermission: java.lang.String name>;

        r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel> = $r6;

        $i1 = r0.<com.android.server.pm.BasePermission: int protectionLevel>;

        r1.<android.content.pm.PermissionInfo: int protectionLevel> = $i1;

        return r1;
    }

    static java.lang.String getApkName(java.lang.String)
    {
        java.lang.String r0, $r1, $r6;
        int i0, i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if i1 != -1 goto label3;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        $i2 = i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, i1);

        return $r1;

     label3:
        if i1 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Invalid code path, ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Not a valid apk name");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r6);

        return null;
    }

    static java.lang.String getAsecPackageName(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("-");

        if i0 != -1 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    private java.io.File getDataPathForPackage(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r5, $r7, $r10, $r13;
        int i0;
        java.io.File $r2, $r4, $r14, $r15;
        java.lang.StringBuilder $r3, $r6, $r8, $r9, $r11, $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r14 = new java.io.File;

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppDataDir>;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, r1);

        return $r14;

     label1:
        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.pm.PackageManagerService: java.io.File mUserAppDataDir>;

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = <java.io.File: java.lang.String separator>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = <java.io.File: java.lang.String separator>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r13);

        return $r2;
    }

    private int getDefaultVerificationResponse()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "verifier_default_response", 1);

        return $i0;
    }

    private java.lang.String getEncryptKey()
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.IOException r1, $r6;
        java.security.NoSuchAlgorithmException r2, $r12;
        java.lang.String r3, $r10, $r14;
        android.security.SystemKeyStore $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r13, $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

     label1:
        $r4 = staticinvoke <android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>();

        r3 = virtualinvoke $r4.<android.security.SystemKeyStore: java.lang.String retrieveKeyHexString(java.lang.String)>("AppsOnSD");

     label2:
        if r3 != null goto label7;

     label3:
        $r5 = staticinvoke <android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>();

        r3 = virtualinvoke $r5.<android.security.SystemKeyStore: java.lang.String generateNewKeyHexString(int,java.lang.String,java.lang.String)>(128, "AES", "AppsOnSD");

     label4:
        if r3 != null goto label7;

     label5:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Failed to create encryption keys");

     label6:
        r3 = null;

     label7:
        return r3;

     label8:
        $r12 := @caughtexception;

        r2 = $r12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create encryption keys with exception: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r14);

        return null;

     label9:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve encryption keys with exception: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r10);

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.io.IOException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
        catch java.io.IOException from label5 to label6 with label9;
    }

    private static java.lang.String getNextCodePath(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, r4, r5, $r9, $r14, $r15;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 = 1;

        if r0 == null goto label4;

        r4 = r0;

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $i7 = virtualinvoke r4.<java.lang.String: int length()>();

        $i6 = virtualinvoke r2.<java.lang.String: int length()>();

        $i8 = $i7 - $i6;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

     label1:
        i1 = virtualinvoke r4.<java.lang.String: int lastIndexOf(java.lang.String)>(r1);

        if i1 == -1 goto label4;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = i1 + $i3;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i4);

        if r5 == null goto label4;

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 == 0 goto label2;

        $r15 = "-";

        $i5 = virtualinvoke $r15.<java.lang.String: int length()>();

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i5);

     label2:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

     label3:
        if i2 > 1 goto label5;

        i0 = i2 + 1;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label5:
        i0 = i2 - 1;

        goto label4;

     label6:
        $r16 := @caughtexception;

        goto label4;

        catch java.lang.NumberFormatException from label2 to label3 with label6;
    }

    private boolean getPackageSizeInfoLI(java.lang.String, int, android.content.pm.PackageStats)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r7, r8, r9, r10, $r18, $r23, $r25, $r28;
        int i0, $i1;
        android.content.pm.PackageStats r2;
        java.util.HashMap r3, $r13, $r14;
        java.lang.Throwable r4, $r31;
        android.content.pm.PackageParser$Package r5, $r32;
        com.android.server.pm.PackageSetting r6;
        boolean z0, z1, z2, $z3, $z4;
        android.content.pm.ApplicationInfo r11, $r24;
        java.lang.Object $r12, $r16;
        com.android.server.pm.Settings $r15;
        com.android.server.pm.Installer $r17;
        long $l2, $l3, $l4;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r26, $r27, $r29, $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.PackageStats;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to get size of null packageName.");

        return 0;

     label01:
        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label02:
        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.content.pm.PackageParser$Package) $r12;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (com.android.server.pm.PackageSetting) $r16;

     label03:
        z0 = 0;

        if r5 != null goto label11;

        z0 = 1;

        if r6 == null goto label05;

     label04:
        $r32 = r6.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r32 != null goto label10;

     label05:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package named \'");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t exist.");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        exitmonitor r3;

     label06:
        return 0;

     label07:
        $r31 := @caughtexception;

        r4 = $r31;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        r5 = r6.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label11:
        r7 = null;

        if r6 == null goto label13;

     label12:
        r7 = r6.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

     label13:
        r8 = null;

        if r5 == null goto label19;

     label14:
        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r5);

        if $z4 != 0 goto label16;

        z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r5);

     label15:
        r8 = null;

        if z2 == 0 goto label19;

     label16:
        $r24 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r25 = $r24.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        r9 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String cidFromCodePath(java.lang.String)>($r25);

     label17:
        r8 = null;

        if r9 == null goto label19;

     label18:
        r8 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>(r9);

     label19:
        exitmonitor r3;

     label20:
        r10 = null;

        if z0 != 0 goto label22;

        r11 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if r11 != null goto label21;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no applicationInfo.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        return 0;

     label21:
        z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r5);

        r10 = null;

        if z1 == 0 goto label22;

        r10 = r11.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

     label22:
        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r18 = r5.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $i1 = virtualinvoke $r17.<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.pm.PackageStats)>(r1, i0, $r18, r7, r10, r8, r2);

        if $i1 >= 0 goto label23;

        return 0;

     label23:
        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r5);

        if $z3 != 0 goto label24;

        $l2 = r2.<android.content.pm.PackageStats: long codeSize>;

        $l3 = r2.<android.content.pm.PackageStats: long externalCodeSize>;

        $l4 = $l2 + $l3;

        r2.<android.content.pm.PackageStats: long codeSize> = $l4;

        r2.<android.content.pm.PackageStats: long externalCodeSize> = 0L;

     label24:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label16 to label17 with label07;
        catch java.lang.Throwable from label18 to label19 with label07;
        catch java.lang.Throwable from label19 to label20 with label07;
    }

    private java.lang.String getRequiredVerifierLPr()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1;
        java.lang.String r2, r4;
        int i0, i1;
        android.content.pm.ResolveInfo r3;
        com.android.server.pm.PackageSetting r5;
        com.android.server.pm.GrantedPermissions r6;
        android.content.Intent $r7;
        java.lang.Object $r8, $r12;
        android.content.pm.ActivityInfo $r9, $r10;
        com.android.server.pm.Settings $r11;
        java.util.HashMap $r13;
        java.util.HashSet $r14;
        com.android.server.pm.SharedUserSetting $r15;
        java.lang.RuntimeException $r16;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_NEEDS_VERIFICATION");

        r1 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>($r7, "application/vnd.android.package-archive", 512, 0);

        r2 = null;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.ResolveInfo) $r8;

        $r9 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r9 != null goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r10 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r4 = $r10.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r11.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.pm.PackageSetting) $r12;

        if r5 == null goto label2;

        $r15 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r15 == null goto label5;

        r6 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label4:
        $r14 = r6.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>("android.permission.PACKAGE_VERIFICATION_AGENT");

        if $z0 == 0 goto label2;

        if r2 == null goto label6;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>("There can be only one required verifier");

        throw $r16;

     label5:
        r6 = r5;

        goto label4;

     label6:
        r2 = r4;

        goto label2;

     label7:
        return r2;
    }

    private static java.io.File getSettingsProblemFile()
    {
        java.io.File $r0, $r1, $r2;

        $r0 = new java.io.File;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "system");

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "uiderrors.txt");

        return $r0;
    }

    static java.lang.String getTempContainerId()
    {
        int i0, i1, i2, i3, $i4;
        java.lang.String[] r0;
        java.lang.String r1, r2, $r7, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        boolean $z0;
        java.lang.NumberFormatException $r9;

        i0 = 1;

        r0 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()>();

        if r0 == null goto label6;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        r1 = r0[i2];

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("smdl2tmp");

        if $z0 != 0 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r8 = "smdl2tmp";

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

     label4:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label5:
        if i3 < i0 goto label2;

        i0 = i3 + 1;

        goto label2;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("smdl2tmp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label7:
        $r9 := @caughtexception;

        goto label2;

        catch java.lang.NumberFormatException from label4 to label5 with label7;
    }

    private int getUidForVerifier(android.content.pm.VerifierInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.VerifierInfo r1;
        java.util.HashMap r2, $r8;
        java.lang.Throwable r3, $r30;
        android.content.pm.PackageParser$Package r4;
        byte[] r6, $r14;
        int i0, $i1;
        java.lang.String $r7, $r20, $r21, $r24, $r26;
        java.lang.Object $r9;
        android.content.pm.Signature[] $r10, $r11;
        android.content.pm.Signature $r12;
        java.security.PublicKey $r13, $r15;
        android.content.pm.ApplicationInfo $r16;
        boolean $z0;
        java.lang.StringBuilder $r17, $r18, $r19, $r22, $r23, $r25, $r27, $r28;
        java.security.cert.CertificateException $r29;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.VerifierInfo;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r7 = r1.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r4 = (android.content.pm.PackageParser$Package) $r9;

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r2;

     label04:
        return -1;

     label05:
        $r10 = r4.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i1 = lengthof $r10;

        if $i1 == 1 goto label10;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifier package ");

        $r24 = r1.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has more than one signature; ignoring");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r26);

        exitmonitor r2;

     label06:
        return -1;

     label07:
        $r30 := @caughtexception;

        r3 = $r30;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r11 = r4.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r12 = $r11[0];

        $r13 = virtualinvoke $r12.<android.content.pm.Signature: java.security.PublicKey getPublicKey()>();

        r6 = interfaceinvoke $r13.<java.security.PublicKey: byte[] getEncoded()>();

     label11:
        $r15 = r1.<android.content.pm.VerifierInfo: java.security.PublicKey publicKey>;

        $r14 = interfaceinvoke $r15.<java.security.PublicKey: byte[] getEncoded()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r14, r6);

        if $z0 != 0 goto label16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifier package ");

        $r20 = r1.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have the expected public key; ignoring");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r21);

        exitmonitor r2;

     label12:
        return -1;

     label13:
        $r29 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        return -1;

     label16:
        $r16 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        exitmonitor r2;

     label17:
        return i0;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.security.cert.CertificateException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label16 to label17 with label07;
    }

    private int getUidTargetSdkVersionLockedLPr(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2;
        java.lang.Object r1, $r11;
        com.android.server.pm.PackageSetting r2, r5;
        com.android.server.pm.SharedUserSetting r3;
        java.util.Iterator r4;
        com.android.server.pm.Settings $r6;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageParser$Package $r7, $r8, $r12, $r13;
        android.content.pm.ApplicationInfo $r9, $r14;
        java.util.HashSet $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r1 = virtualinvoke $r6.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i0);

        $z0 = r1 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label2;

        r3 = (com.android.server.pm.SharedUserSetting) r1;

        i1 = 10000;

        $r10 = r3.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        r4 = virtualinvoke $r10.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.PackageSetting) $r11;

        $r13 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r13 == null goto label1;

        $r12 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r14 = $r12.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i2 = $r14.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i2 >= i1 goto label1;

        i1 = i2;

        goto label1;

     label2:
        $z1 = r1 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label4;

        r2 = (com.android.server.pm.PackageSetting) r1;

        $r7 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r7 == null goto label4;

        $r8 = r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r9 = $r8.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i1 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label3:
        return i1;

     label4:
        return 10000;
    }

    private int getUnknownSourcesSettings()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "install_non_market_apps", -1);

        return $i0;
    }

    private long getVerificationTimeout()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        long $l0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r2, "verifier_timeout", 10000L);

        return $l0;
    }

    private void grantPermissionsLPw(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, $z17;
        com.android.server.pm.PackageSetting r2;
        com.android.server.pm.GrantedPermissions r3;
        java.util.HashSet r4, $r29, $r69, $r72, $r73, $r77, $r78, $r82;
        int i0, i1, i2, $i4, $i5, $i6, $i8, $i10;
        java.lang.String r5, r7, $r22, $r27, $r35, $r39, $r42, $r53, $r56, $r58, $r62, $r63;
        com.android.server.pm.BasePermission r6;
        java.lang.Object $r8, $r14, $r16, $r20;
        int[] $r9, $r46, $r47, $r48, $r68, $r70, $r71, $r74, $r75, $r76, $r79, $r81;
        com.android.server.pm.SharedUserSetting $r10;
        java.util.ArrayList $r11, $r12, $r13;
        java.lang.Boolean $r15;
        com.android.server.pm.Settings $r17;
        java.lang.StringBuilder $r18, $r21, $r23, $r24, $r26, $r28, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r40, $r41, $r43, $r44, $r45, $r49, $r50, $r52, $r54, $r55, $r57, $r59, $r60, $r61, $r64, $r65, $r66, $r67;
        java.util.HashMap $r19;
        com.android.server.pm.PackageSettingBase $r25, $r80;
        android.content.pm.ApplicationInfo $r36, $r51;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        $r8 = r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r2 = (com.android.server.pm.PackageSetting) $r8;

        if r2 != null goto label01;

        return;

     label01:
        $r10 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r10 == null goto label08;

        r3 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label02:
        r4 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        z1 = 0;

        if z0 == 0 goto label03;

        r2.<com.android.server.pm.PackageSetting: boolean permissionsFixed> = 0;

        if r3 != r2 goto label03;

        $r78 = new java.util.HashSet;

        $r77 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        specialinvoke $r78.<java.util.HashSet: void <init>(java.util.Collection)>($r77);

        r4 = $r78;

        $r82 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r82.<java.util.HashSet: void clear()>();

        $r81 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        r3.<com.android.server.pm.GrantedPermissions: int[] gids> = $r81;

     label03:
        $r9 = r3.<com.android.server.pm.GrantedPermissions: int[] gids>;

        if $r9 != null goto label04;

        $r79 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        r3.<com.android.server.pm.GrantedPermissions: int[] gids> = $r79;

     label04:
        $r11 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i1 = 0;

     label05:
        if i1 >= i0 goto label22;

        $r12 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r14 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (java.lang.String) $r14;

        $r13 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissionsRequired>;

        $r16 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r15 = (java.lang.Boolean) $r16;

        z2 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.BasePermission) $r20;

        if r6 == null goto label06;

        $r25 = r6.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r25 != null goto label09;

     label06:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r22 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r27);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        r3 = r2;

        goto label02;

     label09:
        r7 = r6.<com.android.server.pm.BasePermission: java.lang.String name>;

        z3 = 0;

        $i4 = r6.<com.android.server.pm.BasePermission: int protectionLevel>;

        i2 = 15 & $i4;

        if i2 == 0 goto label10;

        if i2 != 1 goto label15;

     label10:
        if z2 != 0 goto label11;

        $z17 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r7);

        if $z17 != 0 goto label11;

        $z16 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z16 == 0 goto label14;

        $z15 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z15 != 0 goto label14;

     label11:
        z4 = 1;

     label12:
        if z4 == 0 goto label20;

        $z9 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z9 != 0 goto label13;

        $z13 = r2.<com.android.server.pm.PackageSetting: boolean permissionsFixed>;

        if $z13 == 0 goto label13;

        if z3 != 0 goto label13;

        $r73 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z12 = virtualinvoke $r73.<java.util.HashSet: boolean contains(java.lang.Object)>(r7);

        if $z12 != 0 goto label13;

        z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isNewPlatformPermissionForPackage(java.lang.String,android.content.pm.PackageParser$Package)>(r7, r1);

     label13:
        if z4 == 0 goto label19;

        $r72 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z10 = virtualinvoke $r72.<java.util.HashSet: boolean contains(java.lang.Object)>(r7);

        if $z10 != 0 goto label18;

        z1 = 1;

        $r69 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r69.<java.util.HashSet: boolean add(java.lang.Object)>(r7);

        $r74 = r3.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r76 = r6.<com.android.server.pm.BasePermission: int[] gids>;

        $r75 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r74, $r76);

        r3.<com.android.server.pm.GrantedPermissions: int[] gids> = $r75;

        goto label07;

     label14:
        z4 = 0;

        z3 = 0;

        goto label12;

     label15:
        $r80 = r6.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r80 != null goto label16;

        z4 = 0;

        z3 = 0;

        goto label12;

     label16:
        if i2 != 2 goto label17;

        z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean grantSignaturePermission(java.lang.String,android.content.pm.PackageParser$Package,com.android.server.pm.BasePermission,java.util.HashSet)>(r7, r1, r6, r4);

        z3 = 0;

        if z4 == 0 goto label12;

        z3 = 1;

        goto label12;

     label17:
        z4 = 0;

        z3 = 0;

        goto label12;

     label18:
        $z11 = r2.<com.android.server.pm.PackageSetting: boolean haveGids>;

        if $z11 != 0 goto label07;

        $r71 = r3.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r70 = r6.<com.android.server.pm.BasePermission: int[] gids>;

        $r68 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r71, $r70);

        r3.<com.android.server.pm.GrantedPermissions: int[] gids> = $r68;

        goto label07;

     label19:
        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not granting permission ");

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to package ");

        $r62 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r61 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it was previously installed without");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r63);

        goto label07;

     label20:
        $r29 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z8 = virtualinvoke $r29.<java.util.HashSet: boolean remove(java.lang.Object)>(r7);

        if $z8 == 0 goto label21;

        z1 = 1;

        $r47 = r3.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r46 = r6.<com.android.server.pm.BasePermission: int[] gids>;

        $r48 = staticinvoke <com.android.server.pm.PackageManagerService: int[] removeInts(int[],int[])>($r47, $r46);

        r3.<com.android.server.pm.GrantedPermissions: int[] gids> = $r48;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Un-granting permission ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r52 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r53 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (protectionLevel=");

        $i8 = r6.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r49 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r51 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r51.<android.content.pm.ApplicationInfo: int flags>;

        $r58 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r60 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r56 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r56);

        goto label07;

     label21:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not granting permission ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to package ");

        $r35 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (protectionLevel=");

        $i5 = r6.<com.android.server.pm.BasePermission: int protectionLevel>;

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r36 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r36.<android.content.pm.ApplicationInfo: int flags>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r39);

        goto label07;

     label22:
        if z1 != 0 goto label23;

        if z0 == 0 goto label24;

     label23:
        $z6 = r2.<com.android.server.pm.PackageSetting: boolean permissionsFixed>;

        if $z6 != 0 goto label24;

        $z7 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z7 == 0 goto label25;

     label24:
        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z5 == 0 goto label26;

     label25:
        r2.<com.android.server.pm.PackageSetting: boolean permissionsFixed> = 1;

     label26:
        r2.<com.android.server.pm.PackageSetting: boolean haveGids> = 1;

        return;
    }

    private boolean grantSignaturePermission(java.lang.String, android.content.pm.PackageParser$Package, com.android.server.pm.BasePermission, java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r12;
        android.content.pm.PackageParser$Package r2, $r15, $r17, $r20, $r23;
        com.android.server.pm.BasePermission r3;
        java.util.HashSet r4, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.pm.PackageSetting r5;
        com.android.server.pm.GrantedPermissions r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.pm.PackageSettingBase $r7;
        com.android.server.pm.PackageSignatures $r8;
        android.content.pm.Signature[] $r9, $r10, $r21, $r22;
        com.android.server.pm.Settings $r11;
        com.android.server.pm.SharedUserSetting $r13;
        java.util.ArrayList $r16, $r18;
        java.lang.Object $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        r3 := @parameter2: com.android.server.pm.BasePermission;

        r4 := @parameter3: java.util.HashSet;

        $r7 = r3.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        $r8 = $r7.<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageSignatures signatures>;

        $r10 = $r8.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r9 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i1 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r10, $r9);

        if $i1 == 0 goto label01;

        $r23 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        $r22 = $r23.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r21 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i7 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r22, $r21);

        if $i7 != 0 goto label06;

     label01:
        z0 = 1;

     label02:
        if z0 != 0 goto label04;

        $i4 = r3.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i5 = 16 & $i4;

        if $i5 == 0 goto label04;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r2);

        if $z1 == 0 goto label04;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r2);

        if $z2 == 0 goto label11;

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r5 = virtualinvoke $r11.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r12);

        $r13 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r13 == null goto label07;

        r6 = r5.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label03:
        $r14 = r6.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z3 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label08;

        z0 = 1;

     label04:
        if z0 != 0 goto label05;

        $i2 = r3.<com.android.server.pm.BasePermission: int protectionLevel>;

        $i3 = 32 & $i2;

        if $i3 == 0 goto label05;

        z0 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

     label05:
        return z0;

     label06:
        z0 = 0;

        goto label02;

     label07:
        r6 = r5;

        goto label03;

     label08:
        $r15 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r15 == null goto label04;

        $z4 = virtualinvoke r5.<com.android.server.pm.PackageSetting: boolean isPrivileged()>();

        if $z4 == 0 goto label04;

        i0 = 0;

     label09:
        $r17 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r16 = $r17.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $i6 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if i0 >= $i6 goto label04;

        $r20 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r18 = $r20.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z5 == 0 goto label10;

        z0 = 1;

        goto label04;

     label10:
        i0 = i0 + 1;

        goto label09;

     label11:
        z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isPrivilegedApp(android.content.pm.PackageParser$Package)>(r2);

        goto label04;
    }

    private static boolean hasPermission(android.content.pm.PackageParser$Package, java.lang.String)
    {
        android.content.pm.PackageParser$Package r0;
        java.lang.String r1, $r7;
        int i0, $i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Permission $r5;
        android.content.pm.PermissionInfo $r6;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r3 = r0.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (android.content.pm.PackageParser$Permission) $r4;

        $r6 = $r5.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r7 = $r6.<android.content.pm.PermissionInfo: java.lang.String name>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return 0;
    }

    private static boolean hasString(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        int i0, i1, $i2, $i3;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        if r0 != null goto label1;

        return 0;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        i0 = -1 + $i2;

     label2:
        if i0 < 0 goto label6;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = -1 + $i3;

     label3:
        if i1 < 0 goto label5;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + -1;

        goto label3;

     label5:
        i0 = i0 + -1;

        goto label2;

     label6:
        return 0;
    }

    private static boolean ignoreCodePath(java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getApkName(java.lang.String)>(r0);

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("-");

        if i0 == -1 goto label4;

        $i1 = i0 + 1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

        $i3 = i0 + 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static boolean installForwardLocked(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void installNewPackageLI(android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r8;
        int i0, i1, i3, $i6;
        android.os.UserHandle r2, r9;
        java.lang.String r3, r5, $r11, $r19, $r20, $r24, $r27, $r32, $r36;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r4;
        boolean z0, $z1, $z2, $z3;
        java.util.HashMap r6, $r12, $r14, $r21, $r34;
        java.lang.Throwable r7, $r38;
        byte b2;
        java.io.File $r10;
        com.android.server.pm.Settings $r13, $r35;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r23, $r25, $r26, $r28, $r29, $r30, $r31, $r37;
        long $l5;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r22;
        java.lang.Object $r33;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.UserHandle;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r5 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r11 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r10 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getDataPathForPackage(java.lang.String,int)>($r11, 0);

        z0 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label01:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r13.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $z1 = virtualinvoke $r12.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z1 == 0 goto label03;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to re-install ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without first uninstalling package running as ");

        $r35 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r34 = $r35.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r33 = virtualinvoke $r34.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        $r32 = (java.lang.String) $r33;

        $r37 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r36);

        r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -1;

        exitmonitor r6;

     label02:
        return;

     label03:
        $r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $z2 = virtualinvoke $r14.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z2 != 0 goto label04;

        $r21 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAppDirs>;

        $r19 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $z3 = virtualinvoke $r21.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r19);

        if $z3 == 0 goto label09;

     label04:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to re-install ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without first uninstalling.");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r20);

        r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -1;

        exitmonitor r6;

     label05:
        return;

     label06:
        $r38 := @caughtexception;

        r7 = $r38;

     label07:
        exitmonitor r6;

     label08:
        throw r7;

     label09:
        exitmonitor r6;

     label10:
        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = 1;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r1, i0, i1, $l5, r2);

        if r8 != null goto label11;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r24 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r27);

        i3 = r0.<com.android.server.pm.PackageManagerService: int mLastScanError>;

        r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = i3;

        if i3 != 1 goto label14;

        r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

        return;

     label11:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSettingsLI(android.content.pm.PackageParser$Package,java.lang.String,int[],boolean[],com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r8, r3, null, null, r4);

        $i6 = r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i6 == 1 goto label14;

        r9 = <android.os.UserHandle: android.os.UserHandle ALL>;

        if z0 == 0 goto label13;

        b2 = 1;

     label12:
        $r22 = r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r5, r9, 0, null, null, b2, $r22, 1);

        return;

     label13:
        b2 = 0;

        goto label12;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    private static boolean installOnSd(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $i2 = i0 & 8;

        if $i2 == 0 goto label1;

        return 1;
    }

    private void installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs, boolean, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r2;
        int i0, i5, i7, i8, i10, $i11, $i12, $i14, $i15, $i16, $i17, $i20, $i21, $i22, $i23, $i24;
        java.lang.String r3, r8, r11, r16, $r19, $r21, $r29, $r31, $r33;
        java.io.File r4, $r18;
        short s1, s2, s3, s4, $s13, $s18;
        byte b6, b9;
        android.content.pm.PackageParser$Package r5, r13, $r50, $r51;
        android.content.pm.PackageParser r6, $r20;
        java.util.HashMap r7, r15, $r27, $r38, $r39, $r53, $r55, $r56;
        com.android.server.pm.PackageSetting r9, r17, $r41;
        java.lang.Throwable r10, r14, $r58, $r61;
        android.content.pm.ApplicationInfo r12, $r22, $r32, $r46;
        java.lang.String[] $r23;
        android.util.DisplayMetrics $r24;
        android.content.pm.ManifestDigest $r25, $r59, $r60;
        java.lang.Object $r26, $r34, $r40, $r54;
        com.android.server.pm.Settings $r28, $r37, $r45, $r47;
        android.os.UserHandle $r30, $r44;
        com.android.server.pm.UserManagerService $r35, $r42;
        int[] $r36, $r43, $r48, $r49;
        java.util.ArrayList $r52, $r57;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$InstallArgs;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        i0 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: int flags>;

        r3 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String installerPackageName>;

        $r18 = new java.io.File;

        $r19 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String getCodePath()>();

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r19);

        r4 = $r18;

        $i11 = i0 & 1;

        if $i11 == 0 goto label07;

        z1 = 1;

     label01:
        $i12 = i0 & 8;

        if $i12 == 0 goto label08;

        z2 = 1;

     label02:
        if z2 == 0 goto label09;

        s1 = 0;

     label03:
        $s13 = s1 | 4;

        s2 = 8 | $s13;

        if z0 == 0 goto label10;

        s3 = 16;

     label04:
        s4 = s2 | s3;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $i14 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        i5 = 2 | $i14;

        if z1 == 0 goto label11;

        b6 = 16;

     label05:
        i7 = i5 | b6;

        if z2 == 0 goto label12;

        b9 = 32;

     label06:
        i8 = i7 | b9;

        $r20 = new android.content.pm.PackageParser;

        $r21 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r20.<android.content.pm.PackageParser: void <init>(java.lang.String)>($r21);

        r6 = $r20;

        $r23 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses>;

        virtualinvoke r6.<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>($r23);

        $r24 = r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        r5 = virtualinvoke r6.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)>(r4, null, $r24, i8);

        if r5 != null goto label13;

        $i22 = virtualinvoke r6.<android.content.pm.PackageParser: int getParseError()>();

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = $i22;

        return;

     label07:
        z1 = 0;

        goto label01;

     label08:
        z2 = 0;

        goto label02;

     label09:
        s1 = 1;

        goto label03;

     label10:
        s3 = 0;

        goto label04;

     label11:
        b6 = 0;

        goto label05;

     label12:
        b9 = 0;

        goto label06;

     label13:
        r8 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String name> = r8;

        $r22 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i16 = $r22.<android.content.pm.ApplicationInfo: int flags>;

        $i15 = 256 & $i16;

        if $i15 == 0 goto label14;

        $i24 = i0 & 4;

        if $i24 != 0 goto label14;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -15;

        return;

     label14:
        $z6 = virtualinvoke r6.<android.content.pm.PackageParser: boolean collectCertificates(android.content.pm.PackageParser$Package,int)>(r5, i8);

        if $z6 != 0 goto label15;

        $i23 = virtualinvoke r6.<android.content.pm.PackageParser: int getParseError()>();

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = $i23;

        return;

     label15:
        $r25 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.ManifestDigest manifestDigest>;

        if $r25 == null goto label16;

        $r59 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.ManifestDigest manifestDigest>;

        $r60 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ManifestDigest manifestDigest>;

        $z9 = virtualinvoke $r59.<android.content.pm.ManifestDigest: boolean equals(java.lang.Object)>($r60);

        if $z9 != 0 goto label16;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -23;

        return;

     label16:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

        i10 = i0 & 2;

        z3 = 0;

        if i10 == 0 goto label19;

     label17:
        $r47 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r55 = $r47.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r54 = virtualinvoke $r55.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r16 = (java.lang.String) $r54;

        $r57 = r5.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        if $r57 == null goto label30;

        $r52 = r5.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $z8 = virtualinvoke $r52.<java.util.ArrayList: boolean contains(java.lang.Object)>(r16);

        if $z8 == 0 goto label30;

        $r53 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $z10 = virtualinvoke $r53.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r16);

        if $z10 == 0 goto label30;

        virtualinvoke r5.<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>(r16);

        r8 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

     label18:
        z3 = 1;

     label19:
        $r28 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r27 = $r28.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r26 = virtualinvoke $r27.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.server.pm.PackageSetting) $r26;

     label20:
        r11 = null;

        z4 = 0;

        if r9 == null goto label28;

     label21:
        $r45 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r39 = $r45.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r40 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        $r41 = (com.android.server.pm.PackageSetting) $r40;

        r11 = $r41.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        r13 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label22:
        z4 = 0;

        if r13 == null goto label27;

     label23:
        $r51 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r12 = $r51.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

     label24:
        z4 = 0;

        if r12 == null goto label27;

     label25:
        $r50 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r46 = $r50.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i20 = $r46.<android.content.pm.ApplicationInfo: int flags>;

        $i21 = 1 & $i20;

        if $i21 == 0 goto label47;

     label26:
        z4 = 1;

     label27:
        $r42 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r49 = virtualinvoke $r42.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r48 = virtualinvoke r9.<com.android.server.pm.PackageSetting: int[] queryInstalledUsers(int[],boolean)>($r49, 1);

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers> = $r48;

     label28:
        exitmonitor r7;

     label29:
        if z4 == 0 goto label35;

        if z2 == 0 goto label35;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot install updates to system apps on sdcard");

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -19;

        return;

     label30:
        $r56 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        z5 = virtualinvoke $r56.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r8);

     label31:
        z3 = 0;

        if z5 == 0 goto label19;

        z3 = 1;

        goto label19;

     label32:
        $r58 := @caughtexception;

        r10 = $r58;

     label33:
        exitmonitor r7;

     label34:
        throw r10;

     label35:
        $i17 = r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        $z7 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: boolean doRename(int,java.lang.String,java.lang.String)>($i17, r8, r11);

        if $z7 != 0 goto label36;

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -4;

        return;

     label36:
        $r29 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String getCodePath()>();

        $r33 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String getResourcePath()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void setApplicationInfoPaths(android.content.pm.PackageParser$Package,java.lang.String,java.lang.String)>(r5, $r29, $r33);

        $r32 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = virtualinvoke r1.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String getNativeLibraryPath()>();

        $r32.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r31;

        if z3 == 0 goto label46;

        $r44 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void replacePackageLI(android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r5, i8, s4, $r44, r3, r2);

     label37:
        r15 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r15;

     label38:
        $r37 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r38 = $r37.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r34 = virtualinvoke $r38.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r17 = (com.android.server.pm.PackageSetting) $r34;

     label39:
        if r17 == null goto label41;

     label40:
        $r35 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r36 = virtualinvoke $r35.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $r43 = virtualinvoke r17.<com.android.server.pm.PackageSetting: int[] queryInstalledUsers(int[],boolean)>($r36, 1);

        r2.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] newUsers> = $r43;

     label41:
        exitmonitor r15;

     label42:
        return;

     label43:
        $r61 := @caughtexception;

        r14 = $r61;

     label44:
        exitmonitor r15;

     label45:
        throw r14;

     label46:
        $s18 = s4 | 512;

        $r30 = r1.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void installNewPackageLI(android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r5, i8, $s18, $r30, r3, r2);

        goto label37;

     label47:
        z4 = 0;

        goto label27;

        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label38 to label39 with label43;
        catch java.lang.Throwable from label40 to label41 with label43;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label44 to label45 with label43;
    }

    private boolean isAsecExternal(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>(r1);

        $r3 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mAsecInternalPath>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isExternal(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 262144 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isExternal(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = 262144 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isExternalMediaAvailable()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isForwardLocked(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 536870912 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isForwardLocked(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r1.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = 536870912 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isNewPlatformPermissionForPackage(java.lang.String, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r6, $r11, $r13;
        android.content.pm.PackageParser$Package r2;
        int i0, i1, $i2, $i3;
        boolean z0, $z1;
        android.content.pm.PackageParser$NewPermissionInfo r3;
        android.content.pm.PackageParser$NewPermissionInfo[] $r4, $r5;
        android.content.pm.ApplicationInfo $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r4 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        z0 = 0;

        if i1 >= i0 goto label2;

        $r5 = <android.content.pm.PackageParser: android.content.pm.PackageParser$NewPermissionInfo[] NEW_PERMISSIONS>;

        r3 = $r5[i1];

        $r6 = r3.<android.content.pm.PackageParser$NewPermissionInfo: java.lang.String name>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r7 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i2 = r3.<android.content.pm.PackageParser$NewPermissionInfo: int sdkVersion>;

        if $i3 >= $i2 goto label3;

        z0 = 1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Auto-granting ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to old pkg ");

        $r11 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r13);

     label2:
        return z0;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    private boolean isPackageDeviceAdmin(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        android.app.admin.IDevicePolicyManager r2;
        boolean z0, $z1;
        android.os.IBinder $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("device_policy");

        r2 = staticinvoke <android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>($r4);

        if r2 == null goto label5;

     label1:
        $z1 = interfaceinvoke r2.<android.app.admin.IDevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String,int)>(r1, i0);

        if $z1 != 0 goto label3;

        z0 = interfaceinvoke r2.<android.app.admin.IDevicePolicyManager: boolean isDeviceOwner(java.lang.String)>(r1);

     label2:
        if z0 == 0 goto label5;

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private static final boolean isPackageFilename(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isPrivilegedApp(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 1073741824 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isSystemApp(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isSystemApp(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isSystemApp(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)
    {
        android.content.pm.PackageParser$Package r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 128 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageSetting r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.pm.PackageSetting;

        $i0 = r0.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = 128 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isUserRestricted(int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.lang.String r1, $r7;
        boolean z0, z1;
        com.android.server.pm.UserManagerService $r2;
        android.os.Bundle $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>(i0);

        z0 = virtualinvoke $r3.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r1, 0);

        z1 = 0;

        if z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User is restricted: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r7);

        z1 = 1;

     label1:
        return z1;
    }

    private boolean isVerificationEnabled(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        boolean z0, $z1;
        android.content.Context $r1, $r3;
        android.content.ContentResolver $r2, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        z0 = 1;

        $i1 = i0 & 32;

        if $i1 == 0 goto label3;

        $z1 = staticinvoke <android.app.ActivityManager: boolean isRunningInTestHarness()>();

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i4 = (int) 1;

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r4, "verifier_verify_adb_installs", i4);

        if $i3 == 0 goto label1;

     label3:
        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i5 = (int) 1;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "package_verifier_enable", i5);

        i6 = (int) 1;

        if $i2 != i6 goto label5;

     label4:
        return z0;

     label5:
        z0 = 0;

        goto label4;
    }

    private void killApplication(java.lang.String, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0;
        android.app.IActivityManager r3;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r3 == null goto label2;

     label1:
        interfaceinvoke r3.<android.app.IActivityManager: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>(r1, i0, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void loadMediaPackages(java.util.HashMap, int[], java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1, r7, r16;
        int[] r2;
        java.util.HashSet r3;
        java.util.ArrayList r4, $r18;
        java.util.Set r5;
        boolean z0, z1, $z2, $z3, $z4, $z7, $z8, $z9;
        java.util.Iterator r6, r9;
        java.lang.Throwable r8, r13, r14, r19, $r67, $r74, $r75, $r76;
        byte b0, b1, $b6;
        java.lang.String r10, r11, $r26, $r33, $r44, $r45, $r51, $r52, $r53, $r55, $r60, $r61, $r63, $r68, $r69, $r72, $r73;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r12;
        int i2, $i3, $i4, $i5, $i7, $i10, $i11, $i12, $i17;
        java.lang.Object r15, $r23, $r39, $r40;
        android.content.pm.PackageParser$Package r17;
        com.android.server.pm.Settings $r20, $r21, $r22, $r38;
        java.lang.StringBuilder $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r41, $r42, $r43, $r46, $r47, $r48, $r49, $r50, $r54, $r56, $r57, $r58, $r62, $r64, $r65, $r70, $r71;
        java.lang.Runtime $r32;
        java.io.File $r59;
        android.content.pm.ApplicationInfo $r66;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.HashMap;

        r2 := @parameter1: int[];

        r3 := @parameter2: java.util.HashSet;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r4 = $r18;

        r5 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        z0 = 0;

        r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label31;

        $r39 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.pm.PackageManagerService$AsecInstallArgs) $r39;

        $r40 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r12);

        r11 = (java.lang.String) $r40;

        b1 = -18;

     label02:
        $i12 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPreInstall(int)>(1);

        if $i12 == 1 goto label04;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mount cid : ");

        $r72 = r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r71 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when installing from sdcard");

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r69);

     label03:
        $r68 = r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r68);

        goto label01;

     label04:
        if r11 == null goto label06;

     label05:
        $r52 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>();

        $z8 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z8 != 0 goto label08;

     label06:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r51 = r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r46 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cachepath ");

        $r45 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match one in settings ");

        $r54 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r53);

     label07:
        $r55 = r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r55);

        goto label01;

     label08:
        i2 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        $z7 = staticinvoke <com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean access$4700(com.android.server.pm.PackageManagerService$AsecInstallArgs)>(r12);

        if $z7 == 0 goto label10;

     label09:
        i2 = i2 | 32;

     label10:
        $z9 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean isFwdLocked()>();

        if $z9 == 0 goto label12;

     label11:
        i2 = i2 | 16;

     label12:
        z0 = 1;

     label13:
        r15 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r15;

     label14:
        $r59 = new java.io.File;

        specialinvoke $r59.<java.io.File: void <init>(java.lang.String)>(r11);

        r17 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>($r59, i2, 0, 0L, null);

     label15:
        if r17 == null goto label29;

     label16:
        r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r16;

     label17:
        b1 = 1;

     label18:
        $r60 = r17.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r60);

        $r66 = r17.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r66.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPostInstall(int,int)>(1, $i17);

        exitmonitor r16;

     label19:
        exitmonitor r15;

     label20:
        if b1 == 1 goto label01;

        $r61 = r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r61);

        goto label01;

     label21:
        $r76 := @caughtexception;

        r19 = $r76;

     label22:
        exitmonitor r16;

     label23:
        throw r19;

     label24:
        $r75 := @caughtexception;

        r14 = $r75;

     label25:
        exitmonitor r15;

     label26:
        throw r14;

     label27:
        $r67 := @caughtexception;

        r13 = $r67;

        if b1 == 1 goto label28;

        $r73 = r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String cid>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r73);

     label28:
        throw r13;

     label29:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to install pkg from  ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from sdcard");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r63);

     label30:
        goto label19;

     label31:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label32:
        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i3 = $r20.<com.android.server.pm.Settings: int mExternalSdkPlatform>;

        $i5 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        if $i3 == $i5 goto label43;

     label33:
        z1 = 1;

     label34:
        if z1 == 0 goto label36;

     label35:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Platform changed from ");

        $r38 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i10 = $r38.<com.android.server.pm.Settings: int mExternalSdkPlatform>;

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i11 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; regranting permissions for external storage");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r44);

     label36:
        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i4 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        $r22.<com.android.server.pm.Settings: int mExternalSdkPlatform> = $i4;

     label37:
        if z1 == 0 goto label44;

        b0 = 6;

     label38:
        $b6 = b0 | 1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>(null, null, $b6);

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r21.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r7;

     label39:
        $i7 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label40;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(1, 0, r4, r2, null);

     label40:
        if z0 == 0 goto label41;

        $r32 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r32.<java.lang.Runtime: void gc()>();

     label41:
        if r3 == null goto label49;

        r9 = virtualinvoke r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label42:
        $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label49;

        $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r23;

        $z4 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("smdl2tmp");

        if $z4 == 0 goto label48;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying stale temporary container ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r33);

        staticinvoke <com.android.internal.content.PackageHelper: boolean destroySdDir(java.lang.String)>(r10);

        goto label42;

     label43:
        z1 = 0;

        goto label34;

     label44:
        b0 = 0;

        goto label38;

     label45:
        $r74 := @caughtexception;

        r8 = $r74;

     label46:
        exitmonitor r7;

     label47:
        throw r8;

     label48:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stale");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r26);

        goto label42;

     label49:
        return;

        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label26 to label27 with label27;
        catch java.lang.Throwable from label29 to label30 with label24;
        catch java.lang.Throwable from label32 to label33 with label45;
        catch java.lang.Throwable from label35 to label36 with label45;
        catch java.lang.Throwable from label36 to label37 with label45;
        catch java.lang.Throwable from label38 to label39 with label45;
        catch java.lang.Throwable from label46 to label47 with label45;
    }

    static boolean locationIsPrivileged(java.io.File)
    {
        java.io.File r0, $r3, $r4;
        java.lang.String r2, $r5, $r10;
        boolean z0;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @parameter0: java.io.File;

     label1:
        $r3 = new java.io.File;

        $r4 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "priv-app");

        r2 = virtualinvoke $r3.<java.io.File: java.lang.String getCanonicalPath()>();

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to access code path ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r10);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static final android.content.pm.IPackageManager main(android.content.Context, com.android.server.pm.Installer, boolean, boolean)
    {
        android.content.Context r0;
        com.android.server.pm.Installer r1;
        boolean z0, z1;
        com.android.server.pm.PackageManagerService r2, r4;
        android.os.IBinder r5;
        android.content.pm.IPackageManager r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.pm.Installer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r4 = new com.android.server.pm.PackageManagerService;

        specialinvoke r4.<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>(r0, r1, z0, z1);

        r2 = r4;

        r5 = (android.os.IBinder) r2;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("package", r5);

        r6 = (android.content.pm.IPackageManager) r2;

        return r6;
    }

    private android.content.ComponentName matchComponentForVerifier(java.lang.String, java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r6, $r7, $r11;
        java.util.List r2;
        int i0, i1;
        android.content.pm.ActivityInfo r3, $r9, $r10;
        android.content.pm.ResolveInfo r4;
        android.content.ComponentName $r5;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        r3 = null;

        if i1 >= i0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.content.pm.ResolveInfo) $r8;

        $r9 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r9 != null goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r10 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r10.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label2;

        r3 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label4:
        if r3 != null goto label5;

        return null;

     label5:
        $r5 = new android.content.ComponentName;

        $r7 = r3.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r6 = r3.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        return $r5;
    }

    private java.util.List matchVerifiers(android.content.pm.PackageInfoLite, java.util.List, com.android.server.pm.PackageVerificationState)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageInfoLite r1;
        java.util.List r2;
        com.android.server.pm.PackageVerificationState r3;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r4, $r9;
        android.content.pm.VerifierInfo r5;
        android.content.ComponentName r6;
        android.content.pm.VerifierInfo[] $r7, $r8, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageInfoLite;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.android.server.pm.PackageVerificationState;

        $r7 = r1.<android.content.pm.PackageInfoLite: android.content.pm.VerifierInfo[] verifiers>;

        $i3 = lengthof $r7;

        if $i3 != 0 goto label2;

        r4 = null;

     label1:
        return r4;

     label2:
        $r8 = r1.<android.content.pm.PackageInfoLite: android.content.pm.VerifierInfo[] verifiers>;

        i0 = lengthof $r8;

        $r9 = new java.util.ArrayList;

        $i4 = i0 + 1;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i4);

        r4 = $r9;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r10 = r1.<android.content.pm.PackageInfoLite: android.content.pm.VerifierInfo[] verifiers>;

        r5 = $r10[i1];

        $r11 = r5.<android.content.pm.VerifierInfo: java.lang.String packageName>;

        r6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName matchComponentForVerifier(java.lang.String,java.util.List)>($r11, r2);

        if r6 != null goto label5;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        i2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidForVerifier(android.content.pm.VerifierInfo)>(r5);

        if i2 == -1 goto label4;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        virtualinvoke r3.<com.android.server.pm.PackageVerificationState: void addSufficientVerifier(int)>(i2);

        goto label4;
    }

    private int moveDexFilesLI(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r8, $r10, $r14, $r15;
        com.android.server.pm.Installer $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r11, $r12, $r13;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        $r2 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 4 & $i0;

        if $i1 == 0 goto label1;

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r4 = r1.<android.content.pm.PackageParser$Package: java.lang.String mScanPath>;

        $r3 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $i2 = virtualinvoke $r5.<com.android.server.pm.Installer: int movedex(java.lang.String,java.lang.String)>($r4, $r3);

        if $i2 == 0 goto label1;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mNoDexOpt>;

        if $z0 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex file doesn\'t exist, skipping move: ");

        $r14 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r15);

     label1:
        return 1;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t rename dex file: ");

        $r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r10);

        return -4;
    }

    private int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        boolean z0, $z1;
        byte b0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(com.android.server.pm.PackageSetting)>(r1);

        b0 = 0;

        if z0 == 0 goto label1;

        b0 = 8;

     label1:
        $z1 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isForwardLocked(com.android.server.pm.PackageSetting)>(r1);

        if $z1 == 0 goto label2;

        b0 = b0 | 1;

     label2:
        return b0;
    }

    private int performDexOptLI(android.content.pm.PackageParser$Package, boolean, boolean, java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0, z1, z2, z3, z4, z5, $z6;
        java.util.HashSet r2, $r17, $r19, r41;
        int i0, i1, i2, $i3, $i4, i10;
        java.lang.String r3, $r14, $r16, $r22, $r27, $r32, $r36;
        java.lang.Exception r4, $r37;
        dalvik.system.StaleDexCacheError r5, $r38;
        java.io.IOException r6, $r24;
        com.android.server.pm.Installer r8;
        android.content.pm.ApplicationInfo $r9, $r11, $r15;
        java.lang.StringBuilder $r12, $r13, $r28, $r29, $r33, $r34, $r35, $r40, r42, r43, r44, r45;
        java.util.ArrayList $r20, $r21, $r25, $r26;
        java.io.FileNotFoundException $r31;
        java.lang.Throwable r46;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.util.HashSet;

        z2 = 1;

        if r2 == null goto label02;

        $r22 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r22);

        $r20 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r20 == null goto label01;

        $r25 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void performDexOptLibsLI(java.util.ArrayList,boolean,boolean,java.util.HashSet)>($r25, z0, z1, r2);

     label01:
        $r21 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r21 == null goto label02;

        $r26 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void performDexOptLibsLI(java.util.ArrayList,boolean,boolean,java.util.HashSet)>($r26, z0, z1, r2);

     label02:
        $r9 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r9.<android.content.pm.ApplicationInfo: int flags>;

        i0 = 4 & $i3;

        z3 = 0;

        if i0 == 0 goto label19;

        r3 = r1.<android.content.pm.PackageParser$Package: java.lang.String mScanPath>;

        if z0 != 0 goto label05;

     label03:
        z5 = staticinvoke <dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>(r3);

     label04:
        z3 = 0;

        i1 = 0;

        if z5 == 0 goto label13;

     label05:
        if z0 != 0 goto label09;

        if z1 == 0 goto label09;

     label06:
        $r17 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt>;

        if $r17 != null goto label07;

        r41 = new java.util.HashSet;

        specialinvoke r41.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt> = r41;

     label07:
        $r19 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label08:
        return 2;

     label09:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running dexopt on: ");

        $r11 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = $r11.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r16);

        $r15 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        i2 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i4);

        r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $z6 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z6 != 0 goto label14;

     label10:
        z4 = 1;

     label11:
        i1 = virtualinvoke r8.<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean)>(r3, i2, z4);

        r1.<android.content.pm.PackageParser$Package: boolean mDidDexOpt> = 1;

     label12:
        z3 = 1;

     label13:
        if i1 >= 0 goto label19;

        return -1;

     label14:
        z4 = 0;

        goto label11;

     label15:
        $r31 := @caughtexception;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Apk not found for dexopt: ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r32);

        i1 = -1;

        z3 = 0;

        goto label13;

     label16:
        $r24 := @caughtexception;

        r6 = $r24;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException reading apk: ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r27, r6);

        i1 = -1;

        z3 = 0;

        goto label13;

     label17:
        $r38 := @caughtexception;

        r5 = $r38;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StaleDexCacheError when reading apk: ");

        $r35 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        r46 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r36, r46);

        i1 = -1;

        z3 = 0;

        goto label13;

     label18:
        $r37 := @caughtexception;

        r4 = $r37;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Exception when doing dexopt : ", r4);

        i1 = -1;

        z3 = 0;

        goto label13;

     label19:
        if z3 != 0 goto label20;

        z2 = 0;

     label20:
        i10 = (int) z2;

        return i10;

        catch java.io.FileNotFoundException from label03 to label04 with label15;
        catch java.io.IOException from label03 to label04 with label16;
        catch dalvik.system.StaleDexCacheError from label03 to label04 with label17;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.io.FileNotFoundException from label06 to label07 with label15;
        catch java.io.IOException from label06 to label07 with label16;
        catch dalvik.system.StaleDexCacheError from label06 to label07 with label17;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.io.FileNotFoundException from label07 to label08 with label15;
        catch java.io.IOException from label07 to label08 with label16;
        catch dalvik.system.StaleDexCacheError from label07 to label08 with label17;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.io.FileNotFoundException from label09 to label10 with label15;
        catch java.io.IOException from label09 to label10 with label16;
        catch dalvik.system.StaleDexCacheError from label09 to label10 with label17;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.io.FileNotFoundException from label11 to label12 with label15;
        catch java.io.IOException from label11 to label12 with label16;
        catch dalvik.system.StaleDexCacheError from label11 to label12 with label17;
        catch java.lang.Exception from label11 to label12 with label18;
    }

    private int performDexOptLI(android.content.pm.PackageParser$Package, boolean, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0, z1, z2;
        java.util.HashSet r2, $r4;
        int $i0;
        java.util.ArrayList $r3, $r6;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        if z2 == 0 goto label3;

        $r3 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r3 != null goto label1;

        $r6 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r6 == null goto label3;

     label1:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        $r5 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

     label2:
        $i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,boolean,boolean,java.util.HashSet)>(r1, z0, z1, r2);

        return $i0;

     label3:
        r2 = null;

        goto label2;
    }

    private void performDexOptLibsLI(java.util.ArrayList, boolean, boolean, java.util.HashSet)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.ArrayList r1;
        boolean z0, z1, $z2;
        java.util.HashSet r2;
        int i0, $i1;
        java.util.HashMap r3, $r9, $r12;
        java.lang.Throwable r4, $r14;
        java.lang.String r5, $r11, $r13;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r6;
        android.content.pm.PackageParser$Package r7;
        java.lang.Object $r8, $r10, $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.util.HashSet;

        i0 = 0;

     label01:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label12;

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label02:
        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (java.lang.String) $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r10;

     label03:
        if r6 == null goto label08;

     label04:
        $r11 = r6.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        if $r11 == null goto label08;

        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r13 = r6.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $r15 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r7 = (android.content.pm.PackageParser$Package) $r15;

     label05:
        exitmonitor r3;

     label06:
        if r7 == null goto label07;

        $z2 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r5);

        if $z2 != 0 goto label07;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,boolean,boolean,java.util.HashSet)>(r7, z0, z1, r2);

     label07:
        i0 = i0 + 1;

        goto label01;

     label08:
        r7 = null;

        goto label05;

     label09:
        $r14 := @caughtexception;

        r4 = $r14;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void processPendingInstall(com.android.server.pm.PackageManagerService$InstallArgs, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$InstallArgs r1;
        int i0;
        com.android.server.pm.PackageManagerService$5 $r2;
        com.android.server.pm.PackageManagerService$PackageHandler $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$InstallArgs;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r2 = new com.android.server.pm.PackageManagerService$5;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$5: void <init>(com.android.server.pm.PackageManagerService,int,com.android.server.pm.PackageManagerService$InstallArgs)>(r0, i0, r1);

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void processPendingMove(com.android.server.pm.PackageManagerService$MoveParams, int)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$MoveParams r1;
        int i0;
        com.android.server.pm.PackageManagerService$12 $r2;
        com.android.server.pm.PackageManagerService$PackageHandler $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$MoveParams;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r2 = new com.android.server.pm.PackageManagerService$12;

        specialinvoke $r2.<com.android.server.pm.PackageManagerService$12: void <init>(com.android.server.pm.PackageManagerService,int,com.android.server.pm.PackageManagerService$MoveParams)>(r0, i0, r1);

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void readPermissionsFromXml(java.io.File)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1;
        java.io.FileReader r2, r87;
        java.io.IOException r3, $r78;
        org.xmlpull.v1.XmlPullParserException r4, $r79;
        org.xmlpull.v1.XmlPullParser r5;
        java.lang.String r6, r7, r9, r10, r13, r14, r16, r17, r18, $r21, $r22, $r23, $r24, $r25, $r31, $r33, $r37, $r41, $r42, $r44, $r52, $r53, $r59, $r61, $r63, $r64, $r65, $r68, $r70, $r73, $r75, $r85;
        android.content.pm.FeatureInfo r8, r99;
        java.util.HashMap r11, $r26;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r12, r97;
        int i0, i1, $i2;
        java.util.HashSet r15, r94;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r28, $r32, $r36, $r40, $r43, $r45, $r51, $r54, $r55, $r56, $r58, $r60, $r66, $r67, $r69, $r71, $r74, $r76, $r84, $r86, r88, r89, r90, r91, r92, r93, r95, r96, r98;
        android.util.SparseArray $r48, $r50;
        java.lang.Object $r49;
        int[] $r80, $r81;
        java.io.FileNotFoundException $r83;
        java.lang.Throwable r100;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.File;

     label01:
        r87 = new java.io.FileReader;

        specialinvoke r87.<java.io.FileReader: void <init>(java.io.File)>(r1);

        r2 = r87;

     label02:
        r5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r2);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r5, "permissions");

     label03:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r5);

        $i2 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 != 1 goto label06;

        virtualinvoke r2.<java.io.FileReader: void close()>();

     label04:
        return;

     label05:
        $r83 := @caughtexception;

        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find or open permissions file ");

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r85);

        return;

     label06:
        r6 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = "group";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label15;

        r18 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gid");

     label07:
        if r18 == null goto label12;

     label08:
        i1 = staticinvoke <android.os.Process: int getGidForName(java.lang.String)>(r18);

        $r81 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        $r80 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>($r81, i1);

        r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids> = $r80;

     label09:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label10:
        goto label03;

     label11:
        $r79 := @caughtexception;

        r4 = $r79;

        r100 = (java.lang.Throwable) r4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Got execption parsing permissions.", r100);

        goto label04;

     label12:
        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group> without gid at ");

        $r75 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r74 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r73);

     label13:
        goto label09;

     label14:
        $r78 := @caughtexception;

        r3 = $r78;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Got execption parsing permissions.", r3);

        goto label04;

     label15:
        $r23 = "permission";

        $z0 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label21;

        r17 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label16:
        if r17 != null goto label19;

     label17:
        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<permission> without name at ");

        $r70 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r68);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label18:
        goto label03;

     label19:
        $r63 = virtualinvoke r17.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void readPermission(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r5, $r63);

     label20:
        goto label03;

     label21:
        $r22 = "assign-permission";

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z3 == 0 goto label38;

        r13 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label22:
        if r13 != null goto label25;

     label23:
        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> without name at ");

        $r65 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r64);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label24:
        goto label03;

     label25:
        r14 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uid");

     label26:
        if r14 != null goto label29;

     label27:
        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> without uid at ");

        $r61 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r59);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label28:
        goto label03;

     label29:
        i0 = staticinvoke <android.os.Process: int getUidForName(java.lang.String)>(r14);

     label30:
        if i0 >= 0 goto label33;

     label31:
        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> with unknown uid \"");

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at ");

        $r52 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r51 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r53);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label32:
        goto label03;

     label33:
        r16 = virtualinvoke r13.<java.lang.String: java.lang.String intern()>();

        $r50 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        $r49 = virtualinvoke $r50.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r15 = (java.util.HashSet) $r49;

     label34:
        if r15 != null goto label36;

     label35:
        r94 = new java.util.HashSet;

        specialinvoke r94.<java.util.HashSet: void <init>()>();

        r15 = r94;

        $r48 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        virtualinvoke $r48.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r15);

     label36:
        virtualinvoke r15.<java.util.HashSet: boolean add(java.lang.Object)>(r16);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label37:
        goto label03;

     label38:
        $r25 = "library";

        $z2 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label48;

        r9 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r10 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "file");

     label39:
        if r9 != null goto label43;

     label40:
        r95 = new java.lang.StringBuilder;

        specialinvoke r95.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<library> without name at ");

        $r44 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r42 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r42);

     label41:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label42:
        goto label03;

     label43:
        if r10 != null goto label46;

     label44:
        r96 = new java.lang.StringBuilder;

        specialinvoke r96.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<library> without file at ");

        $r41 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r36 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r37);

     label45:
        goto label41;

     label46:
        r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        r97 = new com.android.server.pm.PackageManagerService$SharedLibraryEntry;

        specialinvoke r97.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: void <init>(java.lang.String,java.lang.String)>(r10, null);

        r12 = r97;

        virtualinvoke r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r12);

     label47:
        goto label41;

     label48:
        $r24 = "feature";

        $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z4 == 0 goto label55;

        r7 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label49:
        if r7 != null goto label53;

     label50:
        r98 = new java.lang.StringBuilder;

        specialinvoke r98.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<feature> without name at ");

        $r33 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r31);

     label51:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label52:
        goto label03;

     label53:
        r99 = new android.content.pm.FeatureInfo;

        specialinvoke r99.<android.content.pm.FeatureInfo: void <init>()>();

        r8 = r99;

        r8.<android.content.pm.FeatureInfo: java.lang.String name> = r7;

        $r26 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label54:
        goto label51;

     label55:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r5);

     label56:
        goto label03;

        catch java.io.FileNotFoundException from label01 to label02 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label11;
        catch java.io.IOException from label02 to label03 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label11;
        catch java.io.IOException from label03 to label04 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label11;
        catch java.io.IOException from label06 to label07 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label11;
        catch java.io.IOException from label08 to label09 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label11;
        catch java.io.IOException from label15 to label16 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label11;
        catch java.io.IOException from label17 to label18 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label11;
        catch java.io.IOException from label19 to label20 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label11;
        catch java.io.IOException from label21 to label22 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label11;
        catch java.io.IOException from label23 to label24 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label11;
        catch java.io.IOException from label25 to label26 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label11;
        catch java.io.IOException from label27 to label28 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label11;
        catch java.io.IOException from label29 to label30 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label11;
        catch java.io.IOException from label31 to label32 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label11;
        catch java.io.IOException from label33 to label34 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label35 to label36 with label11;
        catch java.io.IOException from label35 to label36 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label11;
        catch java.io.IOException from label36 to label37 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label11;
        catch java.io.IOException from label38 to label39 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label11;
        catch java.io.IOException from label40 to label41 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label11;
        catch java.io.IOException from label41 to label42 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label44 to label45 with label11;
        catch java.io.IOException from label44 to label45 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label46 to label47 with label11;
        catch java.io.IOException from label46 to label47 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label48 to label49 with label11;
        catch java.io.IOException from label48 to label49 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label50 to label51 with label11;
        catch java.io.IOException from label50 to label51 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label51 to label52 with label11;
        catch java.io.IOException from label51 to label52 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label53 to label54 with label11;
        catch java.io.IOException from label53 to label54 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label55 to label56 with label11;
        catch java.io.IOException from label55 to label56 with label14;
    }

    private int removeDataDirsLI(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r10, $r11;
        int[] r2;
        int i0, i1, i2, i3, i4;
        java.io.File r3, $r5, $r6;
        com.android.server.pm.UserManagerService $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        boolean $z1;
        com.android.server.pm.Installer $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r2 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i0 = 0;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        i3 = r2[i2];

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        i4 = virtualinvoke $r12.<com.android.server.pm.Installer: int remove(java.lang.String,int)>(r1, i3);

        if i4 >= 0 goto label2;

        i0 = i4;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppLibInstallDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r1);

        r3 = $r5;

        staticinvoke <com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesFromDirLI(java.io.File)>(r3);

        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t delete native library directory ");

        $r10 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

     label4:
        return i0;
    }

    static int[] removeInts(int[], int[])
    {
        int[] r0, r1;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r1 != null goto label2;

     label1:
        return r0;

     label2:
        if r0 == null goto label1;

        i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $i2 = r1[i1];

        r0 = staticinvoke <com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>(r0, $i2);

        i1 = i1 + 1;

        goto label3;
    }

    private static void removeKeystoreDataIfNeeded(int, int)
    {
        int i0, i1, i2, i3, $i5, $i6, $i7;
        android.security.KeyStore r0;
        int[] r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.server.pm.UserManagerService $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= 0 goto label2;

     label1:
        return;

     label2:
        r0 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        if r0 == null goto label5;

        if i0 != -1 goto label4;

        $r6 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r1 = virtualinvoke $r6.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i2 = lengthof r1;

        i3 = 0;

     label3:
        if i3 >= i2 goto label1;

        $i6 = r1[i3];

        $i7 = staticinvoke <android.os.UserHandle: int getUid(int,int)>($i6, i1);

        virtualinvoke r0.<android.security.KeyStore: boolean clearUid(int)>($i7);

        i3 = i3 + 1;

        goto label3;

     label4:
        $i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, i1);

        virtualinvoke r0.<android.security.KeyStore: boolean clearUid(int)>($i5);

        return;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not contact keystore to clear entries for app id ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r5);

        return;
    }

    private void removePackageDataLI(com.android.server.pm.PackageSetting, int[], boolean[], com.android.server.pm.PackageManagerService$PackageRemovedInfo, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1, r8;
        int[] r2, r9, $r18, $r24;
        boolean[] r3;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, $z2;
        java.lang.String r5, $r16, $r19;
        java.util.HashMap r6, r10, $r12;
        java.lang.Throwable r7, r11, $r22, $r25;
        com.android.server.pm.Settings $r13, $r15, $r20, $r21;
        java.lang.Object $r14;
        com.android.server.pm.SharedUserSetting $r17;
        com.android.server.pm.UserManagerService $r23;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: int[];

        r3 := @parameter2: boolean[];

        r4 := @parameter3: com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        i1 = 65536 & i0;

        z1 = 0;

        if i1 == 0 goto label01;

        z1 = 1;

     label01:
        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>(r1, z1);

        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label02:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r13.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r8 = (com.android.server.pm.PackageSetting) $r14;

     label03:
        if r4 == null goto label08;

     label04:
        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r5;

     label05:
        if r8 == null goto label18;

     label06:
        $r23 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $r24 = virtualinvoke $r23.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        r9 = virtualinvoke r8.<com.android.server.pm.PackageSetting: int[] queryInstalledUsers(int[],boolean)>($r24, 1);

     label07:
        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int[] removedUsers> = r9;

     label08:
        exitmonitor r6;

     label09:
        $i3 = i0 & 1;

        if $i3 != 0 goto label10;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>(r5);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void schedulePackageCleaning(java.lang.String,int,boolean)>(r5, -1, 1);

     label10:
        r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r10;

        if r8 == null goto label22;

        $i5 = i0 & 1;

        if $i5 != 0 goto label30;

        if r4 == null goto label12;

     label11:
        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i8 = virtualinvoke $r21.<com.android.server.pm.Settings: int removePackageLPw(java.lang.String)>(r5);

        r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId> = $i8;

     label12:
        if r8 == null goto label14;

     label13:
        $r19 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r19, null, 0);

        $r17 = r8.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r17 == null goto label14;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = r0.<com.android.server.pm.PackageManagerService: int[] mGlobalGids>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void updateSharedUserPermsLPw(com.android.server.pm.PackageSetting,int[])>(r8, $r18);

     label14:
        $r16 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>($r16, -1);

     label15:
        goto label30;

     label16:
        $i7 = lengthof r2;

        if i2 >= $i7 goto label22;

        $z2 = r3[i2];

        $i6 = r2[i2];

        virtualinvoke r1.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z2, $i6);

     label17:
        i2 = i2 + 1;

        goto label16;

     label18:
        r9 = null;

        goto label07;

     label19:
        $r22 := @caughtexception;

        r7 = $r22;

     label20:
        exitmonitor r6;

     label21:
        throw r7;

     label22:
        if z0 == 0 goto label24;

     label23:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r15.<com.android.server.pm.Settings: void writeLPr()>();

     label24:
        exitmonitor r10;

     label25:
        if r4 == null goto label26;

        $i4 = r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int removedAppId>;

        staticinvoke <com.android.server.pm.PackageManagerService: void removeKeystoreDataIfNeeded(int,int)>(-1, $i4);

     label26:
        return;

     label27:
        $r25 := @caughtexception;

        r11 = $r25;

     label28:
        exitmonitor r10;

     label29:
        throw r11;

     label30:
        if r2 == null goto label22;

        if r3 == null goto label22;

        i2 = 0;

        goto label16;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, int[], boolean[], java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2, r9, $r18;
        int i0, i1, i4, i6, i8, i9, $i10, $i12, $i14;
        android.os.UserHandle r3;
        int[] r4;
        boolean[] r5;
        java.lang.String r6, r8, $r16, $r17, $r21, $r27, $r31, $r33;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r7;
        boolean z0, z1, z2, $z3, $z4;
        long l2, $l11;
        java.io.File r10, $r15;
        byte b3, b5, b7, $b13, $b15;
        java.lang.Throwable r11, $r38;
        java.util.HashMap r12;
        java.lang.Object $r13, $r36;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r14, $r34;
        java.lang.StringBuilder $r19, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r32, $r35;
        com.android.server.pm.Settings $r20;
        com.android.server.pm.PackageSetting $r37;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.UserHandle;

        r4 := @parameter5: int[];

        r5 := @parameter6: boolean[];

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        z0 = 1;

        z1 = 0;

        $r13 = r2.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r13 == null goto label08;

        $r36 = r2.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r37 = (com.android.server.pm.PackageSetting) $r36;

        l2 = $r37.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

     label01:
        $r14 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $z3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, null, 1, null, null, 1, $r14, 1);

        if $z3 != 0 goto label09;

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -10;

        z0 = 0;

     label02:
        $i12 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i12 == 1 goto label07;

        if z1 == 0 goto label03;

        $r34 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r8, null, 1, r4, r5, 1, $r34, 1);

     label03:
        if z0 == 0 goto label07;

        $r15 = new java.io.File;

        $r16 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r16);

        r10 = $r15;

        z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        $i14 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        i4 = 2 | $i14;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z4 == 0 goto label11;

        b3 = 16;

     label04:
        i6 = i4 | b3;

        if z2 == 0 goto label12;

        b5 = 32;

     label05:
        i8 = i6 | b5;

        if z2 == 0 goto label13;

        b7 = 0;

     label06:
        $b13 = b7 | 8;

        $b15 = 64 | $b13;

        $r18 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>(r10, i8, $b15, l2, null);

        if $r18 != null goto label14;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to restore package : ");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after failed upgrade");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r27);

     label07:
        return;

     label08:
        l2 = 0L;

        goto label01;

     label09:
        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = 1;

        $i10 = i1 | 64;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r9 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r2, i0, $i10, $l11, r3);

        if r9 != null goto label10;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r31 = r2.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r33);

        i9 = r0.<com.android.server.pm.PackageManagerService: int mLastScanError>;

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = i9;

        z1 = 0;

        if i9 != 1 goto label02;

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

        z1 = 0;

        goto label02;

     label10:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSettingsLI(android.content.pm.PackageParser$Package,java.lang.String,int[],boolean[],com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r9, r6, r4, r5, r7);

        z1 = 1;

        goto label02;

     label11:
        b3 = 0;

        goto label04;

     label12:
        b5 = 0;

        goto label05;

     label13:
        b7 = 1;

        goto label06;

     label14:
        r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r12;

     label15:
        $r17 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>($r17, r1, 1);

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r12;

     label16:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully restored package : ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after failed upgrade");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r21);

        return;

     label17:
        $r38 := @caughtexception;

        r11 = $r38;

     label18:
        exitmonitor r12;

     label19:
        throw r11;

        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private void replacePackageLI(android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r8;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.os.UserHandle r2;
        java.lang.String r3, r5, $r23;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r4;
        java.util.HashMap r6, $r12, $r16;
        java.lang.Throwable r7, $r24;
        com.android.server.pm.PackageSetting r9;
        int[] r10;
        boolean[] r11;
        boolean z0, $z1;
        android.content.pm.Signature[] $r13, $r15;
        java.lang.Object $r14, $r19;
        com.android.server.pm.Settings $r17;
        com.android.server.pm.UserManagerService $r18;
        java.lang.StringBuilder $r20, $r21, $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.UserHandle;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r5 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label01:
        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r8 = (android.content.pm.PackageParser$Package) $r14;

        $r15 = r8.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r13 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i3 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r15, $r13);

        if $i3 == 0 goto label03;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New package has a different signature: ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        r4.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -104;

        exitmonitor r6;

     label02:
        return;

     label03:
        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r19 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r9 = (com.android.server.pm.PackageSetting) $r19;

        $r18 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r10 = virtualinvoke $r18.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        $i4 = lengthof r10;

        r11 = newarray (boolean)[$i4];

     label04:
        i2 = 0;

     label05:
        $i5 = lengthof r10;

        if i2 >= $i5 goto label10;

     label06:
        if r9 == null goto label16;

     label07:
        $i6 = r10[i2];

        z0 = virtualinvoke r9.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>($i6);

     label08:
        r11[i2] = z0;

     label09:
        i2 = i2 + 1;

        goto label05;

     label10:
        exitmonitor r6;

     label11:
        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r8);

        if $z1 == 0 goto label15;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void replaceSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r8, r1, i0, i1, r2, r10, r11, r3, r4);

        return;

     label12:
        $r24 := @caughtexception;

        r7 = $r24;

     label13:
        exitmonitor r6;

     label14:
        throw r7;

     label15:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r8, r1, i0, i1, r2, r10, r11, r3, r4);

        return;

     label16:
        z0 = 0;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void replaceSystemPackageLI(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package, int, int, android.os.UserHandle, int[], boolean[], java.lang.String, com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2, r11, r15;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        android.os.UserHandle r3;
        int[] r4;
        boolean[] r5;
        java.lang.String r6, r8, $r28, $r41, $r47, $r49, $r51, $r52, $r54;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r7;
        java.util.HashMap r9, r14, r18, $r22, $r23;
        java.lang.Throwable r10, r13, r17, $r58, $r59, $r61;
        com.android.server.pm.PackageSetting r12, r19;
        android.content.pm.ApplicationInfo r16, $r20, $r31, $r32, $r34, $r55, $r56, $r57;
        boolean z0, $z1;
        com.android.server.pm.Settings $r21, $r35, $r42, $r44, $r45;
        java.lang.Object $r24, $r26, $r39, $r43;
        java.lang.StringBuilder $r25, $r27, $r29, $r30, $r46, $r48, $r50;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo $r33, $r36, $r37, $r53;
        long $l12, $l13;
        com.android.server.pm.PackageManagerService$InstallArgs $r60;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.UserHandle;

        r4 := @parameter5: int[];

        r5 := @parameter6: boolean[];

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        i2 = i0 | 3;

        $r20 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = 1073741824 & $i4;

        if $i5 == 0 goto label01;

        i2 = 128 | i2;

     label01:
        r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -10;

        if r8 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to delete null packageName.");

     label02:
        return;

     label03:
        r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r9;

     label04:
        $r23 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r11 = (android.content.pm.PackageParser$Package) $r24;

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r22 = $r21.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r26 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r12 = (com.android.server.pm.PackageSetting) $r26;

     label05:
        if r11 == null goto label08;

     label06:
        $r32 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r32 == null goto label08;

     label07:
        if r12 != null goto label13;

     label08:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find package:");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" information");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        exitmonitor r9;

     label09:
        return;

     label10:
        $r58 := @caughtexception;

        r10 = $r58;

     label11:
        exitmonitor r9;

     label12:
        throw r10;

     label13:
        exitmonitor r9;

     label14:
        $r31 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r31.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>(r8, $i8, "replace sys pkg");

        $r33 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r34 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r34.<android.content.pm.ApplicationInfo: int uid>;

        $r33.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid> = $i7;

        $r36 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r36.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r8;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>(r12, 1);

        r14 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r14;

     label15:
        $r35 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z1 = virtualinvoke $r35.<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)>(r8);

        if $z1 != 0 goto label28;

     label16:
        if r1 == null goto label28;

     label17:
        $r53 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r55 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r54 = $r55.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r57 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r51 = $r57.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r56 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r52 = $r56.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r60 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(int,java.lang.String,java.lang.String,java.lang.String)>(0, $r54, $r51, $r52);

        $r53.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args> = $r60;

     label18:
        exitmonitor r14;

     label19:
        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = 1;

        r16 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = r16.<android.content.pm.ApplicationInfo: int flags>;

        $i9 = 128 | $i10;

        r16.<android.content.pm.ApplicationInfo: int flags> = $i9;

        r15 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r2, i2, i1, 0L, r3);

        if r15 != null goto label33;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package couldn\'t be installed in ");

        $r47 = r2.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r49);

        i3 = r0.<com.android.server.pm.PackageManagerService: int mLastScanError>;

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = i3;

        z0 = 0;

        if i3 != 1 goto label20;

        r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = -2;

     label20:
        $i11 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode>;

        if $i11 == 1 goto label02;

        if r15 == null goto label21;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void removeInstalledPackageLI(android.content.pm.PackageParser$Package,boolean)>(r15, 1);

     label21:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r11, i2, 9, 0L, r3);

        r18 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r18;

        if z0 == 0 goto label23;

     label22:
        $r45 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r45.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>(r8);

        $r42 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r41 = r12.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        virtualinvoke $r42.<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>(r8, $r41);

     label23:
        $r44 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r44.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r18;

     label24:
        return;

     label25:
        $r61 := @caughtexception;

        r17 = $r61;

     label26:
        exitmonitor r18;

     label27:
        throw r17;

     label28:
        $r37 = r7.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: com.android.server.pm.PackageManagerService$PackageRemovedInfo removedInfo>;

        $r37.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: com.android.server.pm.PackageManagerService$InstallArgs args> = null;

     label29:
        goto label18;

     label30:
        $r59 := @caughtexception;

        r13 = $r59;

     label31:
        exitmonitor r14;

     label32:
        throw r13;

     label33:
        $r39 = r15.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r39 == null goto label34;

        $r43 = r15.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r19 = (com.android.server.pm.PackageSetting) $r43;

        $l12 = r12.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        r19.<com.android.server.pm.PackageSetting: long firstInstallTime> = $l12;

        $l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r19.<com.android.server.pm.PackageSetting: long lastUpdateTime> = $l13;

     label34:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateSettingsLI(android.content.pm.PackageParser$Package,java.lang.String,int[],boolean[],com.android.server.pm.PackageManagerService$PackageInstalledInfo)>(r15, r6, r4, r5, r7);

        z0 = 1;

        goto label20;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    static void reportSettingsProblem(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, r4, $r13, $r14;
        java.io.File r2;
        com.android.internal.util.FastPrintWriter r3, r17;
        long $l1;
        java.lang.StringBuilder $r10, $r11, $r12, r20;
        java.io.IOException $r15;
        java.io.FileOutputStream r16;
        java.text.SimpleDateFormat r18;
        java.util.Date r19;
        java.io.PrintWriter r21, r22;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

     label1:
        r2 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File getSettingsProblemFile()>();

        r17 = new com.android.internal.util.FastPrintWriter;

        r16 = new java.io.FileOutputStream;

        specialinvoke r16.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r2, 1);

        specialinvoke r17.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r16);

        r3 = r17;

        r18 = new java.text.SimpleDateFormat;

        specialinvoke r18.<java.text.SimpleDateFormat: void <init>()>();

        r19 = new java.util.Date;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r19.<java.util.Date: void <init>(long)>($l1);

        r4 = virtualinvoke r18.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r19);

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = (java.io.PrintWriter) r3;

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        r22 = (java.io.PrintWriter) r3;

        virtualinvoke r22.<java.io.PrintWriter: void close()>();

        $r13 = virtualinvoke r2.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r13, 508, -1, -1);

     label2:
        staticinvoke <android.util.Slog: int println(int,java.lang.String,java.lang.String)>(i0, "PackageManager", r0);

        return;

     label3:
        $r15 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void scanDirLI(java.io.File, int, int, long)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, r3, $r4;
        int i0, i1, i3, $i4, $i5, $i6, $i7;
        long l2;
        java.lang.String[] r2;
        java.lang.String $r5, $r6, $r10, $r15;
        boolean $z0;
        android.content.pm.PackageParser$Package $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        if r2 != null goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No files in app dir ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageManager", $r15);

     label1:
        return;

     label2:
        i3 = 0;

     label3:
        $i4 = lengthof r2;

        if i3 >= $i4 goto label1;

        $r4 = new java.io.File;

        $r5 = r2[i3];

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r5);

        r3 = $r4;

        $r6 = r2[i3];

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isPackageFilename(java.lang.String)>($r6);

        if $z0 != 0 goto label5;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        $i5 = i0 | 4;

        $r7 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>(r3, $i5, i1, l2, null);

        if $r7 != null goto label4;

        $i6 = i0 & 1;

        if $i6 != 0 goto label4;

        $i7 = r0.<com.android.server.pm.PackageManagerService: int mLastScanError>;

        if $i7 != -2 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up failed install of ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r10);

        virtualinvoke r3.<java.io.File: boolean delete()>();

        goto label4;
    }

    private android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package, int, int, long, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r70, r76, r79, $r155, $r268, $r270, $r469, $r470, $r473;
        int i0, i1, i3, i4, i5, i6, i7, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i48, $i49, $i52, $i53, $i54, $i55, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i69, $i70, $i72, $i76, $i77, $i78, $i79, $i80, $i82, $i84, $i85, $i86, $i87, $i88, $i89, $i91, $i92, $i93, $i94, $i95, $i97, $i101, $i102, $i103, $i104, $i105, $i106, $i110, $i111, $i114, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i128, $i129, $i132, $i135, $i136, $i138, $i139, $i140, $i141, $i147;
        long l2, l8, $l66, $l98, $l100;
        android.os.UserHandle r2;
        java.io.File r3, r4, r5, r22, r87, r101, r772, r776, r777, r787, r788, r797;
        java.util.HashMap r6, r23, r26, r60, r90, r95, $r114, $r123, $r172, $r187, $r219, $r291, $r358, $r373, $r375, $r392, $r458, $r484, $r495, $r629, $r630, $r669;
        java.lang.String r7, r11, r13, r20, r21, r25, r34, r43, r45, r47, r49, r51, r55, r56, r57, r59, r64, r65, r68, r69, r80, r83, r86, r91, r94, r98, r100, $r102, $r104, $r106, $r108, $r115, $r117, $r118, $r122, $r125, $r133, $r134, $r136, $r141, $r143, $r146, $r149, $r151, $r152, $r154, $r156, $r159, $r164, $r171, $r179, $r180, $r182, $r192, $r199, $r204, $r205, $r210, $r220, $r223, $r234, $r236, $r237, $r240, $r243, $r246, $r249, $r258, $r259, $r260, $r264, $r271, $r272, $r274, $r276, $r279, $r283, $r290, $r299, $r303, $r307, $r316, $r318, $r320, $r331, $r333, $r334, $r343, $r347, $r354, $r356, $r362, $r372, $r377, $r378, $r382, $r386, $r393, $r397, $r398, $r399, $r401, $r412, $r414, $r416, $r419, $r424, $r428, $r432, $r440, $r442, $r448, $r451, $r453, $r454, $r456, $r457, $r461, $r462, $r467, $r475, $r477, $r482, $r485, $r490, $r494, $r497, $r500, $r505, $r509, $r524, $r527, $r533, $r534, $r536, $r541, $r543, $r546, $r547, $r548, $r554, $r555, $r559, $r570, $r575, $r578, $r583, $r586, $r590, $r598, $r607, $r610, $r618, $r621, $r625, $r628, $r631, $r632, $r634, $r640, $r641, $r643, $r647, $r650, $r653, $r655, $r656, $r665, $r666, $r671, $r673, $r676, $r678, $r682, $r684, $r686, $r688, $r690, $r692, $r694, $r699, $r700, $r702, $r703, $r714, $r715, $r723, $r725, $r726, $r727, $r732, $r735, $r737, $r743, $r744, $r754, $r760, $r765, $r770, $r771;
        com.android.server.pm.SharedUserSetting r8, r14, $r601, $r608, $r613, $r654, $r731;
        java.util.ArrayList r9, r27, r28, r72, r78, $r128, $r161, $r162, $r167, $r168, $r169, $r170, $r175, $r193, $r194, $r195, $r196, $r203, $r232, $r294, $r326, $r339, $r370, $r407, $r437, $r439, $r466, $r468, $r472, $r558, $r561, $r637, $r638, $r658, $r659, $r660, r803;
        java.lang.Throwable r10, r24, r31, r82, r89, r96, $r707, $r708, $r709, $r710, $r721, $r722, r824;
        com.android.server.pm.PackageSetting r12, r15, r77, r99;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z22, $z23, $z24, $z25, $z26, $z27, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z52, $z53, $z54;
        java.lang.String[] r16, r39;
        android.content.pm.PackageParser$Provider r17, r18, r35, r36, r37, r38, r805;
        java.lang.StringBuilder r19, r32, r40, r42, r44, r50, r54, r62, r66, $r116, $r119, $r120, $r142, $r144, $r233, $r241, $r242, $r244, $r245, $r248, $r251, $r252, $r261, $r262, $r265, $r266, $r267, $r275, $r277, $r278, $r281, $r282, $r285, $r287, $r296, $r298, $r301, $r302, $r305, $r306, $r344, $r345, $r348, $r349, $r355, $r379, $r381, $r383, $r384, $r387, $r449, $r452, $r455, $r483, $r488, $r489, $r491, $r492, $r499, $r501, $r502, $r503, $r504, $r506, $r507, $r510, $r511, $r512, $r513, $r517, $r518, $r520, $r530, $r531, $r532, $r537, $r538, $r549, $r550, $r551, $r564, $r569, $r571, $r572, $r574, $r576, $r577, $r581, $r584, $r585, $r587, $r591, $r592, $r593, $r595, $r596, $r597, $r600, $r605, $r606, $r611, $r617, $r619, $r622, $r623, $r624, $r642, $r644, $r645, $r646, $r648, $r649, $r651, $r652, $r663, $r664, $r670, $r672, $r679, $r680, $r681, $r683, $r685, $r687, $r693, $r697, $r701, $r706, $r711, $r716, $r717, $r724, $r730, $r733, $r734, $r736, $r742, $r745, $r762, $r763, r773, r775, r778, r779, r780, r781, r782, r783, r784, r785, r786, r789, r790, r791, r792, r793, r794, r795, r796, r798, r799, r801, r802, r804, r806, r807, r808, r809, r810, r811, r812, r813, r814, r815, r817, r818, r819, r820, r821, r822, r823;
        com.android.server.pm.KeySetManager r29;
        java.util.Iterator r30, r74;
        java.lang.IllegalArgumentException r33, $r712;
        android.content.pm.PackageParser$Service r41;
        android.content.pm.PackageParser$Activity r46, r48;
        android.content.pm.PackageParser$PermissionGroup r52, r53, $r225, $r297, $r308;
        com.android.server.pm.BasePermission r58, r63, r816;
        android.content.pm.PackageParser$Permission r61, $r211, $r213;
        android.content.pm.PackageParser$Instrumentation r67;
        int[] r71, r84;
        java.lang.NullPointerException r73, $r705;
        java.util.Map$Entry r75;
        java.lang.Object r81, $r197, $r202, $r212, $r218, $r231, $r292, $r295, $r323, $r338, $r365, $r376, $r408, $r435, $r438, $r441, $r443, $r444, $r459, $r463, $r465, $r471, $r560, $r626, $r636, $r661, $r668;
        android.content.pm.ApplicationInfo r85, r97, $r105, $r107, r110, r111, $r113, $r127, $r129, $r130, $r131, $r132, $r137, $r138, $r145, $r147, $r148, $r150, $r153, $r157, $r158, $r174, $r181, $r183, $r184, $r189, $r198, $r208, $r322, $r324, $r335, $r337, $r364, $r366, $r385, $r409, $r411, $r426, $r427, $r429, $r431, $r433, $r434, $r474, $r480, $r508, $r519, $r521, $r522, $r523, $r526, $r528, $r535, $r544, $r545, $r552, $r556, $r565, $r566, $r573, $r579, $r580, $r594, $r620, $r738, $r739, $r741, $r755, $r767;
        java.io.IOException r88, r93, $r718, $r720;
        libcore.io.ErrnoException r92, $r695;
        android.content.ComponentName $r103, $r186, $r388, $r389, $r615, $r616, $r698, r774;
        com.android.server.pm.Settings $r124, $r140, $r166, $r173, $r177, $r230, $r293, $r498, $r514, $r515, $r562, $r639, $r662, $r667, $r728;
        com.android.server.pm.PackageSettingBase $r126;
        java.util.HashSet $r139, $r201, $r677, $r691;
        java.util.Map $r163, $r447;
        java.util.Set $r165, $r446, $r464;
        byte $b67, $b68, $b96, $b99;
        android.content.pm.InstrumentationInfo $r178, $r185, $r190, $r191, $r200, $r228;
        android.content.pm.PermissionInfo $r209, $r215, $r216, $r221, $r222, $r224, $r235, $r239, $r250, $r255, $r256, $r263, $r273, $r280, $r284, $r300, $r304, $r311, $r312, $r313;
        android.content.pm.PermissionGroupInfo $r288, $r289, $r346, $r350, $r353, $r363, $r369;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r317, $r330;
        android.content.pm.ActivityInfo $r319, $r321, $r327, $r332, $r342, $r367, $r740, $r746, $r747, $r748, $r749, $r752, $r757, $r758, $r759, $r761, $r766;
        android.content.pm.ServiceInfo $r336, $r400, $r404;
        android.content.pm.ProviderInfo $r374, $r390, $r394, $r395, $r410, $r413, $r417, $r418, $r420, $r425, $r450, $r633, $r635;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r402;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r415;
        android.content.pm.PackageCleanItem $r460;
        com.android.server.pm.Installer $r478, $r567;
        com.android.server.pm.UserManagerService $r481;
        libcore.io.StructStat $r540;
        libcore.io.Os $r542;
        com.android.server.pm.PackageSignatures $r602, $r614;
        android.content.pm.Signature[] $r603, $r604, $r612;
        android.content.pm.ResolveInfo $r750, $r751, $r753, $r769;
        java.lang.Class $r756;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r800;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 := @parameter4: android.os.UserHandle;

        r772 = new java.io.File;

        $r108 = r1.<android.content.pm.PackageParser$Package: java.lang.String mScanPath>;

        specialinvoke r772.<java.io.File: void <init>(java.lang.String)>($r108);

        r3 = r772;

        if r3 == null goto label001;

        $r107 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r106 = $r107.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        if $r106 == null goto label001;

        $r105 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r104 = $r105.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        if $r104 != null goto label002;

     label001:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", " Code and resource paths haven\'t been set correctly");

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -2;

        return null;

     label002:
        $i49 = i0 & 1;

        if $i49 == 0 goto label003;

        r110 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i140 = r110.<android.content.pm.ApplicationInfo: int flags>;

        $i141 = 1 | $i140;

        r110.<android.content.pm.ApplicationInfo: int flags> = $i141;

     label003:
        $i48 = i0 & 128;

        if $i48 == 0 goto label004;

        r111 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i138 = r111.<android.content.pm.ApplicationInfo: int flags>;

        $i139 = 1073741824 | $i138;

        r111.<android.content.pm.ApplicationInfo: int flags> = $i139;

     label004:
        $r103 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        if $r103 == null goto label005;

        $r698 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        $r699 = virtualinvoke $r698.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r700 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z52 = virtualinvoke $r699.<java.lang.String: boolean equals(java.lang.Object)>($r700);

        if $z52 == 0 goto label005;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setUpCustomResolverActivity(android.content.pm.PackageParser$Package)>(r1);

     label005:
        $r102 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z9 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z9 == 0 goto label013;

        r95 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r95;

     label006:
        $r738 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        if $r738 == null goto label011;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Core android package being redefined.  Skipping.");

        r773 = new java.lang.StringBuilder;

        specialinvoke r773.<java.lang.StringBuilder: void <init>()>();

        $r763 = virtualinvoke r773.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r762 = virtualinvoke $r763.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r765 = virtualinvoke $r762.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r765);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "*************************************************");

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -5;

        exitmonitor r95;

     label007:
        return null;

     label008:
        $r710 := @caughtexception;

        r96 = $r710;

     label009:
        exitmonitor r95;

     label010:
        throw r96;

     label011:
        r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage> = r1;

        $i147 = r0.<com.android.server.pm.PackageManagerService: int mSdkVersion>;

        r1.<android.content.pm.PackageParser$Package: int mVersionCode> = $i147;

        $r739 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication> = $r739;

        $z53 = r0.<com.android.server.pm.PackageManagerService: boolean mResolverReplaced>;

        if $z53 != 0 goto label012;

        $r740 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r741 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r740.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r741;

        $r757 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r756 = class "com/android/internal/app/ResolverActivity";

        $r754 = virtualinvoke $r756.<java.lang.Class: java.lang.String getName()>();

        $r757.<android.content.pm.ActivityInfo: java.lang.String name> = $r754;

        $r761 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r755 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r760 = $r755.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r761.<android.content.pm.ActivityInfo: java.lang.String packageName> = $r760;

        $r758 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r758.<android.content.pm.ActivityInfo: java.lang.String processName> = "system:ui";

        $r759 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r759.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r748 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r748.<android.content.pm.ActivityInfo: int flags> = 32;

        $r749 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r749.<android.content.pm.ActivityInfo: int theme> = 16974606;

        $r746 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r746.<android.content.pm.ActivityInfo: boolean exported> = 1;

        $r747 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r747.<android.content.pm.ActivityInfo: boolean enabled> = 1;

        $r753 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r752 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r753.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r752;

        $r750 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r750.<android.content.pm.ResolveInfo: int priority> = 0;

        $r751 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r751.<android.content.pm.ResolveInfo: int preferredOrder> = 0;

        $r769 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r769.<android.content.pm.ResolveInfo: int match> = 0;

        r774 = new android.content.ComponentName;

        $r767 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        $r770 = $r767.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r766 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r771 = $r766.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r774.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r770, $r771);

        r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName> = r774;

     label012:
        exitmonitor r95;

     label013:
        $r123 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r122 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z11 = virtualinvoke $r123.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r122);

        if $z11 != 0 goto label014;

        $r114 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r115 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z10 = virtualinvoke $r114.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r115);

        if $z10 == 0 goto label015;

     label014:
        r775 = new java.lang.StringBuilder;

        specialinvoke r775.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke r775.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application package ");

        $r118 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r116 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already installed.  Skipping duplicate.");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r117);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -5;

        return null;

     label015:
        r776 = new java.io.File;

        $r113 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r134 = $r113.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke r776.<java.io.File: void <init>(java.lang.String)>($r134);

        r4 = r776;

        r777 = new java.io.File;

        $r132 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r133 = $r132.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        specialinvoke r777.<java.io.File: void <init>(java.lang.String)>($r133);

        r5 = r777;

        $z15 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z15 != 0 goto label016;

        r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages> = null;

        r1.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage> = null;

        r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions> = null;

     label016:
        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

        $i55 = i0 & 64;

        if $i55 != 0 goto label022;

     label017:
        $z54 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean updateSharedLibrariesLPw(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r1, null);

        if $z54 != 0 goto label022;

        exitmonitor r6;

     label018:
        return null;

     label019:
        $r709 := @caughtexception;

        r10 = $r709;

     label020:
        exitmonitor r6;

     label021:
        throw r10;

     label022:
        r7 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

     label023:
        r8 = null;

        if r7 == null goto label028;

     label024:
        $r728 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r727 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        r8 = virtualinvoke $r728.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)>($r727, 0, 1);

     label025:
        if r8 != null goto label028;

     label026:
        r778 = new java.lang.StringBuilder;

        specialinvoke r778.<java.lang.StringBuilder: void <init>()>();

        $r730 = virtualinvoke r778.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating application package ");

        $r743 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r742 = virtualinvoke $r730.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r743);

        $r745 = virtualinvoke $r742.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for shared user failed");

        $r744 = virtualinvoke $r745.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r744);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -4;

        exitmonitor r6;

     label027:
        return null;

     label028:
        r9 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

     label029:
        r12 = null;

        r11 = null;

        if r9 == null goto label033;

     label030:
        $r667 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r669 = $r667.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r666 = r1.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage>;

        $r668 = virtualinvoke $r669.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r666);

        r13 = (java.lang.String) $r668;

        $r658 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $z49 = virtualinvoke $r658.<java.util.ArrayList: boolean contains(java.lang.Object)>(r13);

        if $z49 == 0 goto label038;

        r11 = r1.<android.content.pm.PackageParser$Package: java.lang.String mRealPackage>;

        $r726 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        z8 = virtualinvoke $r726.<java.lang.String: boolean equals(java.lang.Object)>(r13);

     label031:
        r12 = null;

        if z8 != 0 goto label033;

     label032:
        virtualinvoke r1.<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>(r13);

     label033:
        $r139 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages>;

        $r136 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z16 = virtualinvoke $r139.<java.util.HashSet: boolean contains(java.lang.Object)>($r136);

        if $z16 == 0 goto label034;

        r779 = new java.lang.StringBuilder;

        specialinvoke r779.<java.lang.StringBuilder: void <init>()>();

        $r672 = virtualinvoke r779.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r673 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r664 = virtualinvoke $r672.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r673);

        $r663 = virtualinvoke $r664.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was transferred to another, but its .apk remains");

        $r665 = virtualinvoke $r663.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r665);

     label034:
        $r140 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r137 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r141 = $r137.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r138 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i56 = $r138.<android.content.pm.ApplicationInfo: int flags>;

        r15 = virtualinvoke $r140.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,int,android.os.UserHandle,boolean)>(r1, r12, r11, r8, r4, r5, $r141, $i56, r2, 0);

     label035:
        if r15 != null goto label050;

     label036:
        r780 = new java.lang.StringBuilder;

        specialinvoke r780.<java.lang.StringBuilder: void <init>()>();

        $r680 = virtualinvoke r780.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating application package ");

        $r678 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r679 = virtualinvoke $r680.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r678);

        $r670 = virtualinvoke $r679.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r671 = virtualinvoke $r670.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r671);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -4;

        exitmonitor r6;

     label037:
        return null;

     label038:
        $r659 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $i132 = virtualinvoke $r659.<java.util.ArrayList: int size()>();

        i3 = -1 + $i132;

     label039:
        r11 = null;

        if i3 < 0 goto label033;

     label040:
        $r662 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r660 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        $r661 = virtualinvoke $r660.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r653 = (java.lang.String) $r661;

        r12 = virtualinvoke $r662.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>($r653);

     label041:
        if r12 == null goto label326;

     label042:
        $z48 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean verifyPackageUpdateLPr(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r12, r1);

        if $z48 != 0 goto label044;

     label043:
        r12 = null;

        goto label326;

     label044:
        r14 = r12.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label045:
        r11 = null;

        if r14 == null goto label033;

     label046:
        $r654 = r12.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r656 = $r654.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r655 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        z0 = virtualinvoke $r656.<java.lang.String: boolean equals(java.lang.Object)>($r655);

     label047:
        r11 = null;

        if z0 != 0 goto label033;

     label048:
        r781 = new java.lang.StringBuilder;

        specialinvoke r781.<java.lang.StringBuilder: void <init>()>();

        $r646 = virtualinvoke r781.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to migrate data from ");

        $r647 = r12.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r648 = virtualinvoke $r646.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r647);

        $r649 = virtualinvoke $r648.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r650 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r651 = virtualinvoke $r649.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r650);

        $r652 = virtualinvoke $r651.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": old uid ");

        $r731 = r12.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r732 = $r731.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r733 = virtualinvoke $r652.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r732);

        $r734 = virtualinvoke $r733.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" differs from ");

        $r735 = r1.<android.content.pm.PackageParser$Package: java.lang.String mSharedUserId>;

        $r736 = virtualinvoke $r734.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r735);

        $r737 = virtualinvoke $r736.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r737);

     label049:
        r12 = null;

        goto label326;

     label050:
        $r126 = r15.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSettingBase origPackage>;

        if $r126 == null goto label051;

        $r690 = r12.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke r1.<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>($r690);

        r782 = new java.lang.StringBuilder;

        specialinvoke r782.<java.lang.StringBuilder: void <init>()>();

        $r683 = virtualinvoke r782.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New package ");

        $r682 = r15.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        $r681 = virtualinvoke $r683.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r682);

        $r687 = virtualinvoke $r681.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" renamed to replace old package ");

        $r686 = r15.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r685 = virtualinvoke $r687.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r686);

        $r684 = virtualinvoke $r685.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r684);

        $r677 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages>;

        $r676 = r12.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r677.<java.util.HashSet: boolean add(java.lang.Object)>($r676);

        r15.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSettingBase origPackage> = null;

     label051:
        if r11 == null goto label053;

     label052:
        $r691 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mTransferedPackages>;

        $r688 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r691.<java.util.HashSet: boolean add(java.lang.Object)>($r688);

     label053:
        $r124 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r125 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z12 = virtualinvoke $r124.<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>($r125);

        if $z12 == 0 goto label054;

        r97 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i136 = r97.<android.content.pm.ApplicationInfo: int flags>;

        $i135 = 128 | $i136;

        r97.<android.content.pm.ApplicationInfo: int flags> = $i135;

     label054:
        $z14 = r0.<com.android.server.pm.PackageManagerService: boolean mFoundPolicyFile>;

        if $z14 == 0 goto label055;

        staticinvoke <com.android.server.pm.SELinuxMMAC: void assignSeinfoValue(android.content.pm.PackageParser$Package)>(r1);

     label055:
        $r127 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i52 = r15.<com.android.server.pm.PackageSetting: int appId>;

        $r127.<android.content.pm.ApplicationInfo: int uid> = $i52;

        r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras> = r15;

        $z13 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean verifySignaturesLP(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r15, r1);

        if $z13 != 0 goto label062;

     label056:
        $i129 = i0 & 64;

        if $i129 != 0 goto label059;

     label057:
        exitmonitor r6;

     label058:
        return null;

     label059:
        $r614 = r15.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r612 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r614.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures> = $r612;

        $r613 = r15.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r613 == null goto label061;

        $r608 = r15.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r602 = $r608.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r604 = $r602.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r603 = r1.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i128 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r604, $r603);

        if $i128 == 0 goto label061;

        r783 = new java.lang.StringBuilder;

        specialinvoke r783.<java.lang.StringBuilder: void <init>()>();

        $r600 = virtualinvoke r783.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature mismatch for shared user : ");

        $r601 = r15.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r597 = virtualinvoke $r600.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r601);

        $r598 = virtualinvoke $r597.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r598);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -104;

        exitmonitor r6;

     label060:
        return null;

     label061:
        r784 = new java.lang.StringBuilder;

        specialinvoke r784.<java.lang.StringBuilder: void <init>()>();

        $r611 = virtualinvoke r784.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System package ");

        $r610 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r605 = virtualinvoke $r611.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r610);

        $r606 = virtualinvoke $r605.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signature changed; retaining data.");

        $r607 = virtualinvoke $r606.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r607);

     label062:
        $i53 = i1 & 16;

        if $i53 == 0 goto label075;

     label063:
        $r638 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i5 = virtualinvoke $r638.<java.util.ArrayList: int size()>();

     label064:
        i4 = 0;

     label065:
        if i4 >= i5 goto label075;

     label066:
        $r637 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r636 = virtualinvoke $r637.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r17 = (android.content.pm.PackageParser$Provider) $r636;

        $r635 = r17.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r634 = $r635.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r634 == null goto label329;

        $r633 = r17.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r632 = $r633.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r16 = virtualinvoke $r632.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label067:
        i6 = 0;

     label068:
        i7 = lengthof r16;

     label069:
        if i6 >= i7 goto label329;

     label070:
        $r630 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r631 = r16[i6];

        $z47 = virtualinvoke $r630.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r631);

        if $z47 == 0 goto label328;

        $r629 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r628 = r16[i6];

        $r626 = virtualinvoke $r629.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r628);

        r18 = (android.content.pm.PackageParser$Provider) $r626;

        r785 = new java.lang.StringBuilder;

        specialinvoke r785.<java.lang.StringBuilder: void <init>()>();

        $r624 = virtualinvoke r785.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t install because provider name ");

        $r625 = r16[i6];

        $r622 = virtualinvoke $r624.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r625);

        $r623 = virtualinvoke $r622.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in package ");

        $r620 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r621 = $r620.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r619 = virtualinvoke $r623.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r621);

        r19 = virtualinvoke $r619.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is already used by ");

     label071:
        if r18 == null goto label327;

     label072:
        $r615 = virtualinvoke r18.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        if $r615 == null goto label327;

        $r616 = virtualinvoke r18.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        r21 = virtualinvoke $r616.<android.content.ComponentName: java.lang.String getPackageName()>();

     label073:
        $r617 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r618 = virtualinvoke $r617.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r618);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -13;

        exitmonitor r6;

     label074:
        return null;

     label075:
        $r128 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        if $r128 == null goto label081;

        $r558 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        $i116 = virtualinvoke $r558.<java.util.ArrayList: int size()>();

        i47 = -1 + $i116;

     label076:
        if i47 < 0 goto label081;

     label077:
        $r561 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList mAdoptPermissions>;

        $r560 = virtualinvoke $r561.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        r98 = (java.lang.String) $r560;

        $r562 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r99 = virtualinvoke $r562.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>(r98);

     label078:
        if r99 == null goto label330;

     label079:
        $z45 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean verifyPackageUpdateLPr(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r99, r1);

        if $z45 == 0 goto label330;

        r786 = new java.lang.StringBuilder;

        specialinvoke r786.<java.lang.StringBuilder: void <init>()>();

        $r564 = virtualinvoke r786.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adopting permissions from ");

        $r645 = virtualinvoke $r564.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r644 = virtualinvoke $r645.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r643 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r642 = virtualinvoke $r644.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r643);

        $r641 = virtualinvoke $r642.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r641);

        $r639 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r640 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r639.<com.android.server.pm.Settings: void transferPermissionsLPw(java.lang.String,java.lang.String)>(r98, $r640);

     label080:
        goto label330;

     label081:
        exitmonitor r6;

     label082:
        r20 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        l8 = virtualinvoke r3.<java.io.File: long lastModified()>();

        $i54 = i1 & 4;

        if $i54 == 0 goto label089;

        z1 = 1;

     label083:
        $r153 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r131 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r152 = $r131.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r130 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r151 = $r130.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r129 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i60 = $r129.<android.content.pm.ApplicationInfo: int uid>;

        $r154 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r152, $r151, $i60);

        $r153.<android.content.pm.ApplicationInfo: java.lang.String processName> = $r154;

        $r155 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package mPlatformPackage>;

        if $r155 != r1 goto label090;

        r101 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r787 = new java.io.File;

        specialinvoke r787.<java.io.File: void <init>(java.io.File,java.lang.String)>(r101, "system");

        r22 = r787;

        $r556 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r559 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r556.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r559;

     label084:
        r25 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r148 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r149 = $r148.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        if $r149 == null goto label086;

     label085:
        $r480 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r86 = $r480.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        r788 = new java.io.File;

        specialinvoke r788.<java.io.File: void <init>(java.lang.String)>(r86);

        r87 = r788;

        r83 = virtualinvoke r22.<java.io.File: java.lang.String getCanonicalPath()>();

        $z36 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z36 == 0 goto label115;

        $z42 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z42 != 0 goto label115;

        $z43 = staticinvoke <com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesFromDirLI(java.io.File)>(r87);

        if $z43 == 0 goto label086;

        r789 = new java.lang.StringBuilder;

        specialinvoke r789.<java.lang.StringBuilder: void <init>()>();

        $r538 = virtualinvoke r789.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removed obsolete native libraries for system package ");

        $r537 = virtualinvoke $r538.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r536 = virtualinvoke $r537.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r536);

     label086:
        r1.<android.content.pm.PackageParser$Package: java.lang.String mScanPath> = r25;

        $i58 = i1 & 2;

        if $i58 != 0 goto label134;

        $i105 = i1 & 128;

        if $i105 == 0 goto label133;

        z6 = 1;

     label087:
        $i104 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,boolean,boolean,boolean)>(r1, z1, z6, 0);

        if $i104 != -1 goto label134;

        $i103 = i1 & 512;

        if $i103 == 0 goto label088;

        $r467 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r467);

     label088:
        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -11;

        return null;

     label089:
        z1 = 0;

        goto label083;

     label090:
        $r156 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r22 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.io.File getDataPathForPackage(java.lang.String,int)>($r156, 0);

        $z18 = virtualinvoke r22.<java.io.File: boolean exists()>();

        if $z18 == 0 goto label111;

     label091:
        $r542 = <libcore.io.Libcore: libcore.io.Os os>;

        $r541 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r540 = interfaceinvoke $r542.<libcore.io.Os: libcore.io.StructStat stat(java.lang.String)>($r541);

        i45 = $r540.<libcore.io.StructStat: int st_uid>;

     label092:
        $r522 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i44 = $r522.<android.content.pm.ApplicationInfo: int uid>;

        i43 = i45;

        z2 = 0;

        if i43 == i44 goto label104;

        z7 = 0;

        if i45 != 0 goto label093;

        $r567 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r565 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i119 = $r565.<android.content.pm.ApplicationInfo: int uid>;

        $r566 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i118 = $r566.<android.content.pm.ApplicationInfo: int uid>;

        i46 = virtualinvoke $r567.<com.android.server.pm.Installer: int fixUid(java.lang.String,int,int)>(r20, $i119, $i118);

        z7 = 0;

        if i46 < 0 goto label093;

        z7 = 1;

        r790 = new java.lang.StringBuilder;

        specialinvoke r790.<java.lang.StringBuilder: void <init>()>();

        $r569 = virtualinvoke r790.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r570 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r571 = virtualinvoke $r569.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r570);

        $r572 = virtualinvoke $r571.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unexpectedly changed to uid 0; recovered to ");

        $r573 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i120 = $r573.<android.content.pm.ApplicationInfo: int uid>;

        $r574 = virtualinvoke $r572.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i120);

        $r555 = virtualinvoke $r574.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r555);

     label093:
        if z7 != 0 goto label107;

        $i125 = i0 & 1;

        if $i125 != 0 goto label094;

        $i117 = i1 & 256;

        if $i117 == 0 goto label107;

     label094:
        $i126 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>(r20);

        if $i126 < 0 goto label098;

        $i124 = i0 & 1;

        if $i124 == 0 goto label097;

        r100 = "System package ";

     label095:
        r791 = new java.lang.StringBuilder;

        specialinvoke r791.<java.lang.StringBuilder: void <init>()>();

        $r592 = virtualinvoke r791.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100);

        $r590 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r591 = virtualinvoke $r592.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r590);

        $r595 = virtualinvoke $r591.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has changed from uid: ");

        $r596 = virtualinvoke $r595.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        $r593 = virtualinvoke $r596.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r594 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i121 = $r594.<android.content.pm.ApplicationInfo: int uid>;

        $r577 = virtualinvoke $r593.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i121);

        $r576 = virtualinvoke $r577.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; old data erased");

        $r575 = virtualinvoke $r576.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r575);

        z7 = 1;

        $r580 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i122 = $r580.<android.content.pm.ApplicationInfo: int uid>;

        $r579 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r578 = $r579.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        $i123 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int createDataDirsLI(java.lang.String,int,java.lang.String)>(r20, $i122, $r578);

        if $i123 != -1 goto label098;

        r792 = new java.lang.StringBuilder;

        specialinvoke r792.<java.lang.StringBuilder: void <init>()>();

        $r581 = virtualinvoke r792.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100);

        $r586 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r585 = virtualinvoke $r581.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r586);

        $r584 = virtualinvoke $r585.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not have data directory re-created after delete.");

        $r583 = virtualinvoke $r584.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(5, $r583);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -4;

        return null;

     label096:
        $r695 := @caughtexception;

        r92 = $r695;

        r793 = new java.lang.StringBuilder;

        specialinvoke r793.<java.lang.StringBuilder: void <init>()>();

        $r697 = virtualinvoke r793.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t stat path ");

        $r692 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r693 = virtualinvoke $r697.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r692);

        $r694 = virtualinvoke $r693.<java.lang.StringBuilder: java.lang.String toString()>();

        r824 = (java.lang.Throwable) r92;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r694, r824);

        i45 = 0;

        goto label092;

     label097:
        r100 = "Third party package ";

        goto label095;

     label098:
        if z7 != 0 goto label099;

        r0.<com.android.server.pm.PackageManagerService: boolean mHasSystemUidErrors> = 1;

     label099:
        z2 = 0;

        if z7 != 0 goto label104;

        $r519 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r794 = new java.lang.StringBuilder;

        specialinvoke r794.<java.lang.StringBuilder: void <init>()>();

        $r520 = virtualinvoke r794.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mismatched_uid/settings_");

        $r521 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i111 = $r521.<android.content.pm.ApplicationInfo: int uid>;

        $r530 = virtualinvoke $r520.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i111);

        $r531 = virtualinvoke $r530.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/fs_");

        $r532 = virtualinvoke $r531.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        $r533 = virtualinvoke $r532.<java.lang.StringBuilder: java.lang.String toString()>();

        $r519.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r533;

        $r528 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r526 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r527 = $r526.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r528.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r527;

        r795 = new java.lang.StringBuilder;

        specialinvoke r795.<java.lang.StringBuilder: void <init>()>();

        $r510 = virtualinvoke r795.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r509 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r512 = virtualinvoke $r510.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r509);

        $r511 = virtualinvoke $r512.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has mismatched uid: ");

        $r507 = virtualinvoke $r511.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        $r506 = virtualinvoke $r507.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on disk, ");

        $r508 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i110 = $r508.<android.content.pm.ApplicationInfo: int uid>;

        $r518 = virtualinvoke $r506.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i110);

        $r517 = virtualinvoke $r518.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in settings");

        r91 = virtualinvoke $r517.<java.lang.StringBuilder: java.lang.String toString()>();

        r90 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r90;

     label100:
        $r514 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r513 = $r514.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r513.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r91);

        $r515 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r587 = $r515.<com.android.server.pm.Settings: java.lang.StringBuilder mReadMessages>;

        virtualinvoke $r587.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label101:
        z2 = 1;

     label102:
        $z46 = r15.<com.android.server.pm.PackageSetting: boolean uidError>;

        if $z46 != 0 goto label103;

        staticinvoke <com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>(6, r91);

     label103:
        exitmonitor r90;

     label104:
        $r523 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r524 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r523.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r524;

     label105:
        $r147 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r146 = $r147.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        if $r146 != null goto label106;

        $r535 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r534 = $r535.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        if $r534 == null goto label106;

        $r547 = r15.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        if $r547 != null goto label114;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setInternalAppNativeLibraryPath(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting)>(r1, r15);

     label106:
        r15.<com.android.server.pm.PackageSetting: boolean uidError> = z2;

        goto label084;

     label107:
        if z7 != 0 goto label099;

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -24;

        return null;

     label108:
        $r721 := @caughtexception;

        r89 = $r721;

     label109:
        exitmonitor r90;

     label110:
        throw r89;

     label111:
        $r157 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i61 = $r157.<android.content.pm.ApplicationInfo: int uid>;

        $r158 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r159 = $r158.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        $i62 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int createDataDirsLI(java.lang.String,int,java.lang.String)>(r20, $i61, $r159);

        if $i62 >= 0 goto label112;

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -4;

        return null;

     label112:
        $z19 = virtualinvoke r22.<java.io.File: boolean exists()>();

        if $z19 == 0 goto label113;

        $r544 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r543 = virtualinvoke r22.<java.io.File: java.lang.String getPath()>();

        $r544.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r543;

        z2 = 0;

        goto label105;

     label113:
        r796 = new java.lang.StringBuilder;

        specialinvoke r796.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke r796.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create data directory: ");

        $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r143);

        $r145 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r145.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = null;

        z2 = 0;

        goto label105;

     label114:
        $r545 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r546 = r15.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        $r545.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r546;

        goto label106;

     label115:
        $z37 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z37 != 0 goto label121;

        $z41 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z41 != 0 goto label121;

        $r554 = virtualinvoke r87.<java.io.File: java.lang.String getPath()>();

        $z44 = virtualinvoke $r554.<java.lang.String: boolean startsWith(java.lang.String)>(r83);

        if $z44 == 0 goto label116;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setInternalAppNativeLibraryPath(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting)>(r1, r15);

        $r552 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r94 = $r552.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        r797 = new java.io.File;

        specialinvoke r797.<java.io.File: void <init>(java.lang.String)>(r94);

        r87 = r797;

     label116:
        $i114 = staticinvoke <com.android.server.pm.PackageManagerService: int copyNativeLibrariesForInternalApp(java.io.File,java.io.File)>(r3, r87);

        if $i114 == 1 goto label121;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", "Unable to copy native libraries");

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -110;

     label117:
        return null;

     label118:
        $r720 := @caughtexception;

        r93 = $r720;

     label119:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to copy native libraries", r93);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -110;

     label120:
        return null;

     label121:
        $r481 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r84 = virtualinvoke $r481.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        r81 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r81;

     label122:
        i40 = lengthof r84;

     label123:
        i41 = 0;

     label124:
        if i41 >= i40 goto label127;

     label125:
        i39 = r84[i41];

        $r478 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $r477 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r474 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r475 = $r474.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $i106 = virtualinvoke $r478.<com.android.server.pm.Installer: int linkNativeLibraryDirectory(java.lang.String,java.lang.String,int)>($r477, $r475, i39);

        if $i106 >= 0 goto label331;

        r798 = new java.lang.StringBuilder;

        specialinvoke r798.<java.lang.StringBuilder: void <init>()>();

        $r551 = virtualinvoke r798.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed linking native library dir (user=");

        $r549 = virtualinvoke $r551.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i39);

        $r550 = virtualinvoke $r549.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r548 = virtualinvoke $r550.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r548);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -110;

        exitmonitor r81;

     label126:
        return null;

     label127:
        exitmonitor r81;

     label128:
        goto label086;

     label129:
        $r707 := @caughtexception;

        r82 = $r707;

     label130:
        exitmonitor r81;

     label131:
        throw r82;

     label132:
        $r718 := @caughtexception;

        r88 = $r718;

        r799 = new java.lang.StringBuilder;

        specialinvoke r799.<java.lang.StringBuilder: void <init>()>();

        $r717 = virtualinvoke r799.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get canonical file ");

        $r715 = virtualinvoke r88.<java.io.IOException: java.lang.String toString()>();

        $r716 = virtualinvoke $r717.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r715);

        $r714 = virtualinvoke $r716.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r714);

        goto label086;

     label133:
        z6 = 0;

        goto label087;

     label134:
        $z17 = r0.<com.android.server.pm.PackageManagerService: boolean mFactoryTest>;

        if $z17 == 0 goto label135;

        $r466 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList requestedPermissions>;

        $z34 = virtualinvoke $r466.<java.util.ArrayList: boolean contains(java.lang.Object)>("android.permission.FACTORY_TEST");

        if $z34 == 0 goto label135;

        r85 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i102 = r85.<android.content.pm.ApplicationInfo: int flags>;

        $i101 = 16 | $i102;

        r85.<android.content.pm.ApplicationInfo: int flags> = $i101;

     label135:
        r23 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r23;

     label136:
        $r150 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i59 = $r150.<android.content.pm.ApplicationInfo: int flags>;

        i9 = 1 & $i59;

     label137:
        r28 = null;

        if i9 == 0 goto label162;

     label138:
        r27 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

     label139:
        r28 = null;

        if r27 == null goto label162;

        i37 = 0;

     label140:
        $r439 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        i38 = virtualinvoke $r439.<java.util.ArrayList: int size()>();

     label141:
        if i37 >= i38 goto label160;

     label142:
        $r437 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r438 = virtualinvoke $r437.<java.util.ArrayList: java.lang.Object get(int)>(i37);

        r80 = (java.lang.String) $r438;

        $z40 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z40 == 0 goto label334;

        $r498 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r497 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r77 = virtualinvoke $r498.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>($r497);

        r76 = r77.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label143:
        z5 = 0;

        if r76 == null goto label150;

     label144:
        $r470 = r77.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r78 = $r470.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

     label145:
        z5 = 0;

        if r78 == null goto label150;

        i36 = 0;

     label146:
        $r469 = r77.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r468 = $r469.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        i35 = virtualinvoke $r468.<java.util.ArrayList: int size()>();

     label147:
        i34 = i36;

        z5 = 0;

        if i34 >= i35 goto label150;

     label148:
        $r473 = r77.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r472 = $r473.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r471 = virtualinvoke $r472.<java.util.ArrayList: java.lang.Object get(int)>(i36);

        $z35 = virtualinvoke r80.<java.lang.String: boolean equals(java.lang.Object)>($r471);

        if $z35 == 0 goto label333;

     label149:
        z5 = 1;

     label150:
        if z5 == 0 goto label158;

     label151:
        $r484 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $z38 = virtualinvoke $r484.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r80);

        if $z38 != 0 goto label153;

        $r495 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        r800 = new com.android.server.pm.PackageManagerService$SharedLibraryEntry;

        $r494 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r800.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: void <init>(java.lang.String,java.lang.String)>(null, $r494);

        virtualinvoke $r495.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r80, r800);

     label152:
        goto label332;

     label153:
        $r485 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z39 = virtualinvoke r80.<java.lang.String: boolean equals(java.lang.Object)>($r485);

        if $z39 != 0 goto label332;

        r801 = new java.lang.StringBuilder;

        specialinvoke r801.<java.lang.StringBuilder: void <init>()>();

        $r499 = virtualinvoke r801.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r500 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r501 = virtualinvoke $r499.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r500);

        $r502 = virtualinvoke $r501.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" library ");

        $r503 = virtualinvoke $r502.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        $r504 = virtualinvoke $r503.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists; skipping");

        $r505 = virtualinvoke $r504.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r505);

     label154:
        goto label332;

     label155:
        $r722 := @caughtexception;

        r24 = $r722;

     label156:
        exitmonitor r23;

     label157:
        throw r24;

     label158:
        r802 = new java.lang.StringBuilder;

        specialinvoke r802.<java.lang.StringBuilder: void <init>()>();

        $r488 = virtualinvoke r802.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r490 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r489 = virtualinvoke $r488.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r490);

        $r492 = virtualinvoke $r489.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declares lib ");

        $r491 = virtualinvoke $r492.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        $r483 = virtualinvoke $r491.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not declared on system image; skipping");

        $r482 = virtualinvoke $r483.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r482);

     label159:
        goto label332;

     label160:
        i42 = i1 & 256;

        r28 = null;

        if i42 != 0 goto label162;

     label161:
        r28 = specialinvoke r0.<com.android.server.pm.PackageManagerService: java.util.ArrayList updateAllSharedLibrariesLPw(android.content.pm.PackageParser$Package)>(r1);

     label162:
        exitmonitor r23;

     label163:
        if r28 == null goto label169;

        $i94 = i1 & 2;

        if $i94 != 0 goto label169;

        i30 = 0;

     label164:
        i31 = virtualinvoke r28.<java.util.ArrayList: int size()>();

        if i30 >= i31 goto label169;

        $r441 = virtualinvoke r28.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r79 = (android.content.pm.PackageParser$Package) $r441;

        $i92 = i1 & 128;

        if $i92 == 0 goto label167;

        z4 = 1;

     label165:
        $i93 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,boolean,boolean,boolean)>(r79, z1, z4, 0);

        if $i93 != -1 goto label168;

        $i91 = i1 & 512;

        if $i91 == 0 goto label166;

        $r440 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r440);

     label166:
        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -11;

        return null;

     label167:
        z4 = 0;

        goto label165;

     label168:
        i30 = i30 + 1;

        goto label164;

     label169:
        $i65 = i0 & 2;

        if $i65 == 0 goto label172;

        $z29 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r1);

        if $z29 != 0 goto label170;

        $z30 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r1);

        if $z30 == 0 goto label171;

     label170:
        r71 = newarray (int)[1];

        $r431 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i88 = $r431.<android.content.pm.ApplicationInfo: int uid>;

        r71[0] = $i88;

        r803 = new java.util.ArrayList;

        specialinvoke r803.<java.util.ArrayList: void <init>(int)>(1);

        r72 = r803;

        $r429 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r428 = $r429.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r72.<java.util.ArrayList: boolean add(java.lang.Object)>($r428);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(0, 1, r72, r71, null);

     label171:
        $r427 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r442 = $r427.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r426 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i95 = $r426.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>($r442, $i95, "update pkg");

     label172:
        if r28 == null goto label174;

        i28 = 0;

     label173:
        i29 = virtualinvoke r28.<java.util.ArrayList: int size()>();

        if i28 >= i29 goto label174;

        $r435 = virtualinvoke r28.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        r70 = (android.content.pm.PackageParser$Package) $r435;

        $r434 = r70.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r432 = $r434.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r433 = r70.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i89 = $r433.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>($r432, $i89, "update lib");

        i28 = i28 + 1;

        goto label173;

     label174:
        r26 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r26;

        $i64 = i1 & 1;

        if $i64 == 0 goto label176;

     label175:
        $r458 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAppDirs>;

        $r457 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        virtualinvoke $r458.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r457, r1);

     label176:
        $r173 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r173.<com.android.server.pm.Settings: void insertPackageSettingLPw(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>(r15, r1);

        $r172 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r174 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r171 = $r174.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r172.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r171, r1);

        $r177 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r175 = $r177.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        r30 = virtualinvoke $r175.<java.util.ArrayList: java.util.Iterator iterator()>();

     label177:
        $z20 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label182;

        $r459 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        $r460 = (android.content.pm.PackageCleanItem) $r459;

        $r456 = $r460.<android.content.pm.PackageCleanItem: java.lang.String packageName>;

        $z33 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>($r456);

        if $z33 == 0 goto label177;

        interfaceinvoke r30.<java.util.Iterator: void remove()>();

     label178:
        goto label177;

     label179:
        $r708 := @caughtexception;

        r31 = $r708;

     label180:
        exitmonitor r26;

     label181:
        throw r31;

     label182:
        $b68 = l2 cmp 0L;

        if $b68 == 0 goto label203;

     label183:
        $l100 = r15.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $b96 = $l100 cmp 0L;

        if $b96 != 0 goto label200;

        r15.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l2;

        r15.<com.android.server.pm.PackageSetting: long firstInstallTime> = l2;

     label184:
        $r166 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r29 = $r166.<com.android.server.pm.Settings: com.android.server.pm.KeySetManager mKeySetManager>;

     label185:
        $r164 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r165 = r1.<android.content.pm.PackageParser$Package: java.util.Set mSigningKeys>;

        virtualinvoke r29.<com.android.server.pm.KeySetManager: void addSigningKeySetToPackage(java.lang.String,java.util.Set)>($r164, $r165);

        $r163 = r1.<android.content.pm.PackageParser$Package: java.util.Map mKeySetMapping>;

        if $r163 == null goto label190;

        $r447 = r1.<android.content.pm.PackageParser$Package: java.util.Map mKeySetMapping>;

        $r446 = interfaceinvoke $r447.<java.util.Map: java.util.Set entrySet()>();

        r74 = interfaceinvoke $r446.<java.util.Set: java.util.Iterator iterator()>();

     label186:
        $z31 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();

        if $z31 == 0 goto label190;

        $r444 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();

        r75 = (java.util.Map$Entry) $r444;

        $r443 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r443 == null goto label186;

        $r462 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r463 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r464 = (java.util.Set) $r463;

        $r465 = interfaceinvoke r75.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r461 = (java.lang.String) $r465;

        virtualinvoke r29.<com.android.server.pm.KeySetManager: void addDefinedKeySetToPackage(java.lang.String,java.util.Set,java.lang.String)>($r462, $r464, $r461);

     label187:
        goto label186;

     label188:
        $r705 := @caughtexception;

        r73 = $r705;

     label189:
        r804 = new java.lang.StringBuilder;

        specialinvoke r804.<java.lang.StringBuilder: void <init>()>();

        $r706 = virtualinvoke r804.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not add KeySet to ");

        $r702 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r701 = virtualinvoke $r706.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r702);

        $r703 = virtualinvoke $r701.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r703, r73);

     label190:
        $r162 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i10 = virtualinvoke $r162.<java.util.ArrayList: int size()>();

     label191:
        r32 = null;

        i11 = 0;

     label192:
        if i11 >= i10 goto label339;

     label193:
        $r407 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r408 = virtualinvoke $r407.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r35 = (android.content.pm.PackageParser$Provider) $r408;

        $r413 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r409 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r414 = $r409.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r410 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r412 = $r410.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r411 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i86 = $r411.<android.content.pm.ApplicationInfo: int uid>;

        $r416 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r414, $r412, $i86);

        $r413.<android.content.pm.ProviderInfo: java.lang.String processName> = $r416;

        $r415 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        virtualinvoke $r415.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void addProvider(android.content.pm.PackageParser$Provider)>(r35);

        $r418 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        z3 = $r418.<android.content.pm.ProviderInfo: boolean isSyncable>;

        r35.<android.content.pm.PackageParser$Provider: boolean syncable> = z3;

        $r417 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r419 = $r417.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r419 == null goto label218;

        $r425 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r424 = $r425.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r39 = virtualinvoke $r424.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $r374 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r374.<android.content.pm.ProviderInfo: java.lang.String authority> = null;

     label194:
        i13 = 0;

        r36 = r35;

     label195:
        i12 = lengthof r39;

     label196:
        if i13 >= i12 goto label337;

        if i13 != 1 goto label325;

     label197:
        $z32 = r36.<android.content.pm.PackageParser$Provider: boolean syncable>;

        if $z32 == 0 goto label325;

        r805 = new android.content.pm.PackageParser$Provider;

        specialinvoke r805.<android.content.pm.PackageParser$Provider: void <init>(android.content.pm.PackageParser$Provider)>(r36);

        r37 = r805;

        r37.<android.content.pm.PackageParser$Provider: boolean syncable> = 0;

     label198:
        $r373 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r372 = r39[i13];

        $z27 = virtualinvoke $r373.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r372);

        if $z27 != 0 goto label213;

        $r392 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r393 = r39[i13];

        virtualinvoke $r392.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r393, r37);

        $r390 = r37.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r397 = $r390.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r397 != null goto label211;

        $r450 = r37.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r451 = r39[i13];

        $r450.<android.content.pm.ProviderInfo: java.lang.String authority> = $r451;

     label199:
        goto label335;

     label200:
        $i97 = i1 & 64;

        if $i97 == 0 goto label184;

     label201:
        r15.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l2;

     label202:
        goto label184;

     label203:
        $l66 = r15.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $b67 = $l66 cmp 0L;

        if $b67 != 0 goto label205;

        r15.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l8;

        r15.<com.android.server.pm.PackageSetting: long firstInstallTime> = l8;

     label204:
        goto label184;

     label205:
        $i63 = i0 & 64;

        if $i63 == 0 goto label184;

     label206:
        $l98 = r15.<com.android.server.pm.PackageSetting: long timeStamp>;

        $b99 = l8 cmp $l98;

        if $b99 == 0 goto label184;

        r15.<com.android.server.pm.PackageSetting: long lastUpdateTime> = l8;

     label207:
        goto label184;

     label208:
        $r712 := @caughtexception;

        r33 = $r712;

     label209:
        r806 = new java.lang.StringBuilder;

        specialinvoke r806.<java.lang.StringBuilder: void <init>()>();

        $r711 = virtualinvoke r806.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not add KeySet to malformed package");

        $r725 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r724 = virtualinvoke $r711.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r725);

        $r723 = virtualinvoke $r724.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r723, r33);

     label210:
        goto label190;

     label211:
        $r395 = r37.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        r807 = new java.lang.StringBuilder;

        specialinvoke r807.<java.lang.StringBuilder: void <init>()>();

        $r394 = r37.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r453 = $r394.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r452 = virtualinvoke r807.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r453);

        $r455 = virtualinvoke $r452.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r454 = r39[i13];

        $r449 = virtualinvoke $r455.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r454);

        $r448 = virtualinvoke $r449.<java.lang.StringBuilder: java.lang.String toString()>();

        $r395.<android.content.pm.ProviderInfo: java.lang.String authority> = $r448;

     label212:
        goto label335;

     label213:
        $r375 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r377 = r39[i13];

        $r376 = virtualinvoke $r375.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r377);

        r38 = (android.content.pm.PackageParser$Provider) $r376;

        r808 = new java.lang.StringBuilder;

        specialinvoke r808.<java.lang.StringBuilder: void <init>()>();

        $r381 = virtualinvoke r808.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping provider name ");

        $r378 = r39[i13];

        $r379 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r378);

        $r384 = virtualinvoke $r379.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in package ");

        $r385 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r382 = $r385.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r383 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r382);

        r42 = virtualinvoke $r383.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): name already used by ");

     label214:
        if r38 == null goto label336;

     label215:
        $r389 = virtualinvoke r38.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        if $r389 == null goto label336;

        $r388 = virtualinvoke r38.<android.content.pm.PackageParser$Provider: android.content.ComponentName getComponentName()>();

        r43 = virtualinvoke $r388.<android.content.ComponentName: java.lang.String getPackageName()>();

     label216:
        $r387 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r386 = virtualinvoke $r387.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r386);

     label217:
        goto label335;

     label218:
        $i87 = i0 & 2;

        if $i87 == 0 goto label338;

        if r32 != null goto label222;

     label219:
        r809 = new java.lang.StringBuilder;

        specialinvoke r809.<java.lang.StringBuilder: void <init>(int)>(256);

        r32 = r809;

     label220:
        $r420 = r35.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        r34 = $r420.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

     label221:
        goto label338;

     label222:
        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label223:
        goto label220;

     label224:
        $r161 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        i14 = virtualinvoke $r161.<java.util.ArrayList: int size()>();

     label225:
        r40 = null;

        i15 = 0;

     label226:
        if i15 >= i14 goto label341;

     label227:
        $r339 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r338 = virtualinvoke $r339.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r41 = (android.content.pm.PackageParser$Service) $r338;

        $r400 = r41.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r337 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r399 = $r337.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r336 = r41.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r398 = $r336.<android.content.pm.ServiceInfo: java.lang.String processName>;

        $r335 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i84 = $r335.<android.content.pm.ApplicationInfo: int uid>;

        $r401 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r399, $r398, $i84);

        $r400.<android.content.pm.ServiceInfo: java.lang.String processName> = $r401;

        $r402 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r402.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)>(r41);

     label228:
        $i85 = i0 & 2;

        if $i85 == 0 goto label340;

        if r40 != null goto label232;

     label229:
        r810 = new java.lang.StringBuilder;

        specialinvoke r810.<java.lang.StringBuilder: void <init>(int)>(256);

        r40 = r810;

     label230:
        $r404 = r41.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        r47 = $r404.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

     label231:
        goto label340;

     label232:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label233:
        goto label230;

     label234:
        $r170 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        i17 = virtualinvoke $r170.<java.util.ArrayList: int size()>();

     label235:
        r44 = null;

        i16 = 0;

     label236:
        if i16 >= i17 goto label343;

     label237:
        $r326 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r323 = virtualinvoke $r326.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r46 = (android.content.pm.PackageParser$Activity) $r323;

        $r332 = r46.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r324 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r333 = $r324.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r321 = r46.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r334 = $r321.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r322 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i79 = $r322.<android.content.pm.ApplicationInfo: int uid>;

        $r331 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r333, $r334, $i79);

        $r332.<android.content.pm.ActivityInfo: java.lang.String processName> = $r331;

        $r330 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r330.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r46, "receiver");

     label238:
        $i78 = i0 & 2;

        if $i78 == 0 goto label342;

        if r44 != null goto label242;

     label239:
        r811 = new java.lang.StringBuilder;

        specialinvoke r811.<java.lang.StringBuilder: void <init>(int)>(256);

        r44 = r811;

     label240:
        $r342 = r46.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        r45 = $r342.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

     label241:
        goto label342;

     label242:
        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label243:
        goto label240;

     label244:
        $r169 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i19 = virtualinvoke $r169.<java.util.ArrayList: int size()>();

     label245:
        r50 = null;

        i18 = 0;

     label246:
        if i18 >= i19 goto label345;

     label247:
        $r370 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r365 = virtualinvoke $r370.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r48 = (android.content.pm.PackageParser$Activity) $r365;

        $r319 = r48.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r364 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r318 = $r364.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r367 = r48.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $r320 = $r367.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r366 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i77 = $r366.<android.content.pm.ApplicationInfo: int uid>;

        $r316 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String fixProcessName(java.lang.String,java.lang.String,int)>($r318, $r320, $i77);

        $r319.<android.content.pm.ActivityInfo: java.lang.String processName> = $r316;

        $r317 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r317.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r48, "activity");

     label248:
        $i76 = i0 & 2;

        if $i76 == 0 goto label344;

        if r50 != null goto label252;

     label249:
        r812 = new java.lang.StringBuilder;

        specialinvoke r812.<java.lang.StringBuilder: void <init>(int)>(256);

        r50 = r812;

     label250:
        $r327 = r48.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        r49 = $r327.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

     label251:
        goto label344;

     label252:
        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label253:
        goto label250;

     label254:
        $r168 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        i21 = virtualinvoke $r168.<java.util.ArrayList: int size()>();

     label255:
        r54 = null;

        i20 = 0;

     label256:
        if i20 >= i21 goto label347;

     label257:
        $r294 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissionGroups>;

        $r295 = virtualinvoke $r294.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        r52 = (android.content.pm.PackageParser$PermissionGroup) $r295;

        $r291 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r289 = r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r290 = $r289.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r292 = virtualinvoke $r291.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r290);

        r53 = (android.content.pm.PackageParser$PermissionGroup) $r292;

     label258:
        if r53 != null goto label266;

     label259:
        $r358 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r363 = r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r362 = $r363.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r358.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r362, r52);

     label260:
        $i82 = i0 & 2;

        if $i82 == 0 goto label346;

        if r54 != null goto label264;

     label261:
        r813 = new java.lang.StringBuilder;

        specialinvoke r813.<java.lang.StringBuilder: void <init>(int)>(256);

        r54 = r813;

     label262:
        $r369 = r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        r51 = $r369.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

     label263:
        goto label346;

     label264:
        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label265:
        goto label262;

     label266:
        r814 = new java.lang.StringBuilder;

        specialinvoke r814.<java.lang.StringBuilder: void <init>()>();

        $r287 = virtualinvoke r814.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission group ");

        $r288 = r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r347 = $r288.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r348 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r347);

        $r349 = virtualinvoke $r348.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r350 = r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r343 = $r350.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        $r344 = virtualinvoke $r349.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r343);

        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r346 = r53.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        $r354 = $r346.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        $r355 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r354);

        $r356 = virtualinvoke $r355.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r356);

     label267:
        $i80 = i0 & 2;

        if $i80 == 0 goto label346;

        if r54 != null goto label271;

     label268:
        r815 = new java.lang.StringBuilder;

        specialinvoke r815.<java.lang.StringBuilder: void <init>(int)>(256);

        r54 = r815;

     label269:
        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r353 = r52.<android.content.pm.PackageParser$PermissionGroup: android.content.pm.PermissionGroupInfo info>;

        r55 = $r353.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

     label270:
        goto label346;

     label271:
        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label272:
        goto label269;

     label273:
        $r167 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        i22 = virtualinvoke $r167.<java.util.ArrayList: int size()>();

     label274:
        r62 = null;

        i23 = 0;

     label275:
        if i23 >= i22 goto label349;

     label276:
        $r232 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r231 = virtualinvoke $r232.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        r61 = (android.content.pm.PackageParser$Permission) $r231;

        $z22 = r61.<android.content.pm.PackageParser$Permission: boolean tree>;

        if $z22 == 0 goto label292;

        $r293 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r60 = $r293.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

     label277:
        $r219 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r221 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r220 = $r221.<android.content.pm.PermissionInfo: java.lang.String group>;

        $r218 = virtualinvoke $r219.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r220);

        $r225 = (android.content.pm.PackageParser$PermissionGroup) $r218;

        r61.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group> = $r225;

        $r224 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r223 = $r224.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r223 == null goto label278;

        $r308 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group>;

        if $r308 == null goto label306;

     label278:
        $r222 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        r59 = $r222.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r212 = virtualinvoke r60.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r59);

        r58 = (com.android.server.pm.BasePermission) $r212;

     label279:
        if r58 != null goto label281;

     label280:
        $r312 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        r57 = $r312.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r311 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        r56 = $r311.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        r816 = new com.android.server.pm.BasePermission;

        specialinvoke r816.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>(r57, r56, 0);

        r58 = r816;

        $r313 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        r65 = $r313.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r60.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r65, r58);

     label281:
        $r213 = r58.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r213 != null goto label300;

        $r204 = r58.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        if $r204 == null goto label282;

        $r271 = r58.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r273 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r272 = $r273.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z26 = virtualinvoke $r271.<java.lang.String: boolean equals(java.lang.Object)>($r272);

        if $z26 != 0 goto label282;

        $r270 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $z25 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>($r270);

        if $z25 == 0 goto label282;

        r817 = new java.lang.StringBuilder;

        specialinvoke r817.<java.lang.StringBuilder: void <init>()>();

        $r267 = virtualinvoke r817.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New decl ");

        $r268 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $r265 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r268);

        $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of permission  ");

        $r263 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r264 = $r263.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r261 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r264);

        $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is system");

        $r260 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r260);

        r58.<com.android.server.pm.BasePermission: java.lang.String sourcePackage> = null;

     label282:
        $r205 = r58.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        if $r205 == null goto label283;

        $r237 = r58.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r235 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r236 = $r235.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z23 = virtualinvoke $r237.<java.lang.String: boolean equals(java.lang.Object)>($r236);

        if $z23 == 0 goto label298;

     label283:
        $r209 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r210 = $r209.<android.content.pm.PermissionInfo: java.lang.String name>;

        r63 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)>($r210);

     label284:
        if r63 == null goto label286;

     label285:
        $r258 = r63.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r256 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r259 = $r256.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $z24 = virtualinvoke $r258.<java.lang.String: boolean equals(java.lang.Object)>($r259);

        if $z24 == 0 goto label296;

     label286:
        r58.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = r15;

        r58.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = r61;

        $r208 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i27 = $r208.<android.content.pm.ApplicationInfo: int uid>;

        r58.<com.android.server.pm.BasePermission: int uid> = i27;

     label287:
        $i72 = i0 & 2;

        if $i72 == 0 goto label290;

        if r62 != null goto label294;

     label288:
        r818 = new java.lang.StringBuilder;

        specialinvoke r818.<java.lang.StringBuilder: void <init>(int)>(256);

        r62 = r818;

     label289:
        $r255 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        r69 = $r255.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

     label290:
        $r211 = r58.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r211 != r61 goto label348;

        $r216 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        i24 = $r216.<android.content.pm.PermissionInfo: int protectionLevel>;

        r58.<com.android.server.pm.BasePermission: int protectionLevel> = i24;

     label291:
        goto label348;

     label292:
        $r230 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r60 = $r230.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

     label293:
        goto label277;

     label294:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label295:
        goto label289;

     label296:
        r819 = new java.lang.StringBuilder;

        specialinvoke r819.<java.lang.StringBuilder: void <init>()>();

        $r248 = virtualinvoke r819.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r250 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r249 = $r250.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r252 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r249);

        $r251 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r239 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r240 = $r239.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r241 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r240);

        $r242 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: base tree ");

        $r243 = r63.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r244 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r243);

        $r245 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is from package ");

        $r246 = r63.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r233 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r246);

        $r234 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r234);

     label297:
        goto label290;

     label298:
        r820 = new java.lang.StringBuilder;

        specialinvoke r820.<java.lang.StringBuilder: void <init>()>();

        $r285 = virtualinvoke r820.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r284 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r283 = $r284.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r282 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r283);

        $r281 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r280 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r279 = $r280.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r278 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r279);

        $r277 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: original from ");

        $r276 = r58.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r275 = virtualinvoke $r277.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r276);

        $r274 = virtualinvoke $r275.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r274);

     label299:
        goto label290;

     label300:
        $i70 = i0 & 2;

        if $i70 == 0 goto label290;

        if r62 != null goto label304;

     label301:
        r821 = new java.lang.StringBuilder;

        specialinvoke r821.<java.lang.StringBuilder: void <init>(int)>(256);

        r62 = r821;

     label302:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUP:");

        $r215 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        r64 = $r215.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

     label303:
        goto label290;

     label304:
        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label305:
        goto label302;

     label306:
        r822 = new java.lang.StringBuilder;

        specialinvoke r822.<java.lang.StringBuilder: void <init>()>();

        $r305 = virtualinvoke r822.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission ");

        $r304 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r307 = $r304.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r306 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r307);

        $r301 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r300 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r303 = $r300.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r302 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r303);

        $r296 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: no group ");

        $r297 = r61.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$PermissionGroup group>;

        $r298 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r297);

        $r299 = virtualinvoke $r298.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r299);

     label307:
        goto label348;

     label308:
        $r195 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        i25 = virtualinvoke $r195.<java.util.ArrayList: int size()>();

     label309:
        r66 = null;

        i26 = 0;

     label310:
        if i26 >= i25 goto label351;

     label311:
        $r203 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r197 = virtualinvoke $r203.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r67 = (android.content.pm.PackageParser$Instrumentation) $r197;

        $r200 = r67.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r198 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r199 = $r198.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r200.<android.content.pm.InstrumentationInfo: java.lang.String packageName> = $r199;

        $r185 = r67.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r183 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r182 = $r183.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r185.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir> = $r182;

        $r178 = r67.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r184 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r179 = $r184.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r178.<android.content.pm.InstrumentationInfo: java.lang.String publicSourceDir> = $r179;

        $r190 = r67.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r181 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r180 = $r181.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r190.<android.content.pm.InstrumentationInfo: java.lang.String dataDir> = $r180;

        $r191 = r67.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r189 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r192 = $r189.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r191.<android.content.pm.InstrumentationInfo: java.lang.String nativeLibraryDir> = $r192;

        $r187 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r186 = virtualinvoke r67.<android.content.pm.PackageParser$Instrumentation: android.content.ComponentName getComponentName()>();

        virtualinvoke $r187.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r186, r67);

     label312:
        $i69 = i0 & 2;

        if $i69 == 0 goto label350;

        if r66 != null goto label316;

     label313:
        r823 = new java.lang.StringBuilder;

        specialinvoke r823.<java.lang.StringBuilder: void <init>(int)>(256);

        r66 = r823;

     label314:
        $r228 = r67.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        r68 = $r228.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r68);

     label315:
        goto label350;

     label316:
        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label317:
        goto label314;

     label318:
        $r196 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        if $r196 == null goto label323;

        $r193 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        i32 = virtualinvoke $r193.<java.util.ArrayList: int size()>();

     label319:
        i33 = 0;

     label320:
        if i33 >= i32 goto label323;

     label321:
        $r201 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mProtectedBroadcasts>;

        $r194 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList protectedBroadcasts>;

        $r202 = virtualinvoke $r194.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        virtualinvoke $r201.<java.util.HashSet: boolean add(java.lang.Object)>($r202);

     label322:
        i33 = i33 + 1;

        goto label320;

     label323:
        virtualinvoke r15.<com.android.server.pm.PackageSetting: void setTimeStamp(long)>(l8);

        exitmonitor r26;

     label324:
        return r1;

     label325:
        r37 = r36;

        goto label198;

     label326:
        i3 = i3 + -1;

        goto label039;

     label327:
        r21 = "?";

        goto label073;

     label328:
        i6 = i6 + 1;

        goto label068;

     label329:
        i4 = i4 + 1;

        goto label065;

     label330:
        i47 = i47 + -1;

        goto label076;

     label331:
        i41 = i41 + 1;

        goto label124;

     label332:
        i37 = i37 + 1;

        goto label140;

     label333:
        i36 = i36 + 1;

        goto label146;

     label334:
        z5 = 1;

        goto label150;

     label335:
        i13 = i13 + 1;

        r36 = r37;

        goto label195;

     label336:
        r43 = "?";

        goto label216;

     label337:
        r35 = r36;

        goto label218;

     label338:
        i11 = i11 + 1;

        goto label192;

     label339:
        if r32 == null goto label224;

        goto label224;

     label340:
        i15 = i15 + 1;

        goto label226;

     label341:
        if r40 == null goto label234;

        goto label234;

     label342:
        i16 = i16 + 1;

        goto label236;

     label343:
        if r44 == null goto label244;

        goto label244;

     label344:
        i18 = i18 + 1;

        goto label246;

     label345:
        if r50 == null goto label254;

        goto label254;

     label346:
        i20 = i20 + 1;

        goto label256;

     label347:
        if r54 == null goto label273;

        goto label273;

     label348:
        i23 = i23 + 1;

        goto label275;

     label349:
        if r62 == null goto label308;

        goto label308;

     label350:
        i26 = i26 + 1;

        goto label310;

     label351:
        if r66 == null goto label318;

        goto label318;

        catch java.lang.Throwable from label006 to label007 with label008;
        catch java.lang.Throwable from label009 to label010 with label008;
        catch java.lang.Throwable from label011 to label012 with label008;
        catch java.lang.Throwable from label012 to label013 with label008;
        catch java.lang.Throwable from label017 to label018 with label019;
        catch java.lang.Throwable from label020 to label021 with label019;
        catch java.lang.Throwable from label022 to label023 with label019;
        catch java.lang.Throwable from label024 to label025 with label019;
        catch java.lang.Throwable from label026 to label027 with label019;
        catch java.lang.Throwable from label028 to label029 with label019;
        catch java.lang.Throwable from label030 to label031 with label019;
        catch java.lang.Throwable from label032 to label033 with label019;
        catch java.lang.Throwable from label033 to label034 with label019;
        catch java.lang.Throwable from label034 to label035 with label019;
        catch java.lang.Throwable from label036 to label037 with label019;
        catch java.lang.Throwable from label038 to label039 with label019;
        catch java.lang.Throwable from label040 to label041 with label019;
        catch java.lang.Throwable from label042 to label043 with label019;
        catch java.lang.Throwable from label044 to label045 with label019;
        catch java.lang.Throwable from label046 to label047 with label019;
        catch java.lang.Throwable from label048 to label049 with label019;
        catch java.lang.Throwable from label050 to label051 with label019;
        catch java.lang.Throwable from label052 to label053 with label019;
        catch java.lang.Throwable from label053 to label054 with label019;
        catch java.lang.Throwable from label054 to label055 with label019;
        catch java.lang.Throwable from label055 to label056 with label019;
        catch java.lang.Throwable from label057 to label058 with label019;
        catch java.lang.Throwable from label059 to label060 with label019;
        catch java.lang.Throwable from label061 to label062 with label019;
        catch java.lang.Throwable from label063 to label064 with label019;
        catch java.lang.Throwable from label066 to label067 with label019;
        catch java.lang.Throwable from label068 to label069 with label019;
        catch java.lang.Throwable from label070 to label071 with label019;
        catch java.lang.Throwable from label072 to label073 with label019;
        catch java.lang.Throwable from label073 to label074 with label019;
        catch java.lang.Throwable from label075 to label076 with label019;
        catch java.lang.Throwable from label077 to label078 with label019;
        catch java.lang.Throwable from label079 to label080 with label019;
        catch java.lang.Throwable from label081 to label082 with label019;
        catch java.io.IOException from label085 to label086 with label132;
        catch libcore.io.ErrnoException from label091 to label092 with label096;
        catch java.lang.Throwable from label100 to label101 with label108;
        catch java.lang.Throwable from label102 to label103 with label108;
        catch java.lang.Throwable from label103 to label104 with label108;
        catch java.lang.Throwable from label109 to label110 with label108;
        catch java.io.IOException from label115 to label116 with label132;
        catch java.io.IOException from label116 to label117 with label118;
        catch java.io.IOException from label119 to label120 with label132;
        catch java.io.IOException from label121 to label122 with label132;
        catch java.lang.Throwable from label122 to label123 with label129;
        catch java.lang.Throwable from label125 to label126 with label129;
        catch java.lang.Throwable from label127 to label128 with label129;
        catch java.lang.Throwable from label130 to label131 with label129;
        catch java.io.IOException from label131 to label132 with label132;
        catch java.lang.Throwable from label136 to label137 with label155;
        catch java.lang.Throwable from label138 to label139 with label155;
        catch java.lang.Throwable from label140 to label141 with label155;
        catch java.lang.Throwable from label142 to label143 with label155;
        catch java.lang.Throwable from label144 to label145 with label155;
        catch java.lang.Throwable from label146 to label147 with label155;
        catch java.lang.Throwable from label148 to label149 with label155;
        catch java.lang.Throwable from label151 to label152 with label155;
        catch java.lang.Throwable from label153 to label154 with label155;
        catch java.lang.Throwable from label156 to label157 with label155;
        catch java.lang.Throwable from label158 to label159 with label155;
        catch java.lang.Throwable from label161 to label162 with label155;
        catch java.lang.Throwable from label162 to label163 with label155;
        catch java.lang.Throwable from label175 to label176 with label179;
        catch java.lang.Throwable from label176 to label177 with label179;
        catch java.lang.Throwable from label177 to label178 with label179;
        catch java.lang.Throwable from label180 to label181 with label179;
        catch java.lang.Throwable from label183 to label184 with label179;
        catch java.lang.Throwable from label184 to label185 with label179;
        catch java.lang.NullPointerException from label185 to label186 with label188;
        catch java.lang.IllegalArgumentException from label185 to label186 with label208;
        catch java.lang.Throwable from label185 to label186 with label179;
        catch java.lang.NullPointerException from label186 to label187 with label188;
        catch java.lang.IllegalArgumentException from label186 to label187 with label208;
        catch java.lang.Throwable from label186 to label187 with label179;
        catch java.lang.Throwable from label189 to label190 with label179;
        catch java.lang.Throwable from label190 to label191 with label179;
        catch java.lang.Throwable from label193 to label194 with label179;
        catch java.lang.Throwable from label195 to label196 with label179;
        catch java.lang.Throwable from label197 to label198 with label179;
        catch java.lang.Throwable from label198 to label199 with label179;
        catch java.lang.Throwable from label201 to label202 with label179;
        catch java.lang.Throwable from label203 to label204 with label179;
        catch java.lang.Throwable from label206 to label207 with label179;
        catch java.lang.Throwable from label209 to label210 with label179;
        catch java.lang.Throwable from label211 to label212 with label179;
        catch java.lang.Throwable from label213 to label214 with label179;
        catch java.lang.Throwable from label215 to label216 with label179;
        catch java.lang.Throwable from label216 to label217 with label179;
        catch java.lang.Throwable from label219 to label220 with label179;
        catch java.lang.Throwable from label220 to label221 with label179;
        catch java.lang.Throwable from label222 to label223 with label179;
        catch java.lang.Throwable from label224 to label225 with label179;
        catch java.lang.Throwable from label227 to label228 with label179;
        catch java.lang.Throwable from label229 to label230 with label179;
        catch java.lang.Throwable from label230 to label231 with label179;
        catch java.lang.Throwable from label232 to label233 with label179;
        catch java.lang.Throwable from label234 to label235 with label179;
        catch java.lang.Throwable from label237 to label238 with label179;
        catch java.lang.Throwable from label239 to label240 with label179;
        catch java.lang.Throwable from label240 to label241 with label179;
        catch java.lang.Throwable from label242 to label243 with label179;
        catch java.lang.Throwable from label244 to label245 with label179;
        catch java.lang.Throwable from label247 to label248 with label179;
        catch java.lang.Throwable from label249 to label250 with label179;
        catch java.lang.Throwable from label250 to label251 with label179;
        catch java.lang.Throwable from label252 to label253 with label179;
        catch java.lang.Throwable from label254 to label255 with label179;
        catch java.lang.Throwable from label257 to label258 with label179;
        catch java.lang.Throwable from label259 to label260 with label179;
        catch java.lang.Throwable from label261 to label262 with label179;
        catch java.lang.Throwable from label262 to label263 with label179;
        catch java.lang.Throwable from label264 to label265 with label179;
        catch java.lang.Throwable from label266 to label267 with label179;
        catch java.lang.Throwable from label268 to label269 with label179;
        catch java.lang.Throwable from label269 to label270 with label179;
        catch java.lang.Throwable from label271 to label272 with label179;
        catch java.lang.Throwable from label273 to label274 with label179;
        catch java.lang.Throwable from label276 to label277 with label179;
        catch java.lang.Throwable from label277 to label278 with label179;
        catch java.lang.Throwable from label278 to label279 with label179;
        catch java.lang.Throwable from label280 to label281 with label179;
        catch java.lang.Throwable from label281 to label282 with label179;
        catch java.lang.Throwable from label282 to label283 with label179;
        catch java.lang.Throwable from label283 to label284 with label179;
        catch java.lang.Throwable from label285 to label286 with label179;
        catch java.lang.Throwable from label286 to label287 with label179;
        catch java.lang.Throwable from label288 to label289 with label179;
        catch java.lang.Throwable from label289 to label290 with label179;
        catch java.lang.Throwable from label290 to label291 with label179;
        catch java.lang.Throwable from label292 to label293 with label179;
        catch java.lang.Throwable from label294 to label295 with label179;
        catch java.lang.Throwable from label296 to label297 with label179;
        catch java.lang.Throwable from label298 to label299 with label179;
        catch java.lang.Throwable from label301 to label302 with label179;
        catch java.lang.Throwable from label302 to label303 with label179;
        catch java.lang.Throwable from label304 to label305 with label179;
        catch java.lang.Throwable from label306 to label307 with label179;
        catch java.lang.Throwable from label308 to label309 with label179;
        catch java.lang.Throwable from label311 to label312 with label179;
        catch java.lang.Throwable from label313 to label314 with label179;
        catch java.lang.Throwable from label314 to label315 with label179;
        catch java.lang.Throwable from label316 to label317 with label179;
        catch java.lang.Throwable from label318 to label319 with label179;
        catch java.lang.Throwable from label321 to label322 with label179;
        catch java.lang.Throwable from label323 to label324 with label179;
    }

    private android.content.pm.PackageParser$Package scanPackageLI(java.io.File, int, int, long, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, $r41, $r42, $r72, $r113;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i26, $i27, $i28, $i31, $i32, $i33;
        long l2;
        android.os.UserHandle r2;
        java.lang.String r3, r8, r13, r14, $r32, $r35, $r38, $r40, $r43, $r45, $r52, $r56, $r58, $r63, $r64, $r65, $r66, $r68, $r71, $r74, $r77, $r81, $r86, $r87, $r88, $r89, $r93, $r104, $r106, $r110, $r114, $r116, $r122, $r124;
        android.content.pm.PackageParser r4, $r27;
        android.content.pm.PackageParser$Package r5, r15;
        java.util.HashMap r6, r17, r21, r24, $r31, $r83;
        java.lang.Throwable r7, r16, r20, r22, r23, r28, $r118, $r119, $r125, $r126, $r127, $r128;
        java.util.ArrayList r9, $r123;
        com.android.server.pm.PackageSetting r10, r12;
        com.android.server.pm.Settings r11, $r33, $r39, $r102, $r120, $r121;
        boolean z0, z1, z2, $z3, $z4, $z6, $z8, $z9, $z10;
        com.android.server.pm.PackageManagerService$InstallArgs r18, r25;
        java.lang.Object r19, r26, $r34;
        android.util.DisplayMetrics $r29;
        java.lang.String[] $r30;
        java.lang.StringBuilder $r36, $r37, $r44, $r46, $r50, $r51, $r53, $r54, $r55, $r57, $r59, $r60, $r61, $r62, $r67, $r69, $r70, $r73, $r75, $r76, $r78, $r79, $r80, $r84, $r85, $r90, $r91, $r92, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r103, $r105, $r107, $r108, $r109, $r111, $r112, $r115, $r117;
        com.android.server.pm.PackageSignatures $r47;
        android.content.pm.Signature[] $r48, $r49;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        r2 := @parameter4: android.os.UserHandle;

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = 1;

        r3 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $i6 = r0.<com.android.server.pm.PackageManagerService: int mDefParseFlags>;

        i3 = i0 | $i6;

        $r27 = new android.content.pm.PackageParser;

        specialinvoke $r27.<android.content.pm.PackageParser: void <init>(java.lang.String)>(r3);

        r4 = $r27;

        $r30 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mSeparateProcesses>;

        virtualinvoke r4.<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>($r30);

        $z3 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        virtualinvoke r4.<android.content.pm.PackageParser: void setOnlyCoreApps(boolean)>($z3);

        $r29 = r0.<com.android.server.pm.PackageManagerService: android.util.DisplayMetrics mMetrics>;

        r5 = virtualinvoke r4.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)>(r1, r3, $r29, i3);

        if r5 != null goto label02;

        $i31 = virtualinvoke r4.<android.content.pm.PackageParser: int getParseError()>();

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = $i31;

        r15 = null;

     label01:
        return r15;

     label02:
        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label03:
        $r33 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r31 = $r33.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r32 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r34 = virtualinvoke $r31.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r32);

        r8 = (java.lang.String) $r34;

        r9 = r5.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

     label04:
        r10 = null;

        if r9 == null goto label08;

     label05:
        $r123 = r5.<android.content.pm.PackageParser$Package: java.util.ArrayList mOriginalPackages>;

        z0 = virtualinvoke $r123.<java.util.ArrayList: boolean contains(java.lang.Object)>(r8);

     label06:
        r10 = null;

        if z0 == 0 goto label08;

     label07:
        $r120 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r10 = virtualinvoke $r120.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>(r8);

     label08:
        if r10 != null goto label10;

     label09:
        $r121 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r122 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r10 = virtualinvoke $r121.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>($r122);

     label10:
        r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

     label11:
        if r10 == null goto label16;

     label12:
        r13 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

     label13:
        r12 = virtualinvoke r11.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>(r13);

        exitmonitor r6;

     label14:
        if r12 == null goto label27;

        $i19 = i3 & 1;

        if $i19 == 0 goto label27;

        if r10 == null goto label27;

        $r72 = r10.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z8 = virtualinvoke $r72.<java.io.File: boolean equals(java.lang.Object)>(r1);

        if $z8 != 0 goto label27;

        $i17 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $i18 = r10.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i17 >= $i18 goto label21;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r104 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r103 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r96 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored: updated version ");

        $i27 = r10.<com.android.server.pm.PackageSetting: int versionCode>;

        $r99 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than this ");

        $i28 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r114 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r114);

        $r113 = r12.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z9 = virtualinvoke $r113.<java.io.File: boolean equals(java.lang.Object)>(r1);

        if $z9 != 0 goto label15;

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code path for hidden system pkg : ");

        $r116 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r108 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changing from ");

        $r106 = r12.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r107 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r111 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r110 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r110);

        r12.<com.android.server.pm.PackageSetting: java.io.File codePath> = r1;

        $r124 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        r12.<com.android.server.pm.PackageSetting: java.lang.String codePathString> = $r124;

        $z10 = staticinvoke <com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>(r1);

        if $z10 == 0 goto label15;

        $i33 = r12.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i32 = 1073741824 | $i33;

        r12.<com.android.server.pm.PackageSetting: int pkgFlags> = $i32;

     label15:
        r12.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg> = r5;

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -5;

        return null;

     label16:
        r13 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

     label17:
        goto label13;

     label18:
        $r126 := @caughtexception;

        r7 = $r126;

     label19:
        exitmonitor r6;

     label20:
        throw r7;

     label21:
        r21 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r21;

     label22:
        $r83 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r81 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r83.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r81);

        exitmonitor r21;

     label23:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r74 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r73 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reverting from ");

        $r77 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": new version ");

        $i23 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r90 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than installed ");

        $i24 = r10.<com.android.server.pm.PackageSetting: int versionCode>;

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r93);

        $i26 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)>(r10);

        $r88 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r87 = r10.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r86 = r10.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        r25 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(int,java.lang.String,java.lang.String,java.lang.String)>($i26, $r88, $r87, $r86);

        r26 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r26;

     label24:
        virtualinvoke r25.<com.android.server.pm.PackageManagerService$InstallArgs: void cleanUpResourcesLI()>();

        exitmonitor r26;

     label25:
        r24 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r24;

     label26:
        $r102 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r89 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r102.<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>($r89);

        exitmonitor r24;

     label27:
        if r12 == null goto label28;

        i3 = i3 | 1;

        $i21 = r12.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i20 = 1073741824 & $i21;

        if $i20 == 0 goto label28;

        i3 = 128 | i3;

     label28:
        $z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean collectCertificatesLI(android.content.pm.PackageParser,com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package,java.io.File,int)>(r4, r10, r5, r1, i3);

        if $z4 != 0 goto label38;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed verifying certificates for package:");

        $r68 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r67 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r66);

        return null;

     label29:
        $r119 := @caughtexception;

        r22 = $r119;

     label30:
        exitmonitor r21;

     label31:
        throw r22;

     label32:
        $r125 := @caughtexception;

        r23 = $r125;

     label33:
        exitmonitor r26;

     label34:
        throw r23;

     label35:
        $r127 := @caughtexception;

        r28 = $r127;

     label36:
        exitmonitor r24;

     label37:
        throw r28;

     label38:
        z1 = 0;

        if r12 != null goto label39;

        z1 = 0;

        if r10 == null goto label39;

        i5 = i3 & 64;

        z1 = 0;

        if i5 == 0 goto label39;

        z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r10);

        z1 = 0;

        if z2 != 0 goto label39;

        $r47 = r10.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r48 = $r47.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r49 = r5.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i11 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r48, $r49);

        if $i11 == 0 goto label47;

        $r71 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>($r71, null, 1, null, null, 0, null, 0);

        r10 = null;

     label39:
        $i8 = i3 & 64;

        if $i8 != 0 goto label40;

        if r10 == null goto label40;

        $r42 = r10.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r41 = r10.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $z6 = virtualinvoke $r42.<java.io.File: boolean equals(java.lang.Object)>($r41);

        if $z6 != 0 goto label40;

        i3 = i3 | 16;

     label40:
        $i7 = i3 & 16;

        if $i7 == 0 goto label55;

        if r10 == null goto label54;

        $r40 = r10.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        if $r40 == null goto label54;

        r14 = r10.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

     label41:
        $r35 = r5.<android.content.pm.PackageParser$Package: java.lang.String mScanPath>;

        staticinvoke <com.android.server.pm.PackageManagerService: void setApplicationInfoPaths(android.content.pm.PackageParser$Package,java.lang.String,java.lang.String)>(r5, $r35, r14);

        i4 = i1 | 8;

        r15 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>(r5, i3, i4, l2, r2);

        if z1 == 0 goto label01;

        r17 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r17;

     label42:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void grantPermissionsLPw(android.content.pm.PackageParser$Package,boolean)>(r5, 1);

        $r39 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r38 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        virtualinvoke $r39.<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)>($r38);

        exitmonitor r17;

     label43:
        return r15;

     label44:
        $r128 := @caughtexception;

        r16 = $r128;

     label45:
        exitmonitor r17;

     label46:
        throw r16;

     label47:
        $i12 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $i10 = r10.<com.android.server.pm.PackageSetting: int versionCode>;

        if $i12 >= $i10 goto label48;

        z1 = 1;

        goto label39;

     label48:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r56 = r10.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r51 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reverting from ");

        $r52 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r61 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": new version ");

        $i14 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r60 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" better than installed ");

        $i13 = r10.<com.android.server.pm.PackageSetting: int versionCode>;

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r58);

        $i16 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int packageFlagsToInstallFlags(com.android.server.pm.PackageSetting)>(r10);

        $r63 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r65 = r10.<com.android.server.pm.PackageSetting: java.lang.String resourcePathString>;

        $r64 = r10.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString>;

        r18 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(int,java.lang.String,java.lang.String,java.lang.String)>($i16, $r63, $r65, $r64);

        r19 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r19;

     label49:
        virtualinvoke r18.<com.android.server.pm.PackageManagerService$InstallArgs: void cleanUpResourcesLI()>();

        exitmonitor r19;

     label50:
        z1 = 0;

        goto label39;

     label51:
        $r118 := @caughtexception;

        r20 = $r118;

     label52:
        exitmonitor r19;

     label53:
        throw r20;

     label54:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource path not set for pkg : ");

        $r43 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r45);

        r14 = null;

        goto label41;

     label55:
        r14 = r5.<android.content.pm.PackageParser$Package: java.lang.String mScanPath>;

        goto label41;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch java.lang.Throwable from label26 to label27 with label35;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label36 to label37 with label35;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label45 to label46 with label44;
        catch java.lang.Throwable from label49 to label50 with label51;
        catch java.lang.Throwable from label52 to label53 with label51;
    }

    private void sendPackageAddedForUser(java.lang.String, com.android.server.pm.PackageSetting, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        com.android.server.pm.PackageSetting r2;
        int i0, $i1, $i2;
        android.os.Bundle r3, r12;
        android.os.RemoteException r4, $r11;
        android.app.IActivityManager r5;
        boolean z0, $z1, $z2, $z3;
        int[] $r7;
        android.content.Intent $r9, $r10, r13;
        java.lang.Throwable r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        i0 := @parameter2: int;

        r12 = new android.os.Bundle;

        specialinvoke r12.<android.os.Bundle: void <init>(int)>(1);

        r3 = r12;

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i1);

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", $i2);

        $r7 = newarray (int)[1];

        $r7[0] = i0;

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_ADDED", r1, r3, null, null, $r7);

     label1:
        r5 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z1 != 0 goto label8;

        $z3 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isUpdatedSystemApp(com.android.server.pm.PackageSetting)>(r2);

        if $z3 == 0 goto label6;

     label2:
        goto label8;

     label3:
        if z0 == 0 goto label5;

     label4:
        $z2 = interfaceinvoke r5.<android.app.IActivityManager: boolean isUserRunning(int,boolean)>(i0, 0);

        if $z2 == 0 goto label5;

        r13 = new android.content.Intent;

        specialinvoke r13.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        $r9 = virtualinvoke r13.<android.content.Intent: android.content.Intent addFlags(int)>(32);

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        interfaceinvoke r5.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>(null, $r10, null, null, 0, null, null, null, -1, 0, 0, i0);

     label5:
        return;

     label6:
        z0 = 0;

        goto label3;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

        r14 = (java.lang.Throwable) r4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Unable to bootstrap installed package", r14);

        return;

     label8:
        z0 = 1;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    private void sendPackageBlockedForUser(java.lang.String, com.android.server.pm.PackageSetting, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        com.android.server.pm.PackageSetting r2;
        int i0, $i1, $i2;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r3, $r4;
        int[] $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        i0 := @parameter2: int;

        $r4 = new com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>();

        r3 = $r4;

        r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: java.lang.String removedPackage> = r1;

        $r5 = newarray (int)[1];

        $r5[0] = i0;

        r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int[] removedUsers> = $r5;

        $i1 = r2.<com.android.server.pm.PackageSetting: int appId>;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i1);

        r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: int uid> = $i2;

        virtualinvoke r3.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)>(0, 0, 0);

        return;
    }

    static final void sendPackageBroadcast(java.lang.String, java.lang.String, android.os.Bundle, java.lang.String, android.content.IIntentReceiver, int[])
    {
        java.lang.String r0, r1, r3;
        android.os.Bundle r2;
        android.content.IIntentReceiver r4;
        int[] r5, r7;
        android.app.IActivityManager r6;
        int i0, i1, i2, i3, $i5, $i6, $i7;
        android.net.Uri r9;
        android.content.Intent r10, $r11;
        boolean z0;
        android.os.RemoteException $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.IIntentReceiver;

        r5 := @parameter5: int[];

        r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r6 == null goto label24;

        if r5 != null goto label02;

     label01:
        r5 = interfaceinvoke r6.<android.app.IActivityManager: int[] getRunningUserIds()>();

     label02:
        r7 = r5;

     label03:
        i0 = lengthof r7;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label24;

     label06:
        i2 = r7[i1];

     label07:
        if r1 == null goto label21;

     label08:
        r9 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r1, null);

     label09:
        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>(r0, r9);

        r10 = $r11;

     label10:
        if r2 == null goto label12;

     label11:
        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r2);

     label12:
        if r3 == null goto label14;

     label13:
        virtualinvoke r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r3);

     label14:
        i3 = virtualinvoke r10.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

     label15:
        if i3 <= 0 goto label17;

     label16:
        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        if $i5 == i2 goto label17;

        $i7 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        $i6 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, $i7);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", $i6);

     label17:
        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i2);

        virtualinvoke r10.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

     label18:
        if r4 == null goto label22;

        z0 = 1;

     label19:
        interfaceinvoke r6.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>(null, r10, null, r4, 0, null, null, null, -1, z0, 0, i2);

     label20:
        i1 = i1 + 1;

        goto label05;

     label21:
        r9 = null;

        goto label09;

     label22:
        z0 = 0;

        goto label19;

     label23:
        $r16 := @caughtexception;

     label24:
        return;

        catch android.os.RemoteException from label01 to label02 with label23;
        catch android.os.RemoteException from label03 to label04 with label23;
        catch android.os.RemoteException from label06 to label07 with label23;
        catch android.os.RemoteException from label08 to label09 with label23;
        catch android.os.RemoteException from label09 to label10 with label23;
        catch android.os.RemoteException from label11 to label12 with label23;
        catch android.os.RemoteException from label13 to label14 with label23;
        catch android.os.RemoteException from label14 to label15 with label23;
        catch android.os.RemoteException from label16 to label17 with label23;
        catch android.os.RemoteException from label17 to label18 with label23;
        catch android.os.RemoteException from label19 to label20 with label23;
    }

    private void sendPackageChangedBroadcast(java.lang.String, boolean, java.util.ArrayList, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r8;
        boolean z0;
        java.util.ArrayList r2;
        int i0, $i1, $i2;
        android.os.Bundle r3, $r6;
        java.lang.String[] r4;
        int[] r5;
        java.lang.Object $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.ArrayList;

        i0 := @parameter3: int;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>(int)>(4);

        r3 = $r6;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r8 = (java.lang.String) $r7;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.intent.extra.changed_component_name", $r8);

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        r4 = newarray (java.lang.String)[$i1];

        virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        virtualinvoke r3.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.intent.extra.changed_component_name_list", r4);

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", z0);

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.intent.extra.UID", i0);

        r5 = newarray (int)[1];

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r5[0] = $i2;

        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>("android.intent.action.PACKAGE_CHANGED", r1, r3, null, null, r5);

        return;
    }

    private void sendResourcesChangedBroadcast(boolean, boolean, java.util.ArrayList, int[], android.content.IIntentReceiver)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1;
        java.util.ArrayList r1;
        int[] r2;
        android.content.IIntentReceiver r3;
        int i0;
        android.os.Bundle r4, $r6;
        java.lang.String r5;
        java.lang.String[] $r7, $r9;
        java.lang.Object[] $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.util.ArrayList;

        r2 := @parameter3: int[];

        r3 := @parameter4: android.content.IIntentReceiver;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label4;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r4 = $r6;

        $r7 = newarray (java.lang.String)[i0];

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.lang.String[]) $r8;

        virtualinvoke r4.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.intent.extra.changed_package_list", $r9);

        if r2 == null goto label1;

        virtualinvoke r4.<android.os.Bundle: void putIntArray(java.lang.String,int[])>("android.intent.extra.changed_uid_list", r2);

     label1:
        if z1 == 0 goto label2;

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", z1);

     label2:
        if z0 == 0 goto label5;

        r5 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

     label3:
        staticinvoke <com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>(r5, null, r4, null, r3, null);

     label4:
        return;

     label5:
        r5 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        goto label3;
    }

    private static void setApplicationInfoPaths(android.content.pm.PackageParser$Package, java.lang.String, java.lang.String)
    {
        android.content.pm.PackageParser$Package r0;
        java.lang.String r1, r2;
        android.content.pm.ApplicationInfo $r3, $r4;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r0.<android.content.pm.PackageParser$Package: java.lang.String mScanPath> = r1;

        r0.<android.content.pm.PackageParser$Package: java.lang.String mPath> = r1;

        $r3 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r3.<android.content.pm.ApplicationInfo: java.lang.String sourceDir> = r1;

        $r4 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r4.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir> = r2;

        return;
    }

    private void setEnabledSetting(java.lang.String, java.lang.String, int, int, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, r3, r4, $r25, $r35, $r39, $r48, $r53, $r65, $r71;
        int i0, i1, i2, i3, i4, i6, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z9, $z10, $z11, $z12, $z13;
        java.util.HashMap r5, $r16;
        java.lang.Throwable r6, r10, $r69, $r70;
        com.android.server.pm.PackageSetting r7;
        java.lang.SecurityException r8, $r44;
        java.util.ArrayList r9, $r30;
        long l5;
        android.content.pm.PackageParser$Package r11;
        java.lang.IllegalArgumentException r12, r13, r15, $r41, $r54, $r59, $r64;
        android.content.Context $r14;
        java.lang.Object $r17;
        com.android.server.pm.Settings $r18, $r31;
        java.lang.StringBuilder $r19, $r21, $r22, $r23, $r24, $r33, $r34, $r36, $r37, $r38, $r40, $r42, $r43, $r45, $r46, $r47, $r49, $r50, $r51, $r52, $r55, $r56, $r57, $r58, $r60, $r61, $r62, $r63, $r66, $r67, $r68;
        android.content.pm.ApplicationInfo $r20;
        com.android.server.pm.PackageManagerService$PackageHandler $r26, $r27;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r28, $r29, $r32;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        if i0 == 0 goto label01;

        if i0 == 1 goto label01;

        if i0 == 2 goto label01;

        if i0 == 3 goto label01;

        if i0 == 4 goto label01;

        $r64 = new java.lang.IllegalArgumentException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid new component state: ");

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r71 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r71);

        throw $r64;

     label01:
        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        i4 = virtualinvoke $r14.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CHANGE_COMPONENT_ENABLED_STATE");

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>(i3, i2, 0, "set enabled");

        if i4 != 0 goto label11;

        z0 = 1;

     label02:
        if r2 != null goto label12;

        z1 = 1;

     label03:
        if z1 == 0 goto label13;

        r4 = r1;

     label04:
        r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r5;

     label05:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r18.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (com.android.server.pm.PackageSetting) $r17;

     label06:
        if r7 != null goto label15;

        if r2 != null goto label14;

     label07:
        $r54 = new java.lang.IllegalArgumentException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r65);

        r13 = $r54;

        throw r13;

     label08:
        $r70 := @caughtexception;

        r6 = $r70;

     label09:
        exitmonitor r5;

     label10:
        throw r6;

     label11:
        z0 = 0;

        goto label02;

     label12:
        z1 = 0;

        goto label03;

     label13:
        r4 = r2;

        goto label04;

     label14:
        $r59 = new java.lang.IllegalArgumentException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component: ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r53 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r53);

        r15 = $r59;

        throw r15;

     label15:
        if z0 != 0 goto label17;

     label16:
        $i14 = r7.<com.android.server.pm.PackageSetting: int appId>;

        $z12 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i3, $i14);

        if $z12 != 0 goto label17;

        $r44 = new java.lang.SecurityException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: attempt to change component state from pid=");

        $i16 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r52 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", package uid=");

        $i15 = r7.<com.android.server.pm.PackageSetting: int appId>;

        $r47 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.SecurityException: void <init>(java.lang.String)>($r48);

        r8 = $r44;

        throw r8;

     label17:
        if r2 != null goto label34;

     label18:
        $i13 = virtualinvoke r7.<com.android.server.pm.PackageSetting: int getEnabled(int)>(i2);

        if $i13 != i0 goto label56;

        exitmonitor r5;

     label19:
        return;

     label20:
        virtualinvoke r7.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(i0, i2, r3);

     label21:
        $r31 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r31.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        $r32 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        r9 = virtualinvoke $r32.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: java.util.ArrayList get(int,java.lang.String)>(i2, r1);

     label22:
        if r9 != null goto label59;

        z2 = 1;

     label23:
        if z2 == 0 goto label25;

     label24:
        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r9 = $r30;

     label25:
        $z6 = virtualinvoke r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r4);

        if $z6 != 0 goto label26;

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label26:
        $i8 = i1 & 1;

        if $i8 != 0 goto label48;

        z3 = 1;

     label27:
        $r28 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r28.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void remove(int,java.lang.String)>(i2, r1);

     label28:
        exitmonitor r5;

     label29:
        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z3 == 0 goto label33;

     label30:
        $i11 = r7.<com.android.server.pm.PackageSetting: int appId>;

        i6 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i2, $i11);

     label31:
        $i10 = i1 & 1;

        if $i10 == 0 goto label54;

        z5 = 1;

     label32:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageChangedBroadcast(java.lang.String,boolean,java.util.ArrayList,int)>(r1, z5, r9, i6);

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        return;

     label34:
        r11 = r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label35:
        if r11 == null goto label37;

     label36:
        $z13 = virtualinvoke r11.<android.content.pm.PackageParser$Package: boolean hasComponentClassName(java.lang.String)>(r2);

        if $z13 != 0 goto label58;

     label37:
        $r20 = r11.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r20.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i7 < 16 goto label38;

        $r41 = new java.lang.IllegalArgumentException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component class ");

        $r38 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in ");

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r39);

        r12 = $r41;

        throw r12;

     label38:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setComponentEnabledSetting: component class ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist in ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r25);

     label39:
        goto label58;

     label40:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid new component state: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r35);

        exitmonitor r5;

     label41:
        return;

     label42:
        $z9 = virtualinvoke r7.<com.android.server.pm.PackageSetting: boolean enableComponentLPw(java.lang.String,int)>(r2, i2);

        if $z9 != 0 goto label21;

        exitmonitor r5;

     label43:
        return;

     label44:
        $z10 = virtualinvoke r7.<com.android.server.pm.PackageSetting: boolean disableComponentLPw(java.lang.String,int)>(r2, i2);

        if $z10 != 0 goto label21;

        exitmonitor r5;

     label45:
        return;

     label46:
        $z11 = virtualinvoke r7.<com.android.server.pm.PackageSetting: boolean restoreComponentLPw(java.lang.String,int)>(r2, i2);

        if $z11 != 0 goto label21;

        exitmonitor r5;

     label47:
        return;

     label48:
        if z2 == 0 goto label50;

     label49:
        $r29 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r29.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void put(int,java.lang.String,java.util.ArrayList)>(i2, r1, r9);

     label50:
        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        z4 = virtualinvoke $r26.<com.android.server.pm.PackageManagerService$PackageHandler: boolean hasMessages(int)>(1);

     label51:
        z3 = 0;

        if z4 != 0 goto label28;

     label52:
        $r27 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r27.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(1, 10000L);

     label53:
        z3 = 0;

        goto label28;

     label54:
        z5 = 0;

        goto label32;

     label55:
        $r69 := @caughtexception;

        r10 = $r69;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw r10;

     label56:
        if i0 == 0 goto label57;

        if i0 != 1 goto label20;

     label57:
        r3 = null;

        goto label20;

     label58:
        tableswitch(i0)
        {
            case 0: goto label46;
            case 1: goto label42;
            case 2: goto label44;
            default: goto label40;
        };

     label59:
        z2 = 0;

        goto label23;

        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
        catch java.lang.Throwable from label18 to label19 with label08;
        catch java.lang.Throwable from label20 to label21 with label08;
        catch java.lang.Throwable from label21 to label22 with label08;
        catch java.lang.Throwable from label24 to label25 with label08;
        catch java.lang.Throwable from label25 to label26 with label08;
        catch java.lang.Throwable from label27 to label28 with label08;
        catch java.lang.Throwable from label28 to label29 with label08;
        catch java.lang.Throwable from label30 to label31 with label55;
        catch java.lang.Throwable from label32 to label33 with label55;
        catch java.lang.Throwable from label34 to label35 with label08;
        catch java.lang.Throwable from label36 to label37 with label08;
        catch java.lang.Throwable from label37 to label38 with label08;
        catch java.lang.Throwable from label38 to label39 with label08;
        catch java.lang.Throwable from label40 to label41 with label08;
        catch java.lang.Throwable from label42 to label43 with label08;
        catch java.lang.Throwable from label44 to label45 with label08;
        catch java.lang.Throwable from label46 to label47 with label08;
        catch java.lang.Throwable from label49 to label50 with label08;
        catch java.lang.Throwable from label50 to label51 with label08;
        catch java.lang.Throwable from label52 to label53 with label08;
    }

    private void setInternalAppNativeLibraryPath(android.content.pm.PackageParser$Package, com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        com.android.server.pm.PackageSetting r2;
        java.lang.String r3, r4, $r5;
        java.io.File $r6, $r7;
        android.content.pm.ApplicationInfo $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: com.android.server.pm.PackageSetting;

        $r5 = r2.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        r3 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getApkName(java.lang.String)>($r5);

        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.io.File mAppLibInstallDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r3);

        r4 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r8 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r8.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = r4;

        r2.<com.android.server.pm.PackageSetting: java.lang.String nativeLibraryPathString> = r4;

        return;
    }

    private void setUpCustomResolverActivity(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r29;
        android.content.pm.ApplicationInfo $r4, $r9;
        android.content.pm.ActivityInfo $r5, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.content.ComponentName $r6, $r24, $r27;
        java.lang.String $r8, $r10, $r28;
        android.content.pm.ResolveInfo $r19, $r20, $r21, $r22;
        java.lang.StringBuilder $r23, $r25, $r26;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        r0.<com.android.server.pm.PackageManagerService: boolean mResolverReplaced> = 1;

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r4 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r4;

        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        $r8 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getClassName()>();

        $r7.<android.content.pm.ActivityInfo: java.lang.String name> = $r8;

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r9 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r11.<android.content.pm.ActivityInfo: java.lang.String packageName> = $r10;

        $r12 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r12.<android.content.pm.ActivityInfo: java.lang.String processName> = null;

        $r13 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r13.<android.content.pm.ActivityInfo: int launchMode> = 0;

        $r14 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r14.<android.content.pm.ActivityInfo: int flags> = 288;

        $r16 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r16.<android.content.pm.ActivityInfo: int theme> = 0;

        $r15 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r15.<android.content.pm.ActivityInfo: boolean exported> = 1;

        $r18 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r18.<android.content.pm.ActivityInfo: boolean enabled> = 1;

        $r20 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r17 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        $r20.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = $r17;

        $r19 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r19.<android.content.pm.ResolveInfo: int priority> = 0;

        $r22 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r22.<android.content.pm.ResolveInfo: int preferredOrder> = 0;

        $r21 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        $r21.<android.content.pm.ResolveInfo: int match> = 0;

        $r24 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mCustomResolverComponentName>;

        r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName> = $r24;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replacing default ResolverActivity with custom activity: ");

        $r27 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r28);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r29 := @caughtexception;

        r3 = $r29;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static java.lang.String[] splitString(java.lang.String, char)
    {
        java.lang.String r0, $r2, $r3;
        char c0;
        int i1, i2, i3, i4, i5, i6, i7, $i8;
        java.lang.String[] r1;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        i1 = 1;

        i2 = 0;

     label1:
        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c0, i2);

        if i3 < 0 goto label2;

        i1 = i1 + 1;

        i2 = i3 + 1;

        goto label1;

     label2:
        r1 = newarray (java.lang.String)[i1];

        i4 = 0;

        i5 = 0;

        i6 = 0;

     label3:
        i7 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c0, i4);

        if i7 < 0 goto label4;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i6, i7);

        r1[i5] = $r3;

        i5 = i5 + 1;

        i4 = i7 + 1;

        i6 = i4;

        goto label3;

     label4:
        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i6, $i8);

        r1[i5] = $r2;

        return r1;
    }

    private void unloadAllContainers(java.util.Set)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Set r1;
        java.util.Iterator r2;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r3;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r7;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.pm.PackageManagerService$AsecInstallArgs) $r6;

        r4 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r4;

     label2:
        virtualinvoke r3.<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean doPostDeleteLI(boolean)>(0);

        exitmonitor r4;

     label3:
        goto label1;

     label4:
        $r7 := @caughtexception;

        r5 = $r7;

     label5:
        exitmonitor r4;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void unloadMediaPackages(java.util.HashMap, int[], boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1, r7;
        int[] r2;
        boolean z0, $z1, $z3;
        java.util.ArrayList r3, r4, r30, r31;
        java.util.Set r5;
        java.util.Iterator r6;
        java.lang.Throwable r8, r15, $r28, $r29;
        com.android.server.pm.PackageManagerService$11 r9, r34;
        com.android.server.pm.PackageManagerService$PackageHandler r10, $r20;
        byte b0;
        android.os.Message r11;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r12;
        com.android.server.pm.PackageManagerService$PackageRemovedInfo r13, r32;
        java.lang.String r14, $r25;
        java.lang.Object r16, $r23;
        com.android.server.pm.Settings $r19;
        int $i1;
        java.lang.StringBuilder $r26, $r27, r33;
        android.content.IIntentReceiver r35;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.HashMap;

        r2 := @parameter1: int[];

        z0 := @parameter2: boolean;

        r30 = new java.util.ArrayList;

        specialinvoke r30.<java.util.ArrayList: void <init>()>();

        r3 = r30;

        r31 = new java.util.ArrayList;

        specialinvoke r31.<java.util.ArrayList: void <init>()>();

        r4 = r31;

        r5 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.pm.PackageManagerService$AsecInstallArgs) $r23;

        r14 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()>();

        r32 = new com.android.server.pm.PackageManagerService$PackageRemovedInfo;

        specialinvoke r32.<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>();

        r13 = r32;

        r16 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r16;

     label02:
        $z3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>(r14, null, 0, null, null, 1, r13, 0);

        if $z3 == 0 goto label08;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

     label03:
        exitmonitor r16;

     label04:
        goto label01;

     label05:
        $r28 := @caughtexception;

        r15 = $r28;

     label06:
        exitmonitor r16;

     label07:
        throw r15;

     label08:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete pkg from sdcard : ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r25);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label09:
        goto label03;

     label10:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label11:
        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r19.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r7;

     label12:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label16;

        r34 = new com.android.server.pm.PackageManagerService$11;

        specialinvoke r34.<com.android.server.pm.PackageManagerService$11: void <init>(com.android.server.pm.PackageManagerService,boolean,java.util.Set)>(r0, z0, r5);

        r9 = r34;

        r35 = (android.content.IIntentReceiver) r9;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendResourcesChangedBroadcast(boolean,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>(0, 0, r3, r2, r35);

        return;

     label13:
        $r29 := @caughtexception;

        r8 = $r29;

     label14:
        exitmonitor r7;

     label15:
        throw r8;

     label16:
        r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        if z0 == 0 goto label18;

        b0 = 1;

     label17:
        r11 = virtualinvoke r10.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(12, b0, -1, r5);

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r20.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r11);

        return;

     label18:
        b0 = 0;

        goto label17;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private java.util.ArrayList updateAllSharedLibrariesLPw(android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r4;
        java.util.ArrayList r2, $r8, $r9, $r10, $r11, $r12;
        java.util.Iterator r3;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1, $z4;
        java.lang.Object $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 = null;

        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageParser$Package) $r7;

        $r9 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r8 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasString(java.util.List,java.util.List)>($r9, $r8);

        if $z1 != 0 goto label2;

        $r11 = r4.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r12 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasString(java.util.List,java.util.List)>($r11, $r12);

        if $z4 == 0 goto label1;

     label2:
        if r2 != null goto label3;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r2 = $r10;

     label3:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean updateSharedLibrariesLPw(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>(r4, r1);

        goto label1;

     label4:
        return r2;
    }

    private void updateAllSharedLibrariesLPw()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.Iterator r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.content.pm.PackageParser$Package $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.content.pm.PackageParser$Package) $r4;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean updateSharedLibrariesLPw(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>($r5, null);

        goto label1;

     label2:
        return;
    }

    private void updateExternalMediaStatusInner(boolean, boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1, z2, $z3, $z5, $z6;
        int[] r1, r5;
        java.util.HashSet r2, $r12;
        java.util.HashMap r3, r6, $r13, $r14;
        java.lang.String[] r4;
        java.lang.Throwable r7, $r31, $r32;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r8, r9, $r18, $r20, $r23, $r24, $r26, $r27;
        com.android.server.pm.PackageSetting r10;
        com.android.server.pm.PackageManagerService$AsecInstallArgs r11, $r19;
        java.lang.Object $r15;
        com.android.server.pm.Settings $r16;
        java.lang.StringBuilder $r17, $r21, $r22, $r28, $r29, $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r1 = null;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r2 = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r3 = $r13;

        r4 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()>();

        if r4 == null goto label01;

        $i9 = lengthof r4;

        if $i9 != 0 goto label03;

     label01:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", "No secure containers on sdcard");

     label02:
        if z0 == 0 goto label30;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void loadMediaPackages(java.util.HashMap,int[],java.util.HashSet)>(r3, r1, r2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void startCleaningPackages()>();

        return;

     label03:
        $i11 = lengthof r4;

        r5 = newarray (int)[$i11];

        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label04:
        i0 = lengthof r4;

     label05:
        i1 = 0;

        i2 = 0;

     label06:
        if i1 >= i0 goto label26;

     label07:
        r8 = r4[i1];

        r9 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)>(r8);

     label08:
        if r9 != null goto label11;

     label09:
        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

     label10:
        i6 = i2;

        goto label33;

     label11:
        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (com.android.server.pm.PackageSetting) $r15;

     label12:
        if r10 != null goto label15;

     label13:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting container with no matching settings ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r27);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

     label14:
        i6 = i2;

        goto label33;

     label15:
        if z2 == 0 goto label18;

        if z0 != 0 goto label18;

     label16:
        $z5 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(com.android.server.pm.PackageSetting)>(r10);

        if $z5 != 0 goto label18;

     label17:
        i6 = i2;

        goto label33;

     label18:
        $r19 = new com.android.server.pm.PackageManagerService$AsecInstallArgs;

        $z3 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isForwardLocked(com.android.server.pm.PackageSetting)>(r10);

        specialinvoke $r19.<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,boolean)>(r0, r8, $z3);

        r11 = $r19;

        $r18 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        if $r18 == null goto label24;

        $r24 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        $r23 = virtualinvoke r11.<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>();

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z6 == 0 goto label24;

        $r26 = r10.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r26);

        i7 = r10.<com.android.server.pm.PackageSetting: int appId>;

     label19:
        if i7 == -1 goto label35;

        i6 = i2 + 1;

     label20:
        r5[i2] = i7;

     label21:
        goto label33;

     label22:
        exitmonitor r6;

     label23:
        throw r7;

     label24:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting stale container for ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r20);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

     label25:
        goto label35;

     label26:
        exitmonitor r6;

     label27:
        r1 = null;

        if i2 <= 0 goto label02;

        staticinvoke <java.util.Arrays: void sort(int[],int,int)>(r5, 0, i2);

        r1 = newarray (int)[i2];

        $i10 = r5[0];

        r1[0] = $i10;

        i4 = 1;

        i3 = 0;

     label28:
        if i4 >= i2 goto label02;

        $i14 = i4 - 1;

        $i12 = r5[$i14];

        $i15 = r5[i4];

        if $i12 == $i15 goto label32;

        i5 = i3 + 1;

        $i13 = r5[i4];

        r1[i3] = $i13;

     label29:
        i4 = i4 + 1;

        i3 = i5;

        goto label28;

     label30:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void unloadMediaPackages(java.util.HashMap,int[],boolean)>(r3, r1, z1);

        return;

     label31:
        $r31 := @caughtexception;

        r7 = $r31;

        goto label22;

     label32:
        i5 = i3;

        goto label29;

     label33:
        i1 = i1 + 1;

        i2 = i6;

        goto label06;

     label34:
        $r32 := @caughtexception;

        r7 = $r32;

        goto label22;

     label35:
        i6 = i2;

        goto label33;

        catch java.lang.Throwable from label04 to label05 with label34;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label09 to label10 with label31;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label20 to label21 with label34;
        catch java.lang.Throwable from label22 to label23 with label34;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
    }

    private void updatePermissionsLPw(java.lang.String, android.content.pm.PackageParser$Package, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r23, $r24, $r28, $r30, $r32, $r34, $r36, $r38, $r41, $r43, $r62, $r63, $r67, $r68, $r72, $r74, $r76, $r78, $r80, $r81, $r87;
        android.content.pm.PackageParser$Package r2, r6, $r50;
        int i0, $i1, $i2, $i3, $i4, $i7;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Iterator r3, r4, r5;
        com.android.server.pm.BasePermission r7, r8, r9;
        com.android.server.pm.Settings $r10, $r14, $r42, $r88;
        java.util.Collection $r11, $r15, $r17;
        java.util.HashMap $r12, $r13, $r16, $r40, $r86;
        java.lang.Object $r18, $r20, $r46, $r60, $r85;
        com.android.server.pm.PackageSettingBase $r19, $r22, $r45, $r47, $r48, $r59, $r69, $r84;
        java.lang.StringBuilder $r21, $r25, $r26, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r65, $r66, $r70, $r71, $r73, $r75, $r77, $r79, $r82, $r83;
        android.content.pm.PackageParser$Permission $r44, $r51, $r52, $r54, $r55, $r64;
        android.content.pm.PermissionInfo $r49, $r53, $r56, $r57, $r58, $r61;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        i0 := @parameter2: int;

        z0 = 1;

        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r10.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r11 = virtualinvoke $r12.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r60 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.pm.BasePermission) $r60;

        $r59 = r9.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r59 != null goto label02;

        $r88 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r86 = $r88.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r87 = r9.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r85 = virtualinvoke $r86.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r87);

        $r84 = (com.android.server.pm.PackageSettingBase) $r85;

        r9.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = $r84;

     label02:
        $r69 = r9.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r69 != null goto label03;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling permission tree: ");

        $r81 = r9.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r79 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r80 = r9.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r77 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r78);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label01;

     label03:
        if r1 == null goto label01;

        $r68 = r9.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r68);

        if $z7 == 0 goto label01;

        if r2 == null goto label04;

        $r72 = r9.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z8 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasPermission(android.content.pm.PackageParser$Package,java.lang.String)>(r2, $r72);

        if $z8 != 0 goto label01;

     label04:
        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing old permission tree: ");

        $r67 = r9.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r75 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r76 = r9.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r74);

        i0 = i0 | 1;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label01;

     label05:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.BasePermission) $r20;

        $i3 = r7.<com.android.server.pm.BasePermission: int type>;

        if $i3 != 2 goto label07;

        $r48 = r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r48 != null goto label07;

        $r49 = r7.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        if $r49 == null goto label07;

        $r43 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        r8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission findPermissionTreeLP(java.lang.String)>($r43);

        if r8 == null goto label07;

        $r44 = r8.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r44 == null goto label07;

        $r45 = r8.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = $r45;

        $r54 = new android.content.pm.PackageParser$Permission;

        $r55 = r8.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r50 = $r55.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $r56 = new android.content.pm.PermissionInfo;

        $r57 = r7.<com.android.server.pm.BasePermission: android.content.pm.PermissionInfo pendingInfo>;

        specialinvoke $r56.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>($r57);

        specialinvoke $r54.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>($r50, $r56);

        r7.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = $r54;

        $r51 = r7.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r61 = $r51.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r52 = r8.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r53 = $r52.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r62 = $r53.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r61.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r62;

        $r64 = r7.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r58 = $r64.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r63 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r58.<android.content.pm.PermissionInfo: java.lang.String name> = $r63;

        $i7 = r8.<com.android.server.pm.BasePermission: int uid>;

        r7.<com.android.server.pm.BasePermission: int uid> = $i7;

     label07:
        $r19 = r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r19 != null goto label08;

        $r42 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r40 = $r42.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r41 = r7.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r46 = virtualinvoke $r40.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r41);

        $r47 = (com.android.server.pm.PackageSettingBase) $r46;

        r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting> = $r47;

     label08:
        $r22 = r7.<com.android.server.pm.BasePermission: com.android.server.pm.PackageSettingBase packageSetting>;

        if $r22 != null goto label09;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling permission: ");

        $r34 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r38 = r7.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r36);

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        goto label06;

     label09:
        if r1 == null goto label06;

        $r23 = r7.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z5 == 0 goto label06;

        if r2 == null goto label10;

        $r32 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        $z6 = staticinvoke <com.android.server.pm.PackageManagerService: boolean hasPermission(android.content.pm.PackageParser$Package,java.lang.String)>(r2, $r32);

        if $z6 != 0 goto label06;

     label10:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing old permission: ");

        $r24 = r7.<com.android.server.pm.BasePermission: java.lang.String name>;

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        $r30 = r7.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r28);

        i0 = i0 | 1;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        goto label06;

     label11:
        $i1 = i0 & 1;

        if $i1 == 0 goto label15;

        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.PackageParser$Package) $r18;

        if r6 == r2 goto label12;

        $i4 = i0 & 4;

        if $i4 == 0 goto label14;

        z1 = 1;

     label13:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void grantPermissionsLPw(android.content.pm.PackageParser$Package,boolean)>(r6, z1);

        goto label12;

     label14:
        z1 = 0;

        goto label13;

     label15:
        if r2 == null goto label17;

        $i2 = i0 & 2;

        if $i2 == 0 goto label18;

     label16:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void grantPermissionsLPw(android.content.pm.PackageParser$Package,boolean)>(r2, z0);

     label17:
        return;

     label18:
        z0 = 0;

        goto label16;
    }

    private void updateSettingsLI(android.content.pm.PackageParser$Package, java.lang.String, int[], boolean[], com.android.server.pm.PackageManagerService$PackageInstalledInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        java.lang.String r2, r6, r11;
        int[] r3, r13, $r22;
        boolean[] r4;
        com.android.server.pm.PackageManagerService$PackageInstalledInfo r5;
        java.util.HashMap r7, r9, $r23;
        java.lang.Throwable r8, r10, $r25, $r26;
        int i0, i2, i3, i4, $i6, $i7, $i8, $i9, $i10;
        byte b1, $b5;
        com.android.server.pm.PackageSetting r12;
        com.android.server.pm.Settings $r14, $r15, $r18, $r19, $r20, $r21;
        java.util.ArrayList $r16;
        android.content.pm.ApplicationInfo $r17;
        boolean $z0, $z1;
        java.lang.Object $r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: int[];

        r4 := @parameter3: boolean[];

        r5 := @parameter4: com.android.server.pm.PackageManagerService$PackageInstalledInfo;

        r6 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label01:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r15.<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>(r6, 0);

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r14.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r7;

     label02:
        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int moveDexFilesLI(android.content.pm.PackageParser$Package)>(r1);

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = i0;

        if i0 == 1 goto label06;

        return;

     label03:
        $r26 := @caughtexception;

        r8 = $r26;

     label04:
        exitmonitor r7;

     label05:
        throw r8;

     label06:
        r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r9;

     label07:
        r11 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $i6 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label23;

     label08:
        b1 = 1;

     label09:
        $b5 = b1 | 2;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updatePermissionsLPw(java.lang.String,android.content.pm.PackageParser$Package,int)>(r11, r1, $b5);

        $z0 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r1);

        if $z0 == 0 goto label18;

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r23 = $r19.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r12 = (com.android.server.pm.PackageSetting) $r24;

     label10:
        if r12 == null goto label18;

     label11:
        $r22 = r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        if $r22 == null goto label24;

        r13 = r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int[] origUsers>;

        i3 = lengthof r13;

     label12:
        i4 = 0;

     label13:
        if i4 >= i3 goto label24;

     label14:
        $i9 = r13[i4];

        virtualinvoke r12.<com.android.server.pm.PackageSetting: void setEnabled(int,int,java.lang.String)>(0, $i9, r2);

     label15:
        i4 = i4 + 1;

        goto label13;

     label16:
        $i8 = lengthof r3;

        if i2 >= $i8 goto label18;

        $z1 = r4[i2];

        $i10 = r3[i2];

        virtualinvoke r12.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>($z1, $i10);

     label17:
        i2 = i2 + 1;

        goto label16;

     label18:
        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: java.lang.String name> = r6;

        $r17 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int uid> = $i7;

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: android.content.pm.PackageParser$Package pkg> = r1;

        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r18.<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>(r6, 1);

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>(r6, r2);

        r5.<com.android.server.pm.PackageManagerService$PackageInstalledInfo: int returnCode> = 1;

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r21.<com.android.server.pm.Settings: void writeLPr()>();

        exitmonitor r9;

     label19:
        return;

     label20:
        $r25 := @caughtexception;

        r10 = $r25;

     label21:
        exitmonitor r9;

     label22:
        throw r10;

     label23:
        b1 = 0;

        goto label09;

     label24:
        if r3 == null goto label18;

        if r4 == null goto label18;

        i2 = 0;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    private boolean updateSharedLibrariesLPw(android.content.pm.PackageParser$Package, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i8, $i9;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r3, r4;
        java.util.ArrayList $r5, $r9, $r10, $r13, $r25, $r27, $r32, $r42, $r43, $r48;
        java.lang.String[] $r6, $r8, $r11, $r12, $r14, $r47;
        java.util.HashMap $r7, $r16, $r30, $r46;
        java.lang.Object $r15, $r17, $r26, $r31, $r34, $r41;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r24, $r28, $r33, $r35, $r36, $r38, $r39, $r45;
        java.lang.String $r19, $r23, $r29, $r37, $r40, $r44;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r5 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r5 != null goto label01;

        $r48 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r48 == null goto label15;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries>;

        if $r6 == null goto label02;

        $r47 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries>;

        $i8 = lengthof $r47;

        $r46 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $i9 = virtualinvoke $r46.<java.util.HashMap: int size()>();

        if $i8 >= $i9 goto label03;

     label02:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $i5 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        $r8 = newarray (java.lang.String)[$i5];

        r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries> = $r8;

     label03:
        i0 = 0;

        $r10 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        if $r10 == null goto label06;

        $r43 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        i1 = virtualinvoke $r43.<java.util.ArrayList: int size()>();

     label04:
        i2 = 0;

     label05:
        if i2 >= i1 goto label08;

        $r30 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r32 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r31 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r34 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r31);

        r4 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r34;

        if r4 != null goto label07;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r37 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires unavailable shared library ");

        $r42 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesLibraries>;

        $r41 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r40 = (java.lang.String) $r41;

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; failing!");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r44);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -9;

        return 0;

     label06:
        i1 = 0;

        goto label04;

     label07:
        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int addSharedLibraryLPw(com.android.server.pm.PackageManagerService$SharedLibraryEntry,int,android.content.pm.PackageParser$Package)>(r4, i0, r2);

        i2 = i2 + 1;

        goto label05;

     label08:
        $r9 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        if $r9 == null goto label12;

        $r27 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        i3 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

     label09:
        i4 = 0;

     label10:
        if i4 >= i3 goto label14;

        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r13 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r3 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r17;

        if r3 != null goto label13;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r19 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" desires unavailable shared library ");

        $r25 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList usesOptionalLibraries>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r23 = (java.lang.String) $r26;

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring!");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r29);

     label11:
        i4 = i4 + 1;

        goto label10;

     label12:
        i3 = 0;

        goto label09;

     label13:
        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int addSharedLibraryLPw(com.android.server.pm.PackageManagerService$SharedLibraryEntry,int,android.content.pm.PackageParser$Package)>(r3, i0, r2);

        goto label11;

     label14:
        if i0 <= 0 goto label16;

        $r12 = newarray (java.lang.String)[i0];

        r1.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles> = $r12;

        $r14 = r0.<com.android.server.pm.PackageManagerService: java.lang.String[] mTmpSharedLibraries>;

        $r11 = r1.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, $r11, 0, i0);

     label15:
        return 1;

     label16:
        r1.<android.content.pm.PackageParser$Package: java.lang.String[] usesLibraryFiles> = null;

        goto label15;
    }

    private boolean verifyPackageUpdateLPr(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        android.content.pm.PackageParser$Package r2;
        int $i0, $i1;
        java.lang.String $r3, $r8, $r11, $r13, $r18, $r19, $r23;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r20, $r21, $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $i0 = r1.<com.android.server.pm.PackageSetting: int pkgFlags>;

        $i1 = 1 & $i0;

        if $i1 != 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update from ");

        $r18 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r19 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": old package not in system partition");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

        return 0;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r3 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        if $r5 == null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update from ");

        $r8 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": old package still exists");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r13);

        return 0;

     label2:
        return 1;
    }

    private boolean verifySignaturesLP(com.android.server.pm.PackageSetting, android.content.pm.PackageParser$Package)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        android.content.pm.PackageParser$Package r2;
        com.android.server.pm.PackageSignatures $r3, $r7, $r10, $r24;
        android.content.pm.Signature[] $r4, $r8, $r11, $r12, $r23, $r25;
        com.android.server.pm.SharedUserSetting $r5, $r6, $r9, $r19;
        int $i0, $i2;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r20, $r21, $r26, $r27, $r28, $r29;
        java.lang.String $r14, $r18, $r22, $r30, $r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        r2 := @parameter1: android.content.pm.PackageParser$Package;

        $r3 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r4 = $r3.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r4 == null goto label1;

        $r24 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r25 = $r24.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r23 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i2 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r25, $r23);

        if $i2 == 0 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r30 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signatures do not match the previously installed version; ignoring!");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r31);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -7;

        return 0;

     label1:
        $r5 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r5 == null goto label2;

        $r6 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r7 = $r6.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r8 = $r7.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        if $r8 == null goto label2;

        $r9 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r10 = $r9.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        $r12 = $r10.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $r11 = r2.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $i0 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r12, $r11);

        if $i0 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r14 = r2.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no signatures that match those in shared user ");

        $r19 = r1.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r18 = $r19.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring!");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r22);

        r0.<com.android.server.pm.PackageManagerService: int mLastScanError> = -8;

        return 0;

     label2:
        return 1;
    }

    public void addPackageToPreferred(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "addPackageToPreferred: this is now a no-op");

        return;
    }

    public boolean addPermission(android.content.pm.PermissionInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r4;
        boolean z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>(r1, 0);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean addPermissionAsync(android.content.pm.PermissionInfo)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r4;
        boolean z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>(r1, 1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean addPermissionLocked(android.content.pm.PermissionInfo, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PermissionInfo r1, r4, $r11, $r17, $r18, $r29;
        boolean z0, z1, z2, $z3, $z4;
        com.android.server.pm.BasePermission r2, r3, $r33;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r5, $r7, $r16, $r23, $r34, $r36, $r39, $r40;
        com.android.server.pm.Settings $r6, $r19, $r20;
        java.util.HashMap $r8, $r24;
        java.lang.Object $r9;
        android.content.pm.PackageParser$Permission $r10, $r13, $r14, $r15, $r22, $r26, $r28;
        android.content.pm.PackageParser$Package $r12, $r25, $r27;
        java.lang.StringBuilder $r30, $r31, $r35;
        java.lang.SecurityException $r32, $r37;
        java.lang.CharSequence $r38;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PermissionInfo;

        z0 := @parameter1: boolean;

        $i1 = r1.<android.content.pm.PermissionInfo: int labelRes>;

        if $i1 != 0 goto label1;

        $r38 = r1.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r38 != null goto label1;

        $r37 = new java.lang.SecurityException;

        specialinvoke $r37.<java.lang.SecurityException: void <init>(java.lang.String)>("Label must be specified in permission");

        throw $r37;

     label1:
        $r5 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        r2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission checkPermissionTreeLP(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r7 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (com.android.server.pm.BasePermission) $r9;

        if r3 != null goto label6;

        z1 = 1;

     label2:
        z2 = 1;

        $i2 = r1.<android.content.pm.PermissionInfo: int protectionLevel>;

        i0 = staticinvoke <android.content.pm.PermissionInfo: int fixProtectionLevel(int)>($i2);

        if z1 == 0 goto label7;

        $r33 = new com.android.server.pm.BasePermission;

        $r39 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r40 = r2.<com.android.server.pm.BasePermission: java.lang.String sourcePackage>;

        specialinvoke $r33.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>($r39, $r40, 2);

        r3 = $r33;

     label3:
        r3.<com.android.server.pm.BasePermission: int protectionLevel> = i0;

        $r11 = new android.content.pm.PermissionInfo;

        specialinvoke $r11.<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>(r1);

        r4 = $r11;

        r4.<android.content.pm.PermissionInfo: int protectionLevel> = i0;

        $r10 = new android.content.pm.PackageParser$Permission;

        $r13 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r12 = $r13.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        specialinvoke $r10.<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>($r12, r4);

        r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = $r10;

        $r15 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r18 = $r15.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r14 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r17 = $r14.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r16 = $r17.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r18.<android.content.pm.PermissionInfo: java.lang.String packageName> = $r16;

        $i5 = r2.<com.android.server.pm.BasePermission: int uid>;

        r3.<com.android.server.pm.BasePermission: int uid> = $i5;

        if z1 == 0 goto label4;

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r24 = $r19.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r23 = r4.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r3);

     label4:
        if z2 == 0 goto label5;

        if z0 != 0 goto label9;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r20.<com.android.server.pm.Settings: void writeLPr()>();

     label5:
        return z1;

     label6:
        z1 = 0;

        goto label2;

     label7:
        $i4 = r3.<com.android.server.pm.BasePermission: int type>;

        if $i4 == 2 goto label8;

        $r32 = new java.lang.SecurityException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to modify non-dynamic permission ");

        $r36 = r1.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.SecurityException: void <init>(java.lang.String)>($r34);

        throw $r32;

     label8:
        $i3 = r3.<com.android.server.pm.BasePermission: int protectionLevel>;

        if $i3 != i0 goto label3;

        $r22 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r25 = $r22.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $r26 = r2.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r27 = $r26.<android.content.pm.PackageParser$Permission: android.content.pm.PackageParser$Package owner>;

        $z3 = virtualinvoke $r25.<java.lang.Object: boolean equals(java.lang.Object)>($r27);

        if $z3 == 0 goto label3;

        $i7 = r3.<com.android.server.pm.BasePermission: int uid>;

        $i6 = r2.<com.android.server.pm.BasePermission: int uid>;

        if $i7 != $i6 goto label3;

        $r28 = r3.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r29 = $r28.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean comparePermissionInfos(android.content.pm.PermissionInfo,android.content.pm.PermissionInfo)>($r29, r1);

        if $z4 == 0 goto label3;

        z2 = 0;

        goto label3;

     label9:
        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

        return z1;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPreferredActivityInternal(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean,int)>(r1, i0, r2, r3, 1, i1);

        return;
    }

    public java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String[] r1, r2;
        java.util.HashMap r3, $r8;
        java.lang.Throwable r4, $r10;
        int i0, $i1, $i2;
        java.lang.String r5, $r7;
        com.android.server.pm.Settings $r6;
        java.lang.Object $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String[];

        $i1 = lengthof r1;

        r2 = newarray (java.lang.String)[$i1];

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $i2 = lengthof r1;

        i0 = -1 + $i2;

     label02:
        if i0 < 0 goto label09;

     label03:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r8 = $r6.<com.android.server.pm.Settings: java.util.HashMap mRenamedPackages>;

        $r7 = r1[i0];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r5 = (java.lang.String) $r9;

     label04:
        if r5 == null goto label07;

     label05:
        r2[i0] = r5;

     label06:
        i0 = i0 + -1;

        goto label02;

     label07:
        r5 = r1[i0];

     label08:
        goto label05;

     label09:
        exitmonitor r3;

     label10:
        return r2;

     label11:
        $r10 := @caughtexception;

        r4 = $r10;

     label12:
        exitmonitor r3;

     label13:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int checkPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        java.util.HashMap r3, $r7;
        java.lang.Throwable r4, $r15;
        android.content.pm.PackageParser$Package r5;
        com.android.server.pm.PackageSetting r6;
        java.lang.Object $r8, $r9, $r10;
        com.android.server.pm.SharedUserSetting $r11, $r13;
        java.util.HashSet $r12, $r14;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (android.content.pm.PackageParser$Package) $r8;

     label02:
        if r5 == null goto label10;

     label03:
        $r9 = r5.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r9 == null goto label10;

        $r10 = r5.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r6 = (com.android.server.pm.PackageSetting) $r10;

        $r11 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r11 == null goto label05;

        $r13 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        $r14 = $r13.<com.android.server.pm.SharedUserSetting: java.util.HashSet grantedPermissions>;

        $z1 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label10;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        $r12 = r6.<com.android.server.pm.PackageSetting: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label10;

        exitmonitor r3;

     label06:
        return 0;

     label07:
        $r15 := @caughtexception;

        r4 = $r15;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        exitmonitor r3;

     label11:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public int checkSignatures(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        java.util.HashMap r3, $r7, $r9;
        java.lang.Throwable r4, $r15;
        android.content.pm.PackageParser$Package r5, r6;
        int i0;
        java.lang.Object $r8, $r10, $r11, $r12;
        android.content.pm.Signature[] $r13, $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.content.pm.PackageParser$Package) $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.content.pm.PackageParser$Package) $r10;

     label02:
        if r5 == null goto label06;

     label03:
        $r11 = r5.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r11 == null goto label06;

     label04:
        if r6 == null goto label06;

     label05:
        $r12 = r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r12 != null goto label08;

     label06:
        exitmonitor r3;

     label07:
        return -4;

     label08:
        $r13 = r5.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        $r14 = r6.<android.content.pm.PackageParser$Package: android.content.pm.Signature[] mSignatures>;

        i0 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>($r13, $r14);

        exitmonitor r3;

     label09:
        return i0;

     label10:
        $r15 := @caughtexception;

        r4 = $r15;

     label11:
        exitmonitor r3;

     label12:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int checkUidPermission(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r11;
        java.lang.Object r4, $r8;
        java.util.HashSet r5, $r9;
        com.android.server.pm.Settings $r6;
        android.util.SparseArray $r7;
        boolean $z0, $z1;
        com.android.server.pm.GrantedPermissions $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r4 = virtualinvoke $r6.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i1);

     label02:
        if r4 == null goto label05;

     label03:
        $r10 = (com.android.server.pm.GrantedPermissions) r4;

        $r9 = $r10.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z1 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label12;

        exitmonitor r2;

     label04:
        return 0;

     label05:
        $r7 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mSystemPermissions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (java.util.HashSet) $r8;

     label06:
        if r5 == null goto label12;

     label07:
        $z0 = virtualinvoke r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label12;

        exitmonitor r2;

     label08:
        return 0;

     label09:
        $r11 := @caughtexception;

        r3 = $r11;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        exitmonitor r2;

     label13:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public int checkUidSignatures(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2, i3, i4;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r17;
        java.lang.Object r3, r5;
        android.content.pm.Signature[] r4, r6;
        com.android.server.pm.Settings $r7, $r9;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.pm.PackageSetting $r8, $r11;
        com.android.server.pm.PackageSignatures $r10, $r12, $r13, $r16;
        com.android.server.pm.SharedUserSetting $r14, $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label01:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r3 = virtualinvoke $r7.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i2);

     label02:
        if r3 == null goto label16;

     label03:
        $z1 = r3 instanceof com.android.server.pm.SharedUserSetting;

        if $z1 == 0 goto label09;

        $r14 = (com.android.server.pm.SharedUserSetting) r3;

        $r16 = $r14.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r4 = $r16.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

     label04:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r5 = virtualinvoke $r9.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i3);

     label05:
        if r5 == null goto label22;

     label06:
        $z3 = r5 instanceof com.android.server.pm.SharedUserSetting;

        if $z3 == 0 goto label18;

        $r15 = (com.android.server.pm.SharedUserSetting) r5;

        $r13 = $r15.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r6 = $r13.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

     label07:
        i4 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>(r4, r6);

        exitmonitor r1;

     label08:
        return i4;

     label09:
        $z0 = r3 instanceof com.android.server.pm.PackageSetting;

        if $z0 == 0 goto label11;

        $r8 = (com.android.server.pm.PackageSetting) r3;

        $r10 = $r8.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r4 = $r10.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

     label10:
        goto label04;

     label11:
        exitmonitor r1;

     label12:
        return -4;

     label13:
        $r17 := @caughtexception;

        r2 = $r17;

     label14:
        exitmonitor r1;

     label15:
        throw r2;

     label16:
        exitmonitor r1;

     label17:
        return -4;

     label18:
        $z2 = r5 instanceof com.android.server.pm.PackageSetting;

        if $z2 == 0 goto label20;

        $r11 = (com.android.server.pm.PackageSetting) r5;

        $r12 = $r11.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r6 = $r12.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

     label19:
        goto label07;

     label20:
        exitmonitor r1;

     label21:
        return -4;

     label22:
        exitmonitor r1;

     label23:
        return -4;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label17 with label13;
        catch java.lang.Throwable from label18 to label19 with label13;
        catch java.lang.Throwable from label20 to label21 with label13;
        catch java.lang.Throwable from label22 to label23 with label13;
    }

    void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17;
        java.lang.StringBuilder r2, $r65;
        java.lang.String r3, $r24, $r25, $r30, $r36, $r50, $r63, $r69, $r70, $r71, $r74;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r4;
        android.content.pm.PackageParser$Instrumentation r5;
        com.android.server.pm.BasePermission r6;
        android.content.pm.PackageParser$Permission r7, $r47;
        android.content.pm.PackageParser$Activity r8, r9;
        android.content.pm.PackageParser$Service r10;
        android.content.pm.PackageParser$Provider r11;
        java.lang.String[] r12;
        java.util.ArrayList $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r34, $r40, $r45, $r52, $r55, $r60;
        android.content.pm.ApplicationInfo $r20;
        java.lang.Object $r21, $r26, $r33, $r38, $r41, $r44, $r46, $r51, $r58, $r59, $r68;
        java.util.HashMap $r27, $r29, $r32, $r37, $r43, $r67, $r75;
        android.content.ComponentName $r31;
        android.content.pm.PermissionInfo $r35, $r49;
        com.android.server.pm.Settings $r42, $r48;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r54;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r56, $r57;
        android.content.pm.ProviderInfo $r61, $r72;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r62;
        android.content.pm.ServiceInfo $r64;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        $r14 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        i0 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label06;

        $r60 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        $r59 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r11 = (android.content.pm.PackageParser$Provider) $r59;

        $r62 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        virtualinvoke $r62.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void removeProvider(android.content.pm.PackageParser$Provider)>(r11);

        $r61 = r11.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r71 = $r61.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r71 != null goto label03;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        $r72 = r11.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r70 = $r72.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r12 = virtualinvoke $r70.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i13 = 0;

     label04:
        $i17 = lengthof r12;

        if i13 >= $i17 goto label02;

        $r67 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r69 = r12[i13];

        $r68 = virtualinvoke $r67.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r69);

        if $r68 != r11 goto label05;

        $r75 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r74 = r12[i13];

        virtualinvoke $r75.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r74);

     label05:
        i13 = i13 + 1;

        goto label04;

     label06:
        goto label07;

     label07:
        $r13 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        i2 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        r2 = null;

        i3 = 0;

     label08:
        if i3 >= i2 goto label12;

        $r52 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        $r51 = virtualinvoke $r52.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r10 = (android.content.pm.PackageParser$Service) $r51;

        $r54 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        virtualinvoke $r54.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void removeService(android.content.pm.PackageParser$Service)>(r10);

        if z0 == 0 goto label10;

        if r2 != null goto label11;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>(int)>(256);

        r2 = $r65;

     label09:
        $r64 = r10.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $r63 = $r64.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

     label10:
        i3 = i3 + 1;

        goto label08;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label09;

     label12:
        if r2 == null goto label13;

     label13:
        $r16 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        i4 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        i5 = 0;

     label14:
        if i5 >= i4 goto label15;

        $r55 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        $r58 = virtualinvoke $r55.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r8 = (android.content.pm.PackageParser$Activity) $r58;

        $r57 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        virtualinvoke $r57.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r8, "receiver");

        i5 = i5 + 1;

        goto label14;

     label15:
        goto label16;

     label16:
        $r15 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        i6 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        i7 = 0;

     label17:
        if i7 >= i6 goto label18;

        $r45 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        $r46 = virtualinvoke $r45.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r9 = (android.content.pm.PackageParser$Activity) $r46;

        $r56 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        virtualinvoke $r56.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>(r9, "activity");

        i7 = i7 + 1;

        goto label17;

     label18:
        goto label19;

     label19:
        $r18 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        i8 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        i9 = 0;

     label20:
        if i9 >= i8 goto label23;

        $r40 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList permissions>;

        $r41 = virtualinvoke $r40.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r7 = (android.content.pm.PackageParser$Permission) $r41;

        $r42 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r37 = $r42.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r35 = r7.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r36 = $r35.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r38 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r36);

        r6 = (com.android.server.pm.BasePermission) $r38;

        if r6 != null goto label21;

        $r48 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r43 = $r48.<com.android.server.pm.Settings: java.util.HashMap mPermissionTrees>;

        $r49 = r7.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r50 = $r49.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r44 = virtualinvoke $r43.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r50);

        r6 = (com.android.server.pm.BasePermission) $r44;

     label21:
        if r6 == null goto label22;

        $r47 = r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r47 != r7 goto label22;

        r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm> = null;

     label22:
        i9 = i9 + 1;

        goto label20;

     label23:
        goto label24;

     label24:
        $r17 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        i10 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        i11 = 0;

     label25:
        if i11 >= i10 goto label26;

        $r34 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList instrumentation>;

        $r33 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r5 = (android.content.pm.PackageParser$Instrumentation) $r33;

        $r32 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r31 = virtualinvoke r5.<android.content.pm.PackageParser$Instrumentation: android.content.ComponentName getComponentName()>();

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r31);

        i11 = i11 + 1;

        goto label25;

     label26:
        goto label27;

     label27:
        $r20 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i14 = 1 & $i15;

        if $i14 == 0 goto label30;

        $r19 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        if $r19 == null goto label30;

        i12 = 0;

     label28:
        $r23 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $i16 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        if i12 >= $i16 goto label30;

        $r22 = r1.<android.content.pm.PackageParser$Package: java.util.ArrayList libraryNames>;

        $r21 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r3 = (java.lang.String) $r21;

        $r27 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r26 = virtualinvoke $r27.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r26;

        if r4 == null goto label29;

        $r25 = r4.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        if $r25 == null goto label29;

        $r30 = r4.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        $r24 = r1.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $z1 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z1 == 0 goto label29;

        $r29 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r3);

     label29:
        i12 = i12 + 1;

        goto label28;

     label30:
        goto label31;

     label31:
        return;
    }

    void cleanUpUserLILPw(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.util.HashSet $r1;
        java.lang.Integer $r2;
        com.android.server.pm.Settings $r3;
        com.android.server.pm.PackageManagerService$PendingPackageBroadcasts $r4;
        com.android.server.pm.Installer $r5, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r2);

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r3.<com.android.server.pm.Settings: void removeUserLPr(int)>(i0);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PendingPackageBroadcasts mPendingBroadcasts>;

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void remove(int)>(i0);

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r6.<com.android.server.pm.Installer: int removeUserDataDirs(int)>(i0);

     label1:
        return;
    }

    void cleanupInstallFailedPackage(com.android.server.pm.PackageSetting)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r15, $r16, $r17, $r21, $r22, $r24;
        java.lang.String $r4, $r6, $r7, $r10, $r19, $r23;
        java.io.File $r8, $r9, $r12, $r13, $r14, $r18, $r20, $r25;
        com.android.server.pm.Settings $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up incompletely installed app: ");

        $r4 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r6);

        $r7 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int removeDataDirsLI(java.lang.String)>($r7);

        $r8 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        if $r8 == null goto label1;

        $r20 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z2 = virtualinvoke $r20.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove old code file: ");

        $r25 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r23);

     label1:
        $r9 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        if $r9 == null goto label2;

        $r12 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $z0 = virtualinvoke $r12.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label2;

        $r13 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $r14 = r1.<com.android.server.pm.PackageSetting: java.io.File codePath>;

        $z1 = virtualinvoke $r13.<java.io.File: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove old code file: ");

        $r18 = r1.<com.android.server.pm.PackageSetting: java.io.File resourcePath>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r19);

     label2:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r11.<com.android.server.pm.Settings: int removePackageLPw(java.lang.String)>($r10);

        return;
    }

    public void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        int i0, $i1;
        android.content.Context $r3;
        com.android.server.pm.PackageManagerService$8 $r4;
        com.android.server.pm.PackageManagerService$PackageHandler $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_USER_DATA", null);

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i1, i0, 1, "clear application data");

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r4 = new com.android.server.pm.PackageManagerService$8;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$8: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>(r0, r1, i0, r2);

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void clearPackagePreferredActivities(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r15;
        android.content.pm.PackageParser$Package r4;
        java.lang.Object $r6;
        android.content.Context $r7, $r9;
        boolean $z0;
        com.android.server.pm.Settings $r8;
        java.lang.StringBuilder $r10, $r11, $r13;
        android.content.pm.ApplicationInfo $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r6;

     label02:
        if r4 == null goto label04;

     label03:
        $r14 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        if $i7 == i0 goto label07;

     label04:
        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r7.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS");

        if $i2 == 0 goto label07;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidTargetSdkVersionLockedLPr(int)>($i3);

        if $i4 >= 8 goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring clearPackagePreferredActivities() from uid ");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r12);

        exitmonitor r2;

     label05:
        return;

     label06:
        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

     label07:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>(r1, i1);

        if $z0 == 0 goto label08;

        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r8.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r15 := @caughtexception;

        r3 = $r15;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    boolean clearPackagePreferredActivitiesLPw(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r19;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.ArrayList r2, $r16;
        boolean z0, $z1, $z3, $z4;
        com.android.server.pm.PreferredIntentResolver r3;
        java.util.Iterator r4;
        com.android.server.pm.PreferredActivity r5, $r15;
        com.android.server.pm.Settings $r6, $r8, $r10;
        android.util.SparseArray $r7, $r9, $r12;
        java.lang.Object $r11, $r13, $r14;
        android.content.ComponentName $r17;
        com.android.server.PreferredComponent $r18, $r20;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = null;

        z0 = 0;

        i1 = 0;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i4 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i1 >= $i4 goto label10;

        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r9 = $r8.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        i2 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i1);

        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r10.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (com.android.server.pm.PreferredIntentResolver) $r11;

        if i0 == -1 goto label03;

        if i0 == i2 goto label03;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        r4 = virtualinvoke r3.<com.android.server.pm.PreferredIntentResolver: java.util.Iterator filterIterator()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.pm.PreferredActivity) $r14;

        if r1 == null goto label05;

        $r18 = r5.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r17 = $r18.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $r19 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label04;

        $r20 = r5.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $z4 = $r20.<com.android.server.PreferredComponent: boolean mAlways>;

        if $z4 == 0 goto label04;

     label05:
        if r2 != null goto label06;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r2 = $r16;

     label06:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label04;

     label07:
        if r2 == null goto label02;

        i3 = 0;

     label08:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i3 >= $i5 goto label09;

        $r13 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r15 = (com.android.server.pm.PreferredActivity) $r13;

        virtualinvoke r3.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>($r15);

        i3 = i3 + 1;

        goto label08;

     label09:
        z0 = 1;

        goto label02;

     label10:
        return z0;
    }

    void createNewUserLILPw(int, java.io.File)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.io.File r1;
        com.android.server.pm.Installer $r2, $r3;
        com.android.server.pm.Settings $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.File;

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        virtualinvoke $r4.<com.android.server.pm.Settings: void createNewUserLILPw(com.android.server.pm.PackageManagerService,com.android.server.pm.Installer,int,java.io.File)>(r0, $r3, i0, r1);

     label1:
        return;
    }

    public java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String[] r1, r2;
        java.util.HashMap r3, $r9;
        java.lang.Throwable r4, $r11;
        int i0, $i1, $i2;
        com.android.server.pm.PackageSetting r5;
        java.lang.String r6, $r8, $r12;
        com.android.server.pm.Settings $r7;
        java.lang.Object $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String[];

        $i1 = lengthof r1;

        r2 = newarray (java.lang.String)[$i1];

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $i2 = lengthof r1;

        i0 = -1 + $i2;

     label02:
        if i0 < 0 goto label10;

     label03:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r9 = $r7.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = r1[i0];

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r5 = (com.android.server.pm.PackageSetting) $r10;

     label04:
        if r5 == null goto label08;

     label05:
        $r12 = r5.<com.android.server.pm.PackageSetting: java.lang.String realName>;

        if $r12 == null goto label08;

        r6 = r5.<com.android.server.pm.PackageSetting: java.lang.String realName>;

     label06:
        r2[i0] = r6;

     label07:
        i0 = i0 + -1;

        goto label02;

     label08:
        r6 = r1[i0];

     label09:
        goto label06;

     label10:
        exitmonitor r3;

     label11:
        return r2;

     label12:
        $r11 := @caughtexception;

        r4 = $r11;

     label13:
        exitmonitor r3;

     label14:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        int i0;
        android.content.Context $r3;
        com.android.server.pm.PackageManagerService$9 $r4;
        com.android.server.pm.PackageManagerService$PackageHandler $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_CACHE_FILES", null);

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r4 = new com.android.server.pm.PackageManagerService$9;

        specialinvoke $r4.<com.android.server.pm.PackageManagerService$9: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>(r0, r1, i0, r2);

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void deletePackageAsUser(java.lang.String, android.content.pm.IPackageDeleteObserver, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r10;
        android.content.pm.IPackageDeleteObserver r2;
        int i0, i1, $i2, $i3;
        android.content.Context $r4, $r8;
        boolean $z0;
        com.android.server.pm.PackageManagerService$7 $r5;
        com.android.server.pm.PackageManagerService$PackageHandler $r6;
        java.lang.StringBuilder $r7, $r9, $r11;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDeleteObserver;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DELETE_PACKAGES", null);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 == i0 goto label1;

        $r8 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deletePackage for user ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", $r10);

     label1:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>(i0, "no_uninstall_apps");

        if $z0 == 0 goto label4;

     label2:
        interfaceinvoke r2.<android.content.pm.IPackageDeleteObserver: void packageDeleted(java.lang.String,int)>(r1, -3);

     label3:
        return;

     label4:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r5 = new com.android.server.pm.PackageManagerService$7;

        specialinvoke $r5.<com.android.server.pm.PackageManagerService$7: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,int,android.content.pm.IPackageDeleteObserver)>(r0, r1, i0, i1, r2);

        virtualinvoke $r6.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r5);

        return;

     label5:
        $r12 := @caughtexception;

        return;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.pm.PackageManagerService$DumpState r4, $r50;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, i9, $i11, $i12, $i13, $i14, $i17, $i18;
        java.lang.String r5, r10, r30, r36, r38, r40, r42, r44, r46, r47, r51, $r53, $r72, $r73, $r75, $r77, $r83, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r114, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r148, $r155, $r162, $r163, $r169, $r180, $r186;
        java.util.HashMap r6, $r57, $r66, $r101, $r111, $r116;
        java.lang.Throwable r7, r19, $r153, $r160, $r161;
        java.util.Iterator r8, r11, r12, r45;
        com.android.server.pm.PreferredIntentResolver r9;
        java.io.FileInputStream r13, r16, $r56;
        java.io.File r14;
        byte[] r23;
        java.util.Map$Entry r24;
        android.content.pm.PackageParser$Provider r25, r31;
        java.io.FileOutputStream r28, $r81;
        java.io.BufferedOutputStream r29, $r80;
        java.lang.IllegalStateException r32, $r182;
        java.lang.IllegalArgumentException r33, $r151;
        com.android.internal.util.FastXmlSerializer r34, $r79;
        java.io.IOException r35, $r154, $r159, $r174, $r175, $r176, $r181, $r187;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver r37, r39;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver r41, $r58;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver r43;
        com.android.server.pm.PackageManagerService$SharedLibraryEntry r48;
        android.content.Context $r49;
        com.android.server.pm.Settings $r52, $r54, $r55, $r60, $r82, $r87, $r91, $r93, $r94;
        java.util.Collection $r59;
        com.android.server.pm.KeySetManager $r61;
        java.lang.Object $r62, $r63, $r64, $r76, $r84, $r102, $r113, $r115;
        java.util.Set $r65, $r103, $r112;
        android.content.pm.ApplicationInfo $r67, $r68;
        android.content.pm.ProviderInfo $r69, $r70, $r71, $r74, $r78;
        android.util.SparseArray $r85, $r86, $r92;
        java.lang.StringBuilder $r88, $r89, $r95, $r96, $r97, $r98, $r99, $r100, $r149, $r150, $r156, $r157, $r158, $r164, $r165, $r166, $r167, $r168, $r170, $r171, $r172, $r173, $r177, $r178, $r179, $r183, $r184, $r185;
        java.lang.Boolean $r90;
        char $c15;
        java.io.FileNotFoundException $r147, $r152;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r49 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i8 = virtualinvoke $r49.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i8 == 0 goto label001;

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        $r168 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i17 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r172 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i18 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r171 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r150 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r149 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r148 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r148);

        return;

     label001:
        $r50 = new com.android.server.pm.PackageManagerService$DumpState;

        specialinvoke $r50.<com.android.server.pm.PackageManagerService$DumpState: void <init>()>();

        r4 = $r50;

        z0 = 0;

        i0 = 0;

     label002:
        i1 = lengthof r3;

        if i0 >= i1 goto label003;

        r51 = r3[i0];

        if r51 == null goto label003;

        $i14 = virtualinvoke r51.<java.lang.String: int length()>();

        if $i14 <= 0 goto label003;

        $c15 = virtualinvoke r51.<java.lang.String: char charAt(int)>(0);

        if $c15 == 45 goto label031;

     label003:
        i2 = lengthof r3;

        i3 = i0;

        r5 = null;

        z1 = 0;

        if i3 >= i2 goto label005;

        r47 = r3[i0];

        i7 = i0 + 1;

        $r121 = "android";

        $z49 = virtualinvoke $r121.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z49 != 0 goto label004;

        $z48 = virtualinvoke r47.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z48 == 0 goto label035;

     label004:
        r5 = r47;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>(1);

     label005:
        if z0 == 0 goto label006;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("vers,1");

     label006:
        r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r6;

     label007:
        $z9 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(256);

        if $z9 == 0 goto label011;

     label008:
        if r5 != null goto label011;

        if z0 != 0 goto label058;

     label009:
        $z50 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z50 == 0 goto label010;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label010:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Verifiers:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Required: ");

        $r123 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r123);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (uid=");

        $r122 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        $i12 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>($r122, 0);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i12);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(")");

     label011:
        $z10 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(1);

        if $z10 == 0 goto label069;

     label012:
        if r5 != null goto label069;

        z4 = 0;

     label013:
        $r111 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r112 = virtualinvoke $r111.<java.util.HashMap: java.util.Set keySet()>();

        r45 = interfaceinvoke $r112.<java.util.Set: java.util.Iterator iterator()>();

     label014:
        $z43 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z43 == 0 goto label069;

        $r115 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.lang.String) $r115;

        $r116 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        $r113 = virtualinvoke $r116.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r44);

        r48 = (com.android.server.pm.PackageManagerService$SharedLibraryEntry) $r113;

     label015:
        if z0 != 0 goto label060;

        if z4 != 0 goto label019;

     label016:
        $z42 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z42 == 0 goto label017;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label017:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Libraries:");

     label018:
        z4 = 1;

     label019:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

     label020:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r44);

     label021:
        if z0 != 0 goto label023;

     label022:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> ");

     label023:
        $r114 = r48.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        if $r114 == null goto label064;

     label024:
        if z0 != 0 goto label062;

     label025:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("(jar) ");

        $r105 = r48.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r105);

     label026:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label027:
        goto label014;

     label028:
        $r160 := @caughtexception;

        r7 = $r160;

     label029:
        exitmonitor r6;

     label030:
        throw r7;

     label031:
        i0 = i0 + 1;

        $r141 = "-a";

        $z68 = virtualinvoke $r141.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z68 != 0 goto label002;

        $r140 = "-h";

        $z67 = virtualinvoke $r140.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z67 == 0 goto label032;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Package manager dump options:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  [-h] [-f] [--checkin] [cmd] ...");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    --checkin: dump for a checkin");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    -f: print details of intent filters");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    -h: print this help");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  cmd may be one of:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    l[ibraries]: list known shared libraries");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    f[ibraries]: list device features");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    r[esolvers]: dump intent resolvers");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    perm[issions]: dump permissions");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    pref[erred]: print preferred package settings");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    preferred-xml [--full]: print preferred package settings as xml");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    prov[iders]: dump content providers");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    p[ackages]: dump installed packages");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    s[hared-users]: dump shared user IDs");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    m[essages]: print collected runtime messages");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    v[erifiers]: print package verifier info");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    <package.name>: info about given package");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    k[eysets]: print known keysets");

        return;

     label032:
        $r163 = "--checkin";

        $z72 = virtualinvoke $r163.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z72 == 0 goto label033;

        z0 = 1;

        goto label002;

     label033:
        $r162 = "-f";

        $z71 = virtualinvoke $r162.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z71 == 0 goto label034;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>(1);

        goto label002;

     label034:
        $r166 = new java.lang.StringBuilder;

        specialinvoke $r166.<java.lang.StringBuilder: void <init>()>();

        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        $r164 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r169 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r169);

        goto label002;

     label035:
        $r119 = "l";

        $z46 = virtualinvoke $r119.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z46 != 0 goto label036;

        $r120 = "libraries";

        $z47 = virtualinvoke $r120.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z47 == 0 goto label037;

     label036:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(1);

        r5 = null;

        z1 = 0;

        goto label005;

     label037:
        $r117 = "f";

        $z44 = virtualinvoke $r117.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z44 != 0 goto label038;

        $r118 = "features";

        $z45 = virtualinvoke $r118.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z45 == 0 goto label039;

     label038:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(2);

        r5 = null;

        z1 = 0;

        goto label005;

     label039:
        $r130 = "r";

        $z57 = virtualinvoke $r130.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z57 != 0 goto label040;

        $r131 = "resolvers";

        $z58 = virtualinvoke $r131.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z58 == 0 goto label041;

     label040:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(4);

        r5 = null;

        z1 = 0;

        goto label005;

     label041:
        $r128 = "perm";

        $z55 = virtualinvoke $r128.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z55 != 0 goto label042;

        $r129 = "permissions";

        $z56 = virtualinvoke $r129.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z56 == 0 goto label043;

     label042:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(8);

        r5 = null;

        z1 = 0;

        goto label005;

     label043:
        $r126 = "pref";

        $z53 = virtualinvoke $r126.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z53 != 0 goto label044;

        $r127 = "preferred";

        $z54 = virtualinvoke $r127.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z54 == 0 goto label045;

     label044:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(512);

        r5 = null;

        z1 = 0;

        goto label005;

     label045:
        $r124 = "preferred-xml";

        $z51 = virtualinvoke $r124.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z51 == 0 goto label046;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(1024);

        i9 = lengthof r3;

        r5 = null;

        z1 = 0;

        if i7 >= i9 goto label005;

        $r143 = "--full";

        $r142 = r3[i7];

        z6 = virtualinvoke $r143.<java.lang.String: boolean equals(java.lang.Object)>($r142);

        r5 = null;

        z1 = 0;

        if z6 == 0 goto label005;

        z1 = 1;

        r5 = null;

        goto label005;

     label046:
        $r125 = "p";

        $z52 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z52 != 0 goto label047;

        $r139 = "packages";

        $z66 = virtualinvoke $r139.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z66 == 0 goto label048;

     label047:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(16);

        r5 = null;

        z1 = 0;

        goto label005;

     label048:
        $r138 = "s";

        $z65 = virtualinvoke $r138.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z65 != 0 goto label049;

        $r137 = "shared-users";

        $z64 = virtualinvoke $r137.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z64 == 0 goto label050;

     label049:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(32);

        r5 = null;

        z1 = 0;

        goto label005;

     label050:
        $r136 = "prov";

        $z63 = virtualinvoke $r136.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z63 != 0 goto label051;

        $r135 = "providers";

        $z62 = virtualinvoke $r135.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z62 == 0 goto label052;

     label051:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(128);

        r5 = null;

        z1 = 0;

        goto label005;

     label052:
        $r134 = "m";

        $z61 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z61 != 0 goto label053;

        $r133 = "messages";

        $z60 = virtualinvoke $r133.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z60 == 0 goto label054;

     label053:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(64);

        r5 = null;

        z1 = 0;

        goto label005;

     label054:
        $r132 = "v";

        $z59 = virtualinvoke $r132.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z59 != 0 goto label055;

        $r146 = "verifiers";

        $z70 = virtualinvoke $r146.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z70 == 0 goto label056;

     label055:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(256);

        r5 = null;

        z1 = 0;

        goto label005;

     label056:
        $r145 = "k";

        $z69 = virtualinvoke $r145.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        if $z69 != 0 goto label057;

        $r144 = "keysets";

        z5 = virtualinvoke $r144.<java.lang.String: boolean equals(java.lang.Object)>(r47);

        r5 = null;

        z1 = 0;

        if z5 == 0 goto label005;

     label057:
        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>(2048);

        r5 = null;

        z1 = 0;

        goto label005;

     label058:
        $r110 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        if $r110 == null goto label011;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("vrfy,");

        $r108 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r108);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r109 = r0.<com.android.server.pm.PackageManagerService: java.lang.String mRequiredVerifierPackage>;

        $i13 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>($r109, 0);

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i13);

     label059:
        goto label011;

     label060:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("lib,");

     label061:
        goto label020;

     label062:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",jar,");

        $r104 = r48.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String path>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r104);

     label063:
        goto label026;

     label064:
        if z0 != 0 goto label067;

     label065:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("(apk) ");

        $r107 = r48.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r107);

     label066:
        goto label026;

     label067:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",apk,");

        $r106 = r48.<com.android.server.pm.PackageManagerService$SharedLibraryEntry: java.lang.String apk>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r106);

     label068:
        goto label026;

     label069:
        $z11 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(2);

        if $z11 == 0 goto label082;

     label070:
        if r5 != null goto label082;

     label071:
        $z32 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z32 == 0 goto label072;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label072:
        if z0 != 0 goto label074;

     label073:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Features:");

     label074:
        $r101 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        $r103 = virtualinvoke $r101.<java.util.HashMap: java.util.Set keySet()>();

        r8 = interfaceinvoke $r103.<java.util.Set: java.util.Iterator iterator()>();

     label075:
        $z35 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z35 == 0 goto label082;

        $r102 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) $r102;

     label076:
        if z0 != 0 goto label080;

     label077:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

     label078:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r46);

     label079:
        goto label075;

     label080:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("feat,");

     label081:
        goto label078;

     label082:
        if z0 != 0 goto label095;

     label083:
        $z26 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(4);

        if $z26 == 0 goto label095;

        r39 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $z27 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z27 == 0 goto label180;

     label084:
        r38 = "\nActivity Resolver Table:";

     label085:
        $z28 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z29 = virtualinvoke r39.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r38, "  ", r5, $z28);

        if $z29 == 0 goto label086;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label086:
        r37 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        $z30 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z30 == 0 goto label181;

     label087:
        r36 = "\nReceiver Resolver Table:";

     label088:
        $z38 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z37 = virtualinvoke r37.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r36, "  ", r5, $z38);

        if $z37 == 0 goto label089;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label089:
        r43 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        $z36 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z36 == 0 goto label182;

     label090:
        r42 = "\nService Resolver Table:";

     label091:
        $z41 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z40 = virtualinvoke r43.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r42, "  ", r5, $z41);

        if $z40 == 0 goto label092;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label092:
        r41 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $z39 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z39 == 0 goto label183;

     label093:
        r40 = "\nProvider Resolver Table:";

     label094:
        $z34 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>(1);

        $z33 = virtualinvoke r41.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r40, "  ", r5, $z34);

        if $z33 == 0 goto label095;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label095:
        if z0 != 0 goto label105;

     label096:
        $z25 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(512);

        if $z25 == 0 goto label105;

     label097:
        i4 = 0;

     label098:
        $r93 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r92 = $r93.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        i5 = virtualinvoke $r92.<android.util.SparseArray: int size()>();

     label099:
        if i4 >= i5 goto label105;

     label100:
        $r94 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r85 = $r94.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r84 = virtualinvoke $r85.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r9 = (com.android.server.pm.PreferredIntentResolver) $r84;

        $r87 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r86 = $r87.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        i6 = virtualinvoke $r86.<android.util.SparseArray: int keyAt(int)>(i4);

        $z24 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>();

        if $z24 == 0 goto label103;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPreferred Activities User ");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r10 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

     label101:
        $z31 = virtualinvoke r9.<com.android.server.pm.PreferredIntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r10, "  ", r5, 1);

        if $z31 == 0 goto label179;

        virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>(1);

     label102:
        goto label179;

     label103:
        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred Activities User ");

        $r95 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r10 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

     label104:
        goto label101;

     label105:
        if z0 != 0 goto label108;

     label106:
        $z21 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(1024);

        if $z21 == 0 goto label108;

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        $r81 = new java.io.FileOutputStream;

        specialinvoke $r81.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        r28 = $r81;

        $r80 = new java.io.BufferedOutputStream;

        specialinvoke $r80.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r28);

        r29 = $r80;

        $r79 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r79.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r34 = $r79;

     label107:
        interfaceinvoke r34.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r29, "utf-8");

        $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r34.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r90);

        interfaceinvoke r34.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        $r91 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r91.<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int,boolean)>(r34, 0, z1);

        interfaceinvoke r34.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        interfaceinvoke r34.<org.xmlpull.v1.XmlSerializer: void flush()>();

     label108:
        if z0 != 0 goto label110;

     label109:
        $z22 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(8);

        if $z22 == 0 goto label110;

        $r82 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r82.<com.android.server.pm.Settings: void dumpPermissionsLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>(r2, r5, r4);

     label110:
        if z0 != 0 goto label143;

     label111:
        $z15 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(128);

        if $z15 == 0 goto label143;

     label112:
        z2 = 0;

     label113:
        $r58 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r57 = staticinvoke <com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.HashMap access$1600(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>($r58);

        $r59 = virtualinvoke $r57.<java.util.HashMap: java.util.Collection values()>();

        r11 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>();

     label114:
        $z17 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label132;

        $r76 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r31 = (android.content.pm.PackageParser$Provider) $r76;

     label115:
        if r5 == null goto label117;

     label116:
        $r74 = r31.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r83 = $r74.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z23 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r83);

        if $z23 == 0 goto label114;

     label117:
        if z2 != 0 goto label121;

     label118:
        $z18 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z18 == 0 goto label119;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label119:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Registered ContentProviders:");

     label120:
        z2 = 1;

     label121:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r31.<android.content.pm.PackageParser$Provider: void printComponentShortName(java.io.PrintWriter)>(r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r75 = virtualinvoke r31.<android.content.pm.PackageParser$Provider: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r75);

     label122:
        goto label114;

     label123:
        $r151 := @caughtexception;

        r33 = $r151;

     label124:
        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r157 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing: ");

        $r156 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r155 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r155);

     label125:
        goto label108;

     label126:
        $r182 := @caughtexception;

        r32 = $r182;

     label127:
        $r183 = new java.lang.StringBuilder;

        specialinvoke $r183.<java.lang.StringBuilder: void <init>()>();

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing: ");

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r186);

     label128:
        goto label108;

     label129:
        $r176 := @caughtexception;

        r35 = $r176;

     label130:
        $r177 = new java.lang.StringBuilder;

        specialinvoke $r177.<java.lang.StringBuilder: void <init>()>();

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing: ");

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r180);

     label131:
        goto label108;

     label132:
        z3 = 0;

     label133:
        $r66 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r65 = virtualinvoke $r66.<java.util.HashMap: java.util.Set entrySet()>();

        r12 = interfaceinvoke $r65.<java.util.Set: java.util.Iterator iterator()>();

     label134:
        $z16 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label143;

        $r64 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.util.Map$Entry) $r64;

        $r62 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        r25 = (android.content.pm.PackageParser$Provider) $r62;

     label135:
        if r5 == null goto label137;

     label136:
        $r78 = r25.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r77 = $r78.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z19 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r77);

        if $z19 == 0 goto label134;

     label137:
        if z3 != 0 goto label141;

     label138:
        $z20 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z20 == 0 goto label139;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label139:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ContentProvider Authorities:");

     label140:
        z3 = 1;

     label141:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  [");

        $r63 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r72 = (java.lang.String) $r63;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r72);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("]:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r73 = virtualinvoke r25.<android.content.pm.PackageParser$Provider: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r73);

        $r70 = r25.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        if $r70 == null goto label134;

        $r71 = r25.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r68 = $r71.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r68 == null goto label134;

        $r69 = r25.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r67 = $r69.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r30 = virtualinvoke $r67.<android.content.pm.ApplicationInfo: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      applicationInfo=");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r30);

     label142:
        goto label134;

     label143:
        if z0 != 0 goto label145;

     label144:
        $z14 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(2048);

        if $z14 == 0 goto label145;

        $r60 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r61 = $r60.<com.android.server.pm.Settings: com.android.server.pm.KeySetManager mKeySetManager>;

        virtualinvoke $r61.<com.android.server.pm.KeySetManager: void dump(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>(r2, r5, r4);

     label145:
        $z12 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(16);

        if $z12 == 0 goto label146;

        $r54 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r54.<com.android.server.pm.Settings: void dumpPackagesLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState,boolean)>(r2, r5, r4, z0);

     label146:
        if z0 != 0 goto label148;

     label147:
        $z13 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(32);

        if $z13 == 0 goto label148;

        $r55 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r55.<com.android.server.pm.Settings: void dumpSharedUsersLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>(r2, r5, r4);

     label148:
        if z0 != 0 goto label158;

     label149:
        $z7 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>(64);

        if $z7 == 0 goto label158;

     label150:
        if r5 != null goto label158;

     label151:
        $z8 = virtualinvoke r4.<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>();

        if $z8 == 0 goto label152;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label152:
        $r52 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r52.<com.android.server.pm.Settings: void dumpReadMessagesLPr(java.io.PrintWriter,com.android.server.pm.PackageManagerService$DumpState)>(r2, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Package warning messages:");

        r14 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File getSettingsProblemFile()>();

     label153:
        r13 = null;

     label154:
        $r56 = new java.io.FileInputStream;

        specialinvoke $r56.<java.io.FileInputStream: void <init>(java.io.File)>(r14);

        r16 = $r56;

     label155:
        $i11 = virtualinvoke r16.<java.io.FileInputStream: int available()>();

        r23 = newarray (byte)[$i11];

        virtualinvoke r16.<java.io.FileInputStream: int read(byte[])>(r23);

        $r53 = new java.lang.String;

        specialinvoke $r53.<java.lang.String: void <init>(byte[])>(r23);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r53);

     label156:
        if r16 == null goto label158;

     label157:
        virtualinvoke r16.<java.io.FileInputStream: void close()>();

     label158:
        exitmonitor r6;

     label159:
        return;

     label160:
        $r152 := @caughtexception;

     label161:
        if r13 == null goto label158;

     label162:
        virtualinvoke r13.<java.io.FileInputStream: void close()>();

     label163:
        goto label158;

     label164:
        $r187 := @caughtexception;

        goto label158;

     label165:
        $r175 := @caughtexception;

     label166:
        if r13 == null goto label158;

     label167:
        virtualinvoke r13.<java.io.FileInputStream: void close()>();

     label168:
        goto label158;

     label169:
        $r174 := @caughtexception;

        goto label158;

     label170:
        $r161 := @caughtexception;

        r19 = $r161;

     label171:
        if r13 == null goto label173;

     label172:
        virtualinvoke r13.<java.io.FileInputStream: void close()>();

     label173:
        throw r19;

     label174:
        $r181 := @caughtexception;

        goto label158;

     label175:
        $r154 := @caughtexception;

        goto label173;

     label176:
        $r153 := @caughtexception;

        r19 = $r153;

        r13 = r16;

        goto label171;

     label177:
        $r159 := @caughtexception;

        r13 = r16;

        goto label166;

     label178:
        $r147 := @caughtexception;

        r13 = r16;

        goto label161;

     label179:
        i4 = i4 + 1;

        goto label098;

     label180:
        r38 = "Activity Resolver Table:";

        goto label085;

     label181:
        r36 = "Receiver Resolver Table:";

        goto label088;

     label182:
        r42 = "Service Resolver Table:";

        goto label091;

     label183:
        r40 = "Provider Resolver Table:";

        goto label094;

        catch java.lang.Throwable from label007 to label008 with label028;
        catch java.lang.Throwable from label009 to label010 with label028;
        catch java.lang.Throwable from label010 to label011 with label028;
        catch java.lang.Throwable from label011 to label012 with label028;
        catch java.lang.Throwable from label013 to label014 with label028;
        catch java.lang.Throwable from label014 to label015 with label028;
        catch java.lang.Throwable from label016 to label017 with label028;
        catch java.lang.Throwable from label017 to label018 with label028;
        catch java.lang.Throwable from label019 to label020 with label028;
        catch java.lang.Throwable from label020 to label021 with label028;
        catch java.lang.Throwable from label022 to label023 with label028;
        catch java.lang.Throwable from label023 to label024 with label028;
        catch java.lang.Throwable from label025 to label026 with label028;
        catch java.lang.Throwable from label026 to label027 with label028;
        catch java.lang.Throwable from label029 to label030 with label028;
        catch java.lang.Throwable from label058 to label059 with label028;
        catch java.lang.Throwable from label060 to label061 with label028;
        catch java.lang.Throwable from label062 to label063 with label028;
        catch java.lang.Throwable from label065 to label066 with label028;
        catch java.lang.Throwable from label067 to label068 with label028;
        catch java.lang.Throwable from label069 to label070 with label028;
        catch java.lang.Throwable from label071 to label072 with label028;
        catch java.lang.Throwable from label073 to label074 with label028;
        catch java.lang.Throwable from label074 to label075 with label028;
        catch java.lang.Throwable from label075 to label076 with label028;
        catch java.lang.Throwable from label077 to label078 with label028;
        catch java.lang.Throwable from label078 to label079 with label028;
        catch java.lang.Throwable from label080 to label081 with label028;
        catch java.lang.Throwable from label083 to label084 with label028;
        catch java.lang.Throwable from label085 to label086 with label028;
        catch java.lang.Throwable from label086 to label087 with label028;
        catch java.lang.Throwable from label088 to label089 with label028;
        catch java.lang.Throwable from label089 to label090 with label028;
        catch java.lang.Throwable from label091 to label092 with label028;
        catch java.lang.Throwable from label092 to label093 with label028;
        catch java.lang.Throwable from label094 to label095 with label028;
        catch java.lang.Throwable from label096 to label097 with label028;
        catch java.lang.Throwable from label098 to label099 with label028;
        catch java.lang.Throwable from label100 to label101 with label028;
        catch java.lang.Throwable from label101 to label102 with label028;
        catch java.lang.Throwable from label103 to label104 with label028;
        catch java.lang.Throwable from label106 to label107 with label028;
        catch java.lang.IllegalArgumentException from label107 to label108 with label123;
        catch java.lang.IllegalStateException from label107 to label108 with label126;
        catch java.io.IOException from label107 to label108 with label129;
        catch java.lang.Throwable from label107 to label108 with label028;
        catch java.lang.Throwable from label109 to label110 with label028;
        catch java.lang.Throwable from label111 to label112 with label028;
        catch java.lang.Throwable from label113 to label114 with label028;
        catch java.lang.Throwable from label114 to label115 with label028;
        catch java.lang.Throwable from label116 to label117 with label028;
        catch java.lang.Throwable from label118 to label119 with label028;
        catch java.lang.Throwable from label119 to label120 with label028;
        catch java.lang.Throwable from label121 to label122 with label028;
        catch java.lang.Throwable from label124 to label125 with label028;
        catch java.lang.Throwable from label127 to label128 with label028;
        catch java.lang.Throwable from label130 to label131 with label028;
        catch java.lang.Throwable from label133 to label134 with label028;
        catch java.lang.Throwable from label134 to label135 with label028;
        catch java.lang.Throwable from label136 to label137 with label028;
        catch java.lang.Throwable from label138 to label139 with label028;
        catch java.lang.Throwable from label139 to label140 with label028;
        catch java.lang.Throwable from label141 to label142 with label028;
        catch java.lang.Throwable from label144 to label145 with label028;
        catch java.lang.Throwable from label145 to label146 with label028;
        catch java.lang.Throwable from label147 to label148 with label028;
        catch java.lang.Throwable from label149 to label150 with label028;
        catch java.lang.Throwable from label151 to label152 with label028;
        catch java.lang.Throwable from label152 to label153 with label028;
        catch java.io.FileNotFoundException from label154 to label155 with label160;
        catch java.io.IOException from label154 to label155 with label165;
        catch java.lang.Throwable from label154 to label155 with label170;
        catch java.io.FileNotFoundException from label155 to label156 with label178;
        catch java.io.IOException from label155 to label156 with label177;
        catch java.lang.Throwable from label155 to label156 with label176;
        catch java.io.IOException from label157 to label158 with label174;
        catch java.lang.Throwable from label157 to label158 with label028;
        catch java.lang.Throwable from label158 to label159 with label028;
        catch java.io.IOException from label162 to label163 with label164;
        catch java.lang.Throwable from label162 to label163 with label028;
        catch java.io.IOException from label167 to label168 with label169;
        catch java.lang.Throwable from label167 to label168 with label028;
        catch java.io.IOException from label172 to label173 with label175;
        catch java.lang.Throwable from label172 to label173 with label028;
        catch java.lang.Throwable from label173 to label174 with label028;
    }

    public void enterSafeMode()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("Only the system can request entering safe mode");

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode> = 1;

     label1:
        return;
    }

    public void extendVerificationTimeout(int, int, long)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i3;
        long l2;
        com.android.server.pm.PackageVerificationState r1;
        com.android.server.pm.PackageVerificationResponse r2, $r7;
        android.os.Message r3;
        android.content.Context $r4;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        byte $b4, $b5;
        boolean $z0;
        com.android.server.pm.PackageManagerService$PackageHandler $r8, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", "Only package verification agents can extend verification timeouts");

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.PackageVerificationState) $r6;

        $r7 = new com.android.server.pm.PackageVerificationResponse;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r7.<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>(i1, $i3);

        r2 = $r7;

        $b4 = l2 cmp 3600000L;

        if $b4 <= 0 goto label1;

        l2 = 3600000L;

     label1:
        $b5 = l2 cmp 0L;

        if $b5 >= 0 goto label2;

        l2 = 0L;

     label2:
        if i1 == 1 goto label3;

        if i1 == -1 goto label3;

     label3:
        if r1 == null goto label4;

        $z0 = virtualinvoke r1.<com.android.server.pm.PackageVerificationState: boolean timeoutExtended()>();

        if $z0 != 0 goto label4;

        virtualinvoke r1.<com.android.server.pm.PackageVerificationState: void extendTimeout()>();

        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r3 = virtualinvoke $r8.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(15);

        r3.<android.os.Message: int arg1> = i0;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r9.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessageDelayed(android.os.Message,long)>(r3, l2);

     label4:
        return;
    }

    android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent, java.lang.String, int, java.util.List, int, boolean, boolean, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r17;
        java.lang.String r2, r10, $r28, $r29, $r31, $r32, $r35, $r39, $r44, $r47, $r58, $r67, $r69, $r75, $r80, $r84, $r86, $r87;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i12, $i13, $i16, $i22, $i24, $i27, $i29;
        java.util.List r3, r7;
        boolean z0, z1, z2, $z3, z4, $z5, $z6, $z7, $z8;
        java.util.HashMap r4;
        java.lang.Throwable r5, $r92;
        com.android.server.pm.PreferredIntentResolver r6;
        android.content.pm.ResolveInfo r8, r13;
        com.android.server.pm.PreferredActivity r9, $r55;
        java.lang.StringBuilder r11, $r33, $r36, $r38, $r42, $r43, $r45, $r46, $r48, $r49, $r50, $r51, $r57, $r61, $r62, $r63, $r66, $r68, $r72, $r73, $r74, $r76, $r77, $r81, $r82, $r83, $r85, $r89, $r90;
        android.content.pm.ActivityInfo r12, $r25, $r27, $r34, $r41, $r91;
        com.android.server.pm.UserManagerService $r14;
        android.util.SparseArray $r15;
        java.lang.Object $r16, $r21, $r26, $r88;
        com.android.server.pm.Settings $r18, $r19, $r37, $r52;
        com.android.server.PreferredComponent $r20, $r23, $r40, $r53, $r56, $r59, $r64, $r70, $r79;
        android.content.ComponentName $r22, $r54, $r60, $r78;
        android.content.pm.ApplicationInfo $r24, $r30;
        android.util.LogPrinter $r65, $r71;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        i2 := @parameter8: int;

        $r14 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z3 = virtualinvoke $r14.<com.android.server.pm.UserManagerService: boolean exists(int)>(i2);

        if $z3 != 0 goto label01;

        return null;

     label01:
        r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r4;

     label02:
        $r17 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r17 == null goto label03;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

     label03:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r18.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.pm.PreferredIntentResolver) $r16;

     label04:
        if z2 == 0 goto label69;

     label05:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Looking for preferred activities...");

     label06:
        goto label69;

     label07:
        r7 = virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r1, r2, z4, i2);

     label08:
        if r7 == null goto label66;

     label09:
        $i10 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i10 <= 0 goto label66;

     label10:
        i3 = 0;

        if z2 == 0 goto label12;

     label11:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Figuring out best match...");

     label12:
        i4 = interfaceinvoke r3.<java.util.List: int size()>();

     label13:
        i5 = 0;

     label14:
        if i5 >= i4 goto label20;

     label15:
        $r88 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i5);

        r8 = (android.content.pm.ResolveInfo) $r88;

     label16:
        if z2 == 0 goto label18;

     label17:
        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Match for ");

        $r91 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r82 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": 0x");

        $r84 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r86);

     label18:
        $i29 = r8.<android.content.pm.ResolveInfo: int match>;

        if $i29 <= i3 goto label70;

        i3 = r8.<android.content.pm.ResolveInfo: int match>;

     label19:
        goto label70;

     label20:
        if z2 == 0 goto label22;

     label21:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Best match: 0x");

        $r75 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r87 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r87);

     label22:
        i7 = i3 & 268369920;

     label23:
        i6 = interfaceinvoke r7.<java.util.List: int size()>();

     label24:
        i8 = 0;

     label25:
        if i8 >= i6 goto label66;

     label26:
        $r21 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i8);

        r9 = (com.android.server.pm.PreferredActivity) $r21;

     label27:
        if z2 == 0 goto label30;

     label28:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        r11 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking PreferredActivity ds=");

        $i24 = virtualinvoke r9.<com.android.server.pm.PreferredActivity: int countDataSchemes()>();

        if $i24 <= 0 goto label74;

        r10 = virtualinvoke r9.<com.android.server.pm.PreferredActivity: java.lang.String getDataScheme(int)>(0);

     label29:
        $r77 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  component=");

        $r79 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r78 = $r79.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $r81 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r78);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r80);

        $r71 = new android.util.LogPrinter;

        specialinvoke $r71.<android.util.LogPrinter: void <init>(int,java.lang.String,int)>(2, "PackageManager", 3);

        virtualinvoke r9.<com.android.server.pm.PreferredActivity: void dump(android.util.Printer,java.lang.String)>($r71, "  ");

     label30:
        $r20 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $i13 = $r20.<com.android.server.PreferredComponent: int mMatch>;

        if $i13 == i7 goto label34;

     label31:
        if z2 == 0 goto label73;

     label32:
        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping bad match ");

        $r70 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $i22 = $r70.<com.android.server.PreferredComponent: int mMatch>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i22);

        $r68 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r67);

     label33:
        goto label73;

     label34:
        if z0 == 0 goto label42;

     label35:
        $r64 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $z8 = $r64.<com.android.server.PreferredComponent: boolean mAlways>;

        if $z8 != 0 goto label42;

     label36:
        if z2 == 0 goto label73;

     label37:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Skipping mAlways=false entry");

     label38:
        goto label73;

     label39:
        $r92 := @caughtexception;

        r5 = $r92;

     label40:
        exitmonitor r4;

     label41:
        throw r5;

     label42:
        $r23 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r22 = $r23.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $i12 = i0 | 512;

        r12 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r22, $i12, i2);

     label43:
        if z2 == 0 goto label47;

     label44:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "Found preferred activity:");

     label45:
        if r12 == null goto label50;

     label46:
        $r65 = new android.util.LogPrinter;

        specialinvoke $r65.<android.util.LogPrinter: void <init>(int,java.lang.String,int)>(2, "PackageManager", 3);

        virtualinvoke r12.<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>($r65, "  ");

     label47:
        if r12 != null goto label75;

     label48:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling preferred activity: ");

        $r59 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r60 = $r59.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $r57 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r58);

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r9);

     label49:
        goto label73;

     label50:
        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "  null");

     label51:
        goto label47;

     label52:
        if i9 >= i4 goto label73;

     label53:
        $r26 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i9);

        r13 = (android.content.pm.ResolveInfo) $r26;

        $r25 = r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r24 = $r25.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r32 = $r24.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r30 = r12.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = $r30.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z6 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z6 != 0 goto label55;

     label54:
        goto label76;

     label55:
        $r27 = r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r29 = $r27.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r28 = r12.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z5 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z5 == 0 goto label76;

     label56:
        if z1 == 0 goto label59;

     label57:
        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r9);

     label58:
        goto label73;

     label59:
        if z0 == 0 goto label62;

     label60:
        $r40 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $z7 = virtualinvoke $r40.<com.android.server.PreferredComponent: boolean sameSet(java.util.List,int)>(r3, i1);

        if $z7 != 0 goto label62;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Result set changed, dropping preferred activity for ");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r46 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r47);

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r9);

        $r55 = new com.android.server.pm.PreferredActivity;

        $r56 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $i16 = $r56.<com.android.server.PreferredComponent: int mMatch>;

        $r53 = r9.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r54 = $r53.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        specialinvoke $r55.<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>(r9, $i16, null, $r54, 0);

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void addFilter(android.content.IntentFilter)>($r55);

        $r52 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r52.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        exitmonitor r4;

     label61:
        return null;

     label62:
        if z2 == 0 goto label64;

     label63:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning preferred activity: ");

        $r34 = r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r35 = $r34.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r41 = r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r44 = $r41.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r39 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", $r39);

     label64:
        $r37 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r37.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        exitmonitor r4;

     label65:
        return r13;

     label66:
        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r19.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i2);

        exitmonitor r4;

     label67:
        if z2 == 0 goto label68;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PackageManager", "No preferred activity to return");

     label68:
        return null;

     label69:
        if r6 == null goto label72;

        $i27 = 65536 & i0;

        if $i27 == 0 goto label71;

        z4 = 1;

        goto label07;

     label70:
        i5 = i5 + 1;

        goto label14;

     label71:
        z4 = 0;

        goto label07;

     label72:
        r7 = null;

        goto label08;

     label73:
        i8 = i8 + 1;

        goto label25;

     label74:
        r10 = "<none>";

        goto label29;

     label75:
        i9 = 0;

        goto label52;

     label76:
        i9 = i9 + 1;

        goto label52;

        catch java.lang.Throwable from label02 to label03 with label39;
        catch java.lang.Throwable from label03 to label04 with label39;
        catch java.lang.Throwable from label05 to label06 with label39;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.lang.Throwable from label09 to label10 with label39;
        catch java.lang.Throwable from label11 to label12 with label39;
        catch java.lang.Throwable from label12 to label13 with label39;
        catch java.lang.Throwable from label15 to label16 with label39;
        catch java.lang.Throwable from label17 to label18 with label39;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.lang.Throwable from label21 to label22 with label39;
        catch java.lang.Throwable from label23 to label24 with label39;
        catch java.lang.Throwable from label26 to label27 with label39;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label29 to label30 with label39;
        catch java.lang.Throwable from label30 to label31 with label39;
        catch java.lang.Throwable from label32 to label33 with label39;
        catch java.lang.Throwable from label35 to label36 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label40 to label41 with label39;
        catch java.lang.Throwable from label42 to label43 with label39;
        catch java.lang.Throwable from label44 to label45 with label39;
        catch java.lang.Throwable from label46 to label47 with label39;
        catch java.lang.Throwable from label48 to label49 with label39;
        catch java.lang.Throwable from label50 to label51 with label39;
        catch java.lang.Throwable from label53 to label54 with label39;
        catch java.lang.Throwable from label55 to label56 with label39;
        catch java.lang.Throwable from label57 to label58 with label39;
        catch java.lang.Throwable from label60 to label61 with label39;
        catch java.lang.Throwable from label63 to label64 with label39;
        catch java.lang.Throwable from label64 to label65 with label39;
        catch java.lang.Throwable from label66 to label67 with label39;
    }

    public void finishPackageInstall(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        android.os.Message r1;
        com.android.server.pm.PackageManagerService$PackageHandler $r2, $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("Only the system is allowed to finish installs");

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r1 = virtualinvoke $r2.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int)>(9, i0, 0);

        $r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r3.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void freeStorage(long, android.content.IntentSender)
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        android.content.IntentSender r1;
        android.content.Context $r2;
        com.android.server.pm.PackageManagerService$2 $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.IntentSender;

        $r2 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_CACHE", null);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r3 = new com.android.server.pm.PackageManagerService$2;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService$2: void <init>(com.android.server.pm.PackageManagerService,long,android.content.IntentSender)>(r0, l0, r1);

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        android.content.pm.IPackageDataObserver r1;
        android.content.Context $r2;
        com.android.server.pm.PackageManagerService$1 $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.IPackageDataObserver;

        $r2 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CLEAR_APP_CACHE", null);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r3 = new com.android.server.pm.PackageManagerService$1;

        specialinvoke $r3.<com.android.server.pm.PackageManagerService$1: void <init>(com.android.server.pm.PackageManagerService,long,android.content.pm.IPackageDataObserver)>(r0, l0, r1);

        virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        int i0, i1;
        com.android.server.pm.PackageSetting r2;
        com.android.server.pm.GrantedPermissions r3;
        android.content.pm.PackageUserState r4;
        com.android.server.pm.UserManagerService $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.server.pm.SharedUserSetting $r7;
        java.util.HashSet $r8;
        long $l2, $l3;
        int[] $r9;
        android.content.pm.PackageInfo $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r6 = r1.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r2 = (com.android.server.pm.PackageSetting) $r6;

        if r2 == null goto label1;

        $r7 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r7 == null goto label4;

        r3 = r2.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label3:
        r4 = virtualinvoke r2.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        $r9 = r3.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $l3 = r2.<com.android.server.pm.PackageSetting: long firstInstallTime>;

        $l2 = r2.<com.android.server.pm.PackageSetting: long lastUpdateTime>;

        $r8 = r3.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $r10 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet,android.content.pm.PackageUserState,int)>(r1, $r9, i0, $l3, $l2, $r8, r4, i1);

        return $r10;

     label4:
        r3 = r2;

        goto label3;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1, $r11;
        int i0, i1, $i2;
        java.util.HashMap r2, $r10, $r15;
        java.lang.Throwable r3, $r20;
        android.content.pm.PackageParser$Activity r4;
        android.content.pm.ActivityInfo r5, r7, $r13;
        com.android.server.pm.PackageSetting r6;
        com.android.server.pm.UserManagerService $r8;
        boolean $z0, $z1, $z2;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r9;
        java.lang.Object $r12, $r17;
        com.android.server.pm.Settings $r14, $r16;
        java.lang.String $r18;
        android.content.pm.PackageUserState $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r8 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r8.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "get activity info");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r10 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1400(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r9);

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Activity) $r12;

     label03:
        if r4 == null goto label13;

     label04:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = r4.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z2 = virtualinvoke $r14.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r13, i0, i1);

        if $z2 == 0 goto label13;

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r15 = $r16.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r18 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        r6 = (com.android.server.pm.PackageSetting) $r17;

     label05:
        if r6 != null goto label11;

     label06:
        exitmonitor r2;

     label07:
        return null;

     label08:
        $r20 := @caughtexception;

        r3 = $r20;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r19 = virtualinvoke r6.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r7 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,android.content.pm.PackageUserState,int)>(r4, i0, $r19, i1);

        exitmonitor r2;

     label12:
        return r7;

     label13:
        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.ComponentName mResolveComponentName>;

        $z1 = virtualinvoke $r11.<android.content.ComponentName: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label15;

        r5 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo mResolveActivity>;

        exitmonitor r2;

     label14:
        return r5;

     label15:
        exitmonitor r2;

     label16:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
    }

    public java.util.List getAllPermissionGroups(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1;
        java.util.HashMap r1, $r6, $r7;
        java.util.ArrayList r2, $r5;
        java.lang.Throwable r3, $r12;
        java.util.Iterator r4;
        java.util.Collection $r8;
        boolean $z0;
        java.lang.Object $r9;
        android.content.pm.PermissionGroupInfo $r10;
        android.content.pm.PackageParser$PermissionGroup $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $i1 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r5;

        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.content.pm.PackageParser$PermissionGroup) $r9;

        $r10 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>($r11, i0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label3:
        goto label2;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

     label5:
        exitmonitor r1;

     label6:
        throw r3;

     label7:
        exitmonitor r1;

     label8:
        return r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }

    public boolean getApplicationBlockedSettingAsUser(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r15;
        int i0, $i2, $i3;
        long l1;
        java.lang.Throwable r2, r4, $r14, $r16;
        java.util.HashMap r3, $r9;
        com.android.server.pm.PackageSetting r5;
        boolean z0;
        android.content.Context $r6, $r11;
        com.android.server.pm.Settings $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r10, $r12, $r13;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_USERS", null);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 == i0 goto label01;

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getApplicationBlocked for user ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", $r15);

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label03:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r9 = $r7.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r8;

     label04:
        if r5 != null goto label07;

     label05:
        exitmonitor r3;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label07:
        z0 = virtualinvoke r5.<com.android.server.pm.PackageSetting: boolean getBlocked(int)>(i0);

        exitmonitor r3;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label09:
        $r16 := @caughtexception;

        r4 = $r16;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        $r14 := @caughtexception;

        r2 = $r14;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public int getApplicationEnabledSetting(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r6;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label1;

        return 2;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i0, 0, "get enabled");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label2:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        i1 = virtualinvoke $r5.<com.android.server.pm.Settings: int getApplicationEnabledSettingLPr(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label3:
        return i1;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r11, $r13;
        int i0, i1, $i2, $i3;
        java.util.HashMap r2, $r10, $r14;
        java.lang.Throwable r3, $r18;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.ApplicationInfo r6, r7, r8;
        com.android.server.pm.UserManagerService $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12, $r17;
        com.android.server.pm.Settings $r15;
        android.content.pm.PackageUserState $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r9 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r9.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "get application info");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r12;

     label03:
        if r4 == null goto label13;

     label04:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r17;

     label05:
        if r5 != null goto label11;

     label06:
        exitmonitor r2;

     label07:
        return null;

     label08:
        $r18 := @caughtexception;

        r3 = $r18;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r16 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r4, i0, $r16, i1);

        exitmonitor r2;

     label12:
        return r6;

     label13:
        $r11 = "android";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label14;

        $r13 = "system";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label16;

     label14:
        r7 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo mAndroidApplication>;

        exitmonitor r2;

     label15:
        return r7;

     label16:
        $i3 = i0 & 8192;

        if $i3 == 0 goto label19;

     label17:
        r8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLPw(java.lang.String,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label18:
        return r8;

     label19:
        exitmonitor r2;

     label20:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
    }

    public int getComponentEnabledSetting(android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r6;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label1;

        return 2;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i0, 0, "get component enabled");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label2:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        i1 = virtualinvoke $r5.<com.android.server.pm.Settings: int getComponentEnabledSettingLPr(android.content.ComponentName,int)>(r1, i0);

        exitmonitor r2;

     label3:
        return i1;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    java.io.File getDataPathForUser(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.io.File $r1, $r3;
        java.lang.StringBuilder $r2, $r5, $r7, $r8;
        java.lang.String $r4, $r6, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.server.pm.PackageManagerService: java.io.File mUserAppDataDir>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = <java.io.File: java.lang.String separator>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r9);

        return $r1;
    }

    public int getFlagsForUid(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2, $i3;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r7;
        java.lang.Object r3;
        com.android.server.pm.Settings $r4;
        boolean $z0, $z1;
        com.android.server.pm.PackageSetting $r5;
        com.android.server.pm.SharedUserSetting $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r3 = virtualinvoke $r4.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i3);

        $z0 = r3 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label3;

        $r6 = (com.android.server.pm.SharedUserSetting) r3;

        i2 = $r6.<com.android.server.pm.SharedUserSetting: int pkgFlags>;

        exitmonitor r1;

     label2:
        return i2;

     label3:
        $z1 = r3 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label8;

        $r5 = (com.android.server.pm.PackageSetting) r3;

        i1 = $r5.<com.android.server.pm.PackageSetting: int pkgFlags>;

        exitmonitor r1;

     label4:
        return i1;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        exitmonitor r1;

     label9:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public android.content.ComponentName getHomeActivities(java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1, r3;
        android.content.Intent r2, $r6;
        int i0;
        android.content.pm.ResolveInfo r4, $r15;
        java.util.Iterator r5;
        android.content.pm.ActivityInfo $r8, $r10, $r12;
        android.content.ComponentName $r9;
        java.lang.String $r11, $r13;
        java.lang.Object $r14;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r2 = $r6;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.HOME");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r2, null, 128, i0);

        r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r2, null, 0, r3, 0, 1, 0, 0, i0);

        interfaceinvoke r1.<java.util.List: void clear()>();

        if r3 == null goto label2;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (android.content.pm.ResolveInfo) $r14;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label1;

     label2:
        if r4 == null goto label3;

        $r8 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        if $r8 != null goto label4;

     label3:
        return null;

     label4:
        $r9 = new android.content.ComponentName;

        $r10 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r10.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r12 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r11 = $r12.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r11);

        return $r9;
    }

    public int getInstallLocation()
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "default_install_location", 0);

        return $i0;
    }

    public android.content.pm.ParceledListSlice getInstalledApplications(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2, $z4;
        java.util.HashMap r1, $r13, $r15, $r25, $r26;
        java.util.ArrayList r2, $r12, $r21;
        java.util.Iterator r3, r8;
        android.content.pm.ParceledListSlice r4, $r16;
        java.lang.Throwable r5, $r33;
        android.content.pm.PackageParser$Package r6, $r30, $r32;
        android.content.pm.ApplicationInfo r7, r10;
        com.android.server.pm.PackageSetting r9, $r19;
        com.android.server.pm.UserManagerService $r11;
        java.util.Collection $r14, $r27;
        java.lang.Object $r17, $r18, $r20, $r29;
        android.content.pm.PackageUserState $r22, $r31;
        com.android.server.pm.Settings $r23, $r24;
        java.lang.String $r28;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r11 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z1 = virtualinvoke $r11.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z1 != 0 goto label01;

        return null;

     label01:
        $i2 = i0 & 8192;

        if $i2 == 0 goto label11;

        z0 = 1;

     label02:
        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

        if z0 == 0 goto label14;

     label03:
        $r21 = new java.util.ArrayList;

        $r24 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r25 = $r24.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $i4 = virtualinvoke $r25.<java.util.HashMap: int size()>();

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i4);

        r2 = $r21;

        $r23 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r26 = $r23.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r27 = virtualinvoke $r26.<java.util.HashMap: java.util.Collection values()>();

        r8 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r29 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.pm.PackageSetting) $r29;

        $r30 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r30 == null goto label12;

        $r32 = r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r31 = virtualinvoke r9.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r10 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>($r32, i0, $r31, i1);

     label05:
        if r10 == null goto label04;

     label06:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label07:
        goto label04;

     label08:
        $r33 := @caughtexception;

        r5 = $r33;

     label09:
        exitmonitor r1;

     label10:
        throw r5;

     label11:
        z0 = 0;

        goto label02;

     label12:
        $r28 = r9.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r10 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo generateApplicationInfoFromSettingsLPw(java.lang.String,int,int)>($r28, i0, i1);

     label13:
        goto label05;

     label14:
        $r12 = new java.util.ArrayList;

        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $i3 = virtualinvoke $r13.<java.util.HashMap: int size()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i3);

        r2 = $r12;

        $r15 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r14 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.PackageParser$Package) $r18;

        $r17 = r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        if $r17 == null goto label15;

        $r20 = r6.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r19 = (com.android.server.pm.PackageSetting) $r20;

        $r22 = virtualinvoke $r19.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r7 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r6, i0, $r22, i1);

     label16:
        if r7 == null goto label15;

     label17:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label18:
        goto label15;

     label19:
        $r16 = new android.content.pm.ParceledListSlice;

        specialinvoke $r16.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r2);

        r4 = $r16;

        exitmonitor r1;

     label20:
        return r4;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
    }

    public android.content.pm.ParceledListSlice getInstalledPackages(int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z3;
        java.util.HashMap r1, $r11, $r13, $r20, $r21;
        java.util.ArrayList r2, $r10, $r18;
        java.util.Iterator r3, r7;
        android.content.pm.ParceledListSlice r4, $r14;
        java.lang.Throwable r5, $r26;
        android.content.pm.PackageInfo r6, r9;
        com.android.server.pm.PackageSetting r8;
        java.util.Collection $r12, $r23;
        android.content.pm.PackageParser$Package $r15, $r24, $r27;
        java.lang.Object $r16, $r22;
        com.android.server.pm.Settings $r17, $r19;
        java.lang.String $r25;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & 8192;

        if $i2 == 0 goto label10;

        z0 = 1;

     label01:
        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i3, i1, 1, "get installed packages");

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

        if z0 == 0 goto label13;

     label02:
        $r18 = new java.util.ArrayList;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r21 = $r17.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $i5 = virtualinvoke $r21.<java.util.HashMap: int size()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i5);

        r2 = $r18;

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r20 = $r19.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r23 = virtualinvoke $r20.<java.util.HashMap: java.util.Collection values()>();

        r7 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r22 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.pm.PackageSetting) $r22;

        $r24 = r8.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r24 == null goto label11;

        $r27 = r8.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        r9 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>($r27, i0, i1);

     label04:
        if r9 == null goto label03;

     label05:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label06:
        goto label03;

     label07:
        $r26 := @caughtexception;

        r5 = $r26;

     label08:
        exitmonitor r1;

     label09:
        throw r5;

     label10:
        z0 = 0;

        goto label01;

     label11:
        $r25 = r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r9 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>($r25, i0, i1);

     label12:
        goto label04;

     label13:
        $r10 = new java.util.ArrayList;

        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $i4 = virtualinvoke $r11.<java.util.HashMap: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i4);

        r2 = $r10;

        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (android.content.pm.PackageParser$Package) $r16;

        r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>($r15, i0, i1);

     label15:
        if r6 == null goto label14;

     label16:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label17:
        goto label14;

     label18:
        $r14 = new android.content.pm.ParceledListSlice;

        specialinvoke $r14.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r2);

        r4 = $r14;

        exitmonitor r1;

     label19:
        return r4;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label16 to label17 with label07;
        catch java.lang.Throwable from label18 to label19 with label07;
    }

    public java.lang.String getInstallerPackageName(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r4;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r6;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r4 = virtualinvoke $r5.<com.android.server.pm.Settings: java.lang.String getInstallerPackageNameLPr(java.lang.String)>(r1);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r8;
        android.content.pm.InstrumentationInfo r4;
        java.lang.Object $r6;
        android.content.pm.PackageParser$Instrumentation $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (android.content.pm.PackageParser$Instrumentation) $r6;

        r4 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>($r7, i0);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent, java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1;
        java.util.List $r3;
        android.content.pm.ResolveInfo $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r1, r2, i0, $r3, 0, 0, 0, 0, i1);

        return $r4;
    }

    public java.lang.String getNameForUid(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1, $i2;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r14;
        java.lang.Object r3;
        java.lang.String r4, r6, $r11;
        com.android.server.pm.SharedUserSetting r5;
        com.android.server.pm.Settings $r7;
        boolean $z0, $z1;
        com.android.server.pm.PackageSetting $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r3 = virtualinvoke $r7.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>($i1);

        $z0 = r3 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label3;

        r5 = (com.android.server.pm.SharedUserSetting) r3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = r5.<com.android.server.pm.SharedUserSetting: java.lang.String name>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = r5.<com.android.server.pm.SharedUserSetting: int userId>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $z1 = r3 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label8;

        $r8 = (com.android.server.pm.PackageSetting) r3;

        r4 = $r8.<com.android.server.pm.PackageSetting: java.lang.String name>;

        exitmonitor r1;

     label4:
        return r4;

     label5:
        $r14 := @caughtexception;

        r2 = $r14;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        exitmonitor r1;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public int[] getPackageGids(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r6;
        java.lang.Throwable r3, $r11;
        android.content.pm.PackageParser$Package r4;
        int[] r5, $r8;
        java.lang.Object $r7, $r9;
        com.android.server.pm.PackageSetting $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r7;

     label2:
        if r4 == null goto label5;

     label3:
        $r9 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        $r10 = (com.android.server.pm.PackageSetting) $r9;

        r5 = virtualinvoke $r10.<com.android.server.pm.PackageSetting: int[] getGids()>();

        exitmonitor r2;

     label4:
        return r5;

     label5:
        exitmonitor r2;

     label6:
        $r8 = newarray (int)[0];

        return $r8;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        java.util.HashMap r2, $r8;
        java.lang.Throwable r3, $r10;
        android.content.pm.PackageParser$Package r4;
        android.content.pm.PackageInfo r5, r6;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "get package info");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r9;

     label03:
        if r4 == null goto label09;

     label04:
        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>(r4, i0, i1);

        exitmonitor r2;

     label05:
        return r5;

     label06:
        $r10 := @caughtexception;

        r3 = $r10;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $i3 = i0 & 8192;

        if $i3 == 0 goto label12;

     label10:
        r6 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfoFromSettingsLPw(java.lang.String,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label11:
        return r6;

     label12:
        exitmonitor r2;

     label13:
        return null;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
    }

    public void getPackageSizeInfo(java.lang.String, int, android.content.pm.IPackageStatsObserver)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        android.content.pm.IPackageStatsObserver r2;
        android.content.pm.PackageStats r3, $r6;
        android.os.Message r4;
        android.content.Context $r5;
        com.android.server.pm.PackageManagerService$PackageHandler $r7, $r9;
        com.android.server.pm.PackageManagerService$MeasureParams $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.IPackageStatsObserver;

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GET_PACKAGE_SIZE", null);

        $r6 = new android.content.pm.PackageStats;

        specialinvoke $r6.<android.content.pm.PackageStats: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r6;

        $r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r4 = virtualinvoke $r7.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        $r8 = new com.android.server.pm.PackageManagerService$MeasureParams;

        specialinvoke $r8.<com.android.server.pm.PackageManagerService$MeasureParams: void <init>(com.android.server.pm.PackageManagerService,android.content.pm.PackageStats,android.content.pm.IPackageStatsObserver)>(r0, r3, r2);

        r4.<android.os.Message: java.lang.Object obj> = $r8;

        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r9.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r4);

        return;
    }

    public int getPackageUid(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.util.HashMap r2, $r8, $r10;
        java.lang.Throwable r3, $r18;
        android.content.pm.PackageParser$Package r4, r6, $r13, $r14;
        com.android.server.pm.PackageSetting r5;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0;
        java.lang.Object $r9, $r12;
        com.android.server.pm.Settings $r11;
        android.content.pm.ApplicationInfo $r15, $r16, $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = -1;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label01;

        return -1;

     label01:
        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i3, i0, 0, "get package uid");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r9;

     label03:
        if r4 == null goto label09;

     label04:
        $r17 = r4.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i5);

        exitmonitor r2;

     label05:
        return i2;

     label06:
        $r18 := @caughtexception;

        r3 = $r18;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r11.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r12;

     label10:
        if r5 == null goto label12;

     label11:
        $r14 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        if $r14 == null goto label12;

        $r13 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

        $r15 = $r13.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r15 != null goto label14;

     label12:
        exitmonitor r2;

     label13:
        return -1;

     label14:
        r6 = r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label15:
        if r6 == null goto label17;

     label16:
        $r16 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        i1 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i4);

     label17:
        exitmonitor r2;

     label18:
        return i1;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label17 to label18 with label06;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, i2, i3, $i4;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r15;
        java.lang.Object r3, $r14;
        com.android.server.pm.PackageSetting r4, $r13;
        java.lang.String[] r5, r7;
        com.android.server.pm.SharedUserSetting r6;
        java.util.Iterator r8;
        com.android.server.pm.Settings $r9;
        boolean $z0, $z1, $z2;
        java.lang.String $r10, $r16;
        java.util.HashSet $r11, $r12;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label01:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r3 = virtualinvoke $r9.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i1);

        $z0 = r3 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label09;

        r6 = (com.android.server.pm.SharedUserSetting) r3;

        $r11 = r6.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        $i4 = virtualinvoke $r11.<java.util.HashSet: int size()>();

        r7 = newarray (java.lang.String)[$i4];

        $r12 = r6.<com.android.server.pm.SharedUserSetting: java.util.HashSet packages>;

        r8 = virtualinvoke $r12.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        i2 = 0;

     label03:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

     label04:
        i3 = i2 + 1;

     label05:
        $r14 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.android.server.pm.PackageSetting) $r14;

        $r16 = $r13.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r7[i2] = $r16;

     label06:
        i2 = i3;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return r7;

     label09:
        $z1 = r3 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label14;

        r4 = (com.android.server.pm.PackageSetting) r3;

        r5 = newarray (java.lang.String)[1];

        $r10 = r4.<com.android.server.pm.PackageSetting: java.lang.String name>;

        r5[0] = $r10;

        exitmonitor r1;

     label10:
        return r5;

     label11:
        $r15 := @caughtexception;

        r2 = $r15;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

     label14:
        exitmonitor r1;

     label15:
        return null;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
    }

    public android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[], int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String[] r1;
        int i0, i1, $i2, $i3;
        boolean z0, $z1, $z2, $z3;
        java.util.HashMap r2, $r12, $r18;
        java.util.ArrayList r3, $r11;
        java.lang.Throwable r4, $r22;
        boolean[] r5;
        java.util.Iterator r6, r8;
        android.content.pm.ParceledListSlice r7, $r14;
        com.android.server.pm.PackageSetting r9, $r21;
        com.android.server.pm.UserManagerService $r10;
        java.util.Collection $r13, $r20;
        java.lang.Object $r15, $r16, $r23;
        android.content.pm.PackageParser$Package $r17;
        com.android.server.pm.Settings $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r10 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z1 = virtualinvoke $r10.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z1 != 0 goto label01;

        return null;

     label01:
        $i2 = i0 & 8192;

        if $i2 == 0 goto label11;

        z0 = 1;

     label02:
        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label03:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        $i3 = lengthof r1;

        r5 = newarray (boolean)[$i3];

     label04:
        if z0 == 0 goto label12;

     label05:
        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = $r19.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r20 = virtualinvoke $r18.<java.util.HashMap: java.util.Collection values()>();

        r6 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (com.android.server.pm.PackageSetting) $r23;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPackageHoldingPermissions(java.util.ArrayList,com.android.server.pm.PackageSetting,java.lang.String[],boolean[],int,int)>(r3, $r21, r1, r5, i0, i1);

     label07:
        goto label06;

     label08:
        $r22 := @caughtexception;

        r4 = $r22;

     label09:
        exitmonitor r2;

     label10:
        throw r4;

     label11:
        z0 = 0;

        goto label02;

     label12:
        $r12 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.util.Collection values()>();

        r8 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r15 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (android.content.pm.PackageParser$Package) $r15;

        $r16 = $r17.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r9 = (com.android.server.pm.PackageSetting) $r16;

     label14:
        if r9 == null goto label13;

     label15:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPackageHoldingPermissions(java.util.ArrayList,com.android.server.pm.PackageSetting,java.lang.String[],boolean[],int,int)>(r3, r9, r1, r5, i0, i1);

     label16:
        goto label13;

     label17:
        $r14 = new android.content.pm.ParceledListSlice;

        specialinvoke $r14.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r3);

        r7 = $r14;

        exitmonitor r2;

     label18:
        return r7;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
    }

    public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r8;
        android.content.pm.PermissionGroupInfo r4;
        java.lang.Object $r6;
        android.content.pm.PackageParser$PermissionGroup $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (android.content.pm.PackageParser$PermissionGroup) $r6;

        r4 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>($r7, i0);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        java.util.HashMap r2, $r7;
        java.lang.Throwable r3, $r9;
        com.android.server.pm.BasePermission r4;
        android.content.pm.PermissionInfo r5;
        com.android.server.pm.Settings $r6;
        java.lang.Object $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.BasePermission) $r8;

     label2:
        if r4 == null goto label5;

     label3:
        r5 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission,int)>(r4, i0);

        exitmonitor r2;

     label4:
        return r5;

     label5:
        exitmonitor r2;

     label6:
        return null;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.List getPersistentApplications(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r8;
        java.util.HashMap r2, $r9, $r17;
        java.lang.Throwable r3, $r19;
        java.util.Iterator r4;
        android.content.pm.PackageParser$Package r5;
        com.android.server.pm.PackageSetting r6;
        android.content.pm.ApplicationInfo r7, $r11, $r13;
        java.util.Collection $r10;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12, $r16;
        java.lang.String $r14;
        com.android.server.pm.Settings $r15;
        android.content.pm.PackageUserState $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r1 = $r8;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.PackageParser$Package) $r12;

        $r11 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r11 == null goto label02;

        $r13 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 8 & $i2;

        if $i3 == 0 goto label02;

        $z1 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z1 == 0 goto label03;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r5);

        if $z2 == 0 goto label02;

     label03:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r17 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = r5.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r16 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        r6 = (com.android.server.pm.PackageSetting) $r16;

     label04:
        if r6 == null goto label02;

     label05:
        $r18 = virtualinvoke r6.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r7 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,android.content.pm.PackageUserState,int)>(r5, i0, $r18, i1);

     label06:
        if r7 == null goto label02;

     label07:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label08:
        goto label02;

     label09:
        $r19 := @caughtexception;

        r3 = $r19;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        exitmonitor r2;

     label13:
        return r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public int getPreferredActivities(java.util.List, java.util.List, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1, r2;
        java.lang.String r3, $r18;
        int i0;
        java.util.HashMap r4;
        java.lang.Throwable r5, $r20;
        com.android.server.pm.PreferredIntentResolver r6;
        java.util.Iterator r7;
        com.android.server.pm.PreferredActivity r8;
        com.android.server.pm.Settings $r9;
        android.util.SparseArray $r10;
        java.lang.Object $r11, $r13;
        boolean $z0, $z3, $z4;
        com.android.server.PreferredComponent $r12, $r17, $r19;
        android.content.ComponentName $r14, $r16;
        android.content.IntentFilter $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r4;

     label01:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r9.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.pm.PreferredIntentResolver) $r11;

     label02:
        if r6 == null goto label15;

     label03:
        r7 = virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: java.util.Iterator filterIterator()>();

     label04:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.pm.PreferredActivity) $r13;

     label05:
        if r3 == null goto label07;

     label06:
        $r17 = r8.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r16 = $r17.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $r18 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label04;

        $r19 = r8.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $z4 = $r19.<com.android.server.PreferredComponent: boolean mAlways>;

        if $z4 == 0 goto label04;

     label07:
        if r1 == null goto label09;

     label08:
        $r15 = new android.content.IntentFilter;

        specialinvoke $r15.<android.content.IntentFilter: void <init>(android.content.IntentFilter)>(r8);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r15);

     label09:
        if r2 == null goto label04;

     label10:
        $r12 = r8.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r14 = $r12.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label11:
        goto label04;

     label12:
        $r20 := @caughtexception;

        r5 = $r20;

     label13:
        exitmonitor r4;

     label14:
        throw r5;

     label15:
        exitmonitor r4;

     label16:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    public java.util.List getPreferredPackages(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        return $r1;
    }

    public android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r9, $r13;
        java.lang.Throwable r3, $r18;
        android.content.pm.PackageParser$Provider r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.ProviderInfo r6, $r11;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r8;
        java.lang.Object $r10, $r15;
        com.android.server.pm.Settings $r12, $r14;
        java.lang.String $r16;
        android.content.pm.PackageUserState $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "get provider info");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.HashMap access$1600(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Provider) $r10;

     label03:
        if r4 == null goto label13;

     label04:
        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = r4.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = virtualinvoke $r12.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r11, i0, i1);

        if $z1 == 0 goto label13;

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r16 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r5 = (com.android.server.pm.PackageSetting) $r15;

     label05:
        if r5 != null goto label11;

     label06:
        exitmonitor r2;

     label07:
        return null;

     label08:
        $r18 := @caughtexception;

        r3 = $r18;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r17 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r4, i0, $r17, i1);

        exitmonitor r2;

     label12:
        return r6;

     label13:
        exitmonitor r2;

     label14:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r9, $r13;
        java.lang.Throwable r3, $r18;
        android.content.pm.PackageParser$Activity r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.ActivityInfo r6, $r11;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r8;
        java.lang.Object $r10, $r15;
        com.android.server.pm.Settings $r12, $r14;
        java.lang.String $r16;
        android.content.pm.PackageUserState $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "get receiver info");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1400(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Activity) $r10;

     label03:
        if r4 == null goto label13;

     label04:
        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = r4.<android.content.pm.PackageParser$Activity: android.content.pm.ActivityInfo info>;

        $z1 = virtualinvoke $r12.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r11, i0, i1);

        if $z1 == 0 goto label13;

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r16 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r5 = (com.android.server.pm.PackageSetting) $r15;

     label05:
        if r5 != null goto label11;

     label06:
        exitmonitor r2;

     label07:
        return null;

     label08:
        $r18 := @caughtexception;

        r3 = $r18;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r17 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,android.content.pm.PackageUserState,int)>(r4, i0, $r17, i1);

        exitmonitor r2;

     label12:
        return r6;

     label13:
        exitmonitor r2;

     label14:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        java.util.HashMap r2, $r9, $r13;
        java.lang.Throwable r3, $r18;
        android.content.pm.PackageParser$Service r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.ServiceInfo r6, $r11;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0, $z1;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver $r8;
        java.lang.Object $r10, $r15;
        com.android.server.pm.Settings $r12, $r14;
        java.lang.String $r16;
        android.content.pm.PackageUserState $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "get service info");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        $r9 = staticinvoke <com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.HashMap access$1500(com.android.server.pm.PackageManagerService$ServiceIntentResolver)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Service) $r10;

     label03:
        if r4 == null goto label13;

     label04:
        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = r4.<android.content.pm.PackageParser$Service: android.content.pm.ServiceInfo info>;

        $z1 = virtualinvoke $r12.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r11, i0, i1);

        if $z1 == 0 goto label13;

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r16 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r5 = (com.android.server.pm.PackageSetting) $r15;

     label05:
        if r5 != null goto label11;

     label06:
        exitmonitor r2;

     label07:
        return null;

     label08:
        $r18 := @caughtexception;

        r3 = $r18;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r17 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser$Service,int,android.content.pm.PackageUserState,int)>(r4, i0, $r17, i1);

        exitmonitor r2;

     label12:
        return r6;

     label13:
        exitmonitor r2;

     label14:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    public android.content.pm.FeatureInfo[] getSystemAvailableFeatures()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1, $r6;
        java.lang.Throwable r2, $r9;
        java.util.Collection r3;
        int i0, $i1, $i2;
        android.content.pm.FeatureInfo[] r4;
        android.content.pm.FeatureInfo r5, $r8;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        r3 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        i0 = interfaceinvoke r3.<java.util.Collection: int size()>();

     label2:
        if i0 <= 0 goto label5;

     label3:
        $i1 = i0 + 1;

        r4 = newarray (android.content.pm.FeatureInfo)[$i1];

        interfaceinvoke r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        $r8 = new android.content.pm.FeatureInfo;

        specialinvoke $r8.<android.content.pm.FeatureInfo: void <init>()>();

        r5 = $r8;

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.opengles.version", 0);

        r5.<android.content.pm.FeatureInfo: int reqGlEsVersion> = $i2;

        r4[i0] = r5;

        exitmonitor r1;

     label4:
        return r4;

     label5:
        exitmonitor r1;

     label6:
        return null;

     label7:
        $r9 := @caughtexception;

        r2 = $r9;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String[] getSystemSharedLibraryNames()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1, $r5;
        java.lang.Throwable r2, $r7;
        java.util.Set r3;
        int i0;
        java.lang.String[] r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mSharedLibraries>;

        r3 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        i0 = interfaceinvoke r3.<java.util.Set: int size()>();

     label2:
        if i0 <= 0 goto label5;

     label3:
        r4 = newarray (java.lang.String)[i0];

        interfaceinvoke r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        exitmonitor r1;

     label4:
        return r4;

     label5:
        exitmonitor r1;

     label6:
        return null;

     label7:
        $r7 := @caughtexception;

        r2 = $r7;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getUidForSharedUser(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r6;
        com.android.server.pm.SharedUserSetting r4;
        int i0;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return -1;

     label01:
        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r4 = virtualinvoke $r5.<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)>(r1, 0, 0);

     label03:
        if r4 != null goto label09;

     label04:
        exitmonitor r2;

     label05:
        return -1;

     label06:
        $r6 := @caughtexception;

        r3 = $r6;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        i0 = r4.<com.android.server.pm.SharedUserSetting: int userId>;

        exitmonitor r2;

     label10:
        return i0;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r6;
        android.content.pm.VerifierDeviceIdentity r3;
        android.content.Context $r4;
        com.android.server.pm.Settings $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r4 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", "Only package verification agents can read the verifier device identity");

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r3 = virtualinvoke $r5.<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void grantPermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r25, $r31;
        java.util.HashMap r3, $r10, $r13;
        java.lang.Throwable r4, $r32;
        android.content.pm.PackageParser$Package r5;
        com.android.server.pm.BasePermission r6;
        com.android.server.pm.PackageSetting r7;
        com.android.server.pm.GrantedPermissions r8;
        android.content.Context $r9;
        java.lang.Object $r11, $r14, $r16;
        com.android.server.pm.Settings $r12, $r19;
        com.android.server.pm.SharedUserSetting $r15;
        boolean $z0, $z1;
        java.util.HashSet $r17;
        int[] $r18, $r20, $r21;
        java.lang.IllegalArgumentException $r22, $r29;
        java.lang.StringBuilder $r23, $r24, $r26, $r27, $r28, $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GRANT_REVOKE_PERMISSIONS", null);

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.content.pm.PackageParser$Package) $r11;

     label02:
        if r5 != null goto label07;

     label03:
        $r29 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r29;

     label04:
        $r32 := @caughtexception;

        r4 = $r32;

     label05:
        exitmonitor r3;

     label06:
        throw r4;

     label07:
        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r13 = $r12.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (com.android.server.pm.BasePermission) $r14;

     label08:
        if r6 != null goto label10;

     label09:
        $r22 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission: ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r22;

     label10:
        staticinvoke <com.android.server.pm.PackageManagerService: void checkGrantRevokePermissions(android.content.pm.PackageParser$Package,com.android.server.pm.BasePermission)>(r5, r6);

        $r16 = r5.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r7 = (com.android.server.pm.PackageSetting) $r16;

     label11:
        if r7 != null goto label14;

     label12:
        exitmonitor r3;

     label13:
        return;

     label14:
        $r15 = r7.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r15 == null goto label19;

        r8 = r7.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label15:
        $r17 = r8.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        if $z0 == 0 goto label17;

        $z1 = r7.<com.android.server.pm.PackageSetting: boolean haveGids>;

        if $z1 == 0 goto label16;

        $r21 = r8.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r18 = r6.<com.android.server.pm.BasePermission: int[] gids>;

        $r20 = staticinvoke <com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>($r21, $r18);

        r8.<com.android.server.pm.GrantedPermissions: int[] gids> = $r20;

     label16:
        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r19.<com.android.server.pm.Settings: void writeLPr()>();

     label17:
        exitmonitor r3;

     label18:
        return;

     label19:
        r8 = r7;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
        catch java.lang.Throwable from label14 to label15 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label17 to label18 with label04;
    }

    public boolean hasSystemFeature(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4;
        java.lang.Throwable r3, $r5;
        boolean z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAvailableFeatures>;

        z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasSystemUidErrors()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mHasSystemUidErrors>;

        return $z0;
    }

    public int installExistingPackageAsUser(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r15;
        int i0, $i2, $i3;
        long l1;
        java.lang.Throwable r2, r4, $r17, $r18;
        java.util.HashMap r3, $r10;
        com.android.server.pm.PackageSetting r5;
        boolean z0, z1, $z2;
        android.content.Context $r6, $r12;
        android.os.Bundle $r7;
        com.android.server.pm.Settings $r8, $r11;
        java.lang.Object $r9;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INSTALL_PACKAGES", null);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 == i0 goto label01;

        $r12 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("installExistingPackage for user ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", $r15);

     label01:
        $z2 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>(i0, "no_install_apps");

        if $z2 == 0 goto label02;

        return -111;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>(int)>(1);

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label04:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r8.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r9;

     label05:
        if r5 != null goto label08;

     label06:
        exitmonitor r3;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return -3;

     label08:
        z0 = virtualinvoke r5.<com.android.server.pm.PackageSetting: boolean getInstalled(int)>(i0);

     label09:
        z1 = 0;

        if z0 != 0 goto label12;

     label10:
        virtualinvoke r5.<com.android.server.pm.PackageSetting: void setInstalled(boolean,int)>(1, i0);

        virtualinvoke r5.<com.android.server.pm.PackageSetting: void setBlocked(boolean,int)>(0, i0);

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r11.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

     label11:
        z1 = 1;

     label12:
        exitmonitor r3;

     label13:
        if z1 == 0 goto label15;

     label14:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageAddedForUser(java.lang.String,com.android.server.pm.PackageSetting,int)>(r1, r5, i0);

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label16:
        $r18 := @caughtexception;

        r4 = $r18;

     label17:
        exitmonitor r3;

     label18:
        throw r4;

     label19:
        $r17 := @caughtexception;

        r2 = $r17;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    public void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>(r1, r2, i0, null);

        return;
    }

    public void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, null, null, null);

        return;
    }

    public void installPackageWithVerification(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.net.Uri, android.content.pm.ManifestDigest, android.content.pm.ContainerEncryptionParams)
    {
        com.android.server.pm.PackageManagerService r0;
        android.net.Uri r1, r4;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.ManifestDigest r5;
        android.content.pm.ContainerEncryptionParams r6;
        android.content.pm.VerificationParams $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.Uri;

        r5 := @parameter5: android.content.pm.ManifestDigest;

        r6 := @parameter6: android.content.pm.ContainerEncryptionParams;

        $r7 = new android.content.pm.VerificationParams;

        specialinvoke $r7.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(r4, null, null, -1, r5);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, $r7, r6);

        return;
    }

    public void installPackageWithVerificationAndEncryption(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams)
    {
        com.android.server.pm.PackageManagerService r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r3;
        android.content.pm.VerificationParams r4;
        android.content.pm.ContainerEncryptionParams r5;
        android.os.UserHandle r6, $r10;
        android.os.Message r7;
        android.content.Context $r9;
        boolean $z0;
        com.android.server.pm.PackageManagerService$PackageHandler $r11, $r12;
        com.android.server.pm.PackageManagerService$InstallParams $r13;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: android.content.pm.ContainerEncryptionParams;

        $r9 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INSTALL_PACKAGES", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>($i3, "no_install_apps");

        if $z0 == 0 goto label3;

     label1:
        interfaceinvoke r2.<android.content.pm.IPackageInstallObserver: void packageInstalled(java.lang.String,int)>("", -111);

     label2:
        return;

     label3:
        $i4 = i0 & 64;

        if $i4 == 0 goto label7;

        r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

     label4:
        if i1 == 2000 goto label5;

        if i1 != 0 goto label8;

     label5:
        i2 = i0 | 32;

     label6:
        virtualinvoke r4.<android.content.pm.VerificationParams: void setInstallerUid(int)>(i1);

        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r7 = virtualinvoke $r11.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        $r13 = new com.android.server.pm.PackageManagerService$InstallParams;

        specialinvoke $r13.<com.android.server.pm.PackageManagerService$InstallParams: void <init>(com.android.server.pm.PackageManagerService,android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams,android.os.UserHandle)>(r0, r1, r2, i2, r3, r4, r5, r6);

        r7.<android.os.Message: java.lang.Object obj> = $r13;

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r12.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r7);

        return;

     label7:
        $r10 = new android.os.UserHandle;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        specialinvoke $r10.<android.os.UserHandle: void <init>(int)>($i5);

        r6 = $r10;

        goto label4;

     label8:
        i2 = i0 & -33;

        goto label6;

     label9:
        $r14 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label9;
    }

    public boolean isFirstBoot()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mRestoredSettings>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOnlyCoreApps()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mOnlyCore>;

        return $z0;
    }

    public boolean isPackageAvailable(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        java.util.HashMap r2, $r8;
        java.lang.Throwable r3, $r11;
        android.content.pm.PackageParser$Package r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.PackageUserState r6;
        boolean z0, $z1;
        com.android.server.pm.UserManagerService $r7;
        java.lang.Object $r9, $r10;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z1 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z1 != 0 goto label01;

        return 0;

     label01:
        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i1, i0, 0, "is package available");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r9;

     label03:
        if r4 == null goto label13;

     label04:
        $r10 = r4.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r5 = (com.android.server.pm.PackageSetting) $r10;

     label05:
        if r5 == null goto label13;

     label06:
        r6 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

     label07:
        if r6 == null goto label13;

     label08:
        z0 = staticinvoke <android.content.pm.PackageParser: boolean isAvailable(android.content.pm.PackageUserState)>(r6);

        exitmonitor r2;

     label09:
        return z0;

     label10:
        $r11 := @caughtexception;

        r3 = $r11;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        exitmonitor r2;

     label14:
        return 0;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public boolean isPermissionEnforced(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        return 1;
    }

    public boolean isProtectedBroadcast(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r5;
        boolean z0;
        java.util.HashSet $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mProtectedBroadcasts>;

        z0 = virtualinvoke $r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isSafeMode()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $z0 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        return $z0;
    }

    public boolean isStorageLow()
    {
        com.android.server.pm.PackageManagerService r0;
        long l0;
        java.lang.Throwable r1, $r4;
        boolean z0;
        android.os.IBinder $r2;
        com.android.server.DeviceStorageMonitorService $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("devicestoragemonitor");

        $r3 = (com.android.server.DeviceStorageMonitorService) $r2;

        z0 = virtualinvoke $r3.<com.android.server.DeviceStorageMonitorService: boolean isMemoryLow()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void movePackage(java.lang.String, android.content.pm.IPackageMoveObserver, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r9, $r18, $r19, $r21;
        android.content.pm.IPackageMoveObserver r2;
        int i0, i4, $i5, $i6, $i7, $i11;
        android.os.UserHandle r3, $r10;
        byte b1, b2, b3;
        java.util.HashMap r4, $r13;
        java.lang.Throwable r5, $r27;
        android.content.pm.PackageParser$Package r6;
        android.os.Message r7;
        com.android.server.pm.PackageManagerService$InstallArgs r8;
        android.content.Context $r11;
        java.lang.Object $r12;
        boolean $z0, $z1, $z2, $z4;
        android.content.pm.ApplicationInfo $r14, $r16, $r17, $r20, $r22, $r24;
        com.android.server.pm.PackageManagerService$PackageHandler $r15, $r26;
        com.android.server.pm.PackageManagerService$MoveParams $r23, $r25;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageMoveObserver;

        i0 := @parameter2: int;

        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r11.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MOVE_PACKAGE", null);

        $r10 = new android.os.UserHandle;

        $i5 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke $r10.<android.os.UserHandle: void <init>(int)>($i5);

        r3 = $r10;

        b1 = 1;

        b2 = 0;

        b3 = 0;

        r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r4;

     label01:
        $r13 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (android.content.pm.PackageParser$Package) $r12;

     label02:
        if r6 != null goto label07;

        b1 = -2;

     label03:
        if b1 == 1 goto label28;

     label04:
        $r25 = new com.android.server.pm.PackageManagerService$MoveParams;

        specialinvoke $r25.<com.android.server.pm.PackageManagerService$MoveParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,android.content.pm.IPackageMoveObserver,int,java.lang.String,java.lang.String,int,android.os.UserHandle)>(r0, null, r2, 0, r1, null, -1, r3);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void processPendingMove(com.android.server.pm.PackageManagerService$MoveParams,int)>($r25, b1);

     label05:
        exitmonitor r4;

     label06:
        return;

     label07:
        $r14 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        if $r14 == null goto label09;

        $z4 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isSystemApp(android.content.pm.PackageParser$Package)>(r6);

        if $z4 == 0 goto label09;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot move system application");

     label08:
        b1 = -3;

        b2 = 0;

        b3 = 0;

        goto label03;

     label09:
        $z0 = r6.<android.content.pm.PackageParser$Package: boolean mOperationPending>;

        if $z0 == 0 goto label11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Attempt to move package which has pending operations");

     label10:
        b1 = -7;

        b2 = 0;

        b3 = 0;

        goto label03;

     label11:
        $i7 = i0 & 2;

        if $i7 == 0 goto label20;

        $i11 = i0 & 1;

        if $i11 == 0 goto label20;

     label12:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Ambigous flags specified for move location.");

     label13:
        b1 = -5;

     label14:
        if b1 != 1 goto label03;

     label15:
        r6.<android.content.pm.PackageParser$Package: boolean mOperationPending> = 1;

     label16:
        goto label03;

     label17:
        $r27 := @caughtexception;

        r5 = $r27;

     label18:
        exitmonitor r4;

     label19:
        throw r5;

     label20:
        $i6 = i0 & 2;

        if $i6 == 0 goto label30;

        b3 = 8;

     label21:
        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isExternal(android.content.pm.PackageParser$Package)>(r6);

        if $z2 == 0 goto label31;

     label22:
        b2 = 8;

     label23:
        if b3 != b2 goto label26;

     label24:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "No move required. Trying to move to same location");

     label25:
        b1 = -5;

        goto label14;

     label26:
        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean isForwardLocked(android.content.pm.PackageParser$Package)>(r6);

        if $z1 == 0 goto label14;

     label27:
        b2 = b2 | 1;

        b3 = b3 | 1;

        goto label14;

     label28:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r7 = virtualinvoke $r15.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(5);

        $r17 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = $r17.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r16 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r18 = $r16.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r20 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r21 = $r20.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        r8 = specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs createInstallArgs(int,java.lang.String,java.lang.String,java.lang.String)>(b2, $r19, $r18, $r21);

        $r24 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        r9 = $r24.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r22 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        i4 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        $r23 = new com.android.server.pm.PackageManagerService$MoveParams;

        specialinvoke $r23.<com.android.server.pm.PackageManagerService$MoveParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,android.content.pm.IPackageMoveObserver,int,java.lang.String,java.lang.String,int,android.os.UserHandle)>(r0, r8, r2, b3, r1, r9, i4, r3);

        r7.<android.os.Message: java.lang.Object obj> = $r23;

        $r26 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r26.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r7);

     label29:
        goto label05;

     label30:
        b3 = 16;

        goto label21;

     label31:
        b2 = 16;

        goto label23;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.lang.Throwable from label24 to label25 with label17;
        catch java.lang.Throwable from label26 to label27 with label17;
        catch java.lang.Throwable from label28 to label29 with label17;
    }

    public android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageCleanItem r1, r5;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r8;
        java.util.ArrayList r4;
        boolean $z0;
        com.android.server.pm.Settings $r6;
        int $i0;
        java.lang.Object $r7;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageCleanItem;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isExternalMediaAvailable()>();

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return null;

     label03:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r4 = $r6.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

     label04:
        if r1 == null goto label06;

     label05:
        virtualinvoke r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label06:
        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label11;

        $r7 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r5 = (android.content.pm.PackageCleanItem) $r7;

        exitmonitor r2;

     label07:
        return r5;

     label08:
        $r8 := @caughtexception;

        r3 = $r8;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        exitmonitor r2;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        $z2 = r3 instanceof java.lang.IllegalArgumentException;

        if $z2 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Package Manager Crash", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void performBootDexOpt()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, r7, $r16, $r19;
        java.util.HashSet r3;
        int i0, $i2;
        java.util.Iterator r4;
        android.content.pm.PackageParser$Package r5;
        java.lang.Object r6, $r12;
        android.app.IActivityManager r9;
        android.content.res.Resources r10;
        java.lang.Object[] r11;
        boolean $z0, $z1, $z2;
        android.content.Context $r13;
        java.lang.Integer $r14, $r15;
        java.lang.String $r17;
        android.os.RemoteException $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label01:
        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt>;

        r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDeferredDexOpt> = null;

        exitmonitor r1;

     label02:
        if r3 == null goto label15;

        i0 = 0;

        r4 = virtualinvoke r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.PackageParser$Package) $r12;

        $z1 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>();

        if $z1 != 0 goto label05;

        i0 = i0 + 1;

     label04:
        r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r13 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        r10 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        r11 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r11[0] = $r14;

        $i2 = virtualinvoke r3.<java.util.HashSet: int size()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r11[1] = $r15;

        $r17 = virtualinvoke r10.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040402, r11);

        interfaceinvoke r9.<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>($r17, 1);

     label05:
        r6 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r6;

     label06:
        $z2 = r5.<android.content.pm.PackageParser$Package: boolean mDidDexOpt>;

        if $z2 != 0 goto label07;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,boolean,boolean,boolean)>(r5, 0, 0, 1);

     label07:
        exitmonitor r6;

     label08:
        goto label03;

     label09:
        $r16 := @caughtexception;

        r7 = $r16;

     label10:
        exitmonitor r6;

     label11:
        throw r7;

     label12:
        $r19 := @caughtexception;

        r2 = $r19;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        return;

     label16:
        $r18 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch android.os.RemoteException from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean performDexOpt(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        java.util.HashMap r2, $r7;
        java.lang.Throwable r3, r6, $r9, $r10;
        android.content.pm.PackageParser$Package r4;
        java.lang.Object r5, $r8;
        int i0;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.pm.PackageManagerService: void enforceSystemOrRoot(java.lang.String)>("Only the system can request dexopt be performed");

        $z1 = r0.<com.android.server.pm.PackageManagerService: boolean mNoDexOpt>;

        if $z1 != 0 goto label01;

        return 0;

     label01:
        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Package) $r8;

     label03:
        if r4 == null goto label05;

     label04:
        $z2 = r4.<android.content.pm.PackageParser$Package: boolean mDidDexOpt>;

        if $z2 == 0 goto label10;

     label05:
        exitmonitor r2;

     label06:
        return 0;

     label07:
        $r10 := @caughtexception;

        r3 = $r10;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        exitmonitor r2;

     label11:
        r5 = r0.<com.android.server.pm.PackageManagerService: java.lang.Object mInstallLock>;

        entermonitor r5;

     label12:
        i0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int performDexOptLI(android.content.pm.PackageParser$Package,boolean,boolean,boolean)>(r4, 0, 0, 1);

     label13:
        z0 = 0;

        if i0 != 1 goto label14;

        z0 = 1;

     label14:
        exitmonitor r5;

     label15:
        return z0;

     label16:
        $r9 := @caughtexception;

        r6 = $r9;

     label17:
        exitmonitor r5;

     label18:
        throw r6;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public java.util.List queryContentProviders(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16, $r23, $r29;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.util.HashMap r2, $r10, $r19;
        java.lang.Throwable r3, $r32, $r33;
        java.util.Iterator r4;
        java.util.ArrayList r5, r8, $r27;
        android.content.pm.PackageParser$Provider r6;
        com.android.server.pm.PackageSetting r7;
        android.content.pm.ProviderInfo r9, $r20, $r22, $r25, $r28, $r31;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver $r11;
        java.util.Collection $r12;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.util.Comparator $r13;
        com.android.server.pm.Settings $r14, $r21;
        java.lang.Object $r15, $r18;
        android.content.pm.PackageParser$Package $r17;
        android.content.pm.PackageUserState $r24;
        android.content.pm.ApplicationInfo $r26, $r30;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        $r10 = staticinvoke <com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.HashMap access$1600(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>($r11);

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        if r1 == null goto label18;

     label03:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

     label04:
        i3 = i2;

     label05:
        r5 = null;

     label06:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.PackageParser$Provider) $r15;

        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r14.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r17 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r16 = $r17.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r18 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r7 = (com.android.server.pm.PackageSetting) $r18;

     label07:
        if r7 == null goto label28;

     label08:
        $r22 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r23 = $r22.<android.content.pm.ProviderInfo: java.lang.String authority>;

        if $r23 == null goto label28;

     label09:
        if r1 == null goto label11;

     label10:
        $r28 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r29 = $r28.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $z4 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label28;

        $r31 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r30 = $r31.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r30.<android.content.pm.ApplicationInfo: int uid>;

        $z5 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i7, i0);

        if $z5 == 0 goto label28;

     label11:
        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r20 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = virtualinvoke $r21.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r20, i1, i3);

        if $z1 == 0 goto label28;

        $z2 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z2 == 0 goto label12;

        $r25 = r6.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r26 = $r25.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r26.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = 1 & $i5;

        if $i6 == 0 goto label28;

     label12:
        if r5 != null goto label27;

     label13:
        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>(int)>(3);

        r8 = $r27;

     label14:
        $r24 = virtualinvoke r7.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i3);

        r9 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r6, i1, $r24, i3);

     label15:
        if r9 == null goto label29;

     label16:
        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label17:
        goto label29;

     label18:
        i4 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label19:
        i3 = i4;

        goto label05;

     label20:
        exitmonitor r2;

     label21:
        if r5 == null goto label22;

        $r13 = <com.android.server.pm.PackageManagerService: java.util.Comparator mProviderInitOrderSorter>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r13);

     label22:
        return r5;

     label23:
        $r33 := @caughtexception;

        r3 = $r33;

     label24:
        exitmonitor r2;

     label25:
        throw r3;

     label26:
        $r32 := @caughtexception;

        r3 = $r32;

        goto label24;

     label27:
        r8 = r5;

        goto label14;

     label28:
        r8 = r5;

     label29:
        r5 = r8;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label11 to label12 with label26;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public java.util.List queryInstrumentation(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r13;
        int i0;
        java.util.ArrayList r2, $r8;
        java.util.HashMap r3, $r9;
        java.lang.Throwable r4, $r14;
        java.util.Iterator r5;
        android.content.pm.PackageParser$Instrumentation r6;
        android.content.pm.InstrumentationInfo r7, $r12;
        java.util.Collection $r10;
        boolean $z0, $z2;
        java.lang.Object $r11;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r9 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mInstrumentation>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.PackageParser$Instrumentation) $r11;

     label03:
        if r1 == null goto label05;

     label04:
        $r12 = r6.<android.content.pm.PackageParser$Instrumentation: android.content.pm.InstrumentationInfo info>;

        $r13 = $r12.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label02;

     label05:
        r7 = staticinvoke <android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>(r6, i0);

     label06:
        if r7 == null goto label02;

     label07:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label08:
        goto label02;

     label09:
        $r14 := @caughtexception;

        r4 = $r14;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        exitmonitor r3;

     label13:
        return r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public java.util.List queryIntentActivities(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r22;
        java.lang.String r2, r9;
        int i0, i1, $i2;
        android.content.ComponentName r3;
        java.util.List r4, r10, r13;
        android.content.pm.ActivityInfo r5;
        android.content.pm.ResolveInfo r6, $r23;
        java.util.HashMap r7, $r17;
        java.lang.Throwable r8, $r24;
        android.content.pm.PackageParser$Package r11;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver r12, $r20;
        java.util.ArrayList r14, r16, $r18, $r21;
        com.android.server.pm.UserManagerService $r15;
        boolean $z0;
        java.lang.Object $r19;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r15 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r15.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label02;

        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        return r4;

     label02:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "query intent activities");

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label03;

        $r22 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r22 == null goto label03;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label03:
        if r3 == null goto label04;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r21;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label01;

        $r23 = new android.content.pm.ResolveInfo;

        specialinvoke $r23.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r23;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        return r4;

     label04:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label05:
        r9 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

     label06:
        if r9 != null goto label12;

     label07:
        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        r10 = virtualinvoke $r20.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r7;

     label08:
        return r10;

     label09:
        $r24 := @caughtexception;

        r8 = $r24;

     label10:
        exitmonitor r7;

     label11:
        throw r8;

     label12:
        $r17 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r19 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r11 = (android.content.pm.PackageParser$Package) $r19;

     label13:
        if r11 == null goto label16;

     label14:
        r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        r14 = r11.<android.content.pm.PackageParser$Package: java.util.ArrayList activities>;

        r13 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, r14, i1);

        exitmonitor r7;

     label15:
        return r13;

     label16:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r16 = $r18;

        exitmonitor r7;

     label17:
        return r16;

        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
    }

    public java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], java.lang.String[], android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1, r16, $r48;
        android.content.Intent[] r2;
        java.lang.String[] r3;
        android.content.Intent r4, r14;
        java.lang.String r5, r6, r10, r13, r18, $r23, $r26, $r27, $r31, $r45, $r46, $r50, $r52, $r53, $r54;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.util.List r7;
        android.content.pm.ActivityInfo r8, r15, $r41, $r44;
        android.content.pm.ResolveInfo r9, r12, r17, r19, $r22, $r24, $r39, $r49;
        java.util.Iterator r11;
        com.android.server.pm.UserManagerService $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object $r21, $r25, $r29, $r36, $r37, $r40;
        android.content.pm.ApplicationInfo $r28, $r43, $r51;
        android.content.IntentFilter $r32, $r33, $r34, $r38, $r47;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.Intent[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        $r20 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r20.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label02;

        r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        return r7;

     label02:
        $i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i13, i1, 0, "query intent activity options");

        r6 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        $i15 = i0 | 64;

        r7 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r4, r5, $i15, i1);

        i2 = 0;

        if r2 == null goto label19;

        i10 = 0;

     label03:
        $i18 = lengthof r2;

        if i10 >= $i18 goto label19;

        r14 = r2[i10];

        if r14 != null goto label05;

     label04:
        i10 = i10 + 1;

        goto label03;

     label05:
        r13 = virtualinvoke r14.<android.content.Intent: java.lang.String getAction()>();

        if r6 == null goto label06;

        $z9 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z9 == 0 goto label06;

        r13 = null;

     label06:
        r16 = virtualinvoke r14.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r16 != null goto label16;

        if r3 == null goto label15;

        r18 = r3[i10];

     label07:
        r17 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r14, r18, i0, i1);

        if r17 == null goto label04;

        $r49 = r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo mResolveInfo>;

        if r17 != $r49 goto label08;

     label08:
        r15 = r17.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r48 = new android.content.ComponentName;

        $r51 = r15.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r54 = $r51.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r50 = r15.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r48.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r54, $r50);

        r16 = $r48;

     label09:
        i11 = interfaceinvoke r7.<java.util.List: int size()>();

        i12 = i2;

     label10:
        if i12 >= i11 goto label17;

        $r40 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i12);

        r19 = (android.content.pm.ResolveInfo) $r40;

        $r41 = r19.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r46 = $r41.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r45 = virtualinvoke r16.<android.content.ComponentName: java.lang.String getClassName()>();

        $z7 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z7 == 0 goto label11;

        $r44 = r19.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r43 = $r44.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r53 = $r43.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r52 = virtualinvoke r16.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z8 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z8 != 0 goto label12;

     label11:
        if r13 == null goto label14;

        $r47 = r19.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $z6 = virtualinvoke $r47.<android.content.IntentFilter: boolean matchAction(java.lang.String)>(r13);

        if $z6 == 0 goto label14;

     label12:
        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i12);

        if r17 != null goto label13;

        r17 = r19;

     label13:
        i12 = i12 + -1;

        i11 = i11 + -1;

     label14:
        i12 = i12 + 1;

        goto label10;

     label15:
        r18 = null;

        goto label07;

     label16:
        r15 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r16, i0, i1);

        r17 = null;

        if r15 != null goto label09;

        goto label04;

     label17:
        if r17 != null goto label18;

        $r39 = new android.content.pm.ResolveInfo;

        specialinvoke $r39.<android.content.pm.ResolveInfo: void <init>()>();

        r17 = $r39;

        r17.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r15;

     label18:
        interfaceinvoke r7.<java.util.List: void add(int,java.lang.Object)>(i2, r17);

        r17.<android.content.pm.ResolveInfo: int specificIndex> = i10;

        i2 = i2 + 1;

        goto label04;

     label19:
        i3 = interfaceinvoke r7.<java.util.List: int size()>();

        i4 = i2;

     label20:
        $i14 = i3 - 1;

        if i4 >= $i14 goto label28;

        $r29 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i4);

        r9 = (android.content.pm.ResolveInfo) $r29;

        $r33 = r9.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        if $r33 != null goto label22;

     label21:
        i4 = i4 + 1;

        goto label20;

     label22:
        $r32 = r9.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        r11 = virtualinvoke $r32.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

        if r11 == null goto label21;

     label23:
        $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label27;

        $r36 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r36;

        if r6 == null goto label24;

        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z5 != 0 goto label23;

     label24:
        i9 = i4 + 1;

     label25:
        if i9 >= i3 goto label23;

        $r37 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i9);

        r12 = (android.content.pm.ResolveInfo) $r37;

        $r38 = r12.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        if $r38 == null goto label26;

        $r34 = r12.<android.content.pm.ResolveInfo: android.content.IntentFilter filter>;

        $z4 = virtualinvoke $r34.<android.content.IntentFilter: boolean hasAction(java.lang.String)>(r10);

        if $z4 == 0 goto label26;

        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i9);

        i9 = i9 + -1;

        i3 = i3 + -1;

     label26:
        i9 = i9 + 1;

        goto label25;

     label27:
        $i17 = i0 & 64;

        if $i17 != 0 goto label21;

        r9.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = null;

        goto label21;

     label28:
        if r1 == null goto label30;

        i7 = interfaceinvoke r7.<java.util.List: int size()>();

        i8 = 0;

     label29:
        if i8 >= i7 goto label30;

        $r25 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i8);

        $r24 = (android.content.pm.ResolveInfo) $r25;

        r8 = $r24.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r23 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r28 = r8.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r27 = $r28.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z1 == 0 goto label32;

        $r26 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $r31 = r8.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z2 == 0 goto label32;

        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i8);

     label30:
        $i16 = i0 & 64;

        if $i16 != 0 goto label01;

        i5 = interfaceinvoke r7.<java.util.List: int size()>();

        i6 = 0;

     label31:
        if i6 >= i5 goto label01;

        $r21 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i6);

        $r22 = (android.content.pm.ResolveInfo) $r21;

        $r22.<android.content.pm.ResolveInfo: android.content.IntentFilter filter> = null;

        i6 = i6 + 1;

        goto label31;

     label32:
        i8 = i8 + 1;

        goto label29;
    }

    public java.util.List queryIntentContentProviders(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r20;
        java.lang.String r2, r9;
        int i0, i1;
        android.content.ComponentName r3;
        java.util.List r4, r10, r13;
        android.content.pm.ProviderInfo r5;
        android.content.pm.ResolveInfo r6, $r21;
        java.util.HashMap r7, $r16;
        java.lang.Throwable r8, $r22;
        android.content.pm.PackageParser$Package r11;
        com.android.server.pm.PackageManagerService$ProviderIntentResolver r12, $r18;
        java.util.ArrayList r14, $r19;
        boolean $z0;
        com.android.server.pm.UserManagerService $r15;
        java.lang.Object $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r15 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r15.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label02;

        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        return r4;

     label02:
        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label03;

        $r20 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r20 == null goto label03;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label03:
        if r3 == null goto label04;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r19;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label01;

        $r21 = new android.content.pm.ResolveInfo;

        specialinvoke $r21.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r21;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        return r4;

     label04:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label05:
        r9 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

     label06:
        if r9 != null goto label12;

     label07:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        r10 = virtualinvoke $r18.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r7;

     label08:
        return r10;

     label09:
        $r22 := @caughtexception;

        r8 = $r22;

     label10:
        exitmonitor r7;

     label11:
        throw r8;

     label12:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r11 = (android.content.pm.PackageParser$Package) $r17;

     label13:
        if r11 == null goto label16;

     label14:
        r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ProviderIntentResolver mProviders>;

        r14 = r11.<android.content.pm.PackageParser$Package: java.util.ArrayList providers>;

        r13 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, r14, i1);

        exitmonitor r7;

     label15:
        return r13;

     label16:
        exitmonitor r7;

     label17:
        return null;

        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
    }

    public java.util.List queryIntentReceivers(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r20;
        java.lang.String r2, r9;
        int i0, i1;
        android.content.ComponentName r3;
        java.util.List r4, r10, r13;
        android.content.pm.ActivityInfo r5;
        android.content.pm.ResolveInfo r6, $r21;
        java.util.HashMap r7, $r16;
        java.lang.Throwable r8, $r22;
        android.content.pm.PackageParser$Package r11;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver r12, $r18;
        java.util.ArrayList r14, $r19;
        boolean $z0;
        com.android.server.pm.UserManagerService $r15;
        java.lang.Object $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r15 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r15.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label02;

        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        return r4;

     label02:
        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label03;

        $r20 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r20 == null goto label03;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label03:
        if r3 == null goto label04;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r19;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label01;

        $r21 = new android.content.pm.ResolveInfo;

        specialinvoke $r21.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r21;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        return r4;

     label04:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label05:
        r9 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

     label06:
        if r9 != null goto label12;

     label07:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        r10 = virtualinvoke $r18.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r7;

     label08:
        return r10;

     label09:
        $r22 := @caughtexception;

        r8 = $r22;

     label10:
        exitmonitor r7;

     label11:
        throw r8;

     label12:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r11 = (android.content.pm.PackageParser$Package) $r17;

     label13:
        if r11 == null goto label16;

     label14:
        r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mReceivers>;

        r14 = r11.<android.content.pm.PackageParser$Package: java.util.ArrayList receivers>;

        r13 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, r14, i1);

        exitmonitor r7;

     label15:
        return r13;

     label16:
        exitmonitor r7;

     label17:
        return null;

        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
    }

    public java.util.List queryIntentServices(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1, $r20;
        java.lang.String r2, r9;
        int i0, i1;
        android.content.ComponentName r3;
        java.util.List r4, r10, r13;
        android.content.pm.ServiceInfo r5;
        android.content.pm.ResolveInfo r6, $r21;
        java.util.HashMap r7, $r16;
        java.lang.Throwable r8, $r22;
        android.content.pm.PackageParser$Package r11;
        com.android.server.pm.PackageManagerService$ServiceIntentResolver r12, $r18;
        java.util.ArrayList r14, $r19;
        boolean $z0;
        com.android.server.pm.UserManagerService $r15;
        java.lang.Object $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r15 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r15.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label02;

        r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label01:
        return r4;

     label02:
        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r3 != null goto label03;

        $r20 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        if $r20 == null goto label03;

        r1 = virtualinvoke r1.<android.content.Intent: android.content.Intent getSelector()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label03:
        if r3 == null goto label04;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r19;

        r5 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r3, i0, i1);

        if r5 == null goto label01;

        $r21 = new android.content.pm.ResolveInfo;

        specialinvoke $r21.<android.content.pm.ResolveInfo: void <init>()>();

        r6 = $r21;

        r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo> = r5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

        return r4;

     label04:
        r7 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r7;

     label05:
        r9 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

     label06:
        if r9 != null goto label12;

     label07:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        r10 = virtualinvoke $r18.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        exitmonitor r7;

     label08:
        return r10;

     label09:
        $r22 := @caughtexception;

        r8 = $r22;

     label10:
        exitmonitor r7;

     label11:
        throw r8;

     label12:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r11 = (android.content.pm.PackageParser$Package) $r17;

     label13:
        if r11 == null goto label16;

     label14:
        r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ServiceIntentResolver mServices>;

        r14 = r11.<android.content.pm.PackageParser$Package: java.util.ArrayList services>;

        r13 = virtualinvoke r12.<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>(r1, r2, i0, r14, i1);

        exitmonitor r7;

     label15:
        return r13;

     label16:
        exitmonitor r7;

     label17:
        return null;

        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
    }

    public java.util.List queryPermissionsByGroup(java.lang.String, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16, $r21;
        int i0, $i1;
        java.util.HashMap r2, $r9, $r11;
        java.util.ArrayList r3, $r7;
        java.lang.Throwable r4, $r22;
        java.util.Iterator r5;
        com.android.server.pm.BasePermission r6;
        com.android.server.pm.Settings $r8;
        java.util.Collection $r10;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageParser$Permission $r12, $r15, $r18, $r19, $r23;
        java.lang.Object $r13;
        android.content.pm.PermissionInfo $r14, $r17, $r20, $r24;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(10);

        r3 = $r7;

        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r9 = $r8.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.pm.BasePermission) $r13;

     label03:
        if r1 != null goto label10;

     label04:
        $r19 = r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r19 == null goto label05;

        $r23 = r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r24 = $r23.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r21 = $r24.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r21 != null goto label02;

     label05:
        $r20 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission,int)>(r6, i0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label06:
        goto label02;

     label07:
        $r22 := @caughtexception;

        r4 = $r22;

     label08:
        exitmonitor r2;

     label09:
        throw r4;

     label10:
        $r12 = r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        if $r12 == null goto label02;

        $r15 = r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r14 = $r15.<android.content.pm.PackageParser$Permission: android.content.pm.PermissionInfo info>;

        $r16 = $r14.<android.content.pm.PermissionInfo: java.lang.String group>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 == 0 goto label02;

        $r18 = r6.<com.android.server.pm.BasePermission: android.content.pm.PackageParser$Permission perm>;

        $r17 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>($r18, i0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label11:
        goto label02;

     label12:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label14;

        exitmonitor r2;

     label13:
        return r3;

     label14:
        $r11 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPermissionGroups>;

        $z1 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label17;

     label15:
        exitmonitor r2;

     label16:
        return r3;

     label17:
        r3 = null;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
    }

    public void querySyncProviders(java.util.List, java.util.List)
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.List r1, r2;
        java.util.HashMap r3, $r10, $r16;
        java.lang.Throwable r4, $r23;
        java.util.Iterator r5;
        int i0, $i1, $i2;
        java.util.Map$Entry r6;
        android.content.pm.PackageParser$Provider r7;
        com.android.server.pm.PackageSetting r8;
        android.content.pm.ProviderInfo r9, $r22;
        java.util.Set $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12, $r13, $r18, $r20;
        android.content.pm.PackageParser$Package $r14;
        com.android.server.pm.Settings $r15;
        java.lang.String $r17;
        android.content.pm.PackageUserState $r19;
        android.content.pm.ApplicationInfo $r21;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label02:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r13;

        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (android.content.pm.PackageParser$Provider) $r12;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r14 = r7.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r17 = $r14.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r18 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17);

        r8 = (com.android.server.pm.PackageSetting) $r18;

     label03:
        if r8 == null goto label02;

     label04:
        $z1 = r7.<android.content.pm.PackageParser$Provider: boolean syncable>;

        if $z1 == 0 goto label02;

        $z2 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z2 == 0 goto label05;

        $r22 = r7.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r21 = $r22.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r21.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = 1 & $i1;

        if $i2 == 0 goto label02;

     label05:
        $r19 = virtualinvoke r8.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i0);

        r9 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r7, 0, $r19, i0);

     label06:
        if r9 == null goto label02;

     label07:
        $r20 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

     label08:
        goto label02;

     label09:
        $r23 := @caughtexception;

        r4 = $r23;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        exitmonitor r3;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    void readPermission(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.pm.PackageManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r5, $r9, $r10, $r14, $r15;
        com.android.server.pm.BasePermission r4, $r20;
        int i0, i1, i2, $i4;
        com.android.server.pm.Settings $r6, $r21;
        java.util.HashMap $r7, $r18;
        java.lang.Object $r8;
        boolean $z0;
        java.lang.StringBuilder $r11, $r12, $r13;
        int[] $r16, $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.pm.BasePermission) $r8;

        if r4 != null goto label1;

        $r20 = new com.android.server.pm.BasePermission;

        specialinvoke $r20.<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>(r3, null, 1);

        r4 = $r20;

        $r21 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = $r21.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label1:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label2:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label3;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label3:
        if i1 == 3 goto label2;

        if i1 == 4 goto label2;

        $r9 = "group";

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label4;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gid");

        if r5 == null goto label5;

        i2 = staticinvoke <android.os.Process: int getGidForName(java.lang.String)>(r5);

        $r16 = r4.<com.android.server.pm.BasePermission: int[] gids>;

        $r17 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>($r16, i2);

        r4.<com.android.server.pm.BasePermission: int[] gids> = $r17;

     label4:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label2;

     label5:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group> without gid at ");

        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r15);

        goto label4;

     label6:
        return;
    }

    void readPermissions()
    {
        com.android.server.pm.PackageManagerService r0;
        java.io.File r1, r3, $r4, $r5, $r11, $r12;
        java.io.File[] r2;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30;
        java.lang.String $r10, $r13, $r14, $r20, $r27, $r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r4 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "etc/permissions");

        r1 = $r4;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No directory ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r10);

        return;

     label2:
        $z2 = virtualinvoke r1.<java.io.File: boolean canRead()>();

        if $z2 != 0 goto label3;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r31);

        return;

     label3:
        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r2;

        i1 = 0;

     label4:
        if i1 >= i0 goto label9;

        r3 = r2[i1];

        $r13 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean endsWith(java.lang.String)>("etc/permissions/platform.xml");

        if $z3 == 0 goto label6;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r14 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z4 != 0 goto label7;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", $r27);

        goto label5;

     label7:
        $z5 = virtualinvoke r3.<java.io.File: boolean canRead()>();

        if $z5 != 0 goto label8;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permissions library file ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r20);

        goto label5;

     label8:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void readPermissionsFromXml(java.io.File)>(r3);

        goto label5;

     label9:
        $r12 = new java.io.File;

        $r11 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "etc/permissions/platform.xml");

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void readPermissionsFromXml(java.io.File)>($r12);

        return;
    }

    void removeInstalledPackageLI(android.content.pm.PackageParser$Package, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.pm.PackageParser$Package r1;
        boolean z0;
        java.util.HashMap r2, $r6, $r10;
        java.lang.Throwable r3, $r12;
        android.content.pm.ApplicationInfo $r4;
        java.lang.String $r5, $r8, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.pm.PackageParser$Package;

        z0 := @parameter1: boolean;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r4 = r1.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        $r8 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        if $r8 == null goto label2;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAppDirs>;

        $r9 = r1.<android.content.pm.PackageParser$Package: java.lang.String mPath>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r9);

     label2:
        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package,boolean)>(r1, z0);

        exitmonitor r2;

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void removePackageFromPreferred(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "removePackageFromPreferred: this is now a no-op");

        return;
    }

    void removePackageLI(com.android.server.pm.PackageSetting, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageSetting r1;
        boolean z0;
        java.util.HashMap r2, $r6, $r10;
        java.lang.Throwable r3, $r12;
        android.content.pm.PackageParser$Package r4;
        java.lang.String $r5, $r8, $r9;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: com.android.server.pm.PackageSetting;

        z0 := @parameter1: boolean;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r5 = r1.<com.android.server.pm.PackageSetting: java.lang.String name>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        $r8 = r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        if $r8 == null goto label2;

        $r10 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mAppDirs>;

        $r9 = r1.<com.android.server.pm.PackageSetting: java.lang.String codePathString>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r9);

     label2:
        r4 = r1.<com.android.server.pm.PackageSetting: android.content.pm.PackageParser$Package pkg>;

     label3:
        if r4 == null goto label5;

     label4:
        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package,boolean)>(r4, z0);

     label5:
        exitmonitor r2;

     label6:
        return;

     label7:
        $r12 := @caughtexception;

        r3 = $r12;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void removePermission(java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16;
        java.util.HashMap r2, $r7, $r10;
        java.lang.Throwable r3, $r18;
        com.android.server.pm.BasePermission r4;
        com.android.server.pm.Settings $r6, $r9, $r13;
        java.lang.Object $r8;
        int $i0;
        java.lang.SecurityException $r12;
        java.lang.StringBuilder $r14, $r15, $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.BasePermission checkPermissionTreeLP(java.lang.String)>(r1);

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.pm.BasePermission) $r8;

     label2:
        if r4 == null goto label8;

     label3:
        $i0 = r4.<com.android.server.pm.BasePermission: int type>;

        if $i0 == 2 goto label7;

        $r12 = new java.lang.SecurityException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to modify non-dynamic permission ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label4:
        $r18 := @caughtexception;

        r3 = $r18;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r9 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = $r9.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r13.<com.android.server.pm.Settings: void writeLPr()>();

     label8:
        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.IntentFilter r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        java.util.HashMap r4;
        java.lang.Throwable r5, $r30;
        com.android.server.pm.PreferredIntentResolver r6;
        android.content.Intent r7, $r15;
        android.net.Uri$Builder r8, $r18;
        java.util.List r9;
        java.lang.IllegalArgumentException $r10, $r31;
        android.content.Context $r11, $r26;
        com.android.server.pm.Settings $r12;
        java.lang.Object $r13, $r20;
        android.util.SparseArray $r14;
        java.lang.String $r16, $r17, $r19, $r27;
        com.android.server.pm.PreferredActivity $r21;
        android.net.Uri $r24;
        java.lang.StringBuilder $r25, $r28, $r29;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        $i3 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i3 == 1 goto label01;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("replacePreferredActivity expects filter to have only 1 action.");

        throw $r31;

     label01:
        $i4 = virtualinvoke r1.<android.content.IntentFilter: int countDataAuthorities()>();

        if $i4 != 0 goto label02;

        $i6 = virtualinvoke r1.<android.content.IntentFilter: int countDataPaths()>();

        if $i6 != 0 goto label02;

        $i5 = virtualinvoke r1.<android.content.IntentFilter: int countDataSchemes()>();

        if $i5 > 1 goto label02;

        $i7 = virtualinvoke r1.<android.content.IntentFilter: int countDataTypes()>();

        if $i7 == 0 goto label03;

     label02:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("replacePreferredActivity expects filter to have no data authorities, paths, or types; and at most one scheme.");

        throw $r10;

     label03:
        r4 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r4;

     label04:
        $r11 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i8 = virtualinvoke $r11.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS");

        if $i8 == 0 goto label07;

        $i11 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i12 = specialinvoke r0.<com.android.server.pm.PackageManagerService: int getUidTargetSdkVersionLockedLPr(int)>($i11);

        if $i12 >= 8 goto label06;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring replacePreferredActivity() from uid ");

        $i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r27);

        exitmonitor r4;

     label05:
        return;

     label06:
        $r26 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r26.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

     label07:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r12 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r12.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r13 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.pm.PreferredIntentResolver) $r13;

     label08:
        if r6 == null goto label14;

     label09:
        $r15 = new android.content.Intent;

        $r17 = virtualinvoke r1.<android.content.IntentFilter: java.lang.String getAction(int)>(0);

        specialinvoke $r15.<android.content.Intent: void <init>(java.lang.String)>($r17);

        $r16 = virtualinvoke r1.<android.content.IntentFilter: java.lang.String getCategory(int)>(0);

        r7 = virtualinvoke $r15.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>($r16);

        $i10 = virtualinvoke r1.<android.content.IntentFilter: int countDataSchemes()>();

        if $i10 != 1 goto label10;

        $r18 = new android.net.Uri$Builder;

        specialinvoke $r18.<android.net.Uri$Builder: void <init>()>();

        r8 = $r18;

        $r19 = virtualinvoke r1.<android.content.IntentFilter: java.lang.String getDataScheme(int)>(0);

        virtualinvoke r8.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>($r19);

        $r24 = virtualinvoke r8.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r7.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r24);

     label10:
        r9 = virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r7, null, 1, i1);

     label11:
        i2 = 0;

     label12:
        $i9 = interfaceinvoke r9.<java.util.List: int size()>();

        if i2 >= $i9 goto label14;

        $r20 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i2);

        $r21 = (com.android.server.pm.PreferredActivity) $r20;

        virtualinvoke r6.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>($r21);

     label13:
        i2 = i2 + 1;

        goto label12;

     label14:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPreferredActivityInternal(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean,int)>(r1, i0, r2, r3, 1, i1);

        exitmonitor r4;

     label15:
        return;

     label16:
        $r30 := @caughtexception;

        r5 = $r30;

     label17:
        exitmonitor r4;

     label18:
        throw r5;

        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void resetPreferredActivities(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r6;
        android.content.Context $r3;
        com.android.server.pm.Settings $r4, $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.SET_PREFERRED_APPLICATIONS", null);

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label1:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>(null, i1);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r4.<com.android.server.pm.Settings: void readDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>(r0, i1);

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r5.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i1);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16;
        int i0, i1, $i2, $i3;
        java.util.HashMap r2, $r8, $r19;
        java.lang.Throwable r3, $r20;
        android.content.pm.PackageParser$Provider r4;
        com.android.server.pm.PackageSetting r5;
        android.content.pm.ProviderInfo r6, $r10, $r13;
        com.android.server.pm.UserManagerService $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r18;
        com.android.server.pm.Settings $r11, $r15;
        android.content.pm.PackageUserState $r12;
        android.content.pm.ApplicationInfo $r14;
        android.content.pm.PackageParser$Package $r17;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r7.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label02:
        $r8 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mProvidersByAuthority>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.content.pm.PackageParser$Provider) $r9;

     label03:
        if r4 == null goto label13;

     label04:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r15.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r17 = r4.<android.content.pm.PackageParser$Provider: android.content.pm.PackageParser$Package owner>;

        $r16 = $r17.<android.content.pm.PackageParser$Package: java.lang.String packageName>;

        $r18 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r5 = (com.android.server.pm.PackageSetting) $r18;

     label05:
        if r5 == null goto label14;

     label06:
        $r11 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r10 = r4.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $z1 = virtualinvoke $r11.<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>($r10, i0, i1);

        if $z1 == 0 goto label14;

        $z2 = r0.<com.android.server.pm.PackageManagerService: boolean mSafeMode>;

        if $z2 == 0 goto label07;

        $r13 = r4.<android.content.pm.PackageParser$Provider: android.content.pm.ProviderInfo info>;

        $r14 = $r13.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r14.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 1 & $i2;

        if $i3 == 0 goto label14;

     label07:
        $r12 = virtualinvoke r5.<com.android.server.pm.PackageSetting: android.content.pm.PackageUserState readUserState(int)>(i1);

        r6 = staticinvoke <android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,android.content.pm.PackageUserState,int)>(r4, i0, $r12, i1);

     label08:
        exitmonitor r2;

     label09:
        return r6;

     label10:
        $r20 := @caughtexception;

        r3 = $r20;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        r5 = null;

        goto label05;

     label14:
        r6 = null;

        goto label08;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.content.pm.ResolveInfo resolveIntent(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, $i2;
        com.android.server.pm.UserManagerService $r3;
        boolean $z0;
        java.util.List $r4;
        android.content.pm.ResolveInfo $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r3.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>($i2, i1, 0, "resolve intent");

        $r4 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        $r5 = specialinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo chooseBestActivity(android.content.Intent,java.lang.String,int,java.util.List,int)>(r1, r2, i0, $r4, i1);

        return $r5;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, java.lang.String, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, $i2;
        java.util.List r3;
        com.android.server.pm.UserManagerService $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i1);

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        if r3 == null goto label1;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 < 1 goto label1;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        return $r6;
    }

    public void revokePermission(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r29, $r37, $r45;
        int i0, i2, i3, $i4, $i5, $i7, $i8;
        java.util.HashMap r3, $r16, $r20;
        java.lang.Throwable r4, r13, $r44, $r46;
        android.content.pm.PackageParser$Package r5;
        java.lang.IllegalArgumentException r6, r8, $r34, $r43;
        com.android.server.pm.BasePermission r7;
        com.android.server.pm.PackageSetting r9;
        com.android.server.pm.GrantedPermissions r10;
        android.app.IActivityManager r11;
        long l1;
        int[] r14, $r30, $r31, $r35;
        java.lang.Object $r15, $r19, $r22;
        android.content.pm.ApplicationInfo $r17;
        com.android.server.pm.Settings $r18, $r32;
        com.android.server.pm.SharedUserSetting $r21;
        java.util.HashSet $r23, $r27;
        boolean $z0, $z2;
        com.android.server.pm.UserManagerService $r24;
        java.lang.StringBuilder $r25, $r26, $r28, $r33, $r38, $r39, $r40, $r41, $r42;
        android.content.Context $r36;
        android.os.RemoteException $r47;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = -1;

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r16 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.content.pm.PackageParser$Package) $r15;

     label02:
        if r5 != null goto label07;

     label03:
        $r43 = new java.lang.IllegalArgumentException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45);

        r6 = $r43;

        throw r6;

     label04:
        $r46 := @caughtexception;

        r4 = $r46;

     label05:
        exitmonitor r3;

     label06:
        throw r4;

     label07:
        $r17 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 == $i5 goto label08;

        $r36 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r36.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GRANT_REVOKE_PERMISSIONS", null);

     label08:
        $r18 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r20 = $r18.<com.android.server.pm.Settings: java.util.HashMap mPermissions>;

        $r19 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r7 = (com.android.server.pm.BasePermission) $r19;

     label09:
        if r7 != null goto label11;

     label10:
        $r34 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown permission: ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        r8 = $r34;

        throw r8;

     label11:
        staticinvoke <com.android.server.pm.PackageManagerService: void checkGrantRevokePermissions(android.content.pm.PackageParser$Package,com.android.server.pm.BasePermission)>(r5, r7);

        $r22 = r5.<android.content.pm.PackageParser$Package: java.lang.Object mExtras>;

        r9 = (com.android.server.pm.PackageSetting) $r22;

     label12:
        if r9 != null goto label15;

     label13:
        exitmonitor r3;

     label14:
        return;

     label15:
        $r21 = r9.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

        if $r21 == null goto label25;

        r10 = r9.<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting sharedUser>;

     label16:
        $r23 = r10.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        $z0 = virtualinvoke $r23.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        if $z0 == 0 goto label18;

        $r27 = r10.<com.android.server.pm.GrantedPermissions: java.util.HashSet grantedPermissions>;

        virtualinvoke $r27.<java.util.HashSet: boolean remove(java.lang.Object)>(r2);

        $z2 = r9.<com.android.server.pm.PackageSetting: boolean haveGids>;

        if $z2 == 0 goto label17;

        $r30 = r10.<com.android.server.pm.GrantedPermissions: int[] gids>;

        $r31 = r7.<com.android.server.pm.BasePermission: int[] gids>;

        $r35 = staticinvoke <com.android.server.pm.PackageManagerService: int[] removeInts(int[],int[])>($r30, $r31);

        r10.<com.android.server.pm.GrantedPermissions: int[] gids> = $r35;

     label17:
        $r32 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r32.<com.android.server.pm.Settings: void writeLPr()>();

        i0 = r9.<com.android.server.pm.PackageSetting: int appId>;

     label18:
        exitmonitor r3;

     label19:
        if i0 < 0 goto label29;

        r11 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r11 == null goto label29;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label20:
        $r24 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        r14 = virtualinvoke $r24.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        i2 = lengthof r14;

     label21:
        i3 = 0;

     label22:
        if i3 >= i2 goto label26;

     label23:
        $i7 = r14[i3];

        $i8 = staticinvoke <android.os.UserHandle: int getUid(int,int)>($i7, i0);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revoke ");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r11.<android.app.IActivityManager: void killUid(int,java.lang.String)>($i8, $r29);

     label24:
        i3 = i3 + 1;

        goto label22;

     label25:
        r10 = r9;

        goto label16;

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label27:
        $r47 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label28:
        $r44 := @caughtexception;

        r13 = $r44;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r13;

     label29:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label17 to label18 with label04;
        catch java.lang.Throwable from label18 to label19 with label04;
        catch android.os.RemoteException from label20 to label21 with label27;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch android.os.RemoteException from label23 to label24 with label27;
        catch java.lang.Throwable from label23 to label24 with label28;
    }

    public void scanAvailableAsecs()
    {
        com.android.server.pm.PackageManagerService r0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean,boolean)>(1, 0, 0);

        return;
    }

    void schedulePackageCleaning(java.lang.String, int, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.pm.PackageManagerService$PackageHandler r2, r3;
        byte b1;
        android.os.Message $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r3 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        $r4 = virtualinvoke r3.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(7, i0, b1, r1);

        virtualinvoke r2.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>($r4);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    void scheduleWritePackageRestrictionsLocked(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService $r1;
        boolean $z0, $z2;
        java.util.HashSet $r2;
        java.lang.Integer $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4, $r5;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashSet mDirtyUsers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $z2 = virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: boolean hasMessages(int)>(14);

        if $z2 != 0 goto label1;

        $r5 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r5.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(14, 10000L);

        return;
    }

    void scheduleWriteSettingsLocked()
    {
        com.android.server.pm.PackageManagerService r0;
        com.android.server.pm.PackageManagerService$PackageHandler $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        $r1 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $z0 = virtualinvoke $r1.<com.android.server.pm.PackageManagerService$PackageHandler: boolean hasMessages(int)>(13);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r2.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendEmptyMessageDelayed(int,long)>(13, 10000L);

     label1:
        return;
    }

    public boolean setApplicationBlockedSettingAsUser(java.lang.String, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r16, $r21;
        boolean z0, z1, z2, z3, $z4;
        int i0, $i2, $i3, $i4, $i5;
        long l1;
        java.lang.Throwable r2, r4, $r20, $r22;
        java.util.HashMap r3, $r7;
        com.android.server.pm.PackageSetting r5;
        android.content.Context $r6, $r19;
        com.android.server.pm.Settings $r8, $r10;
        java.lang.Object $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r17, $r18;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r6 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_USERS", null);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 == i0 goto label01;

        $r19 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setApplicationBlockedSetting for user ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", $r21);

     label01:
        if z0 == 0 goto label02;

        $z4 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdmin(java.lang.String,int)>(r1, i0);

        if $z4 == 0 goto label02;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not blocking package ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": has active device admin");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r16);

        return 0;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label04:
        $r8 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r8.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r9;

     label05:
        if r5 != null goto label08;

     label06:
        exitmonitor r3;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label08:
        z1 = virtualinvoke r5.<com.android.server.pm.PackageSetting: boolean getBlocked(int)>(i0);

     label09:
        z2 = 0;

        z3 = 0;

        if z1 == z0 goto label12;

     label10:
        virtualinvoke r5.<com.android.server.pm.PackageSetting: void setBlocked(boolean,int)>(z0, i0);

        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r10.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>(i0);

     label11:
        if z0 == 0 goto label16;

        z3 = 1;

     label12:
        exitmonitor r3;

     label13:
        if z2 == 0 goto label21;

     label14:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageAddedForUser(java.lang.String,com.android.server.pm.PackageSetting,int)>(r1, r5, i0);

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label16:
        z2 = 1;

        z3 = 0;

        goto label12;

     label17:
        $r22 := @caughtexception;

        r4 = $r22;

     label18:
        exitmonitor r3;

     label19:
        throw r4;

     label20:
        $r20 := @caughtexception;

        r2 = $r20;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label21:
        if z3 == 0 goto label23;

     label22:
        $i4 = r5.<com.android.server.pm.PackageSetting: int appId>;

        $i5 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i0, $i4);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>(r1, $i5, "blocking pkg");

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void sendPackageBlockedForUser(java.lang.String,com.android.server.pm.PackageSetting,int)>(r1, r5, i0);

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label22 to label23 with label20;
    }

    public void setApplicationEnabledSetting(java.lang.String, int, int, int, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, $i3;
        com.android.server.pm.UserManagerService $r3;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $r3 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r3.<com.android.server.pm.UserManagerService: boolean exists(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r2 != null goto label2;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

     label2:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setEnabledSetting(java.lang.String,java.lang.String,int,int,int,java.lang.String)>(r1, null, i0, i1, i2, r2);

        return;
    }

    public void setComponentEnabledSetting(android.content.ComponentName, int, int, int)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.ComponentName r1;
        int i0, i1, i2;
        com.android.server.pm.UserManagerService $r2;
        boolean $z0;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z0 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: boolean exists(int)>(i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void setEnabledSetting(java.lang.String,java.lang.String,int,int,int,java.lang.String)>($r3, $r4, i0, i1, i2, null);

        return;
    }

    public boolean setInstallLocation(int)
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, $i1;
        android.content.Context $r1, $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS", null);

        $i1 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: int getInstallLocation()>();

        if $i1 != i0 goto label1;

        return 1;

     label1:
        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label3;

     label2:
        $r2 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r3, "default_install_location", i0);

        return 1;

     label3:
        return 0;
    }

    public void setInstallerPackageName(java.lang.String, java.lang.String)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, r2, $r18, $r24, $r26, $r32, $r36, $r42, $r50, $r58, $r61;
        int i0, $i1, $i2;
        java.util.HashMap r3, $r11, $r29, $r54;
        java.lang.Throwable r4, $r63;
        com.android.server.pm.PackageSetting r5, r6, r9, $r27;
        java.lang.Object r7, $r12, $r30, $r53;
        android.content.pm.Signature[] r8, $r35, $r40;
        com.android.server.pm.Settings $r10, $r13, $r31, $r47;
        java.lang.StringBuilder $r14, $r16, $r17, $r20, $r21, $r22, $r23, $r25, $r37, $r38, $r39, $r43, $r44, $r45, $r51, $r55, $r56, $r57, $r59, $r60;
        java.lang.SecurityException $r15, $r19, $r33, $r46;
        boolean $z0, $z1;
        com.android.server.pm.PackageSignatures $r28, $r34, $r41, $r48;
        com.android.server.pm.SharedUserSetting $r49;
        java.lang.IllegalArgumentException $r52, $r62;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label01:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r11 = $r10.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.pm.PackageSetting) $r12;

     label02:
        if r5 != null goto label07;

     label03:
        $r62 = new java.lang.IllegalArgumentException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown target package: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r58);

        throw $r62;

     label04:
        $r63 := @caughtexception;

        r4 = $r63;

     label05:
        exitmonitor r3;

     label06:
        throw r4;

     label07:
        if r2 == null goto label25;

     label08:
        $r47 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r54 = $r47.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r53 = virtualinvoke $r54.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (com.android.server.pm.PackageSetting) $r53;

     label09:
        if r6 != null goto label11;

     label10:
        $r52 = new java.lang.IllegalArgumentException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown installer package: ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r61);

        throw $r52;

     label11:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        r7 = virtualinvoke $r13.<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>(i0);

     label12:
        if r7 == null goto label19;

     label13:
        $z0 = r7 instanceof com.android.server.pm.SharedUserSetting;

        if $z0 == 0 goto label16;

        $r49 = (com.android.server.pm.SharedUserSetting) r7;

        $r48 = $r49.<com.android.server.pm.SharedUserSetting: com.android.server.pm.PackageSignatures signatures>;

        r8 = $r48.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

     label14:
        if r6 == null goto label20;

     label15:
        $r41 = r6.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r40 = $r41.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $i2 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>(r8, $r40);

        if $i2 == 0 goto label20;

        $r46 = new java.lang.SecurityException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller does not have same cert as new installer package ");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.SecurityException: void <init>(java.lang.String)>($r50);

        throw $r46;

     label16:
        $z1 = r7 instanceof com.android.server.pm.PackageSetting;

        if $z1 == 0 goto label18;

        $r27 = (com.android.server.pm.PackageSetting) r7;

        $r28 = $r27.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        r8 = $r28.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

     label17:
        goto label14;

     label18:
        $r19 = new java.lang.SecurityException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad object ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for uid ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label19:
        $r15 = new java.lang.SecurityException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown calling uid ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label20:
        $r26 = r5.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        if $r26 == null goto label23;

        $r31 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r29 = $r31.<com.android.server.pm.Settings: java.util.HashMap mPackages>;

        $r32 = r5.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        $r30 = virtualinvoke $r29.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r32);

        r9 = (com.android.server.pm.PackageSetting) $r30;

     label21:
        if r9 == null goto label23;

     label22:
        $r34 = r9.<com.android.server.pm.PackageSetting: com.android.server.pm.PackageSignatures signatures>;

        $r35 = $r34.<com.android.server.pm.PackageSignatures: android.content.pm.Signature[] mSignatures>;

        $i1 = staticinvoke <com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>(r8, $r35);

        if $i1 == 0 goto label23;

        $r33 = new java.lang.SecurityException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller does not have same cert as old installer package ");

        $r36 = r5.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.SecurityException: void <init>(java.lang.String)>($r42);

        throw $r33;

     label23:
        r5.<com.android.server.pm.PackageSetting: java.lang.String installerPackageName> = r2;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>();

        exitmonitor r3;

     label24:
        return;

     label25:
        r6 = null;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label18 to label19 with label04;
        catch java.lang.Throwable from label19 to label20 with label04;
        catch java.lang.Throwable from label20 to label21 with label04;
        catch java.lang.Throwable from label22 to label23 with label04;
        catch java.lang.Throwable from label23 to label24 with label04;
    }

    public void setLastChosenActivity(android.content.Intent, java.lang.String, int, android.content.IntentFilter, int, android.content.ComponentName)
    {
        com.android.server.pm.PackageManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        int i0, i1, i2;
        android.content.IntentFilter r3;
        android.content.ComponentName r4;
        java.util.List $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.IntentFilter;

        i1 := @parameter4: int;

        r4 := @parameter5: android.content.ComponentName;

        i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

        $r6 = virtualinvoke r0.<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, i0, i2);

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>(r1, r2, i0, $r6, 0, 0, 1, 0, i2);

        specialinvoke r0.<com.android.server.pm.PackageManagerService: void addPreferredActivityInternal(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean,int)>(r3, i1, null, r4, 0, i2);

        return;
    }

    public void setPackageStoppedState(java.lang.String, boolean, int)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1;
        boolean z0, z1, $z2, $z3;
        int i0, i1, $i2;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r7;
        com.android.server.pm.UserManagerService $r4;
        android.content.Context $r5;
        com.android.server.pm.Settings $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r4 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        $z2 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z2 != 0 goto label1;

        return;

     label1:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.CHANGE_COMPONENT_ENABLED_STATE");

        if $i2 != 0 goto label9;

        z1 = 1;

     label2:
        specialinvoke r0.<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,java.lang.String)>(i1, i0, 1, "stop package");

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label3:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $z3 = virtualinvoke $r6.<com.android.server.pm.Settings: boolean setPackageStoppedStateLPw(java.lang.String,boolean,boolean,int,int)>(r1, z0, z1, i1, i0);

        if $z3 == 0 goto label4;

        virtualinvoke r0.<com.android.server.pm.PackageManagerService: void scheduleWritePackageRestrictionsLocked(int)>(i0);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

     label9:
        z1 = 0;

        goto label2;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setPermissionEnforced(java.lang.String, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        java.lang.String r1, $r8, $r12;
        boolean z0, $z1, $z3;
        java.util.HashMap r2;
        java.lang.Throwable r3, r5, $r21, $r23;
        android.app.IActivityManager r4;
        long l0;
        android.content.Context $r7;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        com.android.server.pm.Settings $r14, $r15, $r17, $r20;
        java.lang.Boolean $r16, $r18, $r19;
        android.os.RemoteException $r22;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r7 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.GRANT_REVOKE_PERMISSIONS", null);

        $r8 = "android.permission.READ_EXTERNAL_STORAGE";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label13;

        r2 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r2;

     label01:
        $r14 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r16 = $r14.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        if $r16 == null goto label02;

        $r20 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = $r20.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced>;

        $z3 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == z0 goto label03;

     label02:
        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r15.<com.android.server.pm.Settings: java.lang.Boolean mReadExternalStorageEnforced> = $r18;

        $r17 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        virtualinvoke $r17.<com.android.server.pm.Settings: void writeLPr()>();

     label03:
        exitmonitor r2;

     label04:
        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r4 == null goto label07;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        interfaceinvoke r4.<android.app.IActivityManager: boolean killProcessesBelowForeground(java.lang.String)>("setPermissionEnforcement");

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label07:
        return;

     label08:
        $r23 := @caughtexception;

        r3 = $r23;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r22 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label12:
        $r21 := @caughtexception;

        r5 = $r21;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label13:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No selective enforcement for ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void startCleaningPackages()
    {
        com.android.server.pm.PackageManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r12;
        android.content.Intent r3, $r8;
        android.app.IActivityManager r4;
        boolean $z0, $z1;
        com.android.server.pm.Settings $r6;
        java.util.ArrayList $r7;
        android.content.ComponentName $r9;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.pm.PackageManagerService;

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<com.android.server.pm.PackageManagerService: boolean isExternalMediaAvailable()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r7 = $r6.<com.android.server.pm.Settings: java.util.ArrayList mPackagesToBeCleaned>;

        $z1 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label08;

        exitmonitor r1;

     label04:
        return;

     label05:
        $r12 := @caughtexception;

        r2 = $r12;

     label06:
        exitmonitor r1;

     label07:
        throw r2;

     label08:
        exitmonitor r1;

     label09:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.content.pm.CLEAN_EXTERNAL_STORAGE");

        r3 = $r8;

        $r9 = <com.android.server.pm.PackageManagerService: android.content.ComponentName DEFAULT_CONTAINER_COMPONENT>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r9);

        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        if r4 == null goto label13;

     label10:
        interfaceinvoke r4.<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(null, r3, null, 0);

     label11:
        return;

     label12:
        $r13 := @caughtexception;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    public void systemReady()
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, $z1;
        java.util.HashMap r1, $r32;
        java.util.ArrayList r2, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i8, i9;
        java.lang.Throwable r3, $r33;
        com.android.server.pm.PreferredIntentResolver r4;
        java.util.Iterator r5;
        com.android.server.pm.PreferredActivity r6, r7;
        android.content.Context $r8;
        android.content.ContentResolver $r9;
        com.android.server.pm.Settings $r10, $r15, $r19, $r22;
        android.util.SparseArray $r12, $r14, $r18;
        com.android.server.pm.UserManagerService $r13;
        java.util.Set $r16;
        java.lang.Object $r17, $r20, $r26, $r34;
        java.lang.StringBuilder $r21, $r25, $r27;
        com.android.server.PreferredComponent $r23, $r29;
        android.content.ComponentName $r24, $r30;
        java.lang.String $r28;
        com.android.server.pm.PackageManagerService$ActivityIntentResolver $r31;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 = 1;

        r0.<com.android.server.pm.PackageManagerService: boolean mSystemReady> = 1;

        $r8 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i8 = (int) 1;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r9, "compatibility_mode", i8);

        i9 = (int) 1;

        if $i2 != i9 goto label10;

     label01:
        staticinvoke <android.content.pm.PackageParser: void setCompatibilityModeEnabled(boolean)>(z0);

        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label02:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

     label03:
        i0 = 0;

     label04:
        $r10 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r12 = $r10.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i3 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label17;

        $r15 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r14 = $r15.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $r17 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (com.android.server.pm.PreferredIntentResolver) $r17;

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

        $r16 = virtualinvoke r4.<com.android.server.pm.PreferredIntentResolver: java.util.Set filterSet()>();

        r5 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r26 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.pm.PreferredActivity) $r26;

        $r31 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$ActivityIntentResolver mActivities>;

        $r32 = staticinvoke <com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$1400(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>($r31);

        $r29 = r7.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r30 = $r29.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $r34 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r30);

        if $r34 != null goto label05;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label06:
        goto label05;

     label07:
        $r33 := @caughtexception;

        r3 = $r33;

     label08:
        exitmonitor r1;

     label09:
        throw r3;

     label10:
        z0 = 0;

        goto label01;

     label11:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label19;

     label12:
        i1 = 0;

     label13:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i4 goto label15;

        $r20 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.pm.PreferredActivity) $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dangling preferred activity: ");

        $r23 = r6.<com.android.server.pm.PreferredActivity: com.android.server.PreferredComponent mPref>;

        $r24 = $r23.<com.android.server.PreferredComponent: android.content.ComponentName mComponent>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        virtualinvoke r4.<com.android.server.pm.PreferredIntentResolver: void removeFilter(android.content.IntentFilter)>(r6);

     label14:
        i1 = i1 + 1;

        goto label13;

     label15:
        $r22 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r19 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.Settings mSettings>;

        $r18 = $r19.<com.android.server.pm.Settings: android.util.SparseArray mPreferredActivities>;

        $i6 = virtualinvoke $r18.<android.util.SparseArray: int keyAt(int)>(i0);

        virtualinvoke $r22.<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>($i6);

     label16:
        goto label19;

     label17:
        exitmonitor r1;

     label18:
        $r13 = <com.android.server.pm.PackageManagerService: com.android.server.pm.UserManagerService sUserManager>;

        virtualinvoke $r13.<com.android.server.pm.UserManagerService: void systemReady()>();

        return;

     label19:
        i0 = i0 + 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
    }

    public void updateExternalMediaStatus(boolean, boolean)
    {
        com.android.server.pm.PackageManagerService r0;
        boolean z0, z1, $z2, $z3;
        int i0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r17;
        java.lang.StringBuilder r3, r5, $r9, $r10, $r11;
        java.lang.String r4, r6, $r12;
        com.android.server.pm.PackageManagerService$PackageHandler r7, $r13, $r16;
        byte b1;
        android.os.Message r8;
        com.android.server.pm.PackageManagerService$10 $r14;
        java.lang.SecurityException $r15;

        r0 := @this: com.android.server.pm.PackageManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 0 goto label01;

        if i0 == 1000 goto label01;

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>("Media status can only be updated by the system");

        throw $r15;

     label01:
        r1 = r0.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r1;

     label02:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating external media status from ");

        $z2 = r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted>;

        if $z2 == 0 goto label15;

     label03:
        r4 = "mounted";

     label04:
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

     label05:
        if z0 == 0 goto label16;

        r6 = "mounted";

     label06:
        $r11 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageManager", $r12);

        $z3 = r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted>;

        if z0 != $z3 goto label10;

        r7 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

     label07:
        if z1 == 0 goto label17;

        b1 = 1;

     label08:
        r8 = virtualinvoke r7.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int,int,int)>(12, b1, -1);

        $r16 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r16.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r8);

        exitmonitor r1;

     label09:
        return;

     label10:
        r0.<com.android.server.pm.PackageManagerService: boolean mMediaMounted> = z0;

        exitmonitor r1;

     label11:
        $r13 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        $r14 = new com.android.server.pm.PackageManagerService$10;

        specialinvoke $r14.<com.android.server.pm.PackageManagerService$10: void <init>(com.android.server.pm.PackageManagerService,boolean,boolean)>(r0, z0, z1);

        virtualinvoke $r13.<com.android.server.pm.PackageManagerService$PackageHandler: boolean post(java.lang.Runnable)>($r14);

        return;

     label12:
        $r17 := @caughtexception;

        r2 = $r17;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        r4 = "unmounted";

        goto label04;

     label16:
        r6 = "unmounted";

        goto label06;

     label17:
        b1 = 0;

        goto label08;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void verifyPendingInstall(int, int) throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService r0;
        int i0, i1, $i2;
        android.os.Message r1;
        com.android.server.pm.PackageVerificationResponse r2, $r5;
        android.content.Context $r3;
        com.android.server.pm.PackageManagerService$PackageHandler $r4, $r6;

        r0 := @this: com.android.server.pm.PackageManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_VERIFICATION_AGENT", "Only package verification agents can verify applications");

        $r4 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        r1 = virtualinvoke $r4.<com.android.server.pm.PackageManagerService$PackageHandler: android.os.Message obtainMessage(int)>(15);

        $r5 = new com.android.server.pm.PackageVerificationResponse;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r5.<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>(i1, $i2);

        r2 = $r5;

        r1.<android.os.Message: int arg1> = i0;

        r1.<android.os.Message: java.lang.Object obj> = r2;

        $r6 = r0.<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageHandler mHandler>;

        virtualinvoke $r6.<com.android.server.pm.PackageManagerService$PackageHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }
}
