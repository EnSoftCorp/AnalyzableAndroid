final class com.android.server.display.OverlayDisplayAdapter extends com.android.server.display.DisplayAdapter
{
    static final boolean DEBUG;
    private static final int MAX_HEIGHT;
    private static final int MAX_WIDTH;
    private static final int MIN_HEIGHT;
    private static final int MIN_WIDTH;
    private static final java.util.regex.Pattern SETTING_PATTERN;
    static final java.lang.String TAG;
    private java.lang.String mCurrentOverlaySetting;
    private final java.util.ArrayList mOverlays;
    private final android.os.Handler mUiHandler;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.android.server.display.OverlayDisplayAdapter: java.lang.String TAG> = "OverlayDisplayAdapter";

        <com.android.server.display.OverlayDisplayAdapter: int MIN_WIDTH> = 100;

        <com.android.server.display.OverlayDisplayAdapter: int MIN_HEIGHT> = 100;

        <com.android.server.display.OverlayDisplayAdapter: int MAX_WIDTH> = 4096;

        <com.android.server.display.OverlayDisplayAdapter: int MAX_HEIGHT> = 4096;

        <com.android.server.display.OverlayDisplayAdapter: boolean DEBUG> = 0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+)x(\\d+)/(\\d+)(,[a-z]+)*");

        <com.android.server.display.OverlayDisplayAdapter: java.util.regex.Pattern SETTING_PATTERN> = $r0;

        return;
    }

    public void <init>(com.android.server.display.DisplayManagerService$SyncRoot, android.content.Context, android.os.Handler, com.android.server.display.DisplayAdapter$Listener, android.os.Handler)
    {
        com.android.server.display.OverlayDisplayAdapter r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        android.content.Context r2;
        android.os.Handler r3, r5;
        com.android.server.display.DisplayAdapter$Listener r4;
        java.util.ArrayList $r6;

        r0 := @this: com.android.server.display.OverlayDisplayAdapter;

        r1 := @parameter0: com.android.server.display.DisplayManagerService$SyncRoot;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: com.android.server.display.DisplayAdapter$Listener;

        r5 := @parameter4: android.os.Handler;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void <init>(com.android.server.display.DisplayManagerService$SyncRoot,android.content.Context,android.os.Handler,com.android.server.display.DisplayAdapter$Listener,java.lang.String)>(r1, r2, r3, r4, "OverlayDisplayAdapter");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays> = $r6;

        r0.<com.android.server.display.OverlayDisplayAdapter: java.lang.String mCurrentOverlaySetting> = "";

        r0.<com.android.server.display.OverlayDisplayAdapter: android.os.Handler mUiHandler> = r5;

        return;
    }

    static void access$000(com.android.server.display.OverlayDisplayAdapter)
    {
        com.android.server.display.OverlayDisplayAdapter r0;

        r0 := @parameter0: com.android.server.display.OverlayDisplayAdapter;

        specialinvoke r0.<com.android.server.display.OverlayDisplayAdapter: void updateOverlayDisplayDevices()>();

        return;
    }

    static android.os.Handler access$100(com.android.server.display.OverlayDisplayAdapter)
    {
        com.android.server.display.OverlayDisplayAdapter r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.display.OverlayDisplayAdapter;

        $r1 = r0.<com.android.server.display.OverlayDisplayAdapter: android.os.Handler mUiHandler>;

        return $r1;
    }

    private static int chooseOverlayGravity(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return 83;

     label2:
        return 51;

     label3:
        return 85;

     label4:
        return 53;
    }

    private void updateOverlayDisplayDevices()
    {
        com.android.server.display.OverlayDisplayAdapter r0;
        com.android.server.display.DisplayManagerService$SyncRoot r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.display.OverlayDisplayAdapter;

        r1 = virtualinvoke r0.<com.android.server.display.OverlayDisplayAdapter: com.android.server.display.DisplayManagerService$SyncRoot getSyncRoot()>();

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.display.OverlayDisplayAdapter: void updateOverlayDisplayDevicesLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void updateOverlayDisplayDevicesLocked()
    {
        com.android.server.display.OverlayDisplayAdapter r0;
        java.lang.String r1, r2, r4, r7, r10, $r18, $r20, $r21, $r22, $r34, $r46;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.String[] r3;
        java.util.regex.Matcher r5;
        java.lang.Object[] r8;
        android.content.res.Resources r9;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7;
        java.util.Iterator r11;
        android.content.ContentResolver $r12;
        android.content.Context $r13, $r23;
        java.util.ArrayList $r14, $r43, $r45, $r47;
        java.util.regex.Pattern $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r41;
        java.lang.Integer $r24;
        com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle $r42, $r49;
        java.lang.Object $r44;
        java.lang.NumberFormatException $r48;

        r0 := @this: com.android.server.display.OverlayDisplayAdapter;

        $r13 = virtualinvoke r0.<com.android.server.display.OverlayDisplayAdapter: android.content.Context getContext()>();

        $r12 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r12, "overlay_display_devices");

        if r1 != null goto label01;

        r1 = "";

     label01:
        r2 = r0.<com.android.server.display.OverlayDisplayAdapter: java.lang.String mCurrentOverlaySetting>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label03;

     label02:
        return;

     label03:
        r0.<com.android.server.display.OverlayDisplayAdapter: java.lang.String mCurrentOverlaySetting> = r1;

        $r14 = r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays>;

        $z2 = virtualinvoke $r14.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label06;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("OverlayDisplayAdapter", "Dismissing all overlay display devices.");

        $r47 = r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays>;

        r11 = virtualinvoke $r47.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z7 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label05;

        $r44 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r49 = (com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle) $r44;

        virtualinvoke $r49.<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle: void dismissLocked()>();

        goto label04;

     label05:
        $r45 = r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays>;

        virtualinvoke $r45.<java.util.ArrayList: void clear()>();

     label06:
        i0 = 0;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i1 = lengthof r3;

        i2 = 0;

     label07:
        if i2 >= i1 goto label02;

        r4 = r3[i2];

        $r15 = <com.android.server.display.OverlayDisplayAdapter: java.util.regex.Pattern SETTING_PATTERN>;

        r5 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z3 = virtualinvoke r5.<java.util.regex.Matcher: boolean matches()>();

        if $z3 == 0 goto label17;

        if i0 < 4 goto label08;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many overlay display devices specified: ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayDisplayAdapter", $r46);

        return;

     label08:
        $r18 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r18, 10);

        $r22 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r22, 10);

        $r21 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r21, 10);

        r7 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(4);

     label09:
        if i3 < 100 goto label18;

        if i3 > 4096 goto label18;

        if i4 < 100 goto label18;

        if i4 > 4096 goto label18;

        if i5 < 120 goto label18;

        if i5 > 480 goto label18;

        i0 = i0 + 1;

        i6 = i0;

     label10:
        $r23 = virtualinvoke r0.<com.android.server.display.OverlayDisplayAdapter: android.content.Context getContext()>();

        r9 = virtualinvoke $r23.<android.content.Context: android.content.res.Resources getResources()>();

        r8 = newarray (java.lang.Object)[1];

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        r8[0] = $r24;

        r10 = virtualinvoke r9.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040724, r8);

        i7 = staticinvoke <com.android.server.display.OverlayDisplayAdapter: int chooseOverlayGravity(int)>(i6);

     label11:
        if r7 == null goto label16;

     label12:
        $z6 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(",secure");

        if $z6 == 0 goto label16;

     label13:
        z0 = 1;

     label14:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Showing overlay display device #");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": name=");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", width=");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height=");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", densityDpi=");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r32 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", secure=");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("OverlayDisplayAdapter", $r34);

        $r43 = r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays>;

        $r42 = new com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle;

        specialinvoke $r42.<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle: void <init>(com.android.server.display.OverlayDisplayAdapter,java.lang.String,int,int,int,int,boolean)>(r0, r10, i3, i4, i5, i7, z0);

        virtualinvoke $r43.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

     label15:
        i2 = i2 + 1;

        goto label07;

     label16:
        z0 = 0;

        goto label14;

     label17:
        $z4 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label15;

     label18:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed overlay display devices setting: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("OverlayDisplayAdapter", $r20);

        goto label15;

     label19:
        $r48 := @caughtexception;

        goto label18;

        catch java.lang.NumberFormatException from label08 to label09 with label19;
        catch java.lang.NumberFormatException from label10 to label11 with label19;
        catch java.lang.NumberFormatException from label12 to label13 with label19;
        catch java.lang.NumberFormatException from label14 to label15 with label19;
    }

    public void dumpLocked(java.io.PrintWriter)
    {
        com.android.server.display.OverlayDisplayAdapter r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r11;
        java.lang.String $r5, $r7, $r12;
        java.util.ArrayList $r10, $r13;
        int $i0;
        java.lang.Object $r14;
        boolean $z0;
        com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle $r15;

        r0 := @this: com.android.server.display.OverlayDisplayAdapter;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void dumpLocked(java.io.PrintWriter)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentOverlaySetting=");

        $r5 = r0.<com.android.server.display.OverlayDisplayAdapter: java.lang.String mCurrentOverlaySetting>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOverlays: size=");

        $r10 = r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays>;

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = r0.<com.android.server.display.OverlayDisplayAdapter: java.util.ArrayList mOverlays>;

        r2 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle) $r14;

        virtualinvoke $r15.<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle: void dumpLocked(java.io.PrintWriter)>(r1);

        goto label1;

     label2:
        return;
    }

    public void registerLocked()
    {
        com.android.server.display.OverlayDisplayAdapter r0;
        android.os.Handler $r1;
        com.android.server.display.OverlayDisplayAdapter$1 $r2;

        r0 := @this: com.android.server.display.OverlayDisplayAdapter;

        specialinvoke r0.<com.android.server.display.DisplayAdapter: void registerLocked()>();

        $r1 = virtualinvoke r0.<com.android.server.display.OverlayDisplayAdapter: android.os.Handler getHandler()>();

        $r2 = new com.android.server.display.OverlayDisplayAdapter$1;

        specialinvoke $r2.<com.android.server.display.OverlayDisplayAdapter$1: void <init>(com.android.server.display.OverlayDisplayAdapter)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }
}
