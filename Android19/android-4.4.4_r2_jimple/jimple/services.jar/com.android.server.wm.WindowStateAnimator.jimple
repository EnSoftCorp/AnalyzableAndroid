class com.android.server.wm.WindowStateAnimator extends java.lang.Object
{
    static final int COMMIT_DRAW_PENDING;
    static final int DRAW_PENDING;
    static final int HAS_DRAWN;
    static final int NO_SURFACE;
    static final int READY_TO_SHOW;
    static final java.lang.String TAG;
    float mAlpha;
    int mAnimDh;
    int mAnimDw;
    int mAnimLayer;
    boolean mAnimating;
    android.view.animation.Animation mAnimation;
    boolean mAnimationIsEntrance;
    final com.android.server.wm.WindowAnimator mAnimator;
    com.android.server.wm.AppWindowAnimator mAppAnimator;
    final com.android.server.wm.WindowStateAnimator mAttachedWinAnimator;
    int mAttrFlags;
    int mAttrType;
    final android.content.Context mContext;
    int mDrawState;
    float mDsDx;
    float mDsDy;
    float mDtDx;
    float mDtDy;
    boolean mEnterAnimationPending;
    boolean mHasLocalTransformation;
    boolean mHasTransformation;
    boolean mHaveMatrix;
    final boolean mIsWallpaper;
    float mLastAlpha;
    float mLastDsDx;
    float mLastDsDy;
    float mLastDtDx;
    float mLastDtDy;
    boolean mLastHidden;
    int mLastLayer;
    final int mLayerStack;
    boolean mLocalAnimating;
    android.view.SurfaceControl mPendingDestroySurface;
    final android.view.WindowManagerPolicy mPolicy;
    final com.android.server.wm.WindowManagerService mService;
    final com.android.server.wm.Session mSession;
    float mShownAlpha;
    float mSurfaceAlpha;
    android.view.SurfaceControl mSurfaceControl;
    boolean mSurfaceDestroyDeferred;
    float mSurfaceH;
    int mSurfaceLayer;
    boolean mSurfaceResized;
    boolean mSurfaceShown;
    float mSurfaceW;
    float mSurfaceX;
    float mSurfaceY;
    final android.view.animation.Transformation mTransformation;
    final android.view.animation.Transformation mUniverseTransform;
    boolean mWasAnimating;
    final com.android.server.wm.WindowState mWin;

    public void <init>(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowStateAnimator r0, r4;
        com.android.server.wm.WindowState r1, $r13, $r14;
        com.android.server.wm.WindowManagerService r2;
        android.view.DisplayInfo r3;
        com.android.server.wm.AppWindowToken r5, $r16;
        com.android.server.wm.AppWindowAnimator r6;
        android.view.animation.Transformation $r7, $r8;
        com.android.server.wm.WindowAnimator $r9;
        android.view.WindowManagerPolicy $r10;
        android.content.Context $r11;
        com.android.server.wm.DisplayContent $r12, $r19;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.wm.Session $r15;
        android.view.WindowManager$LayoutParams $r17, $r18;
        boolean $z0;
        android.view.Display $r20;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        r1 := @parameter0: com.android.server.wm.WindowState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new android.view.animation.Transformation;

        specialinvoke $r7.<android.view.animation.Transformation: void <init>()>();

        r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mUniverseTransform> = $r7;

        $r8 = new android.view.animation.Transformation;

        specialinvoke $r8.<android.view.animation.Transformation: void <init>()>();

        r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation> = $r8;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mAlpha> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastAlpha> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDx> = 1.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDx> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDy> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDy> = 1.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDsDx> = 1.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDtDx> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDsDy> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDtDy> = 1.0F;

        r2 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService> = r2;

        $r9 = r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator> = $r9;

        $r10 = r2.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        r0.<com.android.server.wm.WindowStateAnimator: android.view.WindowManagerPolicy mPolicy> = $r10;

        $r11 = r2.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        r0.<com.android.server.wm.WindowStateAnimator: android.content.Context mContext> = $r11;

        $r12 = r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        r3 = virtualinvoke $r12.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $i0 = r3.<android.view.DisplayInfo: int appWidth>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimDw> = $i0;

        $i1 = r3.<android.view.DisplayInfo: int appHeight>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimDh> = $i1;

        r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin> = r1;

        $r14 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        if $r14 != null goto label3;

        r4 = null;

     label1:
        r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowStateAnimator mAttachedWinAnimator> = r4;

        r5 = r1.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        r6 = null;

        if r5 != null goto label4;

     label2:
        r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator> = r6;

        $r15 = r1.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.Session mSession> = $r15;

        $r17 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r17.<android.view.WindowManager$LayoutParams: int flags>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAttrFlags> = $i2;

        $r18 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i3 = $r18.<android.view.WindowManager$LayoutParams: int type>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAttrType> = $i3;

        $z0 = r1.<com.android.server.wm.WindowState: boolean mIsWallpaper>;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mIsWallpaper> = $z0;

        $r19 = r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r20 = virtualinvoke $r19.<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>();

        $i4 = virtualinvoke $r20.<android.view.Display: int getLayerStack()>();

        r0.<com.android.server.wm.WindowStateAnimator: int mLayerStack> = $i4;

        return;

     label3:
        $r13 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowState mAttachedWindow>;

        r4 = $r13.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        goto label1;

     label4:
        $r16 = r1.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        r6 = $r16.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        goto label2;
    }

    static java.lang.String drawStateToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label2:
        return "NO_SURFACE";

     label3:
        return "DRAW_PENDING";

     label4:
        return "COMMIT_DRAW_PENDING";

     label5:
        return "READY_TO_SHOW";

     label6:
        return "HAS_DRAWN";
    }

    private boolean stepAnimation(long)
    {
        com.android.server.wm.WindowStateAnimator r0;
        long l0;
        android.view.animation.Animation $r1, $r4;
        boolean $z0, $z1;
        android.view.animation.Transformation $r2, $r3;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r1 == null goto label1;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r2.<android.view.animation.Transformation: void clear()>();

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        $z1 = virtualinvoke $r4.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>(l0, $r3);

        return $z1;
    }

    boolean applyAnimationLocked(int, boolean)
    {
        com.android.server.wm.WindowStateAnimator r0;
        int i0, i1;
        boolean z0, $z1, $z2, $z3;
        byte b2;
        android.view.animation.Animation r1, $r3;
        com.android.server.wm.WindowManagerService $r2, $r6;
        com.android.server.wm.WindowState $r4, $r7;
        android.view.WindowManagerPolicy $r5;
        android.view.WindowManager$LayoutParams $r8;
        com.android.server.wm.AppTransition $r9;
        android.content.Context $r10;
        android.view.WindowManagerPolicy$WindowState r11;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z1 == 0 goto label02;

        $z3 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimationIsEntrance>;

        if $z3 != z0 goto label02;

     label01:
        return 1;

     label02:
        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $z2 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: boolean okToDisplay()>();

        if $z2 == 0 goto label12;

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: android.view.WindowManagerPolicy mPolicy>;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r11 = (android.view.WindowManagerPolicy$WindowState) $r4;

        i1 = interfaceinvoke $r5.<android.view.WindowManagerPolicy: int selectAnimationLw(android.view.WindowManagerPolicy$WindowState,int)>(r11, i0);

        b2 = -1;

        if i1 == 0 goto label06;

        if i1 == -1 goto label05;

        $r10 = r0.<com.android.server.wm.WindowStateAnimator: android.content.Context mContext>;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r10, i1);

     label03:
        if r1 == null goto label04;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void setAnimation(android.view.animation.Animation)>(r1);

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimationIsEntrance> = z0;

     label04:
        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r3 != null goto label01;

        return 0;

     label05:
        r1 = null;

        goto label03;

     label06:
        tableswitch(i0)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            default: goto label07;
        };

     label07:
        r1 = null;

        if b2 < 0 goto label03;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r9 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        $r7 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r8 = $r7.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        r1 = virtualinvoke $r9.<com.android.server.wm.AppTransition: android.view.animation.Animation loadAnimation(android.view.WindowManager$LayoutParams,int)>($r8, b2);

        goto label03;

     label08:
        b2 = 0;

        goto label07;

     label09:
        b2 = 1;

        goto label07;

     label10:
        b2 = 2;

        goto label07;

     label11:
        b2 = 3;

        goto label07;

     label12:
        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void clearAnimation()>();

        goto label04;
    }

    void applyDecorRect(android.graphics.Rect)
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.graphics.Rect r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        com.android.server.wm.WindowState r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        boolean $z1;
        byte $b17;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i3 = r2.<com.android.server.wm.WindowState: int mXOffset>;

        $r3 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i2 = $r3.<android.graphics.Rect: int left>;

        i0 = $i3 + $i2;

        $i5 = r2.<com.android.server.wm.WindowState: int mYOffset>;

        $r4 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i4 = $r4.<android.graphics.Rect: int top>;

        i1 = $i5 + $i4;

        $r6 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r5 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i6 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r7 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i7 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        virtualinvoke $r6.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i6, $i7);

        $r8 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $i9 = r1.<android.graphics.Rect: int left>;

        $i14 = $i9 - i0;

        $i8 = r1.<android.graphics.Rect: int top>;

        $i15 = $i8 - i1;

        $i11 = r1.<android.graphics.Rect: int right>;

        $i12 = $i11 - i0;

        $i10 = r1.<android.graphics.Rect: int bottom>;

        $i13 = $i10 - i1;

        virtualinvoke $r8.<android.graphics.Rect: boolean intersect(int,int,int,int)>($i14, $i15, $i12, $i13);

        $z1 = r2.<com.android.server.wm.WindowState: boolean mEnforceSizeCompat>;

        if $z1 == 0 goto label1;

        $f1 = r2.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        $b17 = $f1 cmpl 1.0F;

        if $b17 == 0 goto label1;

        f0 = r2.<com.android.server.wm.WindowState: float mInvGlobalScale>;

        $r10 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r9 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $i16 = $r9.<android.graphics.Rect: int left>;

        $f2 = (float) $i16;

        $f3 = f0 * $f2;

        $f4 = $f3 - 0.5F;

        $i18 = (int) $f4;

        $r10.<android.graphics.Rect: int left> = $i18;

        $r12 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r11 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $i19 = $r11.<android.graphics.Rect: int top>;

        $f5 = (float) $i19;

        $f6 = f0 * $f5;

        $f7 = $f6 - 0.5F;

        $i20 = (int) $f7;

        $r12.<android.graphics.Rect: int top> = $i20;

        $r15 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r13 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $i22 = $r13.<android.graphics.Rect: int right>;

        $i21 = 1 + $i22;

        $f9 = (float) $i21;

        $f8 = f0 * $f9;

        $f10 = $f8 - 0.5F;

        $i23 = (int) $f10;

        $r15.<android.graphics.Rect: int right> = $i23;

        $r16 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r14 = r2.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $i25 = $r14.<android.graphics.Rect: int bottom>;

        $i24 = 1 + $i25;

        $f12 = (float) $i24;

        $f11 = f0 * $f12;

        $f13 = $f11 - 0.5F;

        $i26 = (int) $f13;

        $r16.<android.graphics.Rect: int bottom> = $i26;

     label1:
        return;
    }

    void applyEnterAnimationLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        byte b0;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r1, $r4;
        com.android.server.wm.DisplayMagnifier $r2, $r6;
        com.android.server.wm.WindowState $r3, $r5;
        int $i1;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mEnterAnimationPending>;

        if $z0 == 0 goto label3;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mEnterAnimationPending> = 0;

        b0 = 1;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: boolean applyAnimationLocked(int,boolean)>(b0, 1);

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayMagnifier mDisplayMagnifier>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i1 = virtualinvoke $r3.<com.android.server.wm.WindowState: int getDisplayId()>();

        if $i1 != 0 goto label2;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayMagnifier mDisplayMagnifier>;

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r6.<com.android.server.wm.DisplayMagnifier: void onWindowTransitionLocked(com.android.server.wm.WindowState,int)>($r5, b0);

     label2:
        return;

     label3:
        b0 = 3;

        goto label1;
    }

    void cancelExitAnimationForNextAnimationLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.view.animation.Animation $r1, $r2;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        virtualinvoke $r2.<android.view.animation.Animation: void cancel()>();

        r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation> = null;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating> = 0;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void destroySurfaceLocked()>();

     label1:
        return;
    }

    public void clearAnimation()
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.view.animation.Animation $r1, $r2;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r1 == null goto label1;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 1;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating> = 0;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        virtualinvoke $r2.<android.view.animation.Animation: void cancel()>();

        r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation> = null;

     label1:
        return;
    }

    boolean commitFinishDrawingLocked(long)
    {
        com.android.server.wm.WindowStateAnimator r0;
        long l0;
        int i1, $i2;
        boolean z0, $z2;
        com.android.server.wm.AppWindowToken r1;
        com.android.server.wm.WindowState $r2, $r4;
        android.view.WindowManager$LayoutParams $r3;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        l0 := @parameter0: long;

        $i2 = r0.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i2 == 2 goto label1;

        return 0;

     label1:
        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 3;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r3 = $r2.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        i1 = $r3.<android.view.WindowManager$LayoutParams: int type>;

        z0 = 0;

        if i1 != 3 goto label2;

        z0 = 1;

     label2:
        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r1 = $r4.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if r1 == null goto label3;

        $z2 = r1.<com.android.server.wm.AppWindowToken: boolean allDrawn>;

        if $z2 != 0 goto label3;

        if z0 == 0 goto label4;

     label3:
        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: boolean performShowLocked()>();

     label4:
        return 1;
    }

    void computeShownFrameLocked()
    {
        com.android.server.wm.WindowStateAnimator r0, r14, $r17, $r29, $r36, $r40, $r54, $r61, $r71, $r78, $r100, $r101;
        boolean z0, z1, z2, $z3, $z6, $z7, $z8, $z12, $z15, $z18, $z22, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        android.view.animation.Transformation r1, r2, $r34, $r38, $r41, $r45, $r51, $r55, $r69, $r79;
        com.android.server.wm.WindowState r3, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r33, $r43, $r44, $r47, $r48, $r59, $r63, $r64, $r65, $r67, $r68, $r73, $r74, $r75, $r82, $r83, $r84, $r86, $r87, $r88, $r89, $r92, $r95, $r96, $r99;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i17, $i18, $i19, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        com.android.server.wm.ScreenRotationAnimation r4;
        android.graphics.Rect r5, r12, $r76;
        float[] r6, r11;
        android.graphics.Matrix r7, r13, $r46, $r52, $r56, $r57, $r58, $r80;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74;
        android.view.MagnificationSpec r8, r9;
        com.android.server.wm.DisplayMagnifier r10, $r31, $r50, $r97;
        com.android.server.wm.AppWindowAnimator r15, $r18, $r102, $r109;
        com.android.server.wm.WindowManagerService $r16, $r23, $r30, $r35, $r49, $r60, $r66, $r90, $r98, $r103;
        com.android.server.wm.WindowAnimator $r19, $r27, $r37, $r39, $r53, $r62, $r72, $r81, $r93;
        android.graphics.RectF $r32, $r70, $r77, $r85;
        android.view.WindowManager$LayoutParams $r42, $r94;
        byte $b13, $b15, $b20, $b21;
        com.android.server.wm.WindowManagerService$LayoutFields $r91;
        com.android.server.wm.AppWindowToken $r104, $r105;
        android.view.animation.Animation $r106, $r107, $r108, $r110;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation>;

        $r17 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowStateAnimator mAttachedWinAnimator>;

        if $r17 == null goto label21;

        $r101 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowStateAnimator mAttachedWinAnimator>;

        $z24 = $r101.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation>;

        if $z24 == 0 goto label21;

        $r100 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowStateAnimator mAttachedWinAnimator>;

        r1 = $r100.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

     label01:
        $r18 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        if $r18 == null goto label22;

        $r109 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $z31 = $r109.<com.android.server.wm.AppWindowAnimator: boolean hasTransformation>;

        if $z31 == 0 goto label22;

        $r102 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        r2 = $r102.<com.android.server.wm.AppWindowAnimator: android.view.animation.Transformation transformation>;

     label02:
        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        r3 = $r16.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mWallpaperTarget>;

        $z3 = r0.<com.android.server.wm.WindowStateAnimator: boolean mIsWallpaper>;

        if $z3 == 0 goto label05;

        if r3 == null goto label05;

        $r103 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $z25 = $r103.<com.android.server.wm.WindowManagerService: boolean mAnimateWallpaperWithTarget>;

        if $z25 == 0 goto label05;

        r14 = r3.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $z29 = r14.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation>;

        if $z29 == 0 goto label03;

        $r106 = r14.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r106 == null goto label03;

        $r110 = r14.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        $z32 = virtualinvoke $r110.<android.view.animation.Animation: boolean getDetachWallpaper()>();

        if $z32 != 0 goto label03;

        r1 = r14.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

     label03:
        $r105 = r3.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r105 != null goto label23;

        r15 = null;

     label04:
        if r15 == null goto label05;

        $z28 = r15.<com.android.server.wm.AppWindowAnimator: boolean hasTransformation>;

        if $z28 == 0 goto label05;

        $r107 = r15.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r107 == null goto label05;

        $r108 = r15.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        $z30 = virtualinvoke $r108.<android.view.animation.Animation: boolean getDetachWallpaper()>();

        if $z30 != 0 goto label05;

        r2 = r15.<com.android.server.wm.AppWindowAnimator: android.view.animation.Transformation transformation>;

     label05:
        $r20 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        i0 = virtualinvoke $r20.<com.android.server.wm.WindowState: int getDisplayId()>();

        $r19 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        r4 = virtualinvoke $r19.<com.android.server.wm.WindowAnimator: com.android.server.wm.ScreenRotationAnimation getScreenRotationAnimationLocked(int)>(i0);

        if r4 == null goto label24;

        $z27 = virtualinvoke r4.<com.android.server.wm.ScreenRotationAnimation: boolean isAnimating()>();

        if $z27 == 0 goto label24;

        z1 = 1;

     label06:
        if z0 != 0 goto label07;

        if r1 != null goto label07;

        if r2 != null goto label07;

        if z1 == 0 goto label27;

     label07:
        $r24 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r5 = $r24.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $r23 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        r6 = $r23.<com.android.server.wm.WindowManagerService: float[] mTmpFloats>;

        $r22 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r7 = $r22.<com.android.server.wm.WindowState: android.graphics.Matrix mTmpMatrix>;

        if z1 == 0 goto label26;

        $z15 = virtualinvoke r4.<com.android.server.wm.ScreenRotationAnimation: boolean isRotating()>();

        if $z15 == 0 goto label26;

        $i18 = virtualinvoke r5.<android.graphics.Rect: int width()>();

        f2 = (float) $i18;

        $i19 = virtualinvoke r5.<android.graphics.Rect: int height()>();

        f3 = (float) $i19;

        $b20 = f2 cmpl 1.0F;

        if $b20 < 0 goto label25;

        $b21 = f3 cmpl 1.0F;

        if $b21 < 0 goto label25;

        $f46 = 2.0F / f2;

        $f47 = 1.0F + $f46;

        $f45 = 2.0F / f3;

        $f48 = 1.0F + $f45;

        $f49 = f2 / 2.0F;

        $f44 = f3 / 2.0F;

        virtualinvoke r7.<android.graphics.Matrix: void setScale(float,float,float,float)>($f47, $f48, $f49, $f44);

     label08:
        $r21 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f6 = $r21.<com.android.server.wm.WindowState: float mGlobalScale>;

        $r25 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f7 = $r25.<com.android.server.wm.WindowState: float mGlobalScale>;

        virtualinvoke r7.<android.graphics.Matrix: boolean postScale(float,float)>($f6, $f7);

        if z0 == 0 goto label09;

        $r51 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        $r52 = virtualinvoke $r51.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r7.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r52);

     label09:
        $i7 = r5.<android.graphics.Rect: int left>;

        $r26 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i8 = $r26.<com.android.server.wm.WindowState: int mXOffset>;

        $i6 = $i7 + $i8;

        $f9 = (float) $i6;

        $i10 = r5.<android.graphics.Rect: int top>;

        $r28 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i9 = $r28.<com.android.server.wm.WindowState: int mYOffset>;

        $i11 = $i10 + $i9;

        $f8 = (float) $i11;

        virtualinvoke r7.<android.graphics.Matrix: boolean postTranslate(float,float)>($f9, $f8);

        if r1 == null goto label10;

        $r58 = virtualinvoke r1.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r7.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r58);

     label10:
        if r2 == null goto label11;

        $r57 = virtualinvoke r2.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r7.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r57);

     label11:
        $r27 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r29 = $r27.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        if $r29 == null goto label12;

        $r53 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r54 = $r53.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        $r55 = $r54.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mUniverseTransform>;

        $r56 = virtualinvoke $r55.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r7.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r56);

     label12:
        if z1 == 0 goto label13;

        $r45 = virtualinvoke r4.<com.android.server.wm.ScreenRotationAnimation: android.view.animation.Transformation getEnterTransformation()>();

        $r46 = virtualinvoke $r45.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r7.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r46);

     label13:
        $r30 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r31 = $r30.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayMagnifier mDisplayMagnifier>;

        if $r31 == null goto label14;

        $r47 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i17 = virtualinvoke $r47.<com.android.server.wm.WindowState: int getDisplayId()>();

        if $i17 != 0 goto label14;

        $r49 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r50 = $r49.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayMagnifier mDisplayMagnifier>;

        $r48 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r8 = virtualinvoke $r50.<com.android.server.wm.DisplayMagnifier: android.view.MagnificationSpec getMagnificationSpecForWindowLocked(com.android.server.wm.WindowState)>($r48);

        if r8 == null goto label14;

        $z12 = virtualinvoke r8.<android.view.MagnificationSpec: boolean isNop()>();

        if $z12 != 0 goto label14;

        $f40 = r8.<android.view.MagnificationSpec: float scale>;

        $f43 = r8.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r7.<android.graphics.Matrix: boolean postScale(float,float)>($f40, $f43);

        $f41 = r8.<android.view.MagnificationSpec: float offsetX>;

        $f42 = r8.<android.view.MagnificationSpec: float offsetY>;

        virtualinvoke r7.<android.graphics.Matrix: boolean postTranslate(float,float)>($f41, $f42);

     label14:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mHaveMatrix> = 1;

        virtualinvoke r7.<android.graphics.Matrix: void getValues(float[])>(r6);

        $f13 = r6[0];

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDx> = $f13;

        $f10 = r6[3];

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDx> = $f10;

        $f11 = r6[1];

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDy> = $f11;

        $f12 = r6[4];

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDy> = $f12;

        f0 = r6[2];

        f1 = r6[5];

        i1 = virtualinvoke r5.<android.graphics.Rect: int width()>();

        i2 = virtualinvoke r5.<android.graphics.Rect: int height()>();

        $r33 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r32 = $r33.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        $f18 = (float) i1;

        $f14 = f0 + $f18;

        $f17 = (float) i2;

        $f15 = f1 + $f17;

        virtualinvoke $r32.<android.graphics.RectF: void set(float,float,float,float)>(f0, f1, $f14, $f15);

        $f16 = r0.<com.android.server.wm.WindowStateAnimator: float mAlpha>;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f16;

        $r35 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $z6 = $r35.<com.android.server.wm.WindowManagerService: boolean mLimitedAlphaCompositing>;

        if $z6 == 0 goto label15;

        $r43 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r42 = $r43.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i12 = $r42.<android.view.WindowManager$LayoutParams: int format>;

        $z7 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i12);

        if $z7 == 0 goto label15;

        $r44 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f34 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDx>;

        $f35 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDx>;

        $f36 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDy>;

        $f37 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDy>;

        $z8 = virtualinvoke $r44.<com.android.server.wm.WindowState: boolean isIdentityMatrix(float,float,float,float)>($f34, $f35, $f36, $f37);

        if $z8 == 0 goto label20;

        $i16 = r5.<android.graphics.Rect: int left>;

        $f39 = (float) $i16;

        $b15 = f0 cmpl $f39;

        if $b15 != 0 goto label20;

        $i14 = r5.<android.graphics.Rect: int top>;

        $f38 = (float) $i14;

        $b13 = f1 cmpl $f38;

        if $b13 != 0 goto label20;

     label15:
        if z0 == 0 goto label16;

        $f29 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $r41 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        $f27 = virtualinvoke $r41.<android.view.animation.Transformation: float getAlpha()>();

        $f28 = $f29 * $f27;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f28;

     label16:
        if r1 == null goto label17;

        $f33 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $f30 = virtualinvoke r1.<android.view.animation.Transformation: float getAlpha()>();

        $f31 = $f33 * $f30;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f31;

     label17:
        if r2 == null goto label18;

        $f22 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $f23 = virtualinvoke r2.<android.view.animation.Transformation: float getAlpha()>();

        $f32 = $f22 * $f23;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f32;

     label18:
        $r37 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r36 = $r37.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        if $r36 == null goto label19;

        $f26 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $r39 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r40 = $r39.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        $r38 = $r40.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mUniverseTransform>;

        $f24 = virtualinvoke $r38.<android.view.animation.Transformation: float getAlpha()>();

        $f25 = $f26 * $f24;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f25;

     label19:
        if z1 == 0 goto label20;

        $f19 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $r34 = virtualinvoke r4.<com.android.server.wm.ScreenRotationAnimation: android.view.animation.Transformation getEnterTransformation()>();

        $f21 = virtualinvoke $r34.<android.view.animation.Transformation: float getAlpha()>();

        $f20 = $f19 * $f21;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f20;

     label20:
        return;

     label21:
        r1 = null;

        goto label01;

     label22:
        r2 = null;

        goto label02;

     label23:
        $r104 = r3.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        r15 = $r104.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        goto label04;

     label24:
        z1 = 0;

        goto label06;

     label25:
        virtualinvoke r7.<android.graphics.Matrix: void reset()>();

        goto label08;

     label26:
        virtualinvoke r7.<android.graphics.Matrix: void reset()>();

        goto label08;

     label27:
        $z18 = r0.<com.android.server.wm.WindowStateAnimator: boolean mIsWallpaper>;

        if $z18 == 0 goto label28;

        $r90 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r91 = $r90.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$LayoutFields mInnerFields>;

        $z26 = $r91.<com.android.server.wm.WindowManagerService$LayoutFields: boolean mWallpaperActionPending>;

        if $z26 != 0 goto label20;

     label28:
        $r62 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r61 = $r62.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        if $r61 == null goto label34;

        $r95 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r94 = $r95.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i33 = $r94.<android.view.WindowManager$LayoutParams: int type>;

        if $i33 == 2025 goto label34;

        $r92 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i32 = $r92.<com.android.server.wm.WindowState: int mBaseLayer>;

        $r93 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $i31 = $r93.<com.android.server.wm.WindowAnimator: int mAboveUniverseLayer>;

        if $i32 >= $i31 goto label34;

        z2 = 1;

     label29:
        $r60 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        r10 = $r60.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayMagnifier mDisplayMagnifier>;

        r9 = null;

        if r10 == null goto label30;

        $r99 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        i5 = virtualinvoke $r99.<com.android.server.wm.WindowState: int getDisplayId()>();

        r9 = null;

        if i5 != 0 goto label30;

        $r98 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r97 = $r98.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayMagnifier mDisplayMagnifier>;

        $r96 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r9 = virtualinvoke $r97.<com.android.server.wm.DisplayMagnifier: android.view.MagnificationSpec getMagnificationSpecForWindowLocked(com.android.server.wm.WindowState)>($r96);

     label30:
        if z2 != 0 goto label31;

        if r9 == null goto label35;

     label31:
        $r59 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r12 = $r59.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $r66 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        r11 = $r66.<com.android.server.wm.WindowManagerService: float[] mTmpFloats>;

        $r65 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r13 = $r65.<com.android.server.wm.WindowState: android.graphics.Matrix mTmpMatrix>;

        $r64 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f56 = $r64.<com.android.server.wm.WindowState: float mGlobalScale>;

        $r63 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f55 = $r63.<com.android.server.wm.WindowState: float mGlobalScale>;

        virtualinvoke r13.<android.graphics.Matrix: void setScale(float,float)>($f56, $f55);

        $i26 = r12.<android.graphics.Rect: int left>;

        $r67 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i24 = $r67.<com.android.server.wm.WindowState: int mXOffset>;

        $i27 = $i26 + $i24;

        $f51 = (float) $i27;

        $i22 = r12.<android.graphics.Rect: int top>;

        $r68 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i25 = $r68.<com.android.server.wm.WindowState: int mYOffset>;

        $i23 = $i22 + $i25;

        $f50 = (float) $i23;

        virtualinvoke r13.<android.graphics.Matrix: boolean postTranslate(float,float)>($f51, $f50);

        if z2 == 0 goto label32;

        $r81 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r78 = $r81.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        $r79 = $r78.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mUniverseTransform>;

        $r80 = virtualinvoke $r79.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r13.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r80);

     label32:
        if r9 == null goto label33;

        $z22 = virtualinvoke r9.<android.view.MagnificationSpec: boolean isNop()>();

        if $z22 != 0 goto label33;

        $f69 = r9.<android.view.MagnificationSpec: float scale>;

        $f68 = r9.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r13.<android.graphics.Matrix: boolean postScale(float,float)>($f69, $f68);

        $f67 = r9.<android.view.MagnificationSpec: float offsetX>;

        $f66 = r9.<android.view.MagnificationSpec: float offsetY>;

        virtualinvoke r13.<android.graphics.Matrix: boolean postTranslate(float,float)>($f67, $f66);

     label33:
        virtualinvoke r13.<android.graphics.Matrix: void getValues(float[])>(r11);

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHaveMatrix> = 1;

        $f54 = r11[0];

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDx> = $f54;

        $f52 = r11[3];

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDx> = $f52;

        $f53 = r11[1];

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDy> = $f53;

        $f65 = r11[4];

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDy> = $f65;

        f4 = r11[2];

        f5 = r11[5];

        i3 = virtualinvoke r12.<android.graphics.Rect: int width()>();

        i4 = virtualinvoke r12.<android.graphics.Rect: int height()>();

        $r73 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r70 = $r73.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        $f62 = (float) i3;

        $f63 = f4 + $f62;

        $f61 = (float) i4;

        $f64 = f5 + $f61;

        virtualinvoke $r70.<android.graphics.RectF: void set(float,float,float,float)>(f4, f5, $f63, $f64);

        $f60 = r0.<com.android.server.wm.WindowStateAnimator: float mAlpha>;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f60;

        if z2 == 0 goto label20;

        $f57 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $r72 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r71 = $r72.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        $r69 = $r71.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mUniverseTransform>;

        $f59 = virtualinvoke $r69.<android.view.animation.Transformation: float getAlpha()>();

        $f58 = $f57 * $f59;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f58;

        return;

     label34:
        z2 = 0;

        goto label29;

     label35:
        $r74 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r77 = $r74.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        $r75 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r76 = $r75.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        virtualinvoke $r77.<android.graphics.RectF: void set(android.graphics.Rect)>($r76);

        $r89 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i30 = $r89.<com.android.server.wm.WindowState: int mXOffset>;

        if $i30 != 0 goto label36;

        $r82 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i34 = $r82.<com.android.server.wm.WindowState: int mYOffset>;

        if $i34 == 0 goto label37;

     label36:
        $r88 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r85 = $r88.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        $r87 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i29 = $r87.<com.android.server.wm.WindowState: int mXOffset>;

        $f73 = (float) $i29;

        $r86 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i28 = $r86.<com.android.server.wm.WindowState: int mYOffset>;

        $f74 = (float) $i28;

        virtualinvoke $r85.<android.graphics.RectF: void offset(float,float)>($f73, $f74);

     label37:
        $f72 = r0.<com.android.server.wm.WindowStateAnimator: float mAlpha>;

        r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha> = $f72;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHaveMatrix> = 0;

        $r84 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f71 = $r84.<com.android.server.wm.WindowState: float mGlobalScale>;

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDx> = $f71;

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDx> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mDsDy> = 0.0F;

        $r83 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f70 = $r83.<com.android.server.wm.WindowState: float mGlobalScale>;

        r0.<com.android.server.wm.WindowStateAnimator: float mDtDy> = $f70;

        return;
    }

    android.view.SurfaceControl createSurfaceLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        short s0;
        android.view.WindowManager$LayoutParams r1;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Exception r2, $r51;
        boolean z0, $z1;
        java.lang.Throwable r4, $r58;
        java.lang.RuntimeException r5, $r52;
        android.view.SurfaceControl $r6, $r7, $r19, $r31, $r36, $r37, $r38;
        com.android.server.wm.AppWindowToken $r8, $r35, $r40, $r42, $r46;
        com.android.server.wm.WindowState $r9, $r11, $r12, $r13, $r16, $r18, $r25, $r26, $r27, $r28, $r30, $r32, $r33, $r34, $r39, $r41, $r45, $r50, $r53;
        com.android.server.wm.WindowManagerService $r10, $r55, $r57;
        android.graphics.Rect $r14, $r15, $r17, $r24, $r29;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.CharSequence $r20;
        java.lang.String $r21, $r56;
        com.android.server.wm.Session $r22;
        android.view.SurfaceSession $r23;
        com.android.server.wm.AppWindowAnimator $r43;
        android.view.animation.Animation $r44;
        java.lang.StringBuilder $r47, $r48, $r49;
        android.view.Surface$OutOfResourcesException $r54;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r6 != null goto label15;

        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 1;

        $r9 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r8 = $r9.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r8 == null goto label01;

        $r34 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r35 = $r34.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r43 = $r35.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r44 = $r43.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r44 != null goto label16;

        $r39 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r40 = $r39.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r40.<com.android.server.wm.AppWindowToken: boolean allDrawn> = 0;

        $r41 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r42 = $r41.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r42.<com.android.server.wm.AppWindowToken: boolean deferClearAllDrawn> = 0;

     label01:
        $r10 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void makeWindowFreezingScreenIfNeededLocked(com.android.server.wm.WindowState)>($r11);

        s0 = 4;

        $r12 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r1 = $r12.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i4 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i5 = 8192 & $i4;

        if $i5 == 0 goto label02;

        s0 = 132;

     label02:
        $r13 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r14 = $r13.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        i1 = virtualinvoke $r14.<android.graphics.Rect: int width()>();

        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r15 = $r16.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        i2 = virtualinvoke $r15.<android.graphics.Rect: int height()>();

        $i6 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i7 = 16384 & $i6;

        if $i7 == 0 goto label03;

        $r32 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        i1 = $r32.<com.android.server.wm.WindowState: int mRequestedWidth>;

        $r33 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        i2 = $r33.<com.android.server.wm.WindowState: int mRequestedHeight>;

     label03:
        if i1 > 0 goto label04;

        i1 = 1;

     label04:
        if i2 > 0 goto label05;

        i2 = 1;

     label05:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: int mSurfaceLayer> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceAlpha> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX> = 0.0F;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY> = 0.0F;

        $f0 = (float) i1;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceW> = $f0;

        $f1 = (float) i2;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceH> = $f1;

        $r18 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r17 = $r18.<com.android.server.wm.WindowState: android.graphics.Rect mLastSystemDecorRect>;

        virtualinvoke $r17.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label06:
        $i8 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i9 = 16777216 & $i8;

        if $i9 == 0 goto label17;

     label07:
        z0 = 1;

        goto label26;

     label08:
        $i10 = r1.<android.view.WindowManager$LayoutParams: int format>;

        $z1 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i10);

        if $z1 != 0 goto label10;

     label09:
        s0 = s0 | 1024;

     label10:
        $r19 = new android.view.SurfaceControl;

        $r22 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.Session mSession>;

        $r23 = $r22.<com.android.server.wm.Session: android.view.SurfaceSession mSurfaceSession>;

        $r20 = virtualinvoke r1.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<android.view.SurfaceControl: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>($r23, $r21, i1, i2, i3, s0);

        r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl> = $r19;

        $r26 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r26.<com.android.server.wm.WindowState: boolean mHasSurface> = 1;

     label11:
        staticinvoke <android.view.SurfaceControl: void openTransaction()>();

     label12:
        $r27 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r24 = $r27.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i12 = $r24.<android.graphics.Rect: int left>;

        $r25 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i13 = $r25.<com.android.server.wm.WindowState: int mXOffset>;

        $i11 = $i12 + $i13;

        $f2 = (float) $i11;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX> = $f2;

        $r30 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r29 = $r30.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i16 = $r29.<android.graphics.Rect: int top>;

        $r28 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i14 = $r28.<com.android.server.wm.WindowState: int mYOffset>;

        $i15 = $i16 + $i14;

        $f4 = (float) $i15;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY> = $f4;

        $r31 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $f5 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX>;

        $f3 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY>;

        virtualinvoke $r31.<android.view.SurfaceControl: void setPosition(float,float)>($f5, $f3);

        $i18 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        r0.<com.android.server.wm.WindowStateAnimator: int mSurfaceLayer> = $i18;

        $r36 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $i17 = r0.<com.android.server.wm.WindowStateAnimator: int mLayerStack>;

        virtualinvoke $r36.<android.view.SurfaceControl: void setLayerStack(int)>($i17);

        $r37 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $i19 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        virtualinvoke $r37.<android.view.SurfaceControl: void setLayer(int)>($i19);

        $r38 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r38.<android.view.SurfaceControl: void setAlpha(float)>(0.0F);

        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown> = 0;

     label13:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden> = 1;

     label14:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

     label15:
        $r7 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        return $r7;

     label16:
        $r45 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r46 = $r45.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r46.<com.android.server.wm.AppWindowToken: boolean deferClearAllDrawn> = 1;

        goto label01;

     label17:
        z0 = 0;

        goto label26;

     label18:
        i3 = r1.<android.view.WindowManager$LayoutParams: int format>;

     label19:
        goto label08;

     label20:
        $r54 := @caughtexception;

        $r53 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r53.<com.android.server.wm.WindowState: boolean mHasSurface> = 0;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowStateAnimator", "OutOfResourcesException creating surface");

        $r55 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r55.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "create", 1);

        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 0;

        return null;

     label21:
        $r51 := @caughtexception;

        r2 = $r51;

        $r50 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r50.<com.android.server.wm.WindowState: boolean mHasSurface> = 0;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", "Exception creating surface", r2);

        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 0;

        return null;

     label22:
        $r52 := @caughtexception;

        r5 = $r52;

     label23:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating surface in ");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r56 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r56, r5);

        $r57 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r57.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "create-init", 1);

     label24:
        goto label13;

     label25:
        $r58 := @caughtexception;

        r4 = $r58;

        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        throw r4;

     label26:
        if z0 == 0 goto label18;

        i3 = -3;

        goto label08;

        catch android.view.Surface$OutOfResourcesException from label06 to label07 with label20;
        catch java.lang.Exception from label06 to label07 with label21;
        catch android.view.Surface$OutOfResourcesException from label08 to label09 with label20;
        catch java.lang.Exception from label08 to label09 with label21;
        catch android.view.Surface$OutOfResourcesException from label10 to label11 with label20;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.RuntimeException from label12 to label13 with label22;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch android.view.Surface$OutOfResourcesException from label18 to label19 with label20;
        catch java.lang.Exception from label18 to label19 with label21;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    void destroyDeferredSurfaceLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        java.lang.RuntimeException r1, $r6;
        android.view.SurfaceControl $r2, $r3, $r11;
        com.android.server.wm.WindowState $r4;
        com.android.server.wm.WindowAnimator $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r17;
        com.android.server.wm.Session $r14;
        java.lang.String $r18, $r19;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

     label1:
        $r2 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        virtualinvoke $r3.<android.view.SurfaceControl: void destroy()>();

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r5.<com.android.server.wm.WindowAnimator: void hideWallpapersLocked(com.android.server.wm.WindowState)>($r4);

     label2:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceDestroyDeferred> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface> = null;

        return;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when destroying Window ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" surface ");

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session ");

        $r14 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.Session mSession>;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r18 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowStateAnimator", $r19);

        goto label2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    void destroySurfaceLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        int i0;
        java.lang.RuntimeException r1, $r28;
        com.android.server.wm.WindowState $r2, $r5, $r8, $r10, $r18, $r19, $r22, $r23, $r24, $r26;
        com.android.server.wm.AppWindowToken $r3, $r21, $r25;
        android.view.SurfaceControl $r4, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r34;
        com.android.server.wm.WindowList $r6, $r17;
        boolean $z0;
        com.android.server.wm.WindowAnimator $r9;
        java.lang.Object $r20;
        java.lang.StringBuilder $r27, $r29, $r30, $r31, $r32, $r35, $r37, $r38, $r39;
        com.android.server.wm.Session $r33;
        java.lang.String $r36, $r40;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r3 = $r2.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r3 == null goto label01;

        $r23 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r22 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r21 = $r22.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r24 = $r21.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

        if $r23 != $r24 goto label01;

        $r26 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r25 = $r26.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r25.<com.android.server.wm.AppWindowToken: boolean startingDisplayed> = 0;

     label01:
        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r4 == null goto label07;

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r6 = $r5.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        i0 = virtualinvoke $r6.<com.android.server.wm.WindowList: int size()>();

     label02:
        if i0 <= 0 goto label03;

        i0 = i0 + -1;

        $r18 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r17 = $r18.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        $r20 = virtualinvoke $r17.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        $r19 = (com.android.server.wm.WindowState) $r20;

        $r19.<com.android.server.wm.WindowState: boolean mAttachedHidden> = 1;

        goto label02;

     label03:
        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceDestroyDeferred>;

        if $z0 == 0 goto label08;

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r11 == null goto label05;

        $r14 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        $r12 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r14 == $r12 goto label05;

        $r13 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        if $r13 == null goto label04;

        $r15 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        virtualinvoke $r15.<android.view.SurfaceControl: void destroy()>();

     label04:
        $r16 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface> = $r16;

     label05:
        $r9 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r8 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r9.<com.android.server.wm.WindowAnimator: void hideWallpapersLocked(com.android.server.wm.WindowState)>($r8);

     label06:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl> = null;

        $r10 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r10.<com.android.server.wm.WindowState: boolean mHasSurface> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 0;

     label07:
        return;

     label08:
        $r7 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r7.<android.view.SurfaceControl: void destroy()>();

     label09:
        goto label05;

     label10:
        $r28 := @caughtexception;

        r1 = $r28;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when destroying Window ");

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" surface ");

        $r34 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" session ");

        $r33 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.Session mSession>;

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r36 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.String toString()>();

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowStateAnimator", $r40);

        goto label06;

        catch java.lang.RuntimeException from label03 to label04 with label10;
        catch java.lang.RuntimeException from label04 to label05 with label10;
        catch java.lang.RuntimeException from label05 to label06 with label10;
        catch java.lang.RuntimeException from label08 to label09 with label10;
    }

    public void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        com.android.server.wm.WindowStateAnimator r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        android.view.animation.Animation $r3, $r15;
        android.view.animation.Transformation $r4, $r12;
        android.view.SurfaceControl $r5, $r6, $r11, $r13;
        android.view.WindowManager$LayoutParams $r7;
        com.android.server.wm.WindowState $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        int $i0, $i5, $i6;
        byte $b1, $b2, $b3, $b4;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        if $z1 != 0 goto label01;

        $z14 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z14 != 0 goto label01;

        $z17 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimationIsEntrance>;

        if $z17 != 0 goto label01;

        $r15 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r15 == null goto label02;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mAnimating=");

        $z2 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLocalAnimating=");

        $z3 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAnimationIsEntrance=");

        $z4 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimationIsEntrance>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAnimation=");

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

     label02:
        $z5 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHasTransformation>;

        if $z5 != 0 goto label03;

        $z15 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation>;

        if $z15 == 0 goto label04;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("XForm: has=");

        $z6 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHasTransformation>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" hasLocal=");

        $z7 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r4.<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label04:
        $r5 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r5 == null goto label06;

        if z0 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mSurface=");

        $r13 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mDrawState=");

        $i6 = r0.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        $r14 = staticinvoke <com.android.server.wm.WindowStateAnimator: java.lang.String drawStateToString(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLastHidden=");

        $z16 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z16);

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Surface: shown=");

        $z12 = r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" layer=");

        $i5 = r0.<com.android.server.wm.WindowStateAnimator: int mSurfaceLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" alpha=");

        $f14 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceAlpha>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" rect=(");

        $f12 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $f13 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(") ");

        $f16 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceW>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" x ");

        $f15 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceH>;

        virtualinvoke r1.<java.io.PrintWriter: void println(float)>($f15);

     label06:
        $r6 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        if $r6 == null goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mPendingDestroySurface=");

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mPendingDestroySurface>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r11);

     label07:
        $z8 = r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceResized>;

        if $z8 != 0 goto label08;

        $z13 = r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceDestroyDeferred>;

        if $z13 == 0 goto label09;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mSurfaceResized=");

        $z10 = r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceResized>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mSurfaceDestroyDeferred=");

        $z9 = r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceDestroyDeferred>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z9);

     label09:
        $r8 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r7 = $r8.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r7.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 != 2025 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mUniverseTransform=");

        $r12 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mUniverseTransform>;

        virtualinvoke $r12.<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label10:
        $f0 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $b1 = $f0 cmpl 1.0F;

        if $b1 != 0 goto label11;

        $f11 = r0.<com.android.server.wm.WindowStateAnimator: float mAlpha>;

        $b4 = $f11 cmpl 1.0F;

        if $b4 != 0 goto label11;

        $f10 = r0.<com.android.server.wm.WindowStateAnimator: float mLastAlpha>;

        $b3 = $f10 cmpl 1.0F;

        if $b3 == 0 goto label12;

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mShownAlpha=");

        $f1 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mAlpha=");

        $f3 = r0.<com.android.server.wm.WindowStateAnimator: float mAlpha>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLastAlpha=");

        $f2 = r0.<com.android.server.wm.WindowStateAnimator: float mLastAlpha>;

        virtualinvoke r1.<java.io.PrintWriter: void println(float)>($f2);

     label12:
        $z11 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHaveMatrix>;

        if $z11 != 0 goto label13;

        $r10 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f8 = $r10.<com.android.server.wm.WindowState: float mGlobalScale>;

        $b2 = $f8 cmpl 1.0F;

        if $b2 == 0 goto label14;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mGlobalScale=");

        $r9 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $f5 = $r9.<com.android.server.wm.WindowState: float mGlobalScale>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDsDx=");

        $f4 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDx>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDtDx=");

        $f7 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDx>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDsDy=");

        $f6 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mDtDy=");

        $f9 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDy>;

        virtualinvoke r1.<java.io.PrintWriter: void println(float)>($f9);

     label14:
        return;
    }

    boolean finishDrawingLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $i0 = r0.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i0 != 1 goto label1;

        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 2;

        return 1;

     label1:
        return 0;
    }

    void finishExit()
    {
        com.android.server.wm.WindowStateAnimator r0, $r20;
        int i0, i1;
        com.android.server.wm.WindowState $r1, $r3, $r5, $r6, $r7, $r11, $r12, $r13, $r16, $r17, $r21;
        com.android.server.wm.WindowList $r2, $r19;
        boolean $z0, $z1, $z2;
        android.view.SurfaceControl $r4;
        com.android.server.wm.WindowAnimator $r8;
        com.android.server.wm.WindowManagerService $r9, $r14;
        java.util.ArrayList $r10, $r15;
        java.lang.Object $r18;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r2 = $r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r19 = $r16.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        $r18 = virtualinvoke $r19.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r21 = (com.android.server.wm.WindowState) $r18;

        $r20 = $r21.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke $r20.<com.android.server.wm.WindowStateAnimator: void finishExit()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z0 = $r3.<com.android.server.wm.WindowState: boolean mExiting>;

        if $z0 != 0 goto label4;

     label3:
        return;

     label4:
        $z1 = virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: boolean isWindowAnimating()>();

        if $z1 != 0 goto label3;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r4 == null goto label5;

        $r14 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r15 = $r14.<com.android.server.wm.WindowManagerService: java.util.ArrayList mDestroySurface>;

        $r13 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        $r17 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r17.<com.android.server.wm.WindowState: boolean mDestroying> = 1;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void hide()>();

     label5:
        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r5.<com.android.server.wm.WindowState: boolean mExiting> = 0;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z2 = $r6.<com.android.server.wm.WindowState: boolean mRemoveOnExit>;

        if $z2 == 0 goto label6;

        $r9 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: java.util.ArrayList mPendingRemove>;

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r12.<com.android.server.wm.WindowState: boolean mRemoveOnExit> = 0;

     label6:
        $r8 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r7 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r8.<com.android.server.wm.WindowAnimator: void hideWallpapersLocked(com.android.server.wm.WindowState)>($r7);

        return;
    }

    void hide()
    {
        com.android.server.wm.WindowStateAnimator r0;
        boolean $z0;
        android.view.SurfaceControl $r2, $r3;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        com.android.server.wm.WindowState $r7;
        java.lang.String $r9;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden>;

        if $z0 != 0 goto label2;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden> = 1;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r2 == null goto label2;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown> = 0;

     label1:
        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void hide()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception hiding surface in ");

        $r7 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowStateAnimator", $r9);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    boolean isAnimating()
    {
        com.android.server.wm.WindowStateAnimator r0, $r2, $r8;
        android.view.animation.Animation $r1, $r5, $r9;
        com.android.server.wm.AppWindowAnimator $r3, $r4, $r6;
        com.android.server.wm.AppWindowToken $r7;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r1 != null goto label2;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowStateAnimator mAttachedWinAnimator>;

        if $r2 == null goto label1;

        $r8 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowStateAnimator mAttachedWinAnimator>;

        $r9 = $r8.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r9 != null goto label2;

     label1:
        $r3 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r5 = $r4.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r5 != null goto label2;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r7 = $r6.<com.android.server.wm.AppWindowAnimator: com.android.server.wm.AppWindowToken mAppToken>;

        $z0 = $r7.<com.android.server.wm.AppWindowToken: boolean inPendingTransaction>;

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    boolean isDummyAnimation()
    {
        com.android.server.wm.WindowStateAnimator r0;
        com.android.server.wm.AppWindowAnimator $r1, $r2;
        android.view.animation.Animation $r3, $r4;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r4 = $r2.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        $r3 = <com.android.server.wm.AppWindowAnimator: android.view.animation.Animation sDummyAnimation>;

        if $r4 != $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isWindowAnimating()
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.view.animation.Animation $r1;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r1 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean performShowLocked()
    {
        com.android.server.wm.WindowStateAnimator r0, $r26, $r31;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.wm.WindowState r1, $r2, $r3, $r6, $r8, $r11, $r13, $r15, $r16, $r21, $r23, $r39, $r41;
        boolean $z0, $z1, $z4;
        com.android.server.wm.WindowManagerService $r4, $r5, $r18, $r24, $r33;
        com.android.server.wm.WindowList $r7, $r27;
        android.view.WindowManager$LayoutParams $r9, $r38;
        com.android.server.wm.AppWindowToken $r10, $r12, $r14, $r19, $r20;
        com.android.server.wm.StartingData $r17;
        java.util.ArrayList $r22;
        com.android.server.wm.WindowManagerService$H $r25;
        java.lang.Object $r28;
        com.android.server.wm.DisplayContent $r29;
        android.view.SurfaceControl $r30;
        java.lang.StringBuilder $r32, $r34, $r35, $r36, $r37, $r40, $r42, $r43, $r45;
        java.lang.String $r44;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.WindowState: boolean isHiddenFromUserLocked()>();

        if $z0 == 0 goto label2;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("current user violation ");

        $r33 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $i3 = $r33.<com.android.server.wm.WindowManagerService: int mCurrentUserId>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trying to display ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ");

        $r39 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r38 = $r39.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i4 = $r38.<android.view.WindowManager$LayoutParams: int type>;

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", belonging to ");

        $r41 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i5 = $r41.<com.android.server.wm.WindowState: int mOwnerUid>;

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowStateAnimator", $r44);

     label1:
        return 0;

     label2:
        $i1 = r0.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i1 != 3 goto label1;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z1 = virtualinvoke $r3.<com.android.server.wm.WindowState: boolean isReadyForDisplayIgnoringKeyguard()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void enableScreenIfNeededLocked()>();

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void applyEnterAnimationLocked()>();

        r0.<com.android.server.wm.WindowStateAnimator: float mLastAlpha> = -1.0F;

        r0.<com.android.server.wm.WindowStateAnimator: int mDrawState> = 4;

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>();

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r7 = $r6.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        i0 = virtualinvoke $r7.<com.android.server.wm.WindowList: int size()>();

     label3:
        if i0 <= 0 goto label4;

        i0 = i0 + -1;

        $r23 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r27 = $r23.<com.android.server.wm.WindowState: com.android.server.wm.WindowList mChildWindows>;

        $r28 = virtualinvoke $r27.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.wm.WindowState) $r28;

        $z4 = r1.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z4 == 0 goto label3;

        r1.<com.android.server.wm.WindowState: boolean mAttachedHidden> = 0;

        $r26 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        $r30 = $r26.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r30 == null goto label3;

        $r31 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowStateAnimator mWinAnimator>;

        virtualinvoke $r31.<com.android.server.wm.WindowStateAnimator: boolean performShowLocked()>();

        $r29 = r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r29.<com.android.server.wm.DisplayContent: boolean layoutNeeded> = 1;

        goto label3;

     label4:
        $r8 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r9 = $r8.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i2 = $r9.<android.view.WindowManager$LayoutParams: int type>;

        if $i2 == 3 goto label6;

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r10 = $r11.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r10 == null goto label6;

        $r13 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r12 = $r13.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r12.<com.android.server.wm.AppWindowToken: boolean firstWindowDrawn> = 1;

        $r15 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r14 = $r15.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r17 = $r14.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData>;

        if $r17 == null goto label5;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void clearAnimation()>();

        $r18 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r22 = $r18.<com.android.server.wm.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $r21 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r20 = $r21.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r24 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r25 = $r24.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        virtualinvoke $r25.<com.android.server.wm.WindowManagerService$H: boolean sendEmptyMessage(int)>(7);

     label5:
        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r19 = $r16.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        virtualinvoke $r19.<com.android.server.wm.AppWindowToken: void updateReportedVisibilityLocked()>();

     label6:
        return 1;
    }

    public void prepareSurfaceLocked(boolean)
    {
        com.android.server.wm.WindowStateAnimator r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.server.wm.WindowState r1, $r16;
        com.android.server.wm.WindowAnimator r2, $r5, $r7, $r14;
        java.lang.RuntimeException r3, $r21;
        android.view.SurfaceControl $r4, $r8, $r9, $r10, $r11, $r13;
        com.android.server.wm.WindowToken $r6, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34;
        byte $b9, $b10, $b11, $b12, $b13, $b14, $b15;
        com.android.server.wm.WindowManagerService $r15, $r22;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r18;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r4 != null goto label02;

        $z12 = r1.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        if $z12 == 0 goto label01;

        r1.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

     label01:
        return;

     label02:
        z1 = 0;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void computeShownFrameLocked()>();

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void setSurfaceBoundariesLocked(boolean)>(z0);

        $z3 = r0.<com.android.server.wm.WindowStateAnimator: boolean mIsWallpaper>;

        if $z3 == 0 goto label05;

        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z13 = $r16.<com.android.server.wm.WindowState: boolean mWallpaperVisible>;

        if $z13 != 0 goto label05;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void hide()>();

     label03:
        if z1 == 0 goto label01;

        $z5 = r1.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        if $z5 == 0 goto label04;

        $z6 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isDrawnLw()>();

        if $z6 != 0 goto label17;

        r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $i0 = r2.<com.android.server.wm.WindowAnimator: int mBulkUpdateParams>;

        $i1 = -9 & $i0;

        r2.<com.android.server.wm.WindowAnimator: int mBulkUpdateParams> = $i1;

        $r7 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r7.<com.android.server.wm.WindowAnimator: java.lang.Object mLastWindowFreezeSource> = r1;

     label04:
        $r6 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken>;

        $r6.<com.android.server.wm.WindowToken: boolean hasVisible> = 1;

        return;

     label05:
        $z4 = r1.<com.android.server.wm.WindowState: boolean mAttachedHidden>;

        if $z4 != 0 goto label06;

        $z7 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isOnScreen()>();

        if $z7 != 0 goto label07;

     label06:
        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void hide()>();

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        virtualinvoke $r5.<com.android.server.wm.WindowAnimator: void hideWallpapersLocked(com.android.server.wm.WindowState)>(r1);

        z2 = r1.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        z1 = 0;

        if z2 == 0 goto label03;

        r1.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

        z1 = 0;

        goto label03;

     label07:
        $i2 = r0.<com.android.server.wm.WindowStateAnimator: int mLastLayer>;

        $i3 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        if $i2 != $i3 goto label08;

        $f21 = r0.<com.android.server.wm.WindowStateAnimator: float mLastAlpha>;

        $f22 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        $b9 = $f21 cmpl $f22;

        if $b9 != 0 goto label08;

        $f24 = r0.<com.android.server.wm.WindowStateAnimator: float mLastDsDx>;

        $f25 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDx>;

        $b10 = $f24 cmpl $f25;

        if $b10 != 0 goto label08;

        $f28 = r0.<com.android.server.wm.WindowStateAnimator: float mLastDtDx>;

        $f23 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDx>;

        $b13 = $f28 cmpl $f23;

        if $b13 != 0 goto label08;

        $f30 = r0.<com.android.server.wm.WindowStateAnimator: float mLastDsDy>;

        $f29 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDy>;

        $b11 = $f30 cmpl $f29;

        if $b11 != 0 goto label08;

        $f27 = r0.<com.android.server.wm.WindowStateAnimator: float mLastDtDy>;

        $f26 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDy>;

        $b12 = $f27 cmpl $f26;

        if $b12 != 0 goto label08;

        $f33 = r1.<com.android.server.wm.WindowState: float mLastHScale>;

        $f32 = r1.<com.android.server.wm.WindowState: float mHScale>;

        $b15 = $f33 cmpl $f32;

        if $b15 != 0 goto label08;

        $f31 = r1.<com.android.server.wm.WindowState: float mLastVScale>;

        $f34 = r1.<com.android.server.wm.WindowState: float mVScale>;

        $b14 = $f31 cmpl $f34;

        if $b14 != 0 goto label08;

        $z11 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden>;

        if $z11 == 0 goto label16;

     label08:
        z1 = 1;

        $f0 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastAlpha> = $f0;

        $i4 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        r0.<com.android.server.wm.WindowStateAnimator: int mLastLayer> = $i4;

        $f2 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDx>;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDsDx> = $f2;

        $f1 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDx>;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDtDx> = $f1;

        $f4 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDy>;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDsDy> = $f4;

        $f3 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDy>;

        r0.<com.android.server.wm.WindowStateAnimator: float mLastDtDy> = $f3;

        $f6 = r1.<com.android.server.wm.WindowState: float mHScale>;

        r1.<com.android.server.wm.WindowState: float mLastHScale> = $f6;

        $f5 = r1.<com.android.server.wm.WindowState: float mVScale>;

        r1.<com.android.server.wm.WindowState: float mLastVScale> = $f5;

        $r8 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r8 == null goto label03;

     label09:
        $f7 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceAlpha> = $f7;

        $r9 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $f8 = r0.<com.android.server.wm.WindowStateAnimator: float mShownAlpha>;

        virtualinvoke $r9.<android.view.SurfaceControl: void setAlpha(float)>($f8);

        $i5 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        r0.<com.android.server.wm.WindowStateAnimator: int mSurfaceLayer> = $i5;

        $r10 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $i6 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        virtualinvoke $r10.<android.view.SurfaceControl: void setLayer(int)>($i6);

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $f12 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDx>;

        $f9 = r1.<com.android.server.wm.WindowState: float mHScale>;

        $f18 = $f12 * $f9;

        $f10 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDx>;

        $f13 = r1.<com.android.server.wm.WindowState: float mVScale>;

        $f20 = $f10 * $f13;

        $f16 = r0.<com.android.server.wm.WindowStateAnimator: float mDsDy>;

        $f11 = r1.<com.android.server.wm.WindowState: float mHScale>;

        $f19 = $f16 * $f11;

        $f14 = r0.<com.android.server.wm.WindowStateAnimator: float mDtDy>;

        $f17 = r1.<com.android.server.wm.WindowState: float mVScale>;

        $f15 = $f14 * $f17;

        virtualinvoke $r11.<android.view.SurfaceControl: void setMatrix(float,float,float,float)>($f18, $f20, $f19, $f15);

        $z8 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden>;

        if $z8 == 0 goto label11;

        $i7 = r0.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i7 != 4 goto label11;

        $z10 = virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: boolean showSurfaceRobustlyLocked()>();

        if $z10 == 0 goto label14;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden> = 0;

        $z9 = r0.<com.android.server.wm.WindowStateAnimator: boolean mIsWallpaper>;

        if $z9 == 0 goto label10;

        $r15 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r15.<com.android.server.wm.WindowManagerService: void dispatchWallpaperVisibility(com.android.server.wm.WindowState,boolean)>(r1, 1);

     label10:
        $r14 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $i8 = virtualinvoke r1.<com.android.server.wm.WindowState: int getDisplayId()>();

        virtualinvoke $r14.<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)>($i8, 8);

     label11:
        $r13 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r13 == null goto label03;

        $r12 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken>;

        $r12.<com.android.server.wm.WindowToken: boolean hasVisible> = 1;

     label12:
        goto label03;

     label13:
        $r21 := @caughtexception;

        r3 = $r21;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error updating surface in ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r18, r3);

        if z0 != 0 goto label03;

        $r22 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r22.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "update", 1);

        goto label03;

     label14:
        r1.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

     label15:
        goto label11;

     label16:
        z1 = 1;

        goto label03;

     label17:
        r1.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

        goto label04;

        catch java.lang.RuntimeException from label09 to label10 with label13;
        catch java.lang.RuntimeException from label10 to label11 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label13;
        catch java.lang.RuntimeException from label14 to label15 with label13;
    }

    public void setAnimation(android.view.animation.Animation)
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.view.animation.Animation r1, $r3, $r5;
        android.view.animation.Transformation r2, $r6;
        float f0, $f1;
        com.android.server.wm.WindowManagerService $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        r1 := @parameter0: android.view.animation.Animation;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation> = r1;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        virtualinvoke $r3.<android.view.animation.Animation: void restrictDuration(long)>(10000L);

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $f1 = $r4.<com.android.server.wm.WindowManagerService: float mWindowAnimationScale>;

        virtualinvoke $r5.<android.view.animation.Animation: void scaleCurrentDuration(float)>($f1);

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r6.<android.view.animation.Transformation: void clear()>();

        r2 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLastHidden>;

        if $z0 == 0 goto label2;

        f0 = 0.0F;

     label1:
        virtualinvoke r2.<android.view.animation.Transformation: void setAlpha(float)>(f0);

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation> = 1;

        return;

     label2:
        f0 = 1.0F;

        goto label1;
    }

    void setSurfaceBoundariesLocked(boolean)
    {
        com.android.server.wm.WindowStateAnimator r0;
        boolean z0, z1;
        com.android.server.wm.WindowState r1;
        int i0, i1, i2, $i3, $i4, $i7, $i9;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.RuntimeException r2, r3, $r16, $r25;
        android.view.WindowManager$LayoutParams $r4, $r12;
        android.graphics.Rect $r5, $r6;
        android.graphics.RectF $r7, $r8;
        byte $b5, $b6, $b8, $b10;
        android.view.SurfaceControl $r9, $r11;
        com.android.server.wm.DisplayContent $r10;
        com.android.server.wm.WindowAnimator $r13;
        com.android.server.wm.TaskStack $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36;
        java.lang.String $r21, $r31;
        com.android.server.wm.WindowManagerService $r26, $r32;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r4 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i4 = $r4.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = 16384 & $i4;

        if $i3 == 0 goto label11;

        i0 = r1.<com.android.server.wm.WindowState: int mRequestedWidth>;

        i1 = r1.<com.android.server.wm.WindowState: int mRequestedHeight>;

     label01:
        if i0 >= 1 goto label02;

        i0 = 1;

     label02:
        if i1 >= 1 goto label03;

        i1 = 1;

     label03:
        $f2 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceW>;

        $f3 = (float) i0;

        $b5 = $f2 cmpl $f3;

        if $b5 != 0 goto label04;

        $f7 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceH>;

        $f6 = (float) i1;

        $b10 = $f7 cmpl $f6;

        if $b10 == 0 goto label12;

     label04:
        z1 = 1;

     label05:
        if z1 == 0 goto label06;

        $f8 = (float) i0;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceW> = $f8;

        $f9 = (float) i1;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceH> = $f9;

     label06:
        $r7 = r1.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        f0 = $r7.<android.graphics.RectF: float left>;

        $r8 = r1.<com.android.server.wm.WindowState: android.graphics.RectF mShownFrame>;

        f1 = $r8.<android.graphics.RectF: float top>;

        $f4 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX>;

        $b6 = $f4 cmpl f0;

        if $b6 != 0 goto label07;

        $f5 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY>;

        $b8 = $f5 cmpl f1;

        if $b8 == 0 goto label08;

     label07:
        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX> = f0;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY> = f1;

        $r9 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r9.<android.view.SurfaceControl: void setPosition(float,float)>(f0, f1);

     label08:
        if z1 == 0 goto label10;

     label09:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceResized> = 1;

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r11.<android.view.SurfaceControl: void setSize(int,int)>(i0, i1);

        $r10 = r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        i2 = virtualinvoke $r10.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r13 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        virtualinvoke $r13.<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)>(i2, 4);

        $r12 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i7 = $r12.<android.view.WindowManager$LayoutParams: int flags>;

        $i9 = 2 & $i7;

        if $i9 == 0 goto label10;

        $r14 = virtualinvoke r1.<com.android.server.wm.WindowState: com.android.server.wm.TaskStack getStack()>();

        virtualinvoke $r14.<com.android.server.wm.TaskStack: void startDimmingIfNeeded(com.android.server.wm.WindowStateAnimator)>(r0);

     label10:
        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void updateSurfaceWindowCrop(boolean)>(z0);

        return;

     label11:
        $r5 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        i0 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $r6 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        i1 = virtualinvoke $r6.<android.graphics.Rect: int height()>();

        goto label01;

     label12:
        z1 = 0;

        goto label05;

     label13:
        $r16 := @caughtexception;

        r2 = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error positioning surface of ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pos=(");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r21, r2);

        if z0 != 0 goto label08;

        $r26 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r26.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "position", 1);

        goto label08;

     label14:
        $r25 := @caughtexception;

        r3 = $r25;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error resizing surface of ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=(");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r30 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r31, r3);

        if z0 != 0 goto label10;

        $r32 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r32.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "size", 1);

        goto label10;

        catch java.lang.RuntimeException from label07 to label08 with label13;
        catch java.lang.RuntimeException from label09 to label10 with label14;
    }

    void setTransparentRegionHintLocked(android.graphics.Region)
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.graphics.Region r1;
        java.lang.Throwable r2, $r5;
        android.view.SurfaceControl $r3, $r4;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        r1 := @parameter0: android.graphics.Region;

        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r3 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowStateAnimator", "setTransparentRegionHint: null mSurface after mHasSurface true");

        return;

     label1:
        staticinvoke <android.view.SurfaceControl: void openTransaction()>();

     label2:
        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r4.<android.view.SurfaceControl: void setTransparentRegionHint(android.graphics.Region)>(r1);

     label3:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    void setWallpaperOffset(android.graphics.RectF)
    {
        com.android.server.wm.WindowStateAnimator r0;
        android.graphics.RectF r1;
        int i0, i1, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r20;
        java.lang.RuntimeException r3, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b2, $b7;
        boolean $z0;
        com.android.server.wm.WindowState $r4, $r7, $r14;
        android.graphics.Rect $r5, $r6;
        android.view.SurfaceControl $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r16, $r18, $r19;
        java.lang.String $r17;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        r1 := @parameter0: android.graphics.RectF;

        $f0 = r1.<android.graphics.RectF: float left>;

        i0 = (int) $f0;

        $f1 = r1.<android.graphics.RectF: float top>;

        i1 = (int) $f1;

        $f3 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX>;

        $f2 = (float) i0;

        $b2 = $f3 cmpl $f2;

        if $b2 != 0 goto label1;

        $f9 = r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY>;

        $f8 = (float) i1;

        $b7 = $f9 cmpl $f8;

        if $b7 == 0 goto label2;

     label1:
        $f4 = (float) i0;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceX> = $f4;

        $f5 = (float) i1;

        r0.<com.android.server.wm.WindowStateAnimator: float mSurfaceY> = $f5;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        staticinvoke <android.view.SurfaceControl: void openTransaction()>();

     label4:
        $r8 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r5 = $r4.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i4 = $r5.<android.graphics.Rect: int left>;

        $i3 = i0 + $i4;

        $f6 = (float) $i3;

        $r7 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r6 = $r7.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i6 = $r6.<android.graphics.Rect: int top>;

        $i5 = i1 + $i6;

        $f7 = (float) $i5;

        virtualinvoke $r8.<android.view.SurfaceControl: void setPosition(float,float)>($f6, $f7);

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void updateSurfaceWindowCrop(boolean)>(0);

     label5:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        return;

     label6:
        $r10 := @caughtexception;

        r3 = $r10;

     label7:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error positioning surface of ");

        $r14 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pos=(");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r17, r3);

     label8:
        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        return;

     label9:
        $r20 := @caughtexception;

        r2 = $r20;

        staticinvoke <android.view.SurfaceControl: void closeTransaction()>();

        throw r2;

        catch java.lang.RuntimeException from label4 to label5 with label6;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    boolean showSurfaceRobustlyLocked()
    {
        com.android.server.wm.WindowStateAnimator r0;
        java.lang.RuntimeException r1, $r7;
        com.android.server.wm.WindowAnimator r2;
        android.view.SurfaceControl $r3, $r4, $r11;
        com.android.server.wm.WindowState $r5, $r6, $r12;
        boolean $z0;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r15;
        java.lang.String $r14;
        com.android.server.wm.WindowManagerService $r16;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

     label1:
        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        if $r3 == null goto label2;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown> = 1;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r4.<android.view.SurfaceControl: void show()>();

        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z0 = $r5.<com.android.server.wm.WindowState: boolean mTurnOnScreen>;

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r6.<com.android.server.wm.WindowState: boolean mTurnOnScreen> = 0;

        r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $i0 = r2.<com.android.server.wm.WindowAnimator: int mBulkUpdateParams>;

        $i1 = 16 | $i0;

        r2.<com.android.server.wm.WindowAnimator: int mBulkUpdateParams> = $i1;

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure showing surface ");

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r12 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r14, r1);

        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r16.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "show", 1);

        return 0;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    boolean stepAnimationLocked(long)
    {
        com.android.server.wm.WindowStateAnimator r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.view.DisplayInfo r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        com.android.server.wm.WindowManagerService $r2, $r17, $r31, $r40, $r42, $r47, $r49, $r50, $r51;
        android.view.animation.Animation $r3, $r4, $r52, $r55, $r60, $r62, $r63, $r68;
        com.android.server.wm.WindowAnimator $r5, $r15, $r16, $r54;
        com.android.server.wm.WindowState $r6, $r7, $r8, $r9, $r10, $r11, $r14, $r18, $r20, $r22, $r24, $r25, $r26, $r29, $r34, $r37, $r38, $r41, $r43, $r44, $r45, $r48, $r53, $r61, $r64, $r67;
        android.view.animation.Transformation $r12, $r57;
        com.android.server.wm.DisplayContent $r13, $r23, $r46, $r65;
        com.android.server.wm.AppWindowToken $r19, $r21, $r28, $r30, $r33, $r36;
        android.view.WindowManager$LayoutParams $r27;
        com.android.server.wm.StartingData $r32;
        java.util.ArrayList $r35;
        com.android.server.wm.WindowManagerService$H $r39;
        com.android.server.wm.AppWindowAnimator $r56, $r58;
        android.graphics.Rect $r59, $r66;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mWasAnimating> = $z0;

        $r2 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $z1 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: boolean okToDisplay()>();

        if $z1 == 0 goto label07;

        $r53 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z14 = virtualinvoke $r53.<com.android.server.wm.WindowState: boolean isDrawnLw()>();

        if $z14 == 0 goto label02;

        $r63 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r63 == null goto label02;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasTransformation> = 1;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation> = 1;

        $z21 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z21 != 0 goto label01;

        $r60 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        $r61 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r59 = $r61.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i16 = virtualinvoke $r59.<android.graphics.Rect: int width()>();

        $r67 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r66 = $r67.<com.android.server.wm.WindowState: android.graphics.Rect mFrame>;

        $i15 = virtualinvoke $r66.<android.graphics.Rect: int height()>();

        $i14 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimDw>;

        $i13 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimDh>;

        virtualinvoke $r60.<android.view.animation.Animation: void initialize(int,int,int,int)>($i16, $i15, $i14, $i13);

        $r64 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r65 = $r64.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        r1 = virtualinvoke $r65.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $i18 = r1.<android.view.DisplayInfo: int appWidth>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimDw> = $i18;

        $i17 = r1.<android.view.DisplayInfo: int appHeight>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimDh> = $i17;

        $r68 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        virtualinvoke $r68.<android.view.animation.Animation: void setStartTime(long)>(l0);

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating> = 1;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 1;

     label01:
        $r62 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r62 == null goto label02;

        $z20 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z20 == 0 goto label02;

        $z19 = specialinvoke r0.<com.android.server.wm.WindowStateAnimator: boolean stepAnimation(long)>(l0);

        if $z19 == 0 goto label02;

        return 1;

     label02:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation> = 0;

        $z16 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z16 == 0 goto label03;

        $z15 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimationIsEntrance>;

        if $z15 == 0 goto label04;

     label03:
        $r58 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        if $r58 == null goto label04;

        $r56 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $r55 = $r56.<com.android.server.wm.AppWindowAnimator: android.view.animation.Animation animation>;

        if $r55 == null goto label04;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 1;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasTransformation> = 1;

        $r57 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r57.<android.view.animation.Transformation: void clear()>();

        return 0;

     label04:
        $z18 = r0.<com.android.server.wm.WindowStateAnimator: boolean mHasTransformation>;

        if $z18 == 0 goto label06;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 1;

     label05:
        $z2 = r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        if $z2 != 0 goto label08;

        $z13 = r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating>;

        if $z13 != 0 goto label08;

        return 0;

     label06:
        $z17 = virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: boolean isAnimating()>();

        if $z17 == 0 goto label05;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 1;

        goto label05;

     label07:
        $r3 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r3 == null goto label05;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 1;

        goto label05;

     label08:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mAnimating> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mLocalAnimating> = 0;

        $r4 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r4 == null goto label09;

        $r52 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        virtualinvoke $r52.<android.view.animation.Animation: void cancel()>();

        r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation> = null;

     label09:
        $r5 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r7 = $r5.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowState mWindowDetachedWallpaper>;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        if $r7 != $r6 goto label10;

        $r54 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r54.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowState mWindowDetachedWallpaper> = null;

     label10:
        $r8 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $i2 = $r8.<com.android.server.wm.WindowState: int mLayer>;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer> = $i2;

        $r9 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z3 = $r9.<com.android.server.wm.WindowState: boolean mIsImWindow>;

        if $z3 == 0 goto label16;

        $i10 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        $r47 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $i11 = $r47.<com.android.server.wm.WindowManagerService: int mInputMethodAnimLayerAdjustment>;

        $i12 = $i10 + $i11;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer> = $i12;

     label11:
        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasTransformation> = 0;

        r0.<com.android.server.wm.WindowStateAnimator: boolean mHasLocalTransformation> = 0;

        $r10 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z6 = $r10.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        $r11 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z5 = $r11.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim>;

        if $z6 == $z5 goto label13;

        $r44 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r38 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z12 = $r38.<com.android.server.wm.WindowState: boolean mPolicyVisibilityAfterAnim>;

        $r44.<com.android.server.wm.WindowState: boolean mPolicyVisibility> = $z12;

        $r45 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r46 = $r45.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r46.<com.android.server.wm.DisplayContent: boolean layoutNeeded> = 1;

        $r41 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z11 = $r41.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z11 != 0 goto label13;

        $r42 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r48 = $r42.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mCurrentFocus>;

        $r43 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        if $r48 != $r43 goto label12;

        $r50 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r50.<com.android.server.wm.WindowManagerService: boolean mFocusMayChange> = 1;

     label12:
        $r49 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r49.<com.android.server.wm.WindowManagerService: void enableScreenIfNeededLocked()>();

     label13:
        $r12 = r0.<com.android.server.wm.WindowStateAnimator: android.view.animation.Transformation mTransformation>;

        virtualinvoke $r12.<android.view.animation.Transformation: void clear()>();

        $i4 = r0.<com.android.server.wm.WindowStateAnimator: int mDrawState>;

        if $i4 != 4 goto label17;

        $r26 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r27 = $r26.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i6 = $r27.<android.view.WindowManager$LayoutParams: int type>;

        if $i6 != 3 goto label17;

        $r25 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r30 = $r25.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r30 == null goto label17;

        $r29 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r28 = $r29.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $z8 = $r28.<com.android.server.wm.AppWindowToken: boolean firstWindowDrawn>;

        if $z8 == 0 goto label17;

        $r34 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r33 = $r34.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        $r32 = $r33.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData>;

        if $r32 == null goto label17;

        $r31 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r35 = $r31.<com.android.server.wm.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $r37 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r36 = $r37.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r36);

        $r40 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r39 = $r40.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        virtualinvoke $r39.<com.android.server.wm.WindowManagerService$H: boolean sendEmptyMessage(int)>(7);

     label14:
        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void finishExit()>();

        $r14 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r13 = $r14.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        i1 = virtualinvoke $r13.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r15 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        virtualinvoke $r15.<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)>(i1, 8);

        $r17 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r16 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $i5 = virtualinvoke $r16.<com.android.server.wm.WindowAnimator: int getPendingLayoutChanges(int)>(i1);

        virtualinvoke $r17.<com.android.server.wm.WindowManagerService: void debugLayoutRepeats(java.lang.String,int)>("WindowStateAnimator", $i5);

        $r20 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r21 = $r20.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        if $r21 == null goto label15;

        $r18 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r19 = $r18.<com.android.server.wm.WindowState: com.android.server.wm.AppWindowToken mAppToken>;

        virtualinvoke $r19.<com.android.server.wm.AppWindowToken: void updateReportedVisibilityLocked()>();

     label15:
        return 0;

     label16:
        $z4 = r0.<com.android.server.wm.WindowStateAnimator: boolean mIsWallpaper>;

        if $z4 == 0 goto label11;

        $i8 = r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        $r51 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $i7 = $r51.<com.android.server.wm.WindowManagerService: int mWallpaperAnimLayerAdjustment>;

        $i9 = $i8 + $i7;

        r0.<com.android.server.wm.WindowStateAnimator: int mAnimLayer> = $i9;

        goto label11;

     label17:
        $i3 = r0.<com.android.server.wm.WindowStateAnimator: int mAttrType>;

        if $i3 != 2000 goto label14;

        $r24 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $z7 = $r24.<com.android.server.wm.WindowState: boolean mPolicyVisibility>;

        if $z7 == 0 goto label14;

        $r22 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r23 = $r22.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        $r23.<com.android.server.wm.DisplayContent: boolean layoutNeeded> = 1;

        goto label14;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.WindowStateAnimator r0;
        java.lang.StringBuffer r1, $r2;
        int $i0;
        java.lang.String $r3, $r11;
        com.android.server.wm.WindowState $r6;
        android.view.WindowManager$LayoutParams $r7;
        java.lang.CharSequence $r8;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("WindowStateAnimator{");

        r1 = $r2;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r7 = $r6.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $r8 = virtualinvoke $r7.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r8);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r11 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    void updateSurfaceWindowCrop(boolean)
    {
        com.android.server.wm.WindowStateAnimator r0, $r18;
        boolean z0, $z1, $z2, $z3;
        com.android.server.wm.WindowState r1;
        android.view.DisplayInfo r2;
        java.lang.RuntimeException r3, $r34;
        com.android.server.wm.DisplayContent $r4;
        android.view.WindowManager$LayoutParams $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        com.android.server.wm.WindowManagerService $r6, $r19, $r44;
        android.graphics.Rect $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r36, $r37;
        android.view.SurfaceControl $r15;
        com.android.server.wm.WindowAnimator $r21;
        java.lang.StringBuilder $r35, $r39, $r41, $r42, $r43;
        java.lang.String $r38, $r40;

        r0 := @this: com.android.server.wm.WindowStateAnimator;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r4 = r1.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent mDisplayContent>;

        r2 = virtualinvoke $r4.<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>();

        $r5 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i0 = $r5.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = 16384 & $i0;

        if $i1 == 0 goto label04;

        $r33 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $i20 = r1.<com.android.server.wm.WindowState: int mRequestedWidth>;

        $i22 = r1.<com.android.server.wm.WindowState: int mRequestedHeight>;

        virtualinvoke $r33.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i20, $i22);

     label01:
        $r12 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r11 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mLastSystemDecorRect>;

        $z2 = virtualinvoke $r12.<android.graphics.Rect: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label03;

        $r13 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mLastSystemDecorRect>;

        $r14 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        virtualinvoke $r13.<android.graphics.Rect: void set(android.graphics.Rect)>($r14);

     label02:
        $r15 = r0.<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl mSurfaceControl>;

        $r16 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        virtualinvoke $r15.<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)>($r16);

     label03:
        return;

     label04:
        $z1 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isDefaultDisplay()>();

        if $z1 != 0 goto label05;

        $r27 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r26 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i10 = virtualinvoke $r26.<android.graphics.Rect: int width()>();

        $r29 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i9 = virtualinvoke $r29.<android.graphics.Rect: int height()>();

        virtualinvoke $r27.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i10, $i9);

        $r36 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r28 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i12 = $r28.<android.graphics.Rect: int left>;

        $i21 = neg $i12;

        $r31 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i11 = $r31.<android.graphics.Rect: int top>;

        $i16 = neg $i11;

        $i14 = r2.<android.view.DisplayInfo: int logicalWidth>;

        $r30 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i15 = $r30.<android.graphics.Rect: int left>;

        $i17 = $i14 - $i15;

        $i19 = r2.<android.view.DisplayInfo: int logicalHeight>;

        $r32 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i13 = $r32.<android.graphics.Rect: int top>;

        $i18 = $i19 - $i13;

        virtualinvoke $r36.<android.graphics.Rect: boolean intersect(int,int,int,int)>($i21, $i16, $i17, $i18);

        goto label01;

     label05:
        $i3 = r1.<com.android.server.wm.WindowState: int mLayer>;

        $r6 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $i2 = $r6.<com.android.server.wm.WindowManagerService: int mSystemDecorLayer>;

        if $i3 < $i2 goto label07;

        $r21 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowAnimator mAnimator>;

        $r18 = $r21.<com.android.server.wm.WindowAnimator: com.android.server.wm.WindowStateAnimator mUniverseBackground>;

        if $r18 != null goto label06;

        $r22 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r24 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i8 = virtualinvoke $r24.<android.graphics.Rect: int width()>();

        $r25 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i7 = virtualinvoke $r25.<android.graphics.Rect: int height()>();

        virtualinvoke $r22.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i8, $i7);

        goto label01;

     label06:
        $r19 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        $r23 = $r19.<com.android.server.wm.WindowManagerService: android.graphics.Rect mScreenRect>;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void applyDecorRect(android.graphics.Rect)>($r23);

        goto label01;

     label07:
        $r7 = r1.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i4 = $r7.<android.view.WindowManager$LayoutParams: int type>;

        if $i4 == 2025 goto label08;

        $r17 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mDecorFrame>;

        $z3 = virtualinvoke $r17.<android.graphics.Rect: boolean isEmpty()>();

        if $z3 == 0 goto label09;

     label08:
        $r8 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r9 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i5 = virtualinvoke $r9.<android.graphics.Rect: int width()>();

        $r10 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mCompatFrame>;

        $i6 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        virtualinvoke $r8.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i5, $i6);

        goto label01;

     label09:
        $r20 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mDecorFrame>;

        virtualinvoke r0.<com.android.server.wm.WindowStateAnimator: void applyDecorRect(android.graphics.Rect)>($r20);

        goto label01;

     label10:
        $r34 := @caughtexception;

        r3 = $r34;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting crop surface of ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crop=");

        $r37 = r1.<com.android.server.wm.WindowState: android.graphics.Rect mSystemDecorRect>;

        $r38 = virtualinvoke $r37.<android.graphics.Rect: java.lang.String toShortString()>();

        $r39 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowStateAnimator", $r40, r3);

        if z0 != 0 goto label03;

        $r44 = r0.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r44.<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>(r0, "crop", 1);

        return;

        catch java.lang.RuntimeException from label02 to label03 with label10;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowStateAnimator: java.lang.String TAG> = "WindowStateAnimator";

        <com.android.server.wm.WindowStateAnimator: int READY_TO_SHOW> = 3;

        <com.android.server.wm.WindowStateAnimator: int NO_SURFACE> = 0;

        <com.android.server.wm.WindowStateAnimator: int HAS_DRAWN> = 4;

        <com.android.server.wm.WindowStateAnimator: int DRAW_PENDING> = 1;

        <com.android.server.wm.WindowStateAnimator: int COMMIT_DRAW_PENDING> = 2;

        return;
    }
}
