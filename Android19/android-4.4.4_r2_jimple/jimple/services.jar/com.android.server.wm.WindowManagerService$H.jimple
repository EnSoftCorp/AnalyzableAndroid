final class com.android.server.wm.WindowManagerService$H extends android.os.Handler
{
    public static final int ADD_STARTING;
    public static final int APP_FREEZE_TIMEOUT;
    public static final int APP_TRANSITION_TIMEOUT;
    public static final int BOOT_TIMEOUT;
    public static final int CLIENT_FREEZE_TIMEOUT;
    public static final int DO_ANIMATION_CALLBACK;
    public static final int DO_DISPLAY_ADDED;
    public static final int DO_DISPLAY_CHANGED;
    public static final int DO_DISPLAY_REMOVED;
    public static final int DO_TRAVERSAL;
    public static final int DRAG_END_TIMEOUT;
    public static final int DRAG_START_TIMEOUT;
    public static final int ENABLE_SCREEN;
    public static final int FINISHED_STARTING;
    public static final int FORCE_GC;
    public static final int NOTIFY_ACTIVITY_DRAWN;
    public static final int PERSIST_ANIMATION_SCALE;
    public static final int REMOVE_STARTING;
    public static final int REMOVE_STARTING_TIMEOUT;
    public static final int REPORT_APPLICATION_TOKEN_DRAWN;
    public static final int REPORT_APPLICATION_TOKEN_WINDOWS;
    public static final int REPORT_FOCUS_CHANGE;
    public static final int REPORT_HARD_KEYBOARD_STATUS_CHANGE;
    public static final int REPORT_LOSING_FOCUS;
    public static final int REPORT_WINDOWS_CHANGE;
    public static final int SEND_NEW_CONFIGURATION;
    public static final int SHOW_STRICT_MODE_VIOLATION;
    public static final int TAP_OUTSIDE_STACK;
    public static final int WAITING_FOR_DRAWN_TIMEOUT;
    public static final int WINDOW_FREEZE_TIMEOUT;
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$H r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wm.WindowManagerService$H r0;
        android.os.Message r1;
        java.util.HashMap r3, r6, r8, r10, r13, r18, r19, r20, r24, r26, r29, r33, r34, r39, r46, r63, r66, r68, r74;
        java.lang.Throwable r4, r7, r9, r11, r14, r17, r21, r22, r23, r25, r31, r32, r36, r45, r47, r62, r65, r69, r75, $r227, $r232, $r233, $r234, $r245, $r246, $r248, $r249, $r253, $r254, $r255, $r258, $r259, $r260, $r262, $r263, $r264, $r265, $r266;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i23, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        android.util.Pair r15;
        com.android.server.wm.AppTokenList r27;
        java.util.ArrayList r28, r64, $r108, $r189, $r192, $r215, $r229;
        com.android.server.wm.AppWindowToken r30, r37, r41, r44, r52, r53, r58;
        com.android.server.wm.WindowList r35;
        boolean z0, z1, z2, $z3, $z4, $z6, $z7, $z8, $z10, $z11, $z13, $z16, $z17, $z19, $z20, $z21;
        com.android.server.wm.WindowState r38, r48, r59, r72, r73, $r193, $r235;
        android.view.View r43, r56, r61, r67;
        android.os.IBinder r49, r50, $r83, $r125, $r126, $r212, $r225;
        java.lang.Exception r51, r55, r57, r60, $r226, $r231, $r250, $r252;
        com.android.server.wm.StartingData r54, $r209;
        java.lang.Object $r70, $r76, $r84, $r89, $r101, $r112, $r115, $r118, $r124, $r129, $r144, $r161, $r177, $r194, $r197, $r202, $r204, $r238;
        java.lang.StringBuilder $r71, $r79, $r80, $r81, $r113, $r114, $r117, $r157, $r158, $r159, $r198, $r199, $r200;
        com.android.server.wm.WindowManagerService $r77, $r85, $r87, $r90, $r91, $r92, $r93, $r94, $r95, $r97, $r98, $r99, $r100, $r103, $r104, $r105, $r106, $r107, $r109, $r110, $r119, $r121, $r123, $r127, $r128, $r131, $r132, $r133, $r134, $r136, $r137, $r139, $r142, $r143, $r146, $r148, $r149, $r150, $r152, $r153, $r154, $r155, $r162, $r163, $r166, $r168, $r169, $r170, $r172, $r173, $r174, $r175, $r176, $r178, $r183, $r184, $r185, $r187, $r188, $r190, $r191, $r195, $r207, $r208, $r210, $r213, $r214, $r216, $r217, $r218, $r221, $r222, $r230, $r236, $r237, $r239, $r240, $r241, $r242, $r243, $r244;
        java.lang.String $r78, $r116, $r156, $r201, $r224;
        android.app.IActivityManager $r82, $r96;
        android.view.WindowManagerPolicy $r86, $r196, $r211, $r223;
        com.android.server.wm.DisplayContent $r88, $r147;
        android.os.IRemoteCallback $r102, $r111;
        com.android.server.wm.DragState $r120, $r122, $r130, $r135, $r138, $r141;
        com.android.server.wm.InputMonitor $r140;
        com.android.server.wm.Task $r145;
        com.android.server.wm.WindowAnimator $r151;
        com.android.server.wm.AppWindowAnimator $r160;
        float $f0, $f1, $f2;
        android.content.Context $r164, $r179, $r181;
        android.content.ContentResolver $r165, $r180, $r182;
        java.lang.Runtime $r167;
        com.android.server.wm.AppTransition $r171, $r186;
        long $l22, $l24, $l25;
        android.view.IApplicationToken $r203, $r205, $r206;
        android.content.res.CompatibilityInfo $r219;
        java.lang.CharSequence $r220;
        android.os.RemoteException $r228, $r247, $r251, $r256, $r257, $r261;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        r1 := @parameter0: android.os.Message;

        $i7 = r1.<android.os.Message: int what>;

        tableswitch($i7)
        {
            case 2: goto label002;
            case 3: goto label017;
            case 4: goto label024;
            case 5: goto label030;
            case 6: goto label051;
            case 7: goto label063;
            case 8: goto label081;
            case 9: goto label077;
            case 10: goto label001;
            case 11: goto label088;
            case 12: goto label001;
            case 13: goto label098;
            case 14: goto label105;
            case 15: goto label106;
            case 16: goto label117;
            case 17: goto label118;
            case 18: goto label137;
            case 19: goto label138;
            case 20: goto label144;
            case 21: goto label151;
            case 22: goto label158;
            case 23: goto label159;
            case 24: goto label160;
            case 25: goto label170;
            case 26: goto label171;
            case 27: goto label174;
            case 28: goto label180;
            case 29: goto label186;
            case 30: goto label130;
            case 31: goto label192;
            case 32: goto label201;
            case 33: goto label050;
            default: goto label001;
        };

     label001:
        return;

     label002:
        $r236 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r74 = $r236.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r74;

     label003:
        $r237 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r72 = $r237.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mLastFocus>;

        $r242 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r73 = $r242.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mCurrentFocus>;

     label004:
        if r72 != r73 goto label010;

     label005:
        exitmonitor r74;

     label006:
        return;

     label007:
        $r260 := @caughtexception;

        r75 = $r260;

     label008:
        exitmonitor r74;

     label009:
        throw r75;

     label010:
        $r243 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r243.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mLastFocus> = r73;

     label011:
        if r73 == null goto label014;

        if r72 == null goto label014;

     label012:
        $z21 = virtualinvoke r73.<com.android.server.wm.WindowState: boolean isDisplayedLw()>();

        if $z21 != 0 goto label014;

        $r230 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r229 = $r230.<com.android.server.wm.WindowManagerService: java.util.ArrayList mLosingFocus>;

        virtualinvoke $r229.<java.util.ArrayList: boolean add(java.lang.Object)>(r72);

     label013:
        r72 = null;

     label014:
        exitmonitor r74;

     label015:
        if r73 == null goto label016;

        $r240 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z20 = $r240.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        virtualinvoke r73.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>(1, $z20);

        $r241 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$200(com.android.server.wm.WindowManagerService)>($r241);

     label016:
        if r72 == null goto label001;

        $r244 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        z2 = $r244.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        virtualinvoke r72.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>(0, z2);

        return;

     label017:
        $r217 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r68 = $r217.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r68;

     label018:
        $r216 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r64 = $r216.<com.android.server.wm.WindowManagerService: java.util.ArrayList mLosingFocus>;

        $r214 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r215 = new java.util.ArrayList;

        specialinvoke $r215.<java.util.ArrayList: void <init>()>();

        $r214.<com.android.server.wm.WindowManagerService: java.util.ArrayList mLosingFocus> = $r215;

        exitmonitor r68;

     label019:
        i6 = virtualinvoke r64.<java.util.ArrayList: int size()>();

        i5 = 0;

     label020:
        if i5 >= i6 goto label001;

        $r238 = virtualinvoke r64.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r235 = (com.android.server.wm.WindowState) $r238;

        $r239 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z19 = $r239.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        virtualinvoke $r235.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>(0, $z19);

        i5 = i5 + 1;

        goto label020;

     label021:
        $r255 := @caughtexception;

        r65 = $r255;

     label022:
        exitmonitor r68;

     label023:
        throw r65;

     label024:
        $r208 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r66 = $r208.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r66;

     label025:
        $r207 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r207.<com.android.server.wm.WindowManagerService: boolean mTraversalScheduled> = 0;

        $r218 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$300(com.android.server.wm.WindowManagerService)>($r218);

        exitmonitor r66;

     label026:
        return;

     label027:
        $r253 := @caughtexception;

        r69 = $r253;

     label028:
        exitmonitor r66;

     label029:
        throw r69;

     label030:
        $r197 = r1.<android.os.Message: java.lang.Object obj>;

        r53 = (com.android.server.wm.AppWindowToken) $r197;

        r54 = r53.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData>;

        if r54 == null goto label001;

     label031:
        $r221 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r223 = $r221.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r225 = r53.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        $r224 = r54.<com.android.server.wm.StartingData: java.lang.String pkg>;

        $i30 = r54.<com.android.server.wm.StartingData: int theme>;

        $r219 = r54.<com.android.server.wm.StartingData: android.content.res.CompatibilityInfo compatInfo>;

        $r220 = r54.<com.android.server.wm.StartingData: java.lang.CharSequence nonLocalizedLabel>;

        $i31 = r54.<com.android.server.wm.StartingData: int labelRes>;

        $i33 = r54.<com.android.server.wm.StartingData: int icon>;

        $i32 = r54.<com.android.server.wm.StartingData: int logo>;

        $i34 = r54.<com.android.server.wm.StartingData: int windowFlags>;

        r67 = interfaceinvoke $r223.<android.view.WindowManagerPolicy: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int)>($r225, $r224, $i30, $r219, $r220, $i31, $i33, $i32, $i34);

     label032:
        r61 = r67;

     label033:
        if r61 == null goto label001;

        $r222 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r63 = $r222.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r63;

     label034:
        $z17 = r53.<com.android.server.wm.AppWindowToken: boolean removed>;

        if $z17 != 0 goto label035;

        $r209 = r53.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData>;

        if $r209 != null goto label045;

     label035:
        r59 = r53.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

     label036:
        z1 = 0;

        if r59 == null goto label039;

     label037:
        $r210 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r210.<com.android.server.wm.WindowManagerService: void removeStartingWindowTimeout(com.android.server.wm.AppWindowToken)>(r53);

        r53.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow> = null;

        r53.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData> = null;

     label038:
        z1 = 1;

     label039:
        exitmonitor r63;

     label040:
        if z1 == 0 goto label001;

     label041:
        $r213 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r211 = $r213.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r212 = r53.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        interfaceinvoke $r211.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>($r212, r61);

     label042:
        return;

     label043:
        $r226 := @caughtexception;

        r60 = $r226;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", r60);

        return;

     label044:
        $r252 := @caughtexception;

        r55 = $r252;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when adding starting window", r55);

        r61 = null;

        goto label033;

     label045:
        r53.<com.android.server.wm.AppWindowToken: android.view.View startingView> = r61;

     label046:
        z1 = 0;

        goto label039;

     label047:
        $r263 := @caughtexception;

        r62 = $r263;

     label048:
        exitmonitor r63;

     label049:
        throw r62;

     label050:
        $r70 = r1.<android.os.Message: java.lang.Object obj>;

        r58 = (com.android.server.wm.AppWindowToken) $r70;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting window ");

        $r79 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timed out");

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", $r78);

     label051:
        $r76 = r1.<android.os.Message: java.lang.Object obj>;

        r52 = (com.android.server.wm.AppWindowToken) $r76;

        $r77 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r46 = $r77.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r46;

     label052:
        r48 = r52.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

     label053:
        r49 = null;

        r56 = null;

        if r48 == null goto label055;

     label054:
        r56 = r52.<com.android.server.wm.AppWindowToken: android.view.View startingView>;

        r49 = r52.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        r52.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData> = null;

        r52.<com.android.server.wm.AppWindowToken: android.view.View startingView> = null;

        r52.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow> = null;

        r52.<com.android.server.wm.AppWindowToken: boolean startingDisplayed> = 0;

     label055:
        exitmonitor r46;

     label056:
        if r56 == null goto label001;

     label057:
        $r87 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r86 = $r87.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r86.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>(r49, r56);

     label058:
        return;

     label059:
        $r250 := @caughtexception;

        r57 = $r250;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", r57);

        return;

     label060:
        $r233 := @caughtexception;

        r47 = $r233;

     label061:
        exitmonitor r46;

     label062:
        throw r47;

     label063:
        $r188 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r39 = $r188.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r39;

     label064:
        $r190 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r189 = $r190.<com.android.server.wm.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        i4 = virtualinvoke $r189.<java.util.ArrayList: int size()>();

     label065:
        if i4 > 0 goto label071;

     label066:
        exitmonitor r39;

     label067:
        return;

     label068:
        $r234 := @caughtexception;

        r45 = $r234;

     label069:
        exitmonitor r39;

     label070:
        throw r45;

     label071:
        $r191 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r192 = $r191.<com.android.server.wm.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $i23 = i4 - 1;

        $r194 = virtualinvoke $r192.<java.util.ArrayList: java.lang.Object remove(int)>($i23);

        r44 = (com.android.server.wm.AppWindowToken) $r194;

        $r193 = r44.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

        if $r193 != null goto label073;

        exitmonitor r39;

     label072:
        goto label063;

     label073:
        r43 = r44.<com.android.server.wm.AppWindowToken: android.view.View startingView>;

        r50 = r44.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        r44.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData> = null;

        r44.<com.android.server.wm.AppWindowToken: android.view.View startingView> = null;

        r44.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow> = null;

        r44.<com.android.server.wm.AppWindowToken: boolean startingDisplayed> = 0;

        exitmonitor r39;

     label074:
        $r195 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r196 = $r195.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r196.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>(r50, r43);

     label075:
        goto label063;

     label076:
        $r231 := @caughtexception;

        r51 = $r231;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", r51);

        goto label063;

     label077:
        $r202 = r1.<android.os.Message: java.lang.Object obj>;

        r41 = (com.android.server.wm.AppWindowToken) $r202;

     label078:
        $r203 = r41.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r203.<android.view.IApplicationToken: void windowsDrawn()>();

     label079:
        return;

     label080:
        $r251 := @caughtexception;

        return;

     label081:
        $r204 = r1.<android.os.Message: java.lang.Object obj>;

        r37 = (com.android.server.wm.AppWindowToken) $r204;

        $i28 = r1.<android.os.Message: int arg1>;

        if $i28 == 0 goto label205;

        z0 = 1;

     label082:
        $i29 = r1.<android.os.Message: int arg2>;

        if $i29 == 0 goto label206;

     label083:
        if z0 == 0 goto label086;

     label084:
        $r206 = r37.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r206.<android.view.IApplicationToken: void windowsVisible()>();

     label085:
        return;

     label086:
        $r205 = r37.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r205.<android.view.IApplicationToken: void windowsGone()>();

     label087:
        return;

     label088:
        $r174 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r33 = $r174.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r33;

     label089:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "Window freeze timeout expired.");

        $r173 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r35 = virtualinvoke $r173.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()>();

        i3 = virtualinvoke r35.<com.android.server.wm.WindowList: int size()>();

     label090:
        if i3 <= 0 goto label096;

        i3 = i3 + -1;

     label091:
        $r177 = virtualinvoke r35.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        r38 = (com.android.server.wm.WindowState) $r177;

        $z13 = r38.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        if $z13 == 0 goto label090;

        r38.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

        $l22 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r176 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $l24 = $r176.<com.android.server.wm.WindowManagerService: long mDisplayFreezeTime>;

        $l25 = $l22 - $l24;

        $i26 = (int) $l25;

        r38.<com.android.server.wm.WindowState: int mLastFreezeDuration> = $i26;

        $r198 = new java.lang.StringBuilder;

        specialinvoke $r198.<java.lang.StringBuilder: void <init>()>();

        $r199 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force clearing orientation change: ");

        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r201);

     label092:
        goto label090;

     label093:
        $r249 := @caughtexception;

        r36 = $r249;

     label094:
        exitmonitor r33;

     label095:
        throw r36;

     label096:
        $r175 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$300(com.android.server.wm.WindowManagerService)>($r175);

        exitmonitor r33;

     label097:
        return;

     label098:
        $r184 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r34 = $r184.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r34;

     label099:
        $r187 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r186 = $r187.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        $z16 = virtualinvoke $r186.<com.android.server.wm.AppTransition: boolean isTransitionSet()>();

        if $z16 == 0 goto label100;

        $r172 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r171 = $r172.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        virtualinvoke $r171.<com.android.server.wm.AppTransition: void setTimeout()>();

        $r170 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$300(com.android.server.wm.WindowManagerService)>($r170);

     label100:
        exitmonitor r34;

     label101:
        return;

     label102:
        $r246 := @caughtexception;

        r32 = $r246;

     label103:
        exitmonitor r34;

     label104:
        throw r32;

     label105:
        $r166 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r164 = $r166.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r165 = virtualinvoke $r164.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r163 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f0 = $r163.<com.android.server.wm.WindowManagerService: float mWindowAnimationScale>;

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r165, "window_animation_scale", $f0);

        $r162 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r179 = $r162.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r180 = virtualinvoke $r179.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r178 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f1 = $r178.<com.android.server.wm.WindowManagerService: float mTransitionAnimationScale>;

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r180, "transition_animation_scale", $f1);

        $r183 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r181 = $r183.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r182 = virtualinvoke $r181.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r185 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f2 = $r185.<com.android.server.wm.WindowManagerService: float mAnimatorDurationScale>;

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r182, "animator_duration_scale", $f2);

        return;

     label106:
        $r153 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r29 = $r153.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r29;

     label107:
        $r152 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r151 = $r152.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $z7 = $r151.<com.android.server.wm.WindowAnimator: boolean mAnimating>;

        if $z7 != 0 goto label108;

        $r169 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z11 = $r169.<com.android.server.wm.WindowManagerService: boolean mAnimationScheduled>;

        if $z11 == 0 goto label113;

     label108:
        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: boolean sendEmptyMessageDelayed(int,long)>(15, 2000L);

        exitmonitor r29;

     label109:
        return;

     label110:
        $r254 := @caughtexception;

        r31 = $r254;

     label111:
        exitmonitor r29;

     label112:
        throw r31;

     label113:
        $r168 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z10 = $r168.<com.android.server.wm.WindowManagerService: boolean mDisplayFrozen>;

        if $z10 == 0 goto label115;

        exitmonitor r29;

     label114:
        return;

     label115:
        exitmonitor r29;

     label116:
        $r167 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r167.<java.lang.Runtime: void gc()>();

        return;

     label117:
        $r154 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r154.<com.android.server.wm.WindowManagerService: void performEnableScreen()>();

        return;

     label118:
        $r150 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r26 = $r150.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r26;

     label119:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "App freeze timeout expired.");

        $r146 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r147 = virtualinvoke $r146.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>();

        r28 = virtualinvoke $r147.<com.android.server.wm.DisplayContent: java.util.ArrayList getTasks()>();

        $i18 = virtualinvoke r28.<java.util.ArrayList: int size()>();

        i1 = -1 + $i18;

     label120:
        if i1 < 0 goto label125;

     label121:
        $r144 = virtualinvoke r28.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r145 = (com.android.server.wm.Task) $r144;

        r27 = $r145.<com.android.server.wm.Task: com.android.server.wm.AppTokenList mAppTokens>;

        $i17 = virtualinvoke r27.<com.android.server.wm.AppTokenList: int size()>();

        i2 = -1 + $i17;

     label122:
        if i2 < 0 goto label208;

     label123:
        $r161 = virtualinvoke r27.<com.android.server.wm.AppTokenList: java.lang.Object get(int)>(i2);

        r30 = (com.android.server.wm.AppWindowToken) $r161;

        $r160 = r30.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $z8 = $r160.<com.android.server.wm.AppWindowAnimator: boolean freezingScreen>;

        if $z8 == 0 goto label207;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r158 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force clearing freeze: ");

        $r157 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r156 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r156);

        $r155 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r155.<com.android.server.wm.WindowManagerService: void unsetAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,boolean,boolean)>(r30, 1, 1);

     label124:
        goto label207;

     label125:
        exitmonitor r26;

     label126:
        return;

     label127:
        $r232 := @caughtexception;

        r25 = $r232;

     label128:
        exitmonitor r26;

     label129:
        throw r25;

     label130:
        $r98 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r24 = $r98.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r24;

     label131:
        $r99 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z3 = $r99.<com.android.server.wm.WindowManagerService: boolean mClientFreezingScreen>;

        if $z3 == 0 goto label132;

        $r100 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r100.<com.android.server.wm.WindowManagerService: boolean mClientFreezingScreen> = 0;

        $r92 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r92.<com.android.server.wm.WindowManagerService: java.lang.Object mLastFinishedFreezeSource> = "client-timeout";

        $r91 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$400(com.android.server.wm.WindowManagerService)>($r91);

     label132:
        exitmonitor r24;

     label133:
        return;

     label134:
        $r265 := @caughtexception;

        r23 = $r265;

     label135:
        exitmonitor r24;

     label136:
        throw r23;

     label137:
        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: void removeMessages(int)>(18);

        $r149 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r149.<com.android.server.wm.WindowManagerService: void sendNewConfiguration()>();

        return;

     label138:
        $r136 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z6 = staticinvoke <com.android.server.wm.WindowManagerService: boolean access$500(com.android.server.wm.WindowManagerService)>($r136);

        if $z6 == 0 goto label001;

        $r132 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r20 = $r132.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r20;

     label139:
        $r133 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: boolean access$502(com.android.server.wm.WindowManagerService,boolean)>($r133, 0);

        exitmonitor r20;

     label140:
        $r148 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$600(com.android.server.wm.WindowManagerService)>($r148);

        return;

     label141:
        $r264 := @caughtexception;

        r22 = $r264;

     label142:
        exitmonitor r20;

     label143:
        throw r22;

     label144:
        $r124 = r1.<android.os.Message: java.lang.Object obj>;

        $r125 = (android.os.IBinder) $r124;

        $r123 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r19 = $r123.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r19;

     label145:
        $r142 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r141 = $r142.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        if $r141 == null goto label146;

        $r143 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r138 = $r143.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r138.<com.android.server.wm.DragState: void unregister()>();

        $r137 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r140 = $r137.<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r140.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        $r139 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r135 = $r139.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r135.<com.android.server.wm.DragState: void reset()>();

        $r134 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r134.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState> = null;

     label146:
        exitmonitor r19;

     label147:
        return;

     label148:
        $r227 := @caughtexception;

        r21 = $r227;

     label149:
        exitmonitor r19;

     label150:
        throw r21;

     label151:
        $r129 = r1.<android.os.Message: java.lang.Object obj>;

        $r126 = (android.os.IBinder) $r129;

        $r127 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r18 = $r127.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r18;

     label152:
        $r131 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r130 = $r131.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        if $r130 == null goto label153;

        $r121 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r122 = $r121.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r122.<com.android.server.wm.DragState: boolean mDragResult> = 0;

        $r119 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r120 = $r119.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r120.<com.android.server.wm.DragState: void endDragLw()>();

     label153:
        exitmonitor r18;

     label154:
        return;

     label155:
        $r248 := @caughtexception;

        r17 = $r248;

     label156:
        exitmonitor r18;

     label157:
        throw r17;

     label158:
        $r128 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r128.<com.android.server.wm.WindowManagerService: void notifyHardKeyboardStatusChange()>();

        return;

     label159:
        $r110 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r110.<com.android.server.wm.WindowManagerService: void performBootTimeout()>();

        return;

     label160:
        $r104 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r13 = $r104.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r13;

     label161:
        $r115 = r1.<android.os.Message: java.lang.Object obj>;

        r15 = (android.util.Pair) $r115;

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r113 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout waiting for drawn: ");

        $r118 = r15.<android.util.Pair: java.lang.Object first>;

        $r117 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r118);

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r116);

        $r109 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r108 = $r109.<com.android.server.wm.WindowManagerService: java.util.ArrayList mWaitingForDrawn>;

        $z4 = virtualinvoke $r108.<java.util.ArrayList: boolean remove(java.lang.Object)>(r15);

        if $z4 != 0 goto label166;

        exitmonitor r13;

     label162:
        return;

     label163:
        $r259 := @caughtexception;

        r14 = $r259;

     label164:
        exitmonitor r13;

     label165:
        throw r14;

     label166:
        exitmonitor r13;

     label167:
        $r112 = r15.<android.util.Pair: java.lang.Object second>;

        $r111 = (android.os.IRemoteCallback) $r112;

        interfaceinvoke $r111.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label168:
        return;

     label169:
        $r256 := @caughtexception;

        return;

     label170:
        $r103 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i13 = r1.<android.os.Message: int arg1>;

        $i12 = r1.<android.os.Message: int arg2>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$700(com.android.server.wm.WindowManagerService,int,int)>($r103, $i13, $i12);

        return;

     label171:
        $r101 = r1.<android.os.Message: java.lang.Object obj>;

        $r102 = (android.os.IRemoteCallback) $r101;

        interfaceinvoke $r102.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label172:
        return;

     label173:
        $r228 := @caughtexception;

        return;

     label174:
        $r106 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r10 = $r106.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r10;

     label175:
        $r107 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i15 = r1.<android.os.Message: int arg1>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$800(com.android.server.wm.WindowManagerService,int)>($r107, $i15);

        exitmonitor r10;

     label176:
        return;

     label177:
        $r245 := @caughtexception;

        r11 = $r245;

     label178:
        exitmonitor r10;

     label179:
        throw r11;

     label180:
        $r95 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r8 = $r95.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r8;

     label181:
        $r105 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i14 = r1.<android.os.Message: int arg1>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$900(com.android.server.wm.WindowManagerService,int)>($r105, $i14);

        exitmonitor r8;

     label182:
        return;

     label183:
        $r262 := @caughtexception;

        r9 = $r262;

     label184:
        exitmonitor r8;

     label185:
        throw r9;

     label186:
        $r93 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r6 = $r93.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r6;

     label187:
        $r94 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i11 = r1.<android.os.Message: int arg1>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1000(com.android.server.wm.WindowManagerService,int)>($r94, $i11);

        exitmonitor r6;

     label188:
        return;

     label189:
        $r266 := @caughtexception;

        r7 = $r266;

     label190:
        exitmonitor r6;

     label191:
        throw r7;

     label192:
        $r90 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r3 = $r90.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r3;

     label193:
        $r89 = r1.<android.os.Message: java.lang.Object obj>;

        $r88 = (com.android.server.wm.DisplayContent) $r89;

        $i9 = r1.<android.os.Message: int arg1>;

        $i10 = r1.<android.os.Message: int arg2>;

        i0 = virtualinvoke $r88.<com.android.server.wm.DisplayContent: int stackIdFromPoint(int,int)>($i9, $i10);

        exitmonitor r3;

     label194:
        if i0 < 0 goto label001;

     label195:
        $r97 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r96 = $r97.<com.android.server.wm.WindowManagerService: android.app.IActivityManager mActivityManager>;

        interfaceinvoke $r96.<android.app.IActivityManager: void setFocusedStack(int)>(i0);

     label196:
        return;

     label197:
        $r257 := @caughtexception;

        return;

     label198:
        $r258 := @caughtexception;

        r4 = $r258;

     label199:
        exitmonitor r3;

     label200:
        throw r4;

     label201:
        $r85 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r82 = $r85.<com.android.server.wm.WindowManagerService: android.app.IActivityManager mActivityManager>;

        $r84 = r1.<android.os.Message: java.lang.Object obj>;

        $r83 = (android.os.IBinder) $r84;

        interfaceinvoke $r82.<android.app.IActivityManager: void notifyActivityDrawn(android.os.IBinder)>($r83);

     label202:
        return;

     label203:
        $r261 := @caughtexception;

        return;

     label204:
        $r247 := @caughtexception;

        return;

     label205:
        z0 = 0;

        goto label082;

     label206:
        goto label083;

     label207:
        i2 = i2 + -1;

        goto label122;

     label208:
        i1 = i1 + -1;

        goto label120;

        catch java.lang.Throwable from label003 to label004 with label007;
        catch java.lang.Throwable from label005 to label006 with label007;
        catch java.lang.Throwable from label008 to label009 with label007;
        catch java.lang.Throwable from label010 to label011 with label007;
        catch java.lang.Throwable from label012 to label013 with label007;
        catch java.lang.Throwable from label014 to label015 with label007;
        catch java.lang.Throwable from label018 to label019 with label021;
        catch java.lang.Throwable from label022 to label023 with label021;
        catch java.lang.Throwable from label025 to label026 with label027;
        catch java.lang.Throwable from label028 to label029 with label027;
        catch java.lang.Exception from label031 to label032 with label044;
        catch java.lang.Throwable from label034 to label035 with label047;
        catch java.lang.Throwable from label035 to label036 with label047;
        catch java.lang.Throwable from label037 to label038 with label047;
        catch java.lang.Throwable from label039 to label040 with label047;
        catch java.lang.Exception from label041 to label042 with label043;
        catch java.lang.Throwable from label045 to label046 with label047;
        catch java.lang.Throwable from label048 to label049 with label047;
        catch java.lang.Throwable from label052 to label053 with label060;
        catch java.lang.Throwable from label054 to label055 with label060;
        catch java.lang.Throwable from label055 to label056 with label060;
        catch java.lang.Exception from label057 to label058 with label059;
        catch java.lang.Throwable from label061 to label062 with label060;
        catch java.lang.Throwable from label064 to label065 with label068;
        catch java.lang.Throwable from label066 to label067 with label068;
        catch java.lang.Throwable from label069 to label070 with label068;
        catch java.lang.Throwable from label071 to label072 with label068;
        catch java.lang.Throwable from label073 to label074 with label068;
        catch java.lang.Exception from label074 to label075 with label076;
        catch android.os.RemoteException from label078 to label079 with label080;
        catch android.os.RemoteException from label084 to label085 with label204;
        catch android.os.RemoteException from label086 to label087 with label204;
        catch java.lang.Throwable from label089 to label090 with label093;
        catch java.lang.Throwable from label091 to label092 with label093;
        catch java.lang.Throwable from label094 to label095 with label093;
        catch java.lang.Throwable from label096 to label097 with label093;
        catch java.lang.Throwable from label099 to label100 with label102;
        catch java.lang.Throwable from label100 to label101 with label102;
        catch java.lang.Throwable from label103 to label104 with label102;
        catch java.lang.Throwable from label107 to label108 with label110;
        catch java.lang.Throwable from label108 to label109 with label110;
        catch java.lang.Throwable from label111 to label112 with label110;
        catch java.lang.Throwable from label113 to label114 with label110;
        catch java.lang.Throwable from label115 to label116 with label110;
        catch java.lang.Throwable from label119 to label120 with label127;
        catch java.lang.Throwable from label121 to label122 with label127;
        catch java.lang.Throwable from label123 to label124 with label127;
        catch java.lang.Throwable from label125 to label126 with label127;
        catch java.lang.Throwable from label128 to label129 with label127;
        catch java.lang.Throwable from label131 to label132 with label134;
        catch java.lang.Throwable from label132 to label133 with label134;
        catch java.lang.Throwable from label135 to label136 with label134;
        catch java.lang.Throwable from label139 to label140 with label141;
        catch java.lang.Throwable from label142 to label143 with label141;
        catch java.lang.Throwable from label145 to label146 with label148;
        catch java.lang.Throwable from label146 to label147 with label148;
        catch java.lang.Throwable from label149 to label150 with label148;
        catch java.lang.Throwable from label152 to label153 with label155;
        catch java.lang.Throwable from label153 to label154 with label155;
        catch java.lang.Throwable from label156 to label157 with label155;
        catch java.lang.Throwable from label161 to label162 with label163;
        catch java.lang.Throwable from label164 to label165 with label163;
        catch java.lang.Throwable from label166 to label167 with label163;
        catch android.os.RemoteException from label167 to label168 with label169;
        catch android.os.RemoteException from label171 to label172 with label173;
        catch java.lang.Throwable from label175 to label176 with label177;
        catch java.lang.Throwable from label178 to label179 with label177;
        catch java.lang.Throwable from label181 to label182 with label183;
        catch java.lang.Throwable from label184 to label185 with label183;
        catch java.lang.Throwable from label187 to label188 with label189;
        catch java.lang.Throwable from label190 to label191 with label189;
        catch java.lang.Throwable from label193 to label194 with label198;
        catch android.os.RemoteException from label195 to label196 with label197;
        catch java.lang.Throwable from label199 to label200 with label198;
        catch android.os.RemoteException from label201 to label202 with label203;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowManagerService$H: int WINDOW_FREEZE_TIMEOUT> = 11;

        <com.android.server.wm.WindowManagerService$H: int WAITING_FOR_DRAWN_TIMEOUT> = 24;

        <com.android.server.wm.WindowManagerService$H: int TAP_OUTSIDE_STACK> = 31;

        <com.android.server.wm.WindowManagerService$H: int SHOW_STRICT_MODE_VIOLATION> = 25;

        <com.android.server.wm.WindowManagerService$H: int SEND_NEW_CONFIGURATION> = 18;

        <com.android.server.wm.WindowManagerService$H: int REPORT_WINDOWS_CHANGE> = 19;

        <com.android.server.wm.WindowManagerService$H: int REPORT_LOSING_FOCUS> = 3;

        <com.android.server.wm.WindowManagerService$H: int REPORT_HARD_KEYBOARD_STATUS_CHANGE> = 22;

        <com.android.server.wm.WindowManagerService$H: int REPORT_FOCUS_CHANGE> = 2;

        <com.android.server.wm.WindowManagerService$H: int REPORT_APPLICATION_TOKEN_WINDOWS> = 8;

        <com.android.server.wm.WindowManagerService$H: int REPORT_APPLICATION_TOKEN_DRAWN> = 9;

        <com.android.server.wm.WindowManagerService$H: int REMOVE_STARTING_TIMEOUT> = 33;

        <com.android.server.wm.WindowManagerService$H: int REMOVE_STARTING> = 6;

        <com.android.server.wm.WindowManagerService$H: int PERSIST_ANIMATION_SCALE> = 14;

        <com.android.server.wm.WindowManagerService$H: int NOTIFY_ACTIVITY_DRAWN> = 32;

        <com.android.server.wm.WindowManagerService$H: int FORCE_GC> = 15;

        <com.android.server.wm.WindowManagerService$H: int FINISHED_STARTING> = 7;

        <com.android.server.wm.WindowManagerService$H: int ENABLE_SCREEN> = 16;

        <com.android.server.wm.WindowManagerService$H: int DRAG_START_TIMEOUT> = 20;

        <com.android.server.wm.WindowManagerService$H: int DRAG_END_TIMEOUT> = 21;

        <com.android.server.wm.WindowManagerService$H: int DO_TRAVERSAL> = 4;

        <com.android.server.wm.WindowManagerService$H: int DO_DISPLAY_REMOVED> = 28;

        <com.android.server.wm.WindowManagerService$H: int DO_DISPLAY_CHANGED> = 29;

        <com.android.server.wm.WindowManagerService$H: int DO_DISPLAY_ADDED> = 27;

        <com.android.server.wm.WindowManagerService$H: int DO_ANIMATION_CALLBACK> = 26;

        <com.android.server.wm.WindowManagerService$H: int CLIENT_FREEZE_TIMEOUT> = 30;

        <com.android.server.wm.WindowManagerService$H: int BOOT_TIMEOUT> = 23;

        <com.android.server.wm.WindowManagerService$H: int APP_TRANSITION_TIMEOUT> = 13;

        <com.android.server.wm.WindowManagerService$H: int APP_FREEZE_TIMEOUT> = 17;

        <com.android.server.wm.WindowManagerService$H: int ADD_STARTING> = 5;

        return;
    }
}
