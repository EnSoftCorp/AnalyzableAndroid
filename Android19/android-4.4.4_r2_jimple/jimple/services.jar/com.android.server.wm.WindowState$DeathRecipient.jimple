class com.android.server.wm.WindowState$DeathRecipient extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    final com.android.server.wm.WindowState this$0;

    private void <init>(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowState$DeathRecipient r0;
        com.android.server.wm.WindowState r1;

        r0 := @this: com.android.server.wm.WindowState$DeathRecipient;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.wm.WindowState, com.android.server.wm.WindowState$1)
    {
        com.android.server.wm.WindowState$DeathRecipient r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.WindowState$1 r2;

        r0 := @this: com.android.server.wm.WindowState$DeathRecipient;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: com.android.server.wm.WindowState$1;

        specialinvoke r0.<com.android.server.wm.WindowState$DeathRecipient: void <init>(com.android.server.wm.WindowState)>(r1);

        return;
    }

    public void binderDied()
    {
        com.android.server.wm.WindowState$DeathRecipient r0;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r26;
        com.android.server.wm.WindowState r4, $r5, $r7, $r8, $r9, $r17, $r18, $r19, $r20, $r23, $r24;
        com.android.server.wm.WindowManagerService $r6, $r12, $r21, $r28;
        android.view.IWindow $r10;
        com.android.server.wm.Session $r11, $r22, $r27;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.String $r15;
        boolean $z0;
        java.lang.IllegalArgumentException $r25;

        r0 := @this: com.android.server.wm.WindowState$DeathRecipient;

     label01:
        $r5 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r6 = $r5.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        r2 = $r6.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        entermonitor r2;

     label02:
        $r7 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r12 = $r7.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r8 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r11 = $r8.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $r9 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r10 = $r9.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        r4 = virtualinvoke $r12.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>($r11, $r10, 0);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WIN DEATH: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WindowState", $r15);

     label03:
        if r4 == null goto label07;

     label04:
        $r24 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r28 = $r24.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r23 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r27 = $r23.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        virtualinvoke $r28.<com.android.server.wm.WindowManagerService: void removeWindowLocked(com.android.server.wm.Session,com.android.server.wm.WindowState)>($r27, r4);

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r17 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $z0 = $r17.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowState", "!!! LEAK !!! Window removed but surface still valid.");

        $r18 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r21 = $r18.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mService>;

        $r20 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r22 = $r20.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $r19 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        virtualinvoke $r21.<com.android.server.wm.WindowManagerService: void removeWindowLocked(com.android.server.wm.Session,com.android.server.wm.WindowState)>($r22, $r19);

     label08:
        goto label05;

     label09:
        $r26 := @caughtexception;

        r3 = $r26;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        $r25 := @caughtexception;

        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.IllegalArgumentException from label11 to label12 with label12;
    }
}
