class com.android.server.WallpaperManagerService$WallpaperConnection extends android.service.wallpaper.IWallpaperConnection$Stub implements android.content.ServiceConnection
{
    boolean mDimensionsChanged;
    android.service.wallpaper.IWallpaperEngine mEngine;
    final android.app.WallpaperInfo mInfo;
    android.os.IRemoteCallback mReply;
    android.service.wallpaper.IWallpaperService mService;
    final android.os.Binder mToken;
    com.android.server.WallpaperManagerService$WallpaperData mWallpaper;
    final com.android.server.WallpaperManagerService this$0;

    public void <init>(com.android.server.WallpaperManagerService, android.app.WallpaperInfo, com.android.server.WallpaperManagerService$WallpaperData)
    {
        com.android.server.WallpaperManagerService$WallpaperConnection r0;
        com.android.server.WallpaperManagerService r1;
        android.app.WallpaperInfo r2;
        com.android.server.WallpaperManagerService$WallpaperData r3;
        android.os.Binder $r4;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: com.android.server.WallpaperManagerService;

        r2 := @parameter1: android.app.WallpaperInfo;

        r3 := @parameter2: com.android.server.WallpaperManagerService$WallpaperData;

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.IWallpaperConnection$Stub: void <init>()>();

        $r4 = new android.os.Binder;

        specialinvoke $r4.<android.os.Binder: void <init>()>();

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.Binder mToken> = $r4;

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: boolean mDimensionsChanged> = 0;

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.app.WallpaperInfo mInfo> = r2;

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper> = r3;

        return;
    }

    public void attachEngine(android.service.wallpaper.IWallpaperEngine)
    {
        com.android.server.WallpaperManagerService$WallpaperConnection r0;
        android.service.wallpaper.IWallpaperEngine r1, $r8;
        java.lang.Object r2;
        java.lang.Throwable r3, $r10, r11;
        boolean z0;
        android.os.RemoteException r4, $r9;
        com.android.server.WallpaperManagerService $r5;
        com.android.server.WallpaperManagerService$WallpaperData $r6, $r7;
        int $i0, $i1;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        $r5 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        r2 = $r5.<com.android.server.WallpaperManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine> = r1;

        z0 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: boolean mDimensionsChanged>;

     label02:
        if z0 == 0 goto label05;

     label03:
        $r8 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine>;

        $r6 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $i1 = $r6.<com.android.server.WallpaperManagerService$WallpaperData: int width>;

        $r7 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $i0 = $r7.<com.android.server.WallpaperManagerService$WallpaperData: int height>;

        interfaceinvoke $r8.<android.service.wallpaper.IWallpaperEngine: void setDesiredSize(int,int)>($i1, $i0);

     label04:
        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: boolean mDimensionsChanged> = 0;

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r9 := @caughtexception;

        r4 = $r9;

     label08:
        r11 = (java.lang.Throwable) r4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Failed to set wallpaper dimensions", r11);

     label09:
        goto label04;

     label10:
        $r10 := @caughtexception;

        r3 = $r10;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void engineShown(android.service.wallpaper.IWallpaperEngine)
    {
        com.android.server.WallpaperManagerService$WallpaperConnection r0;
        android.service.wallpaper.IWallpaperEngine r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        long l0;
        com.android.server.WallpaperManagerService $r5;
        android.os.IRemoteCallback $r6, $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.service.wallpaper.IWallpaperEngine;

        $r5 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        r2 = $r5.<com.android.server.WallpaperManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply>;

        if $r6 == null goto label04;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r7 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply>;

        interfaceinvoke $r7.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label03:
        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.IRemoteCallback mReply> = null;

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        $r8 := @caughtexception;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label08:
        goto label03;

     label09:
        $r9 := @caughtexception;

        r3 = $r9;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.WallpaperManagerService$WallpaperConnection r0, $r7;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r13;
        com.android.server.WallpaperManagerService $r5, $r11, $r14;
        com.android.server.WallpaperManagerService$WallpaperData $r6, $r8, $r10, $r12;
        long $l0;
        android.service.wallpaper.IWallpaperService $r9;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r5 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        r3 = $r5.<com.android.server.WallpaperManagerService: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        $r6 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7 = $r6.<com.android.server.WallpaperManagerService$WallpaperData: com.android.server.WallpaperManagerService$WallpaperConnection connection>;

        if $r7 != r0 goto label2;

        $r8 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8.<com.android.server.WallpaperManagerService$WallpaperData: long lastDiedTime> = $l0;

        $r9 = staticinvoke <android.service.wallpaper.IWallpaperService$Stub: android.service.wallpaper.IWallpaperService asInterface(android.os.IBinder)>(r2);

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService> = $r9;

        $r11 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        $r10 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        virtualinvoke $r11.<com.android.server.WallpaperManagerService: void attachServiceLocked(com.android.server.WallpaperManagerService$WallpaperConnection,com.android.server.WallpaperManagerService$WallpaperData)>(r0, $r10);

        $r14 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        $r12 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        staticinvoke <com.android.server.WallpaperManagerService: void access$200(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)>($r14, $r12);

     label2:
        exitmonitor r3;

     label3:
        return;

     label4:
        $r13 := @caughtexception;

        r4 = $r13;

     label5:
        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.WallpaperManagerService$WallpaperConnection r0, $r6;
        android.content.ComponentName r1, $r10;
        java.lang.Object r2;
        java.lang.Throwable r3, $r19;
        com.android.server.WallpaperManagerService $r4, $r15, $r18;
        com.android.server.WallpaperManagerService$WallpaperData $r5, $r9, $r13, $r14, $r16, $r17;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.String $r12;
        boolean $z0;
        long $l1, $l2, $l4;
        byte $b3;
        int $i5, $i6, $i8;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: android.content.ComponentName;

        $r4 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        r2 = $r4.<com.android.server.WallpaperManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperService mService> = null;

        r0.<com.android.server.WallpaperManagerService$WallpaperConnection: android.service.wallpaper.IWallpaperEngine mEngine> = null;

        $r5 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $r6 = $r5.<com.android.server.WallpaperManagerService$WallpaperData: com.android.server.WallpaperManagerService$WallpaperConnection connection>;

        if $r6 != r0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wallpaper service gone: ");

        $r9 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $r10 = $r9.<com.android.server.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperService", $r12);

        $r13 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $z0 = $r13.<com.android.server.WallpaperManagerService$WallpaperData: boolean wallpaperUpdating>;

        if $z0 != 0 goto label2;

        $r14 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $l2 = $r14.<com.android.server.WallpaperManagerService$WallpaperData: long lastDiedTime>;

        $l1 = 10000L + $l2;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b3 = $l1 cmp $l4;

        if $b3 <= 0 goto label2;

        $r16 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $i5 = $r16.<com.android.server.WallpaperManagerService$WallpaperData: int userId>;

        $r15 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        $i6 = $r15.<com.android.server.WallpaperManagerService: int mCurrentUserId>;

        if $i5 != $i6 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WallpaperService", "Reverting to built-in wallpaper!");

        $r18 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        $r17 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $i8 = $r17.<com.android.server.WallpaperManagerService$WallpaperData: int userId>;

        virtualinvoke $r18.<com.android.server.WallpaperManagerService: void clearWallpaperLocked(boolean,int,android.os.IRemoteCallback)>(1, $i8, null);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r19 := @caughtexception;

        r3 = $r19;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.os.ParcelFileDescriptor setWallpaper(java.lang.String)
    {
        com.android.server.WallpaperManagerService$WallpaperConnection r0, $r7;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r10;
        android.os.ParcelFileDescriptor r4;
        com.android.server.WallpaperManagerService $r5, $r9;
        com.android.server.WallpaperManagerService$WallpaperData $r6, $r8;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperConnection;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        r2 = $r5.<com.android.server.WallpaperManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $r7 = $r6.<com.android.server.WallpaperManagerService$WallpaperData: com.android.server.WallpaperManagerService$WallpaperConnection connection>;

        if $r7 != r0 goto label3;

        $r9 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService this$0>;

        $r8 = r0.<com.android.server.WallpaperManagerService$WallpaperConnection: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        r4 = virtualinvoke $r9.<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String,com.android.server.WallpaperManagerService$WallpaperData)>(r1, $r8);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        exitmonitor r2;

     label4:
        return null;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
