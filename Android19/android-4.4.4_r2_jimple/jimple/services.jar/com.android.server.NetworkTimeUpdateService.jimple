public class com.android.server.NetworkTimeUpdateService extends java.lang.Object
{
    private static final java.lang.String ACTION_POLL;
    private static final boolean DBG;
    private static final int EVENT_AUTO_TIME_CHANGED;
    private static final int EVENT_NETWORK_CONNECTED;
    private static final int EVENT_POLL_NETWORK_TIME;
    private static final long NOT_SET;
    private static int POLL_REQUEST;
    private static final java.lang.String TAG;
    private android.app.AlarmManager mAlarmManager;
    private android.content.BroadcastReceiver mConnectivityReceiver;
    private android.content.Context mContext;
    private android.os.Handler mHandler;
    private long mLastNtpFetchTime;
    private android.content.BroadcastReceiver mNitzReceiver;
    private long mNitzTimeSetTime;
    private long mNitzZoneSetTime;
    private android.app.PendingIntent mPendingPollIntent;
    private final long mPollingIntervalMs;
    private final long mPollingIntervalShorterMs;
    private com.android.server.NetworkTimeUpdateService$SettingsObserver mSettingsObserver;
    private android.util.TrustedTime mTime;
    private final int mTimeErrorThresholdMs;
    private int mTryAgainCounter;
    private final int mTryAgainTimesMax;

    static void <clinit>()
    {
        <com.android.server.NetworkTimeUpdateService: java.lang.String TAG> = "NetworkTimeUpdateService";

        <com.android.server.NetworkTimeUpdateService: long NOT_SET> = -1L;

        <com.android.server.NetworkTimeUpdateService: int EVENT_POLL_NETWORK_TIME> = 2;

        <com.android.server.NetworkTimeUpdateService: int EVENT_NETWORK_CONNECTED> = 3;

        <com.android.server.NetworkTimeUpdateService: int EVENT_AUTO_TIME_CHANGED> = 1;

        <com.android.server.NetworkTimeUpdateService: boolean DBG> = 0;

        <com.android.server.NetworkTimeUpdateService: java.lang.String ACTION_POLL> = "com.android.server.NetworkTimeUpdateService.action.POLL";

        <com.android.server.NetworkTimeUpdateService: int POLL_REQUEST> = 0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.content.Context r1, $r6, $r10, $r12, $r14, $r16, $r19;
        android.content.Intent r2, $r9;
        com.android.server.NetworkTimeUpdateService$2 $r3;
        com.android.server.NetworkTimeUpdateService$3 $r4;
        android.util.NtpTrustedTime $r5;
        java.lang.Object $r7;
        android.app.AlarmManager $r8;
        int $i0, $i1, $i3, $i5, $i6;
        android.app.PendingIntent $r11;
        android.content.res.Resources $r13, $r15, $r17, $r18;
        long $l2, $l4;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.NetworkTimeUpdateService: long mNitzTimeSetTime> = -1L;

        r0.<com.android.server.NetworkTimeUpdateService: long mNitzZoneSetTime> = -1L;

        r0.<com.android.server.NetworkTimeUpdateService: long mLastNtpFetchTime> = -1L;

        $r3 = new com.android.server.NetworkTimeUpdateService$2;

        specialinvoke $r3.<com.android.server.NetworkTimeUpdateService$2: void <init>(com.android.server.NetworkTimeUpdateService)>(r0);

        r0.<com.android.server.NetworkTimeUpdateService: android.content.BroadcastReceiver mNitzReceiver> = $r3;

        $r4 = new com.android.server.NetworkTimeUpdateService$3;

        specialinvoke $r4.<com.android.server.NetworkTimeUpdateService$3: void <init>(com.android.server.NetworkTimeUpdateService)>(r0);

        r0.<com.android.server.NetworkTimeUpdateService: android.content.BroadcastReceiver mConnectivityReceiver> = $r4;

        r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext> = r1;

        $r5 = staticinvoke <android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>(r1);

        r0.<com.android.server.NetworkTimeUpdateService: android.util.TrustedTime mTime> = $r5;

        $r6 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r8 = (android.app.AlarmManager) $r7;

        r0.<com.android.server.NetworkTimeUpdateService: android.app.AlarmManager mAlarmManager> = $r8;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.server.NetworkTimeUpdateService.action.POLL", null);

        r2 = $r9;

        $r10 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $i0 = <com.android.server.NetworkTimeUpdateService: int POLL_REQUEST>;

        $r11 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r10, $i0, r2, 0);

        r0.<com.android.server.NetworkTimeUpdateService: android.app.PendingIntent mPendingPollIntent> = $r11;

        $r12 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r13.<android.content.res.Resources: int getInteger(int)>(17694780);

        $l2 = (long) $i1;

        r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs> = $l2;

        $r14 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r15.<android.content.res.Resources: int getInteger(int)>(17694781);

        $l4 = (long) $i3;

        r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalShorterMs> = $l4;

        $r16 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        $i5 = virtualinvoke $r17.<android.content.res.Resources: int getInteger(int)>(17694782);

        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainTimesMax> = $i5;

        $r19 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r18 = virtualinvoke $r19.<android.content.Context: android.content.res.Resources getResources()>();

        $i6 = virtualinvoke $r18.<android.content.res.Resources: int getInteger(int)>(17694783);

        r0.<com.android.server.NetworkTimeUpdateService: int mTimeErrorThresholdMs> = $i6;

        return;
    }

    static android.os.Handler access$000(com.android.server.NetworkTimeUpdateService)
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler>;

        return $r1;
    }

    static long access$102(com.android.server.NetworkTimeUpdateService, long)
    {
        com.android.server.NetworkTimeUpdateService r0;
        long l0;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        l0 := @parameter1: long;

        r0.<com.android.server.NetworkTimeUpdateService: long mNitzTimeSetTime> = l0;

        return l0;
    }

    static long access$202(com.android.server.NetworkTimeUpdateService, long)
    {
        com.android.server.NetworkTimeUpdateService r0;
        long l0;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        l0 := @parameter1: long;

        r0.<com.android.server.NetworkTimeUpdateService: long mNitzZoneSetTime> = l0;

        return l0;
    }

    static void access$300(com.android.server.NetworkTimeUpdateService, int)
    {
        com.android.server.NetworkTimeUpdateService r0;
        int i0;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void onPollNetworkTime(int)>(i0);

        return;
    }

    private boolean isAutomaticTimeRequested()
    {
        com.android.server.NetworkTimeUpdateService r0;
        int i0;
        boolean z0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "auto_time", 0);

        z0 = 0;

        if i0 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private void onPollNetworkTime(int)
    {
        com.android.server.NetworkTimeUpdateService r0;
        int i0, $i13, $i15, $i16, $i17, $i20, $i21;
        long l1, l2, l3, $l4, $l6, $l8, $l9, $l11, $l12, $l18, $l19, $l22, $l23, $l24, $l26, $l28, $l29, $l31, $l32, $l33, $l34, $l35, $l37, $l38, $l40;
        boolean $z0;
        byte $b5, $b7, $b10, $b14, $b25, $b27, $b30, $b36, $b39;
        android.util.TrustedTime $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.NetworkTimeUpdateService: boolean isAutomaticTimeRequested()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = r0.<com.android.server.NetworkTimeUpdateService: long mNitzTimeSetTime>;

        $b5 = $l4 cmp -1L;

        if $b5 == 0 goto label02;

        $l35 = r0.<com.android.server.NetworkTimeUpdateService: long mNitzTimeSetTime>;

        $l40 = l1 - $l35;

        $l34 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        $b39 = $l40 cmp $l34;

        if $b39 >= 0 goto label02;

        $l38 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>($l38);

        return;

     label02:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = r0.<com.android.server.NetworkTimeUpdateService: long mLastNtpFetchTime>;

        $b7 = $l6 cmp -1L;

        if $b7 == 0 goto label03;

        $l33 = r0.<com.android.server.NetworkTimeUpdateService: long mLastNtpFetchTime>;

        $l32 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        $l37 = $l33 + $l32;

        $b36 = l1 cmp $l37;

        if $b36 >= 0 goto label03;

        if i0 != 1 goto label07;

     label03:
        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.util.TrustedTime mTime>;

        $l9 = interfaceinvoke $r1.<android.util.TrustedTime: long getCacheAge()>();

        $l8 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        $b10 = $l9 cmp $l8;

        if $b10 < 0 goto label04;

        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.util.TrustedTime mTime>;

        interfaceinvoke $r4.<android.util.TrustedTime: boolean forceRefresh()>();

     label04:
        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.util.TrustedTime mTime>;

        $l12 = interfaceinvoke $r2.<android.util.TrustedTime: long getCacheAge()>();

        $l11 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        $b14 = $l12 cmp $l11;

        if $b14 >= 0 goto label08;

        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.util.TrustedTime mTime>;

        l3 = interfaceinvoke $r3.<android.util.TrustedTime: long currentTimeMillis()>();

        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter> = 0;

        $l23 = l3 - l2;

        $l24 = staticinvoke <java.lang.Math: long abs(long)>($l23);

        $i21 = r0.<com.android.server.NetworkTimeUpdateService: int mTimeErrorThresholdMs>;

        $l22 = (long) $i21;

        $b27 = $l24 cmp $l22;

        if $b27 > 0 goto label05;

        $l29 = r0.<com.android.server.NetworkTimeUpdateService: long mLastNtpFetchTime>;

        $b30 = $l29 cmp -1L;

        if $b30 != 0 goto label06;

     label05:
        $l28 = l3 / 1000L;

        $b25 = $l28 cmp 2147483647L;

        if $b25 >= 0 goto label06;

        staticinvoke <android.os.SystemClock: boolean setCurrentTimeMillis(long)>(l3);

     label06:
        $l26 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.NetworkTimeUpdateService: long mLastNtpFetchTime> = $l26;

     label07:
        $l31 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>($l31);

        return;

     label08:
        $i13 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter>;

        $i16 = 1 + $i13;

        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter> = $i16;

        $i15 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainTimesMax>;

        if $i15 < 0 goto label09;

        $i20 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter>;

        $i17 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainTimesMax>;

        if $i20 > $i17 goto label10;

     label09:
        $l18 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalShorterMs>;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>($l18);

        return;

     label10:
        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter> = 0;

        $l19 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>($l19);

        return;
    }

    private void registerForAlarms()
    {
        com.android.server.NetworkTimeUpdateService r0;
        com.android.server.NetworkTimeUpdateService$1 $r1;
        android.content.Context $r2;
        android.content.IntentFilter $r3;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r1 = new com.android.server.NetworkTimeUpdateService$1;

        specialinvoke $r1.<com.android.server.NetworkTimeUpdateService$1: void <init>(com.android.server.NetworkTimeUpdateService)>(r0);

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.NetworkTimeUpdateService.action.POLL");

        virtualinvoke $r2.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, $r3);

        return;
    }

    private void registerForConnectivityIntents()
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.content.IntentFilter r1, $r2;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.content.BroadcastReceiver mConnectivityReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        return;
    }

    private void registerForTelephonyIntents()
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.content.IntentFilter r1, $r2;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.NETWORK_SET_TIME");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.NETWORK_SET_TIMEZONE");

        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.content.BroadcastReceiver mNitzReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        return;
    }

    private void resetAlarm(long)
    {
        com.android.server.NetworkTimeUpdateService r0;
        long l0, l1, $l2;
        android.app.PendingIntent $r1, $r3;
        android.app.AlarmManager $r2, $r4;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.app.PendingIntent mPendingPollIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = l0 + $l2;

        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.app.AlarmManager mAlarmManager>;

        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.app.PendingIntent mPendingPollIntent>;

        virtualinvoke $r4.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(3, l1, $r3);

        return;
    }

    public void systemRunning()
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.os.HandlerThread r1, $r2;
        com.android.server.NetworkTimeUpdateService$MyHandler $r3;
        android.os.Looper $r4;
        android.os.Handler $r5, $r8;
        android.os.Message $r6;
        com.android.server.NetworkTimeUpdateService$SettingsObserver $r7, $r10;
        android.content.Context $r9;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void registerForTelephonyIntents()>();

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void registerForAlarms()>();

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void registerForConnectivityIntents()>();

        $r2 = new android.os.HandlerThread;

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("NetworkTimeUpdateService");

        r1 = $r2;

        virtualinvoke r1.<android.os.HandlerThread: void start()>();

        $r3 = new com.android.server.NetworkTimeUpdateService$MyHandler;

        $r4 = virtualinvoke r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<com.android.server.NetworkTimeUpdateService$MyHandler: void <init>(com.android.server.NetworkTimeUpdateService,android.os.Looper)>(r0, $r4);

        r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler> = $r3;

        $r5 = r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        $r7 = new com.android.server.NetworkTimeUpdateService$SettingsObserver;

        $r8 = r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler>;

        specialinvoke $r7.<com.android.server.NetworkTimeUpdateService$SettingsObserver: void <init>(android.os.Handler,int)>($r8, 1);

        r0.<com.android.server.NetworkTimeUpdateService: com.android.server.NetworkTimeUpdateService$SettingsObserver mSettingsObserver> = $r7;

        $r10 = r0.<com.android.server.NetworkTimeUpdateService: com.android.server.NetworkTimeUpdateService$SettingsObserver mSettingsObserver>;

        $r9 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        virtualinvoke $r10.<com.android.server.NetworkTimeUpdateService$SettingsObserver: void observe(android.content.Context)>($r9);

        return;
    }
}
