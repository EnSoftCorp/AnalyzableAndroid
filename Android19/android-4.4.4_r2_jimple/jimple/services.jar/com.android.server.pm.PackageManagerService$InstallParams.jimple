class com.android.server.pm.PackageManagerService$InstallParams extends com.android.server.pm.PackageManagerService$HandlerParams
{
    final android.content.pm.ContainerEncryptionParams encryptionParams;
    int flags;
    final java.lang.String installerPackageName;
    private com.android.server.pm.PackageManagerService$InstallArgs mArgs;
    private final android.net.Uri mPackageURI;
    private int mRet;
    private java.io.File mTempPackage;
    final android.content.pm.IPackageInstallObserver observer;
    final com.android.server.pm.PackageManagerService this$0;
    final android.content.pm.VerificationParams verificationParams;

    void <init>(com.android.server.pm.PackageManagerService, android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams, android.os.UserHandle)
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        com.android.server.pm.PackageManagerService r1;
        android.net.Uri r2;
        android.content.pm.IPackageInstallObserver r3;
        int i0;
        java.lang.String r4;
        android.content.pm.VerificationParams r5;
        android.content.pm.ContainerEncryptionParams r6;
        android.os.UserHandle r7;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        r1 := @parameter0: com.android.server.pm.PackageManagerService;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.pm.IPackageInstallObserver;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.content.pm.VerificationParams;

        r6 := @parameter6: android.content.pm.ContainerEncryptionParams;

        r7 := @parameter7: android.os.UserHandle;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.pm.PackageManagerService$HandlerParams: void <init>(com.android.server.pm.PackageManagerService,android.os.UserHandle)>(r1, r7);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI> = r2;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags> = i0;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.IPackageInstallObserver observer> = r3;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String installerPackageName> = r4;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams> = r5;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.ContainerEncryptionParams encryptionParams> = r6;

        return;
    }

    private int installLocationPolicy(android.content.pm.PackageInfoLite, int)
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        android.content.pm.PackageInfoLite r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        java.lang.String r2, $r17;
        boolean z0, $z1;
        java.util.HashMap r3, $r8;
        java.lang.Throwable r4, $r19;
        android.content.pm.PackageParser$Package r5;
        com.android.server.pm.PackageManagerService $r6, $r7;
        java.lang.Object $r9;
        android.content.pm.ApplicationInfo $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r18;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        r1 := @parameter0: android.content.pm.PackageInfoLite;

        i0 := @parameter1: int;

        r2 = r1.<android.content.pm.PackageInfoLite: java.lang.String packageName>;

        i1 = r1.<android.content.pm.PackageInfoLite: int installLocation>;

        $i2 = i0 & 8;

        if $i2 == 0 goto label30;

        z0 = 1;

     label01:
        $r6 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r3 = $r6.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        entermonitor r3;

     label02:
        $r7 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r8 = $r7.<com.android.server.pm.PackageManagerService: java.util.HashMap mPackages>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (android.content.pm.PackageParser$Package) $r9;

     label03:
        if r5 == null goto label21;

        $i3 = i0 & 2;

        if $i3 == 0 goto label27;

        $i5 = i0 & 128;

        if $i5 != 0 goto label06;

     label04:
        $i10 = r1.<android.content.pm.PackageInfoLite: int versionCode>;

        $i9 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        if $i10 >= $i9 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t install update of ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" update version ");

        $i11 = r1.<android.content.pm.PackageInfoLite: int versionCode>;

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is older than installed version ");

        $i12 = r5.<android.content.pm.PackageParser$Package: int mVersionCode>;

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r17);

        exitmonitor r3;

     label05:
        return -7;

     label06:
        $r10 = r5.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r10.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = 1 & $i6;

        if $i7 == 0 goto label15;

     label07:
        if z0 == 0 goto label13;

     label08:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Cannot install update to system app on sdcard");

        exitmonitor r3;

     label09:
        return -3;

     label10:
        $r19 := @caughtexception;

        r4 = $r19;

     label11:
        exitmonitor r3;

     label12:
        throw r4;

     label13:
        exitmonitor r3;

     label14:
        return 1;

     label15:
        if z0 == 0 goto label18;

     label16:
        exitmonitor r3;

     label17:
        return 2;

     label18:
        if i1 != 1 goto label31;

     label19:
        exitmonitor r3;

     label20:
        return 1;

     label21:
        exitmonitor r3;

     label22:
        if z0 == 0 goto label29;

        return 2;

     label23:
        $z1 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$600(android.content.pm.PackageParser$Package)>(r5);

        if $z1 == 0 goto label25;

        exitmonitor r3;

     label24:
        return 2;

     label25:
        exitmonitor r3;

     label26:
        return 1;

     label27:
        exitmonitor r3;

     label28:
        return -4;

     label29:
        $i4 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        return $i4;

     label30:
        z0 = 0;

        goto label01;

     label31:
        if i1 != 2 goto label23;

        goto label21;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
        catch java.lang.Throwable from label19 to label20 with label10;
        catch java.lang.Throwable from label21 to label22 with label10;
        catch java.lang.Throwable from label23 to label24 with label10;
        catch java.lang.Throwable from label25 to label26 with label10;
        catch java.lang.Throwable from label27 to label28 with label10;
    }

    public android.content.pm.ManifestDigest getManifestDigest()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        android.content.pm.VerificationParams $r1, $r2;
        android.content.pm.ManifestDigest $r3;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r3 = virtualinvoke $r2.<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()>();

        return $r3;
    }

    public android.net.Uri getPackageUri()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        java.io.File $r1, $r3;
        android.net.Uri $r2, $r4;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r3);

        return $r4;

     label1:
        $r2 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        return $r2;
    }

    void handleReturnCode()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        com.android.server.pm.PackageManagerService$InstallArgs $r1, $r2;
        int $i0;
        com.android.server.pm.PackageManagerService $r3;
        java.io.File $r4, $r5, $r8;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r2 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs>;

        $i0 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int mRet>;

        staticinvoke <com.android.server.pm.PackageManagerService: void access$1300(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,int)>($r3, $r2, $i0);

        $r4 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        $z0 = virtualinvoke $r5.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t delete temporary file: ");

        $r8 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", $r11);

     label1:
        return;
    }

    void handleServiceError()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        com.android.server.pm.PackageManagerService $r1;
        com.android.server.pm.PackageManagerService$InstallArgs $r2;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2700(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>($r1, r0);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs> = $r2;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int mRet> = -110;

        return;
    }

    public void handleStartCopy() throws android.os.RemoteException
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        int i0, i2, i3, i4, i5, i6, i7, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38;
        boolean z0, z1, $z2, $z3, $z4;
        android.content.pm.PackageInfoLite r1;
        com.android.server.DeviceStorageMonitorService r2;
        long l1, l8, $l36;
        java.lang.Throwable r3, $r118;
        java.io.File r4, r5, $r24, $r29, $r100, r129;
        java.lang.String r6, r17, $r33, $r37, $r45, $r56, $r59, $r68, $r112, $r114, $r116, $r124;
        com.android.server.pm.PackageManagerService$InstallArgs r7;
        android.content.Intent r8, r14, r125, r130;
        java.util.List r9, r12;
        com.android.server.pm.PackageVerificationState r10, r126;
        android.content.ComponentName r11, r13;
        android.os.ParcelFileDescriptor r15, r18;
        android.os.IBinder $r19;
        android.content.Context $r20, $r32, $r65, $r71, $r117;
        android.net.Uri $r21, $r31, $r40, $r80, $r82, $r84, $r88, $r92, $r95, $r110, $r113, $r115, $r120, $r122;
        com.android.server.pm.PackageManagerService $r22, $r23, $r25, $r27, $r30, $r34, $r36, $r38, $r39, $r44, $r48, $r49, $r51, $r57, $r58, $r60, $r62, $r66, $r72, $r97, $r99, $r104, $r105, $r106, $r119;
        android.content.pm.ContainerEncryptionParams $r26, $r103;
        android.os.UserHandle $r28, $r64, $r70;
        com.android.internal.app.IMediaContainerService $r35, $r96, $r98, $r101, $r102;
        android.content.pm.VerificationParams $r53, $r69, $r76, $r77, $r79, $r81, $r83, $r85, $r87, $r91, $r94;
        android.util.SparseArray $r61;
        java.lang.Object $r75;
        com.android.server.pm.Installer $r107;
        java.io.FileNotFoundException $r108;
        java.lang.StringBuilder $r121, $r123, r128;
        com.android.server.pm.PackageManagerService$InstallParams$1 r127;
        java.lang.AutoCloseable r131;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        i0 = 1;

        $i11 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i14 = 8 & $i11;

        if $i14 == 0 goto label14;

        z0 = 1;

     label01:
        $i13 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i12 = 16 & $i13;

        if $i12 == 0 goto label15;

        z1 = 1;

     label02:
        r1 = null;

        if z1 == 0 goto label16;

        if z0 == 0 goto label16;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageManager", "Conflicting flags specified for installing on both internal and external");

        i0 = -19;

     label03:
        if i0 != 1 goto label04;

        i9 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        if i9 != -3 goto label35;

        i0 = -19;

     label04:
        $r27 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r7 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2700(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>($r27, r0);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs> = r7;

        if i0 != 1 goto label13;

        $r28 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.os.UserHandle getUser()>();

        i2 = virtualinvoke $r28.<android.os.UserHandle: int getIdentifier()>();

        if i2 != -1 goto label05;

        $i23 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i24 = 32 & $i23;

        if $i24 == 0 goto label05;

        i2 = 0;

     label05:
        $r36 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r37 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2800(com.android.server.pm.PackageManagerService)>($r36);

        if $r37 != null goto label43;

        i3 = -1;

     label06:
        if i3 == -1 goto label46;

        $r44 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $i15 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $z2 = staticinvoke <com.android.server.pm.PackageManagerService: boolean access$2900(com.android.server.pm.PackageManagerService,int)>($r44, $i15);

        if $z2 == 0 goto label46;

        r125 = new android.content.Intent;

        specialinvoke r125.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_NEEDS_VERIFICATION");

        r8 = r125;

        $r40 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri getPackageUri()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r40, "application/vnd.android.package-archive");

        virtualinvoke r8.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        $r48 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r9 = virtualinvoke $r48.<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r8, "application/vnd.android.package-archive", 512, 0);

        $r49 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        i4 = staticinvoke <com.android.server.pm.PackageManagerService: int access$3008(com.android.server.pm.PackageManagerService)>($r49);

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_ID", i4);

        $r45 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String installerPackageName>;

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.pm.extra.VERIFICATION_INSTALLER_PACKAGE", $r45);

        $i16 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_INSTALL_FLAGS", $i16);

        $r56 = r1.<android.content.pm.PackageInfoLite: java.lang.String packageName>;

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.pm.extra.VERIFICATION_PACKAGE_NAME", $r56);

        $i17 = r1.<android.content.pm.PackageInfoLite: int versionCode>;

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_VERSION_CODE", $i17);

        $r53 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        if $r53 == null goto label11;

        $r69 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r80 = virtualinvoke $r69.<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>();

        if $r80 == null goto label07;

        $r87 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r88 = virtualinvoke $r87.<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.content.pm.extra.VERIFICATION_URI", $r88);

     label07:
        $r79 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r82 = virtualinvoke $r79.<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>();

        if $r82 == null goto label08;

        $r94 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r95 = virtualinvoke $r94.<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.ORIGINATING_URI", $r95);

     label08:
        $r81 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r84 = virtualinvoke $r81.<android.content.pm.VerificationParams: android.net.Uri getReferrer()>();

        if $r84 == null goto label09;

        $r91 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $r92 = virtualinvoke $r91.<android.content.pm.VerificationParams: android.net.Uri getReferrer()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REFERRER", $r92);

     label09:
        $r83 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i22 = virtualinvoke $r83.<android.content.pm.VerificationParams: int getOriginatingUid()>();

        if $i22 < 0 goto label10;

        $r77 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i21 = virtualinvoke $r77.<android.content.pm.VerificationParams: int getOriginatingUid()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.ORIGINATING_UID", $i21);

     label10:
        $r85 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i19 = virtualinvoke $r85.<android.content.pm.VerificationParams: int getInstallerUid()>();

        if $i19 < 0 goto label11;

        $r76 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.VerificationParams verificationParams>;

        $i20 = virtualinvoke $r76.<android.content.pm.VerificationParams: int getInstallerUid()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.content.pm.extra.VERIFICATION_INSTALLER_UID", $i20);

     label11:
        r126 = new com.android.server.pm.PackageVerificationState;

        specialinvoke r126.<com.android.server.pm.PackageVerificationState: void <init>(int,com.android.server.pm.PackageManagerService$InstallArgs)>(i3, r7);

        r10 = r126;

        $r51 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r61 = $r51.<com.android.server.pm.PackageManagerService: android.util.SparseArray mPendingVerification>;

        virtualinvoke $r61.<android.util.SparseArray: void append(int,java.lang.Object)>(i4, r10);

        $r62 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        r12 = staticinvoke <com.android.server.pm.PackageManagerService: java.util.List access$3100(com.android.server.pm.PackageManagerService,android.content.pm.PackageInfoLite,java.util.List,com.android.server.pm.PackageVerificationState)>($r62, r1, r9, r10);

        if r12 == null goto label12;

        i5 = interfaceinvoke r12.<java.util.List: int size()>();

        if i5 != 0 goto label44;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageManager", "Additional verifiers required, but none installed.");

        i0 = -22;

     label12:
        $r58 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r60 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r59 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2800(com.android.server.pm.PackageManagerService)>($r60);

        r11 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.ComponentName access$3200(com.android.server.pm.PackageManagerService,java.lang.String,java.util.List)>($r58, $r59, r9);

        if i0 != 1 goto label13;

        $r57 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r68 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2800(com.android.server.pm.PackageManagerService)>($r57);

        if $r68 == null goto label13;

        virtualinvoke r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r11);

        $r66 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r65 = $r66.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r64 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.os.UserHandle getUser()>();

        r127 = new com.android.server.pm.PackageManagerService$InstallParams$1;

        specialinvoke r127.<com.android.server.pm.PackageManagerService$InstallParams$1: void <init>(com.android.server.pm.PackageManagerService$InstallParams,int)>(r0, i4);

        virtualinvoke $r65.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r8, $r64, "android.permission.PACKAGE_VERIFICATION_AGENT", r127, null, 0, null, null);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService$InstallArgs mArgs> = null;

     label13:
        r0.<com.android.server.pm.PackageManagerService$InstallParams: int mRet> = i0;

        return;

     label14:
        z0 = 0;

        goto label01;

     label15:
        z1 = 0;

        goto label02;

     label16:
        $r19 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("devicestoragemonitor");

        r2 = (com.android.server.DeviceStorageMonitorService) $r19;

        if r2 != null goto label27;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", "Couldn\'t get low memory threshold; no free limit imposed");

        l1 = 0L;

     label17:
        $r22 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r20 = $r22.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r21 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        virtualinvoke $r20.<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>("com.android.defcontainer", $r21, 1);

        $r26 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.ContainerEncryptionParams encryptionParams>;

        if $r26 != null goto label18;

        $r112 = "file";

        $r113 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        $r114 = virtualinvoke $r113.<android.net.Uri: java.lang.String getScheme()>();

        $z4 = virtualinvoke $r112.<java.lang.String: boolean equals(java.lang.Object)>($r114);

        if $z4 != 0 goto label33;

     label18:
        $r23 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r25 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r24 = $r25.<com.android.server.pm.PackageManagerService: java.io.File mDrmAppPrivateInstallDir>;

        $r29 = staticinvoke <com.android.server.pm.PackageManagerService: java.io.File access$2600(com.android.server.pm.PackageManagerService,java.io.File)>($r23, $r24);

        r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage> = $r29;

        r4 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

     label19:
        if r4 == null goto label32;

     label20:
        $r100 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        r18 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r100, 805306368);

     label21:
        r15 = r18;

     label22:
        $r104 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r102 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)>($r104);

        $r115 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        $r103 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.ContainerEncryptionParams encryptionParams>;

        i0 = interfaceinvoke $r102.<com.android.internal.app.IMediaContainerService: int copyResource(android.net.Uri,android.content.pm.ContainerEncryptionParams,android.os.ParcelFileDescriptor)>($r115, $r103, r15);

        r131 = (java.lang.AutoCloseable) r15;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r131);

        r5 = r0.<com.android.server.pm.PackageManagerService$InstallParams: java.io.File mTempPackage>;

        $r116 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r116, 420, -1, -1);

     label23:
        r1 = null;

        if r5 == null goto label26;

     label24:
        r6 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r97 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r96 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)>($r97);

        $i25 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        r1 = interfaceinvoke $r96.<com.android.internal.app.IMediaContainerService: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,long)>(r6, $i25, l1);

        $i26 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        if $i26 != -1 goto label26;

        $r99 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r98 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)>($r99);

        $z3 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: boolean isForwardLocked()>();

        l8 = interfaceinvoke $r98.<com.android.internal.app.IMediaContainerService: long calculateInstalledSize(java.lang.String,boolean)>(r6, $z3);

        $r105 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r107 = $r105.<com.android.server.pm.PackageManagerService: com.android.server.pm.Installer mInstaller>;

        $l36 = l8 + l1;

        $i38 = virtualinvoke $r107.<com.android.server.pm.Installer: int freeCache(long)>($l36);

        if $i38 < 0 goto label25;

        $r106 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r101 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)>($r106);

        $i35 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        r1 = interfaceinvoke $r101.<com.android.internal.app.IMediaContainerService: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,long)>(r6, $i35, l1);

     label25:
        $i37 = r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation>;

        if $i37 != -6 goto label26;

        r1.<android.content.pm.PackageInfoLite: int recommendedInstallLocation> = -1;

     label26:
        $r30 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r32 = $r30.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r31 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        virtualinvoke $r32.<android.content.Context: void revokeUriPermission(android.net.Uri,int)>($r31, 1);

        goto label03;

     label27:
        l1 = virtualinvoke r2.<com.android.server.DeviceStorageMonitorService: long getMemoryLowThreshold()>();

        goto label17;

     label28:
        $r108 := @caughtexception;

     label29:
        r128 = new java.lang.StringBuilder;

        specialinvoke r128.<java.lang.StringBuilder: void <init>()>();

        $r121 = virtualinvoke r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create temporary file for : ");

        $r122 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r122);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PackageManager", $r124);

     label30:
        r15 = null;

        goto label22;

     label31:
        $r118 := @caughtexception;

        r3 = $r118;

        $r119 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r117 = $r119.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r120 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        virtualinvoke $r117.<android.content.Context: void revokeUriPermission(android.net.Uri,int)>($r120, 1);

        throw r3;

     label32:
        r5 = null;

        goto label23;

     label33:
        $r110 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        r17 = virtualinvoke $r110.<android.net.Uri: java.lang.String getPath()>();

        r129 = new java.io.File;

        specialinvoke r129.<java.io.File: void <init>(java.lang.String)>(r17);

        r5 = r129;

     label34:
        goto label23;

     label35:
        if i9 != -4 goto label36;

        i0 = -1;

        goto label04;

     label36:
        if i9 != -1 goto label37;

        i0 = -4;

        goto label04;

     label37:
        if i9 != -2 goto label38;

        i0 = -2;

        goto label04;

     label38:
        if i9 != -6 goto label39;

        i0 = -3;

        goto label04;

     label39:
        if i9 != -5 goto label40;

        i0 = -20;

        goto label04;

     label40:
        i10 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        i7 = specialinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: int installLocationPolicy(android.content.pm.PackageInfoLite,int)>(r1, i10);

        if i7 != -7 goto label41;

        i0 = -25;

        goto label04;

     label41:
        if z0 != 0 goto label04;

        if z1 != 0 goto label04;

        if i7 != 2 goto label42;

        $i34 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i33 = 8 | $i34;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags> = $i33;

        $i32 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i31 = -17 & $i32;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags> = $i31;

        goto label04;

     label42:
        $i30 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i29 = 16 | $i30;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags> = $i29;

        $i28 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i27 = -9 & $i28;

        r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags> = $i27;

        goto label04;

     label43:
        $r39 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r38 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r33 = staticinvoke <com.android.server.pm.PackageManagerService: java.lang.String access$2800(com.android.server.pm.PackageManagerService)>($r38);

        i3 = virtualinvoke $r39.<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>($r33, i2);

        goto label06;

     label44:
        i6 = 0;

     label45:
        if i6 >= i5 goto label12;

        $r75 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i6);

        r13 = (android.content.ComponentName) $r75;

        r130 = new android.content.Intent;

        specialinvoke r130.<android.content.Intent: void <init>(android.content.Intent)>(r8);

        r14 = r130;

        virtualinvoke r14.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r13);

        $r72 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r71 = $r72.<com.android.server.pm.PackageManagerService: android.content.Context mContext>;

        $r70 = virtualinvoke r0.<com.android.server.pm.PackageManagerService$InstallParams: android.os.UserHandle getUser()>();

        virtualinvoke $r71.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r14, $r70);

        i6 = i6 + 1;

        goto label45;

     label46:
        $r34 = r0.<com.android.server.pm.PackageManagerService$InstallParams: com.android.server.pm.PackageManagerService this$0>;

        $r35 = staticinvoke <com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)>($r34);

        i0 = virtualinvoke r7.<com.android.server.pm.PackageManagerService$InstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>($r35, 1);

        goto label13;

        catch java.lang.Throwable from label17 to label18 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.io.FileNotFoundException from label20 to label21 with label28;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label33 to label34 with label31;
    }

    public boolean isForwardLocked()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $i0 = r0.<com.android.server.pm.PackageManagerService$InstallParams: int flags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        com.android.server.pm.PackageManagerService$InstallParams r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        int $i0;
        java.lang.String $r3, $r9;
        android.net.Uri $r6;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallParams;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InstallParams{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri mPackageURI>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
