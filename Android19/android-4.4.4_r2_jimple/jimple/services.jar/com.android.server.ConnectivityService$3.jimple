class com.android.server.ConnectivityService$3 extends android.net.INetworkPolicyListener$Stub
{
    final com.android.server.ConnectivityService this$0;

    void <init>(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService$3 r0;
        com.android.server.ConnectivityService r1;

        r0 := @this: com.android.server.ConnectivityService$3;

        r1 := @parameter0: com.android.server.ConnectivityService;

        r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0> = r1;

        specialinvoke r0.<android.net.INetworkPolicyListener$Stub: void <init>()>();

        return;
    }

    public void onMeteredIfacesChanged(java.lang.String[])
    {
        com.android.server.ConnectivityService$3 r0;
        java.lang.String[] r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r10;
        int i0, i1;
        java.lang.String r4;
        com.android.server.ConnectivityService $r5, $r6, $r8;
        java.util.HashSet $r7, $r9;

        r0 := @this: com.android.server.ConnectivityService$3;

        r1 := @parameter0: java.lang.String[];

        $r5 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        r2 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object access$600(com.android.server.ConnectivityService)>($r5);

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r7 = staticinvoke <com.android.server.ConnectivityService: java.util.HashSet access$800(com.android.server.ConnectivityService)>($r6);

        virtualinvoke $r7.<java.util.HashSet: void clear()>();

        i0 = lengthof r1;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        r4 = r1[i1];

        $r8 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r9 = staticinvoke <com.android.server.ConnectivityService: java.util.HashSet access$800(com.android.server.ConnectivityService)>($r8);

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onRestrictBackgroundChanged(boolean)
    {
        com.android.server.ConnectivityService$3 r0;
        boolean z0, $z1, $z2;
        int i0;
        android.net.NetworkStateTracker r1;
        android.net.NetworkInfo r2;
        com.android.server.ConnectivityService $r3, $r4, $r6;
        android.net.NetworkStateTracker[] $r5;

        r0 := @this: com.android.server.ConnectivityService$3;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        i0 = staticinvoke <com.android.server.ConnectivityService: int access$900(com.android.server.ConnectivityService)>($r3);

        $z1 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r5 = staticinvoke <com.android.server.ConnectivityService: android.net.NetworkStateTracker[] access$1000(com.android.server.ConnectivityService)>($r4);

        r1 = $r5[i0];

        if r1 == null goto label1;

        r2 = interfaceinvoke r1.<android.net.NetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>();

        if r2 == null goto label1;

        $z2 = virtualinvoke r2.<android.net.NetworkInfo: boolean isConnected()>();

        if $z2 == 0 goto label1;

        $r6 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        virtualinvoke $r6.<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>(r2);

     label1:
        return;
    }

    public void onUidRulesChanged(int, int)
    {
        com.android.server.ConnectivityService$3 r0;
        int i0, i1, $i2;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        com.android.server.ConnectivityService $r3, $r4, $r6;
        android.util.SparseIntArray $r5, $r7;

        r0 := @this: com.android.server.ConnectivityService$3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        r1 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object access$600(com.android.server.ConnectivityService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r5 = staticinvoke <com.android.server.ConnectivityService: android.util.SparseIntArray access$700(com.android.server.ConnectivityService)>($r4);

        $i2 = virtualinvoke $r5.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        if $i2 != i1 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r7 = staticinvoke <com.android.server.ConnectivityService: android.util.SparseIntArray access$700(com.android.server.ConnectivityService)>($r6);

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
