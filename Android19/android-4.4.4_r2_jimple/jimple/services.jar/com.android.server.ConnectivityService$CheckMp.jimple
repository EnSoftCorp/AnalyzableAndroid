class com.android.server.ConnectivityService$CheckMp extends android.os.AsyncTask
{
    private static final java.lang.String CHECKMP_TAG;
    private static final int MAX_LOOPS;
    public static final int MAX_TIMEOUT_MS;
    private static final int NET_ERROR_SLEEP_SEC;
    private static final int NET_ROUTE_ESTABLISHMENT_SLEEP_SEC;
    private static final int POLLING_SLEEP_SEC;
    private static final int SOCKET_TIMEOUT_MS;
    private static boolean mTestingFailures;
    private android.content.Context mContext;
    private com.android.server.ConnectivityService mCs;
    private com.android.server.ConnectivityService$CheckMp$Params mParams;
    private android.telephony.TelephonyManager mTm;

    public void <init>(android.content.Context, com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService$CheckMp r0;
        android.content.Context r1, $r3;
        com.android.server.ConnectivityService r2;
        boolean z0, $z1;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5;
        int $i0, i1;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.ConnectivityService;

        z0 = 1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label4;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.checkmp.testfailures", 0);

        i1 = (int) 1;

        if $i0 != i1 goto label3;

     label1:
        <com.android.server.ConnectivityService$CheckMp: boolean mTestingFailures> = z0;

     label2:
        r0.<com.android.server.ConnectivityService$CheckMp: android.content.Context mContext> = r1;

        r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs> = r2;

        $r3 = r0.<com.android.server.ConnectivityService$CheckMp: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        r0.<com.android.server.ConnectivityService$CheckMp: android.telephony.TelephonyManager mTm> = $r5;

        return;

     label3:
        z0 = 0;

        goto label1;

     label4:
        <com.android.server.ConnectivityService$CheckMp: boolean mTestingFailures> = 0;

        goto label2;
    }

    static void access$4700(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>(r0);

        return;
    }

    private java.lang.String inetAddressesToString(java.net.InetAddress[])
    {
        com.android.server.ConnectivityService$CheckMp r0;
        java.net.InetAddress[] r1;
        java.lang.StringBuffer r2, $r4;
        boolean z0;
        int i0, i1;
        java.net.InetAddress r3;
        java.lang.String $r5;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: java.net.InetAddress[];

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r2 = $r4;

        z0 = 1;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r1[i1];

        if z0 == 0 goto label3;

        z0 = 0;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        goto label2;

     label4:
        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private java.lang.Integer isMobileOk(com.android.server.ConnectivityService$CheckMp$Params)
    {
        com.android.server.ConnectivityService$CheckMp r0;
        com.android.server.ConnectivityService$CheckMp$Params r1;
        java.lang.Throwable r2, r8, $r183, $r191;
        java.lang.Integer r3, r6, r7, r23, r27, r28, r31, r32;
        android.net.Uri r4;
        java.util.Random r5, r230;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14;
        long l0, l1, l2, l3, l4, l10, l11, l12, l13, $l15, $l16, $l17, $l18, $l23, $l26, $l31, $l32, $l35, $l36, $l39, $l40, $l43, $l45, $l47, $l49, $l50, $l54, $l55;
        android.os.Binder r9, r237;
        java.lang.Exception r11, r24, $r185, $r225;
        java.net.InetAddress[] r12;
        android.net.LinkProperties r13;
        java.util.ArrayList r14, r243;
        java.net.InetAddress r15, r16;
        int i5, i6, i7, i8, i9, i14, $i24, $i25, $i27, $i28;
        java.lang.String r17, r20, r21, $r29, $r39, $r48, $r54, $r59, $r61, $r67, $r73, $r75, $r88, $r91, $r95, $r99, $r108, $r113, $r118, $r124, $r139, $r143, $r149, $r153, $r161, $r174, $r181, $r184, $r188, $r198, $r204, $r209, $r218, $r222;
        java.net.URL r18, r249;
        java.net.HttpURLConnection r19;
        java.util.Map r22;
        javax.net.ssl.HttpsURLConnection r25;
        com.android.server.ConnectivityService$CheckMp$CheckMpHostnameVerifier r26, r251;
        com.android.server.ConnectivityService $r33, $r36, $r37, $r42, $r52, $r63, $r64, $r66, $r80, $r84, $r92, $r105, $r117, $r119, $r132, $r142, $r147, $r148, $r154, $r158, $r159, $r168, $r170, $r173, $r180, $r182, $r190, $r192, $r193, $r194, $r202, $r203, $r208, $r215;
        android.net.NetworkStateTracker[] $r34, $r41, $r83;
        android.net.NetworkStateTracker $r35, $r50, $r72;
        java.util.concurrent.atomic.AtomicBoolean $r38;
        java.lang.StringBuilder $r40, $r44, $r46, $r47, $r53, $r56, $r58, $r60, $r68, $r69, $r76, $r85, $r86, $r87, $r90, $r94, $r96, $r97, $r100, $r101, $r107, $r110, $r115, $r116, $r120, $r121, $r122, $r123, $r127, $r128, $r131, $r137, $r138, $r144, $r145, $r150, $r155, $r156, $r162, $r163, $r171, $r175, $r177, $r178, $r186, $r189, $r196, $r197, $r200, $r201, $r205, $r206, $r210, $r211, $r217, $r220, $r223, $r224, r231, r232, r233, r234, r235, r236, r238, r239, r240, r241, r242, r244, r245, r246, r247, r248, r250, r252, r253, r254, r255, r256, r257, r258, r259, r260, r261;
        android.net.MobileDataStateTracker $r43, $r49, $r71;
        byte $b20, $b21, $b22, $b29, $b33, $b34, $b38, $b44, $b48, $b51, $b53;
        android.net.NetworkInfo $r65, $r79, $r133, $r141, $r151, $r167, $r169, $r216, $r227;
        android.net.NetworkInfo$State $r77, $r78, $r81, $r82, $r134, $r135, $r140, $r152, $r160, $r165, $r166, $r176, $r213, $r214, $r228, $r229;
        java.lang.Object $r103;
        byte[] $r104;
        java.net.URLConnection $r106;
        java.net.Proxy $r114;
        java.net.UnknownHostException $r221;
        android.os.IBinder r262;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: com.android.server.ConnectivityService$CheckMp$Params;

        entermonitor r0;

     label001:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r29 = staticinvoke <com.android.server.ConnectivityService$CheckMp$Params: java.lang.String access$4800(com.android.server.ConnectivityService$CheckMp$Params)>(r1);

        r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r29);

        r230 = new java.util.Random;

        specialinvoke r230.<java.util.Random: void <init>()>();

        r5 = r230;

        r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService$CheckMp$Params mParams> = r1;

        $r36 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $z5 = virtualinvoke $r36.<com.android.server.ConnectivityService: boolean isNetworkSupported(int)>(0);

        if $z5 != 0 goto label004;

        r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r231 = new java.lang.StringBuilder;

        specialinvoke r231.<java.lang.StringBuilder: void <init>()>();

        $r200 = virtualinvoke r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X not mobile capable result=");

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r184 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r184);

     label002:
        r7 = r32;

     label003:
        exitmonitor r0;

        return r7;

     label004:
        $r37 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r38 = staticinvoke <com.android.server.ConnectivityService: java.util.concurrent.atomic.AtomicBoolean access$4400(com.android.server.ConnectivityService)>($r37);

        $z4 = virtualinvoke $r38.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z4 == 0 goto label006;

        r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        r232 = new java.lang.StringBuilder;

        specialinvoke r232.<java.lang.StringBuilder: void <init>()>();

        $r196 = virtualinvoke r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X is provisioning result=");

        $r197 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r198 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r198);

     label005:
        r7 = r31;

        goto label003;

     label006:
        $r33 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r34 = staticinvoke <com.android.server.ConnectivityService: android.net.NetworkStateTracker[] access$1000(com.android.server.ConnectivityService)>($r33);

        $r35 = $r34[0];

        $r43 = (android.net.MobileDataStateTracker) $r35;

        z0 = virtualinvoke $r43.<android.net.MobileDataStateTracker: boolean isProvisioningNetwork()>();

        r233 = new java.lang.StringBuilder;

        specialinvoke r233.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: isDefaultProvisioning=");

        $r40 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r39);

        $r42 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r41 = staticinvoke <com.android.server.ConnectivityService: android.net.NetworkStateTracker[] access$1000(com.android.server.ConnectivityService)>($r42);

        $r50 = $r41[5];

        $r49 = (android.net.MobileDataStateTracker) $r50;

        z1 = virtualinvoke $r49.<android.net.MobileDataStateTracker: boolean isProvisioningNetwork()>();

        r234 = new java.lang.StringBuilder;

        specialinvoke r234.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: isHipriProvisioning=");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r48);

     label007:
        if z0 != 0 goto label008;

        if z1 == 0 goto label010;

     label008:
        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        r235 = new java.lang.StringBuilder;

        specialinvoke r235.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X default || hipri is provisioning result=");

        $r53 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r54);

     label009:
        r7 = r6;

        goto label003;

     label010:
        $l16 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l15 = staticinvoke <com.android.server.ConnectivityService$CheckMp$Params: long access$4900(com.android.server.ConnectivityService$CheckMp$Params)>(r1);

        l1 = $l16 + $l15;

        $r52 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $z6 = staticinvoke <com.android.server.ConnectivityService: boolean access$5000(com.android.server.ConnectivityService)>($r52);

        if $z6 != 0 goto label012;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: mdst is not ready");

     label011:
        $l50 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b51 = $l50 cmp l1;

        if $b51 >= 0 goto label012;

        $r193 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $z14 = staticinvoke <com.android.server.ConnectivityService: boolean access$5000(com.android.server.ConnectivityService)>($r193);

        if $z14 == 0 goto label020;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: mdst ready, enable fail fast of mobile data");

        $r194 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r194, 1);

     label012:
        r236 = new java.lang.StringBuilder;

        specialinvoke r236.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke r236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: start hipri url=");

        $r61 = staticinvoke <com.android.server.ConnectivityService$CheckMp$Params: java.lang.String access$4800(com.android.server.ConnectivityService$CheckMp$Params)>(r1);

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r59);

        r237 = new android.os.Binder;

        specialinvoke r237.<android.os.Binder: void <init>()>();

        r9 = r237;

     label013:
        $l17 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b21 = $l17 cmp l1;

        if $b21 >= 0 goto label016;

        $r173 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        r262 = (android.os.IBinder) r9;

        i14 = virtualinvoke $r173.<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>(0, "enableHIPRI", r262);

     label014:
        if i14 == 0 goto label015;

        if i14 != 1 goto label027;

     label015:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: hipri started");

     label016:
        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label017:
        $b20 = l2 cmp l1;

        if $b20 >= 0 goto label099;

     label018:
        $r80 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r79 = virtualinvoke $r80.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r82 = virtualinvoke $r79.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r81 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r82 == $r81 goto label029;

        r238 = new java.lang.StringBuilder;

        specialinvoke r238.<java.lang.StringBuilder: void <init>()>();

        $r171 = virtualinvoke r238.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: not connected ni=");

        $r170 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r169 = virtualinvoke $r170.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r175 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r169);

        $r174 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r174);

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

        r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label019:
        r3 = r28;

        goto label016;

     label020:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label021:
        goto label011;

     label022:
        $r191 := @caughtexception;

        r8 = $r191;

     label023:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r190 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r190, 0);

        $r192 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r192.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l47 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = 5000L + $l47;

     label024:
        $l49 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b48 = $l49 cmp l0;

        if $b48 >= 0 goto label103;

        $r215 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r216 = virtualinvoke $r215.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r213 = virtualinvoke $r216.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r214 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r213 == $r214 goto label024;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label025:
        goto label024;

     label026:
        $r183 := @caughtexception;

        r2 = $r183;

        exitmonitor r0;

        throw r2;

     label027:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label028:
        goto label013;

     label029:
        $r84 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r83 = staticinvoke <com.android.server.ConnectivityService: android.net.NetworkStateTracker[] access$1000(com.android.server.ConnectivityService)>($r84);

        $r72 = $r83[5];

        $r71 = (android.net.MobileDataStateTracker) $r72;

        $z7 = virtualinvoke $r71.<android.net.MobileDataStateTracker: boolean isProvisioningNetwork()>();

        if $z7 == 0 goto label035;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        r239 = new java.lang.StringBuilder;

        specialinvoke r239.<java.lang.StringBuilder: void <init>()>();

        $r177 = virtualinvoke r239.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X isProvisioningNetwork result=");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r181 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r181);

     label030:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r182 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r182, 0);

        $r180 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r180.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l45 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l13 = 5000L + $l45;

     label031:
        $l43 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b44 = $l43 cmp l13;

        if $b44 >= 0 goto label033;

        $r168 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r167 = virtualinvoke $r168.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r166 = virtualinvoke $r167.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r165 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r166 == $r165 goto label031;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label032:
        goto label031;

     label033:
        r240 = new java.lang.StringBuilder;

        specialinvoke r240.<java.lang.StringBuilder: void <init>()>();

        $r163 = virtualinvoke r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r162 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r161 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r161);

     label034:
        r7 = r3;

        goto label003;

     label035:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: isProvisioningNetwork is false, continue");

     label036:
        $r73 = virtualinvoke r4.<android.net.Uri: java.lang.String getHost()>();

        r12 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r73);

     label037:
        r241 = new java.lang.StringBuilder;

        specialinvoke r241.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: addresses=");

        $r75 = specialinvoke r0.<com.android.server.ConnectivityService$CheckMp: java.lang.String inetAddressesToString(java.net.InetAddress[])>(r12);

        $r90 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r91);

        $r92 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        r13 = virtualinvoke $r92.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)>(5);

        z2 = virtualinvoke r13.<android.net.LinkProperties: boolean hasIPv4Address()>();

        z3 = virtualinvoke r13.<android.net.LinkProperties: boolean hasIPv6Address()>();

        r242 = new java.lang.StringBuilder;

        specialinvoke r242.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: linkHasIpv4=");

        $r85 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" linkHasIpv6=");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r88);

        r243 = new java.util.ArrayList;

        $i24 = lengthof r12;

        specialinvoke r243.<java.util.ArrayList: void <init>(int)>($i24);

        r14 = r243;

        i5 = lengthof r12;

     label038:
        i6 = 0;

     label039:
        if i6 >= i5 goto label053;

     label040:
        r15 = r12[i6];

        $z13 = r15 instanceof java.net.Inet4Address;

        if $z13 == 0 goto label042;

     label041:
        if z2 != 0 goto label044;

     label042:
        $z11 = r15 instanceof java.net.Inet6Address;

        if $z11 == 0 goto label108;

     label043:
        if z3 == 0 goto label108;

     label044:
        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

     label045:
        goto label108;

     label046:
        $r221 := @caughtexception;

     label047:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r244 = new java.lang.StringBuilder;

        specialinvoke r244.<java.lang.StringBuilder: void <init>()>();

        $r206 = virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X UnknownHostException result=");

        $r205 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r204 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r204);

     label048:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r203 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r203, 0);

        $r202 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r202.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l55 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l4 = 5000L + $l55;

     label049:
        $l54 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b53 = $l54 cmp l4;

        if $b53 >= 0 goto label051;

        $r208 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r227 = virtualinvoke $r208.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r228 = virtualinvoke $r227.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r229 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r228 == $r229 goto label049;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label050:
        goto label049;

     label051:
        r245 = new java.lang.StringBuilder;

        specialinvoke r245.<java.lang.StringBuilder: void <init>()>();

        $r211 = virtualinvoke r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r210 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r209 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r209);

     label052:
        r7 = r3;

        goto label003;

     label053:
        $i25 = virtualinvoke r14.<java.util.ArrayList: int size()>();

        if $i25 != 0 goto label058;

        r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label054:
        r7 = r27;

     label055:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r158 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r158, 0);

        $r159 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r159.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l39 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l12 = 5000L + $l39;

     label056:
        $l40 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b38 = $l40 cmp l12;

        if $b38 >= 0 goto label106;

        $r154 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r151 = virtualinvoke $r154.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r152 = virtualinvoke $r151.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r176 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r152 == $r176 goto label056;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label057:
        goto label056;

     label058:
        i7 = 0;

     label059:
        i8 = i7 + 1;

        if i7 < 4 goto label065;

     label060:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: too many loops tried - giving up");

     label061:
        r246 = new java.lang.StringBuilder;

        specialinvoke r246.<java.lang.StringBuilder: void <init>()>();

        $r131 = virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X loops|timed out result=");

        $r150 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r149 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r149);

     label062:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r148 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r148, 0);

        $r147 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r147.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l36 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l11 = 5000L + $l36;

     label063:
        $l35 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b34 = $l35 cmp l11;

        if $b34 >= 0 goto label097;

        $r142 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r141 = virtualinvoke $r142.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r140 = virtualinvoke $r141.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r160 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r140 == $r160 goto label063;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label064:
        goto label063;

     label065:
        $l26 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b29 = $l26 cmp l1;

        if $b29 < 0 goto label070;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: spend too much time - giving up");

     label066:
        goto label061;

     label067:
        $r185 := @caughtexception;

        r11 = $r185;

     label068:
        r247 = new java.lang.StringBuilder;

        specialinvoke r247.<java.lang.StringBuilder: void <init>()>();

        $r186 = virtualinvoke r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: Exception e=");

        $r189 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r188 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r188);

     label069:
        goto label016;

     label070:
        $i28 = virtualinvoke r14.<java.util.ArrayList: int size()>();

        $i27 = virtualinvoke r5.<java.util.Random: int nextInt(int)>($i28);

        $r103 = virtualinvoke r14.<java.util.ArrayList: java.lang.Object get(int)>($i27);

        r16 = (java.net.InetAddress) $r103;

        $r105 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r104 = virtualinvoke r16.<java.net.InetAddress: byte[] getAddress()>();

        $z8 = virtualinvoke $r105.<com.android.server.ConnectivityService: boolean requestRouteToHostAddress(int,byte[],java.lang.String)>(5, $r104, null);

        if $z8 == 0 goto label079;

        r248 = new java.lang.StringBuilder;

        specialinvoke r248.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: wait to establish route to hostAddr=");

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r99);

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(3);

     label071:
        if i8 > 2 goto label081;

        r17 = "https";

     label072:
        r20 = virtualinvoke r16.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r21 = virtualinvoke r4.<android.net.Uri: java.lang.String getPath()>();

        r249 = new java.net.URL;

        specialinvoke r249.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r17, r20, r21);

        r18 = r249;

        r250 = new java.lang.StringBuilder;

        specialinvoke r250.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: newUrl=");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r113 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r113);

     label073:
        r19 = null;

     label074:
        $r114 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        $r106 = virtualinvoke r18.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r114);

        r19 = (java.net.HttpURLConnection) $r106;

        $z9 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z9 == 0 goto label075;

        r25 = (javax.net.ssl.HttpsURLConnection) r19;

        r251 = new com.android.server.ConnectivityService$CheckMp$CheckMpHostnameVerifier;

        specialinvoke r251.<com.android.server.ConnectivityService$CheckMp$CheckMpHostnameVerifier: void <init>(android.net.Uri)>(r4);

        r26 = r251;

        virtualinvoke r25.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>(r26);

     label075:
        virtualinvoke r19.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        virtualinvoke r19.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000);

        virtualinvoke r19.<java.net.HttpURLConnection: void setReadTimeout(int)>(5000);

        virtualinvoke r19.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke r19.<java.net.HttpURLConnection: void setAllowUserInteraction(boolean)>(0);

        virtualinvoke r19.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Connection", "close");

        i9 = virtualinvoke r19.<java.net.HttpURLConnection: int getResponseCode()>();

        r22 = virtualinvoke r19.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        r252 = new java.lang.StringBuilder;

        specialinvoke r252.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: headers=");

        $r107 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r108);

        virtualinvoke r19.<java.net.HttpURLConnection: void disconnect()>();

     label076:
        r19 = null;

     label077:
        $z10 = <com.android.server.ConnectivityService$CheckMp: boolean mTestingFailures>;

        if $z10 == 0 goto label082;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: TESTING_FAILURES, pretend no connction");

     label078:
        i7 = i8;

        goto label059;

     label079:
        r253 = new java.lang.StringBuilder;

        specialinvoke r253.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: could not establish route to hostAddr=");

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r95);

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(3);

     label080:
        i7 = i8;

        goto label059;

     label081:
        r17 = "http";

        goto label072;

     label082:
        if i9 != 204 goto label089;

     label083:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r254 = new java.lang.StringBuilder;

        specialinvoke r254.<java.lang.StringBuilder: void <init>()>();

        $r121 = virtualinvoke r254.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X got expected responseCode=");

        $r120 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r123 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" result=");

        $r122 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r118 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r118);

     label084:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r117 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r117, 0);

        $r119 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r119.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l31 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l10 = 5000L + $l31;

     label085:
        $l32 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b33 = $l32 cmp l10;

        if $b33 >= 0 goto label087;

        $r132 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r133 = virtualinvoke $r132.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r134 = virtualinvoke $r133.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r135 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r134 == $r135 goto label085;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label086:
        goto label085;

     label087:
        r255 = new java.lang.StringBuilder;

        specialinvoke r255.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r139);

     label088:
        r7 = r3;

        goto label003;

     label089:
        r256 = new java.lang.StringBuilder;

        specialinvoke r256.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke r256.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: not expected responseCode=");

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r124 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r124);

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

     label090:
        r3 = r23;

        i7 = i8;

        goto label059;

     label091:
        $r225 := @caughtexception;

        r24 = $r225;

     label092:
        r257 = new java.lang.StringBuilder;

        specialinvoke r257.<java.lang.StringBuilder: void <init>()>();

        $r223 = virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: HttpURLConnection Exception");

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r222 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r222);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

     label093:
        if r19 == null goto label095;

     label094:
        virtualinvoke r19.<java.net.HttpURLConnection: void disconnect()>();

     label095:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(3);

     label096:
        i7 = i8;

        goto label059;

     label097:
        r258 = new java.lang.StringBuilder;

        specialinvoke r258.<java.lang.StringBuilder: void <init>()>();

        $r145 = virtualinvoke r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r143);

     label098:
        r7 = r3;

        goto label003;

     label099:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: timed out");

     label100:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("isMobileOk: F stop hipri");

        $r64 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        staticinvoke <com.android.server.ConnectivityService: void access$5100(com.android.server.ConnectivityService,int)>($r64, 0);

        $r63 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        virtualinvoke $r63.<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableHIPRI");

        $l18 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = 5000L + $l18;

     label101:
        $l23 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b22 = $l23 cmp l3;

        if $b22 >= 0 goto label104;

        $r66 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        $r65 = virtualinvoke $r66.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>(5);

        $r78 = virtualinvoke $r65.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r77 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if $r78 == $r77 goto label101;

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void sleep(int)>(1);

     label102:
        goto label101;

     label103:
        r259 = new java.lang.StringBuilder;

        specialinvoke r259.<java.lang.StringBuilder: void <init>()>();

        $r220 = virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r217 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r218 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r218);

        throw r8;

     label104:
        r260 = new java.lang.StringBuilder;

        specialinvoke r260.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r67);

     label105:
        r7 = r3;

        goto label003;

     label106:
        r261 = new java.lang.StringBuilder;

        specialinvoke r261.<java.lang.StringBuilder: void <init>()>();

        $r155 = virtualinvoke r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isMobileOk: X result=");

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r153 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r153);

     label107:
        goto label003;

     label108:
        i6 = i6 + 1;

        goto label039;

        catch java.lang.Throwable from label001 to label002 with label026;
        catch java.lang.Throwable from label004 to label005 with label026;
        catch java.lang.Throwable from label006 to label007 with label026;
        catch java.lang.Throwable from label008 to label009 with label026;
        catch java.lang.Throwable from label010 to label011 with label022;
        catch java.lang.Throwable from label011 to label012 with label022;
        catch java.lang.Throwable from label012 to label013 with label022;
        catch java.lang.Throwable from label013 to label014 with label022;
        catch java.lang.Throwable from label015 to label016 with label022;
        catch java.lang.Throwable from label016 to label017 with label022;
        catch java.lang.Exception from label018 to label019 with label067;
        catch java.lang.Throwable from label018 to label019 with label022;
        catch java.lang.Throwable from label020 to label021 with label022;
        catch java.lang.Throwable from label023 to label024 with label026;
        catch java.lang.Throwable from label024 to label025 with label026;
        catch java.lang.Throwable from label027 to label028 with label022;
        catch java.lang.Exception from label029 to label030 with label067;
        catch java.lang.Throwable from label029 to label030 with label022;
        catch java.lang.Throwable from label030 to label031 with label026;
        catch java.lang.Throwable from label031 to label032 with label026;
        catch java.lang.Throwable from label033 to label034 with label026;
        catch java.lang.Exception from label035 to label036 with label067;
        catch java.lang.Throwable from label035 to label036 with label022;
        catch java.net.UnknownHostException from label036 to label037 with label046;
        catch java.lang.Exception from label036 to label037 with label067;
        catch java.lang.Throwable from label036 to label037 with label022;
        catch java.lang.Exception from label037 to label038 with label067;
        catch java.lang.Throwable from label037 to label038 with label022;
        catch java.lang.Exception from label040 to label041 with label067;
        catch java.lang.Throwable from label040 to label041 with label022;
        catch java.lang.Exception from label042 to label043 with label067;
        catch java.lang.Throwable from label042 to label043 with label022;
        catch java.lang.Exception from label044 to label045 with label067;
        catch java.lang.Throwable from label044 to label045 with label022;
        catch java.lang.Exception from label047 to label048 with label067;
        catch java.lang.Throwable from label047 to label048 with label022;
        catch java.lang.Throwable from label048 to label049 with label026;
        catch java.lang.Throwable from label049 to label050 with label026;
        catch java.lang.Throwable from label051 to label052 with label026;
        catch java.lang.Exception from label053 to label054 with label067;
        catch java.lang.Throwable from label053 to label054 with label022;
        catch java.lang.Throwable from label055 to label056 with label026;
        catch java.lang.Throwable from label056 to label057 with label026;
        catch java.lang.Exception from label060 to label061 with label067;
        catch java.lang.Throwable from label060 to label061 with label022;
        catch java.lang.Exception from label061 to label062 with label067;
        catch java.lang.Throwable from label061 to label062 with label022;
        catch java.lang.Throwable from label062 to label063 with label026;
        catch java.lang.Throwable from label063 to label064 with label026;
        catch java.lang.Exception from label065 to label066 with label067;
        catch java.lang.Throwable from label065 to label066 with label022;
        catch java.lang.Throwable from label068 to label069 with label022;
        catch java.lang.Exception from label070 to label071 with label067;
        catch java.lang.Throwable from label070 to label071 with label022;
        catch java.lang.Exception from label072 to label073 with label067;
        catch java.lang.Throwable from label072 to label073 with label022;
        catch java.lang.Exception from label074 to label075 with label091;
        catch java.lang.Throwable from label074 to label075 with label022;
        catch java.lang.Exception from label075 to label076 with label091;
        catch java.lang.Throwable from label075 to label076 with label022;
        catch java.lang.Exception from label077 to label078 with label091;
        catch java.lang.Throwable from label077 to label078 with label022;
        catch java.lang.Exception from label079 to label080 with label067;
        catch java.lang.Throwable from label079 to label080 with label022;
        catch java.lang.Exception from label083 to label084 with label091;
        catch java.lang.Throwable from label083 to label084 with label022;
        catch java.lang.Throwable from label084 to label085 with label026;
        catch java.lang.Throwable from label085 to label086 with label026;
        catch java.lang.Throwable from label087 to label088 with label026;
        catch java.lang.Exception from label089 to label090 with label091;
        catch java.lang.Throwable from label089 to label090 with label022;
        catch java.lang.Exception from label092 to label093 with label067;
        catch java.lang.Throwable from label092 to label093 with label022;
        catch java.lang.Exception from label094 to label095 with label067;
        catch java.lang.Throwable from label094 to label095 with label022;
        catch java.lang.Exception from label095 to label096 with label067;
        catch java.lang.Throwable from label095 to label096 with label022;
        catch java.lang.Throwable from label097 to label098 with label026;
        catch java.lang.Throwable from label099 to label100 with label022;
        catch java.lang.Throwable from label100 to label101 with label026;
        catch java.lang.Throwable from label101 to label102 with label026;
        catch java.lang.Throwable from label103 to label104 with label026;
        catch java.lang.Throwable from label104 to label105 with label026;
        catch java.lang.Throwable from label106 to label107 with label026;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CheckMp] ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConnectivityService", $r4);

        return;
    }

    private void printNetworkInfo()
    {
        com.android.server.ConnectivityService$CheckMp r0;
        boolean z0;
        int i0, i1, i2, $i3;
        android.net.NetworkInfo[] r1;
        android.net.NetworkInfo r2;
        android.telephony.TelephonyManager $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r15, $r16, $r17, $r18;
        com.android.server.ConnectivityService $r10;
        java.lang.String $r11, $r14, $r19, $r20;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        $r3 = r0.<com.android.server.ConnectivityService$CheckMp: android.telephony.TelephonyManager mTm>;

        z0 = virtualinvoke $r3.<android.telephony.TelephonyManager: boolean hasIccCard()>();

        $r4 = r0.<com.android.server.ConnectivityService$CheckMp: android.telephony.TelephonyManager mTm>;

        i0 = virtualinvoke $r4.<android.telephony.TelephonyManager: int getSimState()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasIccCard=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" simState=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r11);

        $r10 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService mCs>;

        r1 = virtualinvoke $r10.<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>();

        if r1 == null goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ni.length=");

        $i3 = lengthof r1;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r14);

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r2 = r1[i2];

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("netInfo=");

        $r19 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r20);

        i2 = i2 + 1;

        goto label1;

     label2:
        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>("no network info ni=null");

     label3:
        return;
    }

    private static void sleep(int)
    {
        int i0, $i2;
        long l1;
        java.lang.InterruptedException r0, $r1;

        i0 := @parameter0: int;

        $i2 = i0 * 1000;

        l1 = (long) $i2;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(l1);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        r0 = $r1;

        virtualinvoke r0.<java.lang.InterruptedException: void printStackTrace()>();

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    protected transient java.lang.Integer doInBackground(com.android.server.ConnectivityService$CheckMp$Params[])
    {
        com.android.server.ConnectivityService$CheckMp r0;
        com.android.server.ConnectivityService$CheckMp$Params[] r1;
        com.android.server.ConnectivityService$CheckMp$Params $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: com.android.server.ConnectivityService$CheckMp$Params[];

        $r2 = r1[0];

        $r3 = specialinvoke r0.<com.android.server.ConnectivityService$CheckMp: java.lang.Integer isMobileOk(com.android.server.ConnectivityService$CheckMp$Params)>($r2);

        return $r3;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.server.ConnectivityService$CheckMp r0;
        java.lang.Object[] r1;
        com.android.server.ConnectivityService$CheckMp$Params[] $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (com.android.server.ConnectivityService$CheckMp$Params[]) r1;

        $r3 = virtualinvoke r0.<com.android.server.ConnectivityService$CheckMp: java.lang.Integer doInBackground(com.android.server.ConnectivityService$CheckMp$Params[])>($r2);

        return $r3;
    }

    public java.lang.String getDefaultUrl()
    {
        com.android.server.ConnectivityService$CheckMp r0;
        java.lang.String r1, $r8;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        $r2 = r0.<com.android.server.ConnectivityService$CheckMp: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "captive_portal_server");

        if r1 != null goto label1;

        r1 = "clients3.google.com";

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/generate_204");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected void onPostExecute(java.lang.Integer)
    {
        com.android.server.ConnectivityService$CheckMp r0;
        java.lang.Integer r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.server.ConnectivityService$CheckMp$Params $r6, $r7, $r9;
        com.android.server.ConnectivityService$CheckMp$CallBack $r8, $r10;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: java.lang.Integer;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onPostExecute: result=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService$CheckMp: void log(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService$CheckMp$Params mParams>;

        if $r6 == null goto label1;

        $r7 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService$CheckMp$Params mParams>;

        $r8 = staticinvoke <com.android.server.ConnectivityService$CheckMp$Params: com.android.server.ConnectivityService$CheckMp$CallBack access$5200(com.android.server.ConnectivityService$CheckMp$Params)>($r7);

        if $r8 == null goto label1;

        $r9 = r0.<com.android.server.ConnectivityService$CheckMp: com.android.server.ConnectivityService$CheckMp$Params mParams>;

        $r10 = staticinvoke <com.android.server.ConnectivityService$CheckMp$Params: com.android.server.ConnectivityService$CheckMp$CallBack access$5200(com.android.server.ConnectivityService$CheckMp$Params)>($r9);

        virtualinvoke $r10.<com.android.server.ConnectivityService$CheckMp$CallBack: void onComplete(java.lang.Integer)>(r1);

     label1:
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.server.ConnectivityService$CheckMp r0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: com.android.server.ConnectivityService$CheckMp;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        virtualinvoke r0.<com.android.server.ConnectivityService$CheckMp: void onPostExecute(java.lang.Integer)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.ConnectivityService$CheckMp: int SOCKET_TIMEOUT_MS> = 5000;

        <com.android.server.ConnectivityService$CheckMp: int POLLING_SLEEP_SEC> = 1;

        <com.android.server.ConnectivityService$CheckMp: int NET_ROUTE_ESTABLISHMENT_SLEEP_SEC> = 3;

        <com.android.server.ConnectivityService$CheckMp: int NET_ERROR_SLEEP_SEC> = 3;

        <com.android.server.ConnectivityService$CheckMp: int MAX_TIMEOUT_MS> = 60000;

        <com.android.server.ConnectivityService$CheckMp: int MAX_LOOPS> = 4;

        <com.android.server.ConnectivityService$CheckMp: java.lang.String CHECKMP_TAG> = "CheckMp";

        return;
    }
}
