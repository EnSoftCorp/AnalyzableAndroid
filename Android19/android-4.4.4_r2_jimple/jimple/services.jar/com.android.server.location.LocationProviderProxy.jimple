public class com.android.server.location.LocationProviderProxy extends java.lang.Object implements com.android.server.location.LocationProviderInterface
{
    private static final boolean D;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private boolean mEnabled;
    private java.lang.Object mLock;
    private final java.lang.String mName;
    private java.lang.Runnable mNewServiceWork;
    private com.android.internal.location.ProviderProperties mProperties;
    private com.android.internal.location.ProviderRequest mRequest;
    private final com.android.server.ServiceWatcher mServiceWatcher;
    private android.os.WorkSource mWorksource;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.LocationProviderProxy: java.lang.String TAG> = "LocationProviderProxy";

        $z0 = <com.android.server.LocationManagerService: boolean D>;

        <com.android.server.location.LocationProviderProxy: boolean D> = $z0;

        return;
    }

    private void <init>(android.content.Context, java.lang.String, java.lang.String, int, int, int, android.os.Handler)
    {
        com.android.server.location.LocationProviderProxy r0;
        android.content.Context r1, $r10;
        java.lang.String r2, r3, $r14;
        int i0, i1, i2;
        android.os.Handler r4;
        java.lang.Object $r5;
        android.os.WorkSource $r6;
        com.android.server.location.LocationProviderProxy$1 $r7;
        com.android.server.ServiceWatcher $r8;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.Runnable $r13;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock> = $r5;

        r0.<com.android.server.location.LocationProviderProxy: boolean mEnabled> = 0;

        r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest mRequest> = null;

        $r6 = new android.os.WorkSource;

        specialinvoke $r6.<android.os.WorkSource: void <init>()>();

        r0.<com.android.server.location.LocationProviderProxy: android.os.WorkSource mWorksource> = $r6;

        $r7 = new com.android.server.location.LocationProviderProxy$1;

        specialinvoke $r7.<com.android.server.location.LocationProviderProxy$1: void <init>(com.android.server.location.LocationProviderProxy)>(r0);

        r0.<com.android.server.location.LocationProviderProxy: java.lang.Runnable mNewServiceWork> = $r7;

        r0.<com.android.server.location.LocationProviderProxy: android.content.Context mContext> = r1;

        r0.<com.android.server.location.LocationProviderProxy: java.lang.String mName> = r2;

        $r8 = new com.android.server.ServiceWatcher;

        $r10 = r0.<com.android.server.location.LocationProviderProxy: android.content.Context mContext>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LocationProviderProxy-");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Runnable mNewServiceWork>;

        specialinvoke $r8.<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>($r10, $r14, r3, i0, i1, i2, $r13, r4);

        r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher> = $r8;

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.location.LocationProviderProxy: boolean D>;

        return $z0;
    }

    static java.lang.Object access$100(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$200(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $z0 = r0.<com.android.server.location.LocationProviderProxy: boolean mEnabled>;

        return $z0;
    }

    static com.android.internal.location.ProviderRequest access$300(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ProviderRequest $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest mRequest>;

        return $r1;
    }

    static android.os.WorkSource access$400(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        android.os.WorkSource $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: android.os.WorkSource mWorksource>;

        return $r1;
    }

    static com.android.internal.location.ILocationProvider access$500(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ILocationProvider $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        return $r1;
    }

    static com.android.server.ServiceWatcher access$600(com.android.server.location.LocationProviderProxy)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.server.ServiceWatcher $r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        return $r1;
    }

    static com.android.internal.location.ProviderProperties access$702(com.android.server.location.LocationProviderProxy, com.android.internal.location.ProviderProperties)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ProviderProperties r1;

        r0 := @parameter0: com.android.server.location.LocationProviderProxy;

        r1 := @parameter1: com.android.internal.location.ProviderProperties;

        r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties mProperties> = r1;

        return r1;
    }

    private boolean bind()
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.server.ServiceWatcher $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $z0 = virtualinvoke $r1.<com.android.server.ServiceWatcher: boolean start()>();

        return $z0;
    }

    public static com.android.server.location.LocationProviderProxy createAndBind(android.content.Context, java.lang.String, java.lang.String, int, int, int, android.os.Handler)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        int i0, i1, i2;
        android.os.Handler r3;
        com.android.server.location.LocationProviderProxy r4, $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 := @parameter6: android.os.Handler;

        $r5 = new com.android.server.location.LocationProviderProxy;

        specialinvoke $r5.<com.android.server.location.LocationProviderProxy: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,android.os.Handler)>(r0, r1, r2, i0, i1, i2, r3);

        r4 = $r5;

        $z0 = specialinvoke r4.<com.android.server.location.LocationProviderProxy: boolean bind()>();

        if $z0 == 0 goto label1;

        return r4;

     label1:
        return null;
    }

    private com.android.internal.location.ILocationProvider getService()
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.server.ServiceWatcher $r1;
        android.os.IBinder $r2;
        com.android.internal.location.ILocationProvider $r3;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r2 = virtualinvoke $r1.<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>();

        $r3 = staticinvoke <com.android.internal.location.ILocationProvider$Stub: com.android.internal.location.ILocationProvider asInterface(android.os.IBinder)>($r2);

        return $r3;
    }

    public void disable()
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r14, r16;
        com.android.internal.location.ILocationProvider r3;
        java.lang.Exception r4, $r6;
        android.os.RemoteException r5, $r13;
        java.lang.StringBuilder $r8, $r12, r15;
        com.android.server.ServiceWatcher $r9;
        java.lang.String $r10, $r11;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.LocationProviderProxy: boolean mEnabled> = 0;

        exitmonitor r1;

     label2:
        r3 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r3 != null goto label6;

        return;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        interfaceinvoke r3.<com.android.internal.location.ILocationProvider: void disable()>();

     label7:
        return;

     label8:
        $r13 := @caughtexception;

        r5 = $r13;

        r16 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r16);

        return;

     label9:
        $r6 := @caughtexception;

        r4 = $r6;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r9 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r10 = virtualinvoke $r9.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r11, r4);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.Exception from label6 to label7 with label9;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.LocationProviderProxy r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, $r8, $r10, $r14;
        java.lang.String[] r3;
        com.android.internal.location.ILocationProvider r4;
        java.lang.Exception r5, $r24;
        android.os.RemoteException r6, $r26;
        java.lang.String $r9, $r12, $r19, $r28, $r31;
        com.android.server.ServiceWatcher $r13, $r18, $r27;
        java.lang.StringBuilder $r16, $r20, $r29, $r30, r32, r33;
        int $i0;
        android.os.IBinder $r23;
        java.lang.Throwable r34;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("REMOTE SERVICE");

        $r8 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" name=");

        $r9 = r0.<com.android.server.location.LocationProviderProxy: java.lang.String mName>;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r9);

        $r10 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" pkg=");

        $r13 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r12 = virtualinvoke $r13.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r12);

        $r14 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" version=");

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r18 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $i0 = virtualinvoke $r18.<com.android.server.ServiceWatcher: int getBestVersion()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r19);

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(char)>(10);

        r4 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r4 != null goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("service down (null)");

        return;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label2:
        $r23 = interfaceinvoke r4.<com.android.internal.location.ILocationProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r23.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, r3);

     label3:
        return;

     label4:
        $r26 := @caughtexception;

        r6 = $r26;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("service down (RemoteException)");

        r34 = (java.lang.Throwable) r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r34);

        return;

     label5:
        $r24 := @caughtexception;

        r5 = $r24;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("service down (Exception)");

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r27 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r28 = virtualinvoke $r27.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r31, r5);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public void enable()
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r13, r16;
        com.android.internal.location.ILocationProvider r3;
        java.lang.Exception r4, $r6;
        android.os.RemoteException r5, $r14;
        java.lang.StringBuilder $r8, $r12, r15;
        com.android.server.ServiceWatcher $r9;
        java.lang.String $r10, $r11;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.location.LocationProviderProxy: boolean mEnabled> = 1;

        exitmonitor r1;

     label2:
        r3 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r3 != null goto label6;

        return;

     label3:
        $r13 := @caughtexception;

        r2 = $r13;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

     label6:
        interfaceinvoke r3.<com.android.internal.location.ILocationProvider: void enable()>();

     label7:
        return;

     label8:
        $r14 := @caughtexception;

        r5 = $r14;

        r16 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r16);

        return;

     label9:
        $r6 := @caughtexception;

        r4 = $r6;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r9 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r10 = virtualinvoke $r9.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r11, r4);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.Exception from label6 to label7 with label9;
    }

    public java.lang.String getConnectedPackageName()
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.server.ServiceWatcher $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r2 = virtualinvoke $r1.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        return $r2;
    }

    public java.lang.String getName()
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        $r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.String mName>;

        return $r1;
    }

    public com.android.internal.location.ProviderProperties getProperties()
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        com.android.internal.location.ProviderProperties r3;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties mProperties>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getStatus(android.os.Bundle)
    {
        com.android.server.location.LocationProviderProxy r0;
        android.os.Bundle r1;
        com.android.internal.location.ILocationProvider r2;
        java.lang.Exception r3, $r6;
        android.os.RemoteException r4, $r5;
        int i0;
        java.lang.StringBuilder $r8, $r12, r13;
        java.lang.String $r9, $r11;
        com.android.server.ServiceWatcher $r10;
        java.lang.Throwable r14;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r2 != null goto label1;

        return 1;

     label1:
        i0 = interfaceinvoke r2.<com.android.internal.location.ILocationProvider: int getStatus(android.os.Bundle)>(r1);

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        r14 = (java.lang.Throwable) r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r14);

        return 1;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r10 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r9 = virtualinvoke $r10.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r11, r3);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public long getStatusUpdateTime()
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ILocationProvider r1;
        java.lang.Exception r2, $r4;
        android.os.RemoteException r3, $r11;
        long l0;
        java.lang.StringBuilder $r6, $r10, r12;
        com.android.server.ServiceWatcher $r7;
        java.lang.String $r8, $r9;
        java.lang.Throwable r13;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r1 != null goto label1;

        return 0L;

     label1:
        l0 = interfaceinvoke r1.<com.android.internal.location.ILocationProvider: long getStatusUpdateTime()>();

     label2:
        return l0;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        r13 = (java.lang.Throwable) r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r13);

        return 0L;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r7 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r8 = virtualinvoke $r7.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r9, r2);

        return 0L;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean isEnabled()
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.location.LocationProviderProxy: boolean mEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean sendExtraCommand(java.lang.String, android.os.Bundle)
    {
        com.android.server.location.LocationProviderProxy r0;
        java.lang.String r1, $r12, $r13;
        android.os.Bundle r2;
        com.android.internal.location.ILocationProvider r3;
        java.lang.Exception r4, $r7;
        android.os.RemoteException r5, $r6;
        boolean z0;
        com.android.server.ServiceWatcher $r9;
        java.lang.StringBuilder $r10, $r11, r14;
        java.lang.Throwable r15;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r3 != null goto label1;

        return 0;

     label1:
        z0 = interfaceinvoke r3.<com.android.internal.location.ILocationProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>(r1, r2);

     label2:
        return z0;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

        r15 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r15);

        return 0;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r9 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r12 = virtualinvoke $r9.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r13, r4);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void setRequest(com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.LocationProviderProxy r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r8, r18;
        com.android.internal.location.ILocationProvider r5;
        java.lang.Exception r6, $r11;
        android.os.RemoteException r7, $r9;
        java.lang.StringBuilder $r12, $r16, r17;
        java.lang.String $r13, $r15;
        com.android.server.ServiceWatcher $r14;

        r0 := @this: com.android.server.location.LocationProviderProxy;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r2 := @parameter1: android.os.WorkSource;

        r3 = r0.<com.android.server.location.LocationProviderProxy: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest mRequest> = r1;

        r0.<com.android.server.location.LocationProviderProxy: android.os.WorkSource mWorksource> = r2;

        exitmonitor r3;

     label2:
        r5 = specialinvoke r0.<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider getService()>();

        if r5 != null goto label6;

        return;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

     label6:
        interfaceinvoke r5.<com.android.internal.location.ILocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r1, r2);

     label7:
        return;

     label8:
        $r9 := @caughtexception;

        r7 = $r9;

        r18 = (java.lang.Throwable) r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("LocationProviderProxy", r18);

        return;

     label9:
        $r11 := @caughtexception;

        r6 = $r11;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception from ");

        $r14 = r0.<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r13 = virtualinvoke $r14.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocationProviderProxy", $r15, r6);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.Exception from label6 to label7 with label9;
    }
}
