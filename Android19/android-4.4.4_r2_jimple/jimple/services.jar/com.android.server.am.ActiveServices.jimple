public final class com.android.server.am.ActiveServices extends java.lang.Object
{
    static final int BG_START_TIMEOUT;
    static final boolean DEBUG_DELAYED_SERVICE;
    static final boolean DEBUG_DELAYED_STARTS;
    static final boolean DEBUG_MU;
    static final boolean DEBUG_SERVICE;
    static final boolean DEBUG_SERVICE_EXECUTING;
    static final int MAX_SERVICE_INACTIVITY;
    static final int SERVICE_BACKGROUND_TIMEOUT;
    static final int SERVICE_MIN_RESTART_TIME_BETWEEN;
    static final int SERVICE_RESET_RUN_DURATION;
    static final int SERVICE_RESTART_DURATION;
    static final int SERVICE_RESTART_DURATION_FACTOR;
    static final int SERVICE_TIMEOUT;
    static final java.lang.String TAG;
    static final java.lang.String TAG_MU;
    final com.android.server.am.ActivityManagerService mAm;
    final java.util.ArrayList mDestroyingServices;
    final int mMaxStartingBackground;
    final java.util.ArrayList mPendingServices;
    final java.util.ArrayList mRestartingServices;
    final android.util.ArrayMap mServiceConnections;
    final android.util.SparseArray mServiceMap;

    public void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActivityManagerService r1;
        int i0, i1;
        android.util.SparseArray $r3;
        android.util.ArrayMap $r4;
        java.util.ArrayList $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;
        java.lang.RuntimeException $r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices> = $r7;

        r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm> = r1;

     label1:
        $r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.config.max_starting_bg", "0");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label2:
        i0 = i1;

     label3:
        if i0 <= 0 goto label5;

     label4:
        r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground> = i0;

        return;

     label5:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label6;

        i0 = 1;

        goto label4;

     label6:
        i0 = 3;

        goto label4;

     label7:
        $r9 := @caughtexception;

        i0 = 0;

        goto label3;

        catch java.lang.RuntimeException from label1 to label2 with label7;
    }

    private final void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z2, $z3;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean isServiceNeeded(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, z1);

        if $z2 == 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $z3 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 != 0 goto label1;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return;
    }

    private final void bringDownServiceLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, i1, i2, i3, i4, i5, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        com.android.server.am.ActiveServices$ServiceMap r2;
        long l6;
        com.android.internal.os.BatteryStatsImpl r3;
        java.lang.Throwable r4, $r68;
        java.lang.Exception r5, r7, r11, $r62, $r79, $r86;
        com.android.server.am.IntentBindRecord r6;
        java.util.ArrayList r8, $r19, $r23, $r38, $r42, $r44;
        com.android.server.am.ConnectionRecord r9, $r87, $r93;
        android.util.ArrayMap $r10, $r16, $r17, $r21, $r34, $r49, $r50, $r67;
        com.android.server.am.ProcessRecord $r12, $r14, $r22, $r37, $r39, $r41, $r47, $r48, $r51, $r54, $r57, $r58, $r80;
        android.content.ComponentName $r13, $r64, $r76;
        android.content.Intent$FilterComparison $r15, $r55;
        com.android.server.am.ActivityManagerService $r24, $r46, $r59;
        boolean $z1, $z6;
        java.lang.Runnable $r25, $r32;
        com.android.internal.app.ProcessStats$ServiceState $r26, $r28, $r29, $r30;
        com.android.server.am.ProcessStatsService $r27;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r31, $r35;
        com.android.server.am.ActiveServices$ServiceRestarter $r33;
        android.app.IApplicationThread $r36, $r43, $r53, $r56;
        android.util.ArraySet $r40;
        java.lang.Object $r45, $r60, $r63, $r65, $r88, $r94;
        android.app.IServiceConnection $r61, $r90;
        android.content.Intent $r66;
        java.lang.String $r69, $r71, $r83, $r84, $r97, $r99;
        java.lang.StringBuilder $r70, $r72, $r74, $r75, $r77, $r82, $r85, $r91, $r92, $r96, $r98, r100, r101, r102;
        com.android.server.am.AppBindRecord $r81;
        android.os.IBinder $r89, r103, r104;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r10 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i9 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i9;

     label01:
        if i0 < 0 goto label07;

        $r67 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r65 = virtualinvoke $r67.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r8 = (java.util.ArrayList) $r65;

        i8 = 0;

     label02:
        $i15 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if i8 >= $i15 goto label06;

        $r63 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r9 = (com.android.server.am.ConnectionRecord) $r63;

        r9.<com.android.server.am.ConnectionRecord: boolean serviceDead> = 1;

     label03:
        $r61 = r9.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r64 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r61.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r64, null);

     label04:
        i8 = i8 + 1;

        goto label02;

     label05:
        $r79 := @caughtexception;

        r11 = $r79;

        r100 = new java.lang.StringBuilder;

        specialinvoke r100.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure disconnecting service ");

        $r76 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r76);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r88 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r87 = (com.android.server.am.ConnectionRecord) $r88;

        $r90 = $r87.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r89 = interfaceinvoke $r90.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r92 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r94 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r93 = (com.android.server.am.ConnectionRecord) $r94;

        $r81 = $r93.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r80 = $r81.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r83 = $r80.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r82 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r84, r11);

        goto label04;

     label06:
        i0 = i0 + -1;

        goto label01;

     label07:
        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label12;

        $r54 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r53 = $r54.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r53 == null goto label12;

        $r49 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i14 = virtualinvoke $r49.<android.util.ArrayMap: int size()>();

        i7 = -1 + $i14;

     label08:
        if i7 < 0 goto label12;

        $r50 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r60 = virtualinvoke $r50.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r6 = (com.android.server.am.IntentBindRecord) $r60;

        $z6 = r6.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z6 == 0 goto label10;

     label09:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, 0, "bring down unbind");

        $r59 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r58 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r59.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r58);

        r6.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r57 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r56 = $r57.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r55 = r6.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r66 = virtualinvoke $r55.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        r103 = (android.os.IBinder) r1;

        interfaceinvoke $r56.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r103, $r66);

     label10:
        i7 = i7 + -1;

        goto label08;

     label11:
        $r86 := @caughtexception;

        r7 = $r86;

        r101 = new java.lang.StringBuilder;

        specialinvoke r101.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r97 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r99, r7);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r1);

        goto label10;

     label12:
        i1 = r1.<com.android.server.am.ServiceRecord: int userId>;

        i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r14 == null goto label16;

        $r51 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        i3 = $r51.<com.android.server.am.ProcessRecord: int pid>;

     label13:
        staticinvoke <com.android.server.am.EventLogTags: void writeAmDestroyService(int,int,int)>(i1, i2, i3);

        $i10 = r1.<com.android.server.am.ServiceRecord: int userId>;

        r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i10);

        $r17 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r13 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r13);

        $r16 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        $r15 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r15);

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r1, 0, 1);

        $r19 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i11 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        i4 = -1 + $i11;

     label14:
        if i4 < 0 goto label17;

        $r42 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r45 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        if $r45 != r1 goto label15;

        $r44 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r44.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

     label15:
        i4 = i4 + -1;

        goto label14;

     label16:
        i3 = -1;

        goto label13;

     label17:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        r1.<com.android.server.am.ServiceRecord: boolean isForeground> = 0;

        r1.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r1.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void clearDeliveredStartsLocked()>();

        $r23 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        virtualinvoke $r23.<java.util.ArrayList: void clear()>();

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r22 == null goto label21;

        $r35 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r3 = virtualinvoke $r35.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r3;

     label18:
        $r31 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor r3;

     label19:
        $r39 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r40 = $r39.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r40.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r41 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r36 = $r41.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r36 == null goto label21;

        $r37 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r37, 0);

     label20:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, 0, "destroy");

        $r38 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r46 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r47 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r46.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r47);

        $r48 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r43 = $r48.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r104 = (android.os.IBinder) r1;

        interfaceinvoke $r43.<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>(r104);

     label21:
        $r21 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i12 = virtualinvoke $r21.<android.util.ArrayMap: int size()>();

        if $i12 <= 0 goto label22;

        $r34 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        virtualinvoke $r34.<android.util.ArrayMap: void clear()>();

     label22:
        $r25 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $z1 = $r25 instanceof com.android.server.am.ActiveServices$ServiceRestarter;

        if $z1 == 0 goto label23;

        $r32 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $r33 = (com.android.server.am.ActiveServices$ServiceRestarter) $r32;

        virtualinvoke $r33.<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>(null);

     label23:
        $r24 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r27 = $r24.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i5 = virtualinvoke $r27.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r26 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r26 == null goto label24;

        $r30 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r30.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, i5, l6);

        $r29 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r29.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(0, i5, l6);

        $i13 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i13 != 0 goto label24;

        $r28 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r28.<com.android.internal.app.ProcessStats$ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>(r1, 0);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker> = null;

     label24:
        virtualinvoke r2.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r1);

        return;

     label25:
        $r68 := @caughtexception;

        r4 = $r68;

     label26:
        exitmonitor r3;

     label27:
        throw r4;

     label28:
        $r62 := @caughtexception;

        r5 = $r62;

        r102 = new java.lang.StringBuilder;

        specialinvoke r102.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when destroying service ");

        $r71 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r69, r5);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r1);

        goto label21;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Exception from label20 to label21 with label28;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    private final java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i13;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z8;
        java.lang.String r3, r6, r10, $r16, $r24, $r45, $r49, $r65, $r70, $r74, $r75;
        com.android.server.am.ProcessRecord r4, r5, $r9, $r59;
        android.os.RemoteException r7, $r67, $r72;
        java.lang.IllegalArgumentException r8, $r68;
        java.util.ArrayList $r11, $r18, $r20, $r61;
        com.android.server.am.ActivityManagerService $r12, $r23, $r38, $r43;
        android.util.SparseArray $r13;
        android.content.pm.IPackageManager $r14;
        java.lang.Object $r15;
        android.content.pm.ServiceInfo $r17;
        android.content.ComponentName $r19;
        android.content.pm.ApplicationInfo $r22, $r27, $r29, $r35, $r41, $r42, $r52;
        java.lang.StringBuilder $r25, $r26, $r28, $r30, $r31, $r34, $r36, $r40, $r46, $r47, $r50, $r51, $r53, $r54, $r55, $r57, $r62, $r63, $r64, $r69, $r73, $r76, r77, r78, r79, r80;
        android.content.Intent $r32, $r56;
        android.content.Intent$FilterComparison $r33, $r48;
        android.app.IApplicationThread $r37, $r58;
        com.android.server.am.ProcessStatsService $r44;
        byte $b11;
        long $l12;
        com.android.server.am.ActiveServices$ServiceMap $r60;
        java.lang.Throwable r81;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label01;

        $r59 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r58 = $r59.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r58 == null goto label01;

        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, 0);

        return null;

     label01:
        if z1 != 0 goto label02;

        $l12 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b11 = $l12 cmp 0L;

        if $b11 <= 0 goto label02;

        return null;

     label02:
        $r11 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z3 = virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z3 == 0 goto label03;

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r1);

     label03:
        $z4 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z4 == 0 goto label04;

        $i13 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r60 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i13);

        $r61 = $r60.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r61.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

     label04:
        $r12 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r13 = $r12.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i1 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r15 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        if $r15 != null goto label05;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r41 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r49 = $r41.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r50 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r52 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r52.<android.content.pm.ApplicationInfo: int uid>;

        $r46 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r48 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r56 = virtualinvoke $r48.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r55 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $i10 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r54 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        r10 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r10);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return r10;

     label05:
        $r14 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r16 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i2 = r1.<com.android.server.am.ServiceRecord: int userId>;

        interfaceinvoke $r14.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r16, 0, $i2);

     label06:
        $r17 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i3 = $r17.<android.content.pm.ServiceInfo: int flags>;

        $i4 = 2 & $i3;

        if $i4 == 0 goto label11;

        z2 = 1;

     label07:
        r3 = r1.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        if z2 != 0 goto label14;

        $r38 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r35 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r35.<android.content.pm.ApplicationInfo: int uid>;

        r4 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r3, $i7, 0);

        if r4 == null goto label13;

        $r37 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r37 == null goto label13;

     label08:
        $r42 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r45 = $r42.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r43 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r44 = $r43.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r4.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,com.android.server.am.ProcessStatsService)>($r45, $r44);

        specialinvoke r0.<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>(r1, r4, z0);

     label09:
        return null;

     label10:
        $r68 := @caughtexception;

        r8 = $r68;

        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r65 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r62 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r73 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r74);

        goto label06;

     label11:
        z2 = 0;

        goto label07;

     label12:
        $r72 := @caughtexception;

        r7 = $r72;

        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting service ");

        $r70 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r76 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        r81 = (java.lang.Throwable) r7;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r75, r81);

     label13:
        if r4 != null goto label16;

        $r23 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r22 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r19 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r5 = virtualinvoke $r23.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>(r3, $r22, 1, i0, "service", $r19, 0, z2, 0);

        if r5 != null goto label15;

        r80 = new java.lang.StringBuilder;

        specialinvoke r80.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r27 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r24 = $r27.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r29 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r29.<android.content.pm.ApplicationInfo: int uid>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r33 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r32 = virtualinvoke $r33.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        r6 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r6);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return r6;

     label14:
        r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        goto label13;

     label15:
        if z2 == 0 goto label16;

        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = r5;

     label16:
        $r18 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $z5 = virtualinvoke $r18.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z5 != 0 goto label17;

        $r20 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label17:
        $z6 = r1.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        if $z6 == 0 goto label18;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $z8 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z8 == 0 goto label18;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r1);

     label18:
        return null;

     label19:
        $r67 := @caughtexception;

        goto label06;

        catch android.os.RemoteException from label05 to label06 with label19;
        catch java.lang.IllegalArgumentException from label05 to label06 with label10;
        catch android.os.RemoteException from label08 to label09 with label12;
    }

    private final void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.String r2;
        long l0;
        com.android.internal.app.ProcessStats$ServiceState r3;
        com.android.server.am.ProcessRecord r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r15;
        int $i1, $i2, $i3, $i4, $i5;
        android.util.ArraySet $r10, $r13;
        com.android.server.am.ActivityManagerService $r14;
        com.android.server.am.ProcessStatsService $r16;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i1 != 0 goto label3;

        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = z0;

        r3 = virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState getTracker()>();

        if r3 == null goto label1;

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = $r14.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i5 = virtualinvoke $r16.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        virtualinvoke r3.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(1, $i5, l0);

     label1:
        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label2;

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r10 = $r11.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r10.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = r4.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        $z6 = z0 | $z4;

        r4.<com.android.server.am.ProcessRecord: boolean execServicesFg> = $z6;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r12.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i4 = virtualinvoke $r13.<android.util.ArraySet: int size()>();

        if $i4 != 1 goto label2;

        $r15 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>($r15);

     label2:
        $z1 = r1.<com.android.server.am.ServiceRecord: boolean executeFg>;

        $z2 = z0 | $z1;

        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = $z2;

        $i2 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i3 = 1 + $i2;

        r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i3;

        r1.<com.android.server.am.ServiceRecord: long executingStart> = l0;

        return;

     label3:
        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r5 == null goto label2;

        if z0 == 0 goto label2;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z3 = $r6.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z3 != 0 goto label2;

        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r8.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 1;

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>($r7);

        goto label2;
    }

    private void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, $r10;
        int i0, $i1, $i2;
        boolean z0;
        com.android.internal.app.ProcessStats$ServiceState $r2, $r6, $r9, $r11;
        java.util.ArrayList $r3, $r7;
        com.android.server.am.ActivityManagerService $r4;
        com.android.server.am.ProcessStatsService $r5;
        long $l3;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        z0 = 0;

        if i0 < 0 goto label2;

        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (com.android.server.am.ServiceRecord) $r8;

        $r11 = $r10.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        if $r11 != $r9 goto label4;

        z0 = 1;

     label2:
        if z0 != 0 goto label3;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker>;

        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i2 = virtualinvoke $r5.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r6.<com.android.internal.app.ProcessStats$ServiceState: void setRestarting(boolean,int,long)>(0, $i2, $l3);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState restartTracker> = null;

     label3:
        return;

     label4:
        i0 = i0 + -1;

        goto label1;
    }

    private boolean collectForceStopServicesLocked(java.lang.String, int, boolean, boolean, android.util.ArrayMap, java.util.ArrayList)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, $r9, $r17;
        int i0, i1, $i2;
        boolean z0, z1, z2, $z4, $z6, $z7;
        android.util.ArrayMap r2;
        java.util.ArrayList r3;
        com.android.server.am.ServiceRecord r4;
        java.lang.Object $r5;
        com.android.server.am.ProcessRecord $r6, $r11, $r12, $r13, $r15, $r16;
        java.lang.StringBuilder $r7, $r8, $r10;
        android.util.ArraySet $r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: android.util.ArrayMap;

        r3 := @parameter5: java.util.ArrayList;

        z2 = 0;

        i1 = 0;

     label1:
        $i2 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        if i1 >= $i2 goto label4;

        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (com.android.server.am.ServiceRecord) $r5;

        if r1 == null goto label2;

        $r17 = r4.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z7 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label7;

     label2:
        $r6 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label3;

        if z0 != 0 goto label3;

        $r16 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z6 = $r16.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z6 != 0 goto label7;

     label3:
        if z1 != 0 goto label5;

        z2 = 1;

     label4:
        return z2;

     label5:
        z2 = 1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force stopping service ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $r11 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label6;

        $r12 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        $r13 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = $r13.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 != 0 goto label6;

        $r15 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r14 = $r15.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r14.<android.util.ArraySet: boolean remove(java.lang.Object)>(r4);

     label6:
        r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label7:
        i1 = i1 + 1;

        goto label1;
    }

    private void dumpService(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ServiceRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, r6, $r15, $r17, $r27, $r34, $r41;
        java.io.FileDescriptor r2, $r26;
        java.io.PrintWriter r3;
        com.android.server.am.ServiceRecord r4;
        java.lang.String[] r5;
        boolean z0;
        java.lang.Throwable r7, r9, $r32, $r39;
        com.android.internal.os.TransferPipe r8, r45;
        java.io.IOException r11, $r40;
        java.lang.StringBuilder $r13, $r14, $r29, $r30, $r33, $r36, $r38, $r42, $r43, r44, r46, r47, r48;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r16, $r18, $r20, $r21, $r28;
        android.app.IApplicationThread $r19, $r24;
        android.os.ParcelFileDescriptor $r23;
        android.os.RemoteException $r31;
        android.os.IBinder r49;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: com.android.server.am.ServiceRecord;

        r5 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        entermonitor r0;

     label01:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("SERVICE ");

        $r15 = r4.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r4);

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r16 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r16 == null goto label10;

        $r28 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r28.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i1);

     label02:
        if z0 == 0 goto label04;

     label03:
        virtualinvoke r4.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r3, r6);

     label04:
        exitmonitor r0;

     label05:
        $r18 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r18 == null goto label09;

        $r20 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r19 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r19 == null goto label09;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("  Client:");

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

     label06:
        r45 = new com.android.internal.os.TransferPipe;

        specialinvoke r45.<com.android.internal.os.TransferPipe: void <init>()>();

        r8 = r45;

     label07:
        $r21 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r24 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r23 = virtualinvoke r8.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r26 = virtualinvoke $r23.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r49 = (android.os.IBinder) r4;

        interfaceinvoke $r24.<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>($r26, r49, r5);

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>($r27);

        virtualinvoke r8.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r2);

     label08:
        virtualinvoke r8.<com.android.internal.os.TransferPipe: void kill()>();

     label09:
        return;

     label10:
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label11:
        goto label02;

     label12:
        $r32 := @caughtexception;

        r7 = $r32;

     label13:
        exitmonitor r0;

     label14:
        throw r7;

     label15:
        $r39 := @caughtexception;

        r9 = $r39;

     label16:
        virtualinvoke r8.<com.android.internal.os.TransferPipe: void kill()>();

        throw r9;

     label17:
        $r40 := @caughtexception;

        r11 = $r40;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Failure while dumping the service: ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        return;

     label18:
        $r31 := @caughtexception;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Got a RemoteException while dumping the service");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label17;
        catch android.os.RemoteException from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.io.IOException from label08 to label09 with label17;
        catch android.os.RemoteException from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label16 to label17 with label17;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    private final com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0;
        com.android.server.am.ServiceRecord r3;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>(r1, i0);

        if r3 != r2 goto label1;

        return r3;

     label1:
        return null;
    }

    private com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap r1, $r4;
        android.util.SparseArray $r2, $r8;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService $r5;
        android.os.Handler $r6;
        android.os.Looper $r7;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.server.am.ActiveServices$ServiceMap;

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.am.ActiveServices$ServiceMap: void <init>(com.android.server.am.ActiveServices,android.os.Looper,int)>(r0, $r7, i0);

        r1 = $r4;

        $r8 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    private final boolean isServiceNeeded(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z2;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        if z0 != 0 goto label3;

        z1 = virtualinvoke r1.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

     label3:
        if z1 != 0 goto label1;

        return 0;
    }

    private final void realStartServiceLocked(com.android.server.am.ServiceRecord, com.android.server.am.ProcessRecord, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.server.am.ProcessRecord r2, $r12, $r13;
        boolean z0, $z2, $z3, $z4, $z5, $z6;
        long l0;
        java.lang.Throwable r3, r6, $r32, $r34, r38;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r4, $r11, $r16, $r31;
        com.android.internal.os.BatteryStatsImpl r5;
        android.app.IApplicationThread $r7, $r20;
        android.util.ArraySet $r8, $r35;
        com.android.server.am.ActivityManagerService $r9, $r10, $r17, $r19;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r14, $r15;
        android.content.pm.ServiceInfo $r18, $r21, $r23;
        android.content.pm.ApplicationInfo $r22;
        android.content.res.CompatibilityInfo $r24;
        java.util.ArrayList $r25, $r27, $r29;
        com.android.server.am.ActiveServices$ServiceMap $r26;
        android.os.RemoteException r36;
        com.android.server.am.ServiceRecord$StartItem r37;
        android.os.IBinder r39;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        z0 := @parameter2: boolean;

        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 != null goto label01;

        r36 = new android.os.RemoteException;

        specialinvoke r36.<android.os.RemoteException: void <init>()>();

        r38 = (java.lang.Throwable) r36;

        throw r38;

     label01:
        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = r2;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ServiceRecord: long lastActivity> = l0;

        r1.<com.android.server.am.ServiceRecord: long restartTime> = l0;

        $r8 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z0, "create");

        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 0, null);

        $r9 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label02:
        $r11 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        i1 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(int)>(46);

     label03:
        if i1 < 0 goto label13;

     label04:
        $r31 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        r4 = virtualinvoke $r31.<java.lang.String: java.lang.String substring(int)>(i1);

     label05:
        $i3 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r13 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i4 = $r13.<com.android.server.am.ProcessRecord: int uid>;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i5 = $r12.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmCreateService(int,int,java.lang.String,int,int)>($i3, $i2, r4, $i4, $i5);

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r5 = virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r5;

     label06:
        $r15 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startLaunchedLocked()>();

        exitmonitor r5;

     label07:
        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r16 = $r18.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r16);

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(7);

        $r20 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r23 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r22 = $r21.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = virtualinvoke $r19.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r22);

        $i6 = r2.<com.android.server.am.ProcessRecord: int repProcState>;

        r39 = (android.os.IBinder) r1;

        interfaceinvoke $r20.<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>(r39, $r23, $r24, $i6);

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void postNotification()>();

     label08:
        goto label09;

     label09:
        specialinvoke r0.<com.android.server.am.ActiveServices: void requestServiceBindingsLocked(com.android.server.am.ServiceRecord,boolean)>(r1, z0);

        $z2 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label10;

        $z6 = r1.<com.android.server.am.ServiceRecord: boolean callStart>;

        if $z6 == 0 goto label10;

        $r29 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i8 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        if $i8 != 0 goto label10;

        $r27 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        r37 = new com.android.server.am.ServiceRecord$StartItem;

        $i9 = virtualinvoke r1.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke r37.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>(r1, 0, $i9, null, null);

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r37);

     label10:
        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, 1);

        $z4 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z4 == 0 goto label11;

        $i7 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r26 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i7);

        $r25 = $r26.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r25.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

     label11:
        $z5 = r1.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        if $z5 == 0 goto label12;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $z3 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z3 == 0 goto label12;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r1);

     label12:
        return;

     label13:
        r4 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

     label14:
        goto label05;

     label15:
        $r32 := @caughtexception;

        r6 = $r32;

     label16:
        exitmonitor r5;

     label17:
        throw r6;

     label18:
        $r34 := @caughtexception;

        r3 = $r34;

        $r35 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r35.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r1, 0);

        throw r3;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    private final boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord, com.android.server.am.IntentBindRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.server.am.IntentBindRecord r2;
        boolean z0, z1, $z2;
        com.android.server.am.ProcessRecord $r4, $r5, $r8, $r9, $r12;
        android.app.IApplicationThread $r6, $r11;
        android.util.ArrayMap $r7;
        int $i0, $i1;
        android.content.Intent$FilterComparison $r10;
        android.content.Intent $r13;
        android.os.RemoteException $r14;
        android.os.IBinder r15;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: com.android.server.am.IntentBindRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label1;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label2;

     label1:
        return 0;

     label2:
        $z2 = r2.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z2 == 0 goto label3;

        if z1 == 0 goto label8;

     label3:
        $r7 = r2.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label8;

     label4:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z0, "bind");

        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r8.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(7);

        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r10 = r2.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r13 = virtualinvoke $r10.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r12.<com.android.server.am.ProcessRecord: int repProcState>;

        r15 = (android.os.IBinder) r1;

        interfaceinvoke $r11.<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>(r15, $r13, z1, $i1);

     label5:
        if z1 != 0 goto label7;

     label6:
        r2.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

     label7:
        r2.<com.android.server.am.IntentBindRecord: boolean hasBound> = 1;

        r2.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

     label8:
        return 1;

     label9:
        $r14 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label4 to label5 with label9;
        catch android.os.RemoteException from label6 to label7 with label9;
        catch android.os.RemoteException from label7 to label8 with label9;
    }

    private final void requestServiceBindingsLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1;
        int i0, $i1;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.IntentBindRecord $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        $r2 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i1 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r3 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        $r5 = (com.android.server.am.IntentBindRecord) $r4;

        $z1 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r1, $r5, z0, 0);

        if $z1 != 0 goto label3;

     label2:
        return;

     label3:
        i0 = i0 + -1;

        goto label1;
    }

    private com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent, java.lang.String, int, int, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1, $r73;
        java.lang.String r2, $r21, $r35, $r40, $r46, $r50, $r56, $r61, $r62, $r77, $r78, $r98, $r100, $r110;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        com.android.server.am.ActiveServices$ServiceMap r3;
        android.content.ComponentName r4, r10, $r27, $r34, $r42, $r67, $r86;
        com.android.server.am.ServiceRecord r5, r11, r19, $r76;
        android.content.Intent$FilterComparison r6, r14, $r72, $r111;
        android.content.pm.ServiceInfo r8, r12, $r89, $r101;
        android.content.pm.ResolveInfo r9;
        com.android.server.am.ActiveServices$ServiceRestarter r13, $r70;
        com.android.internal.os.BatteryStatsImpl r15;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r17;
        java.lang.Throwable r18, $r106;
        com.android.server.am.ActivityManagerService $r20, $r23, $r25, $r71, $r74, $r90, $r99;
        android.content.pm.ApplicationInfo $r22, $r24, $r54, $r55, $r66, $r68, $r87, $r88, $r91, $r92, $r97;
        com.android.server.am.ActiveServices$ServiceLookupResult $r26, $r39, $r59;
        com.android.server.firewall.IntentFirewall $r28;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r41, $r43, $r44, $r45, $r47, $r48, $r49, $r51, $r52, $r53, $r57, $r58, $r60, $r93, $r94, $r95, $r107, $r108, $r109;
        java.lang.Object $r63, $r79, $r103, $r113;
        android.util.ArrayMap $r64, $r75, $r83, $r102, $r112;
        android.content.pm.IPackageManager $r65;
        com.android.server.am.BatteryStatsService $r69;
        java.util.ArrayList $r80, $r81, $r85;
        android.os.RemoteException $r104, $r105;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        i3 = virtualinvoke $r20.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i0, i1, i2, 0, 1, "service", null);

        r3 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i3);

        r4 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r4 == null goto label36;

        $r102 = r3.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r103 = virtualinvoke $r102.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.am.ServiceRecord) $r103;

     label01:
        if r5 != null goto label02;

        $r111 = new android.content.Intent$FilterComparison;

        specialinvoke $r111.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r6 = $r111;

        $r112 = r3.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        $r113 = virtualinvoke $r112.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r5 = (com.android.server.am.ServiceRecord) $r113;

     label02:
        if r5 != null goto label29;

     label03:
        $r65 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r9 = interfaceinvoke $r65.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>(r1, r2, 1024, i3);

     label04:
        if r9 == null goto label37;

     label05:
        r8 = r9.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

     label06:
        if r8 != null goto label09;

     label07:
        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start service ");

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r107 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" U=");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not found");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r110);

     label08:
        return null;

     label09:
        $r67 = new android.content.ComponentName;

        $r66 = r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r61 = $r66.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r62 = r8.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r67.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r61, $r62);

        r10 = $r67;

     label10:
        if i3 <= 0 goto label16;

     label11:
        $r99 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r100 = r8.<android.content.pm.ServiceInfo: java.lang.String processName>;

        $r97 = r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r98 = r8.<android.content.pm.ServiceInfo: java.lang.String name>;

        $i15 = r8.<android.content.pm.ServiceInfo: int flags>;

        $z6 = virtualinvoke $r99.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r100, $r97, $r98, $i15);

        if $z6 == 0 goto label14;

     label12:
        i3 = 0;

     label13:
        r3 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(0);

     label14:
        $r101 = new android.content.pm.ServiceInfo;

        specialinvoke $r101.<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>(r8);

        r12 = $r101;

        $r90 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r91 = r12.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r92 = virtualinvoke $r90.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r91, i3);

        r12.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo> = $r92;

     label15:
        r8 = r12;

     label16:
        $r64 = r3.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r63 = virtualinvoke $r64.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (com.android.server.am.ServiceRecord) $r63;

     label17:
        if r11 != null goto label35;

        if z0 == 0 goto label35;

     label18:
        $r72 = new android.content.Intent$FilterComparison;

        $r73 = virtualinvoke r1.<android.content.Intent: android.content.Intent cloneFilter()>();

        specialinvoke $r72.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r73);

        r14 = $r72;

        $r70 = new com.android.server.am.ActiveServices$ServiceRestarter;

        specialinvoke $r70.<com.android.server.am.ActiveServices$ServiceRestarter: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ActiveServices$1)>(r0, null);

        r13 = $r70;

        $r71 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r69 = $r71.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r15 = virtualinvoke $r69.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r15;

     label19:
        $r68 = r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r68.<android.content.pm.ApplicationInfo: int uid>;

        $r78 = r8.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r77 = r8.<android.content.pm.ServiceInfo: java.lang.String name>;

        r17 = virtualinvoke r15.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>($i11, $r78, $r77);

        exitmonitor r15;

     label20:
        $r76 = new com.android.server.am.ServiceRecord;

        $r74 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        specialinvoke $r76.<com.android.server.am.ServiceRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.ComponentName,android.content.Intent$FilterComparison,android.content.pm.ServiceInfo,boolean,java.lang.Runnable)>($r74, r17, r10, r14, r8, z1, r13);

        r5 = $r76;

     label21:
        virtualinvoke r13.<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>(r5);

        $r75 = r3.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        virtualinvoke $r75.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r5);

        $r83 = r3.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        virtualinvoke $r83.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, r5);

        $r81 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i12 = virtualinvoke $r81.<java.util.ArrayList: int size()>();

        i4 = -1 + $i12;

     label22:
        if i4 < 0 goto label29;

     label23:
        $r80 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r79 = virtualinvoke $r80.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r19 = (com.android.server.am.ServiceRecord) $r79;

        $r89 = r19.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r88 = $r89.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r88.<android.content.pm.ApplicationInfo: int uid>;

        $r87 = r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r87.<android.content.pm.ApplicationInfo: int uid>;

        if $i13 != $i14 goto label24;

        $r86 = r19.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z5 = virtualinvoke $r86.<android.content.ComponentName: boolean equals(java.lang.Object)>(r10);

        if $z5 == 0 goto label24;

        $r85 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r85.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

     label24:
        i4 = i4 + -1;

        goto label22;

     label25:
        $r106 := @caughtexception;

        r18 = $r106;

     label26:
        exitmonitor r15;

     label27:
        throw r18;

     label28:
        $r104 := @caughtexception;

        r5 = r11;

     label29:
        if r5 == null goto label33;

        $r25 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = r5.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r22 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = r5.<com.android.server.am.ServiceRecord: boolean exported>;

        $i6 = virtualinvoke $r25.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r21, i0, i1, $i5, $z2);

        if $i6 == 0 goto label31;

        $z4 = r5.<com.android.server.am.ServiceRecord: boolean exported>;

        if $z4 != 0 goto label30;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r42 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r43 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not exported from uid ");

        $r54 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r54.<android.content.pm.ApplicationInfo: int uid>;

        $r49 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r50);

        $r59 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not exported from uid ");

        $r55 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i10 = $r55.<android.content.pm.ApplicationInfo: int uid>;

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, $r56);

        return $r59;

     label30:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r34 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r35 = r5.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r40);

        $r39 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        $r46 = r5.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        specialinvoke $r39.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, $r46);

        return $r39;

     label31:
        $r23 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r28 = $r23.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall>;

        $r27 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r24 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $z3 = virtualinvoke $r28.<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>($r27, r1, i1, i0, r2, $r24);

        if $z3 != 0 goto label32;

        return null;

     label32:
        $r26 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        specialinvoke $r26.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, r5, null);

        return $r26;

     label33:
        return null;

     label34:
        $r105 := @caughtexception;

        goto label29;

     label35:
        r5 = r11;

        goto label29;

     label36:
        r5 = null;

        goto label01;

     label37:
        r8 = null;

        goto label06;

        catch android.os.RemoteException from label03 to label04 with label34;
        catch android.os.RemoteException from label05 to label06 with label34;
        catch android.os.RemoteException from label07 to label08 with label34;
        catch android.os.RemoteException from label09 to label10 with label34;
        catch android.os.RemoteException from label11 to label12 with label34;
        catch android.os.RemoteException from label13 to label14 with label34;
        catch android.os.RemoteException from label14 to label15 with label34;
        catch android.os.RemoteException from label16 to label17 with label34;
        catch android.os.RemoteException from label18 to label19 with label28;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch android.os.RemoteException from label20 to label21 with label28;
        catch android.os.RemoteException from label21 to label22 with label34;
        catch android.os.RemoteException from label23 to label24 with label34;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch android.os.RemoteException from label27 to label28 with label28;
    }

    private final boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, r4, r6;
        boolean z0, z1, z2, $z3;
        com.android.server.am.ActiveServices$ServiceMap r2;
        long l0, l1, l2, l6, $l12, $l13, $l14, $l15, $l16, $l20, $l23, $l25, $l26, $l28, $l29, $l32, $l34, $l35, $l36, $l38, $l39, $l40, $l42, $l43, $l44, $l46, $l48, $l49, $l52, $l53, $l54;
        java.lang.Object[] r3;
        int i3, i4, i5, $i7, $i8, $i9, $i10, $i11, $i17, $i21, $i22, $i24, $i33, $i45, $i47, $i55, $i57;
        com.android.server.am.ServiceRecord$StartItem r5;
        android.util.ArrayMap $r7, $r55;
        android.content.ComponentName $r8, $r42, $r56;
        java.lang.Object $r9, $r35, $r38, $r58;
        android.content.pm.ServiceInfo $r10;
        android.content.pm.ApplicationInfo $r11;
        java.util.ArrayList $r12, $r28, $r33, $r34, $r36, $r37, $r39, $r40;
        android.os.Handler $r13, $r17;
        com.android.server.am.ActivityManagerService $r14, $r15, $r31;
        java.lang.Runnable $r16, $r18;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r24, $r25, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r52, $r54, $r57;
        java.lang.String $r21, $r26, $r30, $r51, $r53;
        java.lang.Long $r27;
        java.lang.Integer $r29;
        com.android.server.am.ProcessStatsService $r32;
        byte $b27, $b30, $b31, $b37, $b41, $b50, $b51;
        android.content.Intent $r41, $r45;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        $i7 = r1.<com.android.server.am.ServiceRecord: int userId>;

        r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i7);

        $r7 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r8 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        if $r9 == r1 goto label01;

        $r55 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r56 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r58 = virtualinvoke $r55.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r56);

        r6 = (com.android.server.am.ServiceRecord) $r58;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to schedule restart of ");

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when found in map: ");

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        return 0;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r11 = $r10.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i9 = 8 & $i8;

        if $i9 != 0 goto label19;

        l1 = 1000L;

        l2 = 60000L;

        $r33 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        i4 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        z1 = 0;

        if i4 <= 0 goto label09;

        i5 = i4 - 1;

     label02:
        if i5 < 0 goto label08;

        $r37 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r5 = (com.android.server.am.ServiceRecord$StartItem) $r38;

        virtualinvoke r5.<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>();

        $r41 = r5.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        if $r41 != null goto label04;

     label03:
        i5 = i5 + -1;

        goto label02;

     label04:
        if z0 == 0 goto label05;

        $i55 = r5.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        if $i55 >= 3 goto label07;

        $i57 = r5.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        if $i57 >= 6 goto label07;

     label05:
        $r40 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        virtualinvoke $r40.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r5);

        $l54 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l53 = r5.<com.android.server.am.ServiceRecord$StartItem: long deliveredTime>;

        $l52 = $l54 - $l53;

        l6 = 2L * $l52;

        $b51 = l1 cmp l6;

        if $b51 >= 0 goto label06;

        l1 = l6;

     label06:
        $b50 = l2 cmp l6;

        if $b50 >= 0 goto label03;

        l2 = l6;

        goto label03;

     label07:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling start item ");

        $r45 = r5.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in service ");

        $r42 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r54 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r53);

        z1 = 1;

        goto label03;

     label08:
        $r39 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        virtualinvoke $r39.<java.util.ArrayList: void clear()>();

     label09:
        $i21 = r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i22 = 1 + $i21;

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i22;

        $l23 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b30 = $l23 cmp 0L;

        if $b30 != 0 goto label16;

        $i47 = r1.<com.android.server.am.ServiceRecord: int restartCount>;

        $i45 = 1 + $i47;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = $i45;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l1;

     label10:
        $l36 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l35 = l0 + $l36;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l35;

     label11:
        $r36 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i33 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        i3 = -1 + $i33;

     label12:
        z2 = 0;

        if i3 < 0 goto label13;

        $r34 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.ServiceRecord) $r35;

        if r4 == r1 goto label18;

        $l44 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l34 = r4.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l43 = $l34 - 10000L;

        $b41 = $l44 cmp $l43;

        if $b41 < 0 goto label18;

        $l40 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l42 = r4.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l39 = 10000L + $l42;

        $b37 = $l40 cmp $l39;

        if $b37 >= 0 goto label18;

        $l38 = r4.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l48 = 10000L + $l38;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l48;

        $l49 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l46 = $l49 - l0;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l46;

        z2 = 1;

     label13:
        if z2 != 0 goto label11;

     label14:
        $r12 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z3 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 != 0 goto label15;

        r1.<com.android.server.am.ServiceRecord: boolean createdFromFg> = 0;

        $r28 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r31 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r32 = $r31.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i24 = virtualinvoke $r32.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void makeRestarting(int,long)>($i24, l0);

     label15:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r13 = $r15.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r16 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r13.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r16);

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r17 = $r14.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r18 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $l12 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        virtualinvoke $r17.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>($r18, $l12);

        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l14 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l13 = $l15 + $l14;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l13;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling restart of crashed service ");

        $r21 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $l16 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        r3 = newarray (java.lang.Object)[3];

        $i17 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        r3[0] = $r29;

        $r30 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        r3[1] = $r30;

        $l20 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l20);

        r3[2] = $r27;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30035, r3);

        return z1;

     label16:
        $l29 = r1.<com.android.server.am.ServiceRecord: long restartTime>;

        $l32 = l2 + $l29;

        $b31 = l0 cmp $l32;

        if $b31 <= 0 goto label17;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = 1;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l1;

        goto label10;

     label17:
        $l26 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l25 = 4L * $l26;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l25;

        $l28 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b27 = $l28 cmp l1;

        if $b27 >= 0 goto label10;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l1;

        goto label10;

     label18:
        i3 = i3 + -1;

        goto label12;

     label19:
        $i10 = r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i11 = 1 + $i10;

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i11;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = 0;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = 0L;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = l0;

        z1 = 0;

        goto label14;
    }

    private final void sendServiceArgsLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z3;
        int i0, i1, $i3, $i5, $i6, $i7, $i8;
        java.lang.Exception r2, $r21;
        com.android.server.am.ServiceRecord$StartItem r4;
        byte b2;
        java.util.ArrayList $r5, $r6, $r8, $r10;
        java.lang.Object $r7;
        long $l4;
        android.content.Intent $r9, $r12;
        com.android.server.am.ActivityManagerService$NeededUriGrants $r11, $r17;
        com.android.server.am.ProcessRecord $r13, $r14;
        android.app.IApplicationThread $r15;
        com.android.server.am.ActivityManagerService $r16, $r18;
        android.os.RemoteException $r19;
        com.android.server.am.UriPermissionOwner $r20;
        android.os.IBinder r22;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r5 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label02;

     label01:
        return;

     label02:
        $r6 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label01;

     label03:
        $r8 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r7 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r4 = (com.android.server.am.ServiceRecord$StartItem) $r7;

        $r9 = r4.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        if $r9 != null goto label05;

     label04:
        if i0 > 1 goto label02;

     label05:
        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r4.<com.android.server.am.ServiceRecord$StartItem: long deliveredTime> = $l4;

        $r10 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $i6 = r4.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        $i5 = 1 + $i6;

        r4.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount> = $i5;

        $r11 = r4.<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.ActivityManagerService$NeededUriGrants neededGrants>;

        if $r11 == null goto label06;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r17 = r4.<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.ActivityManagerService$NeededUriGrants neededGrants>;

        $r20 = virtualinvoke r4.<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)>($r17, $r20);

     label06:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z0, "start");

     label07:
        if z1 != 0 goto label09;

        z1 = 1;

     label08:
        $r18 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r18.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r14);

     label09:
        i1 = r4.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

     label10:
        b2 = 0;

        if i1 <= 1 goto label11;

        b2 = 2;

     label11:
        $i7 = r4.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        if $i7 <= 0 goto label13;

     label12:
        b2 = b2 | 1;

     label13:
        $r13 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $z3 = r4.<com.android.server.am.ServiceRecord$StartItem: boolean taskRemoved>;

        $i8 = r4.<com.android.server.am.ServiceRecord$StartItem: int id>;

        $r12 = r4.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        r22 = (android.os.IBinder) r1;

        interfaceinvoke $r15.<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>(r22, $z3, $i8, b2, $r12);

     label14:
        goto label02;

     label15:
        $r19 := @caughtexception;

        return;

     label16:
        $r21 := @caughtexception;

        r2 = $r21;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unexpected exception", r2);

        return;

        catch android.os.RemoteException from label03 to label04 with label15;
        catch java.lang.Exception from label03 to label04 with label16;
        catch android.os.RemoteException from label05 to label06 with label15;
        catch java.lang.Exception from label05 to label06 with label16;
        catch android.os.RemoteException from label06 to label07 with label15;
        catch java.lang.Exception from label06 to label07 with label16;
        catch android.os.RemoteException from label08 to label09 with label15;
        catch java.lang.Exception from label08 to label09 with label16;
        catch android.os.RemoteException from label09 to label10 with label15;
        catch java.lang.Exception from label09 to label10 with label16;
        catch android.os.RemoteException from label11 to label12 with label15;
        catch java.lang.Exception from label11 to label12 with label16;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    private void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, $r24;
        boolean z0, z1, $z2, $z6, $z8;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7;
        com.android.server.am.ProcessRecord $r2, $r4, $r5, $r6, $r11, $r14, $r15, $r18, $r20, $r22, $r28, $r30;
        com.android.internal.app.ProcessStats$ServiceState $r3, $r10, $r12;
        android.util.ArraySet $r7, $r13, $r16, $r23, $r25;
        com.android.server.am.ProcessStatsService $r8;
        com.android.server.am.ActivityManagerService $r9, $r17, $r29;
        long $l4;
        android.util.ArrayMap $r19;
        java.util.ArrayList $r21;
        java.lang.Object $r26;
        android.os.Handler $r27;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i1 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i2 = -1 + $i1;

        r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i2;

        $i3 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i3 > 0 goto label6;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label3;

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r11.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 0;

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r14.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r13.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r15 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i6 = virtualinvoke $r16.<android.util.ArraySet: int size()>();

        if $i6 != 0 goto label7;

        $r29 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r27 = $r29.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r28 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r27.<android.os.Handler: void removeMessages(int,java.lang.Object)>(12, $r28);

     label1:
        if z0 == 0 goto label2;

        $r21 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r21.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r19 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        virtualinvoke $r19.<android.util.ArrayMap: void clear()>();

     label2:
        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r18);

     label3:
        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = 0;

        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r3 == null goto label4;

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r9 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i5 = virtualinvoke $r8.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r10.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(0, $i5, $l4);

        if z1 == 0 goto label4;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r12.<com.android.internal.app.ProcessStats$ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>(r1, 0);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker> = null;

     label4:
        if z1 == 0 goto label6;

        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label5;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z2 = $r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z2 != 0 goto label5;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r7.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

     label5:
        r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

     label6:
        return;

     label7:
        $z6 = r1.<com.android.server.am.ServiceRecord: boolean executeFg>;

        if $z6 == 0 goto label1;

        $r20 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r20.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i7 = virtualinvoke $r23.<android.util.ArraySet: int size()>();

        i0 = -1 + $i7;

     label8:
        if i0 < 0 goto label1;

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r25 = $r22.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r26 = virtualinvoke $r25.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        $r24 = (com.android.server.am.ServiceRecord) $r26;

        $z8 = $r24.<com.android.server.am.ServiceRecord: boolean executeFg>;

        if $z8 == 0 goto label9;

        $r30 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r30.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 1;

        goto label1;

     label9:
        i0 = i0 + -1;

        goto label8;
    }

    private void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0;
        long l1;
        com.android.internal.app.ProcessStats$ServiceState $r2, $r5, $r6, $r7;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.ProcessStatsService $r4;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i0 = virtualinvoke $r4.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r5.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(0, i0, l1);

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r6.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(0, i0, l1);

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        virtualinvoke $r7.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, i0, l1);

     label1:
        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, 1, 1);

        return;
    }

    private void stopServiceLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.internal.os.BatteryStatsImpl r2;
        java.lang.Throwable r3, $r10;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4, $r5;
        com.android.internal.app.ProcessStats$ServiceState $r6, $r9;
        com.android.server.am.ActivityManagerService $r7;
        com.android.server.am.ProcessStatsService $r8;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $z0 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z0 == 0 goto label1;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 1;

        return;

     label1:
        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r2 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r2;

     label2:
        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor r2;

     label3:
        r1.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r6 == null goto label4;

        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i0 = virtualinvoke $r8.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r9.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, $i0, $l1);

     label4:
        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, 0, 0);

        return;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private final boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord, int, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, $i1;
        boolean z0, z1;
        java.util.ArrayList $r2;
        com.android.server.am.ActivityManagerService $r3;
        java.lang.Runnable $r4;
        android.os.Handler $r5;
        android.content.pm.ApplicationInfo $r6;
        long $l2;
        byte $b3;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        $l2 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        z1 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if z1 != 0 goto label2;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if i0 == $i1 goto label3;

     label2:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void resetRestartCounter()>();

     label3:
        if z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r1);

     label4:
        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r4 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        return 1;
    }

    private boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord, com.android.server.am.ConnectionRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r16, $r18, $r20, $r21, $r24;
        com.android.server.am.ConnectionRecord r2, r5;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.am.ServiceRecord r3;
        java.util.ArrayList r4, $r19, $r25;
        android.util.ArraySet $r6, $r8;
        com.android.server.am.ActivityManagerService $r7;
        android.util.ArrayMap $r9, $r12;
        java.lang.Object $r10, $r11, $r14;
        com.android.server.am.AppBindRecord $r13, $r15, $r17, $r22, $r23;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ConnectionRecord;

        if r2 == null goto label02;

        $r23 = r2.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r21 = $r23.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r21 == null goto label02;

        $r22 = r2.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r24 = $r22.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r25 = $r24.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i7 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label02;

     label01:
        return 0;

     label02:
        z0 = 0;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i3 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        i0 = -1 + $i3;

     label03:
        if i0 < 0 goto label10;

        if z0 != 0 goto label10;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r10 = virtualinvoke $r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r3 = (com.android.server.am.ServiceRecord) $r10;

        $r9 = r3.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i4 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i4;

     label04:
        if i1 < 0 goto label09;

        if z0 != 0 goto label09;

        $r12 = r3.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (java.util.ArrayList) $r11;

        $i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i2 = -1 + $i5;

     label05:
        if i2 < 0 goto label08;

        $r14 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ConnectionRecord) $r14;

        $r13 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r16 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r16 == null goto label06;

        $r15 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r18 = $r15.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r18 != r1 goto label07;

     label06:
        i2 = i2 + -1;

        goto label05;

     label07:
        $r17 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r19 = $r20.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i6 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label06;

        z0 = 1;

     label08:
        i1 = i1 + -1;

        goto label04;

     label09:
        i0 = i0 + -1;

        goto label03;

     label10:
        $z1 = r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if z0 == $z1 goto label01;

        r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities> = z0;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r1, z0, null);

        return 1;
    }

    private void updateServiceForegroundLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, z1, $z2, $z3;
        int i0, $i1;
        android.util.ArraySet $r2, $r4;
        com.android.server.am.ActivityManagerService $r3;
        java.lang.Object $r5;
        com.android.server.am.ServiceRecord $r6;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i1 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        i0 = -1 + $i1;

     label1:
        z1 = 0;

        if i0 < 0 goto label2;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r5 = virtualinvoke $r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        $r6 = (com.android.server.am.ServiceRecord) $r5;

        $z3 = $r6.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z3 == 0 goto label4;

        z1 = 1;

     label2:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if z1 == $z2 goto label3;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundServices> = z1;

        if z0 == 0 goto label3;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label3:
        return;

     label4:
        i0 = i0 + -1;

        goto label1;
    }

    boolean attachApplicationLocked(com.android.server.am.ProcessRecord, java.lang.String) throws java.lang.Exception
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r10, $r25;
        java.lang.String r2, $r19, $r27, $r33, $r35, $r37;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z2, $z4, $z5;
        com.android.server.am.ServiceRecord r3, r4;
        java.lang.Exception r5, $r32;
        java.util.ArrayList $r6, $r7, $r8, $r9, $r20, $r22, $r26;
        java.lang.Object $r11, $r21;
        java.lang.Runnable $r12, $r17;
        com.android.server.am.ActivityManagerService $r13, $r14, $r28;
        android.os.Handler $r15, $r16;
        android.content.pm.ApplicationInfo $r18, $r24, $r30;
        com.android.server.am.ProcessStatsService $r29;
        java.lang.StringBuilder $r31, $r34, $r36;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        z0 = 0;

        if i0 <= 0 goto label08;

        r4 = null;

        i2 = 0;

     label01:
        $r22 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i7 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        if i2 >= $i7 goto label08;

        $r20 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ServiceRecord) $r21;

        $r25 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if r1 == $r25 goto label03;

        $i9 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r30 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r30.<android.content.pm.ApplicationInfo: int uid>;

        if $i9 != $i8 goto label13;

        $r33 = r4.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z5 != 0 goto label03;

     label02:
        goto label13;

     label03:
        $r26 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r26.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

     label04:
        i2 = i2 + -1;

     label05:
        $r24 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r27 = $r24.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r28 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r29 = $r28.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,com.android.server.am.ProcessStatsService)>($r27, $r29);

        $z4 = r4.<com.android.server.am.ServiceRecord: boolean createdFromFg>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>(r4, r1, $z4);

     label06:
        z0 = 1;

        goto label13;

     label07:
        $r32 := @caughtexception;

        r5 = $r32;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting service ");

        $r35 = r4.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r37, r5);

        throw r5;

     label08:
        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label12;

        i1 = 0;

     label09:
        $r8 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i1 >= $i4 goto label12;

        $r9 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ServiceRecord) $r11;

        $r10 = r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if r1 == $r10 goto label11;

        $i5 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r18 = r3.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        if $i5 != $i6 goto label10;

        $r19 = r3.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z2 != 0 goto label11;

     label10:
        i1 = i1 + 1;

        goto label09;

     label11:
        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r13.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r12 = r3.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r15.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r12);

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = $r14.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r17 = r3.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r16.<android.os.Handler: boolean post(java.lang.Runnable)>($r17);

        goto label10;

     label12:
        return z0;

     label13:
        i2 = i2 + 1;

        goto label01;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label07;
    }

    int bindServiceLocked(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, int)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.os.IBinder r2, r13, $r39, $r81;
        android.content.Intent r3;
        java.lang.String r4, r17, $r78, $r86, $r88, $r92, $r94;
        android.app.IServiceConnection r5, $r41, $r80;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i19, $i20;
        com.android.server.am.ProcessRecord r6, $r29, $r32, $r36, $r37, $r46, $r47, $r52, $r53, $r54, $r56, $r85;
        com.android.server.am.ActivityRecord r7;
        android.app.PendingIntent r8;
        boolean z0, z1, $z2, $z6, $z10, $z12, $z14;
        com.android.server.am.ServiceRecord r9, $r23;
        com.android.server.am.ActiveServices$ServiceLookupResult r10;
        long l6, $l15, $l17, $l18;
        com.android.server.am.AppBindRecord r11, $r84;
        java.lang.Throwable r12, $r98;
        com.android.server.am.ConnectionRecord r14, $r26;
        java.util.ArrayList r15, r16, $r59, $r62;
        java.lang.Exception r18, $r89;
        com.android.server.am.ActivityManagerService $r20, $r50, $r51, $r67;
        com.android.internal.app.ProcessStats$ServiceState r21;
        android.content.pm.ApplicationInfo $r22, $r24;
        android.util.ArrayMap $r25, $r30, $r48, $r57, $r61;
        java.util.HashSet $r27, $r55, $r63, $r64;
        java.lang.Object $r28, $r31;
        android.util.ArraySet $r33;
        com.android.server.am.IntentBindRecord $r34, $r40, $r42, $r43, $r44, $r45, $r49;
        com.android.server.am.ActiveServices$ServiceMap $r35;
        android.content.ComponentName $r38;
        android.os.Parcelable $r65;
        com.android.server.am.ProcessStatsService $r66;
        java.lang.StringBuilder $r68, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r79, $r82, $r83, $r87, $r90, $r91, $r93, $r95, $r96;
        java.lang.SecurityException $r69;
        java.lang.RuntimeException $r97;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.IServiceConnection;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r6 = virtualinvoke $r20.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r6 != null goto label01;

        $r69 = new java.lang.SecurityException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i20 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when binding service ");

        $r87 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.lang.SecurityException: void <init>(java.lang.String)>($r88);

        throw $r69;

     label01:
        r7 = null;

        if r2 == null goto label02;

        r7 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r2);

        if r7 != null goto label02;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding with unknown activity: ");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r78);

        return 0;

     label02:
        $r22 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i2 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        r8 = null;

        i3 = 0;

        if i2 != 1000 goto label05;

     label03:
        $r65 = virtualinvoke r3.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.client_intent");

        r8 = (android.app.PendingIntent) $r65;

     label04:
        i3 = 0;

        if r8 == null goto label05;

        i3 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.client_label", 0);

        if i3 == 0 goto label05;

        r3 = virtualinvoke r3.<android.content.Intent: android.content.Intent cloneFilter()>();

     label05:
        $i7 = r6.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i7 == 0 goto label07;

        z0 = 1;

     label06:
        i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r10 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r3, r4, i4, i5, i1, 1, z0);

        if r10 != null goto label08;

        return 0;

     label07:
        z0 = 0;

        goto label06;

     label08:
        $r23 = r10.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r23 != null goto label09;

        return -1;

     label09:
        r9 = r10.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        l6 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label10:
        $r24 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r9, $i9, 0);

        if $z2 == 0 goto label11;

     label11:
        $i8 = i0 & 1;

        if $i8 == 0 goto label15;

     label12:
        $l17 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r9.<com.android.server.am.ServiceRecord: long lastActivity> = $l17;

        $z14 = virtualinvoke r9.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if $z14 != 0 goto label15;

        r21 = virtualinvoke r9.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState getTracker()>();

     label13:
        if r21 == null goto label15;

     label14:
        $r67 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r66 = $r67.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i19 = virtualinvoke $r66.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l18 = r9.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r21.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(1, $i19, $l18);

     label15:
        r11 = virtualinvoke r9.<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>(r3, r6);

        $r26 = new com.android.server.am.ConnectionRecord;

        specialinvoke $r26.<com.android.server.am.ConnectionRecord: void <init>(com.android.server.am.AppBindRecord,com.android.server.am.ActivityRecord,android.app.IServiceConnection,int,int,android.app.PendingIntent)>(r11, r7, r5, i0, i3, r8);

        r14 = $r26;

        r13 = interfaceinvoke r5.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r25 = r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r28 = virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r15 = (java.util.ArrayList) $r28;

     label16:
        if r15 != null goto label18;

     label17:
        $r62 = new java.util.ArrayList;

        specialinvoke $r62.<java.util.ArrayList: void <init>()>();

        r15 = $r62;

        $r61 = r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        virtualinvoke $r61.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r15);

     label18:
        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        $r27 = r11.<com.android.server.am.AppBindRecord: java.util.HashSet connections>;

        virtualinvoke $r27.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

     label19:
        if r7 == null goto label22;

     label20:
        $r55 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r55 != null goto label21;

        $r63 = new java.util.HashSet;

        specialinvoke $r63.<java.util.HashSet: void <init>()>();

        r7.<com.android.server.am.ActivityRecord: java.util.HashSet connections> = $r63;

     label21:
        $r64 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        virtualinvoke $r64.<java.util.HashSet: boolean add(java.lang.Object)>(r14);

     label22:
        $r32 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r33 = $r32.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r33.<android.util.ArraySet: boolean add(java.lang.Object)>(r14);

        $i11 = r14.<com.android.server.am.ConnectionRecord: int flags>;

        $i10 = 8 & $i11;

        if $i10 == 0 goto label23;

        $r54 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r54.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 1;

     label23:
        $r29 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r29 == null goto label24;

        $r56 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord)>($r56, r14);

     label24:
        $r30 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r31 = virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r16 = (java.util.ArrayList) $r31;

     label25:
        if r16 != null goto label27;

     label26:
        $r59 = new java.util.ArrayList;

        specialinvoke $r59.<java.util.ArrayList: void <init>()>();

        r16 = $r59;

        $r57 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        virtualinvoke $r57.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r16);

     label27:
        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

     label28:
        $i13 = i0 & 1;

        if $i13 == 0 goto label31;

     label29:
        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r9.<com.android.server.am.ServiceRecord: long lastActivity> = $l15;

        $i16 = virtualinvoke r3.<android.content.Intent: int getFlags()>();

        r17 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>(r9, $i16, z0, 0);

     label30:
        if r17 == null goto label31;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

        return 0;

     label31:
        $r36 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r36 == null goto label32;

        $r51 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r53 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r47 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z12 = $r47.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        $r46 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r51.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r53, $z12, $r46);

        $r50 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r52 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r50.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r52);

     label32:
        $r37 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r37 == null goto label42;

        $r44 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        z1 = $r44.<com.android.server.am.IntentBindRecord: boolean received>;

     label33:
        if z1 == 0 goto label42;

     label34:
        $r41 = r14.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r38 = r9.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r43 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r39 = $r43.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

        interfaceinvoke $r41.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r38, $r39);

     label35:
        $r40 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r48 = $r40.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i14 = virtualinvoke $r48.<android.util.ArrayMap: int size()>();

        if $i14 != 1 goto label36;

        $r49 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z10 = $r49.<com.android.server.am.IntentBindRecord: boolean doRebind>;

        if $z10 == 0 goto label36;

        $r45 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r9, $r45, z0, 1);

     label36:
        $i12 = r9.<com.android.server.am.ServiceRecord: int userId>;

        $r35 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i12);

        virtualinvoke $r35.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r9);

     label37:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

        return 1;

     label38:
        $r89 := @caughtexception;

        r18 = $r89;

     label39:
        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r92 = r9.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r79 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r80 = r14.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r81 = interfaceinvoke $r80.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r84 = r14.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r85 = $r84.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r86 = $r85.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r96 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r94, r18);

     label40:
        goto label35;

     label41:
        $r98 := @caughtexception;

        r12 = $r98;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l6);

        throw r12;

     label42:
        $r34 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z6 = $r34.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z6 != 0 goto label36;

        $r42 = r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r9, $r42, z0, 0);

     label43:
        goto label36;

     label44:
        $r97 := @caughtexception;

        r8 = null;

        goto label04;

        catch java.lang.RuntimeException from label03 to label04 with label44;
        catch java.lang.Throwable from label10 to label11 with label41;
        catch java.lang.Throwable from label12 to label13 with label41;
        catch java.lang.Throwable from label14 to label15 with label41;
        catch java.lang.Throwable from label15 to label16 with label41;
        catch java.lang.Throwable from label17 to label18 with label41;
        catch java.lang.Throwable from label18 to label19 with label41;
        catch java.lang.Throwable from label20 to label21 with label41;
        catch java.lang.Throwable from label21 to label22 with label41;
        catch java.lang.Throwable from label22 to label23 with label41;
        catch java.lang.Throwable from label23 to label24 with label41;
        catch java.lang.Throwable from label24 to label25 with label41;
        catch java.lang.Throwable from label26 to label27 with label41;
        catch java.lang.Throwable from label27 to label28 with label41;
        catch java.lang.Throwable from label29 to label30 with label41;
        catch java.lang.Throwable from label31 to label32 with label41;
        catch java.lang.Throwable from label32 to label33 with label41;
        catch java.lang.Exception from label34 to label35 with label38;
        catch java.lang.Throwable from label34 to label35 with label41;
        catch java.lang.Throwable from label35 to label36 with label41;
        catch java.lang.Throwable from label36 to label37 with label41;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label42 to label43 with label41;
    }

    void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord, android.content.ComponentName, android.content.Intent)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.TaskRecord r1;
        android.content.ComponentName r2;
        android.content.Intent r3;
        java.util.ArrayList r4, $r8, $r11;
        android.util.ArrayMap r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.am.ServiceRecord r6, r7;
        java.lang.Object $r9, $r21;
        android.content.pm.ServiceInfo $r10;
        boolean $z0, $z3;
        com.android.server.am.ServiceRecord$StartItem $r12;
        com.android.server.am.ProcessRecord $r13, $r15;
        android.app.IApplicationThread $r14;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;
        java.lang.String $r20, $r22, $r23, $r24;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: android.content.Intent;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        $i2 = r1.<com.android.server.am.TaskRecord: int userId>;

        r5 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServices(int)>($i2);

        i0 = 0;

     label1:
        $i3 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        if i0 >= $i3 goto label3;

        $r21 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r7 = (com.android.server.am.ServiceRecord) $r21;

        $r22 = r7.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r24 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z3 == 0 goto label2;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        i1 = 0;

     label4:
        $i4 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i1 >= $i4 goto label7;

        $r9 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.am.ServiceRecord) $r9;

        $z0 = r6.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z0 == 0 goto label5;

        $r10 = r6.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i6 = $r10.<android.content.pm.ServiceInfo: int flags>;

        $i5 = 1 & $i6;

        if $i5 == 0 goto label6;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service ");

        $r20 = r6.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": remove task");

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r23);

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r6);

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r11 = r6.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r12 = new com.android.server.am.ServiceRecord$StartItem;

        $i7 = virtualinvoke r6.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r12.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>(r6, 1, $i7, r3, null);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r13 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label5;

        $r15 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r14 = $r15.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r14 == null goto label5;

        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r6, 1, 0);

        goto label5;

     label7:
        return;
    }

    protected boolean dumpService(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r18, $r26;
        java.lang.String[] r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, z1, $z2, $z5, $z7;
        java.util.ArrayList r5, $r17;
        java.lang.Throwable r6, $r32;
        int[] r7;
        android.content.ComponentName r8, r9, $r23, $r25;
        android.util.ArrayMap r10, r14;
        com.android.server.am.ActiveServices$ServiceMap r11, r15;
        com.android.server.am.ServiceRecord r12, $r21, $r31;
        com.android.server.am.ActivityManagerService $r16;
        java.lang.Object $r19, $r20, $r24, $r27, $r28;
        android.util.SparseArray $r22, $r29;
        java.lang.RuntimeException $r30;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r5 = $r17;

        entermonitor r0;

     label01:
        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r7 = virtualinvoke $r16.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        $r18 = "all";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label10;

        i7 = lengthof r7;

     label02:
        i10 = 0;

     label03:
        if i10 >= i7 goto label35;

     label04:
        i9 = r7[i10];

        $r29 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r28 = virtualinvoke $r29.<android.util.SparseArray: java.lang.Object get(int)>(i9);

        r15 = (com.android.server.am.ActiveServices$ServiceMap) $r28;

     label05:
        if r15 != null goto label06;

        goto label42;

     label06:
        r14 = r15.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

     label07:
        i11 = 0;

     label08:
        $i16 = virtualinvoke r14.<android.util.ArrayMap: int size()>();

        if i11 >= $i16 goto label42;

        $r27 = virtualinvoke r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i11);

        $r31 = (com.android.server.am.ServiceRecord) $r27;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

     label09:
        i11 = i11 + 1;

        goto label08;

     label10:
        if r3 == null goto label44;

     label11:
        r8 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r3);

     label12:
        r9 = r8;

     label13:
        i1 = 0;

        if r9 != null goto label16;

     label14:
        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 16);

     label15:
        i1 = i8;

        r3 = null;

        r9 = null;

     label16:
        i2 = lengthof r7;

     label17:
        i3 = 0;

     label18:
        if i3 >= i2 goto label35;

     label19:
        i4 = r7[i3];

        $r22 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r20 = virtualinvoke $r22.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r11 = (com.android.server.am.ActiveServices$ServiceMap) $r20;

     label20:
        if r11 != null goto label21;

        goto label43;

     label21:
        r10 = r11.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

     label22:
        i5 = 0;

     label23:
        $i14 = virtualinvoke r10.<android.util.ArrayMap: int size()>();

        if i5 >= $i14 goto label43;

        $r24 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r12 = (com.android.server.am.ServiceRecord) $r24;

     label24:
        if r9 == null goto label27;

     label25:
        $r25 = r12.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z7 = virtualinvoke $r25.<android.content.ComponentName: boolean equals(java.lang.Object)>(r9);

        if $z7 == 0 goto label45;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label26:
        goto label45;

     label27:
        if r3 == null goto label33;

     label28:
        $r23 = r12.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r26 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z5 = virtualinvoke $r26.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z5 == 0 goto label45;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label29:
        goto label45;

     label30:
        $r32 := @caughtexception;

        r6 = $r32;

     label31:
        exitmonitor r0;

     label32:
        throw r6;

     label33:
        $i15 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r12);

        if $i15 != i1 goto label45;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label34:
        goto label45;

     label35:
        exitmonitor r0;

     label36:
        $i12 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i12 > 0 goto label37;

        return 0;

     label37:
        z1 = 0;

        i6 = 0;

     label38:
        $i13 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i6 >= $i13 goto label40;

        if z1 == 0 goto label39;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label39:
        z1 = 1;

        $r19 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r21 = (com.android.server.am.ServiceRecord) $r19;

        specialinvoke r0.<com.android.server.am.ActiveServices: void dumpService(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ServiceRecord,java.lang.String[],boolean)>("", r1, r2, $r21, r4, z0);

        i6 = i6 + 1;

        goto label38;

     label40:
        return 1;

     label41:
        $r30 := @caughtexception;

        i1 = 0;

        goto label16;

     label42:
        i10 = i10 + 1;

        goto label03;

     label43:
        i3 = i3 + 1;

        goto label18;

     label44:
        r9 = null;

        goto label13;

     label45:
        i5 = i5 + 1;

        goto label23;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label11 to label12 with label30;
        catch java.lang.RuntimeException from label14 to label15 with label41;
        catch java.lang.Throwable from label14 to label15 with label30;
        catch java.lang.Throwable from label16 to label17 with label30;
        catch java.lang.Throwable from label19 to label20 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label33 to label34 with label30;
        catch java.lang.Throwable from label35 to label36 with label30;
    }

    void dumpServicesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        java.io.FileDescriptor r1, $r107;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i13, i14, i15, i16, i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        java.lang.String r4, r26, $r40, $r46, $r52, $r58, $r78, $r79, $r81, $r82, $r111, $r116, $r119, $r125;
        com.android.server.am.ActivityManagerService$ItemMatcher r5, r126;
        java.lang.Exception r6, $r114;
        java.util.ArrayList r7, r23, $r27, $r28, $r31, $r41, $r48, $r50, $r56, $r60, $r62, $r63, $r64, $r72, $r84;
        com.android.server.am.ConnectionRecord r8, r22;
        com.android.server.am.ServiceRecord r9, r10, r11, r14, r15, r16, $r34, $r39;
        int[] r12;
        com.android.server.am.ActiveServices$ServiceMap r13;
        long l12, $l28;
        com.android.internal.os.TransferPipe r17, r128;
        java.io.IOException r18, $r112;
        java.lang.Throwable r20, $r124;
        com.android.server.am.ProcessRecord r21, $r43, $r45, $r88, $r89, $r94, $r103;
        com.android.server.am.ActivityManagerService $r24;
        android.util.ArrayMap $r29, $r32, $r65, $r86, $r87, $r90, $r91, $r97, $r106;
        java.lang.Object $r30, $r36, $r49, $r54, $r61, $r71, $r83, $r92, $r95, $r96;
        android.content.ComponentName $r33, $r51, $r55, $r59, $r70, $r85, $r93;
        com.android.server.am.AppBindRecord $r35, $r37, $r38, $r42, $r101, $r117;
        android.content.pm.ApplicationInfo $r44, $r47, $r53, $r57, $r77, $r80, $r110;
        java.lang.StringBuilder $r66, $r67, $r68, $r73, $r75, $r76, $r118, $r120, $r121, $r122, $r123, r127, r129, r130, r131;
        android.content.Intent $r98;
        android.content.Intent$FilterComparison $r99;
        com.android.server.am.IntentBindRecord $r100;
        android.app.IApplicationThread $r102, $r105;
        android.os.ParcelFileDescriptor $r108;
        android.os.RemoteException $r109;
        android.os.IBinder r132;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        z2 = 0;

        z3 = 0;

        r126 = new com.android.server.am.ActivityManagerService$ItemMatcher;

        specialinvoke r126.<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>();

        r5 = r126;

        virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>(r3, i0);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER SERVICES (dumpsys activity services)");

     label001:
        $r24 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r12 = virtualinvoke $r24.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

        i6 = lengthof r12;

     label002:
        i8 = 0;

     label003:
        if i8 >= i6 goto label047;

     label004:
        i7 = r12[i8];

        r13 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i7);

     label005:
        z9 = 0;

     label006:
        $r65 = r13.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $i27 = virtualinvoke $r65.<android.util.ArrayMap: int size()>();

        if $i27 <= 0 goto label053;

        l12 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label007:
        z2 = 0;

        i14 = 0;

     label008:
        $r90 = r13.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        i15 = virtualinvoke $r90.<android.util.ArrayMap: int size()>();

     label009:
        if i14 >= i15 goto label115;

     label010:
        $r91 = r13.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r92 = virtualinvoke $r91.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i14);

        r16 = (com.android.server.am.ServiceRecord) $r92;

        $r93 = r16.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z24 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r16, $r93);

        if $z24 != 0 goto label012;

     label011:
        goto label114;

     label012:
        if r4 == null goto label014;

     label013:
        $r110 = r16.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r111 = $r110.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z25 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r111);

        if $z25 == 0 goto label114;

     label014:
        if z9 != 0 goto label018;

        if z3 == 0 goto label016;

     label015:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label016:
        r127 = new java.lang.StringBuilder;

        specialinvoke r127.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r118 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" active services:");

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r119);

     label017:
        z9 = 1;

     label018:
        z3 = 1;

        if z2 == 0 goto label020;

     label019:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label020:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r16);

     label021:
        if z0 == 0 goto label030;

     label022:
        virtualinvoke r16.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label023:
        z2 = 1;

     label024:
        if z1 == 0 goto label114;

     label025:
        $r88 = r16.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r88 == null goto label114;

        $r89 = r16.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r105 = $r89.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r105 == null goto label114;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    Client:");

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label026:
        r128 = new com.android.internal.os.TransferPipe;

        specialinvoke r128.<com.android.internal.os.TransferPipe: void <init>()>();

        r17 = r128;

     label027:
        $r103 = r16.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r102 = $r103.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r108 = virtualinvoke r17.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r107 = virtualinvoke $r108.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r132 = (android.os.IBinder) r16;

        interfaceinvoke $r102.<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>($r107, r132, r3);

        virtualinvoke r17.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>("      ");

        virtualinvoke r17.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r1, 2000L);

     label028:
        virtualinvoke r17.<com.android.internal.os.TransferPipe: void kill()>();

     label029:
        z2 = 1;

        goto label114;

     label030:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    app=");

        $r94 = r16.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r94);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    created=");

        $l28 = r16.<com.android.server.am.ServiceRecord: long createTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l28, l12, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" started=");

        $z23 = r16.<com.android.server.am.ServiceRecord: boolean startRequested>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z23);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" connections=");

        $r86 = r16.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i29 = virtualinvoke $r86.<android.util.ArrayMap: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i29);

        $r87 = r16.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i30 = virtualinvoke $r87.<android.util.ArrayMap: int size()>();

        if $i30 <= 0 goto label024;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    Connections:");

     label031:
        i16 = 0;

     label032:
        $r106 = r16.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i32 = virtualinvoke $r106.<android.util.ArrayMap: int size()>();

        if i16 >= $i32 goto label024;

        $r97 = r16.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r96 = virtualinvoke $r97.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i16);

        r23 = (java.util.ArrayList) $r96;

     label033:
        i17 = 0;

     label034:
        $i31 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        if i17 >= $i31 goto label040;

        $r95 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r22 = (com.android.server.am.ConnectionRecord) $r95;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r101 = r22.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r100 = $r101.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r99 = $r100.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r98 = virtualinvoke $r99.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r116 = virtualinvoke $r98.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(0, 0, 0, 0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r116);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> ");

        $r117 = r22.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r21 = $r117.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

     label035:
        if r21 == null goto label039;

     label036:
        r26 = virtualinvoke r21.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

     label037:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r26);

     label038:
        i17 = i17 + 1;

        goto label034;

     label039:
        r26 = "null";

        goto label037;

     label040:
        i16 = i16 + 1;

        goto label032;

     label041:
        $r124 := @caughtexception;

        r20 = $r124;

     label042:
        virtualinvoke r17.<com.android.internal.os.TransferPipe: void kill()>();

        throw r20;

     label043:
        $r112 := @caughtexception;

        r18 = $r112;

     label044:
        r129 = new java.lang.StringBuilder;

        specialinvoke r129.<java.lang.StringBuilder: void <init>()>();

        $r123 = virtualinvoke r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      Failure while dumping the service: ");

        $r122 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r125 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r125);

     label045:
        goto label029;

     label046:
        $r114 := @caughtexception;

        r6 = $r114;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception in dumpServicesLocked", r6);

     label047:
        $r28 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i19 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

        if $i19 <= 0 goto label087;

        z7 = 0;

        i5 = 0;

     label048:
        $r62 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i26 = virtualinvoke $r62.<java.util.ArrayList: int size()>();

        if i5 >= $i26 goto label086;

        $r60 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r61 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r11 = (com.android.server.am.ServiceRecord) $r61;

        $r59 = r11.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z17 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r11, $r59);

        if $z17 != 0 goto label082;

     label049:
        i5 = i5 + 1;

        goto label048;

     label050:
        $r109 := @caughtexception;

     label051:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Got a RemoteException while dumping the service");

     label052:
        goto label029;

     label053:
        z8 = 0;

        i9 = 0;

     label054:
        $r64 = r13.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        i11 = virtualinvoke $r64.<java.util.ArrayList: int size()>();

     label055:
        if i9 >= i11 goto label067;

     label056:
        $r84 = r13.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $r83 = virtualinvoke $r84.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r14 = (com.android.server.am.ServiceRecord) $r83;

        $r85 = r14.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z22 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r14, $r85);

        if $z22 != 0 goto label058;

     label057:
        goto label116;

     label058:
        if r4 == null goto label060;

     label059:
        $r77 = r14.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r79 = $r77.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z20 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r79);

        if $z20 == 0 goto label116;

     label060:
        if z8 != 0 goto label064;

        if z3 == 0 goto label062;

     label061:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label062:
        r130 = new java.lang.StringBuilder;

        specialinvoke r130.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delayed start services:");

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r78);

     label063:
        z8 = 1;

     label064:
        z3 = 1;

     label065:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Delayed start ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r14);

     label066:
        goto label116;

     label067:
        z10 = 0;

        i10 = 0;

     label068:
        $r63 = r13.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        i13 = virtualinvoke $r63.<java.util.ArrayList: int size()>();

     label069:
        if i10 >= i13 goto label081;

     label070:
        $r72 = r13.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $r71 = virtualinvoke $r72.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r15 = (com.android.server.am.ServiceRecord) $r71;

        $r70 = r15.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z19 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r15, $r70);

        if $z19 != 0 goto label072;

     label071:
        goto label117;

     label072:
        if r4 == null goto label074;

     label073:
        $r80 = r15.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r82 = $r80.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z21 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r82);

        if $z21 == 0 goto label117;

     label074:
        if z10 != 0 goto label078;

        if z3 == 0 goto label076;

     label075:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label076:
        r131 = new java.lang.StringBuilder;

        specialinvoke r131.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starting in background:");

        $r81 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r81);

     label077:
        z10 = 1;

     label078:
        z3 = 1;

     label079:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Starting bg ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r15);

     label080:
        goto label117;

     label081:
        i8 = i8 + 1;

        goto label003;

     label082:
        if r4 == null goto label083;

        $r57 = r11.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r58 = $r57.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z18 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r58);

        if $z18 == 0 goto label049;

     label083:
        z3 = 1;

        if z7 != 0 goto label085;

        if z2 == 0 goto label084;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label084:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Pending services:");

        z7 = 1;

     label085:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Pending ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r11);

        virtualinvoke r11.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label049;

     label086:
        z2 = 1;

     label087:
        $r27 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i22 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        if $i22 <= 0 goto label095;

        z6 = 0;

        i4 = 0;

     label088:
        $r48 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i25 = virtualinvoke $r48.<java.util.ArrayList: int size()>();

        if i4 >= $i25 goto label094;

        $r56 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r54 = virtualinvoke $r56.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r10 = (com.android.server.am.ServiceRecord) $r54;

        $r55 = r10.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z16 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r10, $r55);

        if $z16 != 0 goto label090;

     label089:
        i4 = i4 + 1;

        goto label088;

     label090:
        if r4 == null goto label091;

        $r53 = r10.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r52 = $r53.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z15 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z15 == 0 goto label089;

     label091:
        z3 = 1;

        if z6 != 0 goto label093;

        if z2 == 0 goto label092;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label092:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Restarting services:");

        z6 = 1;

     label093:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Restarting ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r10);

        virtualinvoke r10.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label089;

     label094:
        z2 = 1;

     label095:
        $r31 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $i23 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        if $i23 <= 0 goto label103;

        z5 = 0;

        i3 = 0;

     label096:
        $r41 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $i24 = virtualinvoke $r41.<java.util.ArrayList: int size()>();

        if i3 >= $i24 goto label102;

        $r50 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $r49 = virtualinvoke $r50.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.am.ServiceRecord) $r49;

        $r51 = r9.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z14 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r9, $r51);

        if $z14 != 0 goto label098;

     label097:
        i3 = i3 + 1;

        goto label096;

     label098:
        if r4 == null goto label099;

        $r47 = r9.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r46 = $r47.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z13 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z13 == 0 goto label097;

     label099:
        z3 = 1;

        if z5 != 0 goto label101;

        if z2 == 0 goto label100;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label100:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Destroying services:");

        z5 = 1;

     label101:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Destroy ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r9);

        virtualinvoke r9.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label097;

     label102:
        z2 = 1;

     label103:
        if z0 == 0 goto label112;

        z4 = 0;

        i1 = 0;

     label104:
        $r32 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $i20 = virtualinvoke $r32.<android.util.ArrayMap: int size()>();

        if i1 >= $i20 goto label112;

        $r29 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r30 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r7 = (java.util.ArrayList) $r30;

        i2 = 0;

     label105:
        $i21 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i2 >= $i21 goto label111;

        $r36 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (com.android.server.am.ConnectionRecord) $r36;

        $r37 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r34 = $r37.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r38 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r39 = $r38.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r33 = $r39.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $z11 = virtualinvoke r5.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>($r34, $r33);

        if $z11 != 0 goto label107;

     label106:
        i2 = i2 + 1;

        goto label105;

     label107:
        if r4 == null goto label108;

        $r35 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r43 = $r35.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r43 == null goto label106;

        $r42 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r45 = $r42.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r44 = $r45.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r40 = $r44.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z12 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z12 == 0 goto label106;

     label108:
        z3 = 1;

        if z4 != 0 goto label110;

        if z2 == 0 goto label109;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label109:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Connection bindings to services:");

        z4 = 1;

     label110:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r8);

        virtualinvoke r8.<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label106;

     label111:
        i1 = i1 + 1;

        goto label104;

     label112:
        if z3 != 0 goto label113;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label113:
        return;

     label114:
        i14 = i14 + 1;

        goto label008;

     label115:
        z2 = z2 | z9;

        goto label053;

     label116:
        i9 = i9 + 1;

        goto label055;

     label117:
        i10 = i10 + 1;

        goto label069;

        catch java.lang.Exception from label001 to label002 with label046;
        catch java.lang.Exception from label004 to label005 with label046;
        catch java.lang.Exception from label006 to label007 with label046;
        catch java.lang.Exception from label008 to label009 with label046;
        catch java.lang.Exception from label010 to label011 with label046;
        catch java.lang.Exception from label013 to label014 with label046;
        catch java.lang.Exception from label015 to label016 with label046;
        catch java.lang.Exception from label016 to label017 with label046;
        catch java.lang.Exception from label019 to label020 with label046;
        catch java.lang.Exception from label020 to label021 with label046;
        catch java.lang.Exception from label022 to label023 with label046;
        catch java.lang.Exception from label025 to label026 with label046;
        catch java.io.IOException from label026 to label027 with label043;
        catch android.os.RemoteException from label026 to label027 with label050;
        catch java.lang.Exception from label026 to label027 with label046;
        catch java.lang.Throwable from label027 to label028 with label041;
        catch java.io.IOException from label028 to label029 with label043;
        catch android.os.RemoteException from label028 to label029 with label050;
        catch java.lang.Exception from label028 to label029 with label046;
        catch java.lang.Exception from label030 to label031 with label046;
        catch java.lang.Exception from label032 to label033 with label046;
        catch java.lang.Exception from label034 to label035 with label046;
        catch java.lang.Exception from label036 to label037 with label046;
        catch java.lang.Exception from label037 to label038 with label046;
        catch java.io.IOException from label042 to label043 with label043;
        catch android.os.RemoteException from label042 to label043 with label050;
        catch java.lang.Exception from label042 to label043 with label046;
        catch java.lang.Exception from label044 to label045 with label046;
        catch java.lang.Exception from label051 to label052 with label046;
        catch java.lang.Exception from label054 to label055 with label046;
        catch java.lang.Exception from label056 to label057 with label046;
        catch java.lang.Exception from label059 to label060 with label046;
        catch java.lang.Exception from label061 to label062 with label046;
        catch java.lang.Exception from label062 to label063 with label046;
        catch java.lang.Exception from label065 to label066 with label046;
        catch java.lang.Exception from label068 to label069 with label046;
        catch java.lang.Exception from label070 to label071 with label046;
        catch java.lang.Exception from label073 to label074 with label046;
        catch java.lang.Exception from label075 to label076 with label046;
        catch java.lang.Exception from label076 to label077 with label046;
        catch java.lang.Exception from label079 to label080 with label046;
    }

    boolean forceStopLocked(java.lang.String, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1;
        int i0, i1, i2, i3, $i4;
        boolean z0, z1, z2, $z3;
        java.util.ArrayList r2, $r4;
        com.android.server.am.ActiveServices$ServiceMap r3, $r12;
        android.util.SparseArray $r5, $r10, $r11;
        java.lang.Object $r6, $r7, $r13;
        android.util.ArrayMap $r8, $r14;
        com.android.server.am.ServiceRecord $r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        if i0 != -1 goto label3;

        i3 = 0;

     label1:
        $r10 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $i4 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i3 >= $i4 goto label4;

        $r11 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r13 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r12 = (com.android.server.am.ActiveServices$ServiceMap) $r13;

        $r14 = $r12.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $z3 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean collectForceStopServicesLocked(java.lang.String,int,boolean,boolean,android.util.ArrayMap,java.util.ArrayList)>(r1, i0, z0, z1, $r14, r2);

        z2 = z2 | $z3;

        if z1 != 0 goto label2;

        if z2 == 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r5 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActiveServices$ServiceMap) $r6;

        z2 = 0;

        if r3 == null goto label4;

        $r8 = r3.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean collectForceStopServicesLocked(java.lang.String,int,boolean,boolean,android.util.ArrayMap,java.util.ArrayList)>(r1, i0, z0, z1, $r8, r2);

     label4:
        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label5:
        if i2 >= i1 goto label6;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.am.ServiceRecord) $r7;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>($r9);

        i2 = i2 + 1;

        goto label5;

     label6:
        return z2;
    }

    public android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        com.android.server.am.ServiceRecord r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList r3;
        android.util.ArrayMap $r4, $r5;
        java.lang.Object $r6, $r7, $r11;
        android.app.PendingIntent $r8, $r12;
        com.android.server.am.ConnectionRecord $r9, $r10;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        r2 = virtualinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>(r1, $i3);

        if r2 == null goto label5;

        $r4 = r2.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i4 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i4;

     label1:
        if i0 < 0 goto label5;

        $r5 = r2.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r3 = (java.util.ArrayList) $r6;

        i1 = 0;

     label2:
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i1 >= $i5 goto label4;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.am.ConnectionRecord) $r7;

        $r8 = $r9.<com.android.server.am.ConnectionRecord: android.app.PendingIntent clientIntent>;

        if $r8 == null goto label3;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (com.android.server.am.ConnectionRecord) $r11;

        $r12 = $r10.<com.android.server.am.ConnectionRecord: android.app.PendingIntent clientIntent>;

        return $r12;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return null;
    }

    java.util.List getRunningServiceInfoLocked(int, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, i2, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24;
        java.util.ArrayList r1, $r10, $r11, $r12, $r18, $r19;
        long l3, $l14, $l20;
        java.lang.Throwable r2, $r24;
        android.util.ArrayMap r3, r9;
        com.android.server.am.ServiceRecord r4, r7, $r14, $r22;
        android.app.ActivityManager$RunningServiceInfo r5, r8, $r15, $r21;
        int[] r6;
        java.lang.Object $r13, $r16, $r20, $r23;
        com.android.server.am.ActivityManagerService $r17;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r1 = $r10;

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $i10 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i2);

        if $i10 != 0 goto label09;

        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r6 = virtualinvoke $r17.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

     label02:
        i7 = 0;

     label03:
        $i17 = lengthof r6;

        if i7 >= $i17 goto label18;

        $i23 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i23 >= i0 goto label18;

        $i22 = r6[i7];

        r9 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServices(int)>($i22);

     label04:
        i9 = 0;

     label05:
        $i21 = virtualinvoke r9.<android.util.ArrayMap: int size()>();

        if i9 >= $i21 goto label17;

        $i24 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i24 >= i0 goto label17;

        $r23 = virtualinvoke r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i9);

        $r22 = (com.android.server.am.ServiceRecord) $r23;

        $r21 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>($r22);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label06:
        i9 = i9 + 1;

        goto label05;

     label07:
        $r19 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i19 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if i8 >= $i19 goto label15;

        $i18 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i18 >= i0 goto label15;

        $r18 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r20 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r7 = (com.android.server.am.ServiceRecord) $r20;

        r8 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r7);

        $l20 = r7.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        r8.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l20;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label08:
        i8 = i8 + 1;

        goto label07;

     label09:
        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        r3 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServices(int)>(i4);

     label10:
        i5 = 0;

     label11:
        $i11 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i5 >= $i11 goto label19;

        $i16 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i16 >= i0 goto label19;

        $r16 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r14 = (com.android.server.am.ServiceRecord) $r16;

        $r15 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>($r14);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label12:
        i5 = i5 + 1;

        goto label11;

     label13:
        $r11 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i12 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i6 >= $i12 goto label15;

        $i13 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i13 >= i0 goto label15;

        $r12 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r4 = (com.android.server.am.ServiceRecord) $r13;

        $i15 = r4.<com.android.server.am.ServiceRecord: int userId>;

        if $i15 != i4 goto label14;

        r5 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r4);

        $l14 = r4.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        r5.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l14;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label14:
        i6 = i6 + 1;

        goto label13;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return r1;

     label16:
        $r24 := @caughtexception;

        r2 = $r24;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r2;

     label17:
        i7 = i7 + 1;

        goto label03;

     label18:
        i8 = 0;

        goto label07;

     label19:
        i6 = 0;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
    }

    com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        com.android.server.am.ServiceRecord $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i0);

        $r3 = $r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.android.server.am.ServiceRecord) $r4;

        return $r5;
    }

    android.util.ArrayMap getServices(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>(i0);

        $r2 = $r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        return $r2;
    }

    boolean hasBackgroundServices(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, i2;
        com.android.server.am.ActiveServices$ServiceMap r1;
        boolean z0;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        z0 = 0;

        if r1 == null goto label1;

        $r4 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        z0 = 0;

        if i1 < i2 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    final void killServicesLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r19, $r88, $r89, $r92, $r96;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i28, $i30;
        com.android.server.am.ActiveServices$ServiceMap r2;
        com.android.server.am.ServiceRecord r3, r4, r5, r6, r8, r10;
        java.lang.Object[] r7;
        com.android.internal.os.BatteryStatsImpl r9;
        java.lang.Throwable r11, $r94;
        android.util.ArraySet $r12, $r14, $r15, $r16, $r17, $r24, $r48, $r71, $r72, $r77, $r95;
        com.android.server.am.IntentBindRecord r13;
        java.util.ArrayList $r18, $r20, $r21, $r23, $r26, $r30, $r34, $r38, $r40, $r53, $r93;
        java.lang.Object $r22, $r29, $r35, $r45, $r47, $r67, $r75, $r76, $r87;
        java.lang.String $r27, $r28, $r36, $r37, $r58, $r63, $r83;
        android.content.pm.ApplicationInfo $r31, $r32, $r43, $r44, $r56;
        android.content.pm.ServiceInfo $r33, $r42, $r55;
        android.util.ArrayMap $r46, $r68, $r85, $r86;
        android.content.ComponentName $r49, $r69;
        com.android.server.am.ActivityManagerService $r50;
        com.android.internal.app.ProcessStats$ServiceState $r51, $r54;
        com.android.server.am.ProcessStatsService $r52;
        long $l20;
        java.lang.StringBuilder $r57, $r59, $r60, $r61, $r62, $r66, $r78, $r79, $r80, $r81, $r82, $r84;
        java.lang.Integer $r64, $r65, $r70;
        com.android.server.am.ConnectionRecord $r74;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r90, $r91;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i7 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        i0 = -1 + $i7;

     label01:
        if i0 < 0 goto label11;

        $r77 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r76 = virtualinvoke $r77.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        r10 = (com.android.server.am.ServiceRecord) $r76;

        $r90 = r10.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r9 = virtualinvoke $r90.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r9;

     label02:
        $r91 = r10.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r91.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor r9;

     label03:
        $r92 = r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r92 == r1 goto label04;

        $r88 = r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r88 == null goto label04;

        $r89 = r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z8 = $r89.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z8 != 0 goto label04;

        $r96 = r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r95 = $r96.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r95.<android.util.ArraySet: boolean remove(java.lang.Object)>(r10);

     label04:
        r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app> = null;

        r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        r10.<com.android.server.am.ServiceRecord: int executeNesting> = 0;

        virtualinvoke r10.<com.android.server.am.ServiceRecord: void forceClearTracker()>();

        $r93 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $z9 = virtualinvoke $r93.<java.util.ArrayList: boolean remove(java.lang.Object)>(r10);

        if $z9 == 0 goto label05;

     label05:
        $r85 = r10.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i30 = virtualinvoke $r85.<android.util.ArrayMap: int size()>();

        i6 = -1 + $i30;

     label06:
        if i6 < 0 goto label10;

        $r86 = r10.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r87 = virtualinvoke $r86.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r13 = (com.android.server.am.IntentBindRecord) $r87;

        r13.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = null;

        r13.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        r13.<com.android.server.am.IntentBindRecord: boolean received> = 0;

        r13.<com.android.server.am.IntentBindRecord: boolean requested> = 0;

        i6 = i6 + -1;

        goto label06;

     label07:
        $r94 := @caughtexception;

        r11 = $r94;

     label08:
        exitmonitor r9;

     label09:
        throw r11;

     label10:
        i0 = i0 + -1;

        goto label01;

     label11:
        $r15 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i8 = virtualinvoke $r15.<android.util.ArraySet: int size()>();

        i1 = -1 + $i8;

     label12:
        if i1 < 0 goto label13;

        $r72 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r75 = virtualinvoke $r72.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r74 = (com.android.server.am.ConnectionRecord) $r75;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>($r74, r1, null);

        i1 = i1 + -1;

        goto label12;

     label13:
        $r14 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r14.<android.util.ArraySet: void clear()>();

        $i9 = r1.<com.android.server.am.ProcessRecord: int userId>;

        r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i9);

        $r16 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i10 = virtualinvoke $r16.<android.util.ArraySet: int size()>();

        i2 = -1 + $i10;

     label14:
        if i2 < 0 goto label22;

        $r48 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r47 = virtualinvoke $r48.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r6 = (com.android.server.am.ServiceRecord) $r47;

        $z5 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z5 != 0 goto label15;

        $r71 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r71.<android.util.ArraySet: java.lang.Object removeAt(int)>(i2);

     label15:
        $r46 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r49 = r6.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r45 = virtualinvoke $r46.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r49);

        if $r45 == r6 goto label17;

        $r68 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByName>;

        $r69 = r6.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r67 = virtualinvoke $r68.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r69);

        r8 = (com.android.server.am.ServiceRecord) $r67;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in process ");

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not same as in map: ");

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r83);

     label16:
        i2 = i2 + -1;

        goto label14;

     label17:
        if z0 == 0 goto label18;

        $i21 = r6.<com.android.server.am.ServiceRecord: int crashCount>;

        if $i21 < 2 goto label18;

        $r55 = r6.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r56 = $r55.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i18 = $r56.<android.content.pm.ApplicationInfo: int flags>;

        $i19 = 8 & $i18;

        if $i19 != 0 goto label18;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service crashed ");

        $i23 = r6.<com.android.server.am.ServiceRecord: int crashCount>;

        $r59 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, stopping: ");

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r58);

        r7 = newarray (java.lang.Object)[4];

        $i25 = r6.<com.android.server.am.ServiceRecord: int userId>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        r7[0] = $r65;

        $i24 = r6.<com.android.server.am.ServiceRecord: int crashCount>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        r7[1] = $r64;

        $r63 = r6.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        r7[2] = $r63;

        $i28 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i28);

        r7[3] = $r70;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30034, r7);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r6);

        goto label16;

     label18:
        if z0 != 0 goto label19;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r6);

        goto label16;

     label19:
        z1 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r6, 1);

        $z4 = r6.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z4 == 0 goto label16;

        $z7 = r6.<com.android.server.am.ServiceRecord: boolean stopIfKilled>;

        if $z7 != 0 goto label20;

        if z1 == 0 goto label16;

     label20:
        $r53 = r6.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i17 = virtualinvoke $r53.<java.util.ArrayList: int size()>();

        if $i17 != 0 goto label16;

        r6.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r54 = r6.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r54 == null goto label21;

        $r51 = r6.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r50 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r52 = $r50.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i22 = virtualinvoke $r52.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l20 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r51.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, $i22, $l20);

     label21:
        $z6 = virtualinvoke r6.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if $z6 != 0 goto label16;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r6);

        goto label16;

     label22:
        if z0 != 0 goto label28;

        $r24 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        virtualinvoke $r24.<android.util.ArraySet: void clear()>();

        $r23 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i12 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        i4 = -1 + $i12;

     label23:
        if i4 < 0 goto label25;

        $r34 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (com.android.server.am.ServiceRecord) $r35;

        $r37 = r5.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r36 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z3 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z3 == 0 goto label24;

        $r42 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r43 = $r42.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i16 = $r43.<android.content.pm.ApplicationInfo: int uid>;

        $r44 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i15 = $r44.<android.content.pm.ApplicationInfo: int uid>;

        if $i16 != $i15 goto label24;

        $r40 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r40.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r5);

     label24:
        i4 = i4 + -1;

        goto label23;

     label25:
        $r26 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i11 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        i5 = -1 + $i11;

     label26:
        if i5 < 0 goto label28;

        $r30 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r29 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (com.android.server.am.ServiceRecord) $r29;

        $r27 = r4.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r28 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z2 == 0 goto label27;

        $r33 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r32 = $r33.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r32.<android.content.pm.ApplicationInfo: int uid>;

        $r31 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i13 = $r31.<android.content.pm.ApplicationInfo: int uid>;

        if $i14 != $i13 goto label27;

        $r38 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r38.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

     label27:
        i5 = i5 + -1;

        goto label26;

     label28:
        $r18 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        i3 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

     label29:
        if i3 <= 0 goto label30;

        i3 = i3 + -1;

        $r21 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ServiceRecord) $r22;

        $r19 = r3.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r19 != r1 goto label29;

        virtualinvoke r3.<com.android.server.am.ServiceRecord: void forceClearTracker()>();

        $r20 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(i3);

        goto label29;

     label30:
        $r17 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r17.<android.util.ArraySet: void clear()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.app.ActivityManager$RunningServiceInfo r2, $r5;
        int i0, i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.util.ArrayList r3;
        com.android.server.am.ConnectionRecord r4;
        android.content.ComponentName $r6;
        com.android.server.am.ProcessRecord $r7, $r11, $r12, $r20, $r21, $r22, $r23;
        android.content.pm.ApplicationInfo $r8, $r17;
        java.lang.String $r9, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l3, $l5;
        android.util.ArrayMap $r10, $r13, $r14;
        java.lang.Object $r15, $r16;
        com.android.server.am.AppBindRecord $r19;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r5 = new android.app.ActivityManager$RunningServiceInfo;

        specialinvoke $r5.<android.app.ActivityManager$RunningServiceInfo: void <init>()>();

        r2 = $r5;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r2.<android.app.ActivityManager$RunningServiceInfo: android.content.ComponentName service> = $r6;

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label01;

        $r23 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i19 = $r23.<com.android.server.am.ProcessRecord: int pid>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int pid> = $i19;

     label01:
        $r8 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i2 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int uid> = $i2;

        $r9 = r1.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        r2.<android.app.ActivityManager$RunningServiceInfo: java.lang.String process> = $r9;

        $z0 = r1.<com.android.server.am.ServiceRecord: boolean isForeground>;

        r2.<android.app.ActivityManager$RunningServiceInfo: boolean foreground> = $z0;

        $l3 = r1.<com.android.server.am.ServiceRecord: long createTime>;

        r2.<android.app.ActivityManager$RunningServiceInfo: long activeSince> = $l3;

        $z1 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        r2.<android.app.ActivityManager$RunningServiceInfo: boolean started> = $z1;

        $r10 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i4 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        r2.<android.app.ActivityManager$RunningServiceInfo: int clientCount> = $i4;

        $i6 = r1.<com.android.server.am.ServiceRecord: int crashCount>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int crashCount> = $i6;

        $l5 = r1.<com.android.server.am.ServiceRecord: long lastActivity>;

        r2.<android.app.ActivityManager$RunningServiceInfo: long lastActivityTime> = $l5;

        $z3 = r1.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z3 == 0 goto label02;

        $i21 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i20 = 2 | $i21;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i20;

     label02:
        $z2 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label03;

        $i15 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i16 = 1 | $i15;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i16;

     label03:
        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label04;

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i13 = $r22.<com.android.server.am.ProcessRecord: int pid>;

        $i12 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i13 != $i12 goto label04;

        $i17 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i18 = 4 | $i17;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i18;

     label04:
        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label05;

        $r21 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = $r21.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 == 0 goto label05;

        $i10 = r2.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i14 = 8 | $i10;

        r2.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i14;

     label05:
        $r13 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i7 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i7;

     label06:
        if i0 < 0 goto label08;

        $r14 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r3 = (java.util.ArrayList) $r15;

        i1 = 0;

     label07:
        $i8 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i1 >= $i8 goto label10;

        $r16 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ConnectionRecord) $r16;

        $i9 = r4.<com.android.server.am.ConnectionRecord: int clientLabel>;

        if $i9 == 0 goto label09;

        $r19 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r19.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r17 = $r20.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r18 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r2.<android.app.ActivityManager$RunningServiceInfo: java.lang.String clientPackage> = $r18;

        $i11 = r4.<com.android.server.am.ConnectionRecord: int clientLabel>;

        r2.<android.app.ActivityManager$RunningServiceInfo: int clientLabel> = $i11;

     label08:
        return r2;

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        i0 = i0 + -1;

        goto label06;
    }

    android.os.IBinder peekServiceLocked(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1;
        java.lang.String r2, $r22, $r24;
        com.android.server.am.ActiveServices$ServiceLookupResult r3;
        android.os.IBinder r4;
        com.android.server.am.IntentBindRecord r5;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.am.ServiceRecord $r6, $r7, $r8, $r14;
        android.content.Intent$FilterComparison $r9;
        android.util.ArrayMap $r10;
        java.lang.Object $r11;
        java.lang.StringBuilder $r12, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r25;
        java.lang.SecurityException $r13;
        android.content.ComponentName $r17;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r1, r2, $i0, $i1, $i2, 0, 0);

        r4 = null;

        if r3 == null goto label2;

        $r6 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r6 != null goto label1;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r14 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r17 = $r14.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r22 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r24);

        throw $r13;

     label1:
        $r7 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r10 = $r7.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r8 = r3.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r9 = $r8.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r5 = (com.android.server.am.IntentBindRecord) $r11;

        r4 = null;

        if r5 == null goto label2;

        r4 = r5.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

     label2:
        return r4;
    }

    final void performServiceRestartLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.content.Intent$FilterComparison $r3;
        android.content.Intent $r4;
        int $i0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r1.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r4 = virtualinvoke $r3.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $i0 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        $z1 = r1.<com.android.server.am.ServiceRecord: boolean createdFromFg>;

        specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>(r1, $i0, $z1, 1);

        return;
    }

    void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r7;
        int i0, $i1, $i2, $i3;
        com.android.server.am.ServiceRecord r2;
        java.util.ArrayList $r3, $r4, $r13;
        java.lang.Object $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11, $r14, $r15;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label5;

        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ServiceRecord) $r5;

        $i3 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r6 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i2 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 != $i2 goto label2;

        $r14 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = r2.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label3;

     label2:
        $r7 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if $r7 != r1 goto label4;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forcing bringing down service: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        i0 = i0 + -1;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r2);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return;
    }

    void publishServiceLocked(com.android.server.am.ServiceRecord, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.content.Intent r2;
        android.os.IBinder r3, $r28;
        long l0;
        android.content.Intent$FilterComparison r4, $r11, $r19;
        java.lang.Throwable r5, $r39;
        com.android.server.am.IntentBindRecord r6, $r20;
        int i1, i2, $i3, $i4;
        java.util.ArrayList r7, $r12;
        com.android.server.am.ConnectionRecord r8;
        boolean z0, $z1, $z2;
        java.lang.Exception r9, $r22;
        android.util.ArrayMap $r10, $r14, $r15;
        java.lang.Object $r13, $r16, $r18;
        com.android.server.am.AppBindRecord $r17, $r31;
        android.app.IServiceConnection $r21, $r27;
        android.content.ComponentName $r23, $r25;
        java.lang.StringBuilder $r24, $r26, $r29, $r30, $r33, $r34, $r36, $r37;
        com.android.server.am.ProcessRecord $r32;
        java.lang.String $r35, $r38;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label18;

     label01:
        $r11 = new android.content.Intent$FilterComparison;

        specialinvoke $r11.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r2);

        r4 = $r11;

        $r10 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r13 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (com.android.server.am.IntentBindRecord) $r13;

     label02:
        if r6 == null goto label17;

     label03:
        $z1 = r6.<com.android.server.am.IntentBindRecord: boolean received>;

        if $z1 != 0 goto label17;

        r6.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = r3;

        r6.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

        r6.<com.android.server.am.IntentBindRecord: boolean received> = 1;

        $r14 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i3 = virtualinvoke $r14.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i3;

     label04:
        if i1 < 0 goto label17;

     label05:
        $r15 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r7 = (java.util.ArrayList) $r16;

     label06:
        i2 = 0;

     label07:
        $i4 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i2 >= $i4 goto label16;

        $r18 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (com.android.server.am.ConnectionRecord) $r18;

        $r17 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r20 = $r17.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r19 = $r20.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        z0 = virtualinvoke r4.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r19);

     label08:
        if z0 != 0 goto label10;

     label09:
        i2 = i2 + 1;

        goto label07;

     label10:
        $r21 = r8.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r23 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r21.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>($r23, r3);

     label11:
        goto label09;

     label12:
        $r22 := @caughtexception;

        r9 = $r22;

     label13:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r25 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r27 = r8.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r28 = interfaceinvoke $r27.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r31 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r32 = $r31.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r38 = $r32.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r35, r9);

     label14:
        goto label09;

     label15:
        $r39 := @caughtexception;

        r5 = $r39;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label16:
        i1 = i1 + -1;

        goto label04;

     label17:
        $r12 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $z2 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, $z2, 0);

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
    }

    void removeConnectionLocked(com.android.server.am.ConnectionRecord, com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ConnectionRecord r1;
        com.android.server.am.ProcessRecord r2, $r14, $r19, $r26, $r28, $r31, $r32, $r34, $r40, $r41, $r43, $r47, $r51, $r54, $r55;
        com.android.server.am.ActivityRecord r3, $r15, $r52, $r53, $r58;
        android.os.IBinder r4, r68;
        com.android.server.am.AppBindRecord r5;
        com.android.server.am.ServiceRecord r6;
        java.util.ArrayList r7, r8;
        boolean z0, $z2, $z3;
        java.lang.Exception r9, $r65;
        android.app.IServiceConnection $r10;
        android.util.ArrayMap $r11, $r17, $r25, $r42, $r50, $r57;
        java.lang.Object $r12, $r16;
        java.util.HashSet $r13, $r18, $r59, $r60;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.internal.app.ProcessStats$ServiceState $r20, $r23;
        com.android.server.am.ProcessStatsService $r21;
        com.android.server.am.ActivityManagerService $r22, $r30, $r45;
        long $l4;
        com.android.server.am.IntentBindRecord $r24, $r29, $r33, $r35, $r36, $r44;
        android.app.IApplicationThread $r27, $r38;
        android.content.Intent $r37;
        android.content.Intent$FilterComparison $r39;
        android.util.ArraySet $r48;
        java.lang.StringBuilder $r61, $r66, r67;
        java.lang.String $r62, $r63;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ConnectionRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: com.android.server.am.ActivityRecord;

        $r10 = r1.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        r4 = interfaceinvoke $r10.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        r5 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r6 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r11 = r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (java.util.ArrayList) $r12;

        if r7 == null goto label01;

        virtualinvoke r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i12 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i12 != 0 goto label01;

        $r57 = r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        virtualinvoke $r57.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

     label01:
        $r13 = r5.<com.android.server.am.AppBindRecord: java.util.HashSet connections>;

        virtualinvoke $r13.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        $r15 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        if $r15 == null goto label02;

        $r52 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        if $r52 == r3 goto label02;

        $r53 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        $r59 = $r53.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r59 == null goto label02;

        $r58 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        $r60 = $r58.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        virtualinvoke $r60.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

     label02:
        $r14 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r14 == r2 goto label04;

        $r47 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r48 = $r47.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r48.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $i10 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i11 = 8 & $i10;

        if $i11 == 0 goto label03;

        $r51 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r51.<com.android.server.am.ProcessRecord: void updateHasAboveClientLocked()>();

     label03:
        $r54 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r54 == null goto label04;

        $r55 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord)>($r55, r1);

     label04:
        $r17 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r16 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r8 = (java.util.ArrayList) $r16;

        if r8 == null goto label05;

        virtualinvoke r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i9 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i9 != 0 goto label05;

        $r50 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        virtualinvoke $r50.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

     label05:
        $r18 = r5.<com.android.server.am.AppBindRecord: java.util.HashSet connections>;

        $i0 = virtualinvoke $r18.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label06;

        $r44 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r42 = $r44.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r43 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r42.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r43);

     label06:
        $z2 = r1.<com.android.server.am.ConnectionRecord: boolean serviceDead>;

        if $z2 != 0 goto label11;

        $r19 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r19 == null goto label09;

        $r26 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r27 = $r26.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r27 == null goto label09;

        $r24 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r25 = $r24.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i5 = virtualinvoke $r25.<android.util.ArrayMap: int size()>();

        if $i5 != 0 goto label09;

        $r29 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z3 = $r29.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z3 == 0 goto label09;

     label07:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r6, 0, "unbind");

        $r31 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r28 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r31 == $r28 goto label08;

        $i6 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i8 = 32 & $i6;

        if $i8 != 0 goto label08;

        $r41 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i7 = $r41.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i7 > 8 goto label08;

        $r45 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r40 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r45.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r40, 0, null);

     label08:
        $r30 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r32 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r30.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r32);

        $r36 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r36.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r35 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r35.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

        $r34 = r6.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r38 = $r34.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r33 = r5.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r39 = $r33.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r37 = virtualinvoke $r39.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        r68 = (android.os.IBinder) r6;

        interfaceinvoke $r38.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r68, $r37);

     label09:
        $i2 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i1 = 1 & $i2;

        if $i1 == 0 goto label11;

        z0 = virtualinvoke r6.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if z0 != 0 goto label10;

        $r20 = r6.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r20 == null goto label10;

        $r23 = r6.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r22 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = $r22.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i3 = virtualinvoke $r21.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r23.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(0, $i3, $l4);

     label10:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r6, 1, z0);

     label11:
        return;

     label12:
        $r65 := @caughtexception;

        r9 = $r65;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r62 = r6.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r61 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r63, r9);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r6);

        goto label09;

        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
    }

    void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        long l0, l1;
        android.os.Message r2;
        android.os.Handler r3, $r7;
        android.util.ArraySet $r4;
        int $i2;
        android.app.IApplicationThread $r5;
        com.android.server.am.ActivityManagerService $r6, $r8;
        boolean $z1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i2 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        if $i2 == 0 goto label1;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 != null goto label2;

     label1:
        return;

     label2:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(12);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r3 = $r8.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z1 == 0 goto label4;

        l1 = 20000L + l0;

     label3:
        virtualinvoke r3.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>(r2, l1);

        return;

     label4:
        l1 = 200000L + l0;

        goto label3;
    }

    void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, int, int, int)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, i1, i2, $i4, $i6, $i7, $i8;
        boolean z0;
        long l3;
        com.android.server.am.ServiceRecord$StartItem r2;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r11, $r13, $r14;
        java.lang.String $r7, $r15;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if r1 == null goto label8;

        if i0 != 1 goto label4;

        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 1;

        lookupswitch(i2)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label6;
            case 1000: goto label7;
            default: goto label1;
        };

     label1:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown service start result: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label2:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 1);

        r1.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 0;

     label3:
        if i2 != 0 goto label4;

        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

     label4:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, z0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label5:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 1);

        $i8 = virtualinvoke r1.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        if $i8 != i1 goto label3;

        r1.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 1;

        goto label3;

     label6:
        r2 = virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 0);

        if r2 == null goto label3;

        r2.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount> = 0;

        $i6 = r2.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        $i7 = 1 + $i6;

        r2.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount> = $i7;

        r1.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 1;

        goto label3;

     label7:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i1, 1);

        goto label3;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done executing unknown service from pid ");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        return;
    }

    void serviceTimeout(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.Throwable r2, $r27;
        long l0, l2, l3, l5, $l7, $l11, $l13;
        int i1, i4, $i6, $i8;
        com.android.server.am.ServiceRecord r3, r4;
        android.os.Message r5;
        android.os.Handler r6, $r11;
        java.lang.String r7, $r21, $r23;
        android.util.ArraySet $r8, $r10, $r26;
        android.app.IApplicationThread $r9;
        boolean $z0, $z1, $z3;
        com.android.server.am.ActivityManagerService $r12, $r13, $r14, $r16;
        java.util.ArrayList $r15;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22, $r24;
        byte $b10, $b12;
        java.lang.Object $r25;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        entermonitor r0;

     label01:
        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i6 = virtualinvoke $r8.<android.util.ArraySet: int size()>();

        if $i6 == 0 goto label02;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 != null goto label04;

     label02:
        exitmonitor r0;

     label03:
        return;

     label04:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z0 == 0 goto label15;

     label05:
        i1 = 20000;

     label06:
        $l7 = (long) i1;

        l2 = l0 - $l7;

        l3 = 0L;

     label07:
        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i8 = virtualinvoke $r10.<android.util.ArraySet: int size()>();

        i4 = -1 + $i8;

     label08:
        r3 = null;

        if i4 < 0 goto label11;

     label09:
        $r26 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r25 = virtualinvoke $r26.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.server.am.ServiceRecord) $r25;

        $l11 = r4.<com.android.server.am.ServiceRecord: long executingStart>;

        $b10 = $l11 cmp l2;

        if $b10 >= 0 goto label16;

     label10:
        r3 = r4;

     label11:
        if r3 == null goto label18;

     label12:
        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r14.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $z3 = virtualinvoke $r15.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label18;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout executing service: ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing service ");

        $r23 = r3.<com.android.server.am.ServiceRecord: java.lang.String shortName>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        r7 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        exitmonitor r0;

     label14:
        if r7 == null goto label26;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, null, null, 0, r7);

        return;

     label15:
        i1 = 200000;

        goto label06;

     label16:
        $l13 = r4.<com.android.server.am.ServiceRecord: long executingStart>;

        $b12 = $l13 cmp l3;

        if $b12 <= 0 goto label27;

        l3 = r4.<com.android.server.am.ServiceRecord: long executingStart>;

     label17:
        goto label27;

     label18:
        $r12 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r12.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r5 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(12);

        r5.<android.os.Message: java.lang.Object obj> = r1;

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r6 = $r13.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z1 == 0 goto label25;

     label19:
        l5 = 20000L + l3;

     label20:
        virtualinvoke r6.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>(r5, l5);

     label21:
        r7 = null;

        goto label13;

     label22:
        $r27 := @caughtexception;

        r2 = $r27;

     label23:
        exitmonitor r0;

     label24:
        throw r2;

     label25:
        l5 = 200000L + l3;

        goto label20;

     label26:
        return;

     label27:
        i4 = i4 + -1;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public void setServiceForegroundLocked(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, boolean)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0, i1, $i3, $i4, $i5, $i6;
        android.app.Notification r3;
        boolean z0, $z1;
        long l2;
        java.lang.Throwable r4, $r13;
        com.android.server.am.ServiceRecord r5;
        com.android.server.am.ProcessRecord $r6, $r8, $r9, $r10, $r11;
        com.android.server.am.ActivityManagerService $r7;
        com.android.server.am.ActiveServices$ServiceMap $r12;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: android.app.Notification;

        z0 := @parameter4: boolean;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r5 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r1, r2, i1);

     label02:
        if r5 == null goto label08;

        if i0 == 0 goto label09;

        if r3 != null goto label05;

     label03:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null notification");

        throw $r14;

     label04:
        $r13 := @caughtexception;

        r4 = $r13;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label05:
        $i3 = r5.<com.android.server.am.ServiceRecord: int foregroundId>;

        if $i3 == i0 goto label06;

        virtualinvoke r5.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        r5.<com.android.server.am.ServiceRecord: int foregroundId> = i0;

     label06:
        $i5 = r3.<android.app.Notification: int flags>;

        $i4 = 64 | $i5;

        r3.<android.app.Notification: int flags> = $i4;

        r5.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = r3;

        r5.<com.android.server.am.ServiceRecord: boolean isForeground> = 1;

        virtualinvoke r5.<com.android.server.am.ServiceRecord: void postNotification()>();

        $r10 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label07;

        $r11 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r11, 1);

     label07:
        $i6 = r5.<com.android.server.am.ServiceRecord: int userId>;

        $r12 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i6);

        virtualinvoke $r12.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r5);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label09:
        $z1 = r5.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z1 == 0 goto label10;

        r5.<com.android.server.am.ServiceRecord: boolean isForeground> = 0;

        $r6 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label10;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r8, 0, null);

        $r9 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r9, 1);

     label10:
        if z0 == 0 goto label08;

     label11:
        virtualinvoke r5.<com.android.server.am.ServiceRecord: void cancelNotification()>();

        r5.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r5.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

     label12:
        goto label08;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
    }

    android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap, android.content.Intent, com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ServiceMap r1;
        android.content.Intent r2;
        com.android.server.am.ServiceRecord r3;
        boolean z0, z1, z2, $z3;
        com.android.internal.app.ProcessStats$ServiceState r4;
        com.android.internal.os.BatteryStatsImpl r5;
        java.lang.Throwable r6, $r16;
        java.lang.String r7;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r8, $r9;
        int $i0, $i1, $i4;
        java.util.ArrayList $r10, $r12;
        android.content.ComponentName $r11, $r14;
        long $l2, $l3, $l5;
        com.android.server.am.ActivityManagerService $r13;
        com.android.server.am.ProcessStatsService $r15;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActiveServices$ServiceMap;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: com.android.server.am.ServiceRecord;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 = 1;

        r4 = virtualinvoke r3.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState getTracker()>();

        if r4 == null goto label01;

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i4 = virtualinvoke $r15.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l5 = r3.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r4.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(1, $i4, $l5);

     label01:
        r3.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        $r8 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r5 = virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r5;

     label02:
        $r9 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startRunningLocked()>();

        exitmonitor r5;

     label03:
        $i0 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        r7 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>(r3, $i0, z0, 0);

        if r7 == null goto label07;

        $r14 = new android.content.ComponentName;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!!", r7);

        return $r14;

     label04:
        $r16 := @caughtexception;

        r6 = $r16;

     label05:
        exitmonitor r5;

     label06:
        throw r6;

     label07:
        $z3 = r3.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z3 == 0 goto label11;

        if z1 == 0 goto label11;

        $r10 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label10;

     label08:
        $r12 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = 15000L + $l3;

        r3.<com.android.server.am.ServiceRecord: long startingBgTimeout> = $l2;

        if z2 == 0 goto label09;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStarts()>();

     label09:
        $r11 = r3.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r11;

     label10:
        z2 = 0;

        goto label08;

     label11:
        if z0 == 0 goto label09;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>(r3);

        goto label09;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
    }

    android.content.ComponentName startServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int, int, int)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3, r12, $r14, $r22, $r26, $r32, $r40;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15;
        boolean z0, z1, $z2, $z4;
        com.android.server.am.ActiveServices$ServiceLookupResult r4;
        com.android.server.am.ServiceRecord r5, $r13;
        com.android.server.am.ActivityManagerService$NeededUriGrants r6;
        com.android.server.am.ActiveServices$ServiceMap r7;
        com.android.server.am.ProcessRecord r8, r10, r11;
        java.lang.Object r9;
        com.android.server.am.ActivityManagerService $r15, $r18, $r23, $r38;
        long $l5;
        java.util.ArrayList $r16, $r25, $r30;
        com.android.server.am.ServiceRecord$StartItem $r17;
        android.content.ComponentName $r19, $r29, $r31, $r33;
        android.content.pm.ApplicationInfo $r20;
        android.util.SparseArray $r21;
        java.lang.StringBuilder $r24, $r27, $r28, $r34, $r35, $r36, $r37, $r41, $r42, $r43;
        java.lang.SecurityException $r39;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        if r1 == null goto label04;

        $r38 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r11 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r11 != null goto label01;

        $r39 = new java.lang.SecurityException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i15 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting service ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.SecurityException: void <init>(java.lang.String)>($r40);

        throw $r39;

     label01:
        $i14 = r11.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i14 == 0 goto label03;

        z0 = 1;

     label02:
        r4 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r2, r3, i0, i1, i2, 1, z0);

        if r4 != null goto label05;

        return null;

     label03:
        z0 = 0;

        goto label02;

     label04:
        z0 = 1;

        goto label02;

     label05:
        $r13 = r4.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r13 != null goto label08;

        $r32 = r4.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        if $r32 == null goto label07;

        r12 = r4.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

     label06:
        $r31 = new android.content.ComponentName;

        specialinvoke $r31.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!", r12);

        return $r31;

     label07:
        r12 = "private to package";

        goto label06;

     label08:
        r5 = r4.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = r5.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i4 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        r6 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants)>(i1, $r14, r2, $i4, null);

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r5, i1, 0);

        if $z2 == 0 goto label09;

     label09:
        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r5.<com.android.server.am.ServiceRecord: long lastActivity> = $l5;

        r5.<com.android.server.am.ServiceRecord: boolean startRequested> = 1;

        r5.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $r16 = r5.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r17 = new com.android.server.am.ServiceRecord$StartItem;

        $i7 = virtualinvoke r5.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r17.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>(r5, 0, $i7, r2, r6);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $i6 = r5.<com.android.server.am.ServiceRecord: int userId>;

        r7 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMap(int)>($i6);

        z1 = 0;

        if z0 != 0 goto label13;

        r8 = r5.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        z1 = 0;

        if r8 != null goto label13;

        $r18 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = $r18.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i8 = r5.<com.android.server.am.ServiceRecord: int userId>;

        r9 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object get(int)>($i8);

        z1 = 0;

        if r9 == null goto label13;

        $r23 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r22 = r5.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r20 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i9 = $r20.<android.content.pm.ApplicationInfo: int uid>;

        r10 = virtualinvoke $r23.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r22, $i9, 0);

        if r10 == null goto label10;

        $i13 = r10.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i13 <= 8 goto label14;

     label10:
        $z4 = r5.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z4 == 0 goto label11;

        $r33 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r33;

     label11:
        $r25 = r7.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i11 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        $i10 = r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i11 < $i10 goto label12;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delaying start of: ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        $r30 = r7.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        r5.<com.android.server.am.ServiceRecord: boolean delayed> = 1;

        $r29 = r5.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r29;

     label12:
        z1 = 1;

     label13:
        $r19 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>(r7, r2, r5, z0, z1);

        return $r19;

     label14:
        i3 = r10.<com.android.server.am.ProcessRecord: int curProcState>;

        z1 = 0;

        if i3 < 7 goto label13;

        z1 = 1;

        goto label13;
    }

    int stopServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3, $r17;
        int i0, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r4;
        com.android.server.am.ActiveServices$ServiceLookupResult r5;
        long l1;
        java.lang.Throwable r6, $r19;
        com.android.server.am.ActivityManagerService $r7;
        com.android.server.am.ServiceRecord $r8, $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r16, $r18;
        java.lang.SecurityException $r11;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r4 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r1 == null goto label1;

        if r4 != null goto label1;

        $r11 = new java.lang.SecurityException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when stopping service ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r5 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,int,int,int,boolean,boolean)>(r2, r3, $i2, $i3, i0, 0, 0);

        if r5 == null goto label6;

        $r8 = r5.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r8 == null goto label5;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r9 = r5.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>($r9);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label4:
        $r19 := @caughtexception;

        r6 = $r19;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r6;

     label5:
        return -1;

     label6:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    boolean stopServiceTokenLocked(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0, $i2, $i3, $i5, $i6, $i7, $i8;
        com.android.server.am.ServiceRecord r3;
        com.android.internal.os.BatteryStatsImpl r4;
        java.lang.Throwable r5, $r24;
        long l1, $l4;
        com.android.server.am.ServiceRecord$StartItem r6, r7;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r8, $r9;
        com.android.internal.app.ProcessStats$ServiceState $r10, $r12;
        com.android.server.am.ActivityManagerService $r11;
        com.android.server.am.ProcessStatsService $r13;
        java.util.ArrayList $r14, $r21, $r22, $r25;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.String $r23;
        java.lang.Object $r26;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r1, r2, $i2);

        if r3 == null goto label03;

        if i0 < 0 goto label05;

        r6 = virtualinvoke r3.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>(i0, 0);

        if r6 == null goto label02;

     label01:
        $r22 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i8 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        if $i8 <= 0 goto label02;

        $r25 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r7 = (com.android.server.am.ServiceRecord$StartItem) $r26;

        virtualinvoke r7.<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>();

        if r7 != r6 goto label01;

     label02:
        $i5 = virtualinvoke r3.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        if $i5 == i0 goto label04;

     label03:
        return 0;

     label04:
        $r14 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i6 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label05;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopServiceToken startId ");

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is last, but have ");

        $r21 = r3.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i7 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remaining args");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r23);

     label05:
        $r8 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r4 = virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r4;

     label06:
        $r9 = r3.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor r4;

     label07:
        r3.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r10 = r3.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        if $r10 == null goto label08;

        $r12 = r3.<com.android.server.am.ServiceRecord: com.android.internal.app.ProcessStats$ServiceState tracker>;

        $r11 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r13 = $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i3 = virtualinvoke $r13.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r12.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(0, $i3, $l4);

     label08:
        r3.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r3, 0, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label09:
        $r24 := @caughtexception;

        r5 = $r24;

     label10:
        exitmonitor r4;

     label11:
        throw r5;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void unbindFinishedLocked(com.android.server.am.ServiceRecord, android.content.Intent, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.content.Intent r2;
        boolean z0, z1, z2;
        long l0;
        android.content.Intent$FilterComparison r3, $r7;
        java.lang.Throwable r4, $r16;
        com.android.server.am.IntentBindRecord r5;
        int i1, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r6;
        android.util.ArrayMap $r8, $r11, $r12, $r13;
        java.util.ArrayList $r9;
        java.lang.Object $r10, $r15;
        com.android.server.am.AppBindRecord $r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label13;

     label01:
        $r7 = new android.content.Intent$FilterComparison;

        specialinvoke $r7.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r2);

        r3 = $r7;

        $r8 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r10 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.android.server.am.IntentBindRecord) $r10;

        $r9 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z1 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

     label02:
        if r5 == null goto label12;

     label03:
        $r11 = r5.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i2 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        if $i2 <= 0 goto label15;

     label04:
        if z1 != 0 goto label15;

     label05:
        $r12 = r5.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i3 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i3;

     label06:
        z2 = 0;

        if i1 < 0 goto label11;

     label07:
        $r13 = r5.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r15 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r14 = (com.android.server.am.AppBindRecord) $r15;

        r6 = $r14.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

     label08:
        if r6 == null goto label14;

     label09:
        $i4 = r6.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i4 == 0 goto label14;

     label10:
        z2 = 1;

     label11:
        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r1, r5, z2, 1);

     label12:
        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z1, 0);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label14:
        i1 = i1 + -1;

        goto label06;

     label15:
        r5.<com.android.server.am.IntentBindRecord: boolean doRebind> = 1;

     label16:
        goto label12;

     label17:
        $r16 := @caughtexception;

        r4 = $r16;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    boolean unbindServiceLocked(android.app.IServiceConnection)
    {
        com.android.server.am.ActiveServices r0;
        android.app.IServiceConnection r1;
        android.os.IBinder r2, $r17;
        java.util.ArrayList r3;
        long l0;
        java.lang.Throwable r4, $r21;
        com.android.server.am.ConnectionRecord r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7, $r8;
        int $i1;
        com.android.server.am.AppBindRecord $r9, $r11;
        com.android.server.am.ServiceRecord $r10, $r14;
        com.android.server.am.ProcessRecord $r12, $r13;
        com.android.server.am.ActivityManagerService $r15;
        java.lang.StringBuilder $r16, $r18, $r20;
        java.lang.String $r19;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IServiceConnection;

        r2 = interfaceinvoke r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r6 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.util.ArrayList) $r7;

        if r3 != null goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind failed: could not find connection for ");

        $r17 = interfaceinvoke r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        return 0;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label5;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r5 = (com.android.server.am.ConnectionRecord) $r8;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>(r5, null, null);

        $r9 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r10 = $r9.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r12 = $r10.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label2;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r14 = $r11.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r13 = $r14.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r13);

     label3:
        goto label2;

     label4:
        $r21 := @caughtexception;

        r4 = $r21;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActiveServices: java.lang.String TAG_MU> = "ActivityManagerServiceMU";

        <com.android.server.am.ActiveServices: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActiveServices: int SERVICE_TIMEOUT> = 20000;

        <com.android.server.am.ActiveServices: int SERVICE_RESTART_DURATION_FACTOR> = 4;

        <com.android.server.am.ActiveServices: int SERVICE_RESTART_DURATION> = 1000;

        <com.android.server.am.ActiveServices: int SERVICE_RESET_RUN_DURATION> = 60000;

        <com.android.server.am.ActiveServices: int SERVICE_MIN_RESTART_TIME_BETWEEN> = 10000;

        <com.android.server.am.ActiveServices: int SERVICE_BACKGROUND_TIMEOUT> = 200000;

        <com.android.server.am.ActiveServices: int MAX_SERVICE_INACTIVITY> = 1800000;

        <com.android.server.am.ActiveServices: boolean DEBUG_SERVICE_EXECUTING> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_SERVICE> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_MU> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_DELAYED_STARTS> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_DELAYED_SERVICE> = 0;

        <com.android.server.am.ActiveServices: int BG_START_TIMEOUT> = 15000;

        return;
    }
}
