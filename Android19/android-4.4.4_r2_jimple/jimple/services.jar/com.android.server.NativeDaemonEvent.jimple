public class com.android.server.NativeDaemonEvent extends java.lang.Object
{
    private final int mCmdNumber;
    private final int mCode;
    private final java.lang.String mMessage;
    private java.lang.String[] mParsed;
    private final java.lang.String mRawEvent;

    private void <init>(int, int, java.lang.String, java.lang.String)
    {
        com.android.server.NativeDaemonEvent r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.NativeDaemonEvent: int mCmdNumber> = i0;

        r0.<com.android.server.NativeDaemonEvent: int mCode> = i1;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String mMessage> = r1;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent> = r2;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed> = null;

        return;
    }

    public static java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[], int)
    {
        com.android.server.NativeDaemonEvent[] r0;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r1;
        com.android.server.NativeDaemonEvent r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;
        java.lang.String $r6;

        r0 := @parameter0: com.android.server.NativeDaemonEvent[];

        i0 := @parameter1: int;

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r2 = r0[i2];

        $i4 = virtualinvoke r2.<com.android.server.NativeDaemonEvent: int getCode()>();

        if $i4 != i0 goto label2;

        $r6 = virtualinvoke r2.<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (java.lang.String)[$i3];

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    private static boolean isClassUnsolicited(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 600 goto label1;

        if i0 >= 700 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String)
    {
        java.lang.String r0, $r4, $r5, $r6, $r8, $r9;
        java.lang.String[] r1;
        java.lang.NumberFormatException r2, r3, $r13, $r15;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        boolean $z0;
        com.android.server.NativeDaemonEvent $r7;
        java.lang.IllegalArgumentException $r10, $r11, $r12, $r14;

        r0 := @parameter0: java.lang.String;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i5 = lengthof r1;

        if $i5 >= 2 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Insufficient arguments");

        throw $r10;

     label1:
        $r4 = r1[0];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = r1[0];

        i1 = virtualinvoke $r5.<java.lang.String: int length()>();

     label2:
        i2 = i1 + 1;

        i3 = -1;

        $z0 = staticinvoke <com.android.server.NativeDaemonEvent: boolean isClassUnsolicited(int)>(i0);

        if $z0 != 0 goto label6;

        $i6 = lengthof r1;

        if $i6 >= 3 goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Insufficient arguemnts");

        throw $r11;

     label3:
        $r13 := @caughtexception;

        r2 = $r13;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing code", r2);

        throw $r12;

     label4:
        $r8 = r1[1];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = r1[1];

        i4 = virtualinvoke $r9.<java.lang.String: int length()>();

     label5:
        $i7 = i4 + 1;

        i2 = i2 + $i7;

     label6:
        $r7 = new com.android.server.NativeDaemonEvent;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2);

        specialinvoke $r7.<com.android.server.NativeDaemonEvent: void <init>(int,int,java.lang.String,java.lang.String)>(i3, i0, $r6, r0);

        return $r7;

     label7:
        $r15 := @caughtexception;

        r3 = $r15;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing cmdNumber", r3);

        throw $r14;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label4 to label5 with label7;
    }

    public static java.lang.String[] unescapeArgs(java.lang.String)
    {
        java.lang.String r0, r2, $r7, $r8;
        java.util.ArrayList r1, $r3;
        int i0, i2, i3, i4, i5, i6, $i7, $i8, $i9;
        char c1, $c10;
        boolean z0;
        java.lang.Object[] $r4;
        java.lang.String[] $r5, $r6;

        r0 := @parameter0: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        i2 = 0;

        z0 = 0;

        if c1 != 34 goto label01;

        z0 = 1;

        i2 = 1;

     label01:
        if i2 >= i0 goto label10;

        if z0 == 0 goto label07;

        i6 = i2;

     label02:
        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(34, i6);

        if i3 == -1 goto label03;

        $i9 = i3 - 1;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        if $c10 == 92 goto label06;

     label03:
        if i3 != -1 goto label04;

        i3 = i0;

     label04:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);

        $i8 = virtualinvoke r2.<java.lang.String: int length()>();

        i2 = i2 + $i8;

        if z0 != 0 goto label08;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

     label05:
        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\\", "\\");

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\"", "\"");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(32, i2);

        i5 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(" \"", i2);

        if i5 <= -1 goto label09;

        if i5 > i4 goto label09;

        z0 = 1;

        i2 = i5 + 2;

        goto label01;

     label06:
        i6 = i3 + 1;

        goto label02;

     label07:
        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(32, i2);

        goto label03;

     label08:
        i2 = i2 + 1;

        goto label05;

     label09:
        z0 = 0;

        if i4 <= -1 goto label01;

        i2 = i4 + 1;

        z0 = 0;

        goto label01;

     label10:
        $i7 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (java.lang.String)[$i7];

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r6 = (java.lang.String[]) $r4;

        return $r6;
    }

    public void checkCode(int)
    {
        com.android.server.NativeDaemonEvent r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i1 == i0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label1:
        return;
    }

    public int getCmdNumber()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCmdNumber>;

        return $i0;
    }

    public int getCode()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        return $i0;
    }

    public java.lang.String getField(int)
    {
        com.android.server.NativeDaemonEvent r0;
        int i0, i1, $i2;
        java.lang.String[] $r1, $r2, $r3, $r6;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed>;

        if $r1 != null goto label1;

        $r5 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent>;

        $r6 = staticinvoke <com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>($r5);

        r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed> = $r6;

     label1:
        i1 = i0 + 2;

        $r2 = r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed>;

        $i2 = lengthof $r2;

        if i1 <= $i2 goto label2;

        return null;

     label2:
        $r3 = r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed>;

        $r4 = $r3[i1];

        return $r4;
    }

    public java.lang.String getMessage()
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mMessage>;

        return $r1;
    }

    public java.lang.String getRawEvent()
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent>;

        return $r1;
    }

    public boolean isClassClientError()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0, $i1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i0 < 500 goto label1;

        $i1 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i1 >= 600 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isClassContinue()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0, $i1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i0 < 100 goto label1;

        $i1 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i1 >= 200 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isClassOk()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0, $i1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i0 < 200 goto label1;

        $i1 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i1 >= 300 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isClassServerError()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0, $i1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i0 < 400 goto label1;

        $i1 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i1 >= 500 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isClassUnsolicited()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        $z0 = staticinvoke <com.android.server.NativeDaemonEvent: boolean isClassUnsolicited(int)>($i0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent>;

        return $r1;
    }
}
