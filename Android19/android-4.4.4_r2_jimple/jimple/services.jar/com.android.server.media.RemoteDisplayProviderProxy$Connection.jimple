final class com.android.server.media.RemoteDisplayProviderProxy$Connection extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private final com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback mCallback;
    private final android.media.IRemoteDisplayProvider mProvider;
    final com.android.server.media.RemoteDisplayProviderProxy this$0;

    public void <init>(com.android.server.media.RemoteDisplayProviderProxy, android.media.IRemoteDisplayProvider)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        com.android.server.media.RemoteDisplayProviderProxy r1;
        android.media.IRemoteDisplayProvider r2;
        com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback $r3;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        r1 := @parameter0: com.android.server.media.RemoteDisplayProviderProxy;

        r2 := @parameter1: android.media.IRemoteDisplayProvider;

        r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider> = r2;

        $r3 = new com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback;

        specialinvoke $r3.<com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback: void <init>(com.android.server.media.RemoteDisplayProviderProxy$Connection)>(r0);

        r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback mCallback> = $r3;

        return;
    }

    public void adjustVolume(java.lang.String, int)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r4;
        android.media.IRemoteDisplayProvider $r3;
        java.lang.Throwable r5;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        interfaceinvoke $r3.<android.media.IRemoteDisplayProvider: void adjustVolume(java.lang.String,int)>(r1, i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        r5 = (java.lang.Throwable) r2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteDisplayProvider", "Failed to deliver request to adjust display volume.", r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void binderDied()
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        com.android.server.media.RemoteDisplayProviderProxy $r1;
        android.os.Handler $r2;
        com.android.server.media.RemoteDisplayProviderProxy$Connection$2 $r3;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        $r1 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy this$0>;

        $r2 = staticinvoke <com.android.server.media.RemoteDisplayProviderProxy: android.os.Handler access$400(com.android.server.media.RemoteDisplayProviderProxy)>($r1);

        $r3 = new com.android.server.media.RemoteDisplayProviderProxy$Connection$2;

        specialinvoke $r3.<com.android.server.media.RemoteDisplayProviderProxy$Connection$2: void <init>(com.android.server.media.RemoteDisplayProviderProxy$Connection)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void connect(java.lang.String)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        android.media.IRemoteDisplayProvider $r3;
        java.lang.Throwable r5;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        interfaceinvoke $r3.<android.media.IRemoteDisplayProvider: void connect(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        r5 = (java.lang.Throwable) r2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteDisplayProvider", "Failed to deliver request to connect to display.", r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disconnect(java.lang.String)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        android.media.IRemoteDisplayProvider $r3;
        java.lang.Throwable r5;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        interfaceinvoke $r3.<android.media.IRemoteDisplayProvider: void disconnect(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        r5 = (java.lang.Throwable) r2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteDisplayProvider", "Failed to deliver request to disconnect from display.", r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispose()
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        android.media.IRemoteDisplayProvider $r1;
        android.os.IBinder $r2;
        com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback $r3;
        android.os.IBinder$DeathRecipient r4;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        $r1 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        $r2 = interfaceinvoke $r1.<android.media.IRemoteDisplayProvider: android.os.IBinder asBinder()>();

        r4 = (android.os.IBinder$DeathRecipient) r0;

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r4, 0);

        $r3 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback mCallback>;

        virtualinvoke $r3.<com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback: void dispose()>();

        return;
    }

    void postStateChanged(android.media.RemoteDisplayState)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        android.media.RemoteDisplayState r1;
        com.android.server.media.RemoteDisplayProviderProxy $r2;
        android.os.Handler $r3;
        com.android.server.media.RemoteDisplayProviderProxy$Connection$3 $r4;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        r1 := @parameter0: android.media.RemoteDisplayState;

        $r2 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy this$0>;

        $r3 = staticinvoke <com.android.server.media.RemoteDisplayProviderProxy: android.os.Handler access$400(com.android.server.media.RemoteDisplayProviderProxy)>($r2);

        $r4 = new com.android.server.media.RemoteDisplayProviderProxy$Connection$3;

        specialinvoke $r4.<com.android.server.media.RemoteDisplayProviderProxy$Connection$3: void <init>(com.android.server.media.RemoteDisplayProviderProxy$Connection,android.media.RemoteDisplayState)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public boolean register()
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        android.media.IRemoteDisplayProvider $r2, $r5;
        android.os.IBinder $r3;
        com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback $r4;
        com.android.server.media.RemoteDisplayProviderProxy $r6;
        android.os.Handler $r7;
        android.os.RemoteException $r9;
        com.android.server.media.RemoteDisplayProviderProxy$Connection$1 r10;
        android.os.IBinder$DeathRecipient r11;
        android.media.IRemoteDisplayCallback r12;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

     label1:
        $r2 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        $r3 = interfaceinvoke $r2.<android.media.IRemoteDisplayProvider: android.os.IBinder asBinder()>();

        r11 = (android.os.IBinder$DeathRecipient) r0;

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r11, 0);

        $r5 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        $r4 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback mCallback>;

        r12 = (android.media.IRemoteDisplayCallback) $r4;

        interfaceinvoke $r5.<android.media.IRemoteDisplayProvider: void setCallback(android.media.IRemoteDisplayCallback)>(r12);

        $r6 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: com.android.server.media.RemoteDisplayProviderProxy this$0>;

        $r7 = staticinvoke <com.android.server.media.RemoteDisplayProviderProxy: android.os.Handler access$400(com.android.server.media.RemoteDisplayProviderProxy)>($r6);

        r10 = new com.android.server.media.RemoteDisplayProviderProxy$Connection$1;

        specialinvoke r10.<com.android.server.media.RemoteDisplayProviderProxy$Connection$1: void <init>(com.android.server.media.RemoteDisplayProviderProxy$Connection)>(r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>(r10);

     label2:
        return 1;

     label3:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: void binderDied()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDiscoveryMode(int)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        int i0;
        android.os.RemoteException r1, $r3;
        android.media.IRemoteDisplayProvider $r2;
        java.lang.Throwable r4;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        interfaceinvoke $r2.<android.media.IRemoteDisplayProvider: void setDiscoveryMode(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        r4 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteDisplayProvider", "Failed to deliver request to set discovery mode.", r4);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setVolume(java.lang.String, int)
    {
        com.android.server.media.RemoteDisplayProviderProxy$Connection r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r4;
        android.media.IRemoteDisplayProvider $r3;
        java.lang.Throwable r5;

        r0 := @this: com.android.server.media.RemoteDisplayProviderProxy$Connection;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.server.media.RemoteDisplayProviderProxy$Connection: android.media.IRemoteDisplayProvider mProvider>;

        interfaceinvoke $r3.<android.media.IRemoteDisplayProvider: void setVolume(java.lang.String,int)>(r1, i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        r5 = (java.lang.Throwable) r2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteDisplayProvider", "Failed to deliver request to set display volume.", r5);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
