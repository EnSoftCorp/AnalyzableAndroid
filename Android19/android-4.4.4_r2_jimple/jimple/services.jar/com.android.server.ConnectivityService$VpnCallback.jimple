public class com.android.server.ConnectivityService$VpnCallback extends java.lang.Object
{
    final com.android.server.ConnectivityService this$0;

    private void <init>(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        com.android.server.ConnectivityService r1;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: com.android.server.ConnectivityService;

        r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.ConnectivityService, com.android.server.ConnectivityService$1)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        com.android.server.ConnectivityService r1;
        com.android.server.ConnectivityService$1 r2;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: com.android.server.ConnectivityService;

        r2 := @parameter1: com.android.server.ConnectivityService$1;

        specialinvoke r0.<com.android.server.ConnectivityService$VpnCallback: void <init>(com.android.server.ConnectivityService)>(r1);

        return;
    }

    public void addUidForwarding(java.lang.String, int, int, boolean)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0;
        com.android.server.ConnectivityService $r3, $r5;
        android.os.INetworkManagementService $r4, $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r3);

        interfaceinvoke $r4.<android.os.INetworkManagementService: void setUidRangeRoute(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        if z0 == 0 goto label4;

     label3:
        $r5 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r6 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r5);

        interfaceinvoke $r6.<android.os.INetworkManagementService: void setDnsInterfaceForUidRange(java.lang.String,int,int)>(r1, i0, i1);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void addUserForwarding(java.lang.String, int, boolean)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        boolean z0;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = i0 * 100000;

        $i2 = 100000 + i1;

        $i3 = -1 + $i2;

        virtualinvoke r0.<com.android.server.ConnectivityService$VpnCallback: void addUidForwarding(java.lang.String,int,int,boolean)>(r1, i1, $i3, z0);

        return;
    }

    public void clearMarkedForwarding(java.lang.String)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        com.android.server.ConnectivityService $r3;
        android.os.INetworkManagementService $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r3);

        interfaceinvoke $r4.<android.os.INetworkManagementService: void clearMarkedForwarding(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearUidForwarding(java.lang.String, int, int, boolean)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        int i0, i1;
        boolean z0;
        com.android.server.ConnectivityService $r3, $r5;
        android.os.INetworkManagementService $r4, $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r3);

        interfaceinvoke $r4.<android.os.INetworkManagementService: void clearUidRangeRoute(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        if z0 == 0 goto label4;

     label3:
        $r5 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r6 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r5);

        interfaceinvoke $r6.<android.os.INetworkManagementService: void clearDnsInterfaceForUidRange(java.lang.String,int,int)>(r1, i0, i1);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void clearUserForwarding(java.lang.String, int, boolean)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        boolean z0;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = i0 * 100000;

        $i2 = 100000 + i1;

        $i3 = -1 + $i2;

        virtualinvoke r0.<com.android.server.ConnectivityService$VpnCallback: void clearUidForwarding(java.lang.String,int,int,boolean)>(r1, i1, $i3, z0);

        return;
    }

    public void onStateChanged(android.net.NetworkInfo)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        android.net.NetworkInfo r1;
        com.android.server.ConnectivityService $r2;
        com.android.server.ConnectivityService$InternalHandler $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: android.net.NetworkInfo;

        $r2 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler access$100(com.android.server.ConnectivityService)>($r2);

        $r4 = virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(13, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void override(java.lang.String, java.util.List, java.util.List)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1, r7, r13, $r17, $r28;
        java.util.List r2, r3;
        java.util.ArrayList r4, $r14;
        java.util.Iterator r5, r12;
        java.lang.StringBuilder r6, $r16, $r31;
        java.lang.Object r8, r10, $r27, $r29;
        java.lang.Throwable r9, r11, $r34, $r35;
        boolean $z0, $z1, $z3;
        com.android.server.ConnectivityService $r18, $r19, $r20, $r21, $r23, $r25, $r26;
        android.net.ProxyProperties $r22, $r24;
        java.net.InetAddress $r30;
        java.lang.Exception $r33;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        if r2 != null goto label01;

        virtualinvoke r0.<com.android.server.ConnectivityService$VpnCallback: void restore()>();

        return;

     label01:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r4 = $r14;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r29 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r29;

     label03:
        $r30 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>(r13);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r30);

     label04:
        goto label02;

     label05:
        $r33 := @caughtexception;

        goto label02;

     label06:
        $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label07;

        virtualinvoke r0.<com.android.server.ConnectivityService$VpnCallback: void restore()>();

        return;

     label07:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r6 = $r16;

        if r3 == null goto label09;

        r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r27 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (java.lang.String) $r27;

        $r31 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label08;

     label09:
        $r17 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        $r18 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        r8 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object access$3400(com.android.server.ConnectivityService)>($r18);

        entermonitor r8;

     label10:
        $r19 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        staticinvoke <com.android.server.ConnectivityService: void access$3500(com.android.server.ConnectivityService,java.lang.String,java.lang.String,java.util.Collection,java.lang.String,boolean)>($r19, "VPN", r1, r4, r7, 0);

        exitmonitor r8;

     label11:
        $r20 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        r10 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object access$3600(com.android.server.ConnectivityService)>($r20);

        entermonitor r10;

     label12:
        $r23 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        staticinvoke <com.android.server.ConnectivityService: boolean access$3702(com.android.server.ConnectivityService,boolean)>($r23, 1);

        $r21 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r22 = staticinvoke <com.android.server.ConnectivityService: android.net.ProxyProperties access$3800(com.android.server.ConnectivityService)>($r21);

        if $r22 != null goto label13;

        $r26 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r24 = staticinvoke <com.android.server.ConnectivityService: android.net.ProxyProperties access$3900(com.android.server.ConnectivityService)>($r26);

        if $r24 == null goto label13;

        $r25 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        staticinvoke <com.android.server.ConnectivityService: void access$4000(com.android.server.ConnectivityService,android.net.ProxyProperties)>($r25, null);

     label13:
        exitmonitor r10;

     label14:
        return;

     label15:
        $r34 := @caughtexception;

        r11 = $r34;

     label16:
        exitmonitor r10;

     label17:
        throw r11;

     label18:
        $r35 := @caughtexception;

        r9 = $r35;

     label19:
        exitmonitor r8;

     label20:
        throw r9;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void protect(android.os.ParcelFileDescriptor)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        android.os.ParcelFileDescriptor r1;
        int i0, $i1;
        com.android.server.ConnectivityService $r3;
        android.os.INetworkManagementService $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r3);

        i0 = interfaceinvoke $r4.<android.os.INetworkManagementService: int getMarkForProtect()>();

        $i1 = virtualinvoke r1.<android.os.ParcelFileDescriptor: int getFd()>();

        staticinvoke <android.net.NetworkUtils: void markSocket(int,int)>($i1, i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void restore()
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r12;
        com.android.server.ConnectivityService $r3, $r4, $r5, $r7, $r9, $r10;
        android.net.ProxyProperties $r6, $r8, $r11;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        $r3 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        r1 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object access$3600(com.android.server.ConnectivityService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        staticinvoke <com.android.server.ConnectivityService: boolean access$3702(com.android.server.ConnectivityService,boolean)>($r4, 0);

        $r5 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r6 = staticinvoke <com.android.server.ConnectivityService: android.net.ProxyProperties access$3800(com.android.server.ConnectivityService)>($r5);

        if $r6 != null goto label2;

        $r7 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r8 = staticinvoke <com.android.server.ConnectivityService: android.net.ProxyProperties access$3900(com.android.server.ConnectivityService)>($r7);

        if $r8 == null goto label2;

        $r10 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r9 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r11 = staticinvoke <com.android.server.ConnectivityService: android.net.ProxyProperties access$3900(com.android.server.ConnectivityService)>($r9);

        staticinvoke <com.android.server.ConnectivityService: void access$4000(com.android.server.ConnectivityService,android.net.ProxyProperties)>($r10, $r11);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setMarkedForwarding(java.lang.String)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        com.android.server.ConnectivityService $r3;
        android.os.INetworkManagementService $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r3);

        interfaceinvoke $r4.<android.os.INetworkManagementService: void setMarkedForwarding(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRoutes(java.lang.String, java.util.List)
    {
        com.android.server.ConnectivityService$VpnCallback r0;
        java.lang.String r1;
        java.util.List r2;
        java.util.Iterator r3;
        android.net.RouteInfo r4;
        boolean $z0;
        java.lang.Object $r6;
        com.android.server.ConnectivityService $r7;
        android.os.INetworkManagementService $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.ConnectivityService$VpnCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.RouteInfo) $r6;

     label2:
        $r7 = r0.<com.android.server.ConnectivityService$VpnCallback: com.android.server.ConnectivityService this$0>;

        $r8 = staticinvoke <com.android.server.ConnectivityService: android.os.INetworkManagementService access$4100(com.android.server.ConnectivityService)>($r7);

        interfaceinvoke $r8.<android.os.INetworkManagementService: void setMarkedForwardingRoute(java.lang.String,android.net.RouteInfo)>(r1, r4);

     label3:
        goto label1;

     label4:
        $r9 := @caughtexception;

        goto label1;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }
}
