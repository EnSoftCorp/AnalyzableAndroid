public final class com.android.server.location.GeofenceProxy extends java.lang.Object
{
    private static final int GEOFENCE_GPS_HARDWARE_CONNECTED;
    private static final int GEOFENCE_GPS_HARDWARE_DISCONNECTED;
    private static final int GEOFENCE_HARDWARE_CONNECTED;
    private static final int GEOFENCE_HARDWARE_DISCONNECTED;
    private static final int GEOFENCE_PROVIDER_CONNECTED;
    private static final java.lang.String SERVICE_ACTION;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.location.IFusedGeofenceHardware mFusedGeofenceHardware;
    private android.hardware.location.IGeofenceHardware mGeofenceHardware;
    private final android.location.IGpsGeofenceHardware mGpsGeofenceHardware;
    private android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private java.lang.Runnable mRunnable;
    private android.content.ServiceConnection mServiceConnection;
    private final com.android.server.ServiceWatcher mServiceWatcher;

    private void <init>(android.content.Context, int, int, int, android.os.Handler, android.location.IGpsGeofenceHardware, android.location.IFusedGeofenceHardware)
    {
        com.android.server.location.GeofenceProxy r0;
        android.content.Context r1;
        int i0, i1, i2;
        android.os.Handler r2;
        android.location.IGpsGeofenceHardware r3;
        android.location.IFusedGeofenceHardware r4;
        java.lang.Runnable $r10;
        java.lang.Object r11;
        com.android.server.location.GeofenceProxy$1 r12;
        com.android.server.location.GeofenceProxy$2 r13;
        com.android.server.location.GeofenceProxy$3 r14;
        com.android.server.ServiceWatcher r15;
        android.content.ServiceConnection r16;

        r0 := @this: com.android.server.location.GeofenceProxy;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Handler;

        r3 := @parameter5: android.location.IGpsGeofenceHardware;

        r4 := @parameter6: android.location.IFusedGeofenceHardware;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r11 = new java.lang.Object;

        specialinvoke r11.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.GeofenceProxy: java.lang.Object mLock> = r11;

        r12 = new com.android.server.location.GeofenceProxy$1;

        specialinvoke r12.<com.android.server.location.GeofenceProxy$1: void <init>(com.android.server.location.GeofenceProxy)>(r0);

        r0.<com.android.server.location.GeofenceProxy: java.lang.Runnable mRunnable> = r12;

        r13 = new com.android.server.location.GeofenceProxy$2;

        specialinvoke r13.<com.android.server.location.GeofenceProxy$2: void <init>(com.android.server.location.GeofenceProxy)>(r0);

        r16 = (android.content.ServiceConnection) r13;

        r0.<com.android.server.location.GeofenceProxy: android.content.ServiceConnection mServiceConnection> = r16;

        r14 = new com.android.server.location.GeofenceProxy$3;

        specialinvoke r14.<com.android.server.location.GeofenceProxy$3: void <init>(com.android.server.location.GeofenceProxy)>(r0);

        r0.<com.android.server.location.GeofenceProxy: android.os.Handler mHandler> = r14;

        r0.<com.android.server.location.GeofenceProxy: android.content.Context mContext> = r1;

        r15 = new com.android.server.ServiceWatcher;

        $r10 = r0.<com.android.server.location.GeofenceProxy: java.lang.Runnable mRunnable>;

        specialinvoke r15.<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>(r1, "GeofenceProxy", "com.android.location.service.GeofenceProvider", i0, i1, i2, $r10, r2);

        r0.<com.android.server.location.GeofenceProxy: com.android.server.ServiceWatcher mServiceWatcher> = r15;

        r0.<com.android.server.location.GeofenceProxy: android.location.IGpsGeofenceHardware mGpsGeofenceHardware> = r3;

        r0.<com.android.server.location.GeofenceProxy: android.location.IFusedGeofenceHardware mFusedGeofenceHardware> = r4;

        specialinvoke r0.<com.android.server.location.GeofenceProxy: void bindHardwareGeofence()>();

        return;
    }

    static android.os.Handler access$000(com.android.server.location.GeofenceProxy)
    {
        com.android.server.location.GeofenceProxy r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        $r1 = r0.<com.android.server.location.GeofenceProxy: android.os.Handler mHandler>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.location.GeofenceProxy)
    {
        com.android.server.location.GeofenceProxy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        $r1 = r0.<com.android.server.location.GeofenceProxy: java.lang.Object mLock>;

        return $r1;
    }

    static android.hardware.location.IGeofenceHardware access$200(com.android.server.location.GeofenceProxy)
    {
        com.android.server.location.GeofenceProxy r0;
        android.hardware.location.IGeofenceHardware $r1;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        $r1 = r0.<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware mGeofenceHardware>;

        return $r1;
    }

    static android.hardware.location.IGeofenceHardware access$202(com.android.server.location.GeofenceProxy, android.hardware.location.IGeofenceHardware)
    {
        com.android.server.location.GeofenceProxy r0;
        android.hardware.location.IGeofenceHardware r1;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        r1 := @parameter1: android.hardware.location.IGeofenceHardware;

        r0.<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware mGeofenceHardware> = r1;

        return r1;
    }

    static void access$300(com.android.server.location.GeofenceProxy)
    {
        com.android.server.location.GeofenceProxy r0;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        specialinvoke r0.<com.android.server.location.GeofenceProxy: void setGeofenceHardwareInProviderLocked()>();

        return;
    }

    static void access$400(com.android.server.location.GeofenceProxy)
    {
        com.android.server.location.GeofenceProxy r0;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        specialinvoke r0.<com.android.server.location.GeofenceProxy: void setGpsGeofenceLocked()>();

        return;
    }

    static void access$500(com.android.server.location.GeofenceProxy)
    {
        com.android.server.location.GeofenceProxy r0;

        r0 := @parameter0: com.android.server.location.GeofenceProxy;

        specialinvoke r0.<com.android.server.location.GeofenceProxy: void setFusedGeofenceLocked()>();

        return;
    }

    private boolean bindGeofenceProvider()
    {
        com.android.server.location.GeofenceProxy r0;
        com.android.server.ServiceWatcher $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.GeofenceProxy;

        $r1 = r0.<com.android.server.location.GeofenceProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $z0 = virtualinvoke $r1.<com.android.server.ServiceWatcher: boolean start()>();

        return $z0;
    }

    private void bindHardwareGeofence()
    {
        com.android.server.location.GeofenceProxy r0;
        android.content.Intent $r1;
        android.content.Context $r2, $r3;
        android.os.UserHandle $r4;
        android.content.ServiceConnection $r5;

        r0 := @this: com.android.server.location.GeofenceProxy;

        $r3 = r0.<com.android.server.location.GeofenceProxy: android.content.Context mContext>;

        $r1 = new android.content.Intent;

        $r2 = r0.<com.android.server.location.GeofenceProxy: android.content.Context mContext>;

        specialinvoke $r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r2, class "android/hardware/location/GeofenceHardwareService");

        $r5 = r0.<com.android.server.location.GeofenceProxy: android.content.ServiceConnection mServiceConnection>;

        $r4 = <android.os.UserHandle: android.os.UserHandle OWNER>;

        virtualinvoke $r3.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r1, $r5, 1, $r4);

        return;
    }

    public static com.android.server.location.GeofenceProxy createAndBind(android.content.Context, int, int, int, android.os.Handler, android.location.IGpsGeofenceHardware, android.location.IFusedGeofenceHardware)
    {
        android.content.Context r0;
        int i0, i1, i2;
        android.os.Handler r1;
        android.location.IGpsGeofenceHardware r2;
        android.location.IFusedGeofenceHardware r3;
        com.android.server.location.GeofenceProxy r4, $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.os.Handler;

        r2 := @parameter5: android.location.IGpsGeofenceHardware;

        r3 := @parameter6: android.location.IFusedGeofenceHardware;

        $r5 = new com.android.server.location.GeofenceProxy;

        specialinvoke $r5.<com.android.server.location.GeofenceProxy: void <init>(android.content.Context,int,int,int,android.os.Handler,android.location.IGpsGeofenceHardware,android.location.IFusedGeofenceHardware)>(r0, i0, i1, i2, r1, r2, r3);

        r4 = $r5;

        $z0 = specialinvoke r4.<com.android.server.location.GeofenceProxy: boolean bindGeofenceProvider()>();

        if $z0 == 0 goto label1;

        return r4;

     label1:
        return null;
    }

    private void setFusedGeofenceLocked()
    {
        com.android.server.location.GeofenceProxy r0;
        android.location.IFusedGeofenceHardware $r2;
        android.hardware.location.IGeofenceHardware $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.location.GeofenceProxy;

     label1:
        $r3 = r0.<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware mGeofenceHardware>;

        $r2 = r0.<com.android.server.location.GeofenceProxy: android.location.IFusedGeofenceHardware mFusedGeofenceHardware>;

        interfaceinvoke $r3.<android.hardware.location.IGeofenceHardware: void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware)>($r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GeofenceProxy", "Error while connecting to GeofenceHardwareService");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void setGeofenceHardwareInProviderLocked()
    {
        com.android.server.location.GeofenceProxy r0;
        android.os.RemoteException r1, $r6;
        android.location.IGeofenceProvider r2;
        com.android.server.ServiceWatcher $r3;
        android.os.IBinder $r4;
        android.hardware.location.IGeofenceHardware $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.location.GeofenceProxy;

     label1:
        $r3 = r0.<com.android.server.location.GeofenceProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r4 = virtualinvoke $r3.<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>();

        r2 = staticinvoke <android.location.IGeofenceProvider$Stub: android.location.IGeofenceProvider asInterface(android.os.IBinder)>($r4);

     label2:
        if r2 == null goto label4;

     label3:
        $r5 = r0.<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware mGeofenceHardware>;

        interfaceinvoke r2.<android.location.IGeofenceProvider: void setGeofenceHardware(android.hardware.location.IGeofenceHardware)>($r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote Exception: setGeofenceHardwareInProviderLocked: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GeofenceProxy", $r10);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void setGpsGeofenceLocked()
    {
        com.android.server.location.GeofenceProxy r0;
        android.location.IGpsGeofenceHardware $r2;
        android.hardware.location.IGeofenceHardware $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.location.GeofenceProxy;

     label1:
        $r3 = r0.<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware mGeofenceHardware>;

        $r2 = r0.<com.android.server.location.GeofenceProxy: android.location.IGpsGeofenceHardware mGpsGeofenceHardware>;

        interfaceinvoke $r3.<android.hardware.location.IGeofenceHardware: void setGpsGeofenceHardware(android.location.IGpsGeofenceHardware)>($r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GeofenceProxy", "Error while connecting to GeofenceHardwareService");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.location.GeofenceProxy: java.lang.String TAG> = "GeofenceProxy";

        <com.android.server.location.GeofenceProxy: java.lang.String SERVICE_ACTION> = "com.android.location.service.GeofenceProvider";

        <com.android.server.location.GeofenceProxy: int GEOFENCE_PROVIDER_CONNECTED> = 1;

        <com.android.server.location.GeofenceProxy: int GEOFENCE_HARDWARE_DISCONNECTED> = 3;

        <com.android.server.location.GeofenceProxy: int GEOFENCE_HARDWARE_CONNECTED> = 2;

        <com.android.server.location.GeofenceProxy: int GEOFENCE_GPS_HARDWARE_DISCONNECTED> = 5;

        <com.android.server.location.GeofenceProxy: int GEOFENCE_GPS_HARDWARE_CONNECTED> = 4;

        return;
    }
}
