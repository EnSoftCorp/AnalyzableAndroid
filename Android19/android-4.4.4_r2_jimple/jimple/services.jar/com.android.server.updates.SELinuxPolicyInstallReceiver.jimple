public class com.android.server.updates.SELinuxPolicyInstallReceiver extends com.android.server.updates.ConfigUpdateInstallReceiver
{
    private static final java.lang.String TAG;
    private static final java.lang.String fileContextsPath;
    private static final java.lang.String propertyContextsPath;
    private static final java.lang.String seappContextsPath;
    private static final java.lang.String sepolicyPath;

    public void <init>()
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("/data/security/bundle", "sepolicy_bundle", "metadata/", "version");

        return;
    }

    private void applyUpdate() throws java.io.IOException, libcore.io.ErrnoException
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.File r1, r2, r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r26;
        boolean $z0;
        libcore.io.Os $r17, $r21, $r25, $r29, $r30;
        java.lang.String $r19, $r20, $r22, $r23, $r24, $r27, $r28, $r31, $r32, $r33;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SELinuxPolicyInstallReceiver", "Applying SELinux policy");

        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r7 = virtualinvoke $r6.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "contexts");

        r1 = $r5;

        $r8 = new java.io.File;

        $r9 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r10 = virtualinvoke $r9.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "current");

        r2 = $r8;

        $r11 = new java.io.File;

        $r12 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r13 = virtualinvoke $r12.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, "update");

        r3 = $r11;

        $r15 = new java.io.File;

        $r14 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r16 = virtualinvoke $r14.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, "tmp");

        r4 = $r15;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $r30 = <libcore.io.Libcore: libcore.io.Os os>;

        $r26 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r31 = virtualinvoke $r26.<java.io.File: java.lang.String getPath()>();

        $r28 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke $r30.<libcore.io.Os: void symlink(java.lang.String,java.lang.String)>($r31, $r28);

        $r29 = <libcore.io.Libcore: libcore.io.Os os>;

        $r32 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r33 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke $r29.<libcore.io.Os: void rename(java.lang.String,java.lang.String)>($r32, $r33);

     label1:
        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void backupContexts(java.io.File)>(r1);

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void copyUpdate(java.io.File)>(r1);

        $r21 = <libcore.io.Libcore: libcore.io.Os os>;

        $r23 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r22 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke $r21.<libcore.io.Os: void symlink(java.lang.String,java.lang.String)>($r23, $r22);

        $r25 = <libcore.io.Libcore: libcore.io.Os os>;

        $r24 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r27 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke $r25.<libcore.io.Os: void rename(java.lang.String,java.lang.String)>($r24, $r27);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("selinux.reload_policy", "1");

        return;

     label2:
        $r17 = <libcore.io.Libcore: libcore.io.Os os>;

        $r18 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r20 = virtualinvoke $r18.<java.io.File: java.lang.String getPath()>();

        $r19 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke $r17.<libcore.io.Os: void symlink(java.lang.String,java.lang.String)>($r20, $r19);

        goto label1;
    }

    private void backupContexts(java.io.File)
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.File r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: java.io.File;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "seapp_contexts");

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "seapp_contexts_backup");

        virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r3);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "property_contexts");

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "property_contexts_backup");

        virtualinvoke $r4.<java.io.File: boolean renameTo(java.io.File)>($r5);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "file_contexts");

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "file_contexts_backup");

        virtualinvoke $r6.<java.io.File: boolean renameTo(java.io.File)>($r7);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "sepolicy");

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "sepolicy_backup");

        virtualinvoke $r8.<java.io.File: boolean renameTo(java.io.File)>($r9);

        return;
    }

    private void copyUpdate(java.io.File)
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.File r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: java.io.File;

        $r2 = new java.io.File;

        $r3 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "seapp_contexts");

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "seapp_contexts");

        virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r4);

        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "property_contexts");

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "property_contexts");

        virtualinvoke $r5.<java.io.File: boolean renameTo(java.io.File)>($r7);

        $r8 = new java.io.File;

        $r9 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "file_contexts");

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "file_contexts");

        virtualinvoke $r8.<java.io.File: boolean renameTo(java.io.File)>($r10);

        $r11 = new java.io.File;

        $r12 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, "sepolicy");

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "sepolicy");

        virtualinvoke $r11.<java.io.File: boolean renameTo(java.io.File)>($r13);

        return;
    }

    private void installFile(java.io.File, java.io.BufferedInputStream, int) throws java.io.IOException
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.File r1, $r4;
        java.io.BufferedInputStream r2;
        int i0;
        byte[] r3, $r5;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.BufferedInputStream;

        i0 := @parameter2: int;

        r3 = newarray (byte)[i0];

        virtualinvoke r2.<java.io.BufferedInputStream: int read(byte[],int,int)>(r3, 0, i0);

        $r4 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>(r3, 0);

        virtualinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void writeUpdate(java.io.File,java.io.File,byte[])>($r4, r1, $r5);

        return;
    }

    private int[] readChunkLengths(java.io.BufferedInputStream) throws java.io.IOException
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.BufferedInputStream r1;
        int[] r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: java.io.BufferedInputStream;

        r2 = newarray (int)[4];

        $i0 = specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: int readInt(java.io.BufferedInputStream)>(r1);

        r2[0] = $i0;

        $i1 = specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: int readInt(java.io.BufferedInputStream)>(r1);

        r2[1] = $i1;

        $i2 = specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: int readInt(java.io.BufferedInputStream)>(r1);

        r2[2] = $i2;

        $i3 = specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: int readInt(java.io.BufferedInputStream)>(r1);

        r2[3] = $i3;

        return r2;
    }

    private int readInt(java.io.BufferedInputStream) throws java.io.IOException
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.BufferedInputStream r1;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: java.io.BufferedInputStream;

        i0 = 0;

        i1 = 0;

     label1:
        if i1 >= 4 goto label2;

        $i2 = i0 << 8;

        $i3 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        i0 = $i2 | $i3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    private void setEnforcingMode(android.content.Context)
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        android.content.Context r1;
        java.lang.String r2, $r4, $r5, $r9;
        android.content.ContentResolver $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "selinux_status");

        $r4 = "1";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SELinuxPolicyInstallReceiver", "Setting enforcing mode");

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.selinux.enforcing", r2);

        return;

     label1:
        $r5 = "0";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SELinuxPolicyInstallReceiver", "Tried to set permissive mode, ignoring");

        return;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got invalid enforcing mode: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SELinuxPolicyInstallReceiver", $r9);

        return;
    }

    private void unpackBundle() throws java.io.IOException
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        java.io.BufferedInputStream r1, $r4;
        java.lang.Throwable r2, $r15;
        int[] r3;
        java.io.FileInputStream $r5;
        java.io.File $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

        $r6 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateContent>;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        r1 = $r4;

     label1:
        r3 = specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: int[] readChunkLengths(java.io.BufferedInputStream)>(r1);

        $r7 = new java.io.File;

        $r8 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "seapp_contexts");

        $i0 = r3[0];

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void installFile(java.io.File,java.io.BufferedInputStream,int)>($r7, r1, $i0);

        $r9 = new java.io.File;

        $r10 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "property_contexts");

        $i1 = r3[1];

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void installFile(java.io.File,java.io.BufferedInputStream,int)>($r9, r1, $i1);

        $r11 = new java.io.File;

        $r12 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, "file_contexts");

        $i2 = r3[2];

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void installFile(java.io.File,java.io.BufferedInputStream,int)>($r11, r1, $i2);

        $r13 = new java.io.File;

        $r14 = r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: java.io.File updateDir>;

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "sepolicy");

        $i3 = r3[3];

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void installFile(java.io.File,java.io.BufferedInputStream,int)>($r13, r1, $i3);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return;

     label3:
        $r15 := @caughtexception;

        r2 = $r15;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void postInstall(android.content.Context, android.content.Intent)
    {
        com.android.server.updates.SELinuxPolicyInstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        libcore.io.ErrnoException r3, $r8;
        java.io.IOException r4, $r7;
        java.lang.IllegalArgumentException r5, $r6;
        java.lang.Throwable r9;

        r0 := @this: com.android.server.updates.SELinuxPolicyInstallReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

     label1:
        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void unpackBundle()>();

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void applyUpdate()>();

        specialinvoke r0.<com.android.server.updates.SELinuxPolicyInstallReceiver: void setEnforcingMode(android.content.Context)>(r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SELinuxPolicyInstallReceiver", "SELinux policy update malformed: ", r5);

        return;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SELinuxPolicyInstallReceiver", "Could not update selinux policy: ", r4);

        return;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        r9 = (java.lang.Throwable) r3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SELinuxPolicyInstallReceiver", "Could not update selinux policy: ", r9);

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch libcore.io.ErrnoException from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.updates.SELinuxPolicyInstallReceiver: java.lang.String sepolicyPath> = "sepolicy";

        <com.android.server.updates.SELinuxPolicyInstallReceiver: java.lang.String seappContextsPath> = "seapp_contexts";

        <com.android.server.updates.SELinuxPolicyInstallReceiver: java.lang.String propertyContextsPath> = "property_contexts";

        <com.android.server.updates.SELinuxPolicyInstallReceiver: java.lang.String fileContextsPath> = "file_contexts";

        <com.android.server.updates.SELinuxPolicyInstallReceiver: java.lang.String TAG> = "SELinuxPolicyInstallReceiver";

        return;
    }
}
