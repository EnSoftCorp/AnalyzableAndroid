public class com.android.server.DiskStatsService extends android.os.Binder
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.server.DiskStatsService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.DiskStatsService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        r0.<com.android.server.DiskStatsService: android.content.Context mContext> = r1;

        return;
    }

    private void reportFreeSpace(java.io.File, java.lang.String, java.io.PrintWriter)
    {
        com.android.server.DiskStatsService r0;
        java.io.File r1;
        java.lang.String r2, $r7, $r16, $r18;
        java.io.PrintWriter r3;
        android.os.StatFs r4, $r6;
        java.lang.IllegalArgumentException r5, $r9, $r17;
        long l0, l1, l2, $l8, $l9, $l10, $l11, $l12, $l13;
        int $i3, $i4, $i6;
        byte $b5, $b7;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.android.server.DiskStatsService;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.PrintWriter;

     label1:
        $r6 = new android.os.StatFs;

        $r7 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r6.<android.os.StatFs: void <init>(java.lang.String)>($r7);

        r4 = $r6;

        $i3 = virtualinvoke r4.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i3;

        $i4 = virtualinvoke r4.<android.os.StatFs: int getAvailableBlocks()>();

        l1 = (long) $i4;

        $i6 = virtualinvoke r4.<android.os.StatFs: int getBlockCount()>();

        l2 = (long) $i6;

     label2:
        $b5 = l0 cmp 0L;

        if $b5 <= 0 goto label3;

        $b7 = l2 cmp 0L;

        if $b7 > 0 goto label5;

     label3:
        $r9 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stat: bsize=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" avail=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label4:
        $r17 := @caughtexception;

        r5 = $r17;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("-Error: ");

        $r18 = virtualinvoke r5.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        return;

     label5:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("-Free: ");

        $l9 = l1 * l0;

        $l8 = $l9 / 1024L;

        virtualinvoke r3.<java.io.PrintWriter: void print(long)>($l8);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("K / ");

        $l11 = l2 * l0;

        $l10 = $l11 / 1024L;

        virtualinvoke r3.<java.io.PrintWriter: void print(long)>($l10);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("K total = ");

        $l12 = 100L * l1;

        $l13 = $l12 / l2;

        virtualinvoke r3.<java.io.PrintWriter: void print(long)>($l13);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("% free");

     label6:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label3 to label4 with label4;
        catch java.lang.IllegalArgumentException from label5 to label6 with label4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.DiskStatsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        byte[] r4;
        int i0, $i3;
        java.io.File r5, $r15, $r16, $r18, $r19, $r20;
        java.io.FileOutputStream r6, r8, $r17;
        java.io.IOException r7, r9, $r23, $r25, $r26, $r27, $r28;
        long l1, l2, $l4;
        java.lang.Throwable r11, $r21, $r24;
        android.content.Context $r14;
        boolean $z0;
        byte $b5;
        java.lang.String $r22;

        r0 := @this: com.android.server.DiskStatsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r14 = r0.<com.android.server.DiskStatsService: android.content.Context mContext>;

        virtualinvoke $r14.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "DiskStatsService");

        r4 = newarray (byte)[512];

        i0 = 0;

     label01:
        $i3 = lengthof r4;

        if i0 >= $i3 goto label02;

        $b5 = (byte) i0;

        r4[i0] = $b5;

        i0 = i0 + 1;

        goto label01;

     label02:
        $r16 = new java.io.File;

        $r15 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "system/perftest.tmp");

        r5 = $r16;

        r6 = null;

        r7 = null;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label03:
        $r17 = new java.io.FileOutputStream;

        specialinvoke $r17.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

        r8 = $r17;

     label04:
        virtualinvoke r8.<java.io.FileOutputStream: void write(byte[])>(r4);

     label05:
        if r8 == null goto label07;

     label06:
        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label07:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label08;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label08:
        if r7 == null goto label19;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Test-Error: ");

        $r22 = virtualinvoke r7.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

     label09:
        $r18 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke r0.<com.android.server.DiskStatsService: void reportFreeSpace(java.io.File,java.lang.String,java.io.PrintWriter)>($r18, "Data", r2);

        $r20 = staticinvoke <android.os.Environment: java.io.File getDownloadCacheDirectory()>();

        specialinvoke r0.<com.android.server.DiskStatsService: void reportFreeSpace(java.io.File,java.lang.String,java.io.PrintWriter)>($r20, "Cache", r2);

        $r19 = new java.io.File;

        specialinvoke $r19.<java.io.File: void <init>(java.lang.String)>("/system");

        specialinvoke r0.<com.android.server.DiskStatsService: void reportFreeSpace(java.io.File,java.lang.String,java.io.PrintWriter)>($r19, "System", r2);

        return;

     label10:
        $r23 := @caughtexception;

        r9 = $r23;

     label11:
        r7 = r9;

        if r6 == null goto label07;

     label12:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label13:
        goto label07;

     label14:
        $r25 := @caughtexception;

        goto label07;

     label15:
        $r21 := @caughtexception;

        r11 = $r21;

     label16:
        if r6 == null goto label18;

     label17:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label18:
        throw r11;

     label19:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Latency: ");

        $l4 = l2 - l1;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ms [512B Data Write]");

        goto label09;

     label20:
        $r28 := @caughtexception;

        goto label18;

     label21:
        $r27 := @caughtexception;

        goto label07;

     label22:
        $r24 := @caughtexception;

        r11 = $r24;

        r6 = r8;

        goto label16;

     label23:
        $r26 := @caughtexception;

        r9 = $r26;

        r6 = r8;

        goto label11;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.io.IOException from label04 to label05 with label23;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.io.IOException from label06 to label07 with label21;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label17 to label18 with label20;
    }

    public static void <clinit>()
    {
        <com.android.server.DiskStatsService: java.lang.String TAG> = "DiskStatsService";

        return;
    }
}
