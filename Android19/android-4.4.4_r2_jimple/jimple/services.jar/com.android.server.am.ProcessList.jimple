final class com.android.server.am.ProcessList extends java.lang.Object
{
    static final int BACKUP_APP_ADJ;
    static final int CACHED_APP_MAX_ADJ;
    static final int CACHED_APP_MIN_ADJ;
    static final int FOREGROUND_APP_ADJ;
    static final int HEAVY_WEIGHT_APP_ADJ;
    static final int HOME_APP_ADJ;
    static final int MAX_CACHED_APPS;
    private static final int MAX_EMPTY_APPS;
    static final long MAX_EMPTY_TIME;
    static final int MIN_CACHED_APPS;
    static final int MIN_CRASH_INTERVAL;
    static final int NATIVE_ADJ;
    static final int PAGE_SIZE;
    static final int PERCEPTIBLE_APP_ADJ;
    static final int PERSISTENT_PROC_ADJ;
    static final int PREVIOUS_APP_ADJ;
    public static final int PROC_MEM_CACHED;
    public static final int PROC_MEM_IMPORTANT;
    public static final int PROC_MEM_PERSISTENT;
    public static final int PROC_MEM_SERVICE;
    public static final int PROC_MEM_TOP;
    public static final int PSS_ALL_INTERVAL;
    private static final int PSS_FIRST_BACKGROUND_INTERVAL;
    private static final int PSS_FIRST_CACHED_INTERVAL;
    private static final int PSS_FIRST_TOP_INTERVAL;
    public static final int PSS_MAX_INTERVAL;
    public static final int PSS_MIN_TIME_FROM_STATE_CHANGE;
    private static final int PSS_SAME_CACHED_INTERVAL;
    private static final int PSS_SAME_IMPORTANT_INTERVAL;
    private static final int PSS_SAME_SERVICE_INTERVAL;
    private static final int PSS_SHORT_INTERVAL;
    static final int SERVICE_ADJ;
    static final int SERVICE_B_ADJ;
    static final int SYSTEM_ADJ;
    static final int TRIM_CACHED_APPS;
    static final int TRIM_CRITICAL_THRESHOLD;
    static final int TRIM_EMPTY_APPS;
    static final int TRIM_LOW_THRESHOLD;
    static final int UNKNOWN_ADJ;
    static final int VISIBLE_APP_ADJ;
    private static final long[] sFirstAwakePssTimes;
    private static final int[] sProcStateToProcMem;
    private static final long[] sSameAwakePssTimes;
    private long mCachedRestoreLevel;
    private boolean mHaveDisplaySize;
    private final int[] mOomAdj;
    private final long[] mOomMinFree;
    private final long[] mOomMinFreeHigh;
    private final long[] mOomMinFreeLow;
    private final long mTotalMemMb;

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r0;
        long[] $r1, $r2;

        <com.android.server.am.ProcessList: int VISIBLE_APP_ADJ> = 1;

        <com.android.server.am.ProcessList: int UNKNOWN_ADJ> = 16;

        <com.android.server.am.ProcessList: int TRIM_LOW_THRESHOLD> = 5;

        <com.android.server.am.ProcessList: int TRIM_CRITICAL_THRESHOLD> = 3;

        <com.android.server.am.ProcessList: int SYSTEM_ADJ> = -16;

        <com.android.server.am.ProcessList: int SERVICE_B_ADJ> = 8;

        <com.android.server.am.ProcessList: int SERVICE_ADJ> = 5;

        <com.android.server.am.ProcessList: int PSS_SHORT_INTERVAL> = 120000;

        <com.android.server.am.ProcessList: int PSS_SAME_SERVICE_INTERVAL> = 1200000;

        <com.android.server.am.ProcessList: int PSS_SAME_IMPORTANT_INTERVAL> = 900000;

        <com.android.server.am.ProcessList: int PSS_SAME_CACHED_INTERVAL> = 1800000;

        <com.android.server.am.ProcessList: int PSS_MIN_TIME_FROM_STATE_CHANGE> = 15000;

        <com.android.server.am.ProcessList: int PSS_MAX_INTERVAL> = 1800000;

        <com.android.server.am.ProcessList: int PSS_FIRST_TOP_INTERVAL> = 10000;

        <com.android.server.am.ProcessList: int PSS_FIRST_CACHED_INTERVAL> = 30000;

        <com.android.server.am.ProcessList: int PSS_FIRST_BACKGROUND_INTERVAL> = 20000;

        <com.android.server.am.ProcessList: int PSS_ALL_INTERVAL> = 600000;

        <com.android.server.am.ProcessList: int PROC_MEM_TOP> = 1;

        <com.android.server.am.ProcessList: int PROC_MEM_SERVICE> = 3;

        <com.android.server.am.ProcessList: int PROC_MEM_PERSISTENT> = 0;

        <com.android.server.am.ProcessList: int PROC_MEM_IMPORTANT> = 2;

        <com.android.server.am.ProcessList: int PROC_MEM_CACHED> = 4;

        <com.android.server.am.ProcessList: int PREVIOUS_APP_ADJ> = 7;

        <com.android.server.am.ProcessList: int PERSISTENT_PROC_ADJ> = -12;

        <com.android.server.am.ProcessList: int PERCEPTIBLE_APP_ADJ> = 2;

        <com.android.server.am.ProcessList: int PAGE_SIZE> = 4096;

        <com.android.server.am.ProcessList: int NATIVE_ADJ> = -17;

        <com.android.server.am.ProcessList: int MIN_CRASH_INTERVAL> = 60000;

        <com.android.server.am.ProcessList: int MIN_CACHED_APPS> = 2;

        <com.android.server.am.ProcessList: long MAX_EMPTY_TIME> = 1800000L;

        <com.android.server.am.ProcessList: int MAX_CACHED_APPS> = 24;

        <com.android.server.am.ProcessList: int HOME_APP_ADJ> = 6;

        <com.android.server.am.ProcessList: int HEAVY_WEIGHT_APP_ADJ> = 4;

        <com.android.server.am.ProcessList: int FOREGROUND_APP_ADJ> = 0;

        <com.android.server.am.ProcessList: int CACHED_APP_MIN_ADJ> = 9;

        <com.android.server.am.ProcessList: int CACHED_APP_MAX_ADJ> = 15;

        <com.android.server.am.ProcessList: int BACKUP_APP_ADJ> = 3;

        $i0 = staticinvoke <com.android.server.am.ProcessList: int computeEmptyProcessLimit(int)>(24);

        <com.android.server.am.ProcessList: int MAX_EMPTY_APPS> = $i0;

        $i1 = <com.android.server.am.ProcessList: int MAX_EMPTY_APPS>;

        $i2 = $i1 / 2;

        <com.android.server.am.ProcessList: int TRIM_EMPTY_APPS> = $i2;

        $i3 = <com.android.server.am.ProcessList: int MAX_EMPTY_APPS>;

        $i4 = 24 - $i3;

        $i5 = 2 * $i4;

        $i6 = $i5 / 3;

        <com.android.server.am.ProcessList: int TRIM_CACHED_APPS> = $i6;

        $r0 = newarray (int)[14];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 1;

        $r0[3] = 2;

        $r0[4] = 2;

        $r0[5] = 2;

        $r0[6] = 2;

        $r0[7] = 3;

        $r0[8] = 4;

        $r0[9] = 4;

        $r0[10] = 4;

        $r0[11] = 4;

        $r0[12] = 4;

        $r0[13] = 4;

        <com.android.server.am.ProcessList: int[] sProcStateToProcMem> = $r0;

        $r1 = newarray (long)[14];

        $r1[0] = 120000L;

        $r1[1] = 120000L;

        $r1[2] = 10000L;

        $r1[3] = 20000L;

        $r1[4] = 20000L;

        $r1[5] = 20000L;

        $r1[6] = 20000L;

        $r1[7] = 20000L;

        $r1[8] = 30000L;

        $r1[9] = 30000L;

        $r1[10] = 30000L;

        $r1[11] = 30000L;

        $r1[12] = 30000L;

        $r1[13] = 30000L;

        <com.android.server.am.ProcessList: long[] sFirstAwakePssTimes> = $r1;

        $r2 = newarray (long)[14];

        $r2[0] = 900000L;

        $r2[1] = 900000L;

        $r2[2] = 120000L;

        $r2[3] = 900000L;

        $r2[4] = 900000L;

        $r2[5] = 900000L;

        $r2[6] = 900000L;

        $r2[7] = 1200000L;

        $r2[8] = 1200000L;

        $r2[9] = 1800000L;

        $r2[10] = 1800000L;

        $r2[11] = 1800000L;

        $r2[12] = 1800000L;

        $r2[13] = 1800000L;

        <com.android.server.am.ProcessList: long[] sSameAwakePssTimes> = $r2;

        return;
    }

    void <init>()
    {
        com.android.server.am.ProcessList r0;
        com.android.internal.util.MemInfoReader r1, $r7;
        int[] $r2, $r5;
        long[] $r3, $r4, $r6;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.android.server.am.ProcessList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (int)[6];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 2;

        $r2[3] = 3;

        $r2[4] = 9;

        $r2[5] = 15;

        r0.<com.android.server.am.ProcessList: int[] mOomAdj> = $r2;

        $r3 = newarray (long)[6];

        $r3[0] = 8192L;

        $r3[1] = 12288L;

        $r3[2] = 16384L;

        $r3[3] = 24576L;

        $r3[4] = 28672L;

        $r3[5] = 32768L;

        r0.<com.android.server.am.ProcessList: long[] mOomMinFreeLow> = $r3;

        $r4 = newarray (long)[6];

        $r4[0] = 49152L;

        $r4[1] = 61440L;

        $r4[2] = 73728L;

        $r4[3] = 86016L;

        $r4[4] = 98304L;

        $r4[5] = 122880L;

        r0.<com.android.server.am.ProcessList: long[] mOomMinFreeHigh> = $r4;

        $r5 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i0 = lengthof $r5;

        $r6 = newarray (long)[$i0];

        r0.<com.android.server.am.ProcessList: long[] mOomMinFree> = $r6;

        $r7 = new com.android.internal.util.MemInfoReader;

        specialinvoke $r7.<com.android.internal.util.MemInfoReader: void <init>()>();

        r1 = $r7;

        virtualinvoke r1.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        $l1 = virtualinvoke r1.<com.android.internal.util.MemInfoReader: long getTotalSize()>();

        $l2 = $l1 / 1048576L;

        r0.<com.android.server.am.ProcessList: long mTotalMemMb> = $l2;

        specialinvoke r0.<com.android.server.am.ProcessList: void updateOomLevels(int,int,boolean)>(0, 0, 0);

        return;
    }

    public static void appendRamKb(java.lang.StringBuilder, long)
    {
        java.lang.StringBuilder r0;
        long l0, $l3;
        int i1, i2;
        byte $b4;

        r0 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        i1 = 0;

        i2 = 10;

     label1:
        if i1 >= 6 goto label3;

        $l3 = (long) i2;

        $b4 = l0 cmp $l3;

        if $b4 >= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        i1 = i1 + 1;

        i2 = i2 * 10;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        return;
    }

    private static java.lang.String buildOomTag(java.lang.String, java.lang.String, int, int)
    {
        java.lang.String r0, r1, $r5, $r7, $r11;
        int i0, i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i0 != i1 goto label2;

        if r1 != null goto label1;

        return r0;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $i2 = i0 - i1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static int computeEmptyProcessLimit(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 * 2;

        $i2 = $i1 / 3;

        return $i2;
    }

    public static long computeNextPssTime(int, boolean, boolean, long)
    {
        int i0;
        boolean z0, z1;
        long l1, $l2, $l3;
        long[] r0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        l1 := @parameter3: long;

        if z1 == 0 goto label3;

        if z0 == 0 goto label2;

        r0 = <com.android.server.am.ProcessList: long[] sFirstAwakePssTimes>;

     label1:
        $l2 = r0[i0];

        $l3 = l1 + $l2;

        return $l3;

     label2:
        r0 = <com.android.server.am.ProcessList: long[] sSameAwakePssTimes>;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        r0 = <com.android.server.am.ProcessList: long[] sFirstAwakePssTimes>;

        goto label1;

     label4:
        r0 = <com.android.server.am.ProcessList: long[] sSameAwakePssTimes>;

        goto label1;
    }

    public static java.lang.String makeOomAdjString(int)
    {
        int i0;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        i0 := @parameter0: int;

        if i0 < 9 goto label01;

        $r13 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("cch", "  ", i0, 9);

        return $r13;

     label01:
        if i0 < 8 goto label02;

        $r12 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("svcb ", null, i0, 8);

        return $r12;

     label02:
        if i0 < 7 goto label03;

        $r11 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("prev ", null, i0, 7);

        return $r11;

     label03:
        if i0 < 6 goto label04;

        $r10 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("home ", null, i0, 6);

        return $r10;

     label04:
        if i0 < 5 goto label05;

        $r9 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("svc  ", null, i0, 5);

        return $r9;

     label05:
        if i0 < 4 goto label06;

        $r8 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("hvy  ", null, i0, 4);

        return $r8;

     label06:
        if i0 < 3 goto label07;

        $r7 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("bkup ", null, i0, 3);

        return $r7;

     label07:
        if i0 < 2 goto label08;

        $r6 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("prcp ", null, i0, 2);

        return $r6;

     label08:
        if i0 < 1 goto label09;

        $r5 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("vis  ", null, i0, 1);

        return $r5;

     label09:
        if i0 < 0 goto label10;

        $r4 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("fore ", null, i0, 0);

        return $r4;

     label10:
        if i0 < -12 goto label11;

        $r3 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("pers ", null, i0, -12);

        return $r3;

     label11:
        if i0 < -16 goto label12;

        $r2 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("sys  ", null, i0, -16);

        return $r2;

     label12:
        if i0 < -17 goto label13;

        $r1 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,int,int)>("ntv  ", null, i0, -17);

        return $r1;

     label13:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public static java.lang.String makeProcStateString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label02;
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            case 13: goto label16;
            default: goto label01;
        };

     label01:
        return "??";

     label02:
        return "N ";

     label03:
        return "P ";

     label04:
        return "PU";

     label05:
        return "T ";

     label06:
        return "IF";

     label07:
        return "IB";

     label08:
        return "BU";

     label09:
        return "HW";

     label10:
        return "S ";

     label11:
        return "R ";

     label12:
        return "HO";

     label13:
        return "LA";

     label14:
        return "CA";

     label15:
        return "Ca";

     label16:
        return "CE";
    }

    public static boolean procStatesDifferForMem(int, int)
    {
        int i0, i1, $i2, $i3;
        int[] $r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = <com.android.server.am.ProcessList: int[] sProcStateToProcMem>;

        $i3 = $r0[i0];

        $r1 = <com.android.server.am.ProcessList: int[] sProcStateToProcMem>;

        $i2 = $r1[i1];

        if $i3 == $i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void updateOomLevels(int, int, boolean)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i11, $i15, $i21, $i22, $i23, $i25, $i26, $i30, $i32, $i34, $i35, $i41, $i42, $i44;
        boolean z0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        java.lang.StringBuilder r1, r2, $r4, $r5;
        long[] r3, $r18, $r19, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34;
        long l10, l12, $l13, $l14, $l19, $l20, $l24, $l27, $l28, $l29, $l31, $l33, $l37, $l38, $l39, $l40, $l43, $l45, $l46, $l47, $l48;
        byte $b16, $b17, $b18, $b36;
        android.content.res.Resources $r6, $r7, $r10, $r12;
        int[] $r8, $r9, $r16, $r22, $r23, $r25, $r28;
        java.lang.String $r11, $r13, $r14;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $l13 = r0.<com.android.server.am.ProcessList: long mTotalMemMb>;

        $l14 = $l13 - 300L;

        $f3 = (float) $l14;

        f0 = $f3 / 400.0F;

        $i15 = i0 * i1;

        $f6 = (float) $i15;

        $f4 = (float) 384000;

        $f5 = $f6 - $f4;

        $f7 = (float) 640000;

        f1 = $f5 / $f7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        $b18 = f0 cmpl f1;

        if $b18 <= 0 goto label04;

        f2 = f0;

     label01:
        $b16 = f2 cmpg 0.0F;

        if $b16 >= 0 goto label05;

        f2 = 0.0F;

     label02:
        $r7 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i2 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>(17694729);

        $r6 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i3 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>(17694728);

        i4 = 0;

     label03:
        $r8 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i21 = lengthof $r8;

        if i4 >= $i21 goto label06;

        $r31 = r0.<com.android.server.am.ProcessList: long[] mOomMinFreeLow>;

        l10 = $r31[i4];

        $r34 = r0.<com.android.server.am.ProcessList: long[] mOomMinFreeHigh>;

        l12 = $r34[i4];

        $r33 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $f19 = (float) l10;

        $l48 = l12 - l10;

        $f21 = (float) $l48;

        $f20 = f2 * $f21;

        $f18 = $f19 + $f20;

        $l47 = (long) $f18;

        $r33[i4] = $l47;

        i4 = i4 + 1;

        goto label03;

     label04:
        f2 = f1;

        goto label01;

     label05:
        $b17 = f2 cmpl 1.0F;

        if $b17 <= 0 goto label02;

        f2 = 1.0F;

        goto label02;

     label06:
        if i3 < 0 goto label08;

        i11 = 0;

     label07:
        $r25 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i44 = lengthof $r25;

        if i11 >= $i44 goto label08;

        $r30 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $f13 = (float) i3;

        $r29 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $l43 = $r29[i11];

        $f14 = (float) $l43;

        $f17 = $f13 * $f14;

        $r32 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $r28 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i41 = lengthof $r28;

        $i42 = -1 + $i41;

        $l46 = $r32[$i42];

        $f16 = (float) $l46;

        $f15 = $f17 / $f16;

        $l45 = (long) $f15;

        $r30[i11] = $l45;

        i11 = i11 + 1;

        goto label07;

     label08:
        if i2 == 0 goto label11;

        i9 = 0;

     label09:
        $r22 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i32 = lengthof $r22;

        if i9 >= $i32 goto label11;

        r3 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $l38 = r3[i9];

        $f9 = (float) i2;

        $r19 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $l31 = $r19[i9];

        $f8 = (float) $l31;

        $f12 = $f9 * $f8;

        $r24 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $r23 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i34 = lengthof $r23;

        $i35 = -1 + $i34;

        $l33 = $r24[$i35];

        $f10 = (float) $l33;

        $f11 = $f12 / $f10;

        $l39 = (long) $f11;

        $l40 = $l38 + $l39;

        r3[i9] = $l40;

        $r27 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $l37 = $r27[i9];

        $b36 = $l37 cmp 0L;

        if $b36 >= 0 goto label10;

        $r26 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $r26[i9] = 0L;

     label10:
        i9 = i9 + 1;

        goto label09;

     label11:
        $l19 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(15);

        $l20 = $l19 / 1024L;

        $l24 = $l20 / 3L;

        r0.<com.android.server.am.ProcessList: long mCachedRestoreLevel> = $l24;

        i5 = 0;

     label12:
        $r9 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i23 = lengthof $r9;

        if i5 >= $i23 goto label14;

        if i5 <= 0 goto label13;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label13:
        $r16 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i30 = $r16[i5];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r18 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $l27 = $r18[i5];

        $l28 = 1024L * $l27;

        $l29 = $l28 / 4096L;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l29);

        i5 = i5 + 1;

        goto label12;

     label14:
        $i22 = i0 * i1;

        $i26 = 4 * $i22;

        $i25 = 3 * $i26;

        i6 = $i25 / 1024;

        $r10 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i7 = virtualinvoke $r10.<android.content.res.Resources: int getInteger(int)>(17694731);

        $r12 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i8 = virtualinvoke $r12.<android.content.res.Resources: int getInteger(int)>(17694730);

        if i8 < 0 goto label15;

        i6 = i8;

     label15:
        if i7 == 0 goto label16;

        i6 = i6 + i7;

        if i6 >= 0 goto label16;

        i6 = 0;

     label16:
        if z0 == 0 goto label17;

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ProcessList: void writeFile(java.lang.String,java.lang.String)>("/sys/module/lowmemorykiller/parameters/adj", $r11);

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ProcessList: void writeFile(java.lang.String,java.lang.String)>("/sys/module/lowmemorykiller/parameters/minfree", $r14);

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i6);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.sysctl.extra_free_kbytes", $r13);

     label17:
        return;
    }

    private void writeFile(java.lang.String, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1, r2, $r18;
        java.io.FileOutputStream r3, r4, $r11;
        java.lang.Throwable r6, $r13, $r22;
        byte[] $r12;
        java.io.IOException $r14, $r16, $r20, $r21, $r23;
        java.lang.StringBuilder $r15, $r17, $r19;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = null;

     label01:
        $r11 = new java.io.FileOutputStream;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        r4 = $r11;

     label02:
        $r12 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[])>($r12);

     label03:
        if r4 == null goto label20;

     label04:
        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label05:
        return;

     label06:
        $r21 := @caughtexception;

        return;

     label07:
        $r20 := @caughtexception;

     label08:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label09:
        if r3 == null goto label05;

     label10:
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label11:
        return;

     label12:
        $r14 := @caughtexception;

        return;

     label13:
        $r13 := @caughtexception;

        r6 = $r13;

     label14:
        if r3 == null goto label16;

     label15:
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label16:
        throw r6;

     label17:
        $r23 := @caughtexception;

        goto label16;

     label18:
        $r22 := @caughtexception;

        r6 = $r22;

        r3 = r4;

        goto label14;

     label19:
        $r16 := @caughtexception;

        r3 = r4;

        goto label08;

     label20:
        return;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label02 to label03 with label19;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label15 to label16 with label17;
    }

    void applyDisplaySize(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.wm.WindowManagerService r1;
        android.graphics.Point r2, $r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        $z0 = r0.<com.android.server.am.ProcessList: boolean mHaveDisplaySize>;

        if $z0 != 0 goto label1;

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        r2 = $r3;

        virtualinvoke r1.<com.android.server.wm.WindowManagerService: void getBaseDisplaySize(int,android.graphics.Point)>(0, r2);

        $i0 = r2.<android.graphics.Point: int x>;

        if $i0 == 0 goto label1;

        $i1 = r2.<android.graphics.Point: int y>;

        if $i1 == 0 goto label1;

        $i3 = r2.<android.graphics.Point: int x>;

        $i2 = r2.<android.graphics.Point: int y>;

        specialinvoke r0.<com.android.server.am.ProcessList: void updateOomLevels(int,int,boolean)>($i3, $i2, 1);

        r0.<com.android.server.am.ProcessList: boolean mHaveDisplaySize> = 1;

     label1:
        return;
    }

    long getCachedRestoreThresholdKb()
    {
        com.android.server.am.ProcessList r0;
        long $l0;

        r0 := @this: com.android.server.am.ProcessList;

        $l0 = r0.<com.android.server.am.ProcessList: long mCachedRestoreLevel>;

        return $l0;
    }

    long getMemLevel(int)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, $i2, $i3, $i4, $i7;
        int[] $r1, $r2, $r4;
        long[] $r3, $r5;
        long $l5, $l6, $l8, $l9;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $r4 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i7 = $r4[i1];

        if i0 > $i7 goto label2;

        $r5 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $l8 = $r5[i1];

        $l9 = 1024L * $l8;

        return $l9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.android.server.am.ProcessList: long[] mOomMinFree>;

        $r2 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i3 = lengthof $r2;

        $i4 = -1 + $i3;

        $l5 = $r3[$i4];

        $l6 = 1024L * $l5;

        return $l6;
    }
}
