class com.android.server.TelephonyRegistry extends com.android.internal.telephony.ITelephonyRegistry$Stub
{
    private static final boolean DBG;
    private static final boolean DBG_LOC;
    private static final int MSG_USER_SWITCHED;
    static final int PHONE_STATE_PERMISSION_MASK;
    private static final java.lang.String TAG;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private boolean mCallForwarding;
    private java.lang.String mCallIncomingNumber;
    private int mCallState;
    private java.util.List mCellInfo;
    private android.os.Bundle mCellLocation;
    private java.util.ArrayList mConnectedApns;
    private final android.content.Context mContext;
    private int mDataActivity;
    private java.lang.String mDataConnectionApn;
    private android.net.LinkCapabilities mDataConnectionLinkCapabilities;
    private android.net.LinkProperties mDataConnectionLinkProperties;
    private int mDataConnectionNetworkType;
    private boolean mDataConnectionPossible;
    private java.lang.String mDataConnectionReason;
    private int mDataConnectionState;
    private final android.os.Handler mHandler;
    private boolean mMessageWaiting;
    private int mOtaspMode;
    private final java.util.ArrayList mRecords;
    private final java.util.ArrayList mRemoveList;
    private android.telephony.ServiceState mServiceState;
    private android.telephony.SignalStrength mSignalStrength;

    void <init>(android.content.Context)
    {
        com.android.server.TelephonyRegistry r0;
        android.content.Context r1;
        android.telephony.CellLocation r2;
        java.util.ArrayList $r3, $r4, $r11;
        android.telephony.ServiceState $r5;
        android.telephony.SignalStrength $r6;
        android.os.Bundle $r7, $r12;
        com.android.server.TelephonyRegistry$1 $r8;
        com.android.server.TelephonyRegistry$2 $r9;
        com.android.internal.app.IBatteryStats $r10;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.telephony.ITelephonyRegistry$Stub: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords> = $r4;

        r0.<com.android.server.TelephonyRegistry: int mCallState> = 0;

        r0.<com.android.server.TelephonyRegistry: java.lang.String mCallIncomingNumber> = "";

        $r5 = new android.telephony.ServiceState;

        specialinvoke $r5.<android.telephony.ServiceState: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState mServiceState> = $r5;

        $r6 = new android.telephony.SignalStrength;

        specialinvoke $r6.<android.telephony.SignalStrength: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength mSignalStrength> = $r6;

        r0.<com.android.server.TelephonyRegistry: boolean mMessageWaiting> = 0;

        r0.<com.android.server.TelephonyRegistry: boolean mCallForwarding> = 0;

        r0.<com.android.server.TelephonyRegistry: int mDataActivity> = 0;

        r0.<com.android.server.TelephonyRegistry: int mDataConnectionState> = -1;

        r0.<com.android.server.TelephonyRegistry: boolean mDataConnectionPossible> = 0;

        r0.<com.android.server.TelephonyRegistry: java.lang.String mDataConnectionReason> = "";

        r0.<com.android.server.TelephonyRegistry: java.lang.String mDataConnectionApn> = "";

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.os.Bundle mCellLocation> = $r7;

        r0.<com.android.server.TelephonyRegistry: int mOtaspMode> = 1;

        r0.<com.android.server.TelephonyRegistry: java.util.List mCellInfo> = null;

        $r8 = new com.android.server.TelephonyRegistry$1;

        specialinvoke $r8.<com.android.server.TelephonyRegistry$1: void <init>(com.android.server.TelephonyRegistry)>(r0);

        r0.<com.android.server.TelephonyRegistry: android.os.Handler mHandler> = $r8;

        $r9 = new com.android.server.TelephonyRegistry$2;

        specialinvoke $r9.<com.android.server.TelephonyRegistry$2: void <init>(com.android.server.TelephonyRegistry)>(r0);

        r0.<com.android.server.TelephonyRegistry: android.content.BroadcastReceiver mBroadcastReceiver> = $r9;

        r2 = staticinvoke <android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>();

        if r2 == null goto label1;

        $r12 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle mCellLocation>;

        virtualinvoke r2.<android.telephony.CellLocation: void fillInNotifierBundle(android.os.Bundle)>($r12);

     label1:
        r0.<com.android.server.TelephonyRegistry: android.content.Context mContext> = r1;

        $r10 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>();

        r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns> = $r11;

        return;
    }

    static android.os.Bundle access$000(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Bundle $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle mCellLocation>;

        return $r1;
    }

    static android.os.Handler access$100(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.os.Handler mHandler>;

        return $r1;
    }

    private void broadcastCallStateChanged(int, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        java.lang.String r1, $r8;
        long l1;
        java.lang.Throwable r2, $r15;
        android.content.Intent r4, $r6;
        com.android.internal.app.IBatteryStats $r5, $r12;
        com.android.internal.telephony.PhoneConstants$State $r7;
        boolean $z0;
        android.content.Context $r10;
        android.os.UserHandle $r11;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if i0 != 0 goto label4;

     label1:
        $r12 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r12.<com.android.internal.app.IBatteryStats: void notePhoneOff()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PHONE_STATE");

        r4 = $r6;

        $r7 = staticinvoke <com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.PhoneConstants$State convertCallState(int)>(i0);

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("state", $r8);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("incoming_number", r1);

     label3:
        $r10 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r4, $r11, "android.permission.READ_PHONE_STATE");

        return;

     label4:
        $r5 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void notePhoneOn()>();

     label5:
        goto label2;

     label6:
        $r14 := @caughtexception;

        goto label2;

     label7:
        $r15 := @caughtexception;

        r2 = $r15;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    private void broadcastDataConnectionFailed(java.lang.String, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r2;
        android.content.Intent r3, $r4;
        android.os.UserHandle $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DATA_CONNECTION_FAILED");

        r3 = $r4;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apnType", r2);

        $r8 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r7);

        return;
    }

    private void broadcastDataConnectionStateChanged(int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.LinkCapabilities, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        boolean z0, z1;
        java.lang.String r1, r2, r3, r8, $r11;
        android.net.LinkProperties r4;
        android.net.LinkCapabilities r5;
        android.content.Intent r6, $r7;
        com.android.internal.telephony.PhoneConstants$DataState $r9;
        android.content.Context $r14;
        android.os.UserHandle $r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.net.LinkProperties;

        r5 := @parameter6: android.net.LinkCapabilities;

        z1 := @parameter7: boolean;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ANY_DATA_STATE");

        r6 = $r7;

        $r9 = staticinvoke <com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.PhoneConstants$DataState convertDataState(int)>(i0);

        $r11 = virtualinvoke $r9.<com.android.internal.telephony.PhoneConstants$DataState: java.lang.String toString()>();

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("state", $r11);

        if z0 != 0 goto label1;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("networkUnvailable", 1);

     label1:
        if r1 == null goto label2;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r1);

     label2:
        if r4 == null goto label3;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("linkProperties", r4);

        r8 = virtualinvoke r4.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        if r8 == null goto label3;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("iface", r8);

     label3:
        if r5 == null goto label4;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("linkCapabilities", r5);

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("networkRoaming", 1);

     label5:
        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apn", r2);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apnType", r3);

        $r14 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r15 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r14.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r6, $r15);

        return;
    }

    private void broadcastServiceStateChanged(android.telephony.ServiceState)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.ServiceState r1;
        long l0;
        android.content.Intent r3, $r7;
        android.os.Bundle r4, $r8;
        java.lang.Throwable r5, $r13;
        com.android.internal.app.IBatteryStats $r6;
        int $i1;
        android.os.UserHandle $r10;
        android.os.RemoteException $r11;
        android.content.Context $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.ServiceState;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        $i1 = virtualinvoke r1.<android.telephony.ServiceState: int getState()>();

        interfaceinvoke $r6.<com.android.internal.app.IBatteryStats: void notePhoneState(int)>($i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SERVICE_STATE");

        r3 = $r7;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r4 = $r8;

        virtualinvoke r1.<android.telephony.ServiceState: void fillInNotifierBundle(android.os.Bundle)>(r4);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r4);

        $r12 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r10);

        return;

     label3:
        $r13 := @caughtexception;

        r5 = $r13;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label4:
        $r11 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void broadcastSignalStrengthChanged(android.telephony.SignalStrength)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.SignalStrength r1;
        long l0;
        android.content.Intent r3, $r7;
        android.os.Bundle r4, $r9;
        java.lang.Throwable r5, $r13;
        com.android.internal.app.IBatteryStats $r6;
        android.content.Context $r11;
        android.os.UserHandle $r12;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.SignalStrength;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r6.<com.android.internal.app.IBatteryStats: void notePhoneSignalStrength(android.telephony.SignalStrength)>(r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SIG_STR");

        r3 = $r7;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        r4 = $r9;

        virtualinvoke r1.<android.telephony.SignalStrength: void fillInNotifierBundle(android.os.Bundle)>(r4);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r4);

        $r11 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r12);

        return;

     label3:
        $r13 := @caughtexception;

        r5 = $r13;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label4:
        $r14 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void checkListenerPermission(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1, $i2, $i3;
        android.content.Context $r1, $r2, $r3;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_COARSE_LOCATION", null);

     label1:
        $i2 = i0 & 1024;

        if $i2 == 0 goto label2;

        $r2 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_COARSE_LOCATION", null);

     label2:
        $i3 = i0 & 236;

        if $i3 == 0 goto label3;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_PHONE_STATE", null);

     label3:
        return;
    }

    private boolean checkNotifyPermission(java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        android.content.Context $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.MODIFY_PHONE_STATE");

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Modify Phone State Permission Denial: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return 0;
    }

    private void handleRemoveListLocked()
    {
        com.android.server.TelephonyRegistry r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r5;
        android.os.IBinder $r6;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.os.IBinder) $r5;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r6);

        goto label1;

     label2:
        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

     label3:
        return;
    }

    private void remove(android.os.IBinder)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.IBinder r1, $r8;
        java.util.ArrayList r2, $r4, $r5, $r9;
        java.lang.Throwable r3, $r11;
        int i0, i1;
        java.lang.Object $r6;
        com.android.server.TelephonyRegistry$Record $r7;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.TelephonyRegistry$Record) $r6;

        $r8 = $r7.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        if $r8 != r1 goto label11;

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        exitmonitor r2;

     label05:
        return;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        com.android.server.TelephonyRegistry$Record r1;
        int i0, i2, i3, $i4, $i5;
        long l1;
        java.lang.Throwable r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i2 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $i4 = r1.<com.android.server.TelephonyRegistry$Record: int callerUid>;

        if $i4 != i2 goto label4;

        i3 = r1.<com.android.server.TelephonyRegistry$Record: int events>;

     label2:
        $i5 = i3 & i0;

        if $i5 == 0 goto label4;

        z0 = 1;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label4:
        z0 = 0;

        goto label3;

     label5:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.TelephonyRegistry r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.ArrayList r4, $r9, $r78;
        java.lang.Throwable r5, $r97;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Iterator r6;
        com.android.server.TelephonyRegistry$Record r7;
        android.content.Context $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r46, $r47, $r49, $r51, $r53, $r55, $r56, $r58, $r59, $r61, $r63, $r65, $r66, $r68, $r69, $r70, $r71, $r72, $r75, $r77, $r80, $r82, $r83, $r84, $r86, $r87, $r88, $r90, $r91, $r92, $r94, $r96, $r99;
        java.lang.String $r14, $r15, $r17, $r24, $r30, $r31, $r35, $r42, $r45, $r48, $r50, $r52, $r54, $r60, $r64, $r67, $r76, $r79, $r81, $r85, $r93, $r95, $r98;
        android.telephony.ServiceState $r22;
        android.telephony.SignalStrength $r25;
        boolean $z0, $z1, $z2, $z3;
        android.net.LinkProperties $r57;
        android.net.LinkCapabilities $r62;
        java.util.List $r73;
        android.os.Bundle $r74;
        java.lang.Object $r89;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r8 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $i1 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i1 == 0 goto label1;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump telephony.registry from from pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r99 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r98);

        return;

     label1:
        r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r4;

     label2:
        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("last known state:");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallState=");

        $i2 = r0.<com.android.server.TelephonyRegistry: int mCallState>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallIncomingNumber=");

        $r15 = r0.<com.android.server.TelephonyRegistry: java.lang.String mCallIncomingNumber>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServiceState=");

        $r22 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState mServiceState>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSignalStrength=");

        $r25 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength mSignalStrength>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMessageWaiting=");

        $z0 = r0.<com.android.server.TelephonyRegistry: boolean mMessageWaiting>;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallForwarding=");

        $z1 = r0.<com.android.server.TelephonyRegistry: boolean mCallForwarding>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataActivity=");

        $i3 = r0.<com.android.server.TelephonyRegistry: int mDataActivity>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionState=");

        $i4 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionState>;

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionPossible=");

        $z2 = r0.<com.android.server.TelephonyRegistry: boolean mDataConnectionPossible>;

        $r49 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionReason=");

        $r52 = r0.<com.android.server.TelephonyRegistry: java.lang.String mDataConnectionReason>;

        $r51 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionApn=");

        $r60 = r0.<com.android.server.TelephonyRegistry: java.lang.String mDataConnectionApn>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r54 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r54);

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionLinkProperties=");

        $r57 = r0.<com.android.server.TelephonyRegistry: android.net.LinkProperties mDataConnectionLinkProperties>;

        $r66 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionLinkCapabilities=");

        $r62 = r0.<com.android.server.TelephonyRegistry: android.net.LinkCapabilities mDataConnectionLinkCapabilities>;

        $r63 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCellLocation=");

        $r74 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle mCellLocation>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r76);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCellInfo=");

        $r73 = r0.<com.android.server.TelephonyRegistry: java.util.List mCellInfo>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        $r81 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r81);

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registrations: count=");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r79 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r79);

        $r78 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r6 = virtualinvoke $r78.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r89 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.TelephonyRegistry$Record) $r89;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r85 = r7.<com.android.server.TelephonyRegistry$Record: java.lang.String pkgForDebug>;

        $r86 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $i5 = r7.<com.android.server.TelephonyRegistry$Record: int events>;

        $r95 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        $r96 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r93 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r93);

     label4:
        goto label3;

     label5:
        $r97 := @caughtexception;

        r5 = $r97;

     label6:
        exitmonitor r4;

     label7:
        throw r5;

     label8:
        exitmonitor r4;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, $r22;
        com.android.internal.telephony.IPhoneStateListener r2, r7, $r12, $r13, $r15, $r16, $r18, $r21, $r23, $r26, $r27, $r31;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean z0, z1, z2, $z3, $z4;
        java.util.ArrayList r3, $r10, $r11, $r34;
        java.lang.Throwable r4, $r28, $r30;
        android.os.IBinder r5, $r8, $r29, $r35, $r37, $r39, $r41, $r44, $r46, $r48, $r50, $r52, $r54, $r56;
        com.android.server.TelephonyRegistry$Record r6, $r9;
        java.util.List $r14;
        android.telephony.SignalStrength $r17, $r24;
        android.os.Bundle $r19, $r20;
        android.telephony.ServiceState $r25, $r32;
        java.lang.Object $r33;
        android.os.RemoteException $r36, $r38, $r40, $r42, $r43, $r45, $r47, $r49, $r51, $r53, $r55;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.IPhoneStateListener;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        staticinvoke <android.os.UserHandle: int myUserId()>();

        if i0 == 0 goto label74;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void checkListenerPermission(int)>(i0);

        r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r3;

     label01:
        r5 = interfaceinvoke r2.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i2 goto label36;

     label04:
        $r34 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $r33 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r6 = (com.android.server.TelephonyRegistry$Record) $r33;

     label05:
        $r29 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        if r5 != $r29 goto label35;

     label06:
        $i5 = r6.<com.android.server.TelephonyRegistry$Record: int events>;

        r6.<com.android.server.TelephonyRegistry$Record: int events> = i0;

     label07:
        if z0 == 0 goto label33;

        $i8 = i0 & 1;

        if $i8 == 0 goto label09;

     label08:
        $r31 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r25 = new android.telephony.ServiceState;

        $r32 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState mServiceState>;

        specialinvoke $r25.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>($r32);

        interfaceinvoke $r31.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>($r25);

     label09:
        $i6 = i0 & 2;

        if $i6 == 0 goto label13;

     label10:
        $r24 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength mSignalStrength>;

        i4 = virtualinvoke $r24.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        r7 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

     label11:
        if i4 != 99 goto label12;

        i4 = -1;

     label12:
        interfaceinvoke r7.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>(i4);

     label13:
        $i7 = i0 & 4;

        if $i7 == 0 goto label15;

     label14:
        $r23 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $z4 = r0.<com.android.server.TelephonyRegistry: boolean mMessageWaiting>;

        interfaceinvoke $r23.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>($z4);

     label15:
        $i11 = i0 & 8;

        if $i11 == 0 goto label17;

     label16:
        $r27 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $z3 = r0.<com.android.server.TelephonyRegistry: boolean mCallForwarding>;

        interfaceinvoke $r27.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>($z3);

     label17:
        z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r6, 16);

     label18:
        if z2 == 0 goto label20;

     label19:
        $r26 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r19 = new android.os.Bundle;

        $r20 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle mCellLocation>;

        specialinvoke $r19.<android.os.Bundle: void <init>(android.os.Bundle)>($r20);

        interfaceinvoke $r26.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.os.Bundle)>($r19);

     label20:
        $i10 = i0 & 32;

        if $i10 == 0 goto label22;

     label21:
        $r18 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i17 = r0.<com.android.server.TelephonyRegistry: int mCallState>;

        $r22 = r0.<com.android.server.TelephonyRegistry: java.lang.String mCallIncomingNumber>;

        interfaceinvoke $r18.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>($i17, $r22);

     label22:
        $i9 = i0 & 64;

        if $i9 == 0 goto label24;

     label23:
        $r21 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i19 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionState>;

        $i18 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionNetworkType>;

        interfaceinvoke $r21.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>($i19, $i18);

     label24:
        $i14 = i0 & 128;

        if $i14 == 0 goto label26;

     label25:
        $r15 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i16 = r0.<com.android.server.TelephonyRegistry: int mDataActivity>;

        interfaceinvoke $r15.<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>($i16);

     label26:
        $i13 = i0 & 256;

        if $i13 == 0 goto label28;

     label27:
        $r16 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r17 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength mSignalStrength>;

        interfaceinvoke $r16.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>($r17);

     label28:
        $i12 = i0 & 512;

        if $i12 == 0 goto label30;

     label29:
        $r12 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i15 = r0.<com.android.server.TelephonyRegistry: int mOtaspMode>;

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onOtaspChanged(int)>($i15);

     label30:
        z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r6, 1024);

     label31:
        if z1 == 0 goto label33;

     label32:
        $r13 = r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.List mCellInfo>;

        interfaceinvoke $r13.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>($r14);

     label33:
        exitmonitor r3;

     label34:
        return;

     label35:
        i3 = i3 + 1;

        goto label03;

     label36:
        $r9 = new com.android.server.TelephonyRegistry$Record;

        specialinvoke $r9.<com.android.server.TelephonyRegistry$Record: void <init>(com.android.server.TelephonyRegistry$1)>(null);

        r6 = $r9;

     label37:
        r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder> = r5;

        r6.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback> = r2;

        r6.<com.android.server.TelephonyRegistry$Record: java.lang.String pkgForDebug> = r1;

        r6.<com.android.server.TelephonyRegistry$Record: int callerUid> = i1;

        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label38:
        goto label06;

     label39:
        exitmonitor r3;

     label40:
        throw r4;

     label41:
        $r51 := @caughtexception;

     label42:
        $r52 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r52);

     label43:
        goto label09;

     label44:
        $r45 := @caughtexception;

     label45:
        $r46 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r46);

     label46:
        goto label13;

     label47:
        $r53 := @caughtexception;

     label48:
        $r54 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r54);

     label49:
        goto label15;

     label50:
        $r43 := @caughtexception;

     label51:
        $r44 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r44);

     label52:
        goto label17;

     label53:
        $r47 := @caughtexception;

     label54:
        $r48 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r48);

     label55:
        goto label20;

     label56:
        $r36 := @caughtexception;

     label57:
        $r35 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r35);

     label58:
        goto label22;

     label59:
        $r38 := @caughtexception;

     label60:
        $r37 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r37);

     label61:
        goto label24;

     label62:
        $r49 := @caughtexception;

     label63:
        $r50 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r50);

     label64:
        goto label26;

     label65:
        $r55 := @caughtexception;

     label66:
        $r56 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r56);

     label67:
        goto label28;

     label68:
        $r42 := @caughtexception;

     label69:
        $r41 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r41);

     label70:
        goto label30;

     label71:
        $r40 := @caughtexception;

     label72:
        $r39 = r6.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r39);

     label73:
        goto label33;

     label74:
        $r8 = interfaceinvoke r2.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r8);

        return;

     label75:
        $r30 := @caughtexception;

        r4 = $r30;

        goto label39;

     label76:
        $r28 := @caughtexception;

        r4 = $r28;

        goto label39;

        catch java.lang.Throwable from label01 to label02 with label76;
        catch java.lang.Throwable from label04 to label05 with label75;
        catch java.lang.Throwable from label05 to label06 with label76;
        catch java.lang.Throwable from label06 to label07 with label76;
        catch android.os.RemoteException from label08 to label09 with label41;
        catch java.lang.Throwable from label08 to label09 with label76;
        catch android.os.RemoteException from label10 to label11 with label44;
        catch java.lang.Throwable from label10 to label11 with label76;
        catch android.os.RemoteException from label12 to label13 with label44;
        catch java.lang.Throwable from label12 to label13 with label76;
        catch android.os.RemoteException from label14 to label15 with label47;
        catch java.lang.Throwable from label14 to label15 with label76;
        catch android.os.RemoteException from label16 to label17 with label50;
        catch java.lang.Throwable from label16 to label17 with label76;
        catch java.lang.Throwable from label17 to label18 with label76;
        catch android.os.RemoteException from label19 to label20 with label53;
        catch java.lang.Throwable from label19 to label20 with label76;
        catch android.os.RemoteException from label21 to label22 with label56;
        catch java.lang.Throwable from label21 to label22 with label76;
        catch android.os.RemoteException from label23 to label24 with label59;
        catch java.lang.Throwable from label23 to label24 with label76;
        catch android.os.RemoteException from label25 to label26 with label62;
        catch java.lang.Throwable from label25 to label26 with label76;
        catch android.os.RemoteException from label27 to label28 with label65;
        catch java.lang.Throwable from label27 to label28 with label76;
        catch android.os.RemoteException from label29 to label30 with label68;
        catch java.lang.Throwable from label29 to label30 with label76;
        catch java.lang.Throwable from label30 to label31 with label76;
        catch android.os.RemoteException from label32 to label33 with label71;
        catch java.lang.Throwable from label32 to label33 with label76;
        catch java.lang.Throwable from label33 to label34 with label76;
        catch java.lang.Throwable from label36 to label37 with label75;
        catch java.lang.Throwable from label37 to label38 with label76;
        catch java.lang.Throwable from label39 to label40 with label76;
        catch java.lang.Throwable from label42 to label43 with label76;
        catch java.lang.Throwable from label45 to label46 with label76;
        catch java.lang.Throwable from label48 to label49 with label76;
        catch java.lang.Throwable from label51 to label52 with label76;
        catch java.lang.Throwable from label54 to label55 with label76;
        catch java.lang.Throwable from label57 to label58 with label76;
        catch java.lang.Throwable from label60 to label61 with label76;
        catch java.lang.Throwable from label63 to label64 with label76;
        catch java.lang.Throwable from label66 to label67 with label76;
        catch java.lang.Throwable from label69 to label70 with label76;
        catch java.lang.Throwable from label72 to label73 with label76;
    }

    public void notifyCallForwardingChanged(boolean)
    {
        com.android.server.TelephonyRegistry r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList r1, $r6, $r10;
        java.lang.Throwable r2, $r12;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        int i0, $i1;
        java.lang.Object $r7;
        android.os.RemoteException $r8;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.IBinder $r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallForwardingChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        r0.<com.android.server.TelephonyRegistry: boolean mCallForwarding> = z0;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r7;

        i0 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i1 = i0 & 8;

        if $i1 == 0 goto label03;

     label05:
        $r9 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>(z0);

     label06:
        goto label03;

     label07:
        $r8 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label03;

     label10:
        $r12 := @caughtexception;

        r2 = $r12;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyCallState(int, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.lang.String r1;
        java.util.ArrayList r2, $r7, $r12;
        java.lang.Throwable r3, $r13;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        boolean $z0, $z1;
        java.lang.Object $r8;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.IBinder $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label02:
        r0.<com.android.server.TelephonyRegistry: int mCallState> = i0;

        r0.<com.android.server.TelephonyRegistry: java.lang.String mCallIncomingNumber> = r1;

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r8;

        i1 = r5.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i2 = i1 & 32;

        if $i2 == 0 goto label03;

     label05:
        $r9 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>(i0, r1);

     label06:
        goto label03;

     label07:
        $r11 := @caughtexception;

     label08:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r10 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label09:
        goto label03;

     label10:
        $r13 := @caughtexception;

        r3 = $r13;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label14:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastCallStateChanged(int,java.lang.String)>(i0, r1);

        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyCellInfo(java.util.List)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.List r1;
        java.util.ArrayList r2, $r7, $r12;
        java.lang.Throwable r3, $r9;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        boolean z0, $z1, $z2;
        java.lang.Object $r8;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.RemoteException $r11;
        android.os.IBinder $r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.util.List;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCellInfo()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label02:
        r0.<com.android.server.TelephonyRegistry: java.util.List mCellInfo> = r1;

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r8;

        z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r5, 1024);

     label04:
        if z0 == 0 goto label03;

     label05:
        $r10 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>(r1);

     label06:
        goto label03;

     label07:
        $r11 := @caughtexception;

     label08:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label09:
        goto label03;

     label10:
        $r9 := @caughtexception;

        r3 = $r9;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyCellLocation(android.os.Bundle)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Bundle r1, $r10;
        java.util.ArrayList r2, $r7, $r14;
        java.lang.Throwable r3, $r11;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        boolean z0, $z1, $z2;
        java.lang.Object $r8;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.IBinder $r12;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.os.Bundle;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCellLocation()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label02:
        r0.<com.android.server.TelephonyRegistry: android.os.Bundle mCellLocation> = r1;

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r8;

        z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r5, 16);

     label04:
        if z0 == 0 goto label03;

     label05:
        $r9 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.os.Bundle)>($r10);

     label06:
        goto label03;

     label07:
        $r13 := @caughtexception;

     label08:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label09:
        goto label03;

     label10:
        $r11 := @caughtexception;

        r3 = $r11;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyDataActivity(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r6, $r11;
        java.lang.Throwable r2, $r8;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        boolean $z0, $z1;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataActivity()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        r0.<com.android.server.TelephonyRegistry: int mDataActivity> = i0;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r7;

        i1 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i2 = i1 & 128;

        if $i2 == 0 goto label03;

     label05:
        $r9 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>(i0);

     label06:
        goto label03;

     label07:
        $r10 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label09:
        goto label03;

     label10:
        $r8 := @caughtexception;

        r2 = $r8;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyDataConnection(int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.LinkCapabilities, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7;
        java.lang.String r1, r2, r3;
        android.net.LinkProperties r4;
        android.net.LinkCapabilities r5;
        java.util.ArrayList r6, $r11, $r12, $r14, $r16, $r18, $r20;
        java.lang.Throwable r7, $r17;
        java.util.Iterator r8;
        com.android.server.TelephonyRegistry$Record r9;
        java.lang.Object $r13;
        com.android.internal.telephony.IPhoneStateListener $r15;
        android.os.IBinder $r19;
        android.os.RemoteException $r21;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.net.LinkProperties;

        r5 := @parameter6: android.net.LinkCapabilities;

        i1 := @parameter7: int;

        z1 := @parameter8: boolean;

        $z6 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnection()");

        if $z6 != 0 goto label01;

        return;

     label01:
        r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r6;

        if i0 != 2 goto label22;

     label02:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        z5 = virtualinvoke $r14.<java.util.ArrayList: boolean contains(java.lang.Object)>(r3);

     label03:
        z3 = 0;

        if z5 != 0 goto label08;

     label04:
        $r18 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i3 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionState>;

     label05:
        z3 = 0;

        if i3 == i0 goto label08;

     label06:
        r0.<com.android.server.TelephonyRegistry: int mDataConnectionState> = i0;

     label07:
        z3 = 1;

     label08:
        r0.<com.android.server.TelephonyRegistry: boolean mDataConnectionPossible> = z0;

        r0.<com.android.server.TelephonyRegistry: java.lang.String mDataConnectionReason> = r1;

        r0.<com.android.server.TelephonyRegistry: android.net.LinkProperties mDataConnectionLinkProperties> = r4;

        r0.<com.android.server.TelephonyRegistry: android.net.LinkCapabilities mDataConnectionLinkCapabilities> = r5;

        $i4 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionNetworkType>;

        if $i4 == i1 goto label10;

        r0.<com.android.server.TelephonyRegistry: int mDataConnectionNetworkType> = i1;

     label09:
        z3 = 1;

     label10:
        if z3 == 0 goto label29;

     label11:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r8 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label28;

        $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.TelephonyRegistry$Record) $r13;

        i2 = r9.<com.android.server.TelephonyRegistry$Record: int events>;

     label13:
        $i7 = i2 & 64;

        if $i7 == 0 goto label12;

     label14:
        $r15 = r9.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i6 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionState>;

        $i5 = r0.<com.android.server.TelephonyRegistry: int mDataConnectionNetworkType>;

        interfaceinvoke $r15.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>($i6, $i5);

     label15:
        goto label12;

     label16:
        $r21 := @caughtexception;

     label17:
        $r20 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r19 = r9.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label18:
        goto label12;

     label19:
        $r17 := @caughtexception;

        r7 = $r17;

     label20:
        exitmonitor r6;

     label21:
        throw r7;

     label22:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        z2 = virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

     label23:
        z3 = 0;

        if z2 == 0 goto label08;

     label24:
        $r16 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        z4 = virtualinvoke $r16.<java.util.ArrayList: boolean isEmpty()>();

     label25:
        z3 = 0;

        if z4 == 0 goto label08;

     label26:
        r0.<com.android.server.TelephonyRegistry: int mDataConnectionState> = i0;

     label27:
        z3 = 1;

        goto label08;

     label28:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

     label29:
        exitmonitor r6;

     label30:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastDataConnectionStateChanged(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,boolean)>(i0, z0, r1, r2, r3, r4, r5, z1);

        return;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label22 to label23 with label19;
        catch java.lang.Throwable from label24 to label25 with label19;
        catch java.lang.Throwable from label26 to label27 with label19;
        catch java.lang.Throwable from label28 to label29 with label19;
        catch java.lang.Throwable from label29 to label30 with label19;
    }

    public void notifyDataConnectionFailed(java.lang.String, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnectionFailed()");

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastDataConnectionFailed(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void notifyMessageWaitingChanged(boolean)
    {
        com.android.server.TelephonyRegistry r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList r1, $r6, $r11;
        java.lang.Throwable r2, $r8;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        int i0, $i1;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyMessageWaitingChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        r0.<com.android.server.TelephonyRegistry: boolean mMessageWaiting> = z0;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r7;

        i0 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i1 = i0 & 4;

        if $i1 == 0 goto label03;

     label05:
        $r9 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>(z0);

     label06:
        goto label03;

     label07:
        $r10 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label09:
        goto label03;

     label10:
        $r8 := @caughtexception;

        r2 = $r8;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyOtaspChanged(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r6, $r11;
        java.lang.Throwable r2, $r8;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        boolean $z0, $z1;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyOtaspChanged()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        r0.<com.android.server.TelephonyRegistry: int mOtaspMode> = i0;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r7;

        i1 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i2 = i1 & 512;

        if $i2 == 0 goto label03;

     label05:
        $r9 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onOtaspChanged(int)>(i0);

     label06:
        goto label03;

     label07:
        $r10 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label09:
        goto label03;

     label10:
        $r8 := @caughtexception;

        r2 = $r8;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label14:
        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifyServiceState(android.telephony.ServiceState)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.ServiceState r1, $r10;
        java.util.ArrayList r2, $r7, $r13;
        java.lang.Throwable r3, $r14;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.Object $r8;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.IBinder $r11;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.ServiceState;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyServiceState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label02:
        r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState mServiceState> = r1;

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r8;

        i0 = r5.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i1 = i0 & 1;

        if $i1 == 0 goto label03;

     label05:
        $r9 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r10 = new android.telephony.ServiceState;

        specialinvoke $r10.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>(r1);

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>($r10);

     label06:
        goto label03;

     label07:
        $r12 := @caughtexception;

     label08:
        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label03;

     label10:
        $r14 := @caughtexception;

        r3 = $r14;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label14:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastServiceStateChanged(android.telephony.ServiceState)>(r1);

        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public void notifySignalStrength(android.telephony.SignalStrength)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.SignalStrength r1, $r11;
        java.util.ArrayList r2, $r9, $r14, $r19;
        java.lang.Throwable r3, $r16;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        int i0, i1, i2, $i3, $i4;
        com.android.internal.telephony.IPhoneStateListener r7, $r13;
        boolean $z0, $z1;
        java.lang.Object $r10;
        android.os.RemoteException $r12, $r17;
        android.os.IBinder $r15, $r18;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.SignalStrength;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifySignalStrength()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label02:
        r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength mSignalStrength> = r1;

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r10;

        i0 = r5.<com.android.server.TelephonyRegistry$Record: int events>;

     label04:
        $i4 = i0 & 256;

        if $i4 == 0 goto label06;

     label05:
        $r13 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r11 = new android.telephony.SignalStrength;

        specialinvoke $r11.<android.telephony.SignalStrength: void <init>(android.telephony.SignalStrength)>(r1);

        interfaceinvoke $r13.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>($r11);

     label06:
        i1 = r5.<com.android.server.TelephonyRegistry$Record: int events>;

     label07:
        $i3 = i1 & 2;

        if $i3 == 0 goto label03;

     label08:
        i2 = virtualinvoke r1.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        r7 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

     label09:
        if i2 != 99 goto label10;

        i2 = -1;

     label10:
        interfaceinvoke r7.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>(i2);

     label11:
        goto label03;

     label12:
        $r17 := @caughtexception;

     label13:
        $r19 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r18 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label14:
        goto label03;

     label15:
        $r16 := @caughtexception;

        r3 = $r16;

     label16:
        exitmonitor r2;

     label17:
        throw r3;

     label18:
        $r12 := @caughtexception;

     label19:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r15 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label20:
        goto label06;

     label21:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label22:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastSignalStrengthChanged(android.telephony.SignalStrength)>(r1);

        return;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch android.os.RemoteException from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
    }

    public void systemRunning()
    {
        com.android.server.TelephonyRegistry r0;
        android.content.IntentFilter r1, $r2;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r4 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.TelephonyRegistry: java.lang.String TAG> = "TelephonyRegistry";

        <com.android.server.TelephonyRegistry: int PHONE_STATE_PERMISSION_MASK> = 236;

        <com.android.server.TelephonyRegistry: int MSG_USER_SWITCHED> = 1;

        <com.android.server.TelephonyRegistry: boolean DBG_LOC> = 0;

        <com.android.server.TelephonyRegistry: boolean DBG> = 0;

        return;
    }
}
