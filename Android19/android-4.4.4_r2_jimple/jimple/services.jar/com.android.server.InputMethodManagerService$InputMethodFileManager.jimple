class com.android.server.InputMethodManagerService$InputMethodFileManager extends java.lang.Object
{
    private static final java.lang.String ADDITIONAL_SUBTYPES_FILE_NAME;
    private static final java.lang.String ATTR_ICON;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_IME_SUBTYPE_EXTRA_VALUE;
    private static final java.lang.String ATTR_IME_SUBTYPE_LOCALE;
    private static final java.lang.String ATTR_IME_SUBTYPE_MODE;
    private static final java.lang.String ATTR_IS_AUXILIARY;
    private static final java.lang.String ATTR_LABEL;
    private static final java.lang.String INPUT_METHOD_PATH;
    private static final java.lang.String NODE_IMI;
    private static final java.lang.String NODE_SUBTYPE;
    private static final java.lang.String NODE_SUBTYPES;
    private static final java.lang.String SYSTEM_PATH;
    private final android.util.AtomicFile mAdditionalInputMethodSubtypeFile;
    private final java.util.HashMap mAdditionalSubtypesMap;
    private final java.util.HashMap mMethodMap;

    public void <init>(java.util.HashMap, int)
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.util.HashMap r1, $r5, $r10, $r13;
        int i0;
        java.io.File r2, r3, r4, $r6, $r7, $r18, $r19;
        boolean $z0, $z1;
        android.util.AtomicFile $r8, $r9, $r11;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.lang.String $r16, $r17;
        java.lang.NullPointerException $r20;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter0: java.util.HashMap;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap> = $r5;

        if r1 != null goto label1;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("methodMap is null");

        throw $r20;

     label1:
        r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap> = r1;

        if i0 != 0 goto label4;

        $r19 = new java.io.File;

        $r18 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r18, "system");

        r2 = $r19;

     label2:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "inputmethod");

        r3 = $r6;

        $z0 = virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create dir.: ");

        $r16 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r17);

     label3:
        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "subtypes.xml");

        r4 = $r7;

        $r8 = new android.util.AtomicFile;

        specialinvoke $r8.<android.util.AtomicFile: void <init>(java.io.File)>(r4);

        r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile> = $r8;

        $z1 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label5;

        $r13 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r11 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void writeAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile,java.util.HashMap)>($r13, $r11, r1);

        return;

     label4:
        r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        goto label2;

     label5:
        $r10 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r9 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void readAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile)>($r10, $r9);

        return;
    }

    static void access$500(com.android.server.InputMethodManagerService$InputMethodFileManager, java.lang.String)
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: void deleteAllInputMethodSubtypes(java.lang.String)>(r1);

        return;
    }

    private void deleteAllInputMethodSubtypes(java.lang.String)
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4, $r6, $r8;
        java.lang.Throwable r3, $r9;
        android.util.AtomicFile $r7;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r8 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r7 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        $r6 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void writeAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile,java.util.HashMap)>($r8, $r7, $r6);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void readAdditionalInputMethodSubtypes(java.util.HashMap, android.util.AtomicFile)
    {
        java.util.HashMap r0;
        android.util.AtomicFile r1;
        java.io.FileInputStream r2;
        java.lang.Throwable r3, $r44, r69;
        java.lang.NumberFormatException r5, $r41;
        java.lang.String r7, r8, r15, r17, $r19, $r20, $r21, $r22, $r27, $r28, $r30, $r32, $r33, $r34, $r35, $r36, $r37, $r51, $r56, $r60;
        java.io.IOException r9, $r43, $r45, $r52, $r53, $r55, $r58;
        org.xmlpull.v1.XmlPullParserException r11, $r47, r62;
        org.xmlpull.v1.XmlPullParser r13;
        int i0, i1, i2, i3, $i6, $i8;
        java.util.ArrayList r14, r65;
        android.view.inputmethod.InputMethodSubtype r18, r68;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.StringBuilder $r23, $r24, $r48, $r49, $r50, $r57, $r59, $r61, r63, r64, r66, r67;
        java.lang.Integer $r26, $r29;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: android.util.AtomicFile;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return;

     label02:
        virtualinvoke r0.<java.util.HashMap: void clear()>();

        r2 = null;

     label03:
        r2 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r13 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

        interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label04:
        i1 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if i1 == 2 goto label06;

        if i1 != 1 goto label04;

     label06:
        $r20 = "subtypes";

        $r19 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label14;

        r62 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r62.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Xml doesn\'t start with subtypes");

        r69 = (java.lang.Throwable) r62;

        throw r69;

     label07:
        $r47 := @caughtexception;

        r11 = $r47;

     label08:
        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading subtypes: ");

        $r57 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r56);

     label09:
        if r2 == null goto label01;

     label10:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label11:
        return;

     label12:
        $r43 := @caughtexception;

        r7 = "InputMethodManagerService";

        r8 = "Failed to close.";

     label13:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r7, r8);

        return;

     label14:
        i0 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label15:
        r15 = null;

        r14 = null;

     label16:
        i2 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: int next()>();

     label17:
        if i2 != 3 goto label19;

     label18:
        $i8 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i0 goto label46;

     label19:
        if i2 == 1 goto label46;

        if i2 != 2 goto label16;

     label20:
        r17 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = "imi";

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z3 == 0 goto label36;

        r15 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z6 == 0 goto label28;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Invalid imi id found in subtypes.xml");

     label21:
        goto label16;

     label22:
        $r55 := @caughtexception;

        r9 = $r55;

     label23:
        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading subtypes: ");

        $r59 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r60);

     label24:
        if r2 == null goto label01;

     label25:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label26:
        return;

     label27:
        $r53 := @caughtexception;

        r7 = "InputMethodManagerService";

        r8 = "Failed to close.";

        goto label13;

     label28:
        r65 = new java.util.ArrayList;

        specialinvoke r65.<java.util.ArrayList: void <init>()>();

        r14 = r65;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r14);

     label29:
        goto label16;

     label30:
        $r41 := @caughtexception;

        r5 = $r41;

     label31:
        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading subtypes: ");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r51);

     label32:
        if r2 == null goto label01;

     label33:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label34:
        return;

     label35:
        $r52 := @caughtexception;

        r7 = "InputMethodManagerService";

        r8 = "Failed to close.";

        goto label13;

     label36:
        $r22 = "subtype";

        $z1 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z1 == 0 goto label16;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z2 != 0 goto label38;

     label37:
        if r14 != null goto label43;

     label38:
        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME uninstalled or not valid.: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r28);

     label39:
        goto label16;

     label40:
        $r44 := @caughtexception;

        r3 = $r44;

        if r2 == null goto label42;

     label41:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label42:
        throw r3;

     label43:
        $r27 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r27);

        i3 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        r68 = new android.view.inputmethod.InputMethodSubtype;

        $r30 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r30);

        $i6 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        $r34 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeLocale");

        $r33 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeMode");

        $r32 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeExtraValue");

        $r37 = "1";

        $r36 = interfaceinvoke r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "isAuxiliary");

        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r36);

        $z4 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        specialinvoke r68.<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean)>($i6, i3, $r34, $r33, $r32, $z4);

        r18 = r68;

        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label44:
        goto label16;

     label45:
        $r45 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to close.");

        goto label42;

     label46:
        if r2 == null goto label01;

     label47:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label48:
        return;

     label49:
        $r58 := @caughtexception;

        r7 = "InputMethodManagerService";

        r8 = "Failed to close.";

        goto label13;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label07;
        catch java.io.IOException from label03 to label04 with label22;
        catch java.lang.NumberFormatException from label03 to label04 with label30;
        catch java.lang.Throwable from label03 to label04 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label07;
        catch java.io.IOException from label04 to label05 with label22;
        catch java.lang.NumberFormatException from label04 to label05 with label30;
        catch java.lang.Throwable from label04 to label05 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label07;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.lang.NumberFormatException from label06 to label07 with label30;
        catch java.lang.Throwable from label06 to label07 with label40;
        catch java.lang.Throwable from label08 to label09 with label40;
        catch java.io.IOException from label10 to label11 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label07;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.lang.NumberFormatException from label14 to label15 with label30;
        catch java.lang.Throwable from label14 to label15 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label07;
        catch java.io.IOException from label16 to label17 with label22;
        catch java.lang.NumberFormatException from label16 to label17 with label30;
        catch java.lang.Throwable from label16 to label17 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label07;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.lang.NumberFormatException from label18 to label19 with label30;
        catch java.lang.Throwable from label18 to label19 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label07;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.NumberFormatException from label20 to label21 with label30;
        catch java.lang.Throwable from label20 to label21 with label40;
        catch java.lang.Throwable from label23 to label24 with label40;
        catch java.io.IOException from label25 to label26 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label07;
        catch java.io.IOException from label28 to label29 with label22;
        catch java.lang.NumberFormatException from label28 to label29 with label30;
        catch java.lang.Throwable from label28 to label29 with label40;
        catch java.lang.Throwable from label31 to label32 with label40;
        catch java.io.IOException from label33 to label34 with label35;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label07;
        catch java.io.IOException from label36 to label37 with label22;
        catch java.lang.NumberFormatException from label36 to label37 with label30;
        catch java.lang.Throwable from label36 to label37 with label40;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label07;
        catch java.io.IOException from label38 to label39 with label22;
        catch java.lang.NumberFormatException from label38 to label39 with label30;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.io.IOException from label41 to label42 with label45;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label07;
        catch java.io.IOException from label43 to label44 with label22;
        catch java.lang.NumberFormatException from label43 to label44 with label30;
        catch java.lang.Throwable from label43 to label44 with label40;
        catch java.io.IOException from label47 to label48 with label49;
    }

    private static void writeAdditionalInputMethodSubtypes(java.util.HashMap, android.util.AtomicFile, java.util.HashMap)
    {
        java.util.HashMap r0, r2;
        android.util.AtomicFile r1;
        boolean z0, $z1, $z2, $z3;
        java.io.FileOutputStream r3;
        java.io.IOException r4, $r36;
        com.android.internal.util.FastXmlSerializer r5, $r10;
        java.util.Iterator r6;
        java.lang.String r7, $r23, $r25, $r27, $r29, $r31, $r35, $r39;
        java.util.List r8;
        int i0, i1, $i3, $i4, $i6;
        android.view.inputmethod.InputMethodSubtype r9;
        byte b2;
        java.lang.Boolean $r12;
        java.util.Set $r13;
        java.lang.Object $r14, $r19, $r20;
        java.lang.StringBuilder $r34, $r37, $r38;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: android.util.AtomicFile;

        r2 := @parameter2: java.util.HashMap;

        if r2 == null goto label09;

        $i6 = virtualinvoke r2.<java.util.HashMap: int size()>();

        if $i6 <= 0 goto label09;

        z0 = 1;

     label01:
        r3 = null;

     label02:
        r3 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r10 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r10.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r5 = $r10;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r3, "utf-8");

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r12);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "subtypes");

        $r13 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();

        r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label19;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r14;

     label04:
        if z0 == 0 goto label10;

     label05:
        $z2 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7);

        if $z2 != 0 goto label10;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME uninstalled or not valid.: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r39);

     label06:
        goto label03;

     label07:
        $r36 := @caughtexception;

        r4 = $r36;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Error writing subtypes", r4);

        if r3 == null goto label08;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r3);

     label08:
        return;

     label09:
        z0 = 0;

        goto label01;

     label10:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "imi");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", r7);

        $r19 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (java.util.List) $r19;

        i0 = interfaceinvoke r8.<java.util.List: int size()>();

     label11:
        i1 = 0;

     label12:
        if i1 >= i0 goto label17;

     label13:
        $r20 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i1);

        r9 = (android.view.inputmethod.InputMethodSubtype) $r20;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "subtype");

        $i3 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: int getIconResId()>();

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r23);

        $i4 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: int getNameResId()>();

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r25);

        $r27 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeLocale", $r27);

        $r29 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeMode", $r29);

        $r31 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeExtraValue", $r31);

        $z3 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z3 == 0 goto label21;

     label14:
        b2 = 1;

     label15:
        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(b2);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "isAuxiliary", $r35);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "subtype");

     label16:
        i1 = i1 + 1;

        goto label12;

     label17:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "imi");

     label18:
        goto label03;

     label19:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "subtypes");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r3);

     label20:
        return;

     label21:
        b2 = 0;

        goto label15;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label10 to label11 with label07;
        catch java.io.IOException from label13 to label14 with label07;
        catch java.io.IOException from label15 to label16 with label07;
        catch java.io.IOException from label17 to label18 with label07;
        catch java.io.IOException from label19 to label20 with label07;
    }

    public void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo, android.view.inputmethod.InputMethodSubtype[])
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        android.view.inputmethod.InputMethodInfo r1;
        android.view.inputmethod.InputMethodSubtype[] r2;
        java.util.HashMap r3, $r8, $r11, $r13;
        java.util.ArrayList r4, $r7;
        java.lang.Throwable r5, $r22;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype r6;
        java.lang.String $r9, $r17, $r18, $r20;
        android.util.AtomicFile $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r19, $r21;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        r3 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label01:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        i0 = lengthof r2;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label11;

     label04:
        r6 = r2[i1];

        $z0 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r6);

        if $z0 != 0 goto label06;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label05:
        goto label13;

     label06:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicated subtype definition found: ");

        $r17 = virtualinvoke r6.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r18 = virtualinvoke r6.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r20);

     label07:
        goto label13;

     label08:
        $r22 := @caughtexception;

        r5 = $r22;

     label09:
        exitmonitor r3;

     label10:
        throw r5;

     label11:
        $r8 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r9 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r4);

        $r13 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r12 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        $r11 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void writeAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile,java.util.HashMap)>($r13, $r12, $r11);

        exitmonitor r3;

     label12:
        return;

     label13:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public java.util.HashMap getAllAdditionalInputMethodSubtypes()
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.util.HashMap r1, r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String SYSTEM_PATH> = "system";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String NODE_SUBTYPES> = "subtypes";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String NODE_SUBTYPE> = "subtype";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String NODE_IMI> = "imi";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String INPUT_METHOD_PATH> = "inputmethod";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_LABEL> = "label";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IS_AUXILIARY> = "isAuxiliary";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IME_SUBTYPE_MODE> = "imeSubtypeMode";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IME_SUBTYPE_LOCALE> = "imeSubtypeLocale";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IME_SUBTYPE_EXTRA_VALUE> = "imeSubtypeExtraValue";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_ID> = "id";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_ICON> = "icon";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ADDITIONAL_SUBTYPES_FILE_NAME> = "subtypes.xml";

        return;
    }
}
