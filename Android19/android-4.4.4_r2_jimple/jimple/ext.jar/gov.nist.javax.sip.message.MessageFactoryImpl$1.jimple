class gov.nist.javax.sip.message.MessageFactoryImpl$1 extends java.lang.Object implements gov.nist.javax.sip.parser.ParseExceptionListener
{
    final gov.nist.javax.sip.message.MessageFactoryImpl this$0;

    void <init>(gov.nist.javax.sip.message.MessageFactoryImpl)
    {
        gov.nist.javax.sip.message.MessageFactoryImpl$1 r0;
        gov.nist.javax.sip.message.MessageFactoryImpl r1;

        r0 := @this: gov.nist.javax.sip.message.MessageFactoryImpl$1;

        r1 := @parameter0: gov.nist.javax.sip.message.MessageFactoryImpl;

        r0.<gov.nist.javax.sip.message.MessageFactoryImpl$1: gov.nist.javax.sip.message.MessageFactoryImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handleException(java.text.ParseException, gov.nist.javax.sip.message.SIPMessage, java.lang.Class, java.lang.String, java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.MessageFactoryImpl$1 r0;
        java.text.ParseException r1;
        gov.nist.javax.sip.message.SIPMessage r2;
        java.lang.Class r3;
        java.lang.String r4, r5;
        gov.nist.javax.sip.message.MessageFactoryImpl $r6;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.MessageFactoryImpl$1;

        r1 := @parameter0: java.text.ParseException;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<gov.nist.javax.sip.message.MessageFactoryImpl$1: gov.nist.javax.sip.message.MessageFactoryImpl this$0>;

        $z0 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: boolean access$000(gov.nist.javax.sip.message.MessageFactoryImpl)>($r6);

        if $z0 == 0 goto label3;

        if r3 == class "gov/nist/javax/sip/header/From" goto label1;

        if r3 == class "gov/nist/javax/sip/header/To" goto label1;

        if r3 == class "gov/nist/javax/sip/header/CallID" goto label1;

        if r3 == class "gov/nist/javax/sip/header/MaxForwards" goto label1;

        if r3 == class "gov/nist/javax/sip/header/Via" goto label1;

        if r3 == class "gov/nist/javax/sip/header/RequestLine" goto label1;

        if r3 == class "gov/nist/javax/sip/header/StatusLine" goto label1;

        if r3 != class "gov/nist/javax/sip/header/CSeq" goto label2;

     label1:
        throw r1;

     label2:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void addUnparsed(java.lang.String)>(r4);

     label3:
        return;
    }
}
