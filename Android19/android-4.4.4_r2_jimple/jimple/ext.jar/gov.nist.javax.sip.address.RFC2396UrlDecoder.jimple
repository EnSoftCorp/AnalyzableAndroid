public class gov.nist.javax.sip.address.RFC2396UrlDecoder extends java.lang.Object
{

    public void <init>()
    {
        gov.nist.javax.sip.address.RFC2396UrlDecoder r0;

        r0 := @this: gov.nist.javax.sip.address.RFC2396UrlDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String decode(java.lang.String)
    {
        java.lang.String r0, $r6, $r9, $r10, $r18, $r20;
        java.lang.StringBuffer r1, $r5;
        byte[] r2;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i10, $i13, $i14, $i15;
        char c2, $c9, $c11;
        java.lang.IllegalArgumentException $r11, $r17;
        byte $b12;
        java.lang.RuntimeException $r12;
        java.io.UnsupportedEncodingException $r13;
        java.lang.StringBuilder $r14, $r15, $r19;
        java.lang.NumberFormatException $r16;

        r0 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuffer;

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i6);

        r1 = $r5;

        $i7 = virtualinvoke r0.<java.lang.String: int length()>();

        $i8 = $i7 / 3;

        r2 = newarray (byte)[$i8];

        i0 = 0;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label01:
        if i0 >= i1 goto label11;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        i3 = 0;

        if c2 != 37 goto label10;

     label02:
        if i0 >= i1 goto label07;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if $c11 != 37 goto label07;

        $i10 = i0 + 2;

        if $i10 >= i1 goto label06;

        i4 = i0 + 1;

        i5 = i0 + 3;

     label03:
        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, i5);

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r10, 16);

        $b12 = (byte) $i13;

        r2[i3] = $b12;

     label04:
        i3 = i3 + 1;

        i0 = i0 + 3;

        goto label02;

     label05:
        $r16 := @caughtexception;

        $r17 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal hex characters in pattern %");

        $i15 = i0 + 1;

        $i14 = i0 + 3;

        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i15, $i14);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label06:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("% character should be followed by 2 hexadecimal characters.");

        throw $r11;

     label07:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r2, 0, i3, "UTF-8");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label08:
        goto label01;

     label09:
        $r13 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Problem in decodePath: UTF-8 encoding not supported.");

        throw $r12;

     label10:
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        i0 = i0 + 1;

        goto label01;

     label11:
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label09;
    }
}
