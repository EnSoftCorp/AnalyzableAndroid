public final class gov.nist.javax.sip.message.SIPResponse extends gov.nist.javax.sip.message.SIPMessage implements javax.sip.message.Response, gov.nist.javax.sip.message.ResponseExt
{
    protected gov.nist.javax.sip.header.StatusLine statusLine;

    public void <init>()
    {
        gov.nist.javax.sip.message.SIPResponse r0;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void <init>()>();

        return;
    }

    public static java.lang.String getReasonPhrase(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 100: goto label02;
            case 180: goto label03;
            case 181: goto label04;
            case 182: goto label05;
            case 183: goto label06;
            case 200: goto label07;
            case 202: goto label08;
            case 300: goto label09;
            case 301: goto label10;
            case 302: goto label11;
            case 305: goto label12;
            case 380: goto label13;
            case 400: goto label14;
            case 401: goto label15;
            case 402: goto label16;
            case 403: goto label17;
            case 404: goto label18;
            case 405: goto label19;
            case 406: goto label20;
            case 407: goto label21;
            case 408: goto label22;
            case 410: goto label23;
            case 412: goto label54;
            case 413: goto label25;
            case 414: goto label26;
            case 415: goto label27;
            case 416: goto label28;
            case 420: goto label29;
            case 421: goto label30;
            case 423: goto label31;
            case 480: goto label24;
            case 481: goto label32;
            case 482: goto label33;
            case 483: goto label34;
            case 484: goto label35;
            case 485: goto label36;
            case 486: goto label37;
            case 487: goto label38;
            case 488: goto label39;
            case 489: goto label40;
            case 491: goto label41;
            case 493: goto label43;
            case 500: goto label42;
            case 501: goto label44;
            case 502: goto label45;
            case 503: goto label46;
            case 504: goto label47;
            case 505: goto label48;
            case 513: goto label49;
            case 600: goto label50;
            case 603: goto label51;
            case 604: goto label52;
            case 606: goto label53;
            default: goto label01;
        };

     label01:
        return "Unknown Status";

     label02:
        return "Trying";

     label03:
        return "Ringing";

     label04:
        return "Call is being forwarded";

     label05:
        return "Queued";

     label06:
        return "Session progress";

     label07:
        return "OK";

     label08:
        return "Accepted";

     label09:
        return "Multiple choices";

     label10:
        return "Moved permanently";

     label11:
        return "Moved Temporarily";

     label12:
        return "Use proxy";

     label13:
        return "Alternative service";

     label14:
        return "Bad request";

     label15:
        return "Unauthorized";

     label16:
        return "Payment required";

     label17:
        return "Forbidden";

     label18:
        return "Not found";

     label19:
        return "Method not allowed";

     label20:
        return "Not acceptable";

     label21:
        return "Proxy Authentication required";

     label22:
        return "Request timeout";

     label23:
        return "Gone";

     label24:
        return "Temporarily Unavailable";

     label25:
        return "Request entity too large";

     label26:
        return "Request-URI too large";

     label27:
        return "Unsupported media type";

     label28:
        return "Unsupported URI Scheme";

     label29:
        return "Bad extension";

     label30:
        return "Etension Required";

     label31:
        return "Interval too brief";

     label32:
        return "Call leg/Transaction does not exist";

     label33:
        return "Loop detected";

     label34:
        return "Too many hops";

     label35:
        return "Address incomplete";

     label36:
        return "Ambiguous";

     label37:
        return "Busy here";

     label38:
        return "Request Terminated";

     label39:
        return "Not Acceptable here";

     label40:
        return "Bad Event";

     label41:
        return "Request Pending";

     label42:
        return "Server Internal Error";

     label43:
        return "Undecipherable";

     label44:
        return "Not implemented";

     label45:
        return "Bad gateway";

     label46:
        return "Service unavailable";

     label47:
        return "Gateway timeout";

     label48:
        return "SIP version not supported";

     label49:
        return "Message Too Large";

     label50:
        return "Busy everywhere";

     label51:
        return "Decline";

     label52:
        return "Does not exist anywhere";

     label53:
        return "Session Not acceptable";

     label54:
        return "Conditional request failed";
    }

    public static boolean isFinalResponse(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 200 goto label1;

        if i0 >= 700 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final void setBranch(gov.nist.javax.sip.header.Via, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.Via r1, $r5, $r8;
        java.lang.String r2, r3;
        java.text.ParseException r4, $r9;
        boolean $z0, $z1;
        gov.nist.javax.sip.header.StatusLine $r6;
        int $i0;
        gov.nist.javax.sip.Utils $r7;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: gov.nist.javax.sip.header.Via;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z0 == 0 goto label4;

        $r6 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $i0 = virtualinvoke $r6.<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>();

        if $i0 < 300 goto label3;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r3 = virtualinvoke $r8.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

     label1:
        virtualinvoke r1.<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>(r3);

     label2:
        return;

     label3:
        $r7 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        r3 = virtualinvoke $r7.<gov.nist.javax.sip.Utils: java.lang.String generateBranchId()>();

        goto label1;

     label4:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r3 = virtualinvoke $r5.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        goto label1;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r4.<java.text.ParseException: void printStackTrace()>();

        return;

        catch java.text.ParseException from label1 to label2 with label5;
    }

    public void checkHeaders() throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        javax.sip.header.CSeqHeader $r1;
        javax.sip.header.ToHeader $r2;
        javax.sip.header.FromHeader $r3;
        gov.nist.javax.sip.header.ViaList $r4;
        javax.sip.header.CallIdHeader $r5;
        int $i0, $i1;
        java.text.ParseException $r6, $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        if $r1 != null goto label1;

        $r14 = new java.text.ParseException;

        specialinvoke $r14.<java.text.ParseException: void <init>(java.lang.String,int)>("CSeq Is missing ", 0);

        throw $r14;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        if $r2 != null goto label2;

        $r15 = new java.text.ParseException;

        specialinvoke $r15.<java.text.ParseException: void <init>(java.lang.String,int)>("To Is missing ", 0);

        throw $r15;

     label2:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        if $r3 != null goto label3;

        $r13 = new java.text.ParseException;

        specialinvoke $r13.<java.text.ParseException: void <init>(java.lang.String,int)>("From Is missing ", 0);

        throw $r13;

     label3:
        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r4 != null goto label4;

        $r12 = new java.text.ParseException;

        specialinvoke $r12.<java.text.ParseException: void <init>(java.lang.String,int)>("Via Is missing ", 0);

        throw $r12;

     label4:
        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        if $r5 != null goto label5;

        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("Call-ID Is missing ", 0);

        throw $r11;

     label5:
        $i0 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 <= 699 goto label6;

        $r6 = new java.text.ParseException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown error code!");

        $i1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, 0);

        throw $r6;

     label6:
        return;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.message.SIPResponse r0, r1;
        java.lang.Object $r2, $r5;
        gov.nist.javax.sip.header.StatusLine $r3, $r4, $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.message.SIPResponse) $r2;

        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r3 == null goto label1;

        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.StatusLine: java.lang.Object clone()>();

        $r6 = (gov.nist.javax.sip.header.StatusLine) $r5;

        r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = $r6;

     label1:
        return r1;
    }

    public gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri, gov.nist.javax.sip.header.Via, gov.nist.javax.sip.header.CSeq, gov.nist.javax.sip.header.From, gov.nist.javax.sip.header.To)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.address.SipUri r1;
        gov.nist.javax.sip.header.Via r2;
        gov.nist.javax.sip.header.CSeq r3;
        gov.nist.javax.sip.header.From r4;
        gov.nist.javax.sip.header.To r5;
        gov.nist.javax.sip.message.SIPRequest r6, $r12;
        java.lang.String r7;
        java.util.Iterator r8;
        gov.nist.javax.sip.header.SIPHeader r10;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException r11, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        javax.sip.header.UserAgentHeader $r13, $r16;
        gov.nist.javax.sip.header.MaxForwards $r14;
        java.lang.Object $r15;
        java.lang.Exception $r18;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: gov.nist.javax.sip.address.SipUri;

        r2 := @parameter1: gov.nist.javax.sip.header.Via;

        r3 := @parameter2: gov.nist.javax.sip.header.CSeq;

        r4 := @parameter3: gov.nist.javax.sip.header.From;

        r5 := @parameter4: gov.nist.javax.sip.header.To;

        $r12 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke $r12.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        r6 = $r12;

        r7 = virtualinvoke r3.<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>();

        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>(r7);

        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)>(r1);

        specialinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void setBranch(gov.nist.javax.sip.header.Via,java.lang.String)>(r2, r7);

        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r2);

        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r3);

        r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: java.util.Iterator getHeaders()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r15 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (gov.nist.javax.sip.header.SIPHeader) $r15;

        $z2 = staticinvoke <gov.nist.javax.sip.message.SIPMessage: boolean isResponseHeader(gov.nist.javax.sip.header.SIPHeader)>(r10);

        if $z2 != 0 goto label1;

        $z1 = r10 instanceof gov.nist.javax.sip.header.ViaList;

        if $z1 != 0 goto label1;

        $z4 = r10 instanceof gov.nist.javax.sip.header.CSeq;

        if $z4 != 0 goto label1;

        $z3 = r10 instanceof gov.nist.javax.sip.header.ContentType;

        if $z3 != 0 goto label1;

        $z6 = r10 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z6 != 0 goto label1;

        $z5 = r10 instanceof gov.nist.javax.sip.header.RecordRouteList;

        if $z5 != 0 goto label1;

        $z8 = r10 instanceof gov.nist.javax.sip.header.RequireList;

        if $z8 != 0 goto label1;

        $z7 = r10 instanceof gov.nist.javax.sip.header.ContactList;

        if $z7 != 0 goto label1;

        $z10 = r10 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z10 != 0 goto label1;

        $z9 = r10 instanceof javax.sip.header.ServerHeader;

        if $z9 != 0 goto label1;

        $z12 = r10 instanceof javax.sip.header.ReasonHeader;

        if $z12 != 0 goto label1;

        $z11 = r10 instanceof gov.nist.javax.sip.header.extensions.SessionExpires;

        if $z11 != 0 goto label1;

        $z14 = r10 instanceof gov.nist.javax.sip.header.ReasonList;

        if $z14 != 0 goto label1;

        $z15 = r10 instanceof gov.nist.javax.sip.header.To;

        if $z15 == 0 goto label5;

        r10 = r5;

     label2:
        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r10, 0);

     label3:
        goto label1;

     label4:
        $r17 := @caughtexception;

        r11 = $r17;

        virtualinvoke r11.<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void printStackTrace()>();

        goto label1;

     label5:
        $z13 = r10 instanceof gov.nist.javax.sip.header.From;

        if $z13 == 0 goto label2;

        r10 = r4;

        goto label2;

     label6:
        $r14 = new gov.nist.javax.sip.header.MaxForwards;

        specialinvoke $r14.<gov.nist.javax.sip.header.MaxForwards: void <init>(int)>(70);

        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>($r14, 0);

     label7:
        $r13 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r13 == null goto label8;

        $r16 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r16);

     label8:
        return r6;

     label9:
        $r18 := @caughtexception;

        goto label7;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label2 to label3 with label4;
        catch java.lang.Exception from label6 to label7 with label9;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1, $r3, $r5, $r7;
        java.lang.Class $r2;
        gov.nist.javax.sip.header.StatusLine $r4, $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.message.SIPResponse: java.lang.String stringRepresentation> = "";

        $r2 = class "gov/nist/javax/sip/message/SIPResponse";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>($r3);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>("{");

        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r4 == null goto label1;

        $r6 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.header.StatusLine: java.lang.String debugDump()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>($r7);

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>(r1);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>("}");

        $r5 = r0.<gov.nist.javax.sip.message.SIPResponse: java.lang.String stringRepresentation>;

        return $r5;
    }

    public java.lang.String encode()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r4;
        java.lang.String $r2, $r5, $r7, $r9;
        java.lang.StringBuilder $r3, $r6, $r8;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        return $r2;
    }

    public byte[] encodeAsBytes(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1, $r9;
        gov.nist.javax.sip.header.StatusLine r2, $r8;
        byte[] r3, r4, r5, r7;
        java.io.UnsupportedEncodingException r6, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        r3 = null;

        if r2 == null goto label3;

     label1:
        $r8 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        r7 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        r3 = r7;

     label3:
        r4 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>(r1);

        $i1 = lengthof r3;

        $i0 = lengthof r4;

        $i2 = $i1 + $i0;

        r5 = newarray (byte)[$i2];

        $i3 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r5, 0, $i3);

        $i5 = lengthof r3;

        $i4 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, $i5, $i4);

        return r5;

     label4:
        $r10 := @caughtexception;

        r6 = $r10;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r6);

        r3 = null;

        goto label3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public java.lang.String encodeMessage()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r4;
        java.lang.String $r2, $r5, $r7, $r9;
        java.lang.StringBuilder $r3, $r6, $r8;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label1:
        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPResponse r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.header.StatusLine $r5, $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r6 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $z1 = virtualinvoke $r6.<gov.nist.javax.sip.header.StatusLine: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        return 1;
    }

    public java.lang.String getDialogId(boolean)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        boolean z0;
        gov.nist.javax.sip.header.CallID r1;
        gov.nist.javax.sip.header.From r2;
        gov.nist.javax.sip.header.To r3;
        java.lang.StringBuffer r4, $r8;
        javax.sip.header.CallIdHeader $r5;
        javax.sip.header.FromHeader $r6;
        javax.sip.header.ToHeader $r7;
        java.lang.String $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r19, $r22, $r24, $r25;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        z0 := @parameter0: boolean;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r1 = (gov.nist.javax.sip.header.CallID) $r5;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        r2 = (gov.nist.javax.sip.header.From) $r6;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        r3 = (gov.nist.javax.sip.header.To) $r7;

        $r8 = new java.lang.StringBuffer;

        $r9 = virtualinvoke r1.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>($r9);

        r4 = $r8;

        if z0 != 0 goto label3;

        $r19 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r19 == null goto label1;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r25 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

     label1:
        $r22 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r22 == null goto label2;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r24 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

     label2:
        $r12 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase()>();

        return $r13;

     label3:
        $r10 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r10 == null goto label4;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r17 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label4:
        $r11 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r11 == null goto label2;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r16 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        goto label2;
    }

    public java.lang.String getDialogId(boolean, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        boolean z0;
        java.lang.String r1, $r8, $r9, $r10, $r11, $r13, $r18, $r22;
        gov.nist.javax.sip.header.CallID r2;
        gov.nist.javax.sip.header.From r3;
        java.lang.StringBuffer r4, $r7;
        javax.sip.header.CallIdHeader $r5;
        javax.sip.header.FromHeader $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r2 = (gov.nist.javax.sip.header.CallID) $r5;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        r3 = (gov.nist.javax.sip.header.From) $r6;

        $r7 = new java.lang.StringBuffer;

        $r8 = virtualinvoke r2.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>($r8);

        r4 = $r7;

        if z0 != 0 goto label3;

        $r18 = virtualinvoke r3.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r18 == null goto label1;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r22 = virtualinvoke r3.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label1:
        if r1 == null goto label2;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label2:
        $r10 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        return $r11;

     label3:
        if r1 == null goto label4;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label4:
        $r9 = virtualinvoke r3.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r9 == null goto label2;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r13 = virtualinvoke r3.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label2;
    }

    public java.lang.String getFirstLine()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        return $r3;
    }

    public java.util.LinkedList getMessageAsEncodedStrings()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.util.LinkedList r1;
        gov.nist.javax.sip.header.StatusLine $r2, $r3;
        java.lang.String $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()>();

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r2 == null goto label1;

        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        virtualinvoke r1.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4);

     label1:
        return r1;
    }

    public java.lang.String getReasonPhrase()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()>();

        if $r3 != null goto label2;

     label1:
        return "";

     label2:
        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()>();

        return $r5;
    }

    public java.lang.String getSIPVersion()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.header.StatusLine: java.lang.String getSipVersion()>();

        return $r2;
    }

    public int getStatusCode()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $i0 = virtualinvoke $r1.<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>();

        return $i0;
    }

    public gov.nist.javax.sip.header.StatusLine getStatusLine()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        return $r1;
    }

    public boolean isFinalResponse()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;
        int $i0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $i0 = virtualinvoke $r1.<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>();

        $z0 = staticinvoke <gov.nist.javax.sip.message.SIPResponse: boolean isFinalResponse(int)>($i0);

        return $z0;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPResponse r0, r2;
        java.lang.Object r1;
        gov.nist.javax.sip.header.StatusLine r3, $r6, $r7, $r8, $r9;
        java.lang.Class $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label2;

     label1:
        return 1;

     label2:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        if r1 == r0 goto label1;

        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r3 = r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r6 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r6 != null goto label4;

        if r3 == null goto label4;

        return 0;

     label4:
        $r7 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r7 != r3 goto label5;

        $z3 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean match(java.lang.Object)>(r1);

        return $z3;

     label5:
        $r9 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r8 = r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $z1 = virtualinvoke $r9.<gov.nist.javax.sip.header.StatusLine: boolean match(java.lang.Object)>($r8);

        if $z1 == 0 goto label6;

        $z2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean match(java.lang.Object)>(r1);

        if $z2 != 0 goto label1;

     label6:
        return 0;
    }

    public void setReasonPhrase(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.StatusLine $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad reason phrase");

        throw $r5;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r2 != null goto label2;

        $r4 = new gov.nist.javax.sip.header.StatusLine;

        specialinvoke $r4.<gov.nist.javax.sip.header.StatusLine: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = $r4;

     label2:
        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: void setReasonPhrase(java.lang.String)>(r1);

        return;
    }

    public void setSIPVersion(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.StatusLine $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        virtualinvoke $r2.<gov.nist.javax.sip.header.StatusLine: void setSipVersion(java.lang.String)>(r1);

        return;
    }

    public void setStatusCode(int) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        int i0;
        java.text.ParseException $r1;
        gov.nist.javax.sip.header.StatusLine $r2, $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        i0 := @parameter0: int;

        if i0 < 100 goto label1;

        if i0 <= 699 goto label2;

     label1:
        $r1 = new java.text.ParseException;

        specialinvoke $r1.<java.text.ParseException: void <init>(java.lang.String,int)>("bad status code", 0);

        throw $r1;

     label2:
        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r2 != null goto label3;

        $r4 = new gov.nist.javax.sip.header.StatusLine;

        specialinvoke $r4.<gov.nist.javax.sip.header.StatusLine: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = $r4;

     label3:
        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: void setStatusCode(int)>(i0);

        return;
    }

    public void setStatusLine(gov.nist.javax.sip.header.StatusLine)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine r1;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: gov.nist.javax.sip.header.StatusLine;

        r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = r1;

        return;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r3;
        java.lang.StringBuilder $r2, $r5, $r7;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
