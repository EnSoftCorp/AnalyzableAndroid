public class org.apache.http.impl.conn.LoggingSessionInputBuffer extends java.lang.Object implements org.apache.http.io.SessionInputBuffer
{
    private final org.apache.http.io.SessionInputBuffer in;
    private final org.apache.http.impl.conn.Wire wire;

    public void <init>(org.apache.http.io.SessionInputBuffer, org.apache.http.impl.conn.Wire)
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.impl.conn.Wire r2;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.impl.conn.Wire;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in> = r1;

        r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire> = r2;

        return;
    }

    public org.apache.http.io.HttpTransportMetrics getMetrics()
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.io.HttpTransportMetrics $r2;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $r2 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>();

        return $r2;
    }

    public boolean isDataAvailable(int) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int i0;
        org.apache.http.io.SessionInputBuffer $r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        $z0 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: boolean isDataAvailable(int)>(i0);

        return $z0;
    }

    public int read() throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        int i0;
        org.apache.http.io.SessionInputBuffer $r1;
        org.apache.http.impl.conn.Wire $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r1 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        i0 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: int read()>();

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r2.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if i0 <= 0 goto label1;

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r3.<org.apache.http.impl.conn.Wire: void input(int)>(i0);

     label1:
        return i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        byte[] r1;
        int i0;
        org.apache.http.io.SessionInputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        i0 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: int read(byte[])>(r1);

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if i0 <= 0 goto label1;

        $r4 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r4.<org.apache.http.impl.conn.Wire: void input(byte[],int,int)>(r1, 0, i0);

     label1:
        return i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        byte[] r1;
        int i0, i1, i2;
        org.apache.http.io.SessionInputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        i2 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: int read(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if i2 <= 0 goto label1;

        $r4 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        virtualinvoke $r4.<org.apache.http.impl.conn.Wire: void input(byte[],int,int)>(r1, i0, i2);

     label1:
        return i2;
    }

    public int readLine(org.apache.http.util.CharArrayBuffer) throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        org.apache.http.util.CharArrayBuffer r1;
        int i0, i1, $i2;
        java.lang.String r2, $r5, $r11;
        org.apache.http.io.SessionInputBuffer $r3;
        org.apache.http.impl.conn.Wire $r4, $r8;
        boolean $z0;
        char[] $r6;
        java.lang.StringBuilder $r7, $r9, $r10;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        i0 = interfaceinvoke $r3.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>(r1);

        $r4 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r4.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if i0 <= 0 goto label1;

        $i2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>();

        i1 = $i2 - i0;

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char[] buffer()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r6, i1, i0);

        r2 = $r5;

        $r8 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[EOL]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.http.impl.conn.Wire: void input(java.lang.String)>($r11);

     label1:
        return i0;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        org.apache.http.impl.conn.LoggingSessionInputBuffer r0;
        java.lang.String r1, $r8;
        org.apache.http.io.SessionInputBuffer $r2;
        org.apache.http.impl.conn.Wire $r3, $r5;
        boolean $z0;
        java.lang.StringBuilder $r4, $r6, $r7;

        r0 := @this: org.apache.http.impl.conn.LoggingSessionInputBuffer;

        $r2 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.SessionInputBuffer in>;

        r1 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: java.lang.String readLine()>();

        $r3 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $z0 = virtualinvoke $r3.<org.apache.http.impl.conn.Wire: boolean enabled()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        $r5 = r0.<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.impl.conn.Wire wire>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[EOL]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.http.impl.conn.Wire: void input(java.lang.String)>($r8);

     label1:
        return r1;
    }
}
