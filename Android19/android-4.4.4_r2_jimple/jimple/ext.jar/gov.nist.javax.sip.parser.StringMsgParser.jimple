public class gov.nist.javax.sip.parser.StringMsgParser extends java.lang.Object
{
    private static boolean computeContentLengthFromMessage;
    private gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener;
    private java.lang.String rawStringMessage;
    protected boolean readBody;
    private boolean strict;

    static void <clinit>()
    {
        <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage> = 0;

        return;
    }

    public void <init>()
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody> = 1;

        return;
    }

    public void <init>(gov.nist.javax.sip.parser.ParseExceptionListener)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        gov.nist.javax.sip.parser.ParseExceptionListener r1;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.ParseExceptionListener;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener> = r1;

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r2;
        int i0;
        java.lang.Thread $r3;
        gov.nist.javax.sip.parser.StringMsgParser$1ParserThread $r4;

        r0 := @parameter0: java.lang.String[];

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "SIP/2.0 200 OK\r\nTo: \"The Little Blister\" <sip:LittleGuy@there.com>;tag=469bc066\r\nFrom: \"The Master Blaster\" <sip:BigGuy@here.com>;tag=11\r\nVia: SIP/2.0/UDP 139.10.134.246:5060;branch=z9hG4bK8b0a86f6_1030c7d18e0_17;received=139.10.134.246\r\nCall-ID: 1030c7d18ae_a97b0b_b@8b0a86f6\r\nCSeq: 1 SUBSCRIBE\r\nContact: <sip:172.16.11.162:5070>\r\nContent-Length: 0\r\n\r\n";

        $r2[1] = "SIP/2.0 180 Ringing\r\nVia: SIP/2.0/UDP 172.18.1.29:5060;branch=z9hG4bK43fc10fb4446d55fc5c8f969607991f4\r\nTo: \"0440\" <sip:0440@212.209.220.131>;tag=2600\r\nFrom: \"Andreas\" <sip:andreas@e-horizon.se>;tag=8524\r\nCall-ID: f51a1851c5f570606140f14c8eb64fd3@172.18.1.29\r\nCSeq: 1 INVITE\r\nMax-Forwards: 70\r\nRecord-Route: <sip:212.209.220.131:5060>\r\nContent-Length: 0\r\n\r\n";

        $r2[2] = "REGISTER sip:nist.gov SIP/2.0\r\nVia: SIP/2.0/UDP 129.6.55.182:14826\r\nMax-Forwards: 70\r\nFrom: <sip:mranga@nist.gov>;tag=6fcd5c7ace8b4a45acf0f0cd539b168b;epid=0d4c418ddf\r\nTo: <sip:mranga@nist.gov>\r\nCall-ID: c5679907eb954a8da9f9dceb282d7230@129.6.55.182\r\nCSeq: 1 REGISTER\r\nContact: <sip:129.6.55.182:14826>;methods=\"INVITE, MESSAGE, INFO, SUBSCRIBE, OPTIONS, BYE, CANCEL, NOTIFY, ACK, REFER\"\r\nUser-Agent: RTC/(Microsoft RTC)\r\nEvent:  registration\r\nAllow-Events: presence\r\nContent-Length: 0\r\n\r\nINVITE sip:littleguy@there.com:5060 SIP/2.0\r\nVia: SIP/2.0/UDP 65.243.118.100:5050\r\nFrom: M. Ranganathan  <sip:M.Ranganathan@sipbakeoff.com>;tag=1234\r\nTo: \"littleguy@there.com\" <sip:littleguy@there.com:5060> \r\nCall-ID: Q2AboBsaGn9!?x6@sipbakeoff.com \r\nCSeq: 1 INVITE \r\nContent-Length: 247\r\n\r\nv=0\r\no=4855 13760799956958020 13760799956958020 IN IP4  129.6.55.78\r\ns=mysession session\r\np=+46 8 52018010\r\nc=IN IP4  129.6.55.78\r\nt=0 0\r\nm=audio 6022 RTP/AVP 0 4 18\r\na=rtpmap:0 PCMU/8000\r\na=rtpmap:4 G723/8000\r\na=rtpmap:18 G729A/8000\r\na=ptime:20\r\n";

        r1 = $r2;

        i0 = 0;

     label1:
        if i0 >= 20 goto label2;

        $r3 = new java.lang.Thread;

        $r4 = new gov.nist.javax.sip.parser.StringMsgParser$1ParserThread;

        specialinvoke $r4.<gov.nist.javax.sip.parser.StringMsgParser$1ParserThread: void <init>(java.lang.String[])>(r1);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r13, $r20, $r23, $r27;
        gov.nist.javax.sip.message.SIPRequest r2, $r14, $r22;
        java.text.ParseException r3, r6, $r21, $r25;
        gov.nist.javax.sip.header.RequestLine r4;
        gov.nist.javax.sip.message.SIPResponse r5, $r8, $r15;
        gov.nist.javax.sip.header.StatusLine r7;
        boolean $z0;
        gov.nist.javax.sip.parser.StatusLineParser $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r18, $r19;
        gov.nist.javax.sip.parser.RequestLineParser $r17;
        gov.nist.javax.sip.parser.ParseExceptionListener $r24, $r26, $r28, $r29;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SIP/2.0");

        if $z0 != 0 goto label5;

        $r14 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke $r14.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        r2 = $r14;

     label1:
        $r17 = new gov.nist.javax.sip.parser.RequestLineParser;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r20);

        r4 = virtualinvoke $r17.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        $r22 = (gov.nist.javax.sip.message.SIPRequest) r2;

        virtualinvoke $r22.<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)>(r4);

     label2:
        return r2;

     label3:
        $r21 := @caughtexception;

        r3 = $r21;

        $r24 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r24 == null goto label4;

        $r26 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r23 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r26.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r3, r2, class "gov/nist/javax/sip/header/RequestLine", r1, $r23);

        return r2;

     label4:
        throw r3;

     label5:
        $r8 = new gov.nist.javax.sip.message.SIPResponse;

        specialinvoke $r8.<gov.nist.javax.sip.message.SIPResponse: void <init>()>();

        r5 = $r8;

     label6:
        $r9 = new gov.nist.javax.sip.parser.StatusLineParser;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<gov.nist.javax.sip.parser.StatusLineParser: void <init>(java.lang.String)>($r13);

        r7 = virtualinvoke $r9.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()>();

        $r15 = (gov.nist.javax.sip.message.SIPResponse) r5;

        virtualinvoke $r15.<gov.nist.javax.sip.message.SIPResponse: void setStatusLine(gov.nist.javax.sip.header.StatusLine)>(r7);

     label7:
        return r5;

     label8:
        $r25 := @caughtexception;

        r6 = $r25;

        $r28 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r28 == null goto label9;

        $r29 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r27 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r29.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r6, r5, class "gov/nist/javax/sip/header/StatusLine", r1, $r27);

        return r5;

     label9:
        throw r6;

        catch java.text.ParseException from label1 to label2 with label3;
        catch java.text.ParseException from label6 to label7 with label8;
    }

    private void processHeader(java.lang.String, gov.nist.javax.sip.message.SIPMessage) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r10, $r13, $r16, $r18;
        gov.nist.javax.sip.message.SIPMessage r2;
        java.text.ParseException r3, r5, $r12, $r14;
        gov.nist.javax.sip.parser.HeaderParser r4;
        java.lang.Class r6;
        int $i0;
        java.lang.StringBuilder $r7, $r8, $r9;
        gov.nist.javax.sip.header.SIPHeader $r11;
        gov.nist.javax.sip.parser.ParseExceptionListener $r15, $r17, $r19;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>($r10);

     label3:
        $r11 = virtualinvoke r4.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>($r11, 0);

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        r5 = $r14;

        $r17 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r17 == null goto label1;

        $r16 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)>(r1);

        r6 = staticinvoke <gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)>($r16);

        if r6 != null goto label6;

        r6 = class "gov/nist/javax/sip/header/ExtensionHeaderImpl";

     label6:
        $r19 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r18 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r19.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r5, r2, r6, r1, $r18);

        return;

     label7:
        $r12 := @caughtexception;

        r3 = $r12;

        $r15 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r13 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r15.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r3, r2, null, r1, $r13);

        return;

        catch java.text.ParseException from label2 to label3 with label7;
        catch java.text.ParseException from label3 to label4 with label5;
    }

    public static void setComputeContentLengthFromMessage(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage> = z0;

        return;
    }

    private java.lang.String trimEndOfLine(java.lang.String)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        char $c5;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return r1;

     label2:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i0 = -1 + $i1;

     label3:
        if i0 < 0 goto label4;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c5 > 32 goto label4;

        i0 = i0 + -1;

        goto label3;

     label4:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = -1 + $i2;

        if i0 == $i3 goto label1;

        if i0 != -1 goto label5;

        return "";

     label5:
        $i4 = i0 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        return $r2;
    }

    public gov.nist.javax.sip.address.AddressImpl parseAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.AddressParser $r2;
        gov.nist.javax.sip.address.AddressImpl $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.AddressParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.AddressParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.AddressParser: gov.nist.javax.sip.address.AddressImpl address(boolean)>(1);

        return $r3;
    }

    public gov.nist.core.Host parseHost(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.core.HostNameParser $r2;
        gov.nist.javax.sip.parser.Lexer $r3;
        gov.nist.core.Host $r4;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.core.HostNameParser;

        $r3 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r3.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("charLexer", r1);

        specialinvoke $r2.<gov.nist.core.HostNameParser: void <init>(gov.nist.core.LexerCore)>($r3);

        $r4 = virtualinvoke $r2.<gov.nist.core.HostNameParser: gov.nist.core.Host host()>();

        return $r4;
    }

    public gov.nist.javax.sip.header.SIPHeader parseSIPHeader(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r7, $r8, $r13;
        int i0, i1, i3, i4, $i6, $i8;
        char c2, c5, $c7;
        java.lang.StringBuffer r3, $r5;
        boolean z0;
        gov.nist.javax.sip.parser.HeaderParser r4;
        gov.nist.javax.sip.header.SIPHeader $r10;
        java.text.ParseException $r11, $r16;
        java.lang.ArrayIndexOutOfBoundsException $r14;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = -1 + $i6;

     label01:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c7 > 32 goto label03;

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

     label04:
        if c2 > 32 goto label06;

        i1 = i1 + -1;

        goto label03;

     label05:
        $r14 := @caughtexception;

        $r16 = new java.text.ParseException;

        specialinvoke $r16.<java.text.ParseException: void <init>(java.lang.String,int)>("Empty header.", 0);

        throw $r16;

     label06:
        $r5 = new java.lang.StringBuffer;

        $i8 = i1 + 1;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i8);

        r3 = $r5;

        i3 = i0;

        i4 = i0;

        z0 = 0;

     label07:
        if i3 > i1 goto label13;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c5 == 13 goto label08;

        if c5 != 10 goto label10;

     label08:
        if z0 != 0 goto label09;

        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i4, i3);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        z0 = 1;

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        if z0 == 0 goto label09;

        if c5 == 32 goto label11;

        if c5 != 9 goto label12;

     label11:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i4 = i3 + 1;

        z0 = 0;

        goto label09;

     label12:
        i4 = i3;

        z0 = 0;

        goto label09;

     label13:
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i4, i3);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r4 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>($r8);

        if r4 != null goto label14;

        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("could not create parser", 0);

        throw $r11;

     label14:
        $r10 = virtualinvoke r4.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        return $r10;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label05;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label05;
    }

    public gov.nist.javax.sip.message.SIPMessage parseSIPMessage(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, r5, r8, $r9, $r13, $r18;
        gov.nist.javax.sip.message.SIPMessage r2;
        int i0, i2, i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i16;
        char c1, c3, c4, c7, $c9, $c15;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r10, $r11, $r12;
        javax.sip.header.ContentLengthHeader $r14, $r15, $r16, $r19;
        java.text.ParseException $r17, $r20;
        java.lang.ArrayIndexOutOfBoundsException $r21, $r22;
        java.lang.StringIndexOutOfBoundsException $r23, $r24;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label01;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i6 != 0 goto label03;

     label01:
        r2 = null;

     label02:
        return r2;

     label03:
        r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage> = r1;

        i0 = 0;

     label04:
        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

     label05:
        if c1 >= 32 goto label08;

        i0 = i0 + 1;

        goto label04;

     label06:
        $r21 := @caughtexception;

        return null;

     label07:
        $r23 := @caughtexception;

        return null;

     label08:
        r5 = null;

        z0 = 1;

        r2 = null;

     label09:
        i2 = i0;

     label10:
        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

     label11:
        if c3 == 13 goto label17;

        if c3 == 10 goto label17;

        i0 = i0 + 1;

     label12:
        c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

     label13:
        c3 = c7;

        goto label11;

     label14:
        $r22 := @caughtexception;

     label15:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void setSize(int)>(i0);

        $z1 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody>;

        if $z1 == 0 goto label02;

        $r14 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        if $r14 == null goto label02;

        $r15 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i10 = interfaceinvoke $r15.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i10 == 0 goto label26;

        $r18 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $z5 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict>;

        $z6 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        $r19 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i14 = interfaceinvoke $r19.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,boolean,boolean,int)>($r18, $z5, $z6, $i14);

        return r2;

     label16:
        $r24 := @caughtexception;

        goto label15;

     label17:
        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i0);

        r8 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String trimEndOfLine(java.lang.String)>($r9);

        $i8 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i8 != 0 goto label20;

        if r5 == null goto label18;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r5, r2);

     label18:
        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c9 != 13 goto label19;

        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        $i13 = i0 + 1;

        if $i12 <= $i13 goto label19;

        $i16 = i0 + 1;

        $c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i16);

        if $c15 != 10 goto label19;

        i0 = i0 + 1;

     label19:
        i0 = i0 + 1;

        i5 = virtualinvoke r8.<java.lang.String: int length()>();

        z0 = 0;

        if i5 > 0 goto label09;

        goto label15;

     label20:
        if z0 == 0 goto label21;

        r2 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String)>(r8);

        goto label18;

     label21:
        c4 = virtualinvoke r8.<java.lang.String: char charAt(int)>(0);

        if c4 == 9 goto label22;

        if c4 != 32 goto label24;

     label22:
        if r5 != null goto label23;

        $r20 = new java.text.ParseException;

        specialinvoke $r20.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad header continuation.", 0);

        throw $r20;

     label23:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label18;

     label24:
        if r5 == null goto label25;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r5, r2);

     label25:
        r5 = r8;

        goto label18;

     label26:
        $z2 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        if $z2 != 0 goto label02;

        $r16 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i11 = interfaceinvoke $r16.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i11 != 0 goto label02;

        $z3 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\r\n\r\n");

        if $z3 != 0 goto label02;

        $z4 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict>;

        if $z4 == 0 goto label02;

        $r17 = new java.text.ParseException;

        specialinvoke $r17.<java.text.ParseException: void <init>(java.lang.String,int)>("Extraneous characters at the end of the message ", i0);

        throw $r17;

        catch java.lang.ArrayIndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.StringIndexOutOfBoundsException from label04 to label05 with label07;
        catch java.lang.ArrayIndexOutOfBoundsException from label10 to label11 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label10 to label11 with label16;
        catch java.lang.ArrayIndexOutOfBoundsException from label12 to label13 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label12 to label13 with label16;
    }

    public gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[]) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        byte[] r1, r6;
        gov.nist.javax.sip.message.SIPMessage r2;
        int i0, i2, i3, i4, i6, $i7, $i10, $i12, $i13, $i14, $i15, $i16, $i17;
        byte b1, b8, $b9, $b11, $b18;
        java.lang.String r4, r7, r8, $r10, $r12;
        boolean z0, $z1, $z2;
        char c5;
        java.lang.StringBuilder $r11, $r13, $r14;
        javax.sip.header.ContentLengthHeader $r15, $r16, $r17;
        java.text.ParseException $r18, $r20, $r21;
        java.lang.ArrayIndexOutOfBoundsException $r19, $r23;
        java.io.UnsupportedEncodingException $r22;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: byte[];

        if r1 == null goto label01;

        $i7 = lengthof r1;

        if $i7 != 0 goto label03;

     label01:
        r2 = null;

     label02:
        return r2;

     label03:
        i0 = 0;

     label04:
        b1 = r1[i0];

     label05:
        if b1 >= 32 goto label07;

        i0 = i0 + 1;

        goto label04;

     label06:
        $r23 := @caughtexception;

        return null;

     label07:
        r4 = null;

        z0 = 1;

        r2 = null;

     label08:
        i2 = i0;

     label09:
        $b9 = r1[i0];

        if $b9 == 13 goto label13;

        b8 = r1[i0];

     label10:
        if b8 == 10 goto label13;

        i0 = i0 + 1;

        goto label09;

     label11:
        $r19 := @caughtexception;

     label12:
        if r2 != null goto label25;

        $r18 = new java.text.ParseException;

        specialinvoke $r18.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad message", 0);

        throw $r18;

     label13:
        i4 = i0 - i2;

     label14:
        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i2, i4, "UTF-8");

        r7 = $r10;

     label15:
        r8 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String trimEndOfLine(java.lang.String)>(r7);

        $i10 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i10 != 0 goto label19;

        if r4 == null goto label16;

        if r2 == null goto label16;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r4, r2);

     label16:
        $b11 = r1[i0];

        if $b11 != 13 goto label17;

        $i15 = lengthof r1;

        $i17 = i0 + 1;

        if $i15 <= $i17 goto label17;

        $i16 = i0 + 1;

        $b18 = r1[$i16];

        if $b18 != 10 goto label17;

        i0 = i0 + 1;

     label17:
        i0 = i0 + 1;

        i6 = virtualinvoke r8.<java.lang.String: int length()>();

        z0 = 0;

        if i6 > 0 goto label08;

        goto label12;

     label18:
        $r22 := @caughtexception;

        $r21 = new java.text.ParseException;

        specialinvoke $r21.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad message encoding!", 0);

        throw $r21;

     label19:
        if z0 == 0 goto label20;

        r2 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String)>(r8);

        goto label16;

     label20:
        c5 = virtualinvoke r8.<java.lang.String: char charAt(int)>(0);

        if c5 == 9 goto label21;

        if c5 != 32 goto label23;

     label21:
        if r4 != null goto label22;

        $r20 = new java.text.ParseException;

        specialinvoke $r20.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad header continuation.", 0);

        throw $r20;

     label22:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label16;

     label23:
        if r4 == null goto label24;

        if r2 == null goto label24;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r4, r2);

     label24:
        r4 = r8;

        goto label16;

     label25:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void setSize(int)>(i0);

        $z1 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody>;

        if $z1 == 0 goto label02;

        $r16 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        if $r16 == null goto label02;

        $r15 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i12 = interfaceinvoke $r15.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i12 == 0 goto label02;

        $i14 = lengthof r1;

        i3 = $i14 - i0;

        r6 = newarray (byte)[i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r6, 0, i3);

        $z2 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        $r17 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i13 = interfaceinvoke $r17.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(byte[],boolean,int)>(r6, $z2, $i13);

        return r2;

        catch java.lang.ArrayIndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label11;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label18;
    }

    public gov.nist.javax.sip.header.RequestLine parseSIPRequestLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r6;
        gov.nist.javax.sip.parser.RequestLineParser $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        gov.nist.javax.sip.header.RequestLine $r7;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.RequestLineParser;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r2.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        return $r7;
    }

    public gov.nist.javax.sip.header.StatusLine parseSIPStatusLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r6;
        gov.nist.javax.sip.parser.StatusLineParser $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        gov.nist.javax.sip.header.StatusLine $r7;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.StatusLineParser;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<gov.nist.javax.sip.parser.StatusLineParser: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r2.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()>();

        return $r7;
    }

    public gov.nist.javax.sip.address.SipUri parseSIPUrl(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r10;
        gov.nist.javax.sip.address.SipUri r3;
        gov.nist.javax.sip.parser.URLParser $r4;
        java.lang.ClassCastException $r5;
        java.text.ParseException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r4.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        r3 = virtualinvoke $r4.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.SipUri sipURL(boolean)>(1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.text.ParseException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Not a SIP URL ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, 0);

        throw $r6;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.URLParser $r2;
        gov.nist.javax.sip.address.TelephoneNumber $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean)>(1);

        return $r3;
    }

    public gov.nist.javax.sip.address.GenericURI parseUrl(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.URLParser $r2;
        gov.nist.javax.sip.address.GenericURI $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI parse()>();

        return $r3;
    }

    public void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        gov.nist.javax.sip.parser.ParseExceptionListener r1;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.ParseExceptionListener;

        r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener> = r1;

        return;
    }

    public void setStrict(boolean)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict> = z0;

        return;
    }
}
