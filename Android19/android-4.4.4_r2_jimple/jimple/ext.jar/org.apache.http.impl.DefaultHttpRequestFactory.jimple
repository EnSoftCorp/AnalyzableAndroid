public class org.apache.http.impl.DefaultHttpRequestFactory extends java.lang.Object implements org.apache.http.HttpRequestFactory
{
    private static final java.lang.String[] RFC2616_COMMON_METHODS;
    private static final java.lang.String[] RFC2616_ENTITY_ENC_METHODS;
    private static final java.lang.String[] RFC2616_SPECIAL_METHODS;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "GET";

        <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "POST";

        $r1[1] = "PUT";

        <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_ENTITY_ENC_METHODS> = $r1;

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "HEAD";

        $r2[1] = "OPTIONS";

        $r2[2] = "DELETE";

        $r2[3] = "TRACE";

        <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_SPECIAL_METHODS> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.DefaultHttpRequestFactory r0;

        r0 := @this: org.apache.http.impl.DefaultHttpRequestFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean isOneOf(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        $r2 = r0[i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public org.apache.http.HttpRequest newHttpRequest(java.lang.String, java.lang.String) throws org.apache.http.MethodNotSupportedException
    {
        org.apache.http.impl.DefaultHttpRequestFactory r0;
        java.lang.String r1, r2, $r10;
        java.lang.String[] $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        org.apache.http.MethodNotSupportedException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.http.message.BasicHttpRequest $r11, $r13;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r12;

        r0 := @this: org.apache.http.impl.DefaultHttpRequestFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        $r13 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r13.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r13;

     label1:
        $r4 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_ENTITY_ENC_METHODS>;

        $z1 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r4, r1);

        if $z1 == 0 goto label2;

        $r12 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        specialinvoke $r12.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r12;

     label2:
        $r5 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_SPECIAL_METHODS>;

        $z2 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r5, r1);

        if $z2 == 0 goto label3;

        $r11 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r11.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r11;

     label3:
        $r6 = new org.apache.http.MethodNotSupportedException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method not supported");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.MethodNotSupportedException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    public org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) throws org.apache.http.MethodNotSupportedException
    {
        org.apache.http.impl.DefaultHttpRequestFactory r0;
        org.apache.http.RequestLine r1;
        java.lang.String r2, $r10;
        java.lang.String[] $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        org.apache.http.MethodNotSupportedException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        org.apache.http.message.BasicHttpRequest $r11, $r12;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: org.apache.http.impl.DefaultHttpRequestFactory;

        r1 := @parameter0: org.apache.http.RequestLine;

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request line may not be null");

        throw $r14;

     label1:
        r2 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $r3 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_COMMON_METHODS>;

        $z0 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r3, r2);

        if $z0 == 0 goto label2;

        $r12 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r12.<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>(r1);

        return $r12;

     label2:
        $r4 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_ENTITY_ENC_METHODS>;

        $z1 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r4, r2);

        if $z1 == 0 goto label3;

        $r13 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        specialinvoke $r13.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(org.apache.http.RequestLine)>(r1);

        return $r13;

     label3:
        $r5 = <org.apache.http.impl.DefaultHttpRequestFactory: java.lang.String[] RFC2616_SPECIAL_METHODS>;

        $z2 = staticinvoke <org.apache.http.impl.DefaultHttpRequestFactory: boolean isOneOf(java.lang.String[],java.lang.String)>($r5, r2);

        if $z2 == 0 goto label4;

        $r11 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r11.<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>(r1);

        return $r11;

     label4:
        $r6 = new org.apache.http.MethodNotSupportedException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method not supported");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.MethodNotSupportedException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }
}
