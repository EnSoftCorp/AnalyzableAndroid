public class gov.nist.javax.sip.parser.CSeqParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.CSeqParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.CSeqParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.CSeqParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.CSeqParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.CSeqParser r0;
        gov.nist.javax.sip.header.CSeq r1, $r4;
        javax.sip.InvalidArgumentException r2, $r22;
        java.lang.NumberFormatException r3, $r20;
        gov.nist.core.LexerCore $r5, $r7, $r8, $r10, $r11, $r13, $r15, $r18;
        java.lang.String $r12, $r14, $r16, $r21;
        long $l0;
        java.text.ParseException $r19, $r23;

        r0 := @this: gov.nist.javax.sip.parser.CSeqParser;

     label1:
        $r4 = new gov.nist.javax.sip.header.CSeq;

        specialinvoke $r4.<gov.nist.javax.sip.header.CSeq: void <init>()>();

        r1 = $r4;

        $r5 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2094);

        $r7 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r10 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

        $r11 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        $r12 = virtualinvoke $r11.<gov.nist.core.LexerCore: java.lang.String number()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r12);

        virtualinvoke r1.<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)>($l0);

        $r13 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.parser.CSeqParser: java.lang.String method()>();

        $r16 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)>($r14);

        virtualinvoke r1.<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>($r16);

        $r15 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        $r18 = r0.<gov.nist.javax.sip.parser.CSeqParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label2:
        return r1;

     label3:
        $r20 := @caughtexception;

        r3 = $r20;

        staticinvoke <gov.nist.core.Debug: void printStackTrace(java.lang.Exception)>(r3);

        $r19 = virtualinvoke r0.<gov.nist.javax.sip.parser.CSeqParser: java.text.ParseException createParseException(java.lang.String)>("Number format exception");

        throw $r19;

     label4:
        $r22 := @caughtexception;

        r2 = $r22;

        staticinvoke <gov.nist.core.Debug: void printStackTrace(java.lang.Exception)>(r2);

        $r21 = virtualinvoke r2.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r23 = virtualinvoke r0.<gov.nist.javax.sip.parser.CSeqParser: java.text.ParseException createParseException(java.lang.String)>($r21);

        throw $r23;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch javax.sip.InvalidArgumentException from label1 to label2 with label4;
    }
}
