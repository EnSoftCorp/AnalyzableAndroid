public class gov.nist.javax.sip.parser.ims.PrivacyParser extends gov.nist.javax.sip.parser.HeaderParser implements gov.nist.javax.sip.parser.TokenTypes
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PrivacyParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PrivacyParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PrivacyParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PrivacyParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r3;
        int i0, $i1;
        gov.nist.javax.sip.header.ims.PrivacyList r2;
        gov.nist.javax.sip.parser.ims.PrivacyParser $r4;
        java.lang.String $r5, $r10, $r12;
        gov.nist.javax.sip.header.SIPHeader $r6;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.io.PrintStream $r8;

        r0 := @parameter0: java.lang.String[];

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "Privacy: none\n";

        $r3[1] = "Privacy: none;id;user\n";

        r1 = $r3;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r4 = new gov.nist.javax.sip.parser.ims.PrivacyParser;

        $r5 = r1[i0];

        specialinvoke $r4.<gov.nist.javax.sip.parser.ims.PrivacyParser: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        r2 = (gov.nist.javax.sip.header.ims.PrivacyList) $r6;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r10 = virtualinvoke r2.<gov.nist.javax.sip.header.ims.PrivacyList: java.lang.String encode()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PrivacyParser r0;
        gov.nist.javax.sip.header.ims.PrivacyList r1, $r5;
        java.lang.Throwable r2, $r24;
        gov.nist.javax.sip.header.ims.Privacy r3, r4, $r8, $r18;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r6, $r7, $r9, $r10, $r14, $r15, $r17, $r19, $r21, $r23, $r26;
        char $c0, $c1;
        java.lang.String $r12, $r25;
        gov.nist.core.Token $r13, $r22;

        r0 := @this: gov.nist.javax.sip.parser.ims.PrivacyParser;

        $z0 = <gov.nist.javax.sip.parser.ims.PrivacyParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: void dbg_enter(java.lang.String)>("PrivacyParser.parse");

     label1:
        $r5 = new gov.nist.javax.sip.header.ims.PrivacyList;

        specialinvoke $r5.<gov.nist.javax.sip.header.ims.PrivacyList: void <init>()>();

        r1 = $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: void headerName(int)>(2126);

     label3:
        $r6 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label8;

        $r7 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = new gov.nist.javax.sip.header.ims.Privacy;

        specialinvoke $r8.<gov.nist.javax.sip.header.ims.Privacy: void <init>()>();

        r3 = $r8;

        virtualinvoke r3.<gov.nist.javax.sip.header.ims.Privacy: void setHeaderName(java.lang.String)>("Privacy");

        $r9 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r10 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        $r13 = virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r12 = virtualinvoke $r13.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.ims.Privacy: void setPrivacy(java.lang.String)>($r12);

        $r14 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PrivacyList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

     label4:
        $r15 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r15.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 59 goto label3;

        $r17 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

        $r19 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: void SPorHT()>();

        $r18 = new gov.nist.javax.sip.header.ims.Privacy;

        specialinvoke $r18.<gov.nist.javax.sip.header.ims.Privacy: void <init>()>();

        r4 = $r18;

        $r21 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r23 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        $r22 = virtualinvoke $r23.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r25 = virtualinvoke $r22.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r4.<gov.nist.javax.sip.header.ims.Privacy: void setPrivacy(java.lang.String)>($r25);

        $r26 = r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r26.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PrivacyList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

     label5:
        goto label4;

     label6:
        $r24 := @caughtexception;

        r2 = $r24;

        $z4 = <gov.nist.javax.sip.parser.ims.PrivacyParser: boolean debug>;

        if $z4 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: void dbg_leave(java.lang.String)>("PrivacyParser.parse");

     label7:
        throw r2;

     label8:
        $z1 = <gov.nist.javax.sip.parser.ims.PrivacyParser: boolean debug>;

        if $z1 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PrivacyParser: void dbg_leave(java.lang.String)>("PrivacyParser.parse");

     label9:
        return r1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
