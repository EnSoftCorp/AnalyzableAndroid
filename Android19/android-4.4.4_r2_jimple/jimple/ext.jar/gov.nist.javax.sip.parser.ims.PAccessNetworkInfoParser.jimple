public class gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser extends gov.nist.javax.sip.parser.HeaderParser implements gov.nist.javax.sip.parser.TokenTypes
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser r0;
        java.lang.Throwable r1, $r19;
        gov.nist.javax.sip.header.ims.PAccessNetworkInfo r2, $r3;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r4, $r5, $r7, $r10, $r11, $r12, $r13, $r16, $r18, $r20;
        gov.nist.core.Token $r8;
        java.lang.String $r9;
        char $c0;
        gov.nist.core.NameValue $r17;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser;

        $z0 = <gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: void dbg_enter(java.lang.String)>("AccessNetworkInfoParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: void headerName(int)>(2127);

        $r3 = new gov.nist.javax.sip.header.ims.PAccessNetworkInfo;

        specialinvoke $r3.<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setHeaderName(java.lang.String)>("P-Access-Network-Info");

        $r4 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: void SPorHT()>();

        $r5 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r7 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        $r8 = virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r9 = virtualinvoke $r8.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setAccessType(java.lang.String)>($r9);

        $r10 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

     label2:
        $r11 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r11.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 59 goto label6;

        $r16 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

        $r18 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: void SPorHT()>();

        $r17 = specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.core.NameValue nameValue(char)>(61);

        virtualinvoke r2.<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setParameter(gov.nist.core.NameValue)>($r17);

        $r20 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: void SPorHT()>();

     label3:
        goto label2;

     label4:
        $r19 := @caughtexception;

        r1 = $r19;

        $z2 = <gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: void dbg_leave(java.lang.String)>("AccessNetworkInfoParser.parse");

     label5:
        throw r1;

     label6:
        $r12 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        $r13 = r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label7:
        $z1 = <gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: boolean debug>;

        if $z1 == 0 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser: void dbg_leave(java.lang.String)>("AccessNetworkInfoParser.parse");

     label8:
        return r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }
}
