public class com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher extends com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher implements com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE
{
    private java.lang.Class[] availableSpecs;
    private com.android.org.bouncycastle.crypto.BlockCipher baseEngine;
    private com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher;
    private com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider engineProvider;
    private int ivLength;
    private com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam;
    private java.lang.String modeName;
    private boolean padded;
    private java.lang.String pbeAlgorithm;
    private javax.crypto.spec.PBEParameterSpec pbeSpec;

    protected void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        java.lang.Class[] $r2;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = r1;

        $r3 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        specialinvoke $r3.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r3;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.BlockCipher, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        int i0, $i1;
        java.lang.Class[] $r2;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = r1;

        $r3 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        specialinvoke $r3.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r3;

        $i1 = i0 / 8;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i1;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BufferedBlockCipher r1;
        int i0, $i1;
        java.lang.Class[] $r2;
        com.android.org.bouncycastle.crypto.BlockCipher $r3;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        $r3 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = $r3;

        $r4 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        specialinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r4;

        $i1 = i0 / 8;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i1;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider r1;
        java.lang.Class[] $r2;
        com.android.org.bouncycastle.crypto.BlockCipher $r3, $r5;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        $r3 = interfaceinvoke r1.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider: com.android.org.bouncycastle.crypto.BlockCipher get()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = $r3;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider engineProvider> = r1;

        $r4 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r5 = interfaceinvoke r1.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider: com.android.org.bouncycastle.crypto.BlockCipher get()>();

        specialinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r5);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r4;

        return;
    }

    private boolean isAEADModeName(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.lang.String;

        $r2 = "CCM";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = "GCM";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i6;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException r3, $r12;
        com.android.org.bouncycastle.crypto.DataLengthException r4, $r13;
        com.android.org.bouncycastle.crypto.OutputLengthException r5, $r8;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r6, $r7;
        java.lang.String $r9, $r14, $r15;
        javax.crypto.ShortBufferException r17;
        javax.crypto.IllegalBlockSizeException r18;
        javax.crypto.BadPaddingException r19;
        java.lang.Throwable r20, r21, r22;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        i3 = 0;

        if i1 == 0 goto label2;

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i3 = interfaceinvoke $r7.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

     label2:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $i5 = i2 + i3;

        i4 = interfaceinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int doFinal(byte[],int)>(r2, $i5);

     label3:
        $i6 = i4 + i3;

        return $i6;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        r17 = new javax.crypto.ShortBufferException;

        $r9 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.OutputLengthException: java.lang.String getMessage()>();

        specialinvoke r17.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r9);

        r20 = (java.lang.Throwable) r17;

        throw r20;

     label5:
        $r13 := @caughtexception;

        r4 = $r13;

        r18 = new javax.crypto.IllegalBlockSizeException;

        $r15 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke r18.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r15);

        r21 = (java.lang.Throwable) r18;

        throw r21;

     label6:
        $r12 := @caughtexception;

        r3 = $r12;

        r19 = new javax.crypto.BadPaddingException;

        $r14 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke r19.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r14);

        r22 = (java.lang.Throwable) r19;

        throw r22;

        catch com.android.org.bouncycastle.crypto.OutputLengthException from label1 to label2 with label4;
        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label2 with label5;
        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label6;
        catch com.android.org.bouncycastle.crypto.OutputLengthException from label2 to label3 with label4;
        catch com.android.org.bouncycastle.crypto.DataLengthException from label2 to label3 with label5;
        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label2 to label3 with label6;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2, r5;
        int i0, i1, i2, i3, i4, $i5, $i6;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException r3, $r12;
        com.android.org.bouncycastle.crypto.DataLengthException r4, $r8;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r6, $r7;
        java.lang.String $r9, $r13;
        javax.crypto.IllegalBlockSizeException r14;
        javax.crypto.BadPaddingException r15;
        java.lang.Throwable r16, r17;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i5 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int engineGetOutputSize(int)>(i1);

        r2 = newarray (byte)[$i5];

        i2 = 0;

        if i1 == 0 goto label1;

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i2 = interfaceinvoke $r7.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, 0);

     label1:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i3 = interfaceinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int doFinal(byte[],int)>(r2, i2);

     label2:
        i4 = i2 + i3;

        $i6 = lengthof r2;

        if i4 != $i6 goto label5;

        return r2;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        r14 = new javax.crypto.IllegalBlockSizeException;

        $r9 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke r14.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r9);

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

        r15 = new javax.crypto.BadPaddingException;

        $r13 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke r15.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r13);

        r17 = (java.lang.Throwable) r15;

        throw r17;

     label5:
        r5 = newarray (byte)[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r5, 0, i4);

        return r5;

        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label4;
    }

    protected int engineGetBlockSize()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    protected byte[] engineGetIV()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r1, $r2;
        byte[] $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        return $r3;

     label1:
        return null;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.security.Key r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.security.Key;

        $r2 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        $i0 = lengthof $r2;

        $i1 = 8 * $i0;

        return $i1;
    }

    protected int engineGetOutputSize(int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0, $i1;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $i1 = interfaceinvoke $r1.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int getOutputSize(int)>(i0);

        return $i1;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, $r14, $r19;
        java.lang.Exception r2, $r17, $r21;
        java.security.AlgorithmParameters $r4, $r5, $r10, $r12, $r16, $r18;
        javax.crypto.spec.PBEParameterSpec $r6, $r15;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r7, $r11;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r8;
        com.android.org.bouncycastle.crypto.BlockCipher $r9;
        int $i0, $i1;
        byte[] $r13;
        java.lang.RuntimeException r22;
        java.security.spec.AlgorithmParameterSpec r23;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        if $r4 != null goto label2;

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        if $r6 == null goto label4;

     label1:
        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm>;

        $r16 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r14, "BC");

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = $r16;

        $r18 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        r23 = (java.security.spec.AlgorithmParameterSpec) $r15;

        virtualinvoke $r18.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>(r23);

     label2:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        return $r5;

     label3:
        $r21 := @caughtexception;

        return null;

     label4:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r7 == null goto label2;

        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r9 = interfaceinvoke $r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r1 = interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);

        if $i0 < 0 goto label5;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label5:
        $r10 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(r1, "BC");

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = $r10;

        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r13 = virtualinvoke $r11.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        virtualinvoke $r12.<java.security.AlgorithmParameters: void init(byte[])>($r13);

     label6:
        goto label2;

     label7:
        $r17 := @caughtexception;

        r2 = $r17;

        r22 = new java.lang.RuntimeException;

        $r19 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw r22;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0, i1, i2;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.security.SecureRandom r3;
        java.security.spec.AlgorithmParameterSpec r4, r6;
        java.lang.Class[] $r7, $r13;
        java.security.InvalidAlgorithmParameterException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r14;
        java.lang.Class $r15;
        java.lang.Exception $r16;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        r4 = null;

        if r2 == null goto label6;

        i1 = 0;

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs>;

        i2 = lengthof $r7;

        r4 = null;

        if i1 == i2 goto label4;

     label2:
        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs>;

        $r15 = $r13[i1];

        r6 = virtualinvoke r2.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>($r15);

     label3:
        r4 = r6;

     label4:
        if r4 != null goto label6;

        $r8 = new java.security.InvalidAlgorithmParameterException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t handle parameter ");

        $r11 = virtualinvoke r2.<java.security.AlgorithmParameters: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label5:
        $r16 := @caughtexception;

        i1 = i1 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, r4, r3);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = r2;

        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0;
        java.security.Key r1;
        java.security.SecureRandom r2;
        java.security.InvalidAlgorithmParameterException r3, $r5;
        java.security.spec.AlgorithmParameterSpec $r4;
        java.security.InvalidKeyException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

     label1:
        $r4 = (java.security.spec.AlgorithmParameterSpec) null;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, $r4, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.security.InvalidKeyException;

        $r7 = virtualinvoke r3.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3, r8, $r32;
        com.android.org.bouncycastle.crypto.CipherParameters r4, r5, r6, $r50;
        java.lang.Exception r7, $r76;
        byte[] r9, $r15, $r34, $r35, $r40, $r43, $r47, $r60;
        javax.crypto.spec.IvParameterSpec r10, $r61;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.security.InvalidAlgorithmParameterException $r12, $r31, $r33, $r46, $r57, $r72;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r13, $r36, $r54;
        java.lang.String $r14, $r20, $r27, $r30, $r41, $r49, $r53, $r56, $r62, $r68, $r70, $r74, $r75;
        java.lang.StringBuilder $r16, $r18, $r19, $r21, $r44, $r45, $r51, $r52, $r66, $r69, $r77, $r78;
        java.security.InvalidParameterException $r17;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r22, $r23, $r28, $r59;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom $r24;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r25, $r26, $r37, $r38, $r39, $r42, $r64, $r65;
        com.android.org.bouncycastle.crypto.BlockCipher $r29, $r55, $r71;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r48, $r63;
        javax.crypto.spec.PBEParameterSpec $r58;
        java.security.InvalidKeyException $r67, $r73;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter3: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = null;

        $z0 = r1 instanceof javax.crypto.SecretKey;

        if $z0 != 0 goto label01;

        $r67 = new java.security.InvalidKeyException;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key for algorithm ");

        $r68 = interfaceinvoke r1.<java.security.Key: java.lang.String getAlgorithm()>();

        $r77 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not suitable for symmetric enryption.");

        $r75 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r75);

        throw $r67;

     label01:
        if r2 != null goto label02;

        $r71 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r70 = interfaceinvoke $r71.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $z11 = virtualinvoke $r70.<java.lang.String: boolean startsWith(java.lang.String)>("RC5-64");

        if $z11 == 0 goto label02;

        $r72 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r72.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("RC5 requires an RC5ParametersSpec to be passed in.");

        throw $r72;

     label02:
        $z1 = r1 instanceof com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey;

        if $z1 == 0 goto label15;

        r11 = (com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey) r1;

        $r48 = virtualinvoke r11.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()>();

        if $r48 == null goto label12;

        $r63 = virtualinvoke r11.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()>();

        $r62 = virtualinvoke $r63.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = $r62;

     label03:
        $r50 = virtualinvoke r11.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        if $r50 == null goto label13;

        r4 = virtualinvoke r11.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        $z10 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z10 == 0 goto label04;

        $r65 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r61 = (javax.crypto.spec.IvParameterSpec) r2;

        $r60 = virtualinvoke $r61.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r65.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>(r4, $r60);

        r4 = $r65;

     label04:
        $z8 = r4 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z8 == 0 goto label05;

        $r64 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r64;

     label05:
        $i2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i2 == 0 goto label28;

        $z4 = r4 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z4 != 0 goto label28;

        r8 = r3;

        if r8 != null goto label06;

        $r32 = new java.security.SecureRandom;

        specialinvoke $r32.<java.security.SecureRandom: void <init>()>();

        r8 = $r32;

     label06:
        if i0 == 1 goto label07;

        if i0 != 3 goto label22;

     label07:
        $i3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        r9 = newarray (byte)[$i3];

        virtualinvoke r8.<java.security.SecureRandom: void nextBytes(byte[])>(r9);

        $r25 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        specialinvoke $r25.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>(r4, r9);

        r5 = $r25;

        $r26 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r5;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r26;

     label08:
        if r3 == null goto label27;

        $z3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean padded>;

        if $z3 == 0 goto label27;

        $r24 = new com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        specialinvoke $r24.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r5, r3);

        r6 = $r24;

     label09:
        tableswitch(i0)
        {
            case 1: goto label23;
            case 2: goto label25;
            case 3: goto label23;
            case 4: goto label25;
            default: goto label10;
        };

     label10:
        $r17 = new java.security.InvalidParameterException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown opmode ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" passed");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label11:
        $r76 := @caughtexception;

        r7 = $r76;

        $r73 = new java.security.InvalidKeyException;

        $r74 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r73.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r74);

        throw $r73;

     label12:
        $r49 = virtualinvoke r11.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: java.lang.String getAlgorithm()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = $r49;

        goto label03;

     label13:
        $z9 = r2 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z9 == 0 goto label14;

        $r58 = (javax.crypto.spec.PBEParameterSpec) r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = $r58;

        $r59 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r55 = interfaceinvoke $r59.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r56 = interfaceinvoke $r55.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util: com.android.org.bouncycastle.crypto.CipherParameters makePBEParameters(com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)>(r11, r2, $r56);

        goto label04;

     label14:
        $r57 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r57.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("PBE requires PBE parameters to be set.");

        throw $r57;

     label15:
        if r2 != null goto label16;

        $r54 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r47 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r54.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r47);

        r4 = $r54;

        goto label05;

     label16:
        $z2 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z2 == 0 goto label21;

        $i1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i1 == 0 goto label19;

        r10 = (javax.crypto.spec.IvParameterSpec) r2;

        $r34 = virtualinvoke r10.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        $i6 = lengthof $r34;

        $i5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i6 == $i5 goto label17;

        $r41 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z7 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean isAEADModeName(java.lang.String)>($r41);

        if $z7 != 0 goto label17;

        $r46 = new java.security.InvalidAlgorithmParameterException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV must be ");

        $i7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes long.");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r53);

        throw $r46;

     label17:
        $z6 = r1 instanceof com.android.org.bouncycastle.jce.spec.RepeatedSecretKeySpec;

        if $z6 == 0 goto label18;

        $r38 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r43 = virtualinvoke r10.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r38.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>(null, $r43);

        r4 = $r38;

        $r42 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r42;

        goto label05;

     label18:
        $r37 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r36 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r35 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r36.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r35);

        $r40 = virtualinvoke r10.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r37.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>($r36, $r40);

        r4 = $r37;

        $r39 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r39;

        goto label05;

     label19:
        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        if $r14 == null goto label20;

        $r30 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z5 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z5 == 0 goto label20;

        $r33 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r33.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ECB mode does not use an IV");

        throw $r33;

     label20:
        $r13 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r15 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r13.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r15);

        r4 = $r13;

        goto label05;

     label21:
        $r12 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r12.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r12;

     label22:
        $r28 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r29 = interfaceinvoke $r28.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r27 = interfaceinvoke $r29.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i4 = virtualinvoke $r27.<java.lang.String: int indexOf(java.lang.String)>("PGPCFB");

        if $i4 >= 0 goto label28;

        $r31 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r31.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("no IV set when one expected");

        throw $r31;

     label23:
        $r22 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r22.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r6);

     label24:
        return;

     label25:
        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r23.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(0, r6);

     label26:
        return;

     label27:
        r6 = r5;

        goto label09;

     label28:
        r5 = r4;

        goto label08;

        catch java.lang.Exception from label10 to label11 with label11;
        catch java.lang.Exception from label23 to label24 with label11;
        catch java.lang.Exception from label25 to label26 with label11;
    }

    protected void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r44, $r45, $r46, $r49, $r55, $r56;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.security.NoSuchAlgorithmException $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        com.android.org.bouncycastle.crypto.BlockCipher $r17, $r21, $r22, $r23, $r25, $r27, $r32, $r33, $r34, $r39, $r41, $r47, $r48, $r53, $r54, $r57, $r59, $r60, $r64, $r66, $r67;
        com.android.org.bouncycastle.crypto.modes.GCMBlockCipher $r18;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher $r19, $r20;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher $r24;
        com.android.org.bouncycastle.crypto.modes.CBCBlockCipher $r26, $r61;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r28, $r30, $r38, $r43, $r50, $r51, $r62, $r63, $r68;
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher $r29;
        com.android.org.bouncycastle.crypto.BufferedBlockCipher $r31, $r37;
        com.android.org.bouncycastle.crypto.modes.SICBlockCipher $r35, $r36;
        java.lang.IllegalArgumentException $r40;
        com.android.org.bouncycastle.crypto.modes.CFBBlockCipher $r42, $r52;
        com.android.org.bouncycastle.crypto.modes.OFBBlockCipher $r58, $r65;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = $r2;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z0 == 0 goto label01;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        $r68 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r66 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r68.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r66);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r68;

        return;

     label01:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("CBC");

        if $z1 == 0 goto label02;

        $r60 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i16 = interfaceinvoke $r60.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i16;

        $r62 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r61 = new com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r67 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r61.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r67);

        specialinvoke $r62.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r61);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r62;

        return;

     label02:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("OFB");

        if $z2 == 0 goto label04;

        $r54 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i12 = interfaceinvoke $r54.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i12;

        $r49 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $i13 = virtualinvoke $r49.<java.lang.String: int length()>();

        if $i13 == 3 goto label03;

        $r56 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $r55 = virtualinvoke $r56.<java.lang.String: java.lang.String substring(int)>(3);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r55);

        $r63 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r65 = new com.android.org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r64 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r65.<com.android.org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r64, i1);

        specialinvoke $r63.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r65);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r63;

        return;

     label03:
        $r50 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r58 = new com.android.org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r59 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r57 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i15 = interfaceinvoke $r57.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i14 = 8 * $i15;

        specialinvoke $r58.<com.android.org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r59, $i14);

        specialinvoke $r50.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r58);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r50;

        return;

     label04:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("CFB");

        if $z3 == 0 goto label06;

        $r39 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i8 = interfaceinvoke $r39.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i8;

        $r44 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $i9 = virtualinvoke $r44.<java.lang.String: int length()>();

        if $i9 == 3 goto label05;

        $r45 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $r46 = virtualinvoke $r45.<java.lang.String: java.lang.String substring(int)>(3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r46);

        $r51 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r52 = new com.android.org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r53 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r52.<com.android.org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r53, i0);

        specialinvoke $r51.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r52);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r51;

        return;

     label05:
        $r43 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r42 = new com.android.org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r48 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r47 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i11 = interfaceinvoke $r47.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i10 = 8 * $i11;

        specialinvoke $r42.<com.android.org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r48, $i10);

        specialinvoke $r43.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r42);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r43;

        return;

     label06:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z4 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("SIC");

        if $z4 == 0 goto label08;

        $r33 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i6 = interfaceinvoke $r33.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i6;

        $i7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i7 >= 16 goto label07;

        $r40 = new java.lang.IllegalArgumentException;

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Warning: SIC-Mode can become a twotime-pad if the blocksize of the cipher is too small. Use a cipher with a block size of at least 128 bits (e.g. AES)");

        throw $r40;

     label07:
        $r38 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r37 = new com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        $r36 = new com.android.org.bouncycastle.crypto.modes.SICBlockCipher;

        $r41 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r36.<com.android.org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r41);

        specialinvoke $r37.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r36);

        specialinvoke $r38.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r37);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r38;

        return;

     label08:
        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z5 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("CTR");

        if $z5 == 0 goto label09;

        $r32 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i5 = interfaceinvoke $r32.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i5;

        $r30 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r31 = new com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        $r35 = new com.android.org.bouncycastle.crypto.modes.SICBlockCipher;

        $r34 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r35.<com.android.org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r34);

        specialinvoke $r31.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r35);

        specialinvoke $r30.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r31);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r30;

        return;

     label09:
        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z6 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("CTS");

        if $z6 == 0 goto label10;

        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i4 = interfaceinvoke $r23.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i4;

        $r28 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r29 = new com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r26 = new com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r27 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r26.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r27);

        specialinvoke $r29.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r26);

        specialinvoke $r28.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r29);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r28;

        return;

     label10:
        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z7 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("CCM");

        if $z7 == 0 goto label11;

        $r22 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i3 = interfaceinvoke $r22.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i3;

        $r20 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher;

        $r24 = new com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r25 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r24.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r25);

        specialinvoke $r20.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.modes.AEADBlockCipher)>($r24);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r20;

        return;

     label11:
        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z8 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("GCM");

        if $z8 == 0 goto label12;

        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i2 = interfaceinvoke $r17.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i2;

        $r19 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher;

        $r18 = new com.android.org.bouncycastle.crypto.modes.GCMBlockCipher;

        $r21 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r18.<com.android.org.bouncycastle.crypto.modes.GCMBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r21);

        specialinvoke $r19.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.modes.AEADBlockCipher)>($r18);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r19;

        return;

     label12:
        $r12 = new java.security.NoSuchAlgorithmException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r15);

        throw $r12;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, r2, $r3, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r5, $r9, $r13, $r17, $r28, $r32, $r35, $r40, $r42;
        com.android.org.bouncycastle.crypto.BlockCipher $r6, $r8, $r12, $r16, $r29, $r33, $r34, $r41;
        java.lang.StringBuilder $r20, $r24, $r25, r59;
        com.android.org.bouncycastle.crypto.BufferedBlockCipher r43;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher r44, r46, r48, r50, r52, r54, r56, r58;
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r45;
        javax.crypto.NoSuchPaddingException r47, r60;
        com.android.org.bouncycastle.crypto.paddings.ZeroBytePadding r49;
        com.android.org.bouncycastle.crypto.paddings.ISO10126d2Padding r51;
        com.android.org.bouncycastle.crypto.paddings.X923Padding r53;
        com.android.org.bouncycastle.crypto.paddings.ISO7816d4Padding r55;
        com.android.org.bouncycastle.crypto.paddings.TBCPadding r57;
        java.lang.Throwable r61, r62;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label02;

        $r40 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $z13 = interfaceinvoke $r40.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: boolean wrapOnNoPadding()>();

        if $z13 == 0 goto label01;

        r44 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        r43 = new com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        $r42 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r41 = interfaceinvoke $r42.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke r43.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r41);

        specialinvoke r44.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>(r43);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r44;

     label01:
        return;

     label02:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("WITHCTS");

        if $z1 == 0 goto label03;

        r46 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        r45 = new com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r35 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r34 = interfaceinvoke $r35.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke r45.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r34);

        specialinvoke r46.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>(r45);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r46;

        return;

     label03:
        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean padded> = 1;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean isAEADModeName(java.lang.String)>($r3);

        if $z2 == 0 goto label04;

        r47 = new javax.crypto.NoSuchPaddingException;

        specialinvoke r47.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>("Only NoPadding can be used with AEAD modes.");

        r61 = (java.lang.Throwable) r47;

        throw r61;

     label04:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS5PADDING");

        if $z3 != 0 goto label05;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS7PADDING");

        if $z4 == 0 goto label06;

     label05:
        r48 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r6 = interfaceinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke r48.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r6);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r48;

        return;

     label06:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ZEROBYTEPADDING");

        if $z5 == 0 goto label07;

        r50 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r32 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r33 = interfaceinvoke $r32.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r49 = new com.android.org.bouncycastle.crypto.paddings.ZeroBytePadding;

        specialinvoke r49.<com.android.org.bouncycastle.crypto.paddings.ZeroBytePadding: void <init>()>();

        specialinvoke r50.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r33, r49);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r50;

        return;

     label07:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126PADDING");

        if $z6 != 0 goto label08;

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126-2PADDING");

        if $z7 == 0 goto label09;

     label08:
        r52 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r8 = interfaceinvoke $r9.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r51 = new com.android.org.bouncycastle.crypto.paddings.ISO10126d2Padding;

        specialinvoke r51.<com.android.org.bouncycastle.crypto.paddings.ISO10126d2Padding: void <init>()>();

        specialinvoke r52.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r8, r51);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r52;

        return;

     label09:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("X9.23PADDING");

        if $z8 != 0 goto label10;

        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("X923PADDING");

        if $z9 == 0 goto label11;

     label10:
        r54 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r12 = interfaceinvoke $r13.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r53 = new com.android.org.bouncycastle.crypto.paddings.X923Padding;

        specialinvoke r53.<com.android.org.bouncycastle.crypto.paddings.X923Padding: void <init>()>();

        specialinvoke r54.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r12, r53);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r54;

        return;

     label11:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO7816-4PADDING");

        if $z10 != 0 goto label12;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO9797-1PADDING");

        if $z11 == 0 goto label13;

     label12:
        r56 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r16 = interfaceinvoke $r17.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r55 = new com.android.org.bouncycastle.crypto.paddings.ISO7816d4Padding;

        specialinvoke r55.<com.android.org.bouncycastle.crypto.paddings.ISO7816d4Padding: void <init>()>();

        specialinvoke r56.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r16, r55);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r56;

        return;

     label13:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("TBCPADDING");

        if $z12 == 0 goto label14;

        r58 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r28 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r29 = interfaceinvoke $r28.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r57 = new com.android.org.bouncycastle.crypto.paddings.TBCPadding;

        specialinvoke r57.<com.android.org.bouncycastle.crypto.paddings.TBCPadding: void <init>()>();

        specialinvoke r58.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r29, r57);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = r58;

        return;

     label14:
        r60 = new javax.crypto.NoSuchPaddingException;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Padding ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown.");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r60.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r22);

        r62 = (java.lang.Throwable) r60;

        throw r62;
    }

    protected int engineUpdate(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2, i3;
        com.android.org.bouncycastle.crypto.DataLengthException r3, $r5;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r4;
        java.lang.String $r7;
        javax.crypto.ShortBufferException r8;
        java.lang.Throwable r9;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i3 = interfaceinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

     label2:
        return i3;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        r8 = new javax.crypto.ShortBufferException;

        $r7 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke r8.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2, r3;
        int i0, i1, i2, i3, $i5;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r4, $r5, $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i2 = interfaceinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int getUpdateOutputSize(int)>(i1);

        if i2 <= 0 goto label3;

        r2 = newarray (byte)[i2];

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i3 = interfaceinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, 0);

        if i3 != 0 goto label1;

        return null;

     label1:
        $i5 = lengthof r2;

        if i3 == $i5 goto label2;

        r3 = newarray (byte)[i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i3);

        return r3;

     label2:
        return r2;

     label3:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, null, 0);

        return null;
    }
}
