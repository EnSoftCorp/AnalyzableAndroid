public class com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath extends java.security.cert.CertPath
{
    static final java.util.List certPathEncodings;
    private java.util.List certificates;

    static void <clinit>()
    {
        java.util.ArrayList r0, $r1;
        java.util.List $r2;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0 = $r1;

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>("PkiPath");

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>("PKCS7");

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r0);

        <com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certPathEncodings> = $r2;

        return;
    }

    void <init>(java.io.InputStream, java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.io.InputStream r1;
        java.lang.String r2, $r22, $r35, $r41, $r42, $r44;
        java.security.NoSuchProviderException r3, $r30, $r46;
        java.io.IOException r4, $r40, $r47;
        java.io.BufferedInputStream r5, $r12;
        java.security.cert.CertificateFactory r6, r10;
        java.security.cert.Certificate r7, $r32;
        com.android.org.bouncycastle.asn1.ASN1Primitive r8, $r26;
        java.util.Enumeration r9;
        byte[] r11;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.util.ArrayList $r13, $r23;
        java.util.List $r14, $r15, $r16, $r28;
        java.lang.StringBuilder $r17, $r19, $r20, $r34, $r36, $r37, $r38, $r43, $r45;
        java.security.cert.CertificateException $r18, $r31, $r33, $r39;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r21;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r24;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r25;
        java.lang.Object $r27;
        java.io.ByteArrayInputStream $r29;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.security.cert.CertPath: void <init>(java.lang.String)>("X.509");

     label01:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PkiPath");

        if $z0 == 0 goto label09;

        $r21 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r21.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r1);

        r8 = virtualinvoke $r21.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        $z4 = r8 instanceof com.android.org.bouncycastle.asn1.ASN1Sequence;

        if $z4 != 0 goto label04;

        $r33 = new java.security.cert.CertificateException;

        specialinvoke $r33.<java.security.cert.CertificateException: void <init>(java.lang.String)>("input stream does not contain a ASN1 SEQUENCE while reading PkiPath encoded data to load CertPath");

        throw $r33;

     label02:
        $r47 := @caughtexception;

        r4 = $r47;

     label03:
        $r39 = new java.security.cert.CertificateException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException throw while decoding CertPath:\n");

        $r44 = virtualinvoke r4.<java.io.IOException: java.lang.String toString()>();

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r42);

        throw $r39;

     label04:
        $r24 = (com.android.org.bouncycastle.asn1.ASN1Sequence) r8;

        r9 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r23;

        r10 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

     label05:
        $z5 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z5 == 0 goto label17;

        $r27 = interfaceinvoke r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r25 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r27;

        $r26 = interfaceinvoke $r25.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        r11 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        $r28 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r29 = new java.io.ByteArrayInputStream;

        specialinvoke $r29.<java.io.ByteArrayInputStream: void <init>(byte[])>(r11);

        $r32 = virtualinvoke r10.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r29);

        interfaceinvoke $r28.<java.util.List: void add(int,java.lang.Object)>(0, $r32);

     label06:
        goto label05;

     label07:
        $r46 := @caughtexception;

        r3 = $r46;

     label08:
        $r31 = new java.security.cert.CertificateException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BouncyCastle provider not found while trying to get a CertificateFactory:\n");

        $r35 = virtualinvoke r3.<java.security.NoSuchProviderException: java.lang.String toString()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r41);

        throw $r31;

     label09:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PKCS7");

        if $z1 != 0 goto label10;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PEM");

        if $z2 == 0 goto label18;

     label10:
        $r12 = new java.io.BufferedInputStream;

        specialinvoke $r12.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

        r5 = $r12;

     label11:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r13;

        r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

     label12:
        r7 = virtualinvoke r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r5);

     label13:
        if r7 == null goto label17;

     label14:
        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r7);

     label15:
        goto label12;

     label16:
        $r40 := @caughtexception;

        r4 = $r40;

        goto label03;

     label17:
        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r16 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List sortCerts(java.util.List)>($r14);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r16;

        return;

     label18:
        $r18 = new java.security.cert.CertificateException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported encoding: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label19:
        $r30 := @caughtexception;

        r3 = $r30;

        goto label08;

        catch java.io.IOException from label01 to label02 with label02;
        catch java.security.NoSuchProviderException from label01 to label02 with label07;
        catch java.io.IOException from label04 to label05 with label02;
        catch java.security.NoSuchProviderException from label04 to label05 with label07;
        catch java.io.IOException from label05 to label06 with label02;
        catch java.security.NoSuchProviderException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label02;
        catch java.security.NoSuchProviderException from label09 to label10 with label07;
        catch java.io.IOException from label10 to label11 with label02;
        catch java.security.NoSuchProviderException from label10 to label11 with label07;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.security.NoSuchProviderException from label11 to label12 with label19;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.security.NoSuchProviderException from label12 to label13 with label19;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.security.NoSuchProviderException from label14 to label15 with label19;
        catch java.io.IOException from label18 to label19 with label02;
        catch java.security.NoSuchProviderException from label18 to label19 with label07;
    }

    void <init>(java.util.List)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.List r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.security.cert.CertPath: void <init>(java.lang.String)>("X.509");

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r3 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List sortCerts(java.util.List)>($r2);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r3;

        return;
    }

    private java.util.List sortCerts(java.util.List)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.List r1;
        javax.security.auth.x500.X500Principal r2, r5, r8, $r17, $r20, $r23;
        boolean z0, z1, $z3, $z5, $z6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.ArrayList r3, r4, $r11, $r12;
        java.security.cert.X509Certificate r6, r7, $r9, $r15, $r19, $r24, $r26;
        java.lang.Object $r10, $r13, $r14, $r18, $r22, $r25, $r27;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 := @parameter0: java.util.List;

        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i6 >= 2 goto label02;

     label01:
        return r1;

     label02:
        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.security.cert.X509Certificate) $r10;

        r2 = virtualinvoke $r9.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        z0 = 1;

        i0 = 1;

     label03:
        $i7 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 == $i7 goto label05;

        $r25 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r24 = (java.security.cert.X509Certificate) $r25;

        $r23 = virtualinvoke $r24.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z6 = virtualinvoke r2.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r23);

        if $z6 == 0 goto label04;

        $r27 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r26 = (java.security.cert.X509Certificate) $r27;

        r2 = virtualinvoke $r26.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        i0 = i0 + 1;

        goto label03;

     label04:
        z0 = 0;

     label05:
        if z0 != 0 goto label01;

        $r11 = new java.util.ArrayList;

        $i8 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i8);

        r3 = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r4 = $r12;

        i1 = 0;

     label06:
        $i9 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i9 goto label11;

        $r18 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (java.security.cert.X509Certificate) $r18;

        r8 = virtualinvoke r7.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        i5 = 0;

     label07:
        i4 = interfaceinvoke r1.<java.util.List: int size()>();

        z1 = 0;

        if i5 == i4 goto label08;

        $r22 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r19 = (java.security.cert.X509Certificate) $r22;

        $r20 = virtualinvoke $r19.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z5 = virtualinvoke $r20.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r8);

        if $z5 == 0 goto label10;

        z1 = 1;

     label08:
        if z1 != 0 goto label09;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7);

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

     label09:
        i1 = i1 + 1;

        goto label06;

     label10:
        i5 = i5 + 1;

        goto label07;

     label11:
        $i11 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i11 <= 1 goto label12;

        return r4;

     label12:
        i2 = 0;

     label13:
        $i10 = interfaceinvoke r3.<java.util.List: int size()>();

        if i2 == $i10 goto label17;

        $r13 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        $r15 = (java.security.cert.X509Certificate) $r13;

        r5 = virtualinvoke $r15.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        i3 = 0;

     label14:
        $i13 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i13 goto label15;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = (java.security.cert.X509Certificate) $r14;

        $r17 = virtualinvoke r6.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z3 = virtualinvoke r5.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label16;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i3);

     label15:
        i2 = i2 + 1;

        goto label13;

     label16:
        i3 = i3 + 1;

        goto label14;

     label17:
        $i12 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i12 <= 0 goto label18;

        return r4;

     label18:
        return r3;
    }

    private com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.security.cert.X509Certificate r1;
        java.lang.Exception r2, $r6;
        com.android.org.bouncycastle.asn1.ASN1Primitive r3;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r4;
        byte[] $r5;
        java.security.cert.CertificateEncodingException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 := @parameter0: java.security.cert.X509Certificate;

     label1:
        $r4 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r5 = virtualinvoke r1.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r5);

        r3 = virtualinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.security.cert.CertificateEncodingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while encoding certificate: ");

        $r10 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r12);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private byte[] toDEREncoded(com.android.org.bouncycastle.asn1.ASN1Encodable) throws java.security.cert.CertificateEncodingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        com.android.org.bouncycastle.asn1.ASN1Encodable r1;
        java.io.IOException r2, $r5;
        byte[] r3;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r4;
        java.security.cert.CertificateEncodingException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.ASN1Encodable;

     label1:
        $r4 = interfaceinvoke r1.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        r3 = virtualinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.security.cert.CertificateEncodingException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r10);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.List getCertificates()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.ArrayList $r1;
        java.util.List $r2, $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r3;
    }

    public byte[] getEncoded() throws java.security.cert.CertificateEncodingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        java.lang.String $r3;
        byte[] $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.Iterator getEncodings()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = r2 instanceof java.lang.String;

        if $z1 == 0 goto label1;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: byte[] getEncoded(java.lang.String)>($r3);

        return $r4;

     label1:
        return null;
    }

    public byte[] getEncoded(java.lang.String) throws java.security.cert.CertificateEncodingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.lang.String r1, $r11;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector r2, r5, $r13, $r30;
        java.util.ListIterator r3;
        com.android.org.bouncycastle.asn1.pkcs.ContentInfo r4, $r12, $r22;
        int i0, $i1, $i2;
        com.android.org.bouncycastle.asn1.pkcs.SignedData r6, $r17;
        boolean $z0, $z1, $z2;
        java.security.cert.CertificateEncodingException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r14, $r21;
        java.util.List $r15, $r23, $r27, $r28;
        com.android.org.bouncycastle.asn1.ASN1Integer $r16;
        com.android.org.bouncycastle.asn1.DERSet $r18, $r19, $r20;
        byte[] $r24, $r34;
        java.security.cert.X509Certificate $r25, $r32;
        java.lang.Object $r26, $r35;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r29, $r33;
        com.android.org.bouncycastle.asn1.DERSequence $r31;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PkiPath");

        if $z0 == 0 goto label3;

        $r30 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r30.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r2 = $r30;

        $r28 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r27 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $i2 = interfaceinvoke $r27.<java.util.List: int size()>();

        r3 = interfaceinvoke $r28.<java.util.List: java.util.ListIterator listIterator(int)>($i2);

     label1:
        $z2 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();

        if $z2 == 0 goto label2;

        $r35 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $r32 = (java.security.cert.X509Certificate) $r35;

        $r33 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)>($r32);

        virtualinvoke r2.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r33);

        goto label1;

     label2:
        $r31 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r31.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r2);

        $r34 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: byte[] toDEREncoded(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r31);

        return $r34;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PKCS7");

        if $z1 == 0 goto label6;

        $r12 = new com.android.org.bouncycastle.asn1.pkcs.ContentInfo;

        $r14 = <com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier data>;

        specialinvoke $r12.<com.android.org.bouncycastle.asn1.pkcs.ContentInfo: void <init>(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,com.android.org.bouncycastle.asn1.ASN1Encodable)>($r14, null);

        r4 = $r12;

        $r13 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r5 = $r13;

        i0 = 0;

     label4:
        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        if i0 == $i1 goto label5;

        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r26 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i0);

        $r25 = (java.security.cert.X509Certificate) $r26;

        $r29 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)>($r25);

        virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r29);

        i0 = i0 + 1;

        goto label4;

     label5:
        $r17 = new com.android.org.bouncycastle.asn1.pkcs.SignedData;

        $r16 = new com.android.org.bouncycastle.asn1.ASN1Integer;

        specialinvoke $r16.<com.android.org.bouncycastle.asn1.ASN1Integer: void <init>(long)>(1L);

        $r19 = new com.android.org.bouncycastle.asn1.DERSet;

        specialinvoke $r19.<com.android.org.bouncycastle.asn1.DERSet: void <init>()>();

        $r18 = new com.android.org.bouncycastle.asn1.DERSet;

        specialinvoke $r18.<com.android.org.bouncycastle.asn1.DERSet: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r5);

        $r20 = new com.android.org.bouncycastle.asn1.DERSet;

        specialinvoke $r20.<com.android.org.bouncycastle.asn1.DERSet: void <init>()>();

        specialinvoke $r17.<com.android.org.bouncycastle.asn1.pkcs.SignedData: void <init>(com.android.org.bouncycastle.asn1.ASN1Integer,com.android.org.bouncycastle.asn1.ASN1Set,com.android.org.bouncycastle.asn1.pkcs.ContentInfo,com.android.org.bouncycastle.asn1.ASN1Set,com.android.org.bouncycastle.asn1.ASN1Set,com.android.org.bouncycastle.asn1.ASN1Set)>($r16, $r19, r4, $r18, null, $r20);

        r6 = $r17;

        $r22 = new com.android.org.bouncycastle.asn1.pkcs.ContentInfo;

        $r21 = <com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier signedData>;

        specialinvoke $r22.<com.android.org.bouncycastle.asn1.pkcs.ContentInfo: void <init>(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,com.android.org.bouncycastle.asn1.ASN1Encodable)>($r21, r6);

        $r24 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: byte[] toDEREncoded(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r22);

        return $r24;

     label6:
        $r7 = new java.security.cert.CertificateEncodingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported encoding: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    public java.util.Iterator getEncodings()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certPathEncodings>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }
}
