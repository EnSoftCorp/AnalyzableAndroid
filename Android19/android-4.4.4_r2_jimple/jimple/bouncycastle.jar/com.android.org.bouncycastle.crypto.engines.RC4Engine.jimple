public class com.android.org.bouncycastle.crypto.engines.RC4Engine extends java.lang.Object implements com.android.org.bouncycastle.crypto.StreamCipher
{
    private static final int STATE_LENGTH;
    private byte[] engineState;
    private byte[] workingKey;
    private int x;
    private int y;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState> = null;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x> = 0;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y> = 0;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] workingKey> = null;

        return;
    }

    private void setKey(byte[])
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;
        byte[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, i1, i2, i3, $i8, $i9, $i11, $i13;
        byte b4, $b5, $b6, $b10, $b12;
        short $s7;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        r1 := @parameter0: byte[];

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] workingKey> = r1;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x> = 0;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y> = 0;

        $r2 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        if $r2 != null goto label1;

        $r8 = newarray (byte)[256];

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState> = $r8;

     label1:
        i0 = 0;

     label2:
        if i0 >= 256 goto label3;

        $r9 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $b12 = (byte) i0;

        $r9[i0] = $b12;

        i0 = i0 + 1;

        goto label2;

     label3:
        i1 = 0;

        i2 = 0;

        i3 = 0;

     label4:
        if i3 >= 256 goto label5;

        $b5 = r1[i1];

        $s7 = 255 & $b5;

        $r3 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $b6 = $r3[i3];

        $i8 = $s7 + $b6;

        $i9 = i2 + $i8;

        i2 = 255 & $i9;

        $r4 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        b4 = $r4[i3];

        $r6 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $b10 = $r5[i2];

        $r6[i3] = $b10;

        $r7 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $r7[i2] = b4;

        $i13 = i1 + 1;

        $i11 = lengthof r1;

        i1 = $i13 % $i11;

        i3 = i3 + 1;

        goto label4;

     label5:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        return "RC4";
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;
        boolean z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5;
        java.lang.String $r6, $r8;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r9;
        byte[] $r10, $r11;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.KeyParameter;

        if $z1 == 0 goto label1;

        $r9 = (com.android.org.bouncycastle.crypto.params.KeyParameter) r1;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] workingKey> = $r10;

        $r11 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] workingKey>;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: void setKey(byte[])>($r11);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to RC4 init - ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public void processBytes(byte[], int, int, byte[], int)
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;
        byte[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i26, $i28, $i33;
        byte b4, $b15, $b19, $b24, $b27, $b29, $b30, $b31, $b32;
        com.android.org.bouncycastle.crypto.DataLengthException $r11;
        com.android.org.bouncycastle.crypto.OutputLengthException $r12;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $i6 = i0 + i1;

        $i5 = lengthof r1;

        if $i6 <= $i5 goto label1;

        $r11 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r11.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r11;

     label1:
        $i8 = i2 + i1;

        $i7 = lengthof r2;

        if $i8 <= $i7 goto label2;

        $r12 = new com.android.org.bouncycastle.crypto.OutputLengthException;

        specialinvoke $r12.<com.android.org.bouncycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r12;

     label2:
        i3 = 0;

     label3:
        if i3 >= i1 goto label4;

        $i9 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $i10 = 1 + $i9;

        $i11 = 255 & $i10;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x> = $i11;

        $r3 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i12 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $b15 = $r3[$i12];

        $i13 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $i14 = $b15 + $i13;

        $i17 = 255 & $i14;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y> = $i17;

        $r4 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i16 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        b4 = $r4[$i16];

        $r6 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i20 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i18 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $b19 = $r5[$i18];

        $r6[$i20] = $b19;

        $r7 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i21 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $r7[$i21] = b4;

        $i33 = i3 + i2;

        $i23 = i3 + i0;

        $b32 = r1[$i23];

        $r10 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $r9 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i22 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $b27 = $r9[$i22];

        $r8 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i25 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $b24 = $r8[$i25];

        $i28 = $b27 + $b24;

        $i26 = 255 & $i28;

        $b31 = $r10[$i26];

        $b29 = $b32 ^ $b31;

        $b30 = (byte) $b29;

        r2[$i33] = $b30;

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;
        byte[] $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        $r1 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] workingKey>;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: void setKey(byte[])>($r1);

        return;
    }

    public byte returnByte(byte)
    {
        com.android.org.bouncycastle.crypto.engines.RC4Engine r0;
        byte b0, b1, $b7, $b13, $b17, $b19, $b21, $b22, $b23;
        int $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i20;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RC4Engine;

        b0 := @parameter0: byte;

        $i2 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $i3 = 1 + $i2;

        $i4 = 255 & $i3;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x> = $i4;

        $r1 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i5 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $b7 = $r1[$i5];

        $i6 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $i8 = $b7 + $i6;

        $i9 = 255 & $i8;

        r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y> = $i9;

        $r2 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i10 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        b1 = $r2[$i10];

        $r4 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i12 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $r3 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i11 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $b13 = $r3[$i11];

        $r4[$i12] = $b13;

        $r5 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i14 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $r5[$i14] = b1;

        $r8 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $r6 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i15 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int x>;

        $b19 = $r6[$i15];

        $r7 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: byte[] engineState>;

        $i16 = r0.<com.android.org.bouncycastle.crypto.engines.RC4Engine: int y>;

        $b17 = $r7[$i16];

        $i18 = $b19 + $b17;

        $i20 = 255 & $i18;

        $b22 = $r8[$i20];

        $b21 = b0 ^ $b22;

        $b23 = (byte) $b21;

        return $b23;
    }

    public static void <clinit>()
    {
        <com.android.org.bouncycastle.crypto.engines.RC4Engine: int STATE_LENGTH> = 256;

        return;
    }
}
