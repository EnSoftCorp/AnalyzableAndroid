public class com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher extends com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher implements com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE
{
    private java.lang.Class[] availableSpecs;
    private com.android.org.bouncycastle.crypto.StreamCipher cipher;
    private int ivLength;
    private com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam;
    private java.lang.String pbeAlgorithm;
    private javax.crypto.spec.PBEParameterSpec pbeSpec;

    protected void <init>(com.android.org.bouncycastle.crypto.BlockCipher, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        int i0;
        java.lang.Class[] $r2;
        com.android.org.bouncycastle.crypto.StreamBlockCipher $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: int ivLength> = i0;

        $r3 = new com.android.org.bouncycastle.crypto.StreamBlockCipher;

        specialinvoke $r3.<com.android.org.bouncycastle.crypto.StreamBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher> = $r3;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.StreamCipher, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        com.android.org.bouncycastle.crypto.StreamCipher r1;
        int i0;
        java.lang.Class[] $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.StreamCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher> = r1;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: int ivLength> = i0;

        return;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        byte[] r1, r2;
        int i0, i1, i2;
        com.android.org.bouncycastle.crypto.StreamCipher $r3, $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        if i1 == 0 goto label1;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.StreamCipher: void processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

     label1:
        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.StreamCipher: void reset()>();

        return i1;
    }

    protected byte[] engineDoFinal(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        byte[] r1, r2, $r4;
        int i0, i1;
        com.android.org.bouncycastle.crypto.StreamCipher $r3, $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == 0 goto label1;

        r2 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: byte[] engineUpdate(byte[],int,int)>(r1, i0, i1);

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.StreamCipher: void reset()>();

        return r2;

     label1:
        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.StreamCipher: void reset()>();

        $r4 = newarray (byte)[0];

        return $r4;
    }

    protected int engineGetBlockSize()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        return 0;
    }

    protected byte[] engineGetIV()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r1, $r2;
        byte[] $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        return $r3;

     label1:
        return null;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        java.security.Key r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: java.security.Key;

        $r2 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        $i0 = lengthof $r2;

        $i1 = 8 * $i0;

        return $i1;
    }

    protected int engineGetOutputSize(int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        int i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        i0 := @parameter0: int;

        return i0;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        java.security.AlgorithmParameters r2, $r3, $r4;
        javax.crypto.spec.PBEParameterSpec $r5, $r7;
        java.lang.String $r6;
        java.lang.Exception $r8;
        java.security.spec.AlgorithmParameterSpec r9;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.security.AlgorithmParameters engineParams>;

        if $r3 != null goto label4;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        if $r5 == null goto label4;

     label1:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.String pbeAlgorithm>;

        r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r6, "BC");

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        r9 = (java.security.spec.AlgorithmParameterSpec) $r7;

        virtualinvoke r2.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>(r9);

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        return null;

     label4:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.security.AlgorithmParameters engineParams>;

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        int i0, i1, i2;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.security.SecureRandom r3;
        java.security.spec.AlgorithmParameterSpec r4, r6;
        java.lang.Class[] $r7, $r13;
        java.security.InvalidAlgorithmParameterException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r14;
        java.lang.Class $r15;
        java.lang.Exception $r16;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        r4 = null;

        if r2 == null goto label6;

        i1 = 0;

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.Class[] availableSpecs>;

        i2 = lengthof $r7;

        r4 = null;

        if i1 == i2 goto label4;

     label2:
        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.Class[] availableSpecs>;

        $r15 = $r13[i1];

        r6 = virtualinvoke r2.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>($r15);

     label3:
        r4 = r6;

     label4:
        if r4 != null goto label6;

        $r8 = new java.security.InvalidAlgorithmParameterException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t handle parameter ");

        $r11 = virtualinvoke r2.<java.security.AlgorithmParameters: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label5:
        $r16 := @caughtexception;

        i1 = i1 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, r4, r3);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.security.AlgorithmParameters engineParams> = r2;

        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        int i0;
        java.security.Key r1;
        java.security.SecureRandom r2;
        java.security.InvalidAlgorithmParameterException r3, $r5;
        java.security.spec.AlgorithmParameterSpec $r4;
        java.security.InvalidKeyException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

     label1:
        $r4 = (java.security.spec.AlgorithmParameterSpec) null;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, $r4, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.security.InvalidKeyException;

        $r7 = virtualinvoke r3.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        int i0, $i1, $i2, $i3, $i4;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3, r5, $r21;
        com.android.org.bouncycastle.crypto.CipherParameters r4, $r25;
        byte[] r6, $r13, $r15, $r23, $r35;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV r7, $r10, $r14, $r19, $r20, $r31;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r9;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r11, $r24;
        javax.crypto.spec.IvParameterSpec $r12;
        java.io.PrintStream $r16;
        com.android.org.bouncycastle.crypto.StreamCipher $r17, $r18, $r30;
        java.security.InvalidAlgorithmParameterException $r22, $r29;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r26, $r33;
        java.lang.String $r27, $r28, $r39, $r40, $r43;
        javax.crypto.spec.PBEParameterSpec $r32, $r34;
        java.lang.StringBuilder $r36, $r37, $r41, $r42;
        java.security.InvalidKeyException $r38;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter3: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.security.AlgorithmParameters engineParams> = null;

        $z0 = r1 instanceof javax.crypto.SecretKey;

        if $z0 != 0 goto label01;

        $r38 = new java.security.InvalidKeyException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key for algorithm ");

        $r43 = interfaceinvoke r1.<java.security.Key: java.lang.String getAlgorithm()>();

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not suitable for symmetric enryption.");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r40);

        throw $r38;

     label01:
        $z1 = r1 instanceof com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey;

        if $z1 == 0 goto label12;

        r8 = (com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey) r1;

        $r26 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()>();

        if $r26 == null goto label09;

        $r33 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()>();

        $r39 = virtualinvoke $r33.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.String pbeAlgorithm> = $r39;

     label02:
        $r25 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        if $r25 == null goto label10;

        r4 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        $r34 = new javax.crypto.spec.PBEParameterSpec;

        $r35 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: byte[] getSalt()>();

        $i4 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: int getIterationCount()>();

        specialinvoke $r34.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r35, $i4);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = $r34;

     label03:
        $i3 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: int getIvSize()>();

        if $i3 == 0 goto label04;

        $r31 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r31;

     label04:
        $i1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: int ivLength>;

        if $i1 == 0 goto label07;

        $z3 = r4 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z3 != 0 goto label07;

        r5 = r3;

        if r5 != null goto label05;

        $r21 = new java.security.SecureRandom;

        specialinvoke $r21.<java.security.SecureRandom: void <init>()>();

        r5 = $r21;

     label05:
        if i0 == 1 goto label06;

        if i0 != 3 goto label15;

     label06:
        $i2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: int ivLength>;

        r6 = newarray (byte)[$i2];

        virtualinvoke r5.<java.security.SecureRandom: void nextBytes(byte[])>(r6);

        $r20 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        specialinvoke $r20.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>(r4, r6);

        r7 = $r20;

        $r19 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r7;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r19;

        r4 = r7;

     label07:
        tableswitch(i0)
        {
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label16;
            case 4: goto label17;
            default: goto label08;
        };

     label08:
        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("eeek!");

        return;

     label09:
        $r27 = virtualinvoke r8.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: java.lang.String getAlgorithm()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: java.lang.String pbeAlgorithm> = $r27;

        goto label02;

     label10:
        $z4 = r2 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z4 == 0 goto label11;

        $r30 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        $r28 = interfaceinvoke $r30.<com.android.org.bouncycastle.crypto.StreamCipher: java.lang.String getAlgorithmName()>();

        r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util: com.android.org.bouncycastle.crypto.CipherParameters makePBEParameters(com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)>(r8, r2, $r28);

        $r32 = (javax.crypto.spec.PBEParameterSpec) r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = $r32;

        goto label03;

     label11:
        $r29 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r29.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("PBE requires PBE parameters to be set.");

        throw $r29;

     label12:
        if r2 != null goto label13;

        $r24 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r23 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r24.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r23);

        r4 = $r24;

        goto label04;

     label13:
        $z2 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z2 == 0 goto label14;

        $r10 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r11 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r13 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r11.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r13);

        $r12 = (javax.crypto.spec.IvParameterSpec) r2;

        $r15 = virtualinvoke $r12.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r10.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>($r11, $r15);

        r4 = $r10;

        $r14 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r14;

        goto label04;

     label14:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r9;

     label15:
        $r22 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r22.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("no IV set when one expected");

        throw $r22;

     label16:
        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r17.<com.android.org.bouncycastle.crypto.StreamCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r4);

        return;

     label17:
        $r18 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r18.<com.android.org.bouncycastle.crypto.StreamCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(0, r4);

        return;
    }

    protected void engineSetMode(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        java.lang.String r1, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ECB");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        java.lang.String r1, $r7;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, r8;
        javax.crypto.NoSuchPaddingException r9;
        java.lang.Throwable r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NoPadding");

        if $z0 != 0 goto label1;

        r9 = new javax.crypto.NoSuchPaddingException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Padding ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r7);

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label1:
        return;
    }

    protected int engineUpdate(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        byte[] r1, r2;
        int i0, i1, i2;
        com.android.org.bouncycastle.crypto.DataLengthException r3, $r5;
        com.android.org.bouncycastle.crypto.StreamCipher $r4;
        java.lang.String $r7;
        javax.crypto.ShortBufferException r8;
        java.lang.Throwable r9;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.StreamCipher: void processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

     label2:
        return i1;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        r8 = new javax.crypto.ShortBufferException;

        $r7 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke r8.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher r0;
        byte[] r1, r2;
        int i0, i1;
        com.android.org.bouncycastle.crypto.StreamCipher $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = newarray (byte)[i1];

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher: com.android.org.bouncycastle.crypto.StreamCipher cipher>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.StreamCipher: void processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, 0);

        return r2;
    }
}
