public class com.android.org.bouncycastle.x509.X509V1CertificateGenerator extends java.lang.Object
{
    private com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId;
    private com.android.org.bouncycastle.asn1.DERObjectIdentifier sigOID;
    private java.lang.String signatureAlgorithm;
    private com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen;

    public void <init>()
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r1;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator;

        specialinvoke $r1.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void <init>()>();

        r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen> = $r1;

        return;
    }

    private java.security.cert.X509Certificate generateJcaObject(com.android.org.bouncycastle.asn1.x509.TBSCertificate, byte[]) throws java.security.cert.CertificateEncodingException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        com.android.org.bouncycastle.asn1.x509.TBSCertificate r1;
        byte[] r2;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector r3, $r6;
        com.android.org.bouncycastle.jce.provider.X509CertificateObject r4, $r9;
        java.security.cert.CertificateParsingException r5, $r12;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r7;
        com.android.org.bouncycastle.asn1.DERBitString $r8;
        com.android.org.bouncycastle.asn1.DERSequence $r10;
        com.android.org.bouncycastle.asn1.x509.Certificate $r11;
        com.android.org.bouncycastle.x509.ExtCertificateEncodingException $r13;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.x509.TBSCertificate;

        r2 := @parameter1: byte[];

        $r6 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r6.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>(r1);

        $r7 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId>;

        virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r7);

        $r8 = new com.android.org.bouncycastle.asn1.DERBitString;

        specialinvoke $r8.<com.android.org.bouncycastle.asn1.DERBitString: void <init>(byte[])>(r2);

        virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r8);

     label1:
        $r9 = new com.android.org.bouncycastle.jce.provider.X509CertificateObject;

        $r10 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r10.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r3);

        $r11 = staticinvoke <com.android.org.bouncycastle.asn1.x509.Certificate: com.android.org.bouncycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r10);

        specialinvoke $r9.<com.android.org.bouncycastle.jce.provider.X509CertificateObject: void <init>(com.android.org.bouncycastle.asn1.x509.Certificate)>($r11);

        r4 = $r9;

     label2:
        return r4;

     label3:
        $r12 := @caughtexception;

        r5 = $r12;

        $r13 = new com.android.org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r13.<com.android.org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception producing certificate object", r5);

        throw $r13;

        catch java.security.cert.CertificateParsingException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.security.SecureRandom $r2;
        java.security.cert.X509Certificate $r3;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        $r2 = (java.security.SecureRandom) null;

        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)>(r1, $r2);

        return $r3;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.String r2;
        java.security.cert.X509Certificate $r3;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, r2, null);

        return $r3;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.String r2, $r8;
        java.security.SecureRandom r3;
        com.android.org.bouncycastle.asn1.x509.TBSCertificate r4;
        java.io.IOException r5, $r11;
        byte[] r6;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r7;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r9;
        java.security.cert.X509Certificate $r10;
        com.android.org.bouncycastle.x509.ExtCertificateEncodingException $r12;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.security.SecureRandom;

        $r7 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        r4 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: com.android.org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()>();

     label1:
        $r9 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r8 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.lang.String signatureAlgorithm>;

        r6 = staticinvoke <com.android.org.bouncycastle.x509.X509Util: byte[] calculateSignature(com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,com.android.org.bouncycastle.asn1.ASN1Encodable)>($r9, $r8, r2, r1, r3, r4);

     label2:
        $r10 = specialinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateJcaObject(com.android.org.bouncycastle.asn1.x509.TBSCertificate,byte[])>(r4, r6);

        return $r10;

     label3:
        $r11 := @caughtexception;

        r5 = $r11;

        $r12 = new com.android.org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r12.<com.android.org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception encoding TBS cert", r5);

        throw $r12;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generate(java.security.PrivateKey, java.security.SecureRandom) throws java.security.cert.CertificateEncodingException, java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.security.SecureRandom r2;
        com.android.org.bouncycastle.asn1.x509.TBSCertificate r3;
        java.io.IOException r4, $r10;
        byte[] r5;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r6;
        java.lang.String $r7;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r8;
        java.security.cert.X509Certificate $r9;
        com.android.org.bouncycastle.x509.ExtCertificateEncodingException $r11;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.security.SecureRandom;

        $r6 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        r3 = virtualinvoke $r6.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: com.android.org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()>();

     label1:
        $r8 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r7 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.lang.String signatureAlgorithm>;

        r5 = staticinvoke <com.android.org.bouncycastle.x509.X509Util: byte[] calculateSignature(com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,com.android.org.bouncycastle.asn1.ASN1Encodable)>($r8, $r7, r1, r2, r3);

     label2:
        $r9 = specialinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateJcaObject(com.android.org.bouncycastle.asn1.x509.TBSCertificate,byte[])>(r3, r5);

        return $r9;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = new com.android.org.bouncycastle.x509.ExtCertificateEncodingException;

        specialinvoke $r11.<com.android.org.bouncycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>("exception encoding TBS cert", r4);

        throw $r11;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.security.cert.X509Certificate r3;
        java.security.NoSuchProviderException $r4;
        java.lang.SecurityException $r5;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

     label1:
        r3 = virtualinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, "BC", null);

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("BC provider not installed!");

        throw $r5;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.String r2;
        java.security.cert.X509Certificate $r3;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, r2, null);

        return $r3;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.lang.String, java.security.SecureRandom) throws java.security.NoSuchProviderException, java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.lang.String r2, $r15;
        java.security.SecureRandom r3;
        java.security.GeneralSecurityException r4, $r11;
        java.security.InvalidKeyException r5, $r10;
        java.security.SignatureException r6, $r9;
        java.security.NoSuchProviderException r7, $r17;
        java.security.cert.X509Certificate r8;
        java.lang.SecurityException $r12;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.security.SecureRandom;

     label1:
        r8 = virtualinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, r2, r3);

     label2:
        return r8;

     label3:
        $r17 := @caughtexception;

        r7 = $r17;

        throw r7;

     label4:
        $r9 := @caughtexception;

        r6 = $r9;

        throw r6;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        throw r5;

     label6:
        $r11 := @caughtexception;

        r4 = $r11;

        $r12 = new java.lang.SecurityException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>($r15);

        throw $r12;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
        catch java.security.SignatureException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label1 to label2 with label6;
    }

    public java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey, java.security.SecureRandom) throws java.lang.SecurityException, java.security.SignatureException, java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PrivateKey r1;
        java.security.SecureRandom r2;
        java.security.cert.X509Certificate r4;
        java.security.NoSuchProviderException $r5;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.security.SecureRandom;

     label1:
        r4 = virtualinvoke r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)>(r1, "BC", r2);

     label2:
        return r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("BC provider not installed!");

        throw $r6;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public java.util.Iterator getSignatureAlgNames()
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.util.Iterator $r1;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 = staticinvoke <com.android.org.bouncycastle.x509.X509Util: java.util.Iterator getAlgNames()>();

        return $r1;
    }

    public void reset()
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r1;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        $r1 = new com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator;

        specialinvoke $r1.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void <init>()>();

        r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen> = $r1;

        return;
    }

    public void setIssuerDN(com.android.org.bouncycastle.asn1.x509.X509Name)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        com.android.org.bouncycastle.asn1.x509.X509Name r1;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.x509.X509Name;

        $r2 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        virtualinvoke $r2.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setIssuer(com.android.org.bouncycastle.asn1.x509.X509Name)>(r1);

        return;
    }

    public void setIssuerDN(javax.security.auth.x500.X500Principal)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        javax.security.auth.x500.X500Principal r1;
        java.io.IOException r2, $r6;
        com.android.org.bouncycastle.jce.X509Principal $r3;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r4;
        byte[] $r5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new com.android.org.bouncycastle.jce.X509Principal;

        $r5 = virtualinvoke r1.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r3.<com.android.org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r5);

        virtualinvoke $r4.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setIssuer(com.android.org.bouncycastle.asn1.x509.X509Name)>($r3);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process principal: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setNotAfter(java.util.Date)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.util.Date r1;
        com.android.org.bouncycastle.asn1.x509.Time $r2;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r3;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.util.Date;

        $r3 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r2 = new com.android.org.bouncycastle.asn1.x509.Time;

        specialinvoke $r2.<com.android.org.bouncycastle.asn1.x509.Time: void <init>(java.util.Date)>(r1);

        virtualinvoke $r3.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setEndDate(com.android.org.bouncycastle.asn1.x509.Time)>($r2);

        return;
    }

    public void setNotBefore(java.util.Date)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.util.Date r1;
        com.android.org.bouncycastle.asn1.x509.Time $r2;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r3;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.util.Date;

        $r3 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r2 = new com.android.org.bouncycastle.asn1.x509.Time;

        specialinvoke $r2.<com.android.org.bouncycastle.asn1.x509.Time: void <init>(java.util.Date)>(r1);

        virtualinvoke $r3.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setStartDate(com.android.org.bouncycastle.asn1.x509.Time)>($r2);

        return;
    }

    public void setPublicKey(java.security.PublicKey)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.security.PublicKey r1;
        java.lang.Exception r2, $r10;
        com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r4;
        java.io.ByteArrayInputStream $r5;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r6;
        byte[] $r7;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r9;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r15;
        java.lang.String $r14, $r16;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.security.PublicKey;

     label1:
        $r6 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r5 = new java.io.ByteArrayInputStream;

        $r7 = interfaceinvoke r1.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r5);

        $r8 = virtualinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        $r9 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r8;

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r9);

        virtualinvoke $r6.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSubjectPublicKeyInfo(com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r3);

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process key - ");

        $r14 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setSerialNumber(java.math.BigInteger)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.math.BigInteger r1, $r2;
        int $i0;
        com.android.org.bouncycastle.asn1.ASN1Integer $r3;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i0 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i0 > 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("serial number must be a positive integer");

        throw $r5;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new com.android.org.bouncycastle.asn1.ASN1Integer;

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>(r1);

        virtualinvoke $r4.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSerialNumber(com.android.org.bouncycastle.asn1.ASN1Integer)>($r3);

        return;
    }

    public void setSignatureAlgorithm(java.lang.String)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        java.lang.String r1;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r3, $r4;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r5, $r6;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r7;
        java.lang.Exception $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: java.lang.String signatureAlgorithm> = r1;

     label1:
        $r3 = staticinvoke <com.android.org.bouncycastle.x509.X509Util: com.android.org.bouncycastle.asn1.DERObjectIdentifier getAlgorithmOID(java.lang.String)>(r1);

        r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.DERObjectIdentifier sigOID> = $r3;

     label2:
        $r4 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.DERObjectIdentifier sigOID>;

        $r5 = staticinvoke <com.android.org.bouncycastle.x509.X509Util: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigAlgID(com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String)>($r4, r1);

        r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId> = $r5;

        $r7 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r6 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier sigAlgId>;

        virtualinvoke $r7.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSignature(com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier)>($r6);

        return;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown signature type requested");

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setSubjectDN(com.android.org.bouncycastle.asn1.x509.X509Name)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        com.android.org.bouncycastle.asn1.x509.X509Name r1;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r2;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.x509.X509Name;

        $r2 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        virtualinvoke $r2.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSubject(com.android.org.bouncycastle.asn1.x509.X509Name)>(r1);

        return;
    }

    public void setSubjectDN(javax.security.auth.x500.X500Principal)
    {
        com.android.org.bouncycastle.x509.X509V1CertificateGenerator r0;
        javax.security.auth.x500.X500Principal r1;
        java.io.IOException r2, $r6;
        com.android.org.bouncycastle.jce.X509Principal $r3;
        com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator $r4;
        byte[] $r5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.org.bouncycastle.x509.X509V1CertificateGenerator;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.x509.X509V1CertificateGenerator: com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator tbsGen>;

        $r3 = new com.android.org.bouncycastle.jce.X509Principal;

        $r5 = virtualinvoke r1.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r3.<com.android.org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r5);

        virtualinvoke $r4.<com.android.org.bouncycastle.asn1.x509.V1TBSCertificateGenerator: void setSubject(com.android.org.bouncycastle.asn1.x509.X509Name)>($r3);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process principal: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
