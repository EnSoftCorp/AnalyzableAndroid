final class java.lang.reflect.Field$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        java.lang.reflect.Field$1 r0;

        r0 := @this: java.lang.reflect.Field$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.reflect.Field$1 r0;
        java.lang.Object r1, r2;
        java.lang.reflect.Field $r3, $r4;
        int $i0;

        r0 := @this: java.lang.reflect.Field$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.reflect.Field) r1;

        $r3 = (java.lang.reflect.Field) r2;

        $i0 = virtualinvoke r0.<java.lang.reflect.Field$1: int compare(java.lang.reflect.Field,java.lang.reflect.Field)>($r4, $r3);

        return $i0;
    }

    public int compare(java.lang.reflect.Field, java.lang.reflect.Field)
    {
        java.lang.reflect.Field$1 r0;
        java.lang.reflect.Field r1, r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r6, $r8;
        java.lang.Class $r5, $r7;

        r0 := @this: java.lang.reflect.Field$1;

        r1 := @parameter0: java.lang.reflect.Field;

        r2 := @parameter1: java.lang.reflect.Field;

        $r3 = staticinvoke <java.lang.reflect.Field: java.lang.String access$000(java.lang.reflect.Field)>(r1);

        $r4 = staticinvoke <java.lang.reflect.Field: java.lang.String access$000(java.lang.reflect.Field)>(r2);

        i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        if i0 == 0 goto label1;

        return i0;

     label1:
        $r5 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>($r8);

        return $i1;
    }
}
