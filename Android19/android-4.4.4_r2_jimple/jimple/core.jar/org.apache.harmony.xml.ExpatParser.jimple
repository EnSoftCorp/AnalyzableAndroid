class org.apache.harmony.xml.ExpatParser extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    static final java.lang.String CHARACTER_ENCODING;
    private static final java.lang.String DEFAULT_ENCODING;
    private static final java.lang.String OUTSIDE_START_ELEMENT;
    private static final int TIMEOUT;
    private int attributeCount;
    private int attributePointer;
    private final org.apache.harmony.xml.ExpatAttributes attributes;
    private final java.lang.String encoding;
    private boolean inStartElement;
    private final org.xml.sax.Locator locator;
    private long pointer;
    private final java.lang.String publicId;
    private final java.lang.String systemId;
    private final org.apache.harmony.xml.ExpatReader xmlReader;

    static void <clinit>()
    {
        <org.apache.harmony.xml.ExpatParser: int TIMEOUT> = 20000;

        <org.apache.harmony.xml.ExpatParser: java.lang.String OUTSIDE_START_ELEMENT> = "Attributes can only be used within the scope of startElement().";

        <org.apache.harmony.xml.ExpatParser: java.lang.String DEFAULT_ENCODING> = "UTF-8";

        <org.apache.harmony.xml.ExpatParser: java.lang.String CHARACTER_ENCODING> = "UTF-16";

        <org.apache.harmony.xml.ExpatParser: int BUFFER_SIZE> = 8096;

        staticinvoke <org.apache.harmony.xml.ExpatParser: void staticInitialize(java.lang.String)>("");

        return;
    }

    private void <init>(java.lang.String, org.apache.harmony.xml.ExpatReader, long, java.lang.String, java.lang.String)
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r3, r4;
        org.apache.harmony.xml.ExpatReader r2;
        long l0;
        org.apache.harmony.xml.ExpatParser$ExpatLocator $r5;
        org.apache.harmony.xml.ExpatParser$CurrentAttributes $r6;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.harmony.xml.ExpatReader;

        l0 := @parameter2: long;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        $r5 = new org.apache.harmony.xml.ExpatParser$ExpatLocator;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ExpatLocator: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>(r0, null);

        r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator> = $r5;

        $r6 = new org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        specialinvoke $r6.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>(r0, null);

        r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatAttributes attributes> = $r6;

        r0.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding> = r1;

        r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader> = r2;

        r0.<org.apache.harmony.xml.ExpatParser: long pointer> = l0;

        r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId> = r4;

        r0.<org.apache.harmony.xml.ExpatParser: java.lang.String publicId> = r3;

        return;
    }

    void <init>(java.lang.String, org.apache.harmony.xml.ExpatReader, long, java.lang.String, java.lang.String, org.apache.harmony.xml.ExpatParser$1)
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r3, r4;
        org.apache.harmony.xml.ExpatReader r2;
        long l0;
        org.apache.harmony.xml.ExpatParser$1 r5;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.harmony.xml.ExpatReader;

        l0 := @parameter2: long;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: org.apache.harmony.xml.ExpatParser$1;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,long,java.lang.String,java.lang.String)>(r1, r2, l0, r3, r4);

        return;
    }

    void <init>(java.lang.String, org.apache.harmony.xml.ExpatReader, boolean, java.lang.String, java.lang.String)
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r3, r4, $r7;
        org.apache.harmony.xml.ExpatReader r2;
        boolean z0;
        org.apache.harmony.xml.ExpatParser$ExpatLocator $r5;
        org.apache.harmony.xml.ExpatParser$CurrentAttributes $r6;
        long $l0;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.harmony.xml.ExpatReader;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        $r5 = new org.apache.harmony.xml.ExpatParser$ExpatLocator;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ExpatLocator: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>(r0, null);

        r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator> = $r5;

        $r6 = new org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        specialinvoke $r6.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1)>(r0, null);

        r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatAttributes attributes> = $r6;

        r0.<org.apache.harmony.xml.ExpatParser: java.lang.String publicId> = r3;

        r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId> = r4;

        r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader> = r2;

        if r1 != null goto label1;

        r1 = "UTF-8";

     label1:
        r0.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding> = r1;

        $r7 = r0.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $l0 = specialinvoke r0.<org.apache.harmony.xml.ExpatParser: long initialize(java.lang.String,boolean)>($r7, z0);

        r0.<org.apache.harmony.xml.ExpatParser: long pointer> = $l0;

        return;
    }

    static long access$1000(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        long $l0;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $l0 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        return $l0;
    }

    static boolean access$1100(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        boolean $z0;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $z0 = r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement>;

        return $z0;
    }

    static int access$1200(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $i0 = r0.<org.apache.harmony.xml.ExpatParser: int attributePointer>;

        return $i0;
    }

    static int access$1300(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $i0 = r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        return $i0;
    }

    static java.lang.String access$600(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $r1 = r0.<org.apache.harmony.xml.ExpatParser: java.lang.String publicId>;

        return $r1;
    }

    static java.lang.String access$700(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $r1 = r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        return $r1;
    }

    static int access$800(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $i0 = specialinvoke r0.<org.apache.harmony.xml.ExpatParser: int line()>();

        return $i0;
    }

    static int access$900(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.xml.ExpatParser;

        $i0 = specialinvoke r0.<org.apache.harmony.xml.ExpatParser: int column()>();

        return $i0;
    }

    private native void appendBytes(long, byte[], int, int) throws org.xml.sax.SAXException, org.apache.harmony.xml.ExpatException;

    private native void appendChars(long, char[], int, int) throws org.xml.sax.SAXException, org.apache.harmony.xml.ExpatException;

    private native void appendString(long, java.lang.String, boolean) throws org.xml.sax.SAXException, org.apache.harmony.xml.ExpatException;

    private static native long cloneAttributes(long, int);

    private int column()
    {
        org.apache.harmony.xml.ExpatParser r0;
        long $l0;
        int $i1;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $l0 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        $i1 = staticinvoke <org.apache.harmony.xml.ExpatParser: int column(long)>($l0);

        return $i1;
    }

    private static native int column(long);

    private static native long createEntityParser(long, java.lang.String);

    private void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.xml.sax.ContentHandler r1;
        org.apache.harmony.xml.ExpatReader $r2;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r1 == null goto label1;

        interfaceinvoke r1.<org.xml.sax.ContentHandler: void endDocument()>();

     label1:
        return;
    }

    private native long initialize(java.lang.String, boolean);

    private int line()
    {
        org.apache.harmony.xml.ExpatParser r0;
        long $l0;
        int $i1;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $l0 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        $i1 = staticinvoke <org.apache.harmony.xml.ExpatParser: int line(long)>($l0);

        return $i1;
    }

    private static native int line(long);

    static java.io.InputStream openUrl(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r11;
        java.lang.Exception r1, $r6;
        java.io.IOException r2, $r7;
        java.net.URLConnection r3;
        java.io.InputStream r4;
        java.net.URL $r5;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

     label1:
        $r5 = new java.net.URL;

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>(r0);

        r3 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke r3.<java.net.URLConnection: void setConnectTimeout(int)>(20000);

        virtualinvoke r3.<java.net.URLConnection: void setReadTimeout(int)>(20000);

        virtualinvoke r3.<java.net.URLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r3.<java.net.URLConnection: void setDoOutput(boolean)>(0);

        r4 = virtualinvoke r3.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t open ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11);

        r2 = $r7;

        virtualinvoke r2.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        throw r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void parseExternalEntity(org.apache.harmony.xml.ExpatParser, org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0, r1;
        org.xml.sax.InputSource r2;
        java.io.Reader r3;
        java.io.InputStream r4, r6;
        java.lang.String r5, $r10, $r11, $r12, $r15, $r18, $r19, $r20, $r23;
        java.lang.Throwable r7, r8, r9, $r24, $r25, $r26;
        byte[] $r13, $r14, $r21, $r22;
        org.xml.sax.Locator $r16;
        org.apache.harmony.xml.ExpatParser$ParseException $r17;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: org.apache.harmony.xml.ExpatParser;

        r2 := @parameter1: org.xml.sax.InputSource;

        r3 = virtualinvoke r2.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if r3 == null goto label04;

     label01:
        virtualinvoke r1.<org.apache.harmony.xml.ExpatParser: void append(java.lang.String)>("<externalEntity>");

        specialinvoke r1.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.Reader)>(r3);

        virtualinvoke r1.<org.apache.harmony.xml.ExpatParser: void append(java.lang.String)>("</externalEntity>");

     label02:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        return;

     label03:
        $r25 := @caughtexception;

        r9 = $r25;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r9;

     label04:
        r4 = virtualinvoke r2.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        if r4 == null goto label08;

     label05:
        $r18 = "<externalEntity>";

        $r19 = r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r21 = virtualinvoke $r18.<java.lang.String: byte[] getBytes(java.lang.String)>($r19);

        virtualinvoke r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r21);

        specialinvoke r1.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)>(r4);

        $r23 = "</externalEntity>";

        $r20 = r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r22 = virtualinvoke $r23.<java.lang.String: byte[] getBytes(java.lang.String)>($r20);

        virtualinvoke r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r22);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return;

     label07:
        $r26 := @caughtexception;

        r8 = $r26;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r8;

     label08:
        r5 = virtualinvoke r2.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        if r5 != null goto label09;

        $r17 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r16 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r17.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>("No input specified.", $r16, null);

        throw $r17;

     label09:
        r6 = staticinvoke <org.apache.harmony.xml.ExpatParser: java.io.InputStream openUrl(java.lang.String)>(r5);

     label10:
        $r11 = "<externalEntity>";

        $r10 = r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r13 = virtualinvoke $r11.<java.lang.String: byte[] getBytes(java.lang.String)>($r10);

        virtualinvoke r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r13);

        specialinvoke r1.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)>(r6);

        $r15 = "</externalEntity>";

        $r12 = r1.<org.apache.harmony.xml.ExpatParser: java.lang.String encoding>;

        $r14 = virtualinvoke $r15.<java.lang.String: byte[] getBytes(java.lang.String)>($r12);

        virtualinvoke r1.<org.apache.harmony.xml.ExpatParser: void append(byte[])>($r14);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        return;

     label12:
        $r24 := @caughtexception;

        r7 = $r24;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        throw r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private void parseFragment(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0;
        org.apache.harmony.xml.ExpatException r3, $r4;
        long $l1;
        org.apache.harmony.xml.ExpatParser$ParseException $r5;
        java.lang.String $r6;
        org.xml.sax.Locator $r7;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.io.InputStream;

        r2 = newarray (byte)[8096];

     label1:
        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r2);

        if i0 == -1 goto label5;

     label2:
        $l1 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void appendBytes(long,byte[],int,int)>($l1, r2, 0, i0);

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        r3 = $r4;

        $r5 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r6 = virtualinvoke r3.<org.apache.harmony.xml.ExpatException: java.lang.String getMessage()>();

        $r7 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r6, $r7, null);

        throw $r5;

     label5:
        return;

        catch org.apache.harmony.xml.ExpatException from label2 to label3 with label4;
    }

    private void parseFragment(java.io.Reader) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.io.Reader r1;
        char[] r2;
        int i0;
        org.apache.harmony.xml.ExpatException r3, $r4;
        long $l1;
        org.apache.harmony.xml.ExpatParser$ParseException $r5;
        java.lang.String $r6;
        org.xml.sax.Locator $r7;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.io.Reader;

        r2 = newarray (char)[4048];

     label1:
        i0 = virtualinvoke r1.<java.io.Reader: int read(char[])>(r2);

        if i0 == -1 goto label5;

     label2:
        $l1 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void appendChars(long,char[],int,int)>($l1, r2, 0, i0);

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        r3 = $r4;

        $r5 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r6 = virtualinvoke r3.<org.apache.harmony.xml.ExpatException: java.lang.String getMessage()>();

        $r7 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r6, $r7, null);

        throw $r5;

     label5:
        return;

        catch org.apache.harmony.xml.ExpatException from label2 to label3 with label4;
    }

    private java.lang.String pickEncoding(org.xml.sax.InputSource)
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.xml.sax.InputSource r1;
        java.lang.String r2;
        java.io.Reader $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: org.xml.sax.InputSource;

        $r3 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if $r3 == null goto label2;

        r2 = "UTF-16";

     label1:
        return r2;

     label2:
        r2 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if r2 != null goto label1;

        return "UTF-8";
    }

    private native void release(long);

    private static native void releaseParser(long);

    private void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.xml.sax.ContentHandler r1;
        org.apache.harmony.xml.ExpatReader $r2;
        org.xml.sax.Locator $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r1 == null goto label1;

        $r3 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        interfaceinvoke r1.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r3);

        interfaceinvoke r1.<org.xml.sax.ContentHandler: void startDocument()>();

     label1:
        return;
    }

    private static native void staticInitialize(java.lang.String);

    void append(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, $r5;
        org.apache.harmony.xml.ExpatException r2, $r3;
        long $l0;
        org.apache.harmony.xml.ExpatParser$ParseException $r4;
        org.xml.sax.Locator $r6;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

     label1:
        $l0 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void appendString(long,java.lang.String,boolean)>($l0, r1, 0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r5 = virtualinvoke r2.<org.apache.harmony.xml.ExpatException: java.lang.String getMessage()>();

        $r6 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r4.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r5, $r6, null);

        throw $r4;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    void append(byte[]) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        byte[] r1;
        int $i0;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.harmony.xml.ExpatParser: void append(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    void append(byte[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        byte[] r1;
        int i0, i1;
        org.apache.harmony.xml.ExpatException r2, $r3;
        long $l2;
        org.apache.harmony.xml.ExpatParser$ParseException $r4;
        java.lang.String $r5;
        org.xml.sax.Locator $r6;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $l2 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void appendBytes(long,byte[],int,int)>($l2, r1, i0, i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r5 = virtualinvoke r2.<org.apache.harmony.xml.ExpatException: java.lang.String getMessage()>();

        $r6 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r4.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r5, $r6, null);

        throw $r4;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    void append(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        char[] r1;
        int i0, i1;
        org.apache.harmony.xml.ExpatException r2, $r3;
        long $l2;
        org.apache.harmony.xml.ExpatParser$ParseException $r4;
        java.lang.String $r5;
        org.xml.sax.Locator $r6;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $l2 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void appendChars(long,char[],int,int)>($l2, r1, i0, i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r5 = virtualinvoke r2.<org.apache.harmony.xml.ExpatException: java.lang.String getMessage()>();

        $r6 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r4.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r5, $r6, null);

        throw $r4;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    org.xml.sax.Attributes cloneAttributes()
    {
        org.apache.harmony.xml.ExpatParser r0;
        long l0, $l4, $l6;
        boolean $z0;
        int $i1, $i2, $i3, $i5;
        org.apache.harmony.xml.ExpatParser$ClonedAttributes $r1;
        org.xml.sax.Attributes $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $z0 = r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attributes can only be used within the scope of startElement().");

        throw $r3;

     label1:
        $i1 = r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        if $i1 != 0 goto label2;

        $r2 = staticinvoke <org.apache.harmony.xml.ExpatParser$ClonedAttributes: org.xml.sax.Attributes access$400()>();

        return $r2;

     label2:
        $i2 = r0.<org.apache.harmony.xml.ExpatParser: int attributePointer>;

        $l4 = (long) $i2;

        $i3 = r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        l0 = staticinvoke <org.apache.harmony.xml.ExpatParser: long cloneAttributes(long,int)>($l4, $i3);

        $r1 = new org.apache.harmony.xml.ExpatParser$ClonedAttributes;

        $l6 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        $i5 = r0.<org.apache.harmony.xml.ExpatParser: int attributeCount>;

        specialinvoke $r1.<org.apache.harmony.xml.ExpatParser$ClonedAttributes: void <init>(long,long,int,org.apache.harmony.xml.ExpatParser$1)>($l6, l0, $i5, null);

        return $r1;
    }

    void comment(char[], int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        char[] r1;
        int i0;
        org.xml.sax.ext.LexicalHandler r2;
        org.apache.harmony.xml.ExpatReader $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r2 = $r3.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if r2 == null goto label1;

        interfaceinvoke r2.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(r1, 0, i0);

     label1:
        return;
    }

    void endCdata() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.xml.sax.ext.LexicalHandler r1;
        org.apache.harmony.xml.ExpatReader $r2;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if r1 == null goto label1;

        interfaceinvoke r1.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

     label1:
        return;
    }

    void endDtd() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.xml.sax.ext.LexicalHandler r1;
        org.apache.harmony.xml.ExpatReader $r2;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if r1 == null goto label1;

        interfaceinvoke r1.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

     label1:
        return;
    }

    void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.ContentHandler r4;
        org.apache.harmony.xml.ExpatReader $r5;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r4 = $r5.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r4 == null goto label1;

        interfaceinvoke r4.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label1:
        return;
    }

    void endNamespace(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1;
        org.xml.sax.ContentHandler r2;
        org.apache.harmony.xml.ExpatReader $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r2 = $r3.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r2 == null goto label1;

        interfaceinvoke r2.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>(r1);

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.Throwable r1, r2, $r3, $r4;
        long $l0, $l2;
        byte $b1;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        entermonitor r0;

     label1:
        $l0 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void release(long)>($l2);

        r0.<org.apache.harmony.xml.ExpatParser: long pointer> = 0L;

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

     label5:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    void finish() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.apache.harmony.xml.ExpatException r1, $r2;
        long $l0;
        org.apache.harmony.xml.ExpatParser$ParseException $r3;
        java.lang.String $r4;
        org.xml.sax.Locator $r5;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

     label1:
        $l0 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void appendString(long,java.lang.String,boolean)>($l0, "", 1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new org.apache.harmony.xml.ExpatParser$ParseException;

        $r4 = virtualinvoke r1.<org.apache.harmony.xml.ExpatException: java.lang.String getMessage()>();

        $r5 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1)>($r4, $r5, null);

        throw $r3;

        catch org.apache.harmony.xml.ExpatException from label1 to label2 with label3;
    }

    void handleExternalEntity(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2, r3, r6, r10, $r12, $r14, $r17, $r18, $r30, $r31;
        org.xml.sax.EntityResolver r4;
        org.xml.sax.InputSource r5;
        long l0, $l1;
        java.lang.Throwable r7, $r22;
        java.net.URI r8, $r16, $r19, $r20;
        java.lang.Exception r9, $r21;
        org.apache.harmony.xml.ExpatReader $r11, $r15;
        org.apache.harmony.xml.ExpatParser$EntityParser $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r33;
        org.xml.sax.Locator $r32;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r11 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r4 = $r11.<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver entityResolver>;

        if r4 != null goto label2;

     label1:
        return;

     label2:
        $r12 = r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        if $r12 == null goto label5;

     label3:
        $r16 = new java.net.URI;

        specialinvoke $r16.<java.net.URI: void <init>(java.lang.String)>(r3);

        r8 = $r16;

        $z1 = virtualinvoke r8.<java.net.URI: boolean isAbsolute()>();

        if $z1 != 0 goto label5;

        $z0 = virtualinvoke r8.<java.net.URI: boolean isOpaque()>();

        if $z0 != 0 goto label5;

        $r19 = new java.net.URI;

        $r18 = r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        specialinvoke $r19.<java.net.URI: void <init>(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.net.URI: java.net.URI resolve(java.net.URI)>(r8);

        r10 = virtualinvoke $r20.<java.net.URI: java.lang.String toString()>();

     label4:
        r3 = r10;

     label5:
        r5 = interfaceinvoke r4.<org.xml.sax.EntityResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>(r2, r3);

        if r5 == null goto label1;

        r6 = specialinvoke r0.<org.apache.harmony.xml.ExpatParser: java.lang.String pickEncoding(org.xml.sax.InputSource)>(r5);

        $l1 = r0.<org.apache.harmony.xml.ExpatParser: long pointer>;

        l0 = staticinvoke <org.apache.harmony.xml.ExpatParser: long createEntityParser(long,java.lang.String)>($l1, r1);

     label6:
        $r13 = new org.apache.harmony.xml.ExpatParser$EntityParser;

        $r15 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        $r14 = virtualinvoke r5.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r17 = virtualinvoke r5.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r13.<org.apache.harmony.xml.ExpatParser$EntityParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,long,java.lang.String,java.lang.String,org.apache.harmony.xml.ExpatParser$1)>(r6, $r15, l0, $r14, $r17, null);

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void parseExternalEntity(org.apache.harmony.xml.ExpatParser,org.xml.sax.InputSource)>($r13, r5);

     label7:
        staticinvoke <org.apache.harmony.xml.ExpatParser: void releaseParser(long)>(l0);

        return;

     label8:
        $r21 := @caughtexception;

        r9 = $r21;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not resolve \'");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' relative to");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r30 = r0.<org.apache.harmony.xml.ExpatParser: java.lang.String systemId>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' at ");

        $r32 = r0.<org.apache.harmony.xml.ExpatParser: org.xml.sax.Locator locator>;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void logI(java.lang.String,java.lang.Throwable)>($r31, r9);

        goto label5;

     label9:
        $r22 := @caughtexception;

        r7 = $r22;

        staticinvoke <org.apache.harmony.xml.ExpatParser: void releaseParser(long)>(l0);

        throw r7;

        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.DTDHandler r4;
        org.apache.harmony.xml.ExpatReader $r5;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r4 = $r5.<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler dtdHandler>;

        if r4 == null goto label1;

        interfaceinvoke r4.<org.xml.sax.DTDHandler: void notationDecl(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label1:
        return;
    }

    void parseDocument(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void startDocument()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)>(r1);

        virtualinvoke r0.<org.apache.harmony.xml.ExpatParser: void finish()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void endDocument()>();

        return;
    }

    void parseDocument(java.io.Reader) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.io.Reader r1;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void startDocument()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.Reader)>(r1);

        virtualinvoke r0.<org.apache.harmony.xml.ExpatParser: void finish()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser: void endDocument()>();

        return;
    }

    void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2;
        org.xml.sax.ContentHandler r3;
        org.apache.harmony.xml.ExpatReader $r4;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r3 = $r4.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r3 == null goto label1;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    void startCdata() throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        org.xml.sax.ext.LexicalHandler r1;
        org.apache.harmony.xml.ExpatReader $r2;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        $r2 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r1 = $r2.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if r1 == null goto label1;

        interfaceinvoke r1.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

     label1:
        return;
    }

    void startDtd(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.ext.LexicalHandler r4;
        org.apache.harmony.xml.ExpatReader $r5;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r4 = $r5.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if r4 == null goto label1;

        interfaceinvoke r4.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

     label1:
        return;
    }

    void startElement(java.lang.String, java.lang.String, java.lang.String, int, int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2, r3;
        int i0, i1;
        org.xml.sax.ContentHandler r4;
        java.lang.Throwable r5, $r8;
        org.apache.harmony.xml.ExpatReader $r6;
        org.apache.harmony.xml.ExpatAttributes $r7;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r6 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r4 = $r6.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r4 != null goto label1;

        return;

     label1:
        r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 1;

        r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = i0;

        r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = i1;

        $r7 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatAttributes attributes>;

        interfaceinvoke r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, $r7);

     label2:
        r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        return;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        r0.<org.apache.harmony.xml.ExpatParser: boolean inStartElement> = 0;

        r0.<org.apache.harmony.xml.ExpatParser: int attributeCount> = -1;

        r0.<org.apache.harmony.xml.ExpatParser: int attributePointer> = 0;

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void startNamespace(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2;
        org.xml.sax.ContentHandler r3;
        org.apache.harmony.xml.ExpatReader $r4;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r3 = $r4.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r3 == null goto label1;

        interfaceinvoke r3.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    void text(char[], int) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        char[] r1;
        int i0;
        org.xml.sax.ContentHandler r2;
        org.apache.harmony.xml.ExpatReader $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r2 = $r3.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        if r2 == null goto label1;

        interfaceinvoke r2.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r1, 0, i0);

     label1:
        return;
    }

    void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatParser r0;
        java.lang.String r1, r2, r3, r4;
        org.xml.sax.DTDHandler r5;
        org.apache.harmony.xml.ExpatReader $r6;

        r0 := @this: org.apache.harmony.xml.ExpatParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r6 = r0.<org.apache.harmony.xml.ExpatParser: org.apache.harmony.xml.ExpatReader xmlReader>;

        r5 = $r6.<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler dtdHandler>;

        if r5 == null goto label1;

        interfaceinvoke r5.<org.xml.sax.DTDHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

     label1:
        return;
    }
}
