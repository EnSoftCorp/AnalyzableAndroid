public class java.net.CookieManager extends java.net.CookieHandler
{
    private static final java.lang.String VERSION_ONE_HEADER;
    private static final java.lang.String VERSION_ZERO_HEADER;
    private java.net.CookiePolicy policy;
    private java.net.CookieStore store;

    public void <init>()
    {
        java.net.CookieManager r0;

        r0 := @this: java.net.CookieManager;

        specialinvoke r0.<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>(null, null);

        return;
    }

    public void <init>(java.net.CookieStore, java.net.CookiePolicy)
    {
        java.net.CookieManager r0;
        java.net.CookieStore r1;
        java.net.CookiePolicy r2;
        java.net.CookieStoreImpl $r3;

        r0 := @this: java.net.CookieManager;

        r1 := @parameter0: java.net.CookieStore;

        r2 := @parameter1: java.net.CookiePolicy;

        specialinvoke r0.<java.net.CookieHandler: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.net.CookieStoreImpl;

        specialinvoke $r3.<java.net.CookieStoreImpl: void <init>()>();

        r1 = $r3;

     label1:
        r0.<java.net.CookieManager: java.net.CookieStore store> = r1;

        if r2 != null goto label2;

        r2 = <java.net.CookiePolicy: java.net.CookiePolicy ACCEPT_ORIGINAL_SERVER>;

     label2:
        r0.<java.net.CookieManager: java.net.CookiePolicy policy> = r2;

        return;
    }

    private static java.util.Map cookiesToHeaders(java.util.List)
    {
        java.util.List r0, $r8;
        java.lang.StringBuilder r1, $r3, $r10;
        int i0, i1, $i2, $i3;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r4, $r13, $r16;
        java.net.HttpCookie $r5, $r12, $r18;
        java.lang.String $r6, $r9, $r15;
        java.util.Map $r11, $r19;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r19 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r19;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        i0 = 1;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.net.HttpCookie) $r16;

        $i3 = virtualinvoke $r18.<java.net.HttpCookie: int getVersion()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        goto label2;

     label3:
        if i0 != 1 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Version=\"1\"; ");

     label4:
        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.net.HttpCookie) $r4;

        $r6 = virtualinvoke $r5.<java.net.HttpCookie: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i1 = 1;

     label5:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i2 goto label6;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r13 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (java.net.HttpCookie) $r13;

        $r15 = virtualinvoke $r12.<java.net.HttpCookie: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r9);

        $r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Cookie", $r8);

        return $r11;
    }

    private static java.util.List parseCookie(java.util.Map)
    {
        java.util.Map r0;
        java.util.ArrayList r1, $r9;
        java.util.Iterator r2, r5, r8;
        java.util.Map$Entry r3;
        java.lang.String r4, r6;
        java.util.Set $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r11, $r12, $r14, $r16, $r18;
        java.util.List $r13, $r15;
        java.net.HttpCookie $r17;
        java.lang.IllegalArgumentException $r19;

        r0 := @parameter0: java.util.Map;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r1 = $r9;

        $r10 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r12;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-cookie");

        if $z1 != 0 goto label2;

        $z4 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-cookie2");

        if $z4 == 0 goto label1;

     label2:
        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.List) $r14;

        r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label1;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r16;

     label4:
        $r15 = staticinvoke <java.net.HttpCookie: java.util.List parse(java.lang.String)>(r6);

        r8 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r18 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.net.HttpCookie) $r18;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17);

     label6:
        goto label5;

     label7:
        $r19 := @caughtexception;

        goto label3;

     label8:
        return r1;

        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    static java.lang.String pathToCookiePath(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "/";

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i1 = 1 + $i0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r1;
    }

    public java.util.Map get(java.net.URI, java.util.Map) throws java.io.IOException
    {
        java.net.CookieManager r0;
        java.net.URI r1;
        java.util.Map r2, $r10;
        java.util.ArrayList r3, $r7;
        java.util.Iterator r4;
        java.net.HttpCookie r5;
        java.lang.IllegalArgumentException $r6;
        java.net.CookieStore $r8;
        java.util.List $r9;
        boolean $z0, $z1, $z2, $z4;
        java.lang.Object $r11;

        r0 := @this: java.net.CookieManager;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.util.Map;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label2:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        $r8 = r0.<java.net.CookieManager: java.net.CookieStore store>;

        $r9 = interfaceinvoke $r8.<java.net.CookieStore: java.util.List get(java.net.URI)>(r1);

        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.net.HttpCookie) $r11;

        $z1 = staticinvoke <java.net.HttpCookie: boolean pathMatches(java.net.HttpCookie,java.net.URI)>(r5, r1);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <java.net.HttpCookie: boolean secureMatches(java.net.HttpCookie,java.net.URI)>(r5, r1);

        if $z2 == 0 goto label3;

        $z4 = staticinvoke <java.net.HttpCookie: boolean portMatches(java.net.HttpCookie,java.net.URI)>(r5, r1);

        if $z4 == 0 goto label3;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label3;

     label4:
        $r10 = staticinvoke <java.net.CookieManager: java.util.Map cookiesToHeaders(java.util.List)>(r3);

        return $r10;
    }

    public java.net.CookieStore getCookieStore()
    {
        java.net.CookieManager r0;
        java.net.CookieStore $r1;

        r0 := @this: java.net.CookieManager;

        $r1 = r0.<java.net.CookieManager: java.net.CookieStore store>;

        return $r1;
    }

    public void put(java.net.URI, java.util.Map) throws java.io.IOException
    {
        java.net.CookieManager r0;
        java.net.URI r1;
        java.util.Map r2;
        java.util.Iterator r3;
        java.net.HttpCookie r4;
        java.lang.IllegalArgumentException $r5;
        java.util.List $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18;
        java.net.CookiePolicy $r12;
        java.net.CookieStore $r14;
        int $i0;

        r0 := @this: java.net.CookieManager;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.util.Map;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        $r6 = staticinvoke <java.net.CookieManager: java.util.List parseCookie(java.util.Map)>(r2);

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.net.HttpCookie) $r7;

        $r8 = virtualinvoke r4.<java.net.HttpCookie: java.lang.String getDomain()>();

        if $r8 != null goto label4;

        $r17 = virtualinvoke r1.<java.net.URI: java.lang.String getHost()>();

        virtualinvoke r4.<java.net.HttpCookie: void setDomain(java.lang.String)>($r17);

     label4:
        $r9 = virtualinvoke r4.<java.net.HttpCookie: java.lang.String getPath()>();

        if $r9 != null goto label7;

        $r15 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();

        $r18 = staticinvoke <java.net.CookieManager: java.lang.String pathToCookiePath(java.lang.String)>($r15);

        virtualinvoke r4.<java.net.HttpCookie: void setPath(java.lang.String)>($r18);

     label5:
        $r10 = "";

        $r11 = virtualinvoke r4.<java.net.HttpCookie: java.lang.String getPortlist()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label8;

        $i0 = virtualinvoke r1.<java.net.URI: int getEffectivePort()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r4.<java.net.HttpCookie: void setPortlist(java.lang.String)>($r16);

     label6:
        $r12 = r0.<java.net.CookieManager: java.net.CookiePolicy policy>;

        $z3 = interfaceinvoke $r12.<java.net.CookiePolicy: boolean shouldAccept(java.net.URI,java.net.HttpCookie)>(r1, r4);

        if $z3 == 0 goto label3;

        $r14 = r0.<java.net.CookieManager: java.net.CookieStore store>;

        interfaceinvoke $r14.<java.net.CookieStore: void add(java.net.URI,java.net.HttpCookie)>(r1, r4);

        goto label3;

     label7:
        $z1 = staticinvoke <java.net.HttpCookie: boolean pathMatches(java.net.HttpCookie,java.net.URI)>(r4, r1);

        if $z1 != 0 goto label5;

        goto label3;

     label8:
        $r13 = virtualinvoke r4.<java.net.HttpCookie: java.lang.String getPortlist()>();

        if $r13 == null goto label6;

        $z4 = staticinvoke <java.net.HttpCookie: boolean portMatches(java.net.HttpCookie,java.net.URI)>(r4, r1);

        if $z4 != 0 goto label6;

        goto label3;

     label9:
        return;
    }

    public void setCookiePolicy(java.net.CookiePolicy)
    {
        java.net.CookieManager r0;
        java.net.CookiePolicy r1;

        r0 := @this: java.net.CookieManager;

        r1 := @parameter0: java.net.CookiePolicy;

        if r1 == null goto label1;

        r0.<java.net.CookieManager: java.net.CookiePolicy policy> = r1;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <java.net.CookieManager: java.lang.String VERSION_ZERO_HEADER> = "Set-cookie";

        <java.net.CookieManager: java.lang.String VERSION_ONE_HEADER> = "Set-cookie2";

        return;
    }
}
