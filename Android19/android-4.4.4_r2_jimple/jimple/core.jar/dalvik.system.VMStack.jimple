public final class dalvik.system.VMStack extends java.lang.Object
{

    public void <init>()
    {
        dalvik.system.VMStack r0;

        r0 := @this: dalvik.system.VMStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native int fillStackTraceElements(java.lang.Thread, java.lang.StackTraceElement[]);

    public static native java.lang.ClassLoader getCallingClassLoader();

    public static native java.lang.Class[] getClasses(int);

    public static java.lang.ClassLoader getClosestUserClassLoader(java.lang.ClassLoader, java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0, r1, r3;
        java.lang.Class[] r2;
        int i0, i1;
        java.lang.Class $r4;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.ClassLoader;

        r2 = staticinvoke <dalvik.system.VMStack: java.lang.Class[] getClasses(int)>(-1);

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r2[i1];

        r3 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r3 == null goto label2;

        if r3 == r0 goto label2;

        if r3 == r1 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static native java.lang.Class getStackClass2();

    public static native java.lang.StackTraceElement[] getThreadStackTrace(java.lang.Thread);
}
