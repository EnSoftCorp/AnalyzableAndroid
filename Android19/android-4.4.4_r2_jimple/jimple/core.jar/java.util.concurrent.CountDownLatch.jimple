public class java.util.concurrent.CountDownLatch extends java.lang.Object
{
    private final java.util.concurrent.CountDownLatch$Sync sync;

    public void <init>(int)
    {
        java.util.concurrent.CountDownLatch r0;
        int i0;
        java.util.concurrent.CountDownLatch$Sync $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.util.concurrent.CountDownLatch;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("count < 0");

        throw $r2;

     label1:
        $r1 = new java.util.concurrent.CountDownLatch$Sync;

        specialinvoke $r1.<java.util.concurrent.CountDownLatch$Sync: void <init>(int)>(i0);

        r0.<java.util.concurrent.CountDownLatch: java.util.concurrent.CountDownLatch$Sync sync> = $r1;

        return;
    }

    public void await() throws java.lang.InterruptedException
    {
        java.util.concurrent.CountDownLatch r0;
        java.util.concurrent.CountDownLatch$Sync $r1;

        r0 := @this: java.util.concurrent.CountDownLatch;

        $r1 = r0.<java.util.concurrent.CountDownLatch: java.util.concurrent.CountDownLatch$Sync sync>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch$Sync: void acquireSharedInterruptibly(int)>(1);

        return;
    }

    public boolean await(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.CountDownLatch r0;
        long l0, $l1;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.CountDownLatch$Sync $r2;
        boolean $z0;

        r0 := @this: java.util.concurrent.CountDownLatch;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<java.util.concurrent.CountDownLatch: java.util.concurrent.CountDownLatch$Sync sync>;

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $z0 = virtualinvoke $r2.<java.util.concurrent.CountDownLatch$Sync: boolean tryAcquireSharedNanos(int,long)>(1, $l1);

        return $z0;
    }

    public void countDown()
    {
        java.util.concurrent.CountDownLatch r0;
        java.util.concurrent.CountDownLatch$Sync $r1;

        r0 := @this: java.util.concurrent.CountDownLatch;

        $r1 = r0.<java.util.concurrent.CountDownLatch: java.util.concurrent.CountDownLatch$Sync sync>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch$Sync: boolean releaseShared(int)>(1);

        return;
    }

    public long getCount()
    {
        java.util.concurrent.CountDownLatch r0;
        java.util.concurrent.CountDownLatch$Sync $r1;
        int $i0;
        long $l1;

        r0 := @this: java.util.concurrent.CountDownLatch;

        $r1 = r0.<java.util.concurrent.CountDownLatch: java.util.concurrent.CountDownLatch$Sync sync>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.CountDownLatch$Sync: int getCount()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public java.lang.String toString()
    {
        java.util.concurrent.CountDownLatch r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r8;
        java.util.concurrent.CountDownLatch$Sync $r5;
        int $i0;

        r0 := @this: java.util.concurrent.CountDownLatch;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Count = ");

        $r5 = r0.<java.util.concurrent.CountDownLatch: java.util.concurrent.CountDownLatch$Sync sync>;

        $i0 = virtualinvoke $r5.<java.util.concurrent.CountDownLatch$Sync: int getCount()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
