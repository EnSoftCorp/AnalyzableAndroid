public class java.util.logging.Level extends java.lang.Object implements java.io.Serializable
{
    public static final java.util.logging.Level ALL;
    public static final java.util.logging.Level CONFIG;
    public static final java.util.logging.Level FINE;
    public static final java.util.logging.Level FINER;
    public static final java.util.logging.Level FINEST;
    public static final java.util.logging.Level INFO;
    public static final java.util.logging.Level OFF;
    public static final java.util.logging.Level SEVERE;
    public static final java.util.logging.Level WARNING;
    private static final java.util.List levels;
    private static final long serialVersionUID;
    private final java.lang.String name;
    private transient java.util.ResourceBundle rb;
    private final java.lang.String resourceBundleName;
    private final int value;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.logging.Level $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        <java.util.logging.Level: long serialVersionUID> = -8176160795706313070L;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(9);

        <java.util.logging.Level: java.util.List levels> = $r0;

        $r1 = new java.util.logging.Level;

        specialinvoke $r1.<java.util.logging.Level: void <init>(java.lang.String,int)>("OFF", 2147483647);

        <java.util.logging.Level: java.util.logging.Level OFF> = $r1;

        $r2 = new java.util.logging.Level;

        specialinvoke $r2.<java.util.logging.Level: void <init>(java.lang.String,int)>("SEVERE", 1000);

        <java.util.logging.Level: java.util.logging.Level SEVERE> = $r2;

        $r3 = new java.util.logging.Level;

        specialinvoke $r3.<java.util.logging.Level: void <init>(java.lang.String,int)>("WARNING", 900);

        <java.util.logging.Level: java.util.logging.Level WARNING> = $r3;

        $r4 = new java.util.logging.Level;

        specialinvoke $r4.<java.util.logging.Level: void <init>(java.lang.String,int)>("INFO", 800);

        <java.util.logging.Level: java.util.logging.Level INFO> = $r4;

        $r5 = new java.util.logging.Level;

        specialinvoke $r5.<java.util.logging.Level: void <init>(java.lang.String,int)>("CONFIG", 700);

        <java.util.logging.Level: java.util.logging.Level CONFIG> = $r5;

        $r6 = new java.util.logging.Level;

        specialinvoke $r6.<java.util.logging.Level: void <init>(java.lang.String,int)>("FINE", 500);

        <java.util.logging.Level: java.util.logging.Level FINE> = $r6;

        $r7 = new java.util.logging.Level;

        specialinvoke $r7.<java.util.logging.Level: void <init>(java.lang.String,int)>("FINER", 400);

        <java.util.logging.Level: java.util.logging.Level FINER> = $r7;

        $r8 = new java.util.logging.Level;

        specialinvoke $r8.<java.util.logging.Level: void <init>(java.lang.String,int)>("FINEST", 300);

        <java.util.logging.Level: java.util.logging.Level FINEST> = $r8;

        $r9 = new java.util.logging.Level;

        specialinvoke $r9.<java.util.logging.Level: void <init>(java.lang.String,int)>("ALL", -2147483648);

        <java.util.logging.Level: java.util.logging.Level ALL> = $r9;

        return;
    }

    protected void <init>(java.lang.String, int)
    {
        java.util.logging.Level r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.util.logging.Level;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, null);

        return;
    }

    protected void <init>(java.lang.String, int, java.lang.String)
    {
        java.util.logging.Level r0;
        java.lang.String r1, r2;
        int i0;
        java.util.List r3, $r6;
        java.lang.Throwable r4, $r11;
        java.util.Locale $r7;
        java.lang.ClassLoader $r8;
        java.util.ResourceBundle $r9;
        java.lang.NullPointerException $r10;
        java.util.MissingResourceException $r12;

        r0 := @this: java.util.logging.Level;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r10;

     label1:
        r0.<java.util.logging.Level: java.lang.String name> = r1;

        r0.<java.util.logging.Level: int value> = i0;

        r0.<java.util.logging.Level: java.lang.String resourceBundleName> = r2;

        if r2 == null goto label3;

     label2:
        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = staticinvoke <dalvik.system.VMStack: java.lang.ClassLoader getCallingClassLoader()>();

        $r9 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>(r2, $r7, $r8);

        r0.<java.util.logging.Level: java.util.ResourceBundle rb> = $r9;

     label3:
        r3 = <java.util.logging.Level: java.util.List levels>;

        entermonitor r3;

     label4:
        $r6 = <java.util.logging.Level: java.util.List levels>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        exitmonitor r3;

     label5:
        return;

     label6:
        $r12 := @caughtexception;

        r0.<java.util.logging.Level: java.util.ResourceBundle rb> = null;

        goto label3;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

     label8:
        exitmonitor r3;

     label9:
        throw r4;

        catch java.util.MissingResourceException from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static java.util.logging.Level parse(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r14, $r18;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2;
        java.util.List r2, $r8, $r16;
        java.lang.Throwable r3, $r22;
        java.util.Iterator r4, r5;
        java.util.logging.Level r6, r7, $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r15;
        java.lang.IllegalArgumentException $r11;
        java.lang.Object $r17, $r19;
        java.lang.NullPointerException $r20;
        java.lang.NumberFormatException $r21;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r20;

     label01:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label02:
        i0 = i1;

        z0 = 1;

     label03:
        r2 = <java.util.logging.Level: java.util.List levels>;

        entermonitor r2;

     label04:
        $r8 = <java.util.logging.Level: java.util.List levels>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.logging.Level) $r19;

        $r18 = virtualinvoke r7.<java.util.logging.Level: java.lang.String getName()>();

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 == 0 goto label05;

        exitmonitor r2;

     label06:
        return r7;

     label07:
        if z0 == 0 goto label14;

     label08:
        $r16 = <java.util.logging.Level: java.util.List levels>;

        r5 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.logging.Level) $r17;

        $i2 = virtualinvoke r6.<java.util.logging.Level: int intValue()>();

        if i0 != $i2 goto label09;

        exitmonitor r2;

     label10:
        return r6;

     label11:
        $r22 := @caughtexception;

        r3 = $r22;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

     label14:
        exitmonitor r2;

     label15:
        if z0 != 0 goto label16;

        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse name \'");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label16:
        $r9 = new java.util.logging.Level;

        specialinvoke $r9.<java.util.logging.Level: void <init>(java.lang.String,int)>(r0, i0);

        return $r9;

     label17:
        $r21 := @caughtexception;

        z0 = 0;

        i0 = 0;

        goto label03;

        catch java.lang.NumberFormatException from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.logging.Level r0;
        java.io.ObjectInputStream r1;
        java.lang.String $r3, $r4;
        java.util.ResourceBundle $r5;
        java.util.MissingResourceException $r6;

        r0 := @this: java.util.logging.Level;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r3 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;

        if $r3 == null goto label2;

     label1:
        $r4 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;

        $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>($r4);

        r0.<java.util.logging.Level: java.util.ResourceBundle rb> = $r5;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r0.<java.util.logging.Level: java.util.ResourceBundle rb> = null;

        return;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    private java.lang.Object readResolve()
    {
        java.util.logging.Level r0, r4;
        java.util.List r1, $r5, $r6;
        java.lang.Throwable r2, $r12;
        java.util.Iterator r3;
        boolean $z0, $z2, $z3;
        java.lang.Object $r7;
        int $i0, $i1;
        java.lang.String $r8, $r9, $r10, $r11;

        r0 := @this: java.util.logging.Level;

        r1 = <java.util.logging.Level: java.util.List levels>;

        entermonitor r1;

     label1:
        $r5 = <java.util.logging.Level: java.util.List levels>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.logging.Level) $r7;

        $i1 = r0.<java.util.logging.Level: int value>;

        $i0 = r4.<java.util.logging.Level: int value>;

        if $i1 != $i0 goto label2;

        $r8 = r0.<java.util.logging.Level: java.lang.String name>;

        $r9 = r4.<java.util.logging.Level: java.lang.String name>;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

        $r11 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;

        $r10 = r4.<java.util.logging.Level: java.lang.String resourceBundleName>;

        $z3 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r10);

        if $z3 == 0 goto label2;

        exitmonitor r1;

     label3:
        return r4;

     label4:
        $r6 = <java.util.logging.Level: java.util.List levels>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r0);

        exitmonitor r1;

     label5:
        return r0;

     label6:
        $r12 := @caughtexception;

        r2 = $r12;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.logging.Level r0, $r2;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: java.util.logging.Level;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof java.util.logging.Level;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r2 = (java.util.logging.Level) r1;

        $i0 = virtualinvoke $r2.<java.util.logging.Level: int intValue()>();

        $i1 = r0.<java.util.logging.Level: int value>;

        if $i0 == $i1 goto label1;

        return 0;
    }

    public java.lang.String getLocalizedName()
    {
        java.util.logging.Level r0;
        java.lang.String r2, $r4, $r6, $r8;
        java.util.ResourceBundle $r3, $r5;
        java.util.MissingResourceException $r7;

        r0 := @this: java.util.logging.Level;

        $r3 = r0.<java.util.logging.Level: java.util.ResourceBundle rb>;

        if $r3 != null goto label1;

        $r6 = r0.<java.util.logging.Level: java.lang.String name>;

        return $r6;

     label1:
        $r5 = r0.<java.util.logging.Level: java.util.ResourceBundle rb>;

        $r4 = r0.<java.util.logging.Level: java.lang.String name>;

        r2 = virtualinvoke $r5.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>($r4);

     label2:
        return r2;

     label3:
        $r7 := @caughtexception;

        $r8 = r0.<java.util.logging.Level: java.lang.String name>;

        return $r8;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;

        $r1 = r0.<java.util.logging.Level: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getResourceBundleName()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;

        $r1 = r0.<java.util.logging.Level: java.lang.String resourceBundleName>;

        return $r1;
    }

    public int hashCode()
    {
        java.util.logging.Level r0;
        int $i0;

        r0 := @this: java.util.logging.Level;

        $i0 = r0.<java.util.logging.Level: int value>;

        return $i0;
    }

    public final int intValue()
    {
        java.util.logging.Level r0;
        int $i0;

        r0 := @this: java.util.logging.Level;

        $i0 = r0.<java.util.logging.Level: int value>;

        return $i0;
    }

    public final java.lang.String toString()
    {
        java.util.logging.Level r0;
        java.lang.String $r1;

        r0 := @this: java.util.logging.Level;

        $r1 = r0.<java.util.logging.Level: java.lang.String name>;

        return $r1;
    }
}
