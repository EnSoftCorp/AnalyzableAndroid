final class libcore.reflect.ListOfVariables extends java.lang.Object
{
    final java.util.ArrayList array;

    void <init>()
    {
        libcore.reflect.ListOfVariables r0;
        java.util.ArrayList $r1;

        r0 := @this: libcore.reflect.ListOfVariables;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<libcore.reflect.ListOfVariables: java.util.ArrayList array> = $r1;

        return;
    }

    void add(java.lang.reflect.TypeVariable)
    {
        libcore.reflect.ListOfVariables r0;
        java.lang.reflect.TypeVariable r1;
        java.util.ArrayList $r2;

        r0 := @this: libcore.reflect.ListOfVariables;

        r1 := @parameter0: java.lang.reflect.TypeVariable;

        $r2 = r0.<libcore.reflect.ListOfVariables: java.util.ArrayList array>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    java.lang.reflect.TypeVariable[] getArray()
    {
        libcore.reflect.ListOfVariables r0;
        java.lang.reflect.TypeVariable[] r1, $r5;
        java.util.ArrayList $r2, $r3;
        int $i0;
        java.lang.Object[] $r4;

        r0 := @this: libcore.reflect.ListOfVariables;

        $r2 = r0.<libcore.reflect.ListOfVariables: java.util.ArrayList array>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r1 = newarray (java.lang.reflect.TypeVariable)[$i0];

        $r3 = r0.<libcore.reflect.ListOfVariables: java.util.ArrayList array>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        $r5 = (java.lang.reflect.TypeVariable[]) $r4;

        return $r5;
    }
}
