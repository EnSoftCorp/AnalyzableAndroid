class java.net.URLClassLoader$URLJarHandler extends java.net.URLClassLoader$URLHandler
{
    final java.net.URLClassLoader$IndexFile index;
    final java.util.jar.JarFile jf;
    final java.lang.String prefixName;
    final java.util.Map subHandlers;
    final java.net.URLClassLoader this$0;

    public void <init>(java.net.URLClassLoader, java.net.URL, java.net.URL, java.util.jar.JarFile, java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URLClassLoader r1;
        java.net.URL r2, r3;
        java.util.jar.JarFile r4;
        java.lang.String r5;
        java.util.jar.JarEntry r6;
        java.net.URLClassLoader$IndexFile r7;
        java.util.HashMap $r8;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URLClassLoader;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.util.jar.JarFile;

        r5 := @parameter4: java.lang.String;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0> = r1;

        specialinvoke r0.<java.net.URLClassLoader$URLHandler: void <init>(java.net.URLClassLoader,java.net.URL)>(r1, r2);

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers> = $r8;

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf> = r4;

        r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName> = r5;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl> = r3;

        r6 = virtualinvoke r4.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>("META-INF/INDEX.LIST");

        if r6 != null goto label2;

        r7 = null;

     label1:
        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index> = r7;

        return;

     label2:
        r7 = staticinvoke <java.net.URLClassLoader$IndexFile: java.net.URLClassLoader$IndexFile readIndexFile(java.util.jar.JarFile,java.util.jar.JarEntry,java.net.URL)>(r4, r6, r2);

        goto label1;
    }

    public void <init>(java.net.URLClassLoader, java.net.URL, java.net.URL, java.util.jar.JarFile, java.lang.String, java.net.URLClassLoader$IndexFile)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URLClassLoader r1;
        java.net.URL r2, r3;
        java.util.jar.JarFile r4;
        java.lang.String r5;
        java.net.URLClassLoader$IndexFile r6;
        java.util.HashMap $r7;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URLClassLoader;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.util.jar.JarFile;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.net.URLClassLoader$IndexFile;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0> = r1;

        specialinvoke r0.<java.net.URLClassLoader$URLHandler: void <init>(java.net.URLClassLoader,java.net.URL)>(r1, r2);

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers> = $r7;

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf> = r4;

        r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName> = r5;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index> = r6;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl> = r3;

        return;
    }

    private java.lang.Class createClass(java.util.jar.JarEntry, java.util.jar.Manifest, java.lang.String, java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.util.jar.JarEntry r1;
        java.util.jar.Manifest r2;
        java.lang.String r3, r4, r8, $r21, $r24;
        byte[] r6;
        java.security.CodeSource r7, $r12;
        java.lang.Package r9;
        boolean z0, $z1, $z2;
        java.util.jar.JarFile $r10;
        java.io.InputStream $r11;
        java.net.URL $r13, $r27, $r31;
        int $i0;
        java.security.cert.Certificate[] $r14;
        java.lang.Class $r15;
        java.net.URLClassLoader $r16, $r17, $r23, $r26, $r28;
        java.lang.Object[] $r18;
        java.lang.SecurityException $r19;
        java.lang.StringBuilder $r20, $r22, $r25;
        java.io.IOException $r32;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.util.jar.JarEntry;

        r2 := @parameter1: java.util.jar.Manifest;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

     label1:
        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        $r11 = virtualinvoke $r10.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        r6 = staticinvoke <libcore.io.Streams: byte[] readFully(java.io.InputStream)>($r11);

     label2:
        if r3 == null goto label3;

        r8 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $r17 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        r9 = staticinvoke <java.net.URLClassLoader: java.lang.Package access$300(java.net.URLClassLoader,java.lang.String)>($r17, r8);

        if r9 != null goto label6;

        if r2 == null goto label5;

        $r28 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        $r31 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl>;

        virtualinvoke $r28.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r8, r2, $r31);

     label3:
        $r12 = new java.security.CodeSource;

        $r13 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl>;

        $r14 = virtualinvoke r1.<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>();

        specialinvoke $r12.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r13, $r14);

        r7 = $r12;

        $r16 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        $i0 = lengthof r6;

        $r15 = staticinvoke <java.net.URLClassLoader: java.lang.Class access$600(java.net.URLClassLoader,java.lang.String,byte[],int,int,java.security.CodeSource)>($r16, r4, r6, 0, $i0, r7);

        return $r15;

     label4:
        $r32 := @caughtexception;

        return null;

     label5:
        $r26 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        staticinvoke <java.net.URLClassLoader: java.lang.Package access$400(java.net.URLClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>($r26, r8, null, null, null, null, null, null, null);

        goto label3;

     label6:
        z0 = virtualinvoke r9.<java.lang.Package: boolean isSealed()>();

        if r2 == null goto label7;

        $r23 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = staticinvoke <java.net.URLClassLoader: boolean access$500(java.net.URLClassLoader,java.util.jar.Manifest,java.lang.String)>($r23, r2, $r24);

        if $z2 == 0 goto label7;

        $r27 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl>;

        $z1 = virtualinvoke r9.<java.lang.Package: boolean isSealed(java.net.URL)>($r27);

        if $z1 != 0 goto label8;

        z0 = 1;

     label7:
        if z0 == 0 goto label3;

        $r19 = new java.lang.SecurityException;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r3;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Package %s is sealed", $r18);

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label8:
        z0 = 0;

        goto label7;

        catch java.io.IOException from label1 to label2 with label4;
    }

    private java.net.URLClassLoader$URLHandler createURLSubJarHandler(java.net.URL)
    {
        java.net.URLClassLoader$URLJarHandler r0, r7, $r19;
        java.net.URL r1, r5, $r12;
        java.lang.String r2, r3, $r8, $r14, $r15;
        int i0, $i1;
        java.util.jar.JarFile r6;
        boolean $z0;
        java.net.URLConnection $r9, $r18;
        java.net.JarURLConnection $r10, $r17;
        java.lang.StringBuilder $r11, $r13, $r16;
        java.io.IOException $r20;
        java.net.URLClassLoader $r21;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URL;

        r2 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $r8 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>("!/");

        if $z0 == 0 goto label3;

        r3 = "";

     label1:
        $r9 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r10 = (java.net.JarURLConnection) $r9;

        r5 = virtualinvoke $r10.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

        $r12 = new java.net.URL;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r5.<java.net.URL: java.lang.String toExternalForm()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("jar", "", $r15);

        $r18 = virtualinvoke $r12.<java.net.URL: java.net.URLConnection openConnection()>();

        $r17 = (java.net.JarURLConnection) $r18;

        r6 = virtualinvoke $r17.<java.net.JarURLConnection: java.util.jar.JarFile getJarFile()>();

        $r19 = new java.net.URLClassLoader$URLJarHandler;

        $r21 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        specialinvoke $r19.<java.net.URLClassLoader$URLJarHandler: void <init>(java.net.URLClassLoader,java.net.URL,java.net.URL,java.util.jar.JarFile,java.lang.String,java.net.URLClassLoader$IndexFile)>($r21, r1, r5, r6, r3, null);

        r7 = $r19;

     label2:
        return r7;

     label3:
        i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>("!/");

        if i0 != -1 goto label4;

        return null;

     label4:
        $i1 = i0 + 2;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label1;

     label5:
        $r20 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label5;
    }

    private java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URL r1;
        java.lang.Throwable r2, $r14;
        java.net.URLClassLoader$URLHandler r3, r5, r6, r7;
        java.lang.String r4;
        java.util.Map $r8, $r12;
        java.lang.Object $r9;
        boolean $z0, $z1;
        java.net.URLClassLoader $r10, $r13;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URL;

        entermonitor r0;

     label01:
        $r8 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.net.URLClassLoader$URLHandler) $r9;

     label02:
        if r3 == null goto label04;

        r7 = r3;

     label03:
        exitmonitor r0;

        return r7;

     label04:
        r4 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $z0 == 0 goto label08;

        $r13 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        r6 = staticinvoke <java.net.URLClassLoader: java.net.URLClassLoader$URLHandler access$700(java.net.URLClassLoader,java.net.URL)>($r13, r1);

     label05:
        if r6 == null goto label13;

     label06:
        $r12 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label07:
        goto label13;

     label08:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z1 == 0 goto label10;

        r6 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler createURLSubJarHandler(java.net.URL)>(r1);

     label09:
        goto label05;

     label10:
        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        r5 = staticinvoke <java.net.URLClassLoader: java.net.URLClassLoader$URLHandler access$800(java.net.URLClassLoader,java.net.URL)>($r10, r1);

     label11:
        r6 = r5;

        goto label05;

     label12:
        $r14 := @caughtexception;

        r2 = $r14;

        exitmonitor r0;

        throw r2;

     label13:
        r7 = r6;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    java.lang.Class findClass(java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r2, r3, r4, $r13;
        java.util.jar.JarEntry r5;
        java.util.ArrayList r6;
        java.util.Iterator r7;
        java.net.URLClassLoader$URLHandler r8;
        java.lang.Class r9, r11;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.util.jar.JarFile $r16, $r24;
        java.net.URLClassLoader$IndexFile $r17, $r18, $r22;
        java.net.URL $r19, $r21;
        java.lang.Object $r20;
        boolean $z1;
        java.util.jar.Manifest $r23;
        java.io.IOException $r25;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        r5 = virtualinvoke $r16.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>(r4);

        if r5 == null goto label4;

     label1:
        $r24 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        $r23 = virtualinvoke $r24.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();

        r11 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.lang.Class createClass(java.util.jar.JarEntry,java.util.jar.Manifest,java.lang.String,java.lang.String)>(r5, $r23, r1, r3);

     label2:
        return r11;

     label3:
        $r25 := @caughtexception;

     label4:
        $r18 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        if $r18 == null goto label8;

        if r1 != null goto label7;

        $r22 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r6 = virtualinvoke $r22.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r2);

     label5:
        if r6 == null goto label8;

        $r19 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        virtualinvoke r6.<java.util.ArrayList: boolean remove(java.lang.Object)>($r19);

        r7 = virtualinvoke r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.net.URL) $r20;

        r8 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)>($r21);

        if r8 == null goto label6;

        r9 = virtualinvoke r8.<java.net.URLClassLoader$URLHandler: java.lang.Class findClass(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        if r9 == null goto label6;

        return r9;

     label7:
        $r17 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r6 = virtualinvoke $r17.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r1);

        goto label5;

     label8:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.net.URL findResource(java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r3;
        java.net.URL r2, r7, $r10, $r12;
        int i0;
        java.util.ArrayList r4;
        java.util.Iterator r5;
        java.net.URLClassLoader$URLHandler r6;
        java.net.URLClassLoader$IndexFile $r8, $r9;
        java.lang.Object $r11;
        boolean $z1;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL findResourceInOwn(java.lang.String)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r8 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        if $r8 == null goto label5;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if i0 <= 0 goto label4;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r4 = virtualinvoke $r9.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r3);

        if r4 == null goto label5;

        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        virtualinvoke r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r10);

        r5 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.net.URL) $r11;

        r6 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)>($r12);

        if r6 == null goto label3;

        r7 = virtualinvoke r6.<java.net.URLClassLoader$URLHandler: java.net.URL findResource(java.lang.String)>(r1);

        if r7 == null goto label3;

        return r7;

     label4:
        r3 = r1;

        goto label2;

     label5:
        return null;
    }

    java.net.URL findResourceInOwn(java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.util.jar.JarFile $r7;
        java.util.zip.ZipEntry $r8;
        java.net.URL $r9, $r10;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        $r8 = virtualinvoke $r7.<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>(r2);

        if $r8 == null goto label1;

        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        $r10 = virtualinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL targetURL(java.net.URL,java.lang.String)>($r9, r1);

        return $r10;

     label1:
        return null;
    }

    void findResources(java.lang.String, java.util.ArrayList)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r4;
        java.util.ArrayList r2, r5;
        java.net.URL r3, $r10, $r12;
        int i0;
        java.util.Iterator r6;
        java.net.URLClassLoader$URLHandler r7;
        java.net.URLClassLoader$IndexFile $r8, $r9;
        java.lang.Object $r11;
        boolean $z1, $z2;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        r3 = virtualinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL findResourceInOwn(java.lang.String)>(r1);

        if r3 == null goto label1;

        $z2 = virtualinvoke r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r3);

        if $z2 != 0 goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label1:
        $r8 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        if $r8 == null goto label5;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if i0 <= 0 goto label4;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r5 = virtualinvoke $r9.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r4);

        if r5 == null goto label5;

        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        virtualinvoke r5.<java.util.ArrayList: boolean remove(java.lang.Object)>($r10);

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.net.URL) $r11;

        r7 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)>($r12);

        if r7 == null goto label3;

        virtualinvoke r7.<java.net.URLClassLoader$URLHandler: void findResources(java.lang.String,java.util.ArrayList)>(r1, r2);

        goto label3;

     label4:
        r4 = r1;

        goto label2;

     label5:
        return;
    }

    java.net.URLClassLoader$IndexFile getIndex()
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URLClassLoader$IndexFile $r1;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        $r1 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        return $r1;
    }
}
