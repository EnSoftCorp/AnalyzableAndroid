class java.util.ServiceLoader$ServiceIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.lang.ClassLoader classLoader;
    private boolean isRead;
    private java.util.LinkedList queue;
    private final java.lang.Class service;
    private final java.util.Set services;
    final java.util.ServiceLoader this$0;

    public void <init>(java.util.ServiceLoader, java.util.ServiceLoader)
    {
        java.util.ServiceLoader$ServiceIterator r0;
        java.util.ServiceLoader r1, r2;
        java.util.LinkedList $r3;
        java.lang.ClassLoader $r4;
        java.lang.Class $r5;
        java.util.Set $r6;

        r0 := @this: java.util.ServiceLoader$ServiceIterator;

        r1 := @parameter0: java.util.ServiceLoader;

        r2 := @parameter1: java.util.ServiceLoader;

        r0.<java.util.ServiceLoader$ServiceIterator: java.util.ServiceLoader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.ServiceLoader$ServiceIterator: boolean isRead> = 0;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<java.util.ServiceLoader$ServiceIterator: java.util.LinkedList queue> = $r3;

        $r4 = staticinvoke <java.util.ServiceLoader: java.lang.ClassLoader access$000(java.util.ServiceLoader)>(r2);

        r0.<java.util.ServiceLoader$ServiceIterator: java.lang.ClassLoader classLoader> = $r4;

        $r5 = staticinvoke <java.util.ServiceLoader: java.lang.Class access$100(java.util.ServiceLoader)>(r2);

        r0.<java.util.ServiceLoader$ServiceIterator: java.lang.Class service> = $r5;

        $r6 = staticinvoke <java.util.ServiceLoader: java.util.Set access$200(java.util.ServiceLoader)>(r2);

        r0.<java.util.ServiceLoader$ServiceIterator: java.util.Set services> = $r6;

        return;
    }

    private void checkValidJavaClassName(java.lang.String)
    {
        java.util.ServiceLoader$ServiceIterator r0;
        java.lang.String r1, $r7;
        int i0, $i2;
        char c1;
        boolean $z0;
        java.util.ServiceConfigurationError $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: java.util.ServiceLoader$ServiceIterator;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c1);

        if $z0 != 0 goto label2;

        if c1 == 46 goto label2;

        $r2 = new java.util.ServiceConfigurationError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad character \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in class name");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.util.ServiceConfigurationError: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void readClass()
    {
        java.util.ServiceLoader$ServiceIterator r0;
        java.util.Iterator r1;
        java.net.URL r2;
        java.io.BufferedReader r3, r4, $r11;
        java.lang.Throwable r5, $r16, $r17;
        java.lang.Exception r6, $r19, $r22;
        java.lang.String r7, r8, $r24;
        int i0;
        java.util.Set $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;
        java.io.InputStreamReader $r12;
        java.io.InputStream $r13;
        java.util.LinkedList $r14, $r15;
        java.util.ServiceConfigurationError $r18;
        java.lang.StringBuilder $r20, $r21, $r23;

        r0 := @this: java.util.ServiceLoader$ServiceIterator;

        $r9 = r0.<java.util.ServiceLoader$ServiceIterator: java.util.Set services>;

        r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.net.URL) $r10;

        r3 = null;

     label02:
        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.InputStreamReader;

        $r13 = virtualinvoke r2.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r13, "UTF-8");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

        r4 = $r11;

     label03:
        r7 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        if r7 == null goto label14;

     label05:
        i0 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(35);

     label06:
        if i0 == -1 goto label08;

     label07:
        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label08:
        r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label03;

        specialinvoke r0.<java.util.ServiceLoader$ServiceIterator: void checkValidJavaClassName(java.lang.String)>(r8);

        $r14 = r0.<java.util.ServiceLoader$ServiceIterator: java.util.LinkedList queue>;

        $z2 = virtualinvoke $r14.<java.util.LinkedList: boolean contains(java.lang.Object)>(r8);

        if $z2 != 0 goto label03;

        $r15 = r0.<java.util.ServiceLoader$ServiceIterator: java.util.LinkedList queue>;

        virtualinvoke $r15.<java.util.LinkedList: boolean add(java.lang.Object)>(r8);

     label09:
        goto label03;

     label10:
        $r22 := @caughtexception;

        r6 = $r22;

        r3 = r4;

     label11:
        $r18 = new java.util.ServiceConfigurationError;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t read ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>($r24, r6);

        throw $r18;

     label12:
        $r16 := @caughtexception;

        r5 = $r16;

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r5;

     label14:
        r0.<java.util.ServiceLoader$ServiceIterator: boolean isRead> = 1;

     label15:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label01;

     label16:
        return;

     label17:
        $r17 := @caughtexception;

        r5 = $r17;

        r3 = r4;

        goto label13;

     label18:
        $r19 := @caughtexception;

        r6 = $r19;

        r3 = null;

        goto label11;

        catch java.lang.Exception from label02 to label03 with label18;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Exception from label14 to label15 with label10;
        catch java.lang.Throwable from label14 to label15 with label17;
    }

    public boolean hasNext()
    {
        java.util.ServiceLoader$ServiceIterator r0;
        boolean $z0, $z1;
        java.util.LinkedList $r1, $r2;

        r0 := @this: java.util.ServiceLoader$ServiceIterator;

        $z0 = r0.<java.util.ServiceLoader$ServiceIterator: boolean isRead>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<java.util.ServiceLoader$ServiceIterator: void readClass()>();

     label1:
        $r1 = r0.<java.util.ServiceLoader$ServiceIterator: java.util.LinkedList queue>;

        if $r1 == null goto label2;

        $r2 = r0.<java.util.ServiceLoader$ServiceIterator: java.util.LinkedList queue>;

        $z1 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.Object next()
    {
        java.util.ServiceLoader$ServiceIterator r0;
        java.lang.String r1, $r16;
        java.lang.Exception r2, $r11;
        java.lang.Object r3, $r5, $r9;
        boolean $z0;
        java.util.LinkedList $r4;
        java.lang.ClassLoader $r6;
        java.lang.Class $r7, $r8;
        java.util.NoSuchElementException $r10;
        java.util.ServiceConfigurationError $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: java.util.ServiceLoader$ServiceIterator;

        $z0 = virtualinvoke r0.<java.util.ServiceLoader$ServiceIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = new java.util.NoSuchElementException;

        specialinvoke $r10.<java.util.NoSuchElementException: void <init>()>();

        throw $r10;

     label1:
        $r4 = r0.<java.util.ServiceLoader$ServiceIterator: java.util.LinkedList queue>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object remove()>();

        r1 = (java.lang.String) $r5;

     label2:
        $r7 = r0.<java.util.ServiceLoader$ServiceIterator: java.lang.Class service>;

        $r6 = r0.<java.util.ServiceLoader$ServiceIterator: java.lang.ClassLoader classLoader>;

        $r8 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        r3 = virtualinvoke $r7.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r9);

     label3:
        return r3;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = new java.util.ServiceConfigurationError;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t instantiate class ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>($r16, r2);

        throw $r12;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void remove()
    {
        java.util.ServiceLoader$ServiceIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.ServiceLoader$ServiceIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
