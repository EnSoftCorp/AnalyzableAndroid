class org.apache.harmony.security.provider.crypto.ThreeIntegerSequence extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    private byte[] encoding;
    byte[] g;
    byte[] p;
    byte[] q;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Type[] r0;
        org.apache.harmony.security.asn1.ASN1Integer $r1, $r2, $r3;
        org.apache.harmony.security.provider.crypto.ThreeIntegerSequence$1 $r4;

        r0 = newarray (org.apache.harmony.security.asn1.ASN1Type)[3];

        $r1 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        r0[0] = $r1;

        $r2 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        r0[1] = $r2;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        r0[2] = $r3;

        $r4 = new org.apache.harmony.security.provider.crypto.ThreeIntegerSequence$1;

        specialinvoke $r4.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r0);

        <org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r4;

        return;
    }

    void <init>(byte[], byte[], byte[])
    {
        org.apache.harmony.security.provider.crypto.ThreeIntegerSequence r0;
        byte[] r1, r2, r3;

        r0 := @this: org.apache.harmony.security.provider.crypto.ThreeIntegerSequence;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] p> = r1;

        r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] q> = r2;

        r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] g> = r3;

        r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding> = null;

        return;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.provider.crypto.ThreeIntegerSequence r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Sequence $r3;

        r0 := @this: org.apache.harmony.security.provider.crypto.ThreeIntegerSequence;

        $r1 = r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Sequence: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] encoding>;

        return $r2;
    }
}
