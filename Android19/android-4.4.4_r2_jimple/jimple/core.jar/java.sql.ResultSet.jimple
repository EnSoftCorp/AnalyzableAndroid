public interface  java.sql.ResultSet extends java.lang.Object implements java.sql.Wrapper, java.lang.AutoCloseable
{
    public static final int CLOSE_CURSORS_AT_COMMIT;
    public static final int CONCUR_READ_ONLY;
    public static final int CONCUR_UPDATABLE;
    public static final int FETCH_FORWARD;
    public static final int FETCH_REVERSE;
    public static final int FETCH_UNKNOWN;
    public static final int HOLD_CURSORS_OVER_COMMIT;
    public static final int TYPE_FORWARD_ONLY;
    public static final int TYPE_SCROLL_INSENSITIVE;
    public static final int TYPE_SCROLL_SENSITIVE;

    public abstract boolean absolute(int) throws java.sql.SQLException;

    public abstract void afterLast() throws java.sql.SQLException;

    public abstract void beforeFirst() throws java.sql.SQLException;

    public abstract void cancelRowUpdates() throws java.sql.SQLException;

    public abstract void clearWarnings() throws java.sql.SQLException;

    public abstract void close() throws java.sql.SQLException;

    public abstract void deleteRow() throws java.sql.SQLException;

    public abstract int findColumn(java.lang.String) throws java.sql.SQLException;

    public abstract boolean first() throws java.sql.SQLException;

    public abstract java.sql.Array getArray(int) throws java.sql.SQLException;

    public abstract java.sql.Array getArray(java.lang.String) throws java.sql.SQLException;

    public abstract java.io.InputStream getAsciiStream(int) throws java.sql.SQLException;

    public abstract java.io.InputStream getAsciiStream(java.lang.String) throws java.sql.SQLException;

    public abstract java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;

    public abstract java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;

    public abstract java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException;

    public abstract java.math.BigDecimal getBigDecimal(java.lang.String, int) throws java.sql.SQLException;

    public abstract java.io.InputStream getBinaryStream(int) throws java.sql.SQLException;

    public abstract java.io.InputStream getBinaryStream(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Blob getBlob(int) throws java.sql.SQLException;

    public abstract java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException;

    public abstract boolean getBoolean(int) throws java.sql.SQLException;

    public abstract boolean getBoolean(java.lang.String) throws java.sql.SQLException;

    public abstract byte getByte(int) throws java.sql.SQLException;

    public abstract byte getByte(java.lang.String) throws java.sql.SQLException;

    public abstract byte[] getBytes(int) throws java.sql.SQLException;

    public abstract byte[] getBytes(java.lang.String) throws java.sql.SQLException;

    public abstract java.io.Reader getCharacterStream(int) throws java.sql.SQLException;

    public abstract java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Clob getClob(int) throws java.sql.SQLException;

    public abstract java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException;

    public abstract int getConcurrency() throws java.sql.SQLException;

    public abstract java.lang.String getCursorName() throws java.sql.SQLException;

    public abstract java.sql.Date getDate(int) throws java.sql.SQLException;

    public abstract java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;

    public abstract java.sql.Date getDate(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Date getDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;

    public abstract double getDouble(int) throws java.sql.SQLException;

    public abstract double getDouble(java.lang.String) throws java.sql.SQLException;

    public abstract int getFetchDirection() throws java.sql.SQLException;

    public abstract int getFetchSize() throws java.sql.SQLException;

    public abstract float getFloat(int) throws java.sql.SQLException;

    public abstract float getFloat(java.lang.String) throws java.sql.SQLException;

    public abstract int getHoldability() throws java.sql.SQLException;

    public abstract int getInt(int) throws java.sql.SQLException;

    public abstract int getInt(java.lang.String) throws java.sql.SQLException;

    public abstract long getLong(int) throws java.sql.SQLException;

    public abstract long getLong(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;

    public abstract java.io.Reader getNCharacterStream(int) throws java.sql.SQLException;

    public abstract java.io.Reader getNCharacterStream(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.NClob getNClob(int) throws java.sql.SQLException;

    public abstract java.sql.NClob getNClob(java.lang.String) throws java.sql.SQLException;

    public abstract java.lang.String getNString(int) throws java.sql.SQLException;

    public abstract java.lang.String getNString(java.lang.String) throws java.sql.SQLException;

    public abstract java.lang.Object getObject(int) throws java.sql.SQLException;

    public abstract java.lang.Object getObject(int, java.util.Map) throws java.sql.SQLException;

    public abstract java.lang.Object getObject(java.lang.String) throws java.sql.SQLException;

    public abstract java.lang.Object getObject(java.lang.String, java.util.Map) throws java.sql.SQLException;

    public abstract java.sql.Ref getRef(int) throws java.sql.SQLException;

    public abstract java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException;

    public abstract int getRow() throws java.sql.SQLException;

    public abstract java.sql.RowId getRowId(int) throws java.sql.SQLException;

    public abstract java.sql.RowId getRowId(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.SQLXML getSQLXML(int) throws java.sql.SQLException;

    public abstract java.sql.SQLXML getSQLXML(java.lang.String) throws java.sql.SQLException;

    public abstract short getShort(int) throws java.sql.SQLException;

    public abstract short getShort(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Statement getStatement() throws java.sql.SQLException;

    public abstract java.lang.String getString(int) throws java.sql.SQLException;

    public abstract java.lang.String getString(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Time getTime(int) throws java.sql.SQLException;

    public abstract java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;

    public abstract java.sql.Time getTime(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Time getTime(java.lang.String, java.util.Calendar) throws java.sql.SQLException;

    public abstract java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;

    public abstract java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;

    public abstract java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar) throws java.sql.SQLException;

    public abstract int getType() throws java.sql.SQLException;

    public abstract java.net.URL getURL(int) throws java.sql.SQLException;

    public abstract java.net.URL getURL(java.lang.String) throws java.sql.SQLException;

    public abstract java.io.InputStream getUnicodeStream(int) throws java.sql.SQLException;

    public abstract java.io.InputStream getUnicodeStream(java.lang.String) throws java.sql.SQLException;

    public abstract java.sql.SQLWarning getWarnings() throws java.sql.SQLException;

    public abstract void insertRow() throws java.sql.SQLException;

    public abstract boolean isAfterLast() throws java.sql.SQLException;

    public abstract boolean isBeforeFirst() throws java.sql.SQLException;

    public abstract boolean isClosed() throws java.sql.SQLException;

    public abstract boolean isFirst() throws java.sql.SQLException;

    public abstract boolean isLast() throws java.sql.SQLException;

    public abstract boolean last() throws java.sql.SQLException;

    public abstract void moveToCurrentRow() throws java.sql.SQLException;

    public abstract void moveToInsertRow() throws java.sql.SQLException;

    public abstract boolean next() throws java.sql.SQLException;

    public abstract boolean previous() throws java.sql.SQLException;

    public abstract void refreshRow() throws java.sql.SQLException;

    public abstract boolean relative(int) throws java.sql.SQLException;

    public abstract boolean rowDeleted() throws java.sql.SQLException;

    public abstract boolean rowInserted() throws java.sql.SQLException;

    public abstract boolean rowUpdated() throws java.sql.SQLException;

    public abstract void setFetchDirection(int) throws java.sql.SQLException;

    public abstract void setFetchSize(int) throws java.sql.SQLException;

    public abstract void updateArray(int, java.sql.Array) throws java.sql.SQLException;

    public abstract void updateArray(java.lang.String, java.sql.Array) throws java.sql.SQLException;

    public abstract void updateAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;

    public abstract void updateAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;

    public abstract void updateAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;

    public abstract void updateAsciiStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;

    public abstract void updateAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;

    public abstract void updateAsciiStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;

    public abstract void updateBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;

    public abstract void updateBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;

    public abstract void updateBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;

    public abstract void updateBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;

    public abstract void updateBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;

    public abstract void updateBinaryStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;

    public abstract void updateBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;

    public abstract void updateBinaryStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;

    public abstract void updateBlob(int, java.io.InputStream) throws java.sql.SQLException;

    public abstract void updateBlob(int, java.io.InputStream, long) throws java.sql.SQLException;

    public abstract void updateBlob(int, java.sql.Blob) throws java.sql.SQLException;

    public abstract void updateBlob(java.lang.String, java.io.InputStream) throws java.sql.SQLException;

    public abstract void updateBlob(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;

    public abstract void updateBlob(java.lang.String, java.sql.Blob) throws java.sql.SQLException;

    public abstract void updateBoolean(int, boolean) throws java.sql.SQLException;

    public abstract void updateBoolean(java.lang.String, boolean) throws java.sql.SQLException;

    public abstract void updateByte(int, byte) throws java.sql.SQLException;

    public abstract void updateByte(java.lang.String, byte) throws java.sql.SQLException;

    public abstract void updateBytes(int, byte[]) throws java.sql.SQLException;

    public abstract void updateBytes(java.lang.String, byte[]) throws java.sql.SQLException;

    public abstract void updateCharacterStream(int, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;

    public abstract void updateCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;

    public abstract void updateCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateClob(int, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateClob(int, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateClob(int, java.sql.Clob) throws java.sql.SQLException;

    public abstract void updateClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateClob(java.lang.String, java.sql.Clob) throws java.sql.SQLException;

    public abstract void updateDate(int, java.sql.Date) throws java.sql.SQLException;

    public abstract void updateDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;

    public abstract void updateDouble(int, double) throws java.sql.SQLException;

    public abstract void updateDouble(java.lang.String, double) throws java.sql.SQLException;

    public abstract void updateFloat(int, float) throws java.sql.SQLException;

    public abstract void updateFloat(java.lang.String, float) throws java.sql.SQLException;

    public abstract void updateInt(int, int) throws java.sql.SQLException;

    public abstract void updateInt(java.lang.String, int) throws java.sql.SQLException;

    public abstract void updateLong(int, long) throws java.sql.SQLException;

    public abstract void updateLong(java.lang.String, long) throws java.sql.SQLException;

    public abstract void updateNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateNCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateNCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateNClob(int, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateNClob(int, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateNClob(int, java.sql.NClob) throws java.sql.SQLException;

    public abstract void updateNClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;

    public abstract void updateNClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;

    public abstract void updateNClob(java.lang.String, java.sql.NClob) throws java.sql.SQLException;

    public abstract void updateNString(int, java.lang.String) throws java.sql.SQLException;

    public abstract void updateNString(java.lang.String, java.lang.String) throws java.sql.SQLException;

    public abstract void updateNull(int) throws java.sql.SQLException;

    public abstract void updateNull(java.lang.String) throws java.sql.SQLException;

    public abstract void updateObject(int, java.lang.Object) throws java.sql.SQLException;

    public abstract void updateObject(int, java.lang.Object, int) throws java.sql.SQLException;

    public abstract void updateObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;

    public abstract void updateObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;

    public abstract void updateRef(int, java.sql.Ref) throws java.sql.SQLException;

    public abstract void updateRef(java.lang.String, java.sql.Ref) throws java.sql.SQLException;

    public abstract void updateRow() throws java.sql.SQLException;

    public abstract void updateRowId(int, java.sql.RowId) throws java.sql.SQLException;

    public abstract void updateRowId(java.lang.String, java.sql.RowId) throws java.sql.SQLException;

    public abstract void updateSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;

    public abstract void updateSQLXML(java.lang.String, java.sql.SQLXML) throws java.sql.SQLException;

    public abstract void updateShort(int, short) throws java.sql.SQLException;

    public abstract void updateShort(java.lang.String, short) throws java.sql.SQLException;

    public abstract void updateString(int, java.lang.String) throws java.sql.SQLException;

    public abstract void updateString(java.lang.String, java.lang.String) throws java.sql.SQLException;

    public abstract void updateTime(int, java.sql.Time) throws java.sql.SQLException;

    public abstract void updateTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;

    public abstract void updateTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;

    public abstract void updateTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;

    public abstract boolean wasNull() throws java.sql.SQLException;

    public static void <clinit>()
    {
        <java.sql.ResultSet: int TYPE_SCROLL_SENSITIVE> = 1005;

        <java.sql.ResultSet: int TYPE_SCROLL_INSENSITIVE> = 1004;

        <java.sql.ResultSet: int TYPE_FORWARD_ONLY> = 1003;

        <java.sql.ResultSet: int HOLD_CURSORS_OVER_COMMIT> = 1;

        <java.sql.ResultSet: int FETCH_UNKNOWN> = 1002;

        <java.sql.ResultSet: int FETCH_REVERSE> = 1001;

        <java.sql.ResultSet: int FETCH_FORWARD> = 1000;

        <java.sql.ResultSet: int CONCUR_UPDATABLE> = 1008;

        <java.sql.ResultSet: int CONCUR_READ_ONLY> = 1007;

        <java.sql.ResultSet: int CLOSE_CURSORS_AT_COMMIT> = 2;

        return;
    }
}
