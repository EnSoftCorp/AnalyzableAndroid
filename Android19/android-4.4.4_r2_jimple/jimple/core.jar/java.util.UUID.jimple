public final class java.util.UUID extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    private static java.security.SecureRandom rng;
    private static final long serialVersionUID;
    private transient int clockSequence;
    private transient int hash;
    private long leastSigBits;
    private long mostSigBits;
    private transient long node;
    private transient long timestamp;
    private transient int variant;
    private transient int version;

    public void <init>(long, long)
    {
        java.util.UUID r0;
        long l0, l1;

        r0 := @this: java.util.UUID;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.UUID: long mostSigBits> = l0;

        r0.<java.util.UUID: long leastSigBits> = l1;

        specialinvoke r0.<java.util.UUID: void init()>();

        return;
    }

    public static java.util.UUID fromString(java.lang.String)
    {
        java.lang.String r0, $r7, $r8, $r9, $r10, $r11, $r12;
        int[] r1;
        int i0, i1, i2, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i27, $i28;
        long l3, l4, l5, l6, l7, l8, l9, $l24, $l25, $l26, $l29;
        java.util.UUID r2, $r13;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.IllegalArgumentException $r4;
        java.lang.NullPointerException $r14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("uuid == null");

        throw $r14;

     label1:
        r1 = newarray (int)[5];

        i0 = 1;

        i1 = 0;

        i2 = 0;

     label2:
        $i11 = lengthof r1;

        if i2 >= $i11 goto label3;

        if i0 <= 0 goto label3;

        $i28 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("-", i1);

        r1[i2] = $i28;

        i0 = r1[i2];

        $i27 = r1[i2];

        i1 = 1 + $i27;

        i2 = i2 + 1;

        goto label2;

     label3:
        $i10 = lengthof r1;

        if i2 != $i10 goto label4;

        if i0 == -1 goto label5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid UUID: ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label5:
        $i12 = r1[0];

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r8, 16);

        $i14 = r1[0];

        $i16 = 1 + $i14;

        $i13 = r1[1];

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i16, $i13);

        l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r9, 16);

        $i15 = r1[1];

        $i18 = 1 + $i15;

        $i17 = r1[2];

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i18, $i17);

        l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r10, 16);

        $i20 = r1[2];

        $i19 = 1 + $i20;

        $i21 = r1[3];

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i19, $i21);

        l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r11, 16);

        $i23 = r1[3];

        $i22 = 1 + $i23;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i22);

        l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r12, 16);

        $l25 = l3 << 32;

        $l26 = l4 << 16;

        $l24 = $l25 | $l26;

        l8 = l5 | $l24;

        $l29 = l6 << 48;

        l9 = l7 | $l29;

        $r13 = new java.util.UUID;

        specialinvoke $r13.<java.util.UUID: void <init>(long,long)>(l8, l9);

        r2 = $r13;

        return r2;
    }

    private void init()
    {
        java.util.UUID r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l13, $l14, $l15, $l18, $l19, $l20, $l22, $l23, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l35, $l36, $l38, $l39, $l40, $l42, $l43;
        int $i10, $i11, $i12, $i21, $i24, $i34, $i37, $i41;
        byte $b16, $b17;

        r0 := @this: java.util.UUID;

        $l4 = r0.<java.util.UUID: long mostSigBits>;

        $l2 = r0.<java.util.UUID: long mostSigBits>;

        $l3 = $l2 >>> 32;

        $l5 = $l4 ^ $l3;

        $i11 = (int) $l5;

        $l8 = r0.<java.util.UUID: long leastSigBits>;

        $l6 = r0.<java.util.UUID: long leastSigBits>;

        $l7 = $l6 >>> 32;

        $l9 = $l8 ^ $l7;

        $i10 = (int) $l9;

        $i12 = $i11 ^ $i10;

        r0.<java.util.UUID: int hash> = $i12;

        $l14 = r0.<java.util.UUID: long leastSigBits>;

        $l13 = -9223372036854775808L & $l14;

        $b16 = $l13 cmp 0L;

        if $b16 != 0 goto label2;

        r0.<java.util.UUID: int variant> = 0;

     label1:
        $l20 = r0.<java.util.UUID: long mostSigBits>;

        $l19 = 61440L & $l20;

        $l22 = $l19 >>> 12;

        $i21 = (int) $l22;

        r0.<java.util.UUID: int version> = $i21;

        $i24 = r0.<java.util.UUID: int variant>;

        if $i24 == 2 goto label4;

        $i37 = r0.<java.util.UUID: int version>;

        if $i37 == 1 goto label4;

        return;

     label2:
        $l15 = r0.<java.util.UUID: long leastSigBits>;

        $l18 = 4611686018427387904L & $l15;

        $b17 = $l18 cmp 0L;

        if $b17 == 0 goto label3;

        $l38 = r0.<java.util.UUID: long leastSigBits>;

        $l42 = -2305843009213693952L & $l38;

        $l43 = $l42 >>> 61;

        $i41 = (int) $l43;

        r0.<java.util.UUID: int variant> = $i41;

        goto label1;

     label3:
        r0.<java.util.UUID: int variant> = 2;

        goto label1;

     label4:
        $l23 = r0.<java.util.UUID: long mostSigBits>;

        $l26 = -4294967296L & $l23;

        l0 = $l26 >>> 32;

        $l25 = r0.<java.util.UUID: long mostSigBits>;

        $l28 = 4294901760L & $l25;

        l1 = $l28 << 16;

        $l27 = r0.<java.util.UUID: long mostSigBits>;

        $l31 = 4095L & $l27;

        $l29 = $l31 << 48;

        $l32 = l0 | l1;

        $l30 = $l29 | $l32;

        r0.<java.util.UUID: long timestamp> = $l30;

        $l35 = r0.<java.util.UUID: long leastSigBits>;

        $l36 = 4611404543450677248L & $l35;

        $l33 = $l36 >>> 48;

        $i34 = (int) $l33;

        r0.<java.util.UUID: int clockSequence> = $i34;

        $l39 = r0.<java.util.UUID: long leastSigBits>;

        $l40 = 281474976710655L & $l39;

        r0.<java.util.UUID: long node> = $l40;

        return;
    }

    private static java.util.UUID makeUuid(byte[], int)
    {
        byte[] r0;
        int i0;
        long l1, l2, $l3, $l4, $l5, $l6, $l7, $l8;
        java.nio.ByteOrder $r1, $r2;
        java.util.UUID $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        l1 = staticinvoke <libcore.io.Memory: long peekLong(byte[],int,java.nio.ByteOrder)>(r0, 0, $r1);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        l2 = staticinvoke <libcore.io.Memory: long peekLong(byte[],int,java.nio.ByteOrder)>(r0, 8, $r2);

        $r3 = new java.util.UUID;

        $l5 = l1 & -61441L;

        $l3 = (long) i0;

        $l4 = $l3 << 12;

        $l8 = $l5 | $l4;

        $l6 = l2 & 4611686018427387903L;

        $l7 = -9223372036854775808L | $l6;

        specialinvoke $r3.<java.util.UUID: void <init>(long,long)>($l8, $l7);

        return $r3;
    }

    public static java.util.UUID nameUUIDFromBytes(byte[])
    {
        byte[] r0, $r4;
        java.security.NoSuchAlgorithmException r1, $r6;
        java.util.UUID r2;
        java.security.MessageDigest $r3;
        java.lang.NullPointerException $r5;
        java.lang.AssertionError $r7;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r5;

     label1:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r0);

        r2 = staticinvoke <java.util.UUID: java.util.UUID makeUuid(byte[],int)>($r4, 3);

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.util.UUID randomUUID()
    {
        byte[] r0;
        java.lang.Throwable r1, $r6;
        java.security.SecureRandom $r2, $r3, $r5;
        java.util.UUID $r4;

        r0 = newarray (byte)[16];

        entermonitor class "java/util/UUID";

     label1:
        $r2 = <java.util.UUID: java.security.SecureRandom rng>;

        if $r2 != null goto label2;

        $r5 = new java.security.SecureRandom;

        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();

        <java.util.UUID: java.security.SecureRandom rng> = $r5;

     label2:
        exitmonitor class "java/util/UUID";

     label3:
        $r3 = <java.util.UUID: java.security.SecureRandom rng>;

        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r0);

        $r4 = staticinvoke <java.util.UUID: java.util.UUID makeUuid(byte[],int)>(r0, 4);

        return $r4;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

     label5:
        exitmonitor class "java/util/UUID";

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.UUID r0;
        java.io.ObjectInputStream r1;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        specialinvoke r0.<java.util.UUID: void init()>();

        return;
    }

    public int clockSequence()
    {
        java.util.UUID r0;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        $i1 = r0.<java.util.UUID: int clockSequence>;

        return $i1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.util.UUID r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.UUID) r1;

        $i0 = virtualinvoke r0.<java.util.UUID: int compareTo(java.util.UUID)>($r2);

        return $i0;
    }

    public int compareTo(java.util.UUID)
    {
        java.util.UUID r0, r1;
        byte b0, $b3, $b6, $b9, $b12;
        long $l1, $l2, $l4, $l5, $l7, $l8, $l10, $l11;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.util.UUID;

        b0 = -1;

        if r1 != r0 goto label2;

        b0 = 0;

     label1:
        return b0;

     label2:
        $l2 = r0.<java.util.UUID: long mostSigBits>;

        $l1 = r1.<java.util.UUID: long mostSigBits>;

        $b3 = $l2 cmp $l1;

        if $b3 == 0 goto label3;

        $l11 = r0.<java.util.UUID: long mostSigBits>;

        $l10 = r1.<java.util.UUID: long mostSigBits>;

        $b12 = $l11 cmp $l10;

        if $b12 < 0 goto label1;

        return 1;

     label3:
        $l5 = r0.<java.util.UUID: long leastSigBits>;

        $l4 = r1.<java.util.UUID: long leastSigBits>;

        $b6 = $l5 cmp $l4;

        if $b6 == 0 goto label4;

        $l8 = r0.<java.util.UUID: long leastSigBits>;

        $l7 = r1.<java.util.UUID: long leastSigBits>;

        $b9 = $l8 cmp $l7;

        if $b9 < 0 goto label1;

        return 1;

     label4:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.UUID r0, r2;
        java.lang.Object r1;
        boolean z0, $z1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.lang.Object;

        z0 = 1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        if r0 != r1 goto label3;

        return 1;

     label3:
        $z1 = r1 instanceof java.util.UUID;

        if $z1 == 0 goto label1;

        r2 = (java.util.UUID) r1;

        $l1 = r0.<java.util.UUID: long leastSigBits>;

        $l0 = r2.<java.util.UUID: long leastSigBits>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label5;

        $l4 = r0.<java.util.UUID: long mostSigBits>;

        $l3 = r2.<java.util.UUID: long mostSigBits>;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label5;

     label4:
        return z0;

     label5:
        z0 = 0;

        goto label4;
    }

    public long getLeastSignificantBits()
    {
        java.util.UUID r0;
        long $l0;

        r0 := @this: java.util.UUID;

        $l0 = r0.<java.util.UUID: long leastSigBits>;

        return $l0;
    }

    public long getMostSignificantBits()
    {
        java.util.UUID r0;
        long $l0;

        r0 := @this: java.util.UUID;

        $l0 = r0.<java.util.UUID: long mostSigBits>;

        return $l0;
    }

    public int hashCode()
    {
        java.util.UUID r0;
        int $i0;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int hash>;

        return $i0;
    }

    public long node()
    {
        java.util.UUID r0;
        int $i0;
        long $l1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        $l1 = r0.<java.util.UUID: long node>;

        return $l1;
    }

    public long timestamp()
    {
        java.util.UUID r0;
        int $i0;
        long $l1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        $l1 = r0.<java.util.UUID: long timestamp>;

        return $l1;
    }

    public java.lang.String toString()
    {
        java.util.UUID r0;
        java.lang.StringBuilder r1, $r4;
        java.lang.String r2, r3, $r11;
        int i0, i1, i2, i3, $i5, $i7, $i8, $i9;
        long $l4, $l6;

        r0 := @this: java.util.UUID;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(36);

        r1 = $r4;

        $l4 = r0.<java.util.UUID: long mostSigBits>;

        r2 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i5 >= 16 goto label2;

        $i9 = virtualinvoke r2.<java.lang.String: int length()>();

        i2 = 16 - $i9;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(8, 45);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(13, 45);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $l6 = r0.<java.util.UUID: long leastSigBits>;

        r3 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l6);

        $i7 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i7 >= 16 goto label4;

        $i8 = virtualinvoke r3.<java.lang.String: int length()>();

        i0 = 16 - $i8;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i1 = i1 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(23, 45);

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public int variant()
    {
        java.util.UUID r0;
        int $i0;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int variant>;

        return $i0;
    }

    public int version()
    {
        java.util.UUID r0;
        int $i0;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        return $i0;
    }

    public static void <clinit>()
    {
        <java.util.UUID: long serialVersionUID> = -4856846361193249489L;

        return;
    }
}
