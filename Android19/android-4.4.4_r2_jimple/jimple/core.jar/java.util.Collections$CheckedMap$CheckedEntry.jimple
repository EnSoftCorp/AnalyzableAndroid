class java.util.Collections$CheckedMap$CheckedEntry extends java.lang.Object implements java.util.Map$Entry
{
    final java.util.Map$Entry e;
    final java.lang.Class valueType;

    public void <init>(java.util.Map$Entry, java.lang.Class)
    {
        java.util.Collections$CheckedMap$CheckedEntry r0;
        java.util.Map$Entry r1;
        java.lang.Class r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntry;

        r1 := @parameter0: java.util.Map$Entry;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("e == null");

        throw $r3;

     label1:
        r0.<java.util.Collections$CheckedMap$CheckedEntry: java.util.Map$Entry e> = r1;

        r0.<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Class valueType> = r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$CheckedMap$CheckedEntry r0;
        java.lang.Object r1;
        java.util.Map$Entry $r2;
        boolean $z0;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntry;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.Collections$CheckedMap$CheckedEntry: java.util.Map$Entry e>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object getKey()
    {
        java.util.Collections$CheckedMap$CheckedEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntry;

        $r1 = r0.<java.util.Collections$CheckedMap$CheckedEntry: java.util.Map$Entry e>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object getValue()
    {
        java.util.Collections$CheckedMap$CheckedEntry r0;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntry;

        $r1 = r0.<java.util.Collections$CheckedMap$CheckedEntry: java.util.Map$Entry e>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r2;
    }

    public int hashCode()
    {
        java.util.Collections$CheckedMap$CheckedEntry r0;
        java.util.Map$Entry $r1;
        int $i0;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntry;

        $r1 = r0.<java.util.Collections$CheckedMap$CheckedEntry: java.util.Map$Entry e>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.Collections$CheckedMap$CheckedEntry r0;
        java.lang.Object r1, $r4, $r5;
        java.lang.Class $r2;
        java.util.Map$Entry $r3;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntry;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<java.util.Collections$CheckedMap$CheckedEntry: java.util.Map$Entry e>;

        $r2 = r0.<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Class valueType>;

        $r4 = staticinvoke <java.util.Collections: java.lang.Object checkType(java.lang.Object,java.lang.Class)>(r1, $r2);

        $r5 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r4);

        return $r5;
    }
}
