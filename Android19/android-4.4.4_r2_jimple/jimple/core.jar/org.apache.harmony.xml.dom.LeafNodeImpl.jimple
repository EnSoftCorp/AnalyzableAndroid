public abstract class org.apache.harmony.xml.dom.LeafNodeImpl extends org.apache.harmony.xml.dom.NodeImpl
{
    int index;
    org.apache.harmony.xml.dom.InnerNodeImpl parent;

    void <init>(org.apache.harmony.xml.dom.DocumentImpl)
    {
        org.apache.harmony.xml.dom.LeafNodeImpl r0;
        org.apache.harmony.xml.dom.DocumentImpl r1;

        r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        r1 := @parameter0: org.apache.harmony.xml.dom.DocumentImpl;

        specialinvoke r0.<org.apache.harmony.xml.dom.NodeImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl)>(r1);

        return;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.harmony.xml.dom.LeafNodeImpl r0;
        org.apache.harmony.xml.dom.InnerNodeImpl $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.List $r3, $r5;
        java.lang.Object $r6;
        org.w3c.dom.Node $r7;

        r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r1 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r1 == null goto label1;

        $i0 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i1 = 1 + $i0;

        $r2 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r3 = $r2.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 < $i2 goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r5 = $r4.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i3 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i4 = 1 + $i3;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i4);

        $r7 = (org.w3c.dom.Node) $r6;

        return $r7;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.apache.harmony.xml.dom.LeafNodeImpl r0;
        org.apache.harmony.xml.dom.InnerNodeImpl $r1;

        r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r1 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        return $r1;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.harmony.xml.dom.LeafNodeImpl r0;
        org.apache.harmony.xml.dom.InnerNodeImpl $r1, $r2;
        int $i0, $i1, $i2;
        java.util.List $r3;
        java.lang.Object $r4;
        org.w3c.dom.Node $r5;

        r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        $r1 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        if $r1 == null goto label1;

        $i0 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        $r3 = $r2.<org.apache.harmony.xml.dom.InnerNodeImpl: java.util.List children>;

        $i1 = r0.<org.apache.harmony.xml.dom.LeafNodeImpl: int index>;

        $i2 = -1 + $i1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (org.w3c.dom.Node) $r4;

        return $r5;
    }

    boolean isParentOf(org.w3c.dom.Node)
    {
        org.apache.harmony.xml.dom.LeafNodeImpl r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.harmony.xml.dom.LeafNodeImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        return 0;
    }
}
