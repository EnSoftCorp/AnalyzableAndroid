public class libcore.icu.TimeZoneNames$ZoneStringsCache extends libcore.util.BasicLruCache
{
    private final java.util.HashMap internTable;

    public void <init>()
    {
        libcore.icu.TimeZoneNames$ZoneStringsCache r0;
        java.lang.String[] $r1;
        int $i0;
        java.util.HashMap $r2;

        r0 := @this: libcore.icu.TimeZoneNames$ZoneStringsCache;

        $r1 = staticinvoke <libcore.icu.TimeZoneNames: java.lang.String[] access$000()>();

        $i0 = lengthof $r1;

        specialinvoke r0.<libcore.util.BasicLruCache: void <init>(int)>($i0);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<libcore.icu.TimeZoneNames$ZoneStringsCache: java.util.HashMap internTable> = $r2;

        return;
    }

    private void internStrings(java.lang.String[][])
    {
        libcore.icu.TimeZoneNames$ZoneStringsCache r0;
        java.lang.String[][] r1;
        int i0, i1, $i2;
        java.lang.Throwable r2, $r11;
        java.lang.String r3, r4;
        java.lang.String[] $r5, $r8;
        java.util.HashMap $r6, $r9;
        java.lang.Object $r7;

        r0 := @this: libcore.icu.TimeZoneNames$ZoneStringsCache;

        r1 := @parameter0: java.lang.String[][];

        entermonitor r0;

        i0 = 0;

     label01:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label12;

     label02:
        i1 = 1;

     label03:
        if i1 >= 5 goto label11;

     label04:
        $r5 = r1[i0];

        r3 = $r5[i1];

        $r6 = r0.<libcore.icu.TimeZoneNames$ZoneStringsCache: java.util.HashMap internTable>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r7;

     label05:
        if r4 != null goto label08;

     label06:
        $r9 = r0.<libcore.icu.TimeZoneNames$ZoneStringsCache: java.util.HashMap internTable>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r3);

     label07:
        goto label13;

     label08:
        $r8 = r1[i0];

        $r8[i1] = r4;

     label09:
        goto label13;

     label10:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r0;

        throw r2;

     label11:
        i0 = i0 + 1;

        goto label01;

     label12:
        exitmonitor r0;

        return;

     label13:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    protected volatile java.lang.Object create(java.lang.Object)
    {
        libcore.icu.TimeZoneNames$ZoneStringsCache r0;
        java.lang.Object r1;
        java.util.Locale $r2;
        java.lang.String[][] $r3;

        r0 := @this: libcore.icu.TimeZoneNames$ZoneStringsCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Locale) r1;

        $r3 = virtualinvoke r0.<libcore.icu.TimeZoneNames$ZoneStringsCache: java.lang.String[][] create(java.util.Locale)>($r2);

        return $r3;
    }

    protected java.lang.String[][] create(java.util.Locale)
    {
        libcore.icu.TimeZoneNames$ZoneStringsCache r0;
        java.util.Locale r1;
        long l0, l2, l3, l4, l5, l6;
        java.lang.String[][] r2;
        int i1, $i7, $i8;
        int[] $r3;
        java.lang.String[] $r4, $r5, $r16, $r20;
        java.lang.Object $r6;
        java.lang.String $r7, $r15, $r19;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18;

        r0 := @this: libcore.icu.TimeZoneNames$ZoneStringsCache;

        r1 := @parameter0: java.util.Locale;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = newarray (int)[2];

        $r4 = staticinvoke <libcore.icu.TimeZoneNames: java.lang.String[] access$000()>();

        $i7 = lengthof $r4;

        $r3[0] = $i7;

        $r3[1] = 5;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "java/lang/String", $r3);

        r2 = (java.lang.String[][]) $r6;

        i1 = 0;

     label1:
        $r5 = staticinvoke <libcore.icu.TimeZoneNames: java.lang.String[] access$000()>();

        $i8 = lengthof $r5;

        if i1 >= $i8 goto label2;

        $r16 = r2[i1];

        $r20 = staticinvoke <libcore.icu.TimeZoneNames: java.lang.String[] access$000()>();

        $r19 = $r20[i1];

        $r16[0] = $r19;

        i1 = i1 + 1;

        goto label1;

     label2:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        staticinvoke <libcore.icu.TimeZoneNames: void access$100(java.lang.String,java.lang.String[][])>($r7, r2);

        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<libcore.icu.TimeZoneNames$ZoneStringsCache: void internStrings(java.lang.String[][])>(r2);

        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = l3 - l2;

        l6 = l4 - l0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded time zone names for \"");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" in ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms in ICU)");

        $r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void logI(java.lang.String)>($r15);

        return r2;
    }
}
