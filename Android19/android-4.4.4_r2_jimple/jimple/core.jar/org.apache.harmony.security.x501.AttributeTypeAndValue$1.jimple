final class org.apache.harmony.security.x501.AttributeTypeAndValue$1 extends org.apache.harmony.security.asn1.ASN1Type
{

    void <init>(int)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        int i0;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Type: void <init>(int)>(i0);

        return;
    }

    public boolean checkTag(int)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        int i0;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        i0 := @parameter0: int;

        return 1;
    }

    public java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        java.lang.String r2;
        byte[] r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.harmony.security.asn1.ASN1Choice $r4, $r7;
        boolean $z0;
        org.apache.harmony.security.x501.AttributeValue $r6;
        java.lang.Object $r8;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r4 = <org.apache.harmony.security.x501.DirectoryString: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $i0 = r1.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $z0 = virtualinvoke $r4.<org.apache.harmony.security.asn1.ASN1Choice: boolean checkTag(int)>($i0);

        if $z0 == 0 goto label2;

        $r7 = <org.apache.harmony.security.x501.DirectoryString: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $r8 = virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>(r1);

        r2 = (java.lang.String) $r8;

     label1:
        $i1 = virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: int getOffset()>();

        $i2 = virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: int getTagOffset()>();

        $i3 = $i1 - $i2;

        r3 = newarray (byte)[$i3];

        $r5 = virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] getBuffer()>();

        $i4 = virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: int getTagOffset()>();

        $i5 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i4, r3, 0, $i5);

        $r6 = new org.apache.harmony.security.x501.AttributeValue;

        $i6 = r1.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        specialinvoke $r6.<org.apache.harmony.security.x501.AttributeValue: void <init>(java.lang.String,byte[],int)>(r2, r3, $i6);

        return $r6;

     label2:
        virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: void readContent()>();

        r2 = null;

        goto label1;
    }

    public void encodeASN(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        org.apache.harmony.security.x501.AttributeValue r2;
        java.lang.Object $r3;
        byte[] $r4, $r5, $r6;
        int $i0;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r3 = r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        r2 = (org.apache.harmony.security.x501.AttributeValue) $r3;

        $r4 = r2.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        if $r4 == null goto label1;

        $r6 = r2.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = $r6;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeANY()>();

        return;

     label1:
        $i0 = virtualinvoke r2.<org.apache.harmony.security.x501.AttributeValue: int getTag()>();

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeTag(int)>($i0);

        $r5 = r2.<org.apache.harmony.security.x501.AttributeValue: byte[] bytes>;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = $r5;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeString()>();

        return;
    }

    public void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("AttributeValue encodeContent MUST NOT be invoked");

        throw $r2;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("AttributeValue getDecodedObject MUST NOT be invoked");

        throw $r2;
    }

    public int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        java.lang.Object $r2;
        org.apache.harmony.security.x501.AttributeValue $r3;
        byte[] $r4;
        int $i0, $i1;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r3 = (org.apache.harmony.security.x501.AttributeValue) $r2;

        $r4 = $r3.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        if $r4 == null goto label1;

        $i1 = r1.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        return $i1;

     label1:
        $i0 = specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Type: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)>(r1);

        return $i0;
    }

    public void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValue$1 r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        org.apache.harmony.security.x501.AttributeValue r2;
        java.lang.Object $r3, $r11;
        byte[] $r4, $r7, $r8, $r12, $r13, $r14;
        int $i0, $i1, $i2;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r9;
        org.apache.harmony.security.asn1.ASN1StringType $r10;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValue$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r3 = r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        r2 = (org.apache.harmony.security.x501.AttributeValue) $r3;

        $r4 = r2.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        if $r4 == null goto label1;

        $r14 = r2.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $i2 = lengthof $r14;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: int length> = $i2;

        return;

     label1:
        $i0 = virtualinvoke r2.<org.apache.harmony.security.x501.AttributeValue: int getTag()>();

        if $i0 != 12 goto label2;

        $r9 = r2.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = $r9;

        $r10 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UTF8STRING>;

        virtualinvoke $r10.<org.apache.harmony.security.asn1.ASN1StringType: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>(r1);

        $r11 = r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r12 = (byte[]) $r11;

        $r13 = (byte[]) $r12;

        r2.<org.apache.harmony.security.x501.AttributeValue: byte[] bytes> = $r13;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = r2;

        return;

     label2:
        $r6 = r2.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        r2.<org.apache.harmony.security.x501.AttributeValue: byte[] bytes> = $r7;

        $r8 = r2.<org.apache.harmony.security.x501.AttributeValue: byte[] bytes>;

        $i1 = lengthof $r8;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: int length> = $i1;

        return;
    }
}
