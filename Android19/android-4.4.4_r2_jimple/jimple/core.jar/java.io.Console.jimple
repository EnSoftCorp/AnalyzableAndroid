public final class java.io.Console extends java.lang.Object implements java.io.Flushable
{
    private static final java.lang.Object CONSOLE_LOCK;
    private static final java.io.Console console;
    private final java.io.Console$ConsoleReader reader;
    private final java.io.PrintWriter writer;

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.io.Console $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <java.io.Console: java.lang.Object CONSOLE_LOCK> = $r0;

        $r1 = staticinvoke <java.io.Console: java.io.Console makeConsole()>();

        <java.io.Console: java.io.Console console> = $r1;

        return;
    }

    private void <init>(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.Console r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        java.io.Console$ConsoleReader $r3;
        java.io.Console$ConsoleWriter $r4;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.io.Console$ConsoleReader;

        specialinvoke $r3.<java.io.Console$ConsoleReader: void <init>(java.io.InputStream)>(r1);

        r0.<java.io.Console: java.io.Console$ConsoleReader reader> = $r3;

        $r4 = new java.io.Console$ConsoleWriter;

        specialinvoke $r4.<java.io.Console$ConsoleWriter: void <init>(java.io.OutputStream)>(r2);

        r0.<java.io.Console: java.io.PrintWriter writer> = $r4;

        return;
    }

    static java.lang.Object access$000()
    {
        java.lang.Object $r0;

        $r0 = <java.io.Console: java.lang.Object CONSOLE_LOCK>;

        return $r0;
    }

    public static java.io.Console getConsole()
    {
        java.io.Console $r0;

        $r0 = <java.io.Console: java.io.Console console>;

        return $r0;
    }

    private static java.io.Console makeConsole()
    {
        java.io.Console r0, $r6;
        java.io.IOException r1, $r9;
        java.io.FileDescriptor $r2, $r4;
        libcore.io.Os $r3, $r5;
        boolean $z0, $z1;
        java.io.PrintStream $r7;
        java.io.InputStream $r8;
        java.lang.AssertionError $r10;

        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = <java.io.FileDescriptor: java.io.FileDescriptor in>;

        $z0 = interfaceinvoke $r3.<libcore.io.Os: boolean isatty(java.io.FileDescriptor)>($r2);

        if $z0 == 0 goto label1;

        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $r4 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        $z1 = interfaceinvoke $r5.<libcore.io.Os: boolean isatty(java.io.FileDescriptor)>($r4);

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r6 = new java.io.Console;

        $r8 = <java.lang.System: java.io.InputStream in>;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r6.<java.io.Console: void <init>(java.io.InputStream,java.io.OutputStream)>($r8, $r7);

        r0 = $r6;

     label3:
        return r0;

     label4:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r10;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private static int setEcho(boolean, int)
    {
        boolean z0;
        int i0, i1;
        java.io.IOException r0, $r1;
        java.io.IOError $r2;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

     label1:
        i1 = staticinvoke <java.io.Console: int setEchoImpl(boolean,int)>(z0, i0);

     label2:
        return i1;

     label3:
        $r1 := @caughtexception;

        r0 = $r1;

        $r2 = new java.io.IOError;

        specialinvoke $r2.<java.io.IOError: void <init>(java.lang.Throwable)>(r0);

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static native int setEchoImpl(boolean, int) throws java.io.IOException;

    public void flush()
    {
        java.io.Console r0;
        java.io.PrintWriter $r1;

        r0 := @this: java.io.Console;

        $r1 = r0.<java.io.Console: java.io.PrintWriter writer>;

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public transient java.io.Console format(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Formatter r3, $r4;
        java.io.PrintWriter $r5;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = new java.util.Formatter;

        $r5 = r0.<java.io.Console: java.io.PrintWriter writer>;

        specialinvoke $r4.<java.util.Formatter: void <init>(java.lang.Appendable)>($r5);

        r3 = $r4;

        virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke r3.<java.util.Formatter: void flush()>();

        return r0;
    }

    public transient java.io.Console printf(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0, $r3;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public java.lang.String readLine()
    {
        java.io.Console r0;
        java.io.IOException r1, $r4;
        java.lang.String r2;
        java.io.Console$ConsoleReader $r3;
        java.io.IOError $r5;

        r0 := @this: java.io.Console;

     label1:
        $r3 = r0.<java.io.Console: java.io.Console$ConsoleReader reader>;

        r2 = virtualinvoke $r3.<java.io.Console$ConsoleReader: java.lang.String readLine()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.io.IOError;

        specialinvoke $r5.<java.io.IOError: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public transient java.lang.String readLine(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1, r5;
        java.lang.Object[] r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r7;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = <java.io.Console: java.lang.Object CONSOLE_LOCK>;

        entermonitor r3;

     label1:
        virtualinvoke r0.<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>(r1, r2);

        r5 = virtualinvoke r0.<java.io.Console: java.lang.String readLine()>();

        exitmonitor r3;

     label2:
        return r5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public char[] readPassword()
    {
        java.io.Console r0;
        java.lang.Object r1;
        java.lang.Throwable r2, r3, $r8, $r9;
        int i0;
        java.lang.String r4;
        char[] r5, r6;
        java.io.PrintWriter $r7;

        r0 := @this: java.io.Console;

        r1 = <java.io.Console: java.lang.Object CONSOLE_LOCK>;

        entermonitor r1;

     label01:
        i0 = staticinvoke <java.io.Console: int setEcho(boolean,int)>(0, 0);

     label02:
        r4 = virtualinvoke r0.<java.io.Console: java.lang.String readLine()>();

        $r7 = r0.<java.io.Console: java.io.PrintWriter writer>;

        virtualinvoke $r7.<java.io.PrintWriter: void println()>();

     label03:
        if r4 != null goto label06;

        r6 = null;

     label04:
        staticinvoke <java.io.Console: int setEcho(boolean,int)>(1, i0);

        exitmonitor r1;

     label05:
        return r6;

     label06:
        r5 = virtualinvoke r4.<java.lang.String: char[] toCharArray()>();

     label07:
        r6 = r5;

        goto label04;

     label08:
        $r8 := @caughtexception;

        r3 = $r8;

     label09:
        staticinvoke <java.io.Console: int setEcho(boolean,int)>(1, i0);

        throw r3;

     label10:
        $r9 := @caughtexception;

        r2 = $r9;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public transient char[] readPassword(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r7;
        char[] r5;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = <java.io.Console: java.lang.Object CONSOLE_LOCK>;

        entermonitor r3;

     label1:
        virtualinvoke r0.<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>(r1, r2);

        r5 = virtualinvoke r0.<java.io.Console: char[] readPassword()>();

        exitmonitor r3;

     label2:
        return r5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.io.Reader reader()
    {
        java.io.Console r0;
        java.io.Console$ConsoleReader $r1;

        r0 := @this: java.io.Console;

        $r1 = r0.<java.io.Console: java.io.Console$ConsoleReader reader>;

        return $r1;
    }

    public java.io.PrintWriter writer()
    {
        java.io.Console r0;
        java.io.PrintWriter $r1;

        r0 := @this: java.io.Console;

        $r1 = r0.<java.io.Console: java.io.PrintWriter writer>;

        return $r1;
    }
}
