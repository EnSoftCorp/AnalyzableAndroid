public class java.util.Stack extends java.util.Vector
{
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.Stack r0;

        r0 := @this: java.util.Stack;

        specialinvoke r0.<java.util.Vector: void <init>()>();

        return;
    }

    public boolean empty()
    {
        java.util.Stack r0;
        boolean $z0;

        r0 := @this: java.util.Stack;

        $z0 = virtualinvoke r0.<java.util.Stack: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object peek()
    {
        java.util.Stack r0;
        java.lang.Throwable r1, $r5;
        java.lang.Object r3;
        int $i0, $i1;
        java.lang.Object[] $r4;
        java.lang.IndexOutOfBoundsException $r6;
        java.util.EmptyStackException $r7;

        r0 := @this: java.util.Stack;

        entermonitor r0;

     label1:
        $r4 = r0.<java.util.Stack: java.lang.Object[] elementData>;

        $i0 = r0.<java.util.Stack: int elementCount>;

        $i1 = -1 + $i0;

        r3 = $r4[$i1];

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r6 := @caughtexception;

     label4:
        $r7 = new java.util.EmptyStackException;

        specialinvoke $r7.<java.util.EmptyStackException: void <init>()>();

        throw $r7;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public java.lang.Object pop()
    {
        java.util.Stack r0;
        java.lang.Throwable r1, $r6;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2;
        java.lang.Object[] $r3, $r4;
        java.util.EmptyStackException $r5;

        r0 := @this: java.util.Stack;

        entermonitor r0;

     label1:
        $i1 = r0.<java.util.Stack: int elementCount>;

        if $i1 != 0 goto label3;

        $r5 = new java.util.EmptyStackException;

        specialinvoke $r5.<java.util.EmptyStackException: void <init>()>();

        throw $r5;

     label2:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

        throw r1;

     label3:
        $i2 = r0.<java.util.Stack: int elementCount>;

        i0 = -1 + $i2;

        r0.<java.util.Stack: int elementCount> = i0;

        $r3 = r0.<java.util.Stack: java.lang.Object[] elementData>;

        r2 = $r3[i0];

        $r4 = r0.<java.util.Stack: java.lang.Object[] elementData>;

        $r4[i0] = null;

        $i3 = r0.<java.util.Stack: int modCount>;

        $i4 = 1 + $i3;

        r0.<java.util.Stack: int modCount> = $i4;

     label4:
        exitmonitor r0;

        return r2;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public java.lang.Object push(java.lang.Object)
    {
        java.util.Stack r0;
        java.lang.Object r1;

        r0 := @this: java.util.Stack;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<java.util.Stack: void addElement(java.lang.Object)>(r1);

        return r1;
    }

    public int search(java.lang.Object)
    {
        java.util.Stack r0;
        java.lang.Object r1, r4, $r5;
        java.lang.Throwable r2, $r6;
        java.lang.Object[] r3;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: java.util.Stack;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label01:
        r3 = r0.<java.util.Stack: java.lang.Object[] elementData>;

        i0 = r0.<java.util.Stack: int elementCount>;

     label02:
        if r1 == null goto label08;

        i3 = i0 - 1;

     label03:
        if i3 < 0 goto label13;

     label04:
        $r5 = r3[i3];

        z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

     label05:
        if z0 == 0 goto label07;

        i2 = i0 - i3;

     label06:
        exitmonitor r0;

        return i2;

     label07:
        i3 = i3 + -1;

        goto label03;

     label08:
        i1 = i0 - 1;

     label09:
        if i1 < 0 goto label13;

     label10:
        r4 = r3[i1];

     label11:
        if r4 != null goto label12;

        i2 = i0 - i1;

        goto label06;

     label12:
        i1 = i1 + -1;

        goto label09;

     label13:
        i2 = -1;

        goto label06;

     label14:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    public static void <clinit>()
    {
        <java.util.Stack: long serialVersionUID> = 1224463164541339165L;

        return;
    }
}
