class java.util.Hashtable$HashtableEntry extends java.lang.Object implements java.util.Map$Entry
{
    final int hash;
    final java.lang.Object key;
    java.util.Hashtable$HashtableEntry next;
    java.lang.Object value;

    void <init>(java.lang.Object, java.lang.Object, int, java.util.Hashtable$HashtableEntry)
    {
        java.util.Hashtable$HashtableEntry r0, r3;
        java.lang.Object r1, r2;
        int i0;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.Hashtable$HashtableEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Hashtable$HashtableEntry: java.lang.Object key> = r1;

        r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value> = r2;

        r0.<java.util.Hashtable$HashtableEntry: int hash> = i0;

        r0.<java.util.Hashtable$HashtableEntry: java.util.Hashtable$HashtableEntry next> = r3;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        java.util.Hashtable$HashtableEntry r0;
        java.lang.Object r1, $r3, $r4, $r5, $r6;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object key>;

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $r5 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value>;

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label1;

        return 1;
    }

    public final java.lang.Object getKey()
    {
        java.util.Hashtable$HashtableEntry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        $r1 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object key>;

        return $r1;
    }

    public final java.lang.Object getValue()
    {
        java.util.Hashtable$HashtableEntry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        $r1 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value>;

        return $r1;
    }

    public final int hashCode()
    {
        java.util.Hashtable$HashtableEntry r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        $r1 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object key>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public final java.lang.Object setValue(java.lang.Object)
    {
        java.util.Hashtable$HashtableEntry r0;
        java.lang.Object r1, r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == null");

        throw $r3;

     label1:
        r2 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value>;

        r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value> = r1;

        return r2;
    }

    public final java.lang.String toString()
    {
        java.util.Hashtable$HashtableEntry r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;

        r0 := @this: java.util.Hashtable$HashtableEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object key>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = r0.<java.util.Hashtable$HashtableEntry: java.lang.Object value>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
