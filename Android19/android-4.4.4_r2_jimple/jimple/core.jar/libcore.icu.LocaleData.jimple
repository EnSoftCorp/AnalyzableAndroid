public final class libcore.icu.LocaleData extends java.lang.Object
{
    private static final java.util.HashMap localeDataCache;
    public java.lang.String NaN;
    public java.lang.String[] amPm;
    public java.lang.String currencyPattern;
    public java.lang.String currencySymbol;
    public char decimalSeparator;
    public java.lang.String[] eras;
    public java.lang.String exponentSeparator;
    public java.lang.Integer firstDayOfWeek;
    public java.lang.String fullDateFormat;
    public java.lang.String fullTimeFormat;
    public char groupingSeparator;
    public java.lang.String infinity;
    public java.lang.String integerPattern;
    public java.lang.String internationalCurrencySymbol;
    public java.lang.String longDateFormat;
    public java.lang.String[] longMonthNames;
    public java.lang.String[] longStandAloneMonthNames;
    public java.lang.String[] longStandAloneWeekdayNames;
    public java.lang.String longTimeFormat;
    public java.lang.String[] longWeekdayNames;
    public java.lang.String mediumDateFormat;
    public java.lang.String mediumTimeFormat;
    public java.lang.Integer minimalDaysInFirstWeek;
    public char minusSign;
    public char monetarySeparator;
    public java.lang.String numberPattern;
    public char patternSeparator;
    public char perMill;
    public char percent;
    public java.lang.String percentPattern;
    public java.lang.String shortDateFormat;
    public java.lang.String shortDateFormat4;
    public java.lang.String[] shortMonthNames;
    public java.lang.String[] shortStandAloneMonthNames;
    public java.lang.String[] shortStandAloneWeekdayNames;
    public java.lang.String shortTimeFormat;
    public java.lang.String[] shortWeekdayNames;
    public java.lang.String timeFormat12;
    public java.lang.String timeFormat24;
    public java.lang.String[] tinyMonthNames;
    public java.lang.String[] tinyStandAloneMonthNames;
    public java.lang.String[] tinyStandAloneWeekdayNames;
    public java.lang.String[] tinyWeekdayNames;
    public java.lang.String today;
    public java.lang.String tomorrow;
    public java.lang.String yesterday;
    public char zeroDigit;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Locale $r1, $r3, $r5;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <libcore.icu.LocaleData: java.util.HashMap localeDataCache> = $r0;

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r1);

        $r3 = <java.util.Locale: java.util.Locale US>;

        staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r3);

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r5);

        return;
    }

    private void <init>()
    {
        libcore.icu.LocaleData r0;

        r0 := @this: libcore.icu.LocaleData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static libcore.icu.LocaleData get(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.String r1;
        java.util.HashMap r2, r6, $r9, $r12, $r14;
        java.lang.Throwable r3, r7, $r15, $r16;
        libcore.icu.LocaleData r4, r5, r8;
        java.lang.Object $r10, $r11;

        r0 := @parameter0: java.util.Locale;

        if r0 != null goto label01;

        r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label01:
        r1 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        r2 = <libcore.icu.LocaleData: java.util.HashMap localeDataCache>;

        entermonitor r2;

     label02:
        $r9 = <libcore.icu.LocaleData: java.util.HashMap localeDataCache>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (libcore.icu.LocaleData) $r10;

     label03:
        if r4 == null goto label06;

     label04:
        exitmonitor r2;

     label05:
        return r4;

     label06:
        exitmonitor r2;

     label07:
        r5 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData initLocaleData(java.util.Locale)>(r0);

        r6 = <libcore.icu.LocaleData: java.util.HashMap localeDataCache>;

        entermonitor r6;

     label08:
        $r12 = <libcore.icu.LocaleData: java.util.HashMap localeDataCache>;

        $r11 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (libcore.icu.LocaleData) $r11;

     label09:
        if r8 == null goto label18;

     label10:
        exitmonitor r6;

     label11:
        return r8;

     label12:
        $r16 := @caughtexception;

        r7 = $r16;

     label13:
        exitmonitor r6;

     label14:
        throw r7;

     label15:
        $r15 := @caughtexception;

        r3 = $r15;

     label16:
        exitmonitor r2;

     label17:
        throw r3;

     label18:
        $r14 = <libcore.icu.LocaleData: java.util.HashMap localeDataCache>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        exitmonitor r6;

     label19:
        return r5;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label18 to label19 with label12;
    }

    private static libcore.icu.LocaleData initLocaleData(java.util.Locale)
    {
        java.util.Locale r0;
        libcore.icu.LocaleData r1, $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r19;
        boolean $z0;
        java.lang.AssertionError $r15;
        java.lang.StringBuilder $r17, $r18, $r20;

        r0 := @parameter0: java.util.Locale;

        $r2 = new libcore.icu.LocaleData;

        specialinvoke $r2.<libcore.icu.LocaleData: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $z0 = staticinvoke <libcore.icu.ICU: boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData)>($r3, r1);

        if $z0 != 0 goto label1;

        $r15 = new java.lang.AssertionError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t initialize LocaleData for locale ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>($r19);

        throw $r15;

     label1:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r5 = staticinvoke <libcore.icu.ICU: java.lang.String getBestDateTimePattern(java.lang.String,java.lang.String)>("hm", $r4);

        r1.<libcore.icu.LocaleData: java.lang.String timeFormat12> = $r5;

        $r6 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r7 = staticinvoke <libcore.icu.ICU: java.lang.String getBestDateTimePattern(java.lang.String,java.lang.String)>("Hm", $r6);

        r1.<libcore.icu.LocaleData: java.lang.String timeFormat24> = $r7;

        $r8 = r1.<libcore.icu.LocaleData: java.lang.String fullTimeFormat>;

        if $r8 == null goto label2;

        $r13 = r1.<libcore.icu.LocaleData: java.lang.String fullTimeFormat>;

        $r16 = virtualinvoke $r13.<java.lang.String: java.lang.String replace(char,char)>(118, 122);

        r1.<libcore.icu.LocaleData: java.lang.String fullTimeFormat> = $r16;

     label2:
        $r9 = r1.<libcore.icu.LocaleData: java.lang.String numberPattern>;

        if $r9 == null goto label3;

        $r12 = r1.<libcore.icu.LocaleData: java.lang.String numberPattern>;

        $r14 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.[#,]*", "");

        r1.<libcore.icu.LocaleData: java.lang.String integerPattern> = $r14;

     label3:
        $r10 = r1.<libcore.icu.LocaleData: java.lang.String shortDateFormat>;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\byy\\b", "y");

        r1.<libcore.icu.LocaleData: java.lang.String shortDateFormat4> = $r11;

        return r1;
    }

    public java.lang.String getDateFormat(int)
    {
        libcore.icu.LocaleData r0;
        int i0;
        java.lang.AssertionError $r1;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: libcore.icu.LocaleData;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<libcore.icu.LocaleData: java.lang.String shortDateFormat>;

        return $r2;

     label3:
        $r3 = r0.<libcore.icu.LocaleData: java.lang.String mediumDateFormat>;

        return $r3;

     label4:
        $r4 = r0.<libcore.icu.LocaleData: java.lang.String longDateFormat>;

        return $r4;

     label5:
        $r5 = r0.<libcore.icu.LocaleData: java.lang.String fullDateFormat>;

        return $r5;
    }

    public java.lang.String getTimeFormat(int)
    {
        libcore.icu.LocaleData r0;
        int i0;
        java.lang.AssertionError $r1;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: libcore.icu.LocaleData;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<libcore.icu.LocaleData: java.lang.String shortTimeFormat>;

        return $r2;

     label3:
        $r3 = r0.<libcore.icu.LocaleData: java.lang.String mediumTimeFormat>;

        return $r3;

     label4:
        $r4 = r0.<libcore.icu.LocaleData: java.lang.String longTimeFormat>;

        return $r4;

     label5:
        $r5 = r0.<libcore.icu.LocaleData: java.lang.String fullTimeFormat>;

        return $r5;
    }

    public java.lang.String toString()
    {
        libcore.icu.LocaleData r0;
        java.lang.String $r1;

        r0 := @this: libcore.icu.LocaleData;

        $r1 = staticinvoke <libcore.util.Objects: java.lang.String toString(java.lang.Object)>(r0);

        return $r1;
    }
}
