public abstract class java.util.logging.Formatter extends java.lang.Object
{

    protected void <init>()
    {
        java.util.logging.Formatter r0;

        r0 := @this: java.util.logging.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String format(java.util.logging.LogRecord);

    public java.lang.String formatMessage(java.util.logging.LogRecord)
    {
        java.util.logging.Formatter r0;
        java.util.logging.LogRecord r1;
        java.lang.String r2, r6, r8, $r9;
        java.util.ResourceBundle r3;
        java.lang.Object[] r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r10;
        java.lang.Exception $r11;

        r0 := @this: java.util.logging.Formatter;

        r1 := @parameter0: java.util.logging.LogRecord;

        r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        r3 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()>();

        if r3 == null goto label3;

     label1:
        r8 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r2);

     label2:
        r2 = r8;

     label3:
        if r2 == null goto label6;

        r4 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("{0");

        if $i0 < 0 goto label6;

        if r4 == null goto label6;

        $i1 = lengthof r4;

        if $i1 <= 0 goto label6;

     label4:
        r6 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r4);

     label5:
        r2 = r6;

     label6:
        return r2;

     label7:
        $r11 := @caughtexception;

        r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        goto label3;

     label8:
        $r10 := @caughtexception;

        $r9 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        return $r9;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label8;
    }

    public java.lang.String getHead(java.util.logging.Handler)
    {
        java.util.logging.Formatter r0;
        java.util.logging.Handler r1;

        r0 := @this: java.util.logging.Formatter;

        r1 := @parameter0: java.util.logging.Handler;

        return "";
    }

    public java.lang.String getTail(java.util.logging.Handler)
    {
        java.util.logging.Formatter r0;
        java.util.logging.Handler r1;

        r0 := @this: java.util.logging.Formatter;

        r1 := @parameter0: java.util.logging.Handler;

        return "";
    }
}
