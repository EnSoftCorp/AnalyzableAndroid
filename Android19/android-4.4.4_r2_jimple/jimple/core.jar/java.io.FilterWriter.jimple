public abstract class java.io.FilterWriter extends java.io.Writer
{
    protected java.io.Writer out;

    protected void <init>(java.io.Writer)
    {
        java.io.FilterWriter r0;
        java.io.Writer r1;

        r0 := @this: java.io.FilterWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.Writer: void <init>(java.lang.Object)>(r1);

        r0.<java.io.FilterWriter: java.io.Writer out> = r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.FilterWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.io.Writer $r3;

        r0 := @this: java.io.FilterWriter;

        r1 = r0.<java.io.FilterWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void close()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void flush() throws java.io.IOException
    {
        java.io.FilterWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.io.Writer $r3;

        r0 := @this: java.io.FilterWriter;

        r1 = r0.<java.io.FilterWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void flush()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.FilterWriter r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.io.Writer $r3;

        r0 := @this: java.io.FilterWriter;

        i0 := @parameter0: int;

        r1 = r0.<java.io.FilterWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        java.io.FilterWriter r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        java.io.Writer $r4;

        r0 := @this: java.io.FilterWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.FilterWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String,int,int)>(r1, i0, i1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        java.io.FilterWriter r0;
        char[] r1;
        int i0, i1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        java.io.Writer $r4;

        r0 := @this: java.io.FilterWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.FilterWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.io.FilterWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
