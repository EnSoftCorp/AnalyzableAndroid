final class java.util.Timer$TimerImpl extends java.lang.Thread
{
    private boolean cancelled;
    private boolean finished;
    private java.util.Timer$TimerImpl$TimerHeap tasks;

    void <init>(java.lang.String, boolean)
    {
        java.util.Timer$TimerImpl r0;
        java.lang.String r1;
        boolean z0;
        java.util.Timer$TimerImpl$TimerHeap $r2;

        r0 := @this: java.util.Timer$TimerImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.util.Timer$TimerImpl$TimerHeap;

        specialinvoke $r2.<java.util.Timer$TimerImpl$TimerHeap: void <init>(java.util.Timer$1)>(null);

        r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks> = $r2;

        virtualinvoke r0.<java.util.Timer$TimerImpl: void setName(java.lang.String)>(r1);

        virtualinvoke r0.<java.util.Timer$TimerImpl: void setDaemon(boolean)>(z0);

        virtualinvoke r0.<java.util.Timer$TimerImpl: void start()>();

        return;
    }

    static boolean access$302(java.util.Timer$TimerImpl, boolean)
    {
        java.util.Timer$TimerImpl r0;
        boolean z0;

        r0 := @parameter0: java.util.Timer$TimerImpl;

        z0 := @parameter1: boolean;

        r0.<java.util.Timer$TimerImpl: boolean finished> = z0;

        return z0;
    }

    static boolean access$400(java.util.Timer$TimerImpl)
    {
        java.util.Timer$TimerImpl r0;
        boolean $z0;

        r0 := @parameter0: java.util.Timer$TimerImpl;

        $z0 = r0.<java.util.Timer$TimerImpl: boolean cancelled>;

        return $z0;
    }

    static void access$500(java.util.Timer$TimerImpl, java.util.TimerTask)
    {
        java.util.Timer$TimerImpl r0;
        java.util.TimerTask r1;

        r0 := @parameter0: java.util.Timer$TimerImpl;

        r1 := @parameter1: java.util.TimerTask;

        specialinvoke r0.<java.util.Timer$TimerImpl: void insertTask(java.util.TimerTask)>(r1);

        return;
    }

    private void insertTask(java.util.TimerTask)
    {
        java.util.Timer$TimerImpl r0;
        java.util.TimerTask r1;
        java.util.Timer$TimerImpl$TimerHeap $r2;

        r0 := @this: java.util.Timer$TimerImpl;

        r1 := @parameter0: java.util.TimerTask;

        $r2 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r2.<java.util.Timer$TimerImpl$TimerHeap: void insert(java.util.TimerTask)>(r1);

        virtualinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    public void cancel()
    {
        java.util.Timer$TimerImpl r0;
        java.lang.Throwable r1, $r3;
        java.util.Timer$TimerImpl$TimerHeap $r2;

        r0 := @this: java.util.Timer$TimerImpl;

        entermonitor r0;

     label1:
        r0.<java.util.Timer$TimerImpl: boolean cancelled> = 1;

        $r2 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r2.<java.util.Timer$TimerImpl$TimerHeap: void reset()>();

        virtualinvoke r0.<java.lang.Object: void notify()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int purge()
    {
        java.util.Timer$TimerImpl r0;
        java.util.Timer$TimerImpl$TimerHeap $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i1;

        r0 := @this: java.util.Timer$TimerImpl;

        $r1 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $z0 = virtualinvoke $r1.<java.util.Timer$TimerImpl$TimerHeap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$202(java.util.Timer$TimerImpl$TimerHeap,int)>($r2, 0);

        $r3 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r3.<java.util.Timer$TimerImpl$TimerHeap: void deleteIfCancelled()>();

        $r4 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $i1 = staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$200(java.util.Timer$TimerImpl$TimerHeap)>($r4);

        return $i1;
    }

    public void run()
    {
        java.util.Timer$TimerImpl r0;
        java.lang.Throwable r1, r4, r6, r7, r8, $r21, $r23, $r25, $r26, $r27;
        long l0, l1, $l4, $l6, $l7, $l8, $l10, $l11, $l12, $l13, $l14, $l15, $l16;
        java.util.TimerTask r2, $r15;
        java.lang.Object r3, r5;
        byte b2, $b5, $b9;
        int i3, $i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Timer$TimerImpl$TimerHeap $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20;
        java.lang.InterruptedException $r22, $r24;

        r0 := @this: java.util.Timer$TimerImpl;

     label01:
        entermonitor r0;

     label02:
        $z0 = r0.<java.util.Timer$TimerImpl: boolean cancelled>;

        if $z0 == 0 goto label04;

        exitmonitor r0;

     label03:
        return;

     label04:
        $r12 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $z1 = virtualinvoke $r12.<java.util.Timer$TimerImpl$TimerHeap: boolean isEmpty()>();

        if $z1 == 0 goto label12;

        $z5 = r0.<java.util.Timer$TimerImpl: boolean finished>;

        if $z5 == 0 goto label09;

        exitmonitor r0;

     label05:
        return;

     label06:
        $r27 := @caughtexception;

        r1 = $r27;

     label07:
        exitmonitor r0;

     label08:
        throw r1;

     label09:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label10:
        exitmonitor r0;

     label11:
        goto label01;

     label12:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r13 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        r2 = virtualinvoke $r13.<java.util.Timer$TimerImpl$TimerHeap: java.util.TimerTask minimum()>();

        r3 = r2.<java.util.TimerTask: java.lang.Object lock>;

        entermonitor r3;

     label13:
        $z2 = r2.<java.util.TimerTask: boolean cancelled>;

        if $z2 == 0 goto label16;

        $r19 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r19.<java.util.Timer$TimerImpl$TimerHeap: void delete(int)>(0);

        exitmonitor r3;

     label14:
        exitmonitor r0;

     label15:
        goto label01;

     label16:
        $l4 = r2.<java.util.TimerTask: long when>;

        l1 = $l4 - l0;

        exitmonitor r3;

     label17:
        $b5 = l1 cmp 0L;

        if $b5 <= 0 goto label24;

     label18:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l1);

     label19:
        exitmonitor r0;

     label20:
        goto label01;

     label21:
        $r23 := @caughtexception;

        r4 = $r23;

     label22:
        exitmonitor r3;

     label23:
        throw r4;

     label24:
        r5 = r2.<java.util.TimerTask: java.lang.Object lock>;

        entermonitor r5;

     label25:
        $r14 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $r15 = virtualinvoke $r14.<java.util.Timer$TimerImpl$TimerHeap: java.util.TimerTask minimum()>();

        $l6 = $r15.<java.util.TimerTask: long when>;

        $l7 = r2.<java.util.TimerTask: long when>;

        b2 = $l6 cmp $l7;

     label26:
        i3 = 0;

        if b2 == 0 goto label28;

     label27:
        $r20 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        i3 = staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$100(java.util.Timer$TimerImpl$TimerHeap,java.util.TimerTask)>($r20, r2);

     label28:
        $z3 = r2.<java.util.TimerTask: boolean cancelled>;

        if $z3 == 0 goto label31;

        $r18 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $r17 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $i17 = staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$100(java.util.Timer$TimerImpl$TimerHeap,java.util.TimerTask)>($r17, r2);

        virtualinvoke $r18.<java.util.Timer$TimerImpl$TimerHeap: void delete(int)>($i17);

        exitmonitor r5;

     label29:
        exitmonitor r0;

     label30:
        goto label01;

     label31:
        $l10 = r2.<java.util.TimerTask: long when>;

        virtualinvoke r2.<java.util.TimerTask: void setScheduledTime(long)>($l10);

        $r16 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r16.<java.util.Timer$TimerImpl$TimerHeap: void delete(int)>(i3);

        $l8 = r2.<java.util.TimerTask: long period>;

        $b9 = $l8 cmp 0L;

        if $b9 < 0 goto label42;

        $z4 = r2.<java.util.TimerTask: boolean fixedRate>;

        if $z4 == 0 goto label37;

        $l15 = r2.<java.util.TimerTask: long when>;

        $l16 = r2.<java.util.TimerTask: long period>;

        $l14 = $l15 + $l16;

        r2.<java.util.TimerTask: long when> = $l14;

     label32:
        specialinvoke r0.<java.util.Timer$TimerImpl: void insertTask(java.util.TimerTask)>(r2);

     label33:
        exitmonitor r5;

     label34:
        exitmonitor r0;

     label35:
        virtualinvoke r2.<java.util.TimerTask: void run()>();

     label36:
        goto label01;

     label37:
        $l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l11 = r2.<java.util.TimerTask: long period>;

        $l12 = $l13 + $l11;

        r2.<java.util.TimerTask: long when> = $l12;

     label38:
        goto label32;

     label39:
        $r25 := @caughtexception;

        r6 = $r25;

     label40:
        exitmonitor r5;

     label41:
        throw r6;

     label42:
        r2.<java.util.TimerTask: long when> = 0L;

     label43:
        goto label33;

     label44:
        $r21 := @caughtexception;

        r7 = $r21;

        entermonitor r0;

     label45:
        r0.<java.util.Timer$TimerImpl: boolean cancelled> = 1;

        exitmonitor r0;

     label46:
        throw r7;

     label47:
        $r22 := @caughtexception;

        goto label10;

     label48:
        $r24 := @caughtexception;

        goto label19;

     label49:
        $r26 := @caughtexception;

        r8 = $r26;

     label50:
        exitmonitor r0;

     label51:
        throw r8;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.InterruptedException from label09 to label10 with label47;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.InterruptedException from label18 to label19 with label48;
        catch java.lang.Throwable from label18 to label19 with label06;
        catch java.lang.Throwable from label19 to label20 with label06;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label06;
        catch java.lang.Throwable from label24 to label25 with label06;
        catch java.lang.Throwable from label25 to label26 with label39;
        catch java.lang.Throwable from label27 to label28 with label39;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label29 to label30 with label06;
        catch java.lang.Throwable from label31 to label32 with label39;
        catch java.lang.Throwable from label32 to label33 with label39;
        catch java.lang.Throwable from label33 to label34 with label39;
        catch java.lang.Throwable from label34 to label35 with label06;
        catch java.lang.Throwable from label35 to label36 with label44;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label40 to label41 with label39;
        catch java.lang.Throwable from label41 to label42 with label06;
        catch java.lang.Throwable from label42 to label43 with label39;
        catch java.lang.Throwable from label45 to label46 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
    }
}
