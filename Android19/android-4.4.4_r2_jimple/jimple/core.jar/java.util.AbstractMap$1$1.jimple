class java.util.AbstractMap$1$1 extends java.lang.Object implements java.util.Iterator
{
    java.util.Iterator setIterator;
    final java.util.AbstractMap$1 this$1;

    void <init>(java.util.AbstractMap$1)
    {
        java.util.AbstractMap$1$1 r0;
        java.util.AbstractMap$1 r1, $r2;
        java.util.AbstractMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: java.util.AbstractMap$1$1;

        r1 := @parameter0: java.util.AbstractMap$1;

        r0.<java.util.AbstractMap$1$1: java.util.AbstractMap$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<java.util.AbstractMap$1$1: java.util.AbstractMap$1 this$1>;

        $r3 = $r2.<java.util.AbstractMap$1: java.util.AbstractMap this$0>;

        $r4 = virtualinvoke $r3.<java.util.AbstractMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<java.util.AbstractMap$1$1: java.util.Iterator setIterator> = $r5;

        return;
    }

    public boolean hasNext()
    {
        java.util.AbstractMap$1$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: java.util.AbstractMap$1$1;

        $r1 = r0.<java.util.AbstractMap$1$1: java.util.Iterator setIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.AbstractMap$1$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r4;
        java.util.Map$Entry $r3;

        r0 := @this: java.util.AbstractMap$1$1;

        $r1 = r0.<java.util.AbstractMap$1$1: java.util.Iterator setIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r4;
    }

    public void remove()
    {
        java.util.AbstractMap$1$1 r0;
        java.util.Iterator $r1;

        r0 := @this: java.util.AbstractMap$1$1;

        $r1 = r0.<java.util.AbstractMap$1$1: java.util.Iterator setIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }
}
