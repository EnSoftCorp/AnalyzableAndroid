abstract class java.util.LinkedHashMap$LinkedHashIterator extends java.lang.Object implements java.util.Iterator
{
    int expectedModCount;
    java.util.LinkedHashMap$LinkedEntry lastReturned;
    java.util.LinkedHashMap$LinkedEntry next;
    final java.util.LinkedHashMap this$0;

    private void <init>(java.util.LinkedHashMap)
    {
        java.util.LinkedHashMap$LinkedHashIterator r0;
        java.util.LinkedHashMap r1, $r2, $r5;
        java.util.LinkedHashMap$LinkedEntry $r3, $r4;
        int $i0;

        r0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        r1 := @parameter0: java.util.LinkedHashMap;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $r3 = $r2.<java.util.LinkedHashMap: java.util.LinkedHashMap$LinkedEntry header>;

        $r4 = $r3.<java.util.LinkedHashMap$LinkedEntry: java.util.LinkedHashMap$LinkedEntry nxt>;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry next> = $r4;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry lastReturned> = null;

        $r5 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $i0 = $r5.<java.util.LinkedHashMap: int modCount>;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: int expectedModCount> = $i0;

        return;
    }

    void <init>(java.util.LinkedHashMap, java.util.LinkedHashMap$1)
    {
        java.util.LinkedHashMap$LinkedHashIterator r0;
        java.util.LinkedHashMap r1;
        java.util.LinkedHashMap$1 r2;

        r0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        r1 := @parameter0: java.util.LinkedHashMap;

        r2 := @parameter1: java.util.LinkedHashMap$1;

        specialinvoke r0.<java.util.LinkedHashMap$LinkedHashIterator: void <init>(java.util.LinkedHashMap)>(r1);

        return;
    }

    public final boolean hasNext()
    {
        java.util.LinkedHashMap$LinkedHashIterator r0;
        java.util.LinkedHashMap $r1;
        java.util.LinkedHashMap$LinkedEntry $r2, $r3;

        r0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        $r3 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry next>;

        $r1 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $r2 = $r1.<java.util.LinkedHashMap: java.util.LinkedHashMap$LinkedEntry header>;

        if $r3 == $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    final java.util.LinkedHashMap$LinkedEntry nextEntry()
    {
        java.util.LinkedHashMap$LinkedHashIterator r0;
        java.util.LinkedHashMap$LinkedEntry r1, $r4, $r5;
        java.util.LinkedHashMap $r2, $r3;
        int $i0, $i1;
        java.util.NoSuchElementException $r6;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        $r2 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $i1 = $r2.<java.util.LinkedHashMap: int modCount>;

        $i0 = r0.<java.util.LinkedHashMap$LinkedHashIterator: int expectedModCount>;

        if $i1 == $i0 goto label1;

        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label1:
        r1 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry next>;

        $r3 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $r4 = $r3.<java.util.LinkedHashMap: java.util.LinkedHashMap$LinkedEntry header>;

        if r1 != $r4 goto label2;

        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label2:
        $r5 = r1.<java.util.LinkedHashMap$LinkedEntry: java.util.LinkedHashMap$LinkedEntry nxt>;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry next> = $r5;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry lastReturned> = r1;

        return r1;
    }

    public final void remove()
    {
        java.util.LinkedHashMap$LinkedHashIterator r0;
        java.util.LinkedHashMap $r1, $r5, $r7;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap$LinkedEntry $r2, $r3;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r8;
        java.util.ConcurrentModificationException $r9;

        r0 := @this: java.util.LinkedHashMap$LinkedHashIterator;

        $r1 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $i1 = $r1.<java.util.LinkedHashMap: int modCount>;

        $i0 = r0.<java.util.LinkedHashMap$LinkedHashIterator: int expectedModCount>;

        if $i1 == $i0 goto label1;

        $r9 = new java.util.ConcurrentModificationException;

        specialinvoke $r9.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry lastReturned>;

        if $r2 != null goto label2;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label2:
        $r5 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $r3 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry lastReturned>;

        $r4 = $r3.<java.util.LinkedHashMap$LinkedEntry: java.lang.Object key>;

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$LinkedEntry lastReturned> = null;

        $r7 = r0.<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap this$0>;

        $i2 = $r7.<java.util.LinkedHashMap: int modCount>;

        r0.<java.util.LinkedHashMap$LinkedHashIterator: int expectedModCount> = $i2;

        return;
    }
}
