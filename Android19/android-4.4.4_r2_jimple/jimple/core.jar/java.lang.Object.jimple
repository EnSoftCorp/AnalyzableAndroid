public class java.lang.Object
{

    public void <init>()
    {
        java.lang.Object r0;

        r0 := @this: java.lang.Object;

        return;
    }

    private native java.lang.Object internalClone(java.lang.Cloneable);

    protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object r0, $r2;
        boolean $z0;
        java.lang.Cloneable $r1;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: java.lang.Object;

        $z0 = r0 instanceof java.lang.Cloneable;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.CloneNotSupportedException;

        specialinvoke $r3.<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>("Class doesn\'t implement Cloneable");

        throw $r3;

     label1:
        $r1 = (java.lang.Cloneable) r0;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object internalClone(java.lang.Cloneable)>($r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0, r1;

        r0 := @this: java.lang.Object;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.lang.Object r0;

        r0 := @this: java.lang.Object;

        return;
    }

    public final native java.lang.Class getClass();

    public native int hashCode();

    public final native void notify();

    public final native void notifyAll();

    public java.lang.String toString()
    {
        java.lang.Object r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r8;
        int $i0;

        r0 := @this: java.lang.Object;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public final void wait() throws java.lang.InterruptedException
    {
        java.lang.Object r0;

        r0 := @this: java.lang.Object;

        virtualinvoke r0.<java.lang.Object: void wait(long,int)>(0L, 0);

        return;
    }

    public final void wait(long) throws java.lang.InterruptedException
    {
        java.lang.Object r0;
        long l0;

        r0 := @this: java.lang.Object;

        l0 := @parameter0: long;

        virtualinvoke r0.<java.lang.Object: void wait(long,int)>(l0, 0);

        return;
    }

    public final native void wait(long, int) throws java.lang.InterruptedException;
}
