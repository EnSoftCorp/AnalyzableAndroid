class java.security.KeyStore$Builder$BuilderImpl extends java.security.KeyStore$Builder
{
    private final java.io.File fileForLoad;
    private boolean isGetKeyStore;
    private java.security.KeyStore keyStore;
    private java.security.KeyStoreException lastException;
    private java.security.KeyStore$ProtectionParameter protParameter;
    private final java.security.Provider providerForKeyStore;
    private final java.lang.String typeForKeyStore;

    void <init>(java.security.KeyStore, java.security.KeyStore$ProtectionParameter, java.io.File, java.lang.String, java.security.Provider)
    {
        java.security.KeyStore$Builder$BuilderImpl r0;
        java.security.KeyStore r1;
        java.security.KeyStore$ProtectionParameter r2;
        java.io.File r3;
        java.lang.String r4;
        java.security.Provider r5;

        r0 := @this: java.security.KeyStore$Builder$BuilderImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: java.security.KeyStore$ProtectionParameter;

        r3 := @parameter2: java.io.File;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.security.Provider;

        specialinvoke r0.<java.security.KeyStore$Builder: void <init>()>();

        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 0;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore keyStore> = r1;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter> = r2;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.io.File fileForLoad> = r3;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.lang.String typeForKeyStore> = r4;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.Provider providerForKeyStore> = r5;

        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 0;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException> = null;

        return;
    }

    public java.security.KeyStore getKeyStore() throws java.security.KeyStoreException
    {
        java.security.KeyStore$Builder$BuilderImpl r0;
        java.lang.Throwable r1, r10, $r31, $r32, $r33;
        java.lang.Exception r2, $r28;
        java.security.KeyStoreException r3, r4, $r11, $r19, $r26, $r29, $r30;
        java.security.KeyStore r5, $r12;
        char[] r6;
        java.io.File r7, $r22;
        java.io.FileInputStream r8, r9, $r23;
        java.security.Provider $r13, $r14;
        java.lang.String $r15, $r27;
        boolean $z0, $z1;
        java.security.KeyStore$ProtectionParameter $r16, $r17, $r18, $r21, $r25;
        java.security.KeyStore$Builder$TmpLSParameter $r20;
        java.security.KeyStore$PasswordProtection $r24;

        r0 := @this: java.security.KeyStore$Builder$BuilderImpl;

        entermonitor r0;

     label01:
        $r11 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException>;

        if $r11 == null goto label03;

        $r26 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException>;

        throw $r26;

     label02:
        $r33 := @caughtexception;

        r1 = $r33;

        exitmonitor r0;

        throw r1;

     label03:
        $r12 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore keyStore>;

        if $r12 == null goto label05;

        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 1;

        r5 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore keyStore>;

     label04:
        exitmonitor r0;

        return r5;

     label05:
        $r13 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.Provider providerForKeyStore>;

        if $r13 != null goto label16;

        $r27 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.lang.String typeForKeyStore>;

        r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r27);

     label06:
        $r16 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        $z0 = $r16 instanceof java.security.KeyStore$PasswordProtection;

        if $z0 == 0 goto label18;

        $r25 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        $r24 = (java.security.KeyStore$PasswordProtection) $r25;

        r6 = virtualinvoke $r24.<java.security.KeyStore$PasswordProtection: char[] getPassword()>();

     label07:
        r7 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.io.File fileForLoad>;

     label08:
        if r7 == null goto label25;

        r8 = null;

     label09:
        $r23 = new java.io.FileInputStream;

        $r22 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.io.File fileForLoad>;

        specialinvoke $r23.<java.io.FileInputStream: void <init>(java.io.File)>($r22);

        r9 = $r23;

     label10:
        virtualinvoke r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r9, r6);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r9);

     label12:
        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 1;

     label13:
        goto label04;

     label14:
        $r30 := @caughtexception;

        r4 = $r30;

     label15:
        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException> = r4;

        throw r4;

     label16:
        $r15 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.lang.String typeForKeyStore>;

        $r14 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.Provider providerForKeyStore>;

        r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>($r15, $r14);

     label17:
        goto label06;

     label18:
        $r17 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        $z1 = $r17 instanceof java.security.KeyStore$CallbackHandlerProtection;

        if $z1 == 0 goto label20;

        $r18 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        r6 = staticinvoke <java.security.KeyStoreSpi: char[] getPasswordFromCallBack(java.security.KeyStore$ProtectionParameter)>($r18);

     label19:
        goto label07;

     label20:
        $r19 = new java.security.KeyStoreException;

        specialinvoke $r19.<java.security.KeyStoreException: void <init>(java.lang.String)>("protectionParameter is neither PasswordProtection nor CallbackHandlerProtection instance");

        throw $r19;

     label21:
        $r28 := @caughtexception;

        r2 = $r28;

     label22:
        $r29 = new java.security.KeyStoreException;

        specialinvoke $r29.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r2);

        r3 = $r29;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException> = r3;

        throw r3;

     label23:
        $r32 := @caughtexception;

        r10 = $r32;

     label24:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r8);

        throw r10;

     label25:
        $r20 = new java.security.KeyStore$Builder$TmpLSParameter;

        $r21 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        specialinvoke $r20.<java.security.KeyStore$Builder$TmpLSParameter: void <init>(java.security.KeyStore$ProtectionParameter)>($r21);

        virtualinvoke r5.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>($r20);

     label26:
        goto label12;

     label27:
        $r31 := @caughtexception;

        r10 = $r31;

        r8 = r9;

        goto label24;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.security.KeyStoreException from label05 to label06 with label14;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.security.KeyStoreException from label06 to label07 with label14;
        catch java.lang.Exception from label06 to label07 with label21;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.security.KeyStoreException from label07 to label08 with label14;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.security.KeyStoreException from label11 to label12 with label14;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Throwable from label11 to label12 with label02;
        catch java.security.KeyStoreException from label12 to label13 with label14;
        catch java.lang.Exception from label12 to label13 with label21;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label15 to label16 with label02;
        catch java.security.KeyStoreException from label16 to label17 with label14;
        catch java.lang.Exception from label16 to label17 with label21;
        catch java.lang.Throwable from label16 to label17 with label02;
        catch java.security.KeyStoreException from label18 to label19 with label14;
        catch java.lang.Exception from label18 to label19 with label21;
        catch java.lang.Throwable from label18 to label19 with label02;
        catch java.security.KeyStoreException from label20 to label21 with label14;
        catch java.lang.Exception from label20 to label21 with label21;
        catch java.lang.Throwable from label20 to label21 with label02;
        catch java.lang.Throwable from label22 to label23 with label02;
        catch java.security.KeyStoreException from label24 to label25 with label14;
        catch java.lang.Exception from label24 to label25 with label21;
        catch java.lang.Throwable from label24 to label25 with label02;
        catch java.security.KeyStoreException from label25 to label26 with label14;
        catch java.lang.Exception from label25 to label26 with label21;
        catch java.lang.Throwable from label25 to label26 with label02;
    }

    public java.security.KeyStore$ProtectionParameter getProtectionParameter(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore$Builder$BuilderImpl r0;
        java.lang.String r1;
        java.security.KeyStore$ProtectionParameter r2;
        java.lang.Throwable r3, $r6;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: java.security.KeyStore$Builder$BuilderImpl;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

        if r1 != null goto label3;

     label1:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r5;

     label2:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r0;

        throw r3;

     label3:
        $z0 = r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore>;

        if $z0 != 0 goto label4;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKeyStore() was not invoked");

        throw $r4;

     label4:
        r2 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

     label5:
        exitmonitor r0;

        return r2;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }
}
