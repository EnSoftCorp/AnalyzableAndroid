class org.apache.harmony.xml.ExpatParser$ParseException extends org.xml.sax.SAXParseException
{

    private void <init>(java.lang.String, org.xml.sax.Locator)
    {
        org.apache.harmony.xml.ExpatParser$ParseException r0;
        java.lang.String r1, $r3;
        org.xml.sax.Locator r2;

        r0 := @this: org.apache.harmony.xml.ExpatParser$ParseException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.xml.sax.Locator;

        $r3 = staticinvoke <org.apache.harmony.xml.ExpatParser$ParseException: java.lang.String makeMessage(java.lang.String,org.xml.sax.Locator)>(r1, r2);

        specialinvoke r0.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r3, r2);

        return;
    }

    void <init>(java.lang.String, org.xml.sax.Locator, org.apache.harmony.xml.ExpatParser$1)
    {
        org.apache.harmony.xml.ExpatParser$ParseException r0;
        java.lang.String r1;
        org.xml.sax.Locator r2;
        org.apache.harmony.xml.ExpatParser$1 r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser$ParseException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.xml.sax.Locator;

        r3 := @parameter2: org.apache.harmony.xml.ExpatParser$1;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser$ParseException: void <init>(java.lang.String,org.xml.sax.Locator)>(r1, r2);

        return;
    }

    private static java.lang.String makeMessage(java.lang.String, int, int)
    {
        java.lang.String r0, $r8;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("At line ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String makeMessage(java.lang.String, org.xml.sax.Locator)
    {
        java.lang.String r0, $r2;
        org.xml.sax.Locator r1;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.xml.sax.Locator;

        $i0 = interfaceinvoke r1.<org.xml.sax.Locator: int getLineNumber()>();

        $i1 = interfaceinvoke r1.<org.xml.sax.Locator: int getColumnNumber()>();

        $r2 = staticinvoke <org.apache.harmony.xml.ExpatParser$ParseException: java.lang.String makeMessage(java.lang.String,int,int)>(r0, $i0, $i1);

        return $r2;
    }
}
