public class java.text.AttributedString extends java.lang.Object
{
    java.util.Map attributeMap;
    java.lang.String text;

    public void <init>(java.lang.String)
    {
        java.text.AttributedString r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == null");

        throw $r3;

     label1:
        r0.<java.text.AttributedString: java.lang.String text> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(11);

        r0.<java.text.AttributedString: java.util.Map attributeMap> = $r2;

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        java.text.AttributedString r0;
        java.lang.String r1, $r11;
        java.util.Map r2, $r13;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.ArrayList r5, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.HashMap $r6;
        java.util.Set $r7;
        java.lang.Object $r8, $r12, $r15;
        boolean $z0, $z2;
        java.text.AttributedString$Range $r9;
        java.text.AttributedCharacterIterator$Attribute $r14;
        java.lang.NullPointerException $r17;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == null");

        throw $r17;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $z2 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot add attributes to empty string");

        throw $r18;

     label2:
        r0.<java.text.AttributedString: java.lang.String text> = r1;

        $r6 = new java.util.HashMap;

        $i1 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i2 = 4 * $i1;

        $i3 = $i2 / 3;

        $i4 = 1 + $i3;

        specialinvoke $r6.<java.util.HashMap: void <init>(int)>($i4);

        r0.<java.text.AttributedString: java.util.Map attributeMap> = $r6;

        $r7 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(1);

        r5 = $r10;

        $r9 = new java.text.AttributedString$Range;

        $r11 = r0.<java.text.AttributedString: java.lang.String text>;

        $i5 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke $r9.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(0, $i5, $r12);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r13 = r0.<java.text.AttributedString: java.util.Map attributeMap>;

        $r15 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.text.AttributedCharacterIterator$Attribute) $r15;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r5);

        goto label3;

     label4:
        return;
    }

    public void <init>(java.text.AttributedCharacterIterator)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator r1;
        java.lang.StringBuilder r2, $r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Set r3;
        java.util.Iterator r4;
        java.text.AttributedCharacterIterator$Attribute r5;
        java.lang.Object r6, $r10;
        java.lang.String $r8;
        java.util.HashMap $r9;
        boolean $z0;
        char $c10, $c12;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();

        $i4 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();

        if $i3 <= $i4 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid substring range");

        throw $r12;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r2 = $r7;

        i0 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();

     label2:
        $i5 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();

        if i0 >= $i5 goto label3;

        $c12 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: char current()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char next()>();

        i0 = i0 + 1;

        goto label2;

     label3:
        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<java.text.AttributedString: java.lang.String text> = $r8;

        r3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Set getAllAttributeKeys()>();

        if r3 != null goto label5;

     label4:
        return;

     label5:
        $r9 = new java.util.HashMap;

        $i6 = interfaceinvoke r3.<java.util.Set: int size()>();

        $i8 = 4 * $i6;

        $i7 = $i8 / 3;

        $i9 = 1 + $i7;

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i9);

        r0.<java.text.AttributedString: java.util.Map attributeMap> = $r9;

        r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.text.AttributedCharacterIterator$Attribute) $r10;

        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(0);

     label7:
        $c10 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: char current()>();

        if $c10 == 65535 goto label6;

        i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>(r5);

        i2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>(r5);

        r6 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r5);

        if r6 == null goto label8;

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>(r5, r6, i1, i2);

     label8:
        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(i2);

        goto label7;
    }

    public void <init>(java.text.AttributedCharacterIterator, int, int)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator r1;
        int i0, i1;
        java.util.Set $r2;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Set getAllAttributeKeys()>();

        specialinvoke r0.<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.util.Set)>(r1, i0, i1, $r2);

        return;
    }

    private void <init>(java.text.AttributedCharacterIterator, int, int, java.util.Set)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i18;
        java.util.Set r2;
        java.lang.StringBuilder r3, $r8;
        java.util.Iterator r4;
        java.text.AttributedCharacterIterator$Attribute r5;
        java.lang.Object r6, $r11;
        java.lang.IllegalArgumentException $r7;
        java.util.HashMap $r9;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;
        char $c17;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i6 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();

        if i0 < $i6 goto label01;

        $i7 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();

        if i1 > $i7 goto label01;

        if i0 <= i1 goto label02;

     label01:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label02:
        if r2 != null goto label04;

     label03:
        return;

     label04:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r3 = $r8;

        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);

     label05:
        $i8 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getIndex()>();

        if $i8 >= i1 goto label06;

        $c17 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: char current()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c17);

        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char next()>();

        goto label05;

     label06:
        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<java.text.AttributedString: java.lang.String text> = $r10;

        $r9 = new java.util.HashMap;

        $i11 = interfaceinvoke r2.<java.util.Set: int size()>();

        $i10 = 4 * $i11;

        $i13 = $i10 / 3;

        $i12 = 1 + $i13;

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i12);

        r0.<java.text.AttributedString: java.util.Map attributeMap> = $r9;

        r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.text.AttributedCharacterIterator$Attribute) $r11;

        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);

     label08:
        $i14 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getIndex()>();

        if $i14 >= i1 goto label07;

        r6 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r5);

        i2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>(r5);

        i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>(r5);

        $z1 = r6 instanceof java.text.Annotation;

        if $z1 == 0 goto label09;

        if i2 < i0 goto label09;

        if i3 <= i1 goto label10;

     label09:
        if r6 == null goto label13;

        $z2 = r6 instanceof java.text.Annotation;

        if $z2 != 0 goto label13;

     label10:
        if i2 >= i0 goto label11;

        i2 = i0;

     label11:
        i4 = i2 - i0;

        if i3 <= i1 goto label14;

        i5 = i1;

     label12:
        $i18 = i5 - i0;

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>(r5, r6, i4, $i18);

     label13:
        interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(i3);

        goto label08;

     label14:
        i5 = i3;

        goto label12;
    }

    public void <init>(java.text.AttributedCharacterIterator, int, int, java.text.AttributedCharacterIterator$Attribute[])
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator r1;
        int i0, i1;
        java.text.AttributedCharacterIterator$Attribute[] r2;
        java.util.HashSet r3, $r4, $r6;
        java.util.List $r5;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.text.AttributedCharacterIterator$Attribute[];

        if r2 != null goto label2;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r3 = $r6;

     label1:
        specialinvoke r0.<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.util.Set)>(r1, i0, i1, r3);

        return;

     label2:
        $r4 = new java.util.HashSet;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        r3 = $r4;

        goto label1;
    }

    public void addAttribute(java.text.AttributedCharacterIterator$Attribute, java.lang.Object)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.lang.Object r2, $r6;
        java.util.List r3;
        java.lang.String $r4, $r8;
        boolean $z0;
        java.util.Map $r5, $r10;
        java.text.AttributedString$Range $r7;
        int $i0;
        java.util.ArrayList $r9;
        java.lang.NullPointerException $r12;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("attribute == null");

        throw $r12;

     label1:
        $r4 = r0.<java.text.AttributedString: java.lang.String text>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text is empty");

        throw $r13;

     label2:
        $r5 = r0.<java.text.AttributedString: java.util.Map attributeMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.List) $r6;

        if r3 != null goto label4;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(1);

        r3 = $r9;

        $r10 = r0.<java.text.AttributedString: java.util.Map attributeMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label3:
        $r7 = new java.text.AttributedString$Range;

        $r8 = r0.<java.text.AttributedString: java.lang.String text>;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        specialinvoke $r7.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(0, $i0, r2);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;

     label4:
        interfaceinvoke r3.<java.util.List: void clear()>();

        goto label3;
    }

    public void addAttribute(java.text.AttributedCharacterIterator$Attribute, java.lang.Object, int, int)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.lang.Object r2, $r11, $r13, $r15, $r18, $r19, $r20, $r23, $r24, $r25, $r27, $r29, $r30, $r35, $r36;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.util.List r3;
        java.util.ArrayList r4, $r33;
        java.util.ListIterator r5;
        java.text.AttributedString$Range r6, r7, r8, $r14, $r16, $r17, $r21, $r22, $r26, $r28, $r31, $r34;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        java.util.Map $r12, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.NullPointerException $r39;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r1 != null goto label01;

        $r39 = new java.lang.NullPointerException;

        specialinvoke $r39.<java.lang.NullPointerException: void <init>(java.lang.String)>("attribute == null");

        throw $r39;

     label01:
        if i0 < 0 goto label02;

        $r10 = r0.<java.text.AttributedString: java.lang.String text>;

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        if i1 > $i2 goto label02;

        if i0 < i1 goto label03;

     label02:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label03:
        if r2 != null goto label05;

     label04:
        return;

     label05:
        $r12 = r0.<java.text.AttributedString: java.util.Map attributeMap>;

        $r11 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.List) $r11;

        if r3 != null goto label06;

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r33;

        $r34 = new java.text.AttributedString$Range;

        specialinvoke $r34.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i0, i1, r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r37 = r0.<java.text.AttributedString: java.util.Map attributeMap>;

        interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        return;

     label06:
        r5 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label07:
        $z0 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r13 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (java.text.AttributedString$Range) $r13;

        $i4 = r6.<java.text.AttributedString$Range: int start>;

        if i1 > $i4 goto label09;

        interfaceinvoke r5.<java.util.ListIterator: java.lang.Object previous()>();

     label08:
        $r14 = new java.text.AttributedString$Range;

        specialinvoke $r14.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i0, i1, r2);

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>($r14);

        return;

     label09:
        $i3 = r6.<java.text.AttributedString$Range: int end>;

        if i0 < $i3 goto label10;

        $i24 = r6.<java.text.AttributedString$Range: int end>;

        if i0 != $i24 goto label07;

        $r36 = r6.<java.text.AttributedString$Range: java.lang.Object value>;

        $z5 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r36);

        if $z5 == 0 goto label07;

     label10:
        interfaceinvoke r5.<java.util.ListIterator: void remove()>();

        $r16 = new java.text.AttributedString$Range;

        $i5 = r6.<java.text.AttributedString$Range: int start>;

        $r15 = r6.<java.text.AttributedString$Range: java.lang.Object value>;

        specialinvoke $r16.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>($i5, i0, $r15);

        r7 = $r16;

        $r17 = new java.text.AttributedString$Range;

        $i6 = r6.<java.text.AttributedString$Range: int end>;

        $r18 = r6.<java.text.AttributedString$Range: java.lang.Object value>;

        specialinvoke $r17.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i1, $i6, $r18);

        r8 = $r17;

     label11:
        $i7 = r6.<java.text.AttributedString$Range: int end>;

        if i1 <= $i7 goto label13;

        $z4 = interfaceinvoke r5.<java.util.ListIterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r29 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (java.text.AttributedString$Range) $r29;

        $i21 = r6.<java.text.AttributedString$Range: int end>;

        if i1 > $i21 goto label16;

        $i20 = r6.<java.text.AttributedString$Range: int start>;

        if i1 > $i20 goto label12;

        $i22 = r6.<java.text.AttributedString$Range: int start>;

        if i1 != $i22 goto label11;

        $r35 = r6.<java.text.AttributedString$Range: java.lang.Object value>;

        $z6 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r35);

        if $z6 == 0 goto label11;

     label12:
        interfaceinvoke r5.<java.util.ListIterator: void remove()>();

        $r31 = new java.text.AttributedString$Range;

        $i23 = r6.<java.text.AttributedString$Range: int end>;

        $r30 = r6.<java.text.AttributedString$Range: java.lang.Object value>;

        specialinvoke $r31.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i1, $i23, $r30);

        r8 = $r31;

     label13:
        $r19 = r7.<java.text.AttributedString$Range: java.lang.Object value>;

        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r19);

        if $z2 == 0 goto label19;

        $r24 = r8.<java.text.AttributedString$Range: java.lang.Object value>;

        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r24);

        if $z3 == 0 goto label17;

        $i19 = r7.<java.text.AttributedString$Range: int start>;

        if $i19 >= i0 goto label14;

        i0 = r7.<java.text.AttributedString$Range: int start>;

     label14:
        $i18 = r8.<java.text.AttributedString$Range: int end>;

        if $i18 <= i1 goto label15;

        i1 = r8.<java.text.AttributedString$Range: int end>;

     label15:
        $r28 = new java.text.AttributedString$Range;

        $r27 = r7.<java.text.AttributedString$Range: java.lang.Object value>;

        specialinvoke $r28.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i0, i1, $r27);

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>($r28);

        return;

     label16:
        interfaceinvoke r5.<java.util.ListIterator: void remove()>();

        goto label11;

     label17:
        $i15 = r7.<java.text.AttributedString$Range: int start>;

        if $i15 >= i0 goto label18;

        i0 = r7.<java.text.AttributedString$Range: int start>;

     label18:
        $r26 = new java.text.AttributedString$Range;

        $r25 = r7.<java.text.AttributedString$Range: java.lang.Object value>;

        specialinvoke $r26.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i0, i1, $r25);

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>($r26);

        $i16 = r8.<java.text.AttributedString$Range: int start>;

        $i17 = r8.<java.text.AttributedString$Range: int end>;

        if $i16 >= $i17 goto label04;

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>(r8);

        return;

     label19:
        $r20 = r8.<java.text.AttributedString$Range: java.lang.Object value>;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z1 == 0 goto label22;

        $i14 = r7.<java.text.AttributedString$Range: int start>;

        $i13 = r7.<java.text.AttributedString$Range: int end>;

        if $i14 >= $i13 goto label20;

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>(r7);

     label20:
        $i12 = r8.<java.text.AttributedString$Range: int end>;

        if $i12 <= i1 goto label21;

        i1 = r8.<java.text.AttributedString$Range: int end>;

     label21:
        $r22 = new java.text.AttributedString$Range;

        $r23 = r8.<java.text.AttributedString$Range: java.lang.Object value>;

        specialinvoke $r22.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i0, i1, $r23);

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>($r22);

        return;

     label22:
        $i11 = r7.<java.text.AttributedString$Range: int start>;

        $i8 = r7.<java.text.AttributedString$Range: int end>;

        if $i11 >= $i8 goto label23;

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>(r7);

     label23:
        $r21 = new java.text.AttributedString$Range;

        specialinvoke $r21.<java.text.AttributedString$Range: void <init>(int,int,java.lang.Object)>(i0, i1, r2);

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>($r21);

        $i10 = r8.<java.text.AttributedString$Range: int start>;

        $i9 = r8.<java.text.AttributedString$Range: int end>;

        if $i10 >= $i9 goto label04;

        interfaceinvoke r5.<java.util.ListIterator: void add(java.lang.Object)>(r8);

        return;
    }

    public void addAttributes(java.util.Map, int, int)
    {
        java.text.AttributedString r0;
        java.util.Map r1;
        int i0, i1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r8;
        java.text.AttributedCharacterIterator$Attribute $r7;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.text.AttributedCharacterIterator$Attribute) $r6;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r7, $r8, i0, i1);

        goto label1;

     label2:
        return;
    }

    public java.text.AttributedCharacterIterator getIterator()
    {
        java.text.AttributedString r0;
        java.text.AttributedString$AttributedIterator $r1;

        r0 := @this: java.text.AttributedString;

        $r1 = new java.text.AttributedString$AttributedIterator;

        specialinvoke $r1.<java.text.AttributedString$AttributedIterator: void <init>(java.text.AttributedString)>(r0);

        return $r1;
    }

    public java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[])
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator$Attribute[] r1;
        java.text.AttributedString$AttributedIterator $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute[];

        $r2 = new java.text.AttributedString$AttributedIterator;

        $r3 = r0.<java.text.AttributedString: java.lang.String text>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        specialinvoke $r2.<java.text.AttributedString$AttributedIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>(r0, r1, 0, $i0);

        return $r2;
    }

    public java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[], int, int)
    {
        java.text.AttributedString r0;
        java.text.AttributedCharacterIterator$Attribute[] r1;
        int i0, i1;
        java.text.AttributedString$AttributedIterator $r2;

        r0 := @this: java.text.AttributedString;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.text.AttributedString$AttributedIterator;

        specialinvoke $r2.<java.text.AttributedString$AttributedIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>(r0, r1, i0, i1);

        return $r2;
    }
}
