class java.net.URLClassLoader$IndexFile extends java.lang.Object
{
    private java.util.HashMap map;

    public void <init>(java.util.HashMap)
    {
        java.net.URLClassLoader$IndexFile r0;
        java.util.HashMap r1;

        r0 := @this: java.net.URLClassLoader$IndexFile;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URLClassLoader$IndexFile: java.util.HashMap map> = r1;

        return;
    }

    private static java.net.URL getParentURL(java.net.URL) throws java.io.IOException
    {
        java.net.URL r0, r1, $r8;
        java.lang.String r2, $r6, $r7, $r9, $r10;
        java.net.URLConnection $r3;
        java.net.JarURLConnection $r4;
        java.io.File $r5;
        char $c0, $c1;
        int $i2;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @parameter0: java.net.URL;

        $r3 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = (java.net.JarURLConnection) $r3;

        r1 = virtualinvoke $r4.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

        $r5 = new java.io.File;

        $r6 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getParent()>();

        $c0 = <java.io.File: char separatorChar>;

        r2 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(char,char)>($c0, 47);

        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c1 == 47 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r8 = new java.net.URL;

        $r9 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $r10 = virtualinvoke r1.<java.net.URL: java.lang.String getHost()>();

        $i2 = virtualinvoke r1.<java.net.URL: int getPort()>();

        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>($r9, $r10, $i2, r2);

        return $r8;
    }

    static java.net.URLClassLoader$IndexFile readIndexFile(java.util.jar.JarFile, java.util.jar.JarEntry, java.net.URL)
    {
        java.util.jar.JarFile r0;
        java.util.jar.JarEntry r1;
        java.net.URL r2, r18, $r22, $r32;
        java.io.BufferedReader r3, r6, r8, r12, $r28;
        java.io.InputStream r4;
        java.lang.Throwable r9, $r43, $r46;
        java.lang.String r10, r11, r16, r17, r19, r21, $r35;
        java.util.HashMap r13, $r29;
        java.net.URLClassLoader$IndexFile r20, $r44;
        java.util.ArrayList r23, $r38;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r33, $r34, $r36, $r37;
        java.io.InputStreamReader $r30;
        java.nio.charset.Charset $r31;
        boolean $z0, $z1, $z2;
        java.lang.Object $r39;
        java.io.IOException $r41, $r47;
        java.net.MalformedURLException $r42, $r45;

        r0 := @parameter0: java.util.jar.JarFile;

        r1 := @parameter1: java.util.jar.JarEntry;

        r2 := @parameter2: java.net.URL;

        r3 = null;

        r4 = null;

     label01:
        $r22 = staticinvoke <java.net.URLClassLoader$IndexFile: java.net.URL getParentURL(java.net.URL)>(r2);

        r10 = virtualinvoke $r22.<java.net.URL: java.lang.String toExternalForm()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jar:");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r11 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r0.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        $r28 = new java.io.BufferedReader;

        $r30 = new java.io.InputStreamReader;

        $r31 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r30.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r4, $r31);

        specialinvoke $r28.<java.io.BufferedReader: void <init>(java.io.Reader)>($r30);

        r12 = $r28;

     label02:
        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        r13 = $r29;

        r17 = virtualinvoke r12.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r17 != null goto label04;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label04:
        r16 = virtualinvoke r12.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if r16 != null goto label07;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label06:
        $z1 = virtualinvoke r21.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label14;

     label07:
        r19 = virtualinvoke r12.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if r19 != null goto label11;

     label09:
        $z2 = virtualinvoke r13.<java.util.HashMap: boolean isEmpty()>();

        if $z2 != 0 goto label24;

        $r44 = new java.net.URLClassLoader$IndexFile;

        specialinvoke $r44.<java.net.URLClassLoader$IndexFile: void <init>(java.util.HashMap)>(r13);

        r20 = $r44;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return r20;

     label11:
        $r32 = new java.net.URL;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.net.URL: void <init>(java.lang.String)>($r35);

        r18 = $r32;

     label12:
        r21 = virtualinvoke r12.<java.io.BufferedReader: java.lang.String readLine()>();

     label13:
        if r21 != null goto label06;

        goto label09;

     label14:
        $z0 = virtualinvoke r13.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r21);

        if $z0 == 0 goto label20;

        $r39 = virtualinvoke r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r21);

        r23 = (java.util.ArrayList) $r39;

     label15:
        virtualinvoke r23.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label16:
        goto label12;

     label17:
        $r45 := @caughtexception;

        r6 = r12;

     label18:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label20:
        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r23 = $r38;

        virtualinvoke r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, r23);

     label21:
        goto label15;

     label22:
        $r41 := @caughtexception;

        r8 = r12;

     label23:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r8);

        goto label19;

     label24:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r12);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label25:
        $r43 := @caughtexception;

        r9 = $r43;

     label26:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r9;

     label27:
        $r46 := @caughtexception;

        r9 = $r46;

        r3 = r12;

        goto label26;

     label28:
        $r47 := @caughtexception;

        r8 = null;

        goto label23;

     label29:
        $r42 := @caughtexception;

        r6 = null;

        goto label18;

        catch java.net.MalformedURLException from label01 to label02 with label29;
        catch java.io.IOException from label01 to label02 with label28;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.net.MalformedURLException from label02 to label03 with label17;
        catch java.io.IOException from label02 to label03 with label22;
        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.net.MalformedURLException from label04 to label05 with label17;
        catch java.io.IOException from label04 to label05 with label22;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.net.MalformedURLException from label06 to label07 with label17;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.net.MalformedURLException from label07 to label08 with label17;
        catch java.io.IOException from label07 to label08 with label22;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.net.MalformedURLException from label09 to label10 with label17;
        catch java.io.IOException from label09 to label10 with label22;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.net.MalformedURLException from label11 to label12 with label17;
        catch java.io.IOException from label11 to label12 with label22;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.net.MalformedURLException from label12 to label13 with label17;
        catch java.io.IOException from label12 to label13 with label22;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.net.MalformedURLException from label14 to label15 with label17;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.net.MalformedURLException from label15 to label16 with label17;
        catch java.io.IOException from label15 to label16 with label22;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.net.MalformedURLException from label20 to label21 with label17;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label27;
    }

    java.util.ArrayList get(java.lang.String)
    {
        java.net.URLClassLoader$IndexFile r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @this: java.net.URLClassLoader$IndexFile;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<java.net.URLClassLoader$IndexFile: java.util.HashMap map>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }
}
