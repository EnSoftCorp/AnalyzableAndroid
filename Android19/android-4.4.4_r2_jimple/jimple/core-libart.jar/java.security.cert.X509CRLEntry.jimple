public abstract class java.security.cert.X509CRLEntry extends java.lang.Object implements java.security.cert.X509Extension
{

    public void <init>()
    {
        java.security.cert.X509CRLEntry r0;

        r0 := @this: java.security.cert.X509CRLEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.security.cert.X509CRLEntry r0, r2;
        java.lang.Object r1;
        boolean z0, z1, z2;
        byte[] $r4, $r5;
        java.security.cert.CRLException $r6;

        r0 := @this: java.security.cert.X509CRLEntry;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        z0 = r1 instanceof java.security.cert.X509CRLEntry;

        z1 = 0;

        if z0 == 0 goto label1;

        r2 = (java.security.cert.X509CRLEntry) r1;

     label3:
        $r4 = virtualinvoke r0.<java.security.cert.X509CRLEntry: byte[] getEncoded()>();

        $r5 = virtualinvoke r2.<java.security.cert.X509CRLEntry: byte[] getEncoded()>();

        z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r5);

     label4:
        return z2;

     label5:
        $r6 := @caughtexception;

        return 0;

        catch java.security.cert.CRLException from label3 to label4 with label5;
    }

    public javax.security.auth.x500.X500Principal getCertificateIssuer()
    {
        java.security.cert.X509CRLEntry r0;

        r0 := @this: java.security.cert.X509CRLEntry;

        return null;
    }

    public abstract byte[] getEncoded() throws java.security.cert.CRLException;

    public abstract java.util.Date getRevocationDate();

    public abstract java.math.BigInteger getSerialNumber();

    public abstract boolean hasExtensions();

    public int hashCode()
    {
        java.security.cert.X509CRLEntry r0;
        int i0, i1, $i3;
        byte[] r2;
        byte b2;
        short $s4;
        java.security.cert.CRLException $r3;

        r0 := @this: java.security.cert.X509CRLEntry;

        i0 = 0;

     label1:
        r2 = virtualinvoke r0.<java.security.cert.X509CRLEntry: byte[] getEncoded()>();

     label2:
        i1 = 0;

     label3:
        $i3 = lengthof r2;

        if i1 >= $i3 goto label6;

        b2 = r2[i1];

     label4:
        $s4 = b2 & 255;

        i0 = i0 + $s4;

        i1 = i1 + 1;

        goto label3;

     label5:
        $r3 := @caughtexception;

     label6:
        return i0;

        catch java.security.cert.CRLException from label1 to label2 with label5;
        catch java.security.cert.CRLException from label3 to label4 with label5;
    }

    public abstract java.lang.String toString();
}
