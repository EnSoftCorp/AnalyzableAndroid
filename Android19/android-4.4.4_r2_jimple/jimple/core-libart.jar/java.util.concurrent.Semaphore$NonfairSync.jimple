final class java.util.concurrent.Semaphore$NonfairSync extends java.util.concurrent.Semaphore$Sync
{
    private static final long serialVersionUID;

    void <init>(int)
    {
        java.util.concurrent.Semaphore$NonfairSync r0;
        int i0;

        r0 := @this: java.util.concurrent.Semaphore$NonfairSync;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.concurrent.Semaphore$Sync: void <init>(int)>(i0);

        return;
    }

    protected int tryAcquireShared(int)
    {
        java.util.concurrent.Semaphore$NonfairSync r0;
        int i0, $i1;

        r0 := @this: java.util.concurrent.Semaphore$NonfairSync;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<java.util.concurrent.Semaphore$NonfairSync: int nonfairTryAcquireShared(int)>(i0);

        return $i1;
    }

    public static void <clinit>()
    {
        <java.util.concurrent.Semaphore$NonfairSync: long serialVersionUID> = -2694183684443567898L;

        return;
    }
}
