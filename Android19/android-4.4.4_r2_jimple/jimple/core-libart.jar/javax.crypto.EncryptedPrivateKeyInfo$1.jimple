final class javax.crypto.EncryptedPrivateKeyInfo$1 extends org.apache.harmony.security.asn1.ASN1Sequence
{

    void <init>(org.apache.harmony.security.asn1.ASN1Type[])
    {
        javax.crypto.EncryptedPrivateKeyInfo$1 r0;
        org.apache.harmony.security.asn1.ASN1Type[] r1;

        r0 := @this: javax.crypto.EncryptedPrivateKeyInfo$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Type[];

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Sequence: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r1);

        return;
    }

    protected void getValues(java.lang.Object, java.lang.Object[])
    {
        javax.crypto.EncryptedPrivateKeyInfo$1 r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        javax.crypto.EncryptedPrivateKeyInfo r3;
        java.io.IOException r4, $r13;
        byte[] r5, r6, $r11;
        java.security.AlgorithmParameters $r7, $r8;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r9;
        java.lang.String $r10, $r14;
        java.lang.RuntimeException $r12;

        r0 := @this: javax.crypto.EncryptedPrivateKeyInfo$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        r3 = (javax.crypto.EncryptedPrivateKeyInfo) r1;

     label1:
        $r7 = staticinvoke <javax.crypto.EncryptedPrivateKeyInfo: java.security.AlgorithmParameters access$000(javax.crypto.EncryptedPrivateKeyInfo)>(r3);

        if $r7 != null goto label4;

        r6 = staticinvoke <javax.crypto.EncryptedPrivateKeyInfo: byte[] access$100()>();

     label2:
        $r9 = new org.apache.harmony.security.x509.AlgorithmIdentifier;

        $r10 = staticinvoke <javax.crypto.EncryptedPrivateKeyInfo: java.lang.String access$200(javax.crypto.EncryptedPrivateKeyInfo)>(r3);

        specialinvoke $r9.<org.apache.harmony.security.x509.AlgorithmIdentifier: void <init>(java.lang.String,byte[])>($r10, r6);

        r2[0] = $r9;

        $r11 = staticinvoke <javax.crypto.EncryptedPrivateKeyInfo: byte[] access$300(javax.crypto.EncryptedPrivateKeyInfo)>(r3);

        r2[1] = $r11;

     label3:
        return;

     label4:
        $r8 = staticinvoke <javax.crypto.EncryptedPrivateKeyInfo: java.security.AlgorithmParameters access$000(javax.crypto.EncryptedPrivateKeyInfo)>(r3);

        r5 = virtualinvoke $r8.<java.security.AlgorithmParameters: byte[] getEncoded()>();

     label5:
        r6 = r5;

        goto label2;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

        $r12 = new java.lang.RuntimeException;

        $r14 = virtualinvoke r4.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r12;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
