public final class java.nio.channels.Channels extends java.lang.Object
{

    private void <init>()
    {
        java.nio.channels.Channels r0;

        r0 := @this: java.nio.channels.Channels;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void checkBlocking(java.nio.channels.Channel)
    {
        java.nio.channels.Channel r0;
        boolean $z0, $z1;
        java.nio.channels.SelectableChannel $r1;
        java.nio.channels.IllegalBlockingModeException $r2;

        r0 := @parameter0: java.nio.channels.Channel;

        $z0 = r0 instanceof java.nio.channels.SelectableChannel;

        if $z0 == 0 goto label1;

        $r1 = (java.nio.channels.SelectableChannel) r0;

        $z1 = virtualinvoke $r1.<java.nio.channels.SelectableChannel: boolean isBlocking()>();

        if $z1 != 0 goto label1;

        $r2 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r2.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public static java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)
    {
        java.io.InputStream r0;
        java.nio.channels.Channels$InputStreamChannel $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new java.nio.channels.Channels$InputStreamChannel;

        specialinvoke $r1.<java.nio.channels.Channels$InputStreamChannel: void <init>(java.io.InputStream)>(r0);

        return $r1;
    }

    public static java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        java.nio.channels.Channels$OutputStreamChannel $r1;

        r0 := @parameter0: java.io.OutputStream;

        $r1 = new java.nio.channels.Channels$OutputStreamChannel;

        specialinvoke $r1.<java.nio.channels.Channels$OutputStreamChannel: void <init>(java.io.OutputStream)>(r0);

        return $r1;
    }

    public static java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)
    {
        java.nio.channels.ReadableByteChannel r0;
        java.nio.channels.Channels$ChannelInputStream $r1;

        r0 := @parameter0: java.nio.channels.ReadableByteChannel;

        $r1 = new java.nio.channels.Channels$ChannelInputStream;

        specialinvoke $r1.<java.nio.channels.Channels$ChannelInputStream: void <init>(java.nio.channels.ReadableByteChannel)>(r0);

        return $r1;
    }

    public static java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)
    {
        java.nio.channels.WritableByteChannel r0;
        java.nio.channels.Channels$ChannelOutputStream $r1;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        $r1 = new java.nio.channels.Channels$ChannelOutputStream;

        specialinvoke $r1.<java.nio.channels.Channels$ChannelOutputStream: void <init>(java.nio.channels.WritableByteChannel)>(r0);

        return $r1;
    }

    public static java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String)
    {
        java.nio.channels.ReadableByteChannel r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;
        java.nio.charset.CharsetDecoder $r3;
        java.io.Reader $r4;
        java.lang.NullPointerException $r5;

        r0 := @parameter0: java.nio.channels.ReadableByteChannel;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("charsetName == null");

        throw $r5;

     label1:
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r4 = staticinvoke <java.nio.channels.Channels: java.io.Reader newReader(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)>(r0, $r3, -1);

        return $r4;
    }

    public static java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int)
    {
        java.nio.channels.ReadableByteChannel r0;
        java.nio.channels.Channels$ChannelInputStream $r1;
        java.nio.charset.CharsetDecoder r2;
        int i0;
        java.io.InputStreamReader $r3;

        r0 := @parameter0: java.nio.channels.ReadableByteChannel;

        r2 := @parameter1: java.nio.charset.CharsetDecoder;

        i0 := @parameter2: int;

        $r3 = new java.io.InputStreamReader;

        $r1 = new java.nio.channels.Channels$ChannelInputStream;

        specialinvoke $r1.<java.nio.channels.Channels$ChannelInputStream: void <init>(java.nio.channels.ReadableByteChannel)>(r0);

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.CharsetDecoder)>($r1, r2);

        return $r3;
    }

    public static java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String)
    {
        java.nio.channels.WritableByteChannel r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;
        java.nio.charset.CharsetEncoder $r3;
        java.io.Writer $r4;
        java.lang.NullPointerException $r5;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("charsetName == null");

        throw $r5;

     label1:
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $r4 = staticinvoke <java.nio.channels.Channels: java.io.Writer newWriter(java.nio.channels.WritableByteChannel,java.nio.charset.CharsetEncoder,int)>(r0, $r3, -1);

        return $r4;
    }

    public static java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int)
    {
        java.nio.channels.WritableByteChannel r0;
        java.nio.channels.Channels$ChannelOutputStream $r1;
        java.nio.charset.CharsetEncoder r2;
        int i0;
        java.io.OutputStreamWriter $r3;

        r0 := @parameter0: java.nio.channels.WritableByteChannel;

        r2 := @parameter1: java.nio.charset.CharsetEncoder;

        i0 := @parameter2: int;

        $r3 = new java.io.OutputStreamWriter;

        $r1 = new java.nio.channels.Channels$ChannelOutputStream;

        specialinvoke $r1.<java.nio.channels.Channels$ChannelOutputStream: void <init>(java.nio.channels.WritableByteChannel)>(r0);

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.CharsetEncoder)>($r1, r2);

        return $r3;
    }
}
