class java.security.Signature$SignatureImpl extends java.security.Signature
{
    private java.security.SignatureSpi spiImpl;

    public void <init>(java.security.SignatureSpi, java.security.Provider, java.lang.String)
    {
        java.security.Signature$SignatureImpl r0;
        java.security.SignatureSpi r1;
        java.security.Provider r2;
        java.lang.String r3;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: java.security.SignatureSpi;

        r2 := @parameter1: java.security.Provider;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.security.Signature: void <init>(java.lang.String)>(r3);

        staticinvoke <java.security.Signature: java.security.Provider access$002(java.security.Signature,java.security.Provider)>(r0, r2);

        r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl> = r1;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.security.Signature$SignatureImpl r0, $r3;
        java.security.SignatureSpi $r1, $r4, $r6;
        boolean $z0;
        java.lang.CloneNotSupportedException $r2;
        java.lang.Object $r5;
        java.security.Provider $r7;
        java.lang.String $r8;

        r0 := @this: java.security.Signature$SignatureImpl;

        $r1 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        $z0 = $r1 instanceof java.lang.Cloneable;

        if $z0 == 0 goto label1;

        $r3 = new java.security.Signature$SignatureImpl;

        $r4 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        $r5 = virtualinvoke $r4.<java.security.SignatureSpi: java.lang.Object clone()>();

        $r6 = (java.security.SignatureSpi) $r5;

        $r7 = virtualinvoke r0.<java.security.Signature$SignatureImpl: java.security.Provider getProvider()>();

        $r8 = virtualinvoke r0.<java.security.Signature$SignatureImpl: java.lang.String getAlgorithm()>();

        specialinvoke $r3.<java.security.Signature$SignatureImpl: void <init>(java.security.SignatureSpi,java.security.Provider,java.lang.String)>($r6, $r7, $r8);

        return $r3;

     label1:
        $r2 = new java.lang.CloneNotSupportedException;

        specialinvoke $r2.<java.lang.CloneNotSupportedException: void <init>()>();

        throw $r2;
    }

    protected java.lang.Object engineGetParameter(java.lang.String) throws java.security.InvalidParameterException
    {
        java.security.Signature$SignatureImpl r0;
        java.lang.String r1;
        java.security.SignatureSpi $r2;
        java.lang.Object $r3;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        $r3 = virtualinvoke $r2.<java.security.SignatureSpi: java.lang.Object engineGetParameter(java.lang.String)>(r1);

        return $r3;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        java.security.Signature$SignatureImpl r0;
        java.security.PrivateKey r1;
        java.security.SignatureSpi $r2;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: java.security.PrivateKey;

        $r2 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        virtualinvoke $r2.<java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey)>(r1);

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        java.security.Signature$SignatureImpl r0;
        java.security.PublicKey r1;
        java.security.SignatureSpi $r2;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: java.security.PublicKey;

        $r2 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        virtualinvoke $r2.<java.security.SignatureSpi: void engineInitVerify(java.security.PublicKey)>(r1);

        return;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object) throws java.security.InvalidParameterException
    {
        java.security.Signature$SignatureImpl r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.security.SignatureSpi $r3;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        virtualinvoke $r3.<java.security.SignatureSpi: void engineSetParameter(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        java.security.Signature$SignatureImpl r0;
        java.security.SignatureSpi $r1;
        byte[] $r2;

        r0 := @this: java.security.Signature$SignatureImpl;

        $r1 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        $r2 = virtualinvoke $r1.<java.security.SignatureSpi: byte[] engineSign()>();

        return $r2;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        java.security.Signature$SignatureImpl r0;
        byte b0;
        java.security.SignatureSpi $r1;

        r0 := @this: java.security.Signature$SignatureImpl;

        b0 := @parameter0: byte;

        $r1 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        virtualinvoke $r1.<java.security.SignatureSpi: void engineUpdate(byte)>(b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        java.security.Signature$SignatureImpl r0;
        byte[] r1;
        int i0, i1;
        java.security.SignatureSpi $r2;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        virtualinvoke $r2.<java.security.SignatureSpi: void engineUpdate(byte[],int,int)>(r1, i0, i1);

        return;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        java.security.Signature$SignatureImpl r0;
        byte[] r1;
        java.security.SignatureSpi $r2;
        boolean $z0;

        r0 := @this: java.security.Signature$SignatureImpl;

        r1 := @parameter0: byte[];

        $r2 = r0.<java.security.Signature$SignatureImpl: java.security.SignatureSpi spiImpl>;

        $z0 = virtualinvoke $r2.<java.security.SignatureSpi: boolean engineVerify(byte[])>(r1);

        return $z0;
    }
}
