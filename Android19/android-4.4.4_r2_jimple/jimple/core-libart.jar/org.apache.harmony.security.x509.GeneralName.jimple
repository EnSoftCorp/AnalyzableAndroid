public final class org.apache.harmony.security.x509.GeneralName extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Choice ASN1;
    public static final int DIR_NAME;
    public static final int DNS_NAME;
    public static final int EDIP_NAME;
    public static final int IP_ADDR;
    private static final org.apache.harmony.security.asn1.ASN1SequenceOf NAME_ASN1;
    public static final int OTHER_NAME;
    public static final int REG_ID;
    public static final int RFC822_NAME;
    public static final int UR_ID;
    public static final int X400_ADDR;
    private static org.apache.harmony.security.asn1.ASN1Type[] nameASN1;
    private byte[] encoding;
    private java.lang.Object name;
    private byte[] name_encoding;
    private int tag;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Type[] r0, $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r17;
        org.apache.harmony.security.asn1.ASN1Sequence $r2, $r10, $r14, $r22, $r28, $r35;
        org.apache.harmony.security.asn1.ASN1StringType $r4, $r6, $r8, $r25, $r26, $r34;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r12, $r20, $r32;
        org.apache.harmony.security.asn1.ASN1OctetString $r18, $r38;
        org.apache.harmony.security.asn1.ASN1Oid $r19, $r40;
        org.apache.harmony.security.x509.GeneralName$1 $r21;
        org.apache.harmony.security.asn1.ASN1Implicit $r23, $r24, $r27, $r29, $r30, $r31, $r33, $r36, $r37;
        org.apache.harmony.security.x509.GeneralName$2 $r39;

        <org.apache.harmony.security.x509.GeneralName: int X400_ADDR> = 3;

        <org.apache.harmony.security.x509.GeneralName: int UR_ID> = 6;

        <org.apache.harmony.security.x509.GeneralName: int RFC822_NAME> = 1;

        <org.apache.harmony.security.x509.GeneralName: int REG_ID> = 8;

        <org.apache.harmony.security.x509.GeneralName: int OTHER_NAME> = 0;

        <org.apache.harmony.security.x509.GeneralName: int IP_ADDR> = 7;

        <org.apache.harmony.security.x509.GeneralName: int EDIP_NAME> = 5;

        <org.apache.harmony.security.x509.GeneralName: int DNS_NAME> = 2;

        <org.apache.harmony.security.x509.GeneralName: int DIR_NAME> = 4;

        $r1 = newarray (org.apache.harmony.security.asn1.ASN1Type)[9];

        <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1> = $r1;

        $r3 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r2 = <org.apache.harmony.security.x509.OtherName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r3[0] = $r2;

        $r5 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r4 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r5[1] = $r4;

        $r7 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r6 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r7[2] = $r6;

        $r9 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r8 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r9[6] = $r8;

        $r11 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r10 = <org.apache.harmony.security.x509.ORAddress: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r11[3] = $r10;

        $r13 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r12 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r13[4] = $r12;

        $r15 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r14 = <org.apache.harmony.security.x509.EDIPartyName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r15[5] = $r14;

        $r16 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r18 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        $r16[7] = $r18;

        $r17 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r19 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        $r17[8] = $r19;

        $r21 = new org.apache.harmony.security.x509.GeneralName$1;

        $r20 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        specialinvoke $r21.<org.apache.harmony.security.x509.GeneralName$1: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r20);

        <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1SequenceOf NAME_ASN1> = $r21;

        r0 = newarray (org.apache.harmony.security.asn1.ASN1Type)[9];

        $r23 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r22 = <org.apache.harmony.security.x509.OtherName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r23.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r22);

        r0[0] = $r23;

        $r24 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r25 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        specialinvoke $r24.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(1, $r25);

        r0[1] = $r24;

        $r27 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r26 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        specialinvoke $r27.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(2, $r26);

        r0[2] = $r27;

        $r29 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r28 = <org.apache.harmony.security.x509.ORAddress: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r29.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(3, $r28);

        r0[3] = $r29;

        $r31 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r32 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1SequenceOf NAME_ASN1>;

        specialinvoke $r31.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(4, $r32);

        r0[4] = $r31;

        $r30 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r35 = <org.apache.harmony.security.x509.EDIPartyName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r30.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(5, $r35);

        r0[5] = $r30;

        $r33 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r34 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        specialinvoke $r33.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(6, $r34);

        r0[6] = $r33;

        $r36 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r38 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        specialinvoke $r36.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(7, $r38);

        r0[7] = $r36;

        $r37 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r40 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        specialinvoke $r37.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(8, $r40);

        r0[8] = $r37;

        $r39 = new org.apache.harmony.security.x509.GeneralName$2;

        specialinvoke $r39.<org.apache.harmony.security.x509.GeneralName$2: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r0);

        <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Choice ASN1> = $r39;

        return;
    }

    public void <init>(int, java.lang.String) throws java.io.IOException
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int i0;
        java.lang.String r1, $r7, $r15;
        java.io.IOException $r2, $r11, $r17;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r12, $r13, $r14, $r16;
        int[] $r8;
        byte[] $r9;
        org.apache.harmony.security.x501.Name $r10;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("name == null");

        throw $r17;

     label1:
        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = i0;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label8;
            case 5: goto label3;
            case 6: goto label5;
            case 7: goto label9;
            case 8: goto label7;
            default: goto label2;
        };

     label2:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type: [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label3:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown string representation for type [");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label4:
        staticinvoke <org.apache.harmony.security.x509.GeneralName: void checkDNS(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;

     label5:
        staticinvoke <org.apache.harmony.security.x509.GeneralName: void checkURI(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;

     label6:
        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;

     label7:
        $r8 = staticinvoke <org.apache.harmony.security.x509.GeneralName: int[] oidStrToInts(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r8;

        return;

     label8:
        $r10 = new org.apache.harmony.security.x501.Name;

        specialinvoke $r10.<org.apache.harmony.security.x501.Name: void <init>(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r10;

        return;

     label9:
        $r9 = staticinvoke <org.apache.harmony.security.x509.GeneralName: byte[] ipStrToBytes(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r9;

        return;
    }

    public void <init>(int, byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int i0, $i1, $i2;
        byte[] r1, $r7, $r8, $r10;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.apache.harmony.security.asn1.ASN1Type[] $r9;
        org.apache.harmony.security.asn1.ASN1Type $r11;
        java.lang.Object $r12;
        java.lang.NullPointerException $r13;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r13;

     label1:
        if i0 < 0 goto label2;

        if i0 <= 8 goto label3;

     label2:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GeneralName: unknown tag: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label3:
        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = i0;

        $i1 = lengthof r1;

        $r7 = newarray (byte)[$i1];

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding> = $r7;

        $r8 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r8, 0, $i2);

        $r9 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r11 = $r9[i0];

        $r10 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        $r12 = virtualinvoke $r11.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r10);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r12;

        return;
    }

    public void <init>(org.apache.harmony.security.x501.Name)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x501.Name r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x501.Name;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 4;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.EDIPartyName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x509.EDIPartyName r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.EDIPartyName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 5;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.ORAddress)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x509.ORAddress r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.ORAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 3;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.OtherName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x509.OtherName r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.OtherName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 0;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(byte[]) throws java.lang.IllegalArgumentException
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 7;

        $i0 = lengthof r1;

        $r2 = newarray (byte)[$i0];

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r2;

        $r3 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    static java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        return $r1;
    }

    static int access$100(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        return $i0;
    }

    static byte[] access$202(org.apache.harmony.security.x509.GeneralName, byte[])
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] r1;

        r0 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter1: byte[];

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding> = r1;

        return r1;
    }

    public static void checkDNS(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, $r8, $r11, $r17;
        int i0, i1, $i3;
        boolean z0;
        char c2, $c4;
        java.util.Locale $r2;
        java.io.IOException $r3, $r7, $r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r12, $r13, $r15, $r16;

        r0 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = 1;

        i1 = 0;

     label01:
        if i1 >= i0 goto label11;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if z0 == 0 goto label06;

        if c2 > 122 goto label02;

        if c2 >= 97 goto label04;

     label02:
        if c2 < 48 goto label03;

        if c2 <= 57 goto label04;

     label03:
        if c2 == 42 goto label04;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DNS name must start with a letter: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label04:
        z0 = 0;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        if c2 < 97 goto label07;

        if c2 <= 122 goto label09;

     label07:
        if c2 < 48 goto label08;

        if c2 <= 57 goto label09;

     label08:
        if c2 == 45 goto label09;

        if c2 == 46 goto label09;

        if c2 == 42 goto label09;

        $r7 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect DNS name: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label09:
        if c2 != 46 goto label05;

        $i3 = i1 - 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if $c4 != 45 goto label10;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect DNS name: label ends with \'-\': ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label10:
        z0 = 1;

        goto label05;

     label11:
        return;
    }

    public static void checkURI(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r4, $r9, $r10, $r14, $r20;
        java.net.URI r1, $r3;
        java.net.URISyntaxException r2, $r17;
        java.io.IOException $r5, $r11, $r16, $r22;
        java.lang.StringBuilder $r6, $r7, $r8, $r12, $r13, $r15, $r18, $r19, $r21;
        boolean $z0, $z1;
        java.lang.Throwable $r23;

        r0 := @parameter0: java.lang.String;

     label1:
        $r3 = new java.net.URI;

        specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>(r0);

        r1 = $r3;

        $r4 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>();

        if $r4 == null goto label2;

        $r10 = virtualinvoke r1.<java.net.URI: java.lang.String getRawSchemeSpecificPart()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No scheme or scheme-specific-part in uniformResourceIdentifier: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        $r17 := @caughtexception;

        r2 = $r17;

        $r16 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad representation of uniformResourceIdentifier: ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r20);

        $r23 = virtualinvoke $r16.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        $r22 = (java.io.IOException) $r23;

        throw $r22;

     label4:
        $z1 = virtualinvoke r1.<java.net.URI: boolean isAbsolute()>();

        if $z1 != 0 goto label5;

        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative uniformResourceIdentifier: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label5:
        return;

        catch java.net.URISyntaxException from label1 to label2 with label3;
        catch java.net.URISyntaxException from label2 to label3 with label3;
        catch java.net.URISyntaxException from label4 to label5 with label3;
    }

    public static java.lang.String ipBytesToStr(byte[])
    {
        byte[] r0;
        java.lang.String r2, $r8, $r10;
        java.net.InetAddress $r3;
        java.net.UnknownHostException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @parameter0: byte[];

     label1:
        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>(null, r0);

        r2 = virtualinvoke $r3.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected IP address: ");

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    public static byte[] ipStrToBytes(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r7;
        boolean $z0;
        java.net.InetAddress $r1;
        byte[] $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <java.net.InetAddress: boolean isNumeric(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an IP address: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.net.InetAddress: byte[] getAddress()>();

        return $r2;
    }

    public static int[] oidStrToInts(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r6, $r11, $r17, $r20;
        int i0, i1, i2, i3, i4, i5, $i7, $i9, $i10, $i12, $i13;
        int[] r1, $r2;
        char c6, $c8, $c11;
        java.io.IOException $r3, $r8, $r14, $r18;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r19, $r21, $r22;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i7 = i0 - 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        if $c8 != 46 goto label01;

        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label01:
        $i9 = i0 / 2;

        $i10 = 1 + $i9;

        r1 = newarray (int)[$i10];

        i1 = 0;

        i2 = 0;

     label02:
        if i1 >= i0 goto label11;

        i4 = 0;

        i5 = i1;

     label03:
        if i1 >= i0 goto label04;

        c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if c6 < 48 goto label04;

        if c6 <= 57 goto label05;

     label04:
        if i1 != i5 goto label06;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label05:
        $i13 = i4 * 10;

        $i12 = c6 - 48;

        i4 = $i13 + $i12;

        i1 = i1 + 1;

        goto label03;

     label06:
        i3 = i2 + 1;

        r1[i2] = i4;

        if i1 != i0 goto label08;

     label07:
        if i3 >= 2 goto label10;

        $r3 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OID should consist of no less than 2 components: ");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label08:
        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if $c11 == 46 goto label09;

        $r8 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label09:
        i1 = i1 + 1;

        i2 = i3;

        goto label02;

     label10:
        $r2 = staticinvoke <java.util.Arrays: int[] copyOfRange(int[],int,int)>(r1, 0, i3);

        return $r2;

     label11:
        i3 = i2;

        goto label07;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.security.x509.GeneralName r0, r2;
        java.lang.Object r1, $r3, $r5, $r9, $r12, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2;
        int[] $r4, $r6, $r7, $r8;
        byte[] $r10, $r11, $r13, $r14, $r19, $r20;
        java.lang.String $r17, $r18;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.harmony.security.x509.GeneralName;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.apache.harmony.security.x509.GeneralName) r1;

        $i1 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $i0 = r2.<org.apache.harmony.security.x509.GeneralName: int tag>;

        if $i1 != $i0 goto label1;

        $i2 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i2)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label7;
            case 8: goto label6;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        $r20 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r19 = virtualinvoke r2.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r20, $r19);

        return $z4;

     label5:
        $r15 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r17 = (java.lang.String) $r15;

        $r16 = virtualinvoke r2.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        $r18 = (java.lang.String) $r16;

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r18);

        return $z3;

     label6:
        $r3 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r4 = (int[]) $r3;

        $r8 = (int[]) $r4;

        $r5 = r2.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r6 = (int[]) $r5;

        $r7 = (int[]) $r6;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r8, $r7);

        return $z1;

     label7:
        $r9 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r10 = (byte[]) $r9;

        $r13 = (byte[]) $r10;

        $r12 = r2.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r11 = (byte[]) $r12;

        $r14 = (byte[]) $r11;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, $r14);

        return $z2;
    }

    public java.util.List getAsList()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.util.ArrayList r1, $r2;
        int $i0, $i1;
        java.lang.Integer $r3;
        java.util.List $r4;
        java.lang.Object $r5, $r9, $r14, $r17, $r20, $r22, $r24;
        int[] $r6, $r7;
        java.lang.String $r8, $r12, $r18;
        byte[] $r10, $r11, $r15, $r21, $r23;
        org.apache.harmony.security.x509.EDIPartyName $r13;
        org.apache.harmony.security.x501.Name $r16;
        org.apache.harmony.security.x509.ORAddress $r19;
        org.apache.harmony.security.x509.OtherName $r25;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label3;
            case 7: goto label8;
            case 8: goto label4;
            default: goto label1;
        };

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return $r4;

     label2:
        $r24 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r25 = (org.apache.harmony.security.x509.OtherName) $r24;

        $r23 = virtualinvoke $r25.<org.apache.harmony.security.x509.OtherName: byte[] getEncoded()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        goto label1;

     label3:
        $r22 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        goto label1;

     label4:
        $r5 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r6 = (int[]) $r5;

        $r7 = (int[]) $r6;

        $r8 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString(int[])>($r7);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label5:
        $r20 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r19 = (org.apache.harmony.security.x509.ORAddress) $r20;

        $r21 = virtualinvoke $r19.<org.apache.harmony.security.x509.ORAddress: byte[] getEncoded()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label1;

     label6:
        $r17 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r16 = (org.apache.harmony.security.x501.Name) $r17;

        $r18 = virtualinvoke $r16.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        goto label1;

     label7:
        $r14 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r13 = (org.apache.harmony.security.x509.EDIPartyName) $r14;

        $r15 = virtualinvoke $r13.<org.apache.harmony.security.x509.EDIPartyName: byte[] getEncoded()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label1;

     label8:
        $r9 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r10 = (byte[]) $r9;

        $r11 = (byte[]) $r10;

        $r12 = staticinvoke <org.apache.harmony.security.x509.GeneralName: java.lang.String ipBytesToStr(byte[])>($r11);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Choice $r3;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Choice: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding>;

        return $r2;
    }

    public byte[] getEncodedName()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] $r1, $r2, $r6;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Type[] $r3;
        java.lang.Object $r4;
        org.apache.harmony.security.asn1.ASN1Type $r5;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $r5 = $r3[$i0];

        $r4 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r6 = virtualinvoke $r5.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r4);

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding> = $r6;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        return $r2;
    }

    public java.lang.Object getName()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        return $r1;
    }

    public int getTag()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        return $i0;
    }

    public int hashCode()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;
        byte[] $r2;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            default: goto label1;
        };

     label1:
        $i1 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i1;

     label2:
        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i2;

     label3:
        $r2 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $i3 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r2);

        return $i3;
    }

    public boolean isAcceptable(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.GeneralName r0, r1;
        byte[] r2, r3, $r12, $r13, $r38, $r39;
        int i0, i1, i2, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i15, $i16, $i19, $i20;
        short s3, s4, s5;
        java.lang.String r4, r5, r6, r7, r8, r9, $r17, $r18, $r24, $r26, $r28, $r30, $r33, $r36, $r37;
        java.lang.Object $r10, $r11, $r14, $r15, $r20, $r21, $r31, $r34;
        byte $b14, $b17, $b18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Locale $r16, $r19, $r25, $r29, $r32, $r35;
        java.lang.StringBuilder $r22, $r23, $r27;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $i11 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $i10 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: int getTag()>();

        if $i11 == $i10 goto label01;

        return 0;

     label01:
        $i12 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i12)
        {
            case 0: goto label20;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label20;
            case 4: goto label20;
            case 5: goto label20;
            case 6: goto label06;
            case 7: goto label12;
            case 8: goto label20;
            default: goto label02;
        };

     label02:
        return 1;

     label03:
        $r34 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        $r36 = (java.lang.String) $r34;

        $r35 = <java.util.Locale: java.util.Locale US>;

        $r30 = virtualinvoke $r36.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r35);

        $r31 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r33 = (java.lang.String) $r31;

        $r32 = <java.util.Locale: java.util.Locale US>;

        $r37 = virtualinvoke $r33.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r32);

        $z7 = virtualinvoke $r30.<java.lang.String: boolean endsWith(java.lang.String)>($r37);

        return $z7;

     label04:
        $r21 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        r9 = (java.lang.String) $r21;

        $r20 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        r8 = (java.lang.String) $r20;

        $z4 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r8);

        if $z4 == 0 goto label05;

        return 1;

     label05:
        $r25 = <java.util.Locale: java.util.Locale US>;

        $r24 = virtualinvoke r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r25);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r29 = <java.util.Locale: java.util.Locale US>;

        $r28 = virtualinvoke r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r29);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = virtualinvoke $r24.<java.lang.String: boolean endsWith(java.lang.String)>($r26);

        return $z5;

     label06:
        $r14 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        r4 = (java.lang.String) $r14;

        $i19 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("://");

        i6 = 3 + $i19;

        i7 = virtualinvoke r4.<java.lang.String: int indexOf(int,int)>(47, i6);

        if i7 != -1 goto label09;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(i6);

     label07:
        $r15 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        r6 = (java.lang.String) $r15;

        $i20 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("://");

        i8 = 3 + $i20;

        i9 = virtualinvoke r6.<java.lang.String: int indexOf(int,int)>(47, i8);

        if i9 != -1 goto label10;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(i8);

     label08:
        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z1 == 0 goto label11;

        $r16 = <java.util.Locale: java.util.Locale US>;

        $r17 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

        $r19 = <java.util.Locale: java.util.Locale US>;

        $r18 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r19);

        $z3 = virtualinvoke $r17.<java.lang.String: boolean endsWith(java.lang.String)>($r18);

        return $z3;

     label09:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(i6, i7);

        goto label07;

     label10:
        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(i8, i9);

        goto label08;

     label11:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);

        return $z2;

     label12:
        $r10 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r12 = (byte[]) $r10;

        r2 = (byte[]) $r12;

        $r11 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        $r13 = (byte[]) $r11;

        r3 = (byte[]) $r13;

        i0 = lengthof r2;

        if i0 == 4 goto label13;

        if i0 == 8 goto label13;

        if i0 == 16 goto label13;

        if i0 == 32 goto label13;

        return 0;

     label13:
        i1 = lengthof r3;

        if i0 != i1 goto label14;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, r3);

        return $z0;

     label14:
        $i13 = i1 * 2;

        if i0 != $i13 goto label19;

        i2 = 0;

     label15:
        $i15 = lengthof r3;

        if i2 >= $i15 goto label18;

        $b14 = r3[i2];

        s3 = 255 & $b14;

        $b17 = r2[i2];

        s4 = 255 & $b17;

        $i16 = i2 + i1;

        $b18 = r2[$i16];

        s5 = 255 & $b18;

        if s3 < s4 goto label16;

        if s3 <= s5 goto label17;

     label16:
        return 0;

     label17:
        i2 = i2 + 1;

        goto label15;

     label18:
        return 1;

     label19:
        return 0;

     label20:
        $r38 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r39 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $z6 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r38, $r39);

        return $z6;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0;
        java.lang.StringBuilder $r1, $r2, $r7, $r9, $r10, $r16, $r17, $r18, $r19, $r21, $r24, $r25, $r27, $r30, $r31, $r37, $r38, $r39, $r40, $r41, $r44, $r46, $r48, $r50, $r53, $r54, $r56;
        java.lang.Object $r3, $r11, $r20, $r29, $r45, $r49;
        int[] $r4, $r5;
        java.lang.String $r6, $r8, $r14, $r15, $r22, $r26, $r28, $r32, $r34, $r36, $r42, $r43, $r47, $r51, $r55;
        byte[] $r12, $r13, $r23, $r35, $r52;
        org.apache.harmony.security.x501.Name $r33;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label05;
            case 7: goto label10;
            case 8: goto label06;
            default: goto label01;
        };

     label01:
        return "";

     label02:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("otherName[0]: ");

        $r52 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r51 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r52);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r55;

     label03:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rfc822Name[1]: ");

        $r49 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r47;

     label04:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dNSName[2]: ");

        $r45 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r43;

     label05:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uniformResourceIdentifier[6]: ");

        $r20 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label06:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registeredID[8]: ");

        $r3 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r4 = (int[]) $r3;

        $r5 = (int[]) $r4;

        $r6 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString(int[])>($r5);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label07:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x400Address[3]: ");

        $r35 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r36 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r35);

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r42;

     label08:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("directoryName[4]: ");

        $r29 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r33 = (org.apache.harmony.security.x501.Name) $r29;

        $r34 = virtualinvoke $r33.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r32;

     label09:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ediPartyName[5]: ");

        $r23 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r26 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r28;

     label10:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iPAddress[7]: ");

        $r11 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r12 = (byte[]) $r11;

        $r13 = (byte[]) $r12;

        $r14 = staticinvoke <org.apache.harmony.security.x509.GeneralName: java.lang.String ipBytesToStr(byte[])>($r13);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
