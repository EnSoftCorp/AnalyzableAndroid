final class java.util.WeakHashMap$Entry extends java.lang.ref.WeakReference implements java.util.Map$Entry
{
    final int hash;
    boolean isNull;
    java.util.WeakHashMap$Entry next;
    java.lang.Object value;

    void <init>(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue)
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object r1, r2;
        java.lang.ref.ReferenceQueue r3;
        boolean z0, z1;
        int i0;

        r0 := @this: java.util.WeakHashMap$Entry;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.ref.ReferenceQueue;

        specialinvoke r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r3);

        if r1 != null goto label3;

        z0 = 1;

     label1:
        r0.<java.util.WeakHashMap$Entry: boolean isNull> = z0;

        z1 = r0.<java.util.WeakHashMap$Entry: boolean isNull>;

        i0 = 0;

        if z1 == 0 goto label4;

     label2:
        r0.<java.util.WeakHashMap$Entry: int hash> = i0;

        r0.<java.util.WeakHashMap$Entry: java.lang.Object value> = r2;

        return;

     label3:
        z0 = 0;

        goto label1;

     label4:
        i0 = staticinvoke <java.util.Collections: int secondaryHash(java.lang.Object)>(r1);

        goto label2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object r1, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.util.Map$Entry r2;
        boolean $z0, $z1, $z2;

        r0 := @this: java.util.WeakHashMap$Entry;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        r3 = specialinvoke r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if r3 != null goto label5;

        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        if r3 != $r10 goto label1;

     label3:
        $r5 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        if $r5 != null goto label6;

        $r8 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r8 != $r9 goto label1;

     label4:
        return 1;

     label5:
        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        goto label3;

     label6:
        $r6 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label1;

        goto label4;
    }

    public java.lang.Object getKey()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.WeakHashMap$Entry;

        $r1 = specialinvoke r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object $r1;

        r0 := @this: java.util.WeakHashMap$Entry;

        $r1 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        return $r1;
    }

    public int hashCode()
    {
        java.util.WeakHashMap$Entry r0;
        int i0, i1, $i2;
        java.lang.Object $r1, $r2;

        r0 := @this: java.util.WeakHashMap$Entry;

        i0 = r0.<java.util.WeakHashMap$Entry: int hash>;

        $r1 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        if $r1 != null goto label2;

        i1 = 0;

     label1:
        $i2 = i1 + i0;

        return $i2;

     label2:
        $r2 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.Object r1, r2;

        r0 := @this: java.util.WeakHashMap$Entry;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        r0.<java.util.WeakHashMap$Entry: java.lang.Object value> = r1;

        return r2;
    }

    public java.lang.String toString()
    {
        java.util.WeakHashMap$Entry r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;

        r0 := @this: java.util.WeakHashMap$Entry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = r0.<java.util.WeakHashMap$Entry: java.lang.Object value>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
