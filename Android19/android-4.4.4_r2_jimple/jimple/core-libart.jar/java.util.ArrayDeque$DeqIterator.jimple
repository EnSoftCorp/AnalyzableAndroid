class java.util.ArrayDeque$DeqIterator extends java.lang.Object implements java.util.Iterator
{
    private int cursor;
    private int fence;
    private int lastRet;
    final java.util.ArrayDeque this$0;

    private void <init>(java.util.ArrayDeque)
    {
        java.util.ArrayDeque$DeqIterator r0;
        java.util.ArrayDeque r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: java.util.ArrayDeque$DeqIterator;

        r1 := @parameter0: java.util.ArrayDeque;

        r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $i0 = staticinvoke <java.util.ArrayDeque: int access$200(java.util.ArrayDeque)>($r2);

        r0.<java.util.ArrayDeque$DeqIterator: int cursor> = $i0;

        $r3 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $i1 = staticinvoke <java.util.ArrayDeque: int access$300(java.util.ArrayDeque)>($r3);

        r0.<java.util.ArrayDeque$DeqIterator: int fence> = $i1;

        r0.<java.util.ArrayDeque$DeqIterator: int lastRet> = -1;

        return;
    }

    void <init>(java.util.ArrayDeque, java.util.ArrayDeque$1)
    {
        java.util.ArrayDeque$DeqIterator r0;
        java.util.ArrayDeque r1;
        java.util.ArrayDeque$1 r2;

        r0 := @this: java.util.ArrayDeque$DeqIterator;

        r1 := @parameter0: java.util.ArrayDeque;

        r2 := @parameter1: java.util.ArrayDeque$1;

        specialinvoke r0.<java.util.ArrayDeque$DeqIterator: void <init>(java.util.ArrayDeque)>(r1);

        return;
    }

    public boolean hasNext()
    {
        java.util.ArrayDeque$DeqIterator r0;
        int $i0, $i1;

        r0 := @this: java.util.ArrayDeque$DeqIterator;

        $i1 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;

        $i0 = r0.<java.util.ArrayDeque$DeqIterator: int fence>;

        if $i1 == $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        java.util.ArrayDeque$DeqIterator r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.ArrayDeque $r2, $r4, $r6;
        java.lang.Object[] $r3, $r7;
        java.util.ConcurrentModificationException $r5;
        java.util.NoSuchElementException $r8;

        r0 := @this: java.util.ArrayDeque$DeqIterator;

        $i1 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;

        $i0 = r0.<java.util.ArrayDeque$DeqIterator: int fence>;

        if $i1 != $i0 goto label1;

        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;

     label1:
        $r2 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $r3 = staticinvoke <java.util.ArrayDeque: java.lang.Object[] access$400(java.util.ArrayDeque)>($r2);

        $i2 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;

        r1 = $r3[$i2];

        $r4 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $i3 = staticinvoke <java.util.ArrayDeque: int access$300(java.util.ArrayDeque)>($r4);

        $i4 = r0.<java.util.ArrayDeque$DeqIterator: int fence>;

        if $i3 != $i4 goto label2;

        if r1 != null goto label3;

     label2:
        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label3:
        $i5 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;

        r0.<java.util.ArrayDeque$DeqIterator: int lastRet> = $i5;

        $i6 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;

        $i7 = 1 + $i6;

        $r6 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $r7 = staticinvoke <java.util.ArrayDeque: java.lang.Object[] access$400(java.util.ArrayDeque)>($r6);

        $i8 = lengthof $r7;

        $i10 = -1 + $i8;

        $i9 = $i7 & $i10;

        r0.<java.util.ArrayDeque$DeqIterator: int cursor> = $i9;

        return r1;
    }

    public void remove()
    {
        java.util.ArrayDeque$DeqIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.ArrayDeque $r1, $r2, $r4;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.IllegalStateException $r5;

        r0 := @this: java.util.ArrayDeque$DeqIterator;

        $i0 = r0.<java.util.ArrayDeque$DeqIterator: int lastRet>;

        if $i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $i1 = r0.<java.util.ArrayDeque$DeqIterator: int lastRet>;

        $z0 = staticinvoke <java.util.ArrayDeque: boolean access$500(java.util.ArrayDeque,int)>($r1, $i1);

        if $z0 == 0 goto label2;

        $i2 = r0.<java.util.ArrayDeque$DeqIterator: int cursor>;

        $i3 = -1 + $i2;

        $r2 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $r3 = staticinvoke <java.util.ArrayDeque: java.lang.Object[] access$400(java.util.ArrayDeque)>($r2);

        $i4 = lengthof $r3;

        $i5 = -1 + $i4;

        $i6 = $i3 & $i5;

        r0.<java.util.ArrayDeque$DeqIterator: int cursor> = $i6;

        $r4 = r0.<java.util.ArrayDeque$DeqIterator: java.util.ArrayDeque this$0>;

        $i7 = staticinvoke <java.util.ArrayDeque: int access$300(java.util.ArrayDeque)>($r4);

        r0.<java.util.ArrayDeque$DeqIterator: int fence> = $i7;

     label2:
        r0.<java.util.ArrayDeque$DeqIterator: int lastRet> = -1;

        return;
    }
}
