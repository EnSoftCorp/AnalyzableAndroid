public abstract class org.apache.harmony.security.asn1.ASN1StringType extends org.apache.harmony.security.asn1.ASN1Type
{
    public static final org.apache.harmony.security.asn1.ASN1StringType BMPSTRING;
    public static final org.apache.harmony.security.asn1.ASN1StringType GENERALSTRING;
    public static final org.apache.harmony.security.asn1.ASN1StringType IA5STRING;
    public static final org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING;
    public static final org.apache.harmony.security.asn1.ASN1StringType TELETEXSTRING;
    public static final org.apache.harmony.security.asn1.ASN1StringType UNIVERSALSTRING;
    public static final org.apache.harmony.security.asn1.ASN1StringType UTF8STRING;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1StringType$1 $r0;
        org.apache.harmony.security.asn1.ASN1StringType$2 $r1;
        org.apache.harmony.security.asn1.ASN1StringType$3 $r2;
        org.apache.harmony.security.asn1.ASN1StringType$4 $r3;
        org.apache.harmony.security.asn1.ASN1StringType$5 $r4;
        org.apache.harmony.security.asn1.ASN1StringType$6 $r5;
        org.apache.harmony.security.asn1.ASN1StringType$7 $r6;

        $r0 = new org.apache.harmony.security.asn1.ASN1StringType$1;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1StringType$1: void <init>(int)>(30);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType BMPSTRING> = $r0;

        $r1 = new org.apache.harmony.security.asn1.ASN1StringType$2;

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1StringType$2: void <init>(int)>(22);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING> = $r1;

        $r2 = new org.apache.harmony.security.asn1.ASN1StringType$3;

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1StringType$3: void <init>(int)>(27);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType GENERALSTRING> = $r2;

        $r3 = new org.apache.harmony.security.asn1.ASN1StringType$4;

        specialinvoke $r3.<org.apache.harmony.security.asn1.ASN1StringType$4: void <init>(int)>(19);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING> = $r3;

        $r4 = new org.apache.harmony.security.asn1.ASN1StringType$5;

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1StringType$5: void <init>(int)>(20);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType TELETEXSTRING> = $r4;

        $r5 = new org.apache.harmony.security.asn1.ASN1StringType$6;

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1StringType$6: void <init>(int)>(28);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UNIVERSALSTRING> = $r5;

        $r6 = new org.apache.harmony.security.asn1.ASN1StringType$7;

        specialinvoke $r6.<org.apache.harmony.security.asn1.ASN1StringType$7: void <init>(int)>(12);

        <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UTF8STRING> = $r6;

        return;
    }

    public void <init>(int)
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        int i0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Type: void <init>(int)>(i0);

        return;
    }

    public final boolean checkTag(int)
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

        if $i1 == i0 goto label1;

        $i2 = r0.<org.apache.harmony.security.asn1.ASN1StringType: int constrId>;

        if $i2 != i0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: void readString(org.apache.harmony.security.asn1.ASN1StringType)>(r0);

        $z0 = r1.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>(r1);

        return $r2;
    }

    public void encodeASN(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        int $i0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $i0 = r0.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeTag(int)>($i0);

        virtualinvoke r0.<org.apache.harmony.security.asn1.ASN1StringType: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)>(r1);

        return;
    }

    public void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeString()>();

        return;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        java.lang.String $r2;
        java.nio.charset.Charset $r3;
        int $i0, $i1;
        byte[] $r4;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r2 = new java.lang.String;

        $r4 = r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i1 = r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i0 = r1.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r4, $i1, $i0, $r3);

        return $r2;
    }

    public void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1StringType r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        byte[] r2;
        java.lang.Object $r3;
        java.nio.charset.Charset $r4;
        java.lang.String $r5;
        int $i0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1StringType;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r3 = r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r5 = (java.lang.String) $r3;

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r2 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content> = r2;

        $i0 = lengthof r2;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: int length> = $i0;

        return;
    }
}
