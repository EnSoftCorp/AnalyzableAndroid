public abstract class java.text.DateFormat extends java.text.Format
{
    public static final int AM_PM_FIELD;
    public static final int DATE_FIELD;
    public static final int DAY_OF_WEEK_FIELD;
    public static final int DAY_OF_WEEK_IN_MONTH_FIELD;
    public static final int DAY_OF_YEAR_FIELD;
    public static final int DEFAULT;
    public static final int ERA_FIELD;
    public static final int FULL;
    public static final int HOUR0_FIELD;
    public static final int HOUR1_FIELD;
    public static final int HOUR_OF_DAY0_FIELD;
    public static final int HOUR_OF_DAY1_FIELD;
    public static final int LONG;
    public static final int MEDIUM;
    public static final int MILLISECOND_FIELD;
    public static final int MINUTE_FIELD;
    public static final int MONTH_FIELD;
    public static final int SECOND_FIELD;
    public static final int SHORT;
    public static final int TIMEZONE_FIELD;
    public static final int WEEK_OF_MONTH_FIELD;
    public static final int WEEK_OF_YEAR_FIELD;
    public static final int YEAR_FIELD;
    private static final long serialVersionUID;
    protected java.util.Calendar calendar;
    protected java.text.NumberFormat numberFormat;

    protected void <init>()
    {
        java.text.DateFormat r0;

        r0 := @this: java.text.DateFormat;

        specialinvoke r0.<java.text.Format: void <init>()>();

        return;
    }

    private static void checkDateStyle(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        if i0 == 0 goto label1;

        if i0 == 2 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal date style: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    private static void checkTimeStyle(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        if i0 == 0 goto label1;

        if i0 == 2 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal time style: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatLocales()>();

        return $r0;
    }

    public static final java.text.DateFormat getDateInstance()
    {
        java.text.DateFormat $r0;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(2);

        return $r0;
    }

    public static final java.text.DateFormat getDateInstance(int)
    {
        int i0;
        java.util.Locale $r0;
        java.text.DateFormat $r1;

        i0 := @parameter0: int;

        staticinvoke <java.text.DateFormat: void checkDateStyle(int)>(i0);

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(i0, $r0);

        return $r1;
    }

    public static final java.text.DateFormat getDateInstance(int, java.util.Locale)
    {
        int i0;
        java.util.Locale r0;
        java.text.SimpleDateFormat $r1;
        libcore.icu.LocaleData $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Locale;

        staticinvoke <java.text.DateFormat: void checkDateStyle(int)>(i0);

        $r1 = new java.text.SimpleDateFormat;

        $r2 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r0);

        $r3 = virtualinvoke $r2.<libcore.icu.LocaleData: java.lang.String getDateFormat(int)>(i0);

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r3, r0);

        return $r1;
    }

    public static final java.text.DateFormat getDateTimeInstance()
    {
        java.text.DateFormat $r0;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(2, 2);

        return $r0;
    }

    public static final java.text.DateFormat getDateTimeInstance(int, int)
    {
        int i0, i1;
        java.util.Locale $r0;
        java.text.DateFormat $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <java.text.DateFormat: void checkTimeStyle(int)>(i1);

        staticinvoke <java.text.DateFormat: void checkDateStyle(int)>(i0);

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(i0, i1, $r0);

        return $r1;
    }

    public static final java.text.DateFormat getDateTimeInstance(int, int, java.util.Locale)
    {
        int i0, i1;
        java.util.Locale r0;
        libcore.icu.LocaleData r1;
        java.text.SimpleDateFormat $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.util.Locale;

        staticinvoke <java.text.DateFormat: void checkTimeStyle(int)>(i1);

        staticinvoke <java.text.DateFormat: void checkDateStyle(int)>(i0);

        r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r0);

        $r2 = new java.text.SimpleDateFormat;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<libcore.icu.LocaleData: java.lang.String getDateFormat(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r1.<libcore.icu.LocaleData: java.lang.String getTimeFormat(int)>(i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r9, r0);

        return $r2;
    }

    public static final java.text.DateFormat getInstance()
    {
        java.text.DateFormat $r0;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 3);

        return $r0;
    }

    public static final java.text.DateFormat getTimeInstance()
    {
        java.text.DateFormat $r0;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>(2);

        return $r0;
    }

    public static final java.text.DateFormat getTimeInstance(int)
    {
        int i0;
        java.util.Locale $r0;
        java.text.DateFormat $r1;

        i0 := @parameter0: int;

        staticinvoke <java.text.DateFormat: void checkTimeStyle(int)>(i0);

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(i0, $r0);

        return $r1;
    }

    public static final java.text.DateFormat getTimeInstance(int, java.util.Locale)
    {
        int i0;
        java.util.Locale r0;
        java.text.SimpleDateFormat $r1;
        libcore.icu.LocaleData $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Locale;

        staticinvoke <java.text.DateFormat: void checkTimeStyle(int)>(i0);

        $r1 = new java.text.SimpleDateFormat;

        $r2 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r0);

        $r3 = virtualinvoke $r2.<libcore.icu.LocaleData: java.lang.String getTimeFormat(int)>(i0);

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r3, r0);

        return $r1;
    }

    public java.lang.Object clone()
    {
        java.text.DateFormat r0, r1;
        java.lang.Object $r2, $r4, $r7;
        java.util.Calendar $r3, $r5;
        java.text.NumberFormat $r6, $r8;

        r0 := @this: java.text.DateFormat;

        $r2 = specialinvoke r0.<java.text.Format: java.lang.Object clone()>();

        r1 = (java.text.DateFormat) $r2;

        $r3 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.lang.Object clone()>();

        $r5 = (java.util.Calendar) $r4;

        r1.<java.text.DateFormat: java.util.Calendar calendar> = $r5;

        $r6 = r0.<java.text.DateFormat: java.text.NumberFormat numberFormat>;

        $r7 = virtualinvoke $r6.<java.text.NumberFormat: java.lang.Object clone()>();

        $r8 = (java.text.NumberFormat) $r7;

        r1.<java.text.DateFormat: java.text.NumberFormat numberFormat> = $r8;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.text.DateFormat r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.text.NumberFormat $r3, $r4;
        java.util.Calendar $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        java.util.TimeZone $r6, $r8;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof java.text.DateFormat;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (java.text.DateFormat) r1;

        $r4 = r0.<java.text.DateFormat: java.text.NumberFormat numberFormat>;

        $r3 = r2.<java.text.DateFormat: java.text.NumberFormat numberFormat>;

        $z1 = virtualinvoke $r4.<java.text.NumberFormat: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $r5 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $r6 = virtualinvoke $r5.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r7 = r2.<java.text.DateFormat: java.util.Calendar calendar>;

        $r8 = virtualinvoke $r7.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label4;

        $r9 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $i0 = virtualinvoke $r9.<java.util.Calendar: int getFirstDayOfWeek()>();

        $r10 = r2.<java.text.DateFormat: java.util.Calendar calendar>;

        $i1 = virtualinvoke $r10.<java.util.Calendar: int getFirstDayOfWeek()>();

        if $i0 != $i1 goto label4;

        $r11 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $i2 = virtualinvoke $r11.<java.util.Calendar: int getMinimalDaysInFirstWeek()>();

        $r12 = r2.<java.text.DateFormat: java.util.Calendar calendar>;

        $i3 = virtualinvoke $r12.<java.util.Calendar: int getMinimalDaysInFirstWeek()>();

        if $i2 != $i3 goto label4;

        $r13 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $z3 = virtualinvoke $r13.<java.util.Calendar: boolean isLenient()>();

        $r14 = r2.<java.text.DateFormat: java.util.Calendar calendar>;

        $z4 = virtualinvoke $r14.<java.util.Calendar: boolean isLenient()>();

        if $z3 == $z4 goto label1;

     label4:
        return 0;
    }

    public final java.lang.String format(java.util.Date)
    {
        java.text.DateFormat r0;
        java.util.Date r1;
        java.lang.StringBuffer $r2, $r4;
        java.text.FieldPosition $r3;
        java.lang.String $r5;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.util.Date;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = new java.text.FieldPosition;

        specialinvoke $r3.<java.text.FieldPosition: void <init>(int)>(0);

        $r4 = virtualinvoke r0.<java.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>(r1, $r2, $r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public final java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.DateFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer r2, $r12, $r13;
        java.text.FieldPosition r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.Class $r7;
        java.lang.String $r9;
        java.util.Date $r10, $r14;
        java.lang.Number $r11;
        long $l0;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        $z0 = r1 instanceof java.util.Date;

        if $z0 == 0 goto label1;

        $r14 = (java.util.Date) r1;

        $r13 = virtualinvoke r0.<java.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>($r14, r2, r3);

        return $r13;

     label1:
        $z1 = r1 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r10 = new java.util.Date;

        $r11 = (java.lang.Number) r1;

        $l0 = virtualinvoke $r11.<java.lang.Number: long longValue()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);

        $r12 = virtualinvoke r0.<java.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>($r10, r2, r3);

        return $r12;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad class: ");

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    public abstract java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition);

    public java.util.Calendar getCalendar()
    {
        java.text.DateFormat r0;
        java.util.Calendar $r1;

        r0 := @this: java.text.DateFormat;

        $r1 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        return $r1;
    }

    public java.text.NumberFormat getNumberFormat()
    {
        java.text.DateFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: java.text.DateFormat;

        $r1 = r0.<java.text.DateFormat: java.text.NumberFormat numberFormat>;

        return $r1;
    }

    public java.util.TimeZone getTimeZone()
    {
        java.text.DateFormat r0;
        java.util.Calendar $r1;
        java.util.TimeZone $r2;

        r0 := @this: java.text.DateFormat;

        $r1 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $r2 = virtualinvoke $r1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public int hashCode()
    {
        java.text.DateFormat r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        short s1;
        java.util.Calendar $r1, $r2, $r3, $r5;
        java.util.TimeZone $r4;
        boolean $z0;
        java.text.NumberFormat $r6;

        r0 := @this: java.text.DateFormat;

        $r1 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $i2 = virtualinvoke $r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        $r2 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $i3 = virtualinvoke $r2.<java.util.Calendar: int getMinimalDaysInFirstWeek()>();

        $i4 = $i2 + $i3;

        $r3 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $i5 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        i0 = $i4 + $i5;

        $r5 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $z0 = virtualinvoke $r5.<java.util.Calendar: boolean isLenient()>();

        if $z0 == 0 goto label2;

        s1 = 1231;

     label1:
        $i6 = s1 + i0;

        $r6 = r0.<java.text.DateFormat: java.text.NumberFormat numberFormat>;

        $i7 = virtualinvoke $r6.<java.text.NumberFormat: int hashCode()>();

        $i8 = $i6 + $i7;

        return $i8;

     label2:
        s1 = 1237;

        goto label1;
    }

    public boolean isLenient()
    {
        java.text.DateFormat r0;
        java.util.Calendar $r1;
        boolean $z0;

        r0 := @this: java.text.DateFormat;

        $r1 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        $z0 = virtualinvoke $r1.<java.util.Calendar: boolean isLenient()>();

        return $z0;
    }

    public java.util.Date parse(java.lang.String) throws java.text.ParseException
    {
        java.text.DateFormat r0;
        java.lang.String r1, $r10;
        java.text.ParsePosition r2, $r4;
        java.util.Date r3;
        int $i0, $i1;
        java.text.ParseException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r2 = $r4;

        r3 = virtualinvoke r0.<java.text.DateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $r5 = new java.text.ParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unparseable date: \"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getErrorIndex()>();

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, $i1);

        throw $r5;

     label1:
        return r3;
    }

    public abstract java.util.Date parse(java.lang.String, java.text.ParsePosition);

    public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition)
    {
        java.text.DateFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        java.util.Date $r3;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<java.text.DateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        return $r3;
    }

    public void setCalendar(java.util.Calendar)
    {
        java.text.DateFormat r0;
        java.util.Calendar r1;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.util.Calendar;

        r0.<java.text.DateFormat: java.util.Calendar calendar> = r1;

        return;
    }

    public void setLenient(boolean)
    {
        java.text.DateFormat r0;
        boolean z0;
        java.util.Calendar $r1;

        r0 := @this: java.text.DateFormat;

        z0 := @parameter0: boolean;

        $r1 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        virtualinvoke $r1.<java.util.Calendar: void setLenient(boolean)>(z0);

        return;
    }

    public void setNumberFormat(java.text.NumberFormat)
    {
        java.text.DateFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.text.NumberFormat;

        r0.<java.text.DateFormat: java.text.NumberFormat numberFormat> = r1;

        return;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        java.text.DateFormat r0;
        java.util.TimeZone r1;
        java.util.Calendar $r2;

        r0 := @this: java.text.DateFormat;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = r0.<java.text.DateFormat: java.util.Calendar calendar>;

        virtualinvoke $r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <java.text.DateFormat: long serialVersionUID> = 7218322306649953788L;

        <java.text.DateFormat: int YEAR_FIELD> = 1;

        <java.text.DateFormat: int WEEK_OF_YEAR_FIELD> = 12;

        <java.text.DateFormat: int WEEK_OF_MONTH_FIELD> = 13;

        <java.text.DateFormat: int TIMEZONE_FIELD> = 17;

        <java.text.DateFormat: int SHORT> = 3;

        <java.text.DateFormat: int SECOND_FIELD> = 7;

        <java.text.DateFormat: int MONTH_FIELD> = 2;

        <java.text.DateFormat: int MINUTE_FIELD> = 6;

        <java.text.DateFormat: int MILLISECOND_FIELD> = 8;

        <java.text.DateFormat: int MEDIUM> = 2;

        <java.text.DateFormat: int LONG> = 1;

        <java.text.DateFormat: int HOUR_OF_DAY1_FIELD> = 4;

        <java.text.DateFormat: int HOUR_OF_DAY0_FIELD> = 5;

        <java.text.DateFormat: int HOUR1_FIELD> = 15;

        <java.text.DateFormat: int HOUR0_FIELD> = 16;

        <java.text.DateFormat: int FULL> = 0;

        <java.text.DateFormat: int ERA_FIELD> = 0;

        <java.text.DateFormat: int DEFAULT> = 2;

        <java.text.DateFormat: int DAY_OF_YEAR_FIELD> = 10;

        <java.text.DateFormat: int DAY_OF_WEEK_IN_MONTH_FIELD> = 11;

        <java.text.DateFormat: int DAY_OF_WEEK_FIELD> = 9;

        <java.text.DateFormat: int DATE_FIELD> = 3;

        <java.text.DateFormat: int AM_PM_FIELD> = 14;

        return;
    }
}
