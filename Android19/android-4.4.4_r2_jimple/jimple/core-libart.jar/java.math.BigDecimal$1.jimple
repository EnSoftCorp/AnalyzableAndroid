class java.math.BigDecimal$1 extends java.lang.Object
{
    static final int[] $SwitchMap$java$math$RoundingMode;

    static void <clinit>()
    {
        java.math.RoundingMode[] $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r9, $r11, $r13, $r15, $r16, $r19, $r20, $r23, $r26;
        java.math.RoundingMode $r10, $r12, $r14, $r17, $r18, $r21, $r22, $r25;
        java.lang.NoSuchFieldError $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33;

        $r8 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode[] values()>();

        $i0 = lengthof $r8;

        $r9 = newarray (int)[$i0];

        <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode> = $r9;

     label01:
        $r11 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r10 = <java.math.RoundingMode: java.math.RoundingMode UNNECESSARY>;

        $i1 = virtualinvoke $r10.<java.math.RoundingMode: int ordinal()>();

        $r11[$i1] = 1;

     label02:
        $r13 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r12 = <java.math.RoundingMode: java.math.RoundingMode UP>;

        $i2 = virtualinvoke $r12.<java.math.RoundingMode: int ordinal()>();

        $r13[$i2] = 2;

     label03:
        $r15 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r14 = <java.math.RoundingMode: java.math.RoundingMode DOWN>;

        $i3 = virtualinvoke $r14.<java.math.RoundingMode: int ordinal()>();

        $r15[$i3] = 3;

     label04:
        $r16 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r17 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        $i4 = virtualinvoke $r17.<java.math.RoundingMode: int ordinal()>();

        $r16[$i4] = 4;

     label05:
        $r19 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r18 = <java.math.RoundingMode: java.math.RoundingMode FLOOR>;

        $i5 = virtualinvoke $r18.<java.math.RoundingMode: int ordinal()>();

        $r19[$i5] = 5;

     label06:
        $r20 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r21 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;

        $i6 = virtualinvoke $r21.<java.math.RoundingMode: int ordinal()>();

        $r20[$i6] = 6;

     label07:
        $r23 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r22 = <java.math.RoundingMode: java.math.RoundingMode HALF_DOWN>;

        $i7 = virtualinvoke $r22.<java.math.RoundingMode: int ordinal()>();

        $r23[$i7] = 7;

     label08:
        $r26 = <java.math.BigDecimal$1: int[] $SwitchMap$java$math$RoundingMode>;

        $r25 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        $i8 = virtualinvoke $r25.<java.math.RoundingMode: int ordinal()>();

        $r26[$i8] = 8;

     label09:
        return;

     label10:
        $r24 := @caughtexception;

        return;

     label11:
        $r28 := @caughtexception;

        goto label08;

     label12:
        $r30 := @caughtexception;

        goto label07;

     label13:
        $r27 := @caughtexception;

        goto label06;

     label14:
        $r29 := @caughtexception;

        goto label05;

     label15:
        $r31 := @caughtexception;

        goto label04;

     label16:
        $r33 := @caughtexception;

        goto label03;

     label17:
        $r32 := @caughtexception;

        goto label02;

        catch java.lang.NoSuchFieldError from label01 to label02 with label17;
        catch java.lang.NoSuchFieldError from label02 to label03 with label16;
        catch java.lang.NoSuchFieldError from label03 to label04 with label15;
        catch java.lang.NoSuchFieldError from label04 to label05 with label14;
        catch java.lang.NoSuchFieldError from label05 to label06 with label13;
        catch java.lang.NoSuchFieldError from label06 to label07 with label12;
        catch java.lang.NoSuchFieldError from label07 to label08 with label11;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
    }
}
