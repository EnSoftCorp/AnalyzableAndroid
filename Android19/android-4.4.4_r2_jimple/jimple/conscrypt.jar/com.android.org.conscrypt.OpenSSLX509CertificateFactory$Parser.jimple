abstract class com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser extends java.lang.Object
{

    private void <init>()
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser r0;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.org.conscrypt.OpenSSLX509CertificateFactory$1)
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser r0;
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser;

        r1 := @parameter0: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: void <init>()>();

        return;
    }

    protected abstract java.util.List fromPkcs7DerInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

    protected abstract java.util.List fromPkcs7PemInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

    protected abstract java.lang.Object fromX509DerInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

    protected abstract java.lang.Object fromX509PemInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

    public java.lang.Object generateItem(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser r0;
        java.io.InputStream r1;
        boolean z0, $z1;
        java.io.PushbackInputStream r2, $r9;
        java.lang.Exception r3, $r18;
        byte[] r5, $r10, $r12, $r13, $r16;
        int i0, $i1, $i4, $i5, $i6, $i7;
        java.lang.Object r6, $r11, $r14;
        java.util.List r7, r8;
        byte $b2, $b3;
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException $r17, $r19, $r20;
        java.io.IOException $r21;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser;

        r1 := @parameter0: java.io.InputStream;

        if r1 != null goto label01;

        $r20 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r20.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.String)>("inStream == null");

        throw $r20;

     label01:
        z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();

        if z0 == 0 goto label02;

        $r16 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $i7 = lengthof $r16;

        virtualinvoke r1.<java.io.InputStream: void mark(int)>($i7);

     label02:
        $r9 = new java.io.PushbackInputStream;

        specialinvoke $r9.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r1, 64);

        r2 = $r9;

     label03:
        $r10 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $i1 = lengthof $r10;

        r5 = newarray (byte)[$i1];

        i0 = virtualinvoke r2.<java.io.PushbackInputStream: int read(byte[])>(r5);

     label04:
        if i0 >= 0 goto label09;

     label05:
        $r17 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r17.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.String)>("inStream is empty");

        throw $r17;

     label06:
        $r18 := @caughtexception;

        r3 = $r18;

        if z0 == 0 goto label08;

     label07:
        virtualinvoke r1.<java.io.InputStream: void reset()>();

     label08:
        $r19 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r19.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.Exception)>(r3);

        throw $r19;

     label09:
        virtualinvoke r2.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r5, 0, i0);

        $b3 = r5[0];

        if $b3 != 45 goto label12;

        $r12 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $i5 = lengthof $r12;

        if i0 != $i5 goto label13;

        $r13 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, r5);

        if $z1 == 0 goto label13;

        r8 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.List fromPkcs7PemInputStream(java.io.InputStream)>(r2);

        $i6 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i6 != 0 goto label11;

     label10:
        return null;

     label11:
        interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

     label12:
        $b2 = r5[4];

        if $b2 != 6 goto label14;

        r7 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.List fromPkcs7DerInputStream(java.io.InputStream)>(r2);

        $i4 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i4 == 0 goto label17;

        $r11 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);

        return $r11;

     label13:
        $r14 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.lang.Object fromX509PemInputStream(java.io.InputStream)>(r2);

        return $r14;

     label14:
        r6 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.lang.Object fromX509DerInputStream(java.io.InputStream)>(r2);

     label15:
        return r6;

     label16:
        $r21 := @caughtexception;

        goto label08;

     label17:
        return null;

        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Exception from label05 to label06 with label06;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label06;
        catch java.lang.Exception from label11 to label12 with label06;
        catch java.lang.Exception from label12 to label13 with label06;
        catch java.lang.Exception from label13 to label14 with label06;
        catch java.lang.Exception from label14 to label15 with label06;
    }

    public java.util.Collection generateItems(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser r0;
        java.io.InputStream r1;
        java.io.IOException r2, $r23, $r25, $r26;
        boolean z0, $z2;
        java.io.PushbackInputStream r3, $r14;
        java.lang.Exception r4, $r20;
        byte[] r6, $r13, $r15, $r17;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList r7, $r16;
        java.lang.Object r9;
        java.util.List r11, r12, $r18;
        byte $b4;
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException $r19, $r21, $r22, $r24, $r27;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser;

        r1 := @parameter0: java.io.InputStream;

        if r1 != null goto label01;

        $r19 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r19.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.String)>("inStream == null");

        throw $r19;

     label01:
        $i1 = virtualinvoke r1.<java.io.InputStream: int available()>();

        if $i1 != 0 goto label04;

        r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label02:
        return r12;

     label03:
        $r25 := @caughtexception;

        r2 = $r25;

        $r22 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r22.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.String,java.lang.Exception)>("Problem reading input stream", r2);

        throw $r22;

     label04:
        z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();

        if z0 == 0 goto label05;

        virtualinvoke r1.<java.io.InputStream: void mark(int)>(64);

     label05:
        $r14 = new java.io.PushbackInputStream;

        specialinvoke $r14.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r1, 64);

        r3 = $r14;

     label06:
        $r13 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $i2 = lengthof $r13;

        r6 = newarray (byte)[$i2];

        i0 = virtualinvoke r3.<java.io.PushbackInputStream: int read(byte[])>(r6);

     label07:
        if i0 >= 0 goto label12;

     label08:
        $r21 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r21.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.String)>("inStream is empty");

        throw $r21;

     label09:
        $r20 := @caughtexception;

        r4 = $r20;

        if z0 == 0 goto label11;

     label10:
        virtualinvoke r1.<java.io.InputStream: void reset()>();

     label11:
        $r24 = new com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException;

        specialinvoke $r24.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: void <init>(java.lang.Exception)>(r4);

        throw $r24;

     label12:
        virtualinvoke r3.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r6, 0, i0);

        $r15 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $i3 = lengthof $r15;

        if i0 != $i3 goto label13;

        $r17 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertificateFactory: byte[] access$000()>();

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r17, r6);

        if $z2 == 0 goto label13;

        $r18 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.List fromPkcs7PemInputStream(java.io.InputStream)>(r3);

        return $r18;

     label13:
        $b4 = r6[4];

        if $b4 != 6 goto label15;

        r11 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.util.List fromPkcs7DerInputStream(java.io.InputStream)>(r3);

     label14:
        return r11;

     label15:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r7 = $r16;

     label16:
        if z0 == 0 goto label17;

        virtualinvoke r1.<java.io.InputStream: void mark(int)>(64);

     label17:
        r9 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: java.lang.Object generateItem(java.io.InputStream)>(r3);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r9);

     label18:
        if r9 != null goto label16;

        return r7;

     label19:
        $r27 := @caughtexception;

        if z0 == 0 goto label21;

     label20:
        virtualinvoke r1.<java.io.InputStream: void reset()>();

     label21:
        r9 = null;

        goto label18;

     label22:
        $r26 := @caughtexception;

        goto label11;

     label23:
        $r23 := @caughtexception;

        goto label21;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Exception from label08 to label09 with label09;
        catch java.io.IOException from label10 to label11 with label22;
        catch java.lang.Exception from label12 to label13 with label09;
        catch java.lang.Exception from label13 to label14 with label09;
        catch com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException from label17 to label18 with label19;
        catch java.io.IOException from label20 to label21 with label23;
    }
}
