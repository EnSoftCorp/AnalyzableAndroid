public class com.android.org.conscrypt.KeyManagerFactoryImpl extends javax.net.ssl.KeyManagerFactorySpi
{
    private java.security.KeyStore keyStore;
    private char[] pwd;

    public void <init>()
    {
        com.android.org.conscrypt.KeyManagerFactoryImpl r0;

        r0 := @this: com.android.org.conscrypt.KeyManagerFactoryImpl;

        specialinvoke r0.<javax.net.ssl.KeyManagerFactorySpi: void <init>()>();

        return;
    }

    protected javax.net.ssl.KeyManager[] engineGetKeyManagers()
    {
        com.android.org.conscrypt.KeyManagerFactoryImpl r0;
        javax.net.ssl.KeyManager[] r1;
        java.security.KeyStore $r2, $r5;
        com.android.org.conscrypt.KeyManagerImpl $r3;
        char[] $r4;
        java.lang.IllegalStateException $r6;

        r0 := @this: com.android.org.conscrypt.KeyManagerFactoryImpl;

        $r2 = r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("KeyManagerFactory is not initialized");

        throw $r6;

     label1:
        r1 = newarray (javax.net.ssl.KeyManager)[1];

        $r3 = new com.android.org.conscrypt.KeyManagerImpl;

        $r5 = r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        $r4 = r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: char[] pwd>;

        specialinvoke $r3.<com.android.org.conscrypt.KeyManagerImpl: void <init>(java.security.KeyStore,char[])>($r5, $r4);

        r1[0] = $r3;

        return r1;
    }

    protected void engineInit(java.security.KeyStore, char[]) throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        com.android.org.conscrypt.KeyManagerFactoryImpl r0;
        java.security.KeyStore r1, $r11, $r12, $r17;
        char[] r2, $r13, $r16, $r18, $r19, $r20;
        java.lang.String r3, r6, $r10;
        java.security.cert.CertificateException r4, r7, $r28, $r30;
        java.io.IOException r5, r8, $r25, $r27;
        java.io.FileNotFoundException r9, $r23;
        boolean $z0, $z1;
        java.io.File $r14;
        java.io.FileInputStream $r15;
        java.lang.Object $r21;
        java.security.KeyStoreException $r22, $r24, $r26, $r29, $r31;

        r0 := @this: com.android.org.conscrypt.KeyManagerFactoryImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: char[];

        if r1 == null goto label02;

        r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore> = r1;

        if r2 == null goto label01;

        $r21 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r20 = (char[]) $r21;

        r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: char[] pwd> = $r20;

        return;

     label01:
        $r18 = <com.android.org.conscrypt.util.EmptyArray: char[] CHAR>;

        r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: char[] pwd> = $r18;

        return;

     label02:
        $r10 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r10);

        r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore> = $r11;

        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.keyStore");

        if r3 == null goto label03;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NONE");

        if $z0 != 0 goto label03;

        $z1 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label07;

     label03:
        $r12 = r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        virtualinvoke $r12.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

     label04:
        return;

     label05:
        $r25 := @caughtexception;

        r5 = $r25;

        $r24 = new java.security.KeyStoreException;

        specialinvoke $r24.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r5);

        throw $r24;

     label06:
        $r28 := @caughtexception;

        r4 = $r28;

        $r29 = new java.security.KeyStoreException;

        specialinvoke $r29.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r4);

        throw $r29;

     label07:
        r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.keyStorePassword");

        if r6 != null goto label11;

        $r19 = <com.android.org.conscrypt.util.EmptyArray: char[] CHAR>;

        r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: char[] pwd> = $r19;

     label08:
        $r17 = r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: java.security.KeyStore keyStore>;

        $r15 = new java.io.FileInputStream;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>(r3);

        specialinvoke $r15.<java.io.FileInputStream: void <init>(java.io.File)>($r14);

        $r16 = r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: char[] pwd>;

        virtualinvoke $r17.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r16);

     label09:
        return;

     label10:
        $r23 := @caughtexception;

        r9 = $r23;

        $r22 = new java.security.KeyStoreException;

        specialinvoke $r22.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r9);

        throw $r22;

     label11:
        $r13 = virtualinvoke r6.<java.lang.String: char[] toCharArray()>();

        r0.<com.android.org.conscrypt.KeyManagerFactoryImpl: char[] pwd> = $r13;

        goto label08;

     label12:
        $r27 := @caughtexception;

        r8 = $r27;

        $r26 = new java.security.KeyStoreException;

        specialinvoke $r26.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r8);

        throw $r26;

     label13:
        $r30 := @caughtexception;

        r7 = $r30;

        $r31 = new java.security.KeyStoreException;

        specialinvoke $r31.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r7);

        throw $r31;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.security.cert.CertificateException from label03 to label04 with label06;
        catch java.io.FileNotFoundException from label08 to label09 with label10;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.security.cert.CertificateException from label08 to label09 with label13;
    }

    protected void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
    {
        com.android.org.conscrypt.KeyManagerFactoryImpl r0;
        javax.net.ssl.ManagerFactoryParameters r1;
        java.security.InvalidAlgorithmParameterException $r2;

        r0 := @this: com.android.org.conscrypt.KeyManagerFactoryImpl;

        r1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ManagerFactoryParameters not supported");

        throw $r2;
    }
}
