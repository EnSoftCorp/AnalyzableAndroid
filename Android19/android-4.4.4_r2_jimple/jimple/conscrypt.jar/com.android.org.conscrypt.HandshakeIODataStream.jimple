public class com.android.org.conscrypt.HandshakeIODataStream extends com.android.org.conscrypt.SSLInputStream implements com.android.org.conscrypt.Appendable, com.android.org.conscrypt.DataStream
{
    private static final java.security.MessageDigest md5;
    private static final java.security.MessageDigest sha;
    private int buff_size;
    private byte[] buffer;
    private int inc_buff_size;
    private int marked_pos;
    private int read_pos;
    private int read_pos_end;
    private int write_pos;
    private int write_pos_beg;

    static void <clinit>()
    {
        java.lang.Exception r0, $r3;
        java.security.MessageDigest $r1, $r2;
        java.lang.RuntimeException $r4;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5> = $r1;

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha> = $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        virtualinvoke r0.<java.lang.Exception: void printStackTrace()>();

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not initialize the Digest Algorithms.");

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int $i0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        specialinvoke r0.<com.android.org.conscrypt.SSLInputStream: void <init>()>();

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size> = 1024;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int inc_buff_size> = 1024;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        $r1 = newarray (byte)[$i0];

        r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer> = $r1;

        return;
    }

    private void append(byte[], int, int)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte[] r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        com.android.org.conscrypt.AlertException $r3;
        javax.net.ssl.SSLHandshakeException $r4;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        if $i3 != $i2 goto label2;

        $i16 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i13 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        if $i16 == $i13 goto label1;

        $r3 = new com.android.org.conscrypt.AlertException;

        $r4 = new javax.net.ssl.SSLHandshakeException;

        specialinvoke $r4.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>("Handshake message has been received before the last oubound message had been sent.");

        specialinvoke $r3.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(10, $r4);

        throw $r3;

     label1:
        $i18 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i15 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        if $i18 >= $i15 goto label2;

        $i17 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = $i17;

        $i19 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end> = $i19;

     label2:
        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i6 = i1 + $i4;

        $i5 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        if $i6 <= $i5 goto label3;

        $i10 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i12 = i1 + $i10;

        $i11 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        $i14 = $i12 - $i11;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void enlargeBuffer(int)>($i14);

     label3:
        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i7 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, $i7, i1);

        $i8 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i9 = i1 + $i8;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end> = $i9;

        return;
    }

    private void check(int)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        com.android.org.conscrypt.AlertException $r1;
        javax.net.ssl.SSLHandshakeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r7;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        if $i2 != $i1 goto label2;

        $i7 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i6 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        if $i7 == $i6 goto label1;

        $r1 = new com.android.org.conscrypt.AlertException;

        $r2 = new javax.net.ssl.SSLHandshakeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data was not fully read: ");

        $i12 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i13 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>($r7);

        specialinvoke $r1.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r2);

        throw $r1;

     label1:
        $i9 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i8 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        if $i9 >= $i8 goto label2;

        $i10 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg> = $i10;

        $i11 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i11;

     label2:
        $i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i5 = i0 + $i3;

        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        if $i5 < $i4 goto label3;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void enlargeBuffer(int)>(i0);

     label3:
        return;
    }

    private void enlargeBuffer(int)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        byte[] r1, $r2, $r3;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int inc_buff_size>;

        if i0 >= $i2 goto label2;

        $i7 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        $i6 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int inc_buff_size>;

        i1 = $i7 + $i6;

     label1:
        r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size> = i1;

        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        r1 = newarray (byte)[$i4];

        $r3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i5 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i5);

        r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer> = r1;

        return;

     label2:
        $i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int buff_size>;

        i1 = i0 + $i3;

        goto label1;
    }

    public void append(byte[])
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void append(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public int available()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    protected void clearBuffer()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = 0;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos> = 0;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end> = 0;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = 0;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg> = 0;

        $r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, 0);

        return;
    }

    public byte[] getData(int)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        byte[] r1, r2, $r3, $r4;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i3 = $i2 - $i1;

        if $i3 >= i0 goto label1;

        $i8 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i7 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i9 = $i8 - $i7;

        r2 = newarray (byte)[$i9];

        $r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i12 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i11 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i10 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i13 = $i11 - $i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i12, r2, 0, $i13);

        $i14 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg> = $i14;

        return r2;

     label1:
        r1 = newarray (byte)[i0];

        $r3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i4, r1, 0, i0);

        $i5 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        $i6 = i0 + $i5;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg> = $i6;

        return r1;
    }

    protected byte[] getDigestMD5()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        java.security.MessageDigest r1, $r5, $r6;
        java.lang.Throwable r2, $r7;
        int i0, $i1, $i2;
        byte[] r3, $r4;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5>;

        entermonitor r1;

     label1:
        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        if $i2 <= $i1 goto label4;

        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

     label2:
        $r5 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5>;

        $r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r4, 0, i0);

        $r6 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5>;

        r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        exitmonitor r1;

     label3:
        return r3;

     label4:
        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected byte[] getDigestMD5withoutLast()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        java.security.MessageDigest r1, $r5, $r6;
        java.lang.Throwable r2, $r7;
        byte[] r3, $r4;
        int $i0;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5>;

        entermonitor r1;

     label1:
        $r5 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5>;

        $r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r4, 0, $i0);

        $r6 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest md5>;

        r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected byte[] getDigestSHA()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        java.security.MessageDigest r1, $r5, $r6;
        java.lang.Throwable r2, $r7;
        int i0, $i1, $i2;
        byte[] r3, $r4;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha>;

        entermonitor r1;

     label1:
        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        if $i2 <= $i1 goto label4;

        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

     label2:
        $r5 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha>;

        $r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r4, 0, i0);

        $r6 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha>;

        r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        exitmonitor r1;

     label3:
        return r3;

     label4:
        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected byte[] getDigestSHAwithoutLast()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        java.security.MessageDigest r1, $r5, $r6;
        java.lang.Throwable r2, $r7;
        byte[] r3, $r4;
        int $i0;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha>;

        entermonitor r1;

     label1:
        $r5 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha>;

        $r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r4, 0, $i0);

        $r6 = <com.android.org.conscrypt.HandshakeIODataStream: java.security.MessageDigest sha>;

        r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected byte[] getMessages()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int i0, $i1, $i2;
        byte[] r1, $r2;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        if $i2 <= $i1 goto label2;

        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

     label1:
        r1 = newarray (byte)[i0];

        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        return r1;

     label2:
        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        goto label1;
    }

    public boolean hasData()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int $i0, $i1;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos_beg>;

        if $i1 <= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void mark()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int $i0;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos> = $i0;

        return;
    }

    public void mark(int)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int i0, $i1;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos> = $i1;

        return;
    }

    public boolean markSupported()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte[] r1;
        int i0, $i1, $i2, $i3;
        byte $b4;
        short $s5;
        com.android.org.conscrypt.EndOfBufferException $r2;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        if $i2 != $i1 goto label1;

        $r2 = new com.android.org.conscrypt.EndOfBufferException;

        specialinvoke $r2.<com.android.org.conscrypt.EndOfBufferException: void <init>()>();

        throw $r2;

     label1:
        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i3 = i0 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = $i3;

        $b4 = r1[i0];

        $s5 = 255 & $b4;

        return $s5;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte[] r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.org.conscrypt.EndOfBufferException $r3;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: int available()>();

        if i1 <= $i2 goto label1;

        $r3 = new com.android.org.conscrypt.EndOfBufferException;

        specialinvoke $r3.<com.android.org.conscrypt.EndOfBufferException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r1, i0, i1);

        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i5 = i1 + $i4;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = $i5;

        return i1;
    }

    public byte[] read(int) throws java.io.IOException
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] r1, $r2;
        com.android.org.conscrypt.EndOfBufferException $r3;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: int available()>();

        if i0 <= $i1 goto label1;

        $r3 = new com.android.org.conscrypt.EndOfBufferException;

        specialinvoke $r3.<com.android.org.conscrypt.EndOfBufferException: void <init>()>();

        throw $r3;

     label1:
        r1 = newarray (byte)[i0];

        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, r1, 0, i0);

        $i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i4 = i0 + $i3;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = $i4;

        return r1;
    }

    protected void removeFromMarkedPosition()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos>;

        $i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i2 = $i1 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, $r1, $i3, $i2);

        $i8 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end>;

        $i6 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos>;

        $i5 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos>;

        $i7 = $i6 - $i5;

        $i9 = $i8 - $i7;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos_end> = $i9;

        $i10 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = $i10;

        return;
    }

    public void reset()
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        int $i0;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        $i0 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int marked_pos>;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int read_pos> = $i0;

        return;
    }

    public void write(byte)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte b0;
        byte[] r1;
        int i1, $i2;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        b0 := @parameter0: byte;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>(1);

        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i2 = i1 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i2;

        r1[i1] = b0;

        return;
    }

    public void write(byte[])
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        byte[] r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>($i0);

        $r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        $i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, $i2, $i1);

        $i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i3 = lengthof r1;

        $i5 = $i4 + $i3;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i5;

        return;
    }

    public void writeUint16(long)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        long l0, $l4, $l5, $l9;
        byte[] r1, r2;
        int i1, i2, $i3, $i6, $i8, $i10;
        byte $b7, $b11;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>(2);

        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i3 = i1 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i3;

        $l4 = 65280L & l0;

        $l5 = $l4 >> 8;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        r1[i1] = $b7;

        r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i8 = i2 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i8;

        $l9 = 255L & l0;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        r2[i2] = $b11;

        return;
    }

    public void writeUint24(long)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        long l0, $l5, $l6, $l10, $l12, $l16;
        byte[] r1, r2, r3;
        int i1, i2, i3, $i4, $i7, $i9, $i11, $i13, $i15;
        byte $b8, $b14, $b17;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>(3);

        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i4 = i1 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i4;

        $l5 = 16711680L & l0;

        $l6 = $l5 >> 16;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        r1[i1] = $b8;

        r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i9 = i2 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i9;

        $l10 = 65280L & l0;

        $l12 = $l10 >> 8;

        $i11 = (int) $l12;

        $b14 = (byte) $i11;

        r2[i2] = $b14;

        r3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i13 = i3 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i13;

        $l16 = 255L & l0;

        $i15 = (int) $l16;

        $b17 = (byte) $i15;

        r3[i3] = $b17;

        return;
    }

    public void writeUint32(long)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        long l0, $l6, $l7, $l10, $l13, $l16, $l17, $l20;
        byte[] r1, r2, r3, r4;
        int i1, i2, i3, i4, $i5, $i8, $i11, $i12, $i14, $i19, $i21, $i23;
        byte $b9, $b15, $b18, $b22;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>(4);

        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i5 = i1 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i5;

        $l6 = -16777216L & l0;

        $l7 = $l6 >> 24;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r1[i1] = $b9;

        r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i11 = i2 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i11;

        $l10 = 16711680L & l0;

        $l13 = $l10 >> 16;

        $i12 = (int) $l13;

        $b15 = (byte) $i12;

        r2[i2] = $b15;

        r3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i14 = i3 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i14;

        $l17 = 65280L & l0;

        $l16 = $l17 >> 8;

        $i19 = (int) $l16;

        $b18 = (byte) $i19;

        r3[i3] = $b18;

        r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i21 = i4 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i21;

        $l20 = 255L & l0;

        $i23 = (int) $l20;

        $b22 = (byte) $i23;

        r4[i4] = $b22;

        return;
    }

    public void writeUint64(long)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        long l0, $l10, $l11, $l14, $l17, $l20, $l21, $l23, $l28, $l32, $l33, $l34, $l37, $l38, $l39, $l42;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8;
        int i1, i2, i3, i4, i5, i6, i7, $i8, i9, $i13, $i15, $i16, $i18, $i22, $i24, $i27, $i29, $i30, $i35, $i36, $i40, $i43, $i45, $i47;
        byte $b12, $b19, $b25, $b26, $b31, $b41, $b44, $b46;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>(8);

        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i8 = i1 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i8;

        $l11 = -72057594037927936L & l0;

        $l10 = $l11 >> 56;

        $i13 = (int) $l10;

        $b12 = (byte) $i13;

        r1[i1] = $b12;

        r2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i2 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i15 = i2 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i15;

        $l14 = 71776119061217280L & l0;

        $l17 = $l14 >> 48;

        $i16 = (int) $l17;

        $b19 = (byte) $i16;

        r2[i2] = $b19;

        r3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i3 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i18 = i3 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i18;

        $l21 = 280375465082880L & l0;

        $l20 = $l21 >> 40;

        $i24 = (int) $l20;

        $b25 = (byte) $i24;

        r3[i3] = $b25;

        r4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i4 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i22 = i4 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i22;

        $l23 = 1095216660480L & l0;

        $l28 = $l23 >> 32;

        $i29 = (int) $l28;

        $b26 = (byte) $i29;

        r4[i4] = $b26;

        r5 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i5 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i27 = i5 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i27;

        $l32 = -16777216L & l0;

        $l33 = $l32 >> 24;

        $i30 = (int) $l33;

        $b31 = (byte) $i30;

        r5[i5] = $b31;

        r6 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i6 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i36 = i6 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i36;

        $l37 = 16711680L & l0;

        $l34 = $l37 >> 16;

        $i35 = (int) $l34;

        $b41 = (byte) $i35;

        r6[i6] = $b41;

        r7 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i7 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i40 = i7 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i40;

        $l39 = 65280L & l0;

        $l38 = $l39 >> 8;

        $i45 = (int) $l38;

        $b44 = (byte) $i45;

        r7[i7] = $b44;

        r8 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i9 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i43 = i9 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i43;

        $l42 = 255L & l0;

        $i47 = (int) $l42;

        $b46 = (byte) $i47;

        r8[i9] = $b46;

        return;
    }

    public void writeUint8(long)
    {
        com.android.org.conscrypt.HandshakeIODataStream r0;
        long l0, $l3;
        byte[] r1;
        int i1, $i2, $i4;
        byte $b5;

        r0 := @this: com.android.org.conscrypt.HandshakeIODataStream;

        l0 := @parameter0: long;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeIODataStream: void check(int)>(1);

        r1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: byte[] buffer>;

        i1 = r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos>;

        $i2 = i1 + 1;

        r0.<com.android.org.conscrypt.HandshakeIODataStream: int write_pos> = $i2;

        $l3 = 255L & l0;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r1[i1] = $b5;

        return;
    }
}
