class com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler extends java.lang.Object
{
    private final java.lang.String mInterfaceName;
    private boolean mResult;
    private long mResultId;
    private final java.util.concurrent.atomic.AtomicInteger mResultIdCounter;
    private final java.lang.Object mResultLock;

    private void <init>(java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mResultIdCounter> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock> = $r3;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult> = 0;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId> = -1L;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.String mInterfaceName> = r1;

        return;
    }

    void <init>(java.lang.String, com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$1)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        java.lang.String r1;
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$1 r2;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$1;

        specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: void <init>(java.lang.String)>(r1);

        return;
    }

    static boolean access$100(com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler, com.android.org.chromium.content.browser.ContentViewCore, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        com.android.org.chromium.content.browser.ContentViewCore r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter1: com.android.org.chromium.content.browser.ContentViewCore;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean performAction(com.android.org.chromium.content.browser.ContentViewCore,java.lang.String)>(r1, r2);

        return $z0;
    }

    private void clearResultLocked()
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId> = -1L;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult> = 0;

        return;
    }

    private boolean getResultAndClear(int)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean z0, $z1;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        i0 := @parameter0: int;

        r1 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        entermonitor r1;

     label1:
        $z1 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean waitForResultTimedLocked(int)>(i0);

        if $z1 == 0 goto label7;

        z0 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult>;

     label2:
        specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: void clearResultLocked()>();

        exitmonitor r1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        z0 = 0;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private boolean performAction(com.android.org.chromium.content.browser.ContentViewCore, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        com.android.org.chromium.content.browser.ContentViewCore r1;
        java.lang.String r2, $r5, $r7;
        int i0;
        java.lang.Object[] r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Integer $r6;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: com.android.org.chromium.content.browser.ContentViewCore;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mResultIdCounter>;

        i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r3 = newarray (java.lang.Object)[3];

        r3[0] = r2;

        $r5 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.String mInterfaceName>;

        r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(function() {  retVal = false;  try {    retVal = %s;  } catch (e) {    retVal = false;  }  %s.onResult(%d, retVal);})()", r3);

        virtualinvoke r1.<com.android.org.chromium.content.browser.ContentViewCore: void evaluateJavaScript(java.lang.String,com.android.org.chromium.content.browser.ContentViewCore$JavaScriptCallback)>($r7, null);

        $z0 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean getResultAndClear(int)>(i0);

        return $z0;
    }

    private boolean waitForResultTimedLocked(int)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        int i0;
        long l1, l2, $l3, $l4, $l6, $l7, $l9, $l11;
        byte $b5, $b8, $b10;
        java.lang.InterruptedException $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label1:
        $l4 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId>;

        $l3 = (long) i0;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label3;

     label2:
        return 1;

     label3:
        $l7 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId>;

        $l6 = (long) i0;

        $b8 = $l7 cmp $l6;

        if $b8 > 0 goto label8;

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l11 = $l9 - l1;

        l2 = 5000L - $l11;

     label4:
        $b10 = l2 cmp 0L;

        if $b10 <= 0 goto label8;

     label5:
        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        virtualinvoke $r3.<java.lang.Object: void wait(long)>(l2);

     label6:
        goto label1;

     label7:
        $r2 := @caughtexception;

        goto label1;

     label8:
        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label7;
        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public void onResult(java.lang.String, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        java.lang.String r1, r2;
        long l0, $l1;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r8;
        byte $b2;
        boolean $z0;
        java.lang.NumberFormatException $r7;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

     label2:
        r4 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        entermonitor r4;

     label3:
        $l1 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId>;

        $b2 = l0 cmp $l1;

        if $b2 <= 0 goto label4;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult> = $z0;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId> = l0;

     label4:
        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r4;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

        r5 = $r8;

     label7:
        exitmonitor r4;

     label8:
        throw r5;

     label9:
        $r7 := @caughtexception;

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
