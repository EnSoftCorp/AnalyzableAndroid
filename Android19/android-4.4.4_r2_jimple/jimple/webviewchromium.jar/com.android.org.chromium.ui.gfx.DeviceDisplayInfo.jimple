public class com.android.org.chromium.ui.gfx.DeviceDisplayInfo extends java.lang.Object
{
    private final android.content.Context mAppContext;
    private final android.view.WindowManager mWinManager;

    private void <init>(android.content.Context)
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.content.Context r1, $r2, $r3;
        java.lang.Object $r4;
        android.view.WindowManager $r5;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.content.Context mAppContext> = $r2;

        $r3 = r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.content.Context mAppContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r5 = (android.view.WindowManager) $r4;

        r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.view.WindowManager mWinManager> = $r5;

        return;
    }

    static void access$000(com.android.org.chromium.ui.gfx.DeviceDisplayInfo)
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;

        r0 := @parameter0: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: void updateNativeSharedDisplayInfo()>();

        return;
    }

    public static com.android.org.chromium.ui.gfx.DeviceDisplayInfo create(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        specialinvoke $r1.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: void <init>(android.content.Context)>(r0);

        return $r1;
    }

    private static com.android.org.chromium.ui.gfx.DeviceDisplayInfo createWithListener(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        specialinvoke $r2.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: void <init>(android.content.Context)>(r0);

        r1 = $r2;

        specialinvoke r1.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: void registerListener()>();

        return r1;
    }

    private android.view.Display getDisplay()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.view.WindowManager $r1;
        android.view.Display $r2;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r1 = r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.view.WindowManager mWinManager>;

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        return $r2;
    }

    private android.util.DisplayMetrics getMetrics()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r1 = r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.content.Context mAppContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        return $r3;
    }

    private int getPixelFormat()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        int $i0, $i1;
        android.view.Display $r1;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label1;

        $r1 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.view.Display getDisplay()>();

        $i1 = virtualinvoke $r1.<android.view.Display: int getPixelFormat()>();

        return $i1;

     label1:
        return 1;
    }

    private int getSmallestDIPWidth()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r1 = r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.content.Context mAppContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int smallestScreenWidthDp>;

        return $i0;
    }

    private native void nativeUpdateSharedDeviceDisplayInfo(int, int, int, int, double, int);

    private void registerListener()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.content.Context $r2;
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo$1 r3;
        android.content.ComponentCallbacks r4;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r2 = r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.content.Context mAppContext>;

        r3 = new com.android.org.chromium.ui.gfx.DeviceDisplayInfo$1;

        specialinvoke r3.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo$1: void <init>(com.android.org.chromium.ui.gfx.DeviceDisplayInfo)>(r0);

        r4 = (android.content.ComponentCallbacks) r3;

        virtualinvoke $r2.<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>(r4);

        return;
    }

    private void updateNativeSharedDisplayInfo()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        int $i0, $i1, $i2, $i3, $i4;
        double $d0;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $i0 = virtualinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getDisplayHeight()>();

        $i1 = virtualinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getDisplayWidth()>();

        $i2 = virtualinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getBitsPerPixel()>();

        $i3 = virtualinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getBitsPerComponent()>();

        $d0 = virtualinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: double getDIPScale()>();

        $i4 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getSmallestDIPWidth()>();

        specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: void nativeUpdateSharedDeviceDisplayInfo(int,int,int,int,double,int)>($i0, $i1, $i2, $i3, $d0, $i4);

        return;
    }

    public int getBitsPerComponent()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        byte b0;
        int $i1;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        b0 = 5;

        $i1 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getPixelFormat()>();

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label2;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label3;
            case 8: goto label6;
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label5;
            default: goto label1;
        };

     label1:
        b0 = 8;

     label2:
        return b0;

     label3:
        return 4;

     label4:
        return 8;

     label5:
        return 2;

     label6:
        return 0;
    }

    public int getBitsPerPixel()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        int i0, $i1;
        android.graphics.PixelFormat r1, $r2;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        i0 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: int getPixelFormat()>();

        $r2 = new android.graphics.PixelFormat;

        specialinvoke $r2.<android.graphics.PixelFormat: void <init>()>();

        r1 = $r2;

        staticinvoke <android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>(i0, r1);

        $i1 = r1.<android.graphics.PixelFormat: int bitsPerPixel>;

        return $i1;
    }

    public double getDIPScale()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.util.DisplayMetrics $r1;
        float $f0;
        double $d0;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r1 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.util.DisplayMetrics getMetrics()>();

        $f0 = $r1.<android.util.DisplayMetrics: float density>;

        $d0 = (double) $f0;

        return $d0;
    }

    public int getDisplayHeight()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.util.DisplayMetrics $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r1 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.util.DisplayMetrics getMetrics()>();

        $i0 = $r1.<android.util.DisplayMetrics: int heightPixels>;

        return $i0;
    }

    public int getDisplayWidth()
    {
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo r0;
        android.util.DisplayMetrics $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.DeviceDisplayInfo;

        $r1 = specialinvoke r0.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: android.util.DisplayMetrics getMetrics()>();

        $i0 = $r1.<android.util.DisplayMetrics: int widthPixels>;

        return $i0;
    }
}
