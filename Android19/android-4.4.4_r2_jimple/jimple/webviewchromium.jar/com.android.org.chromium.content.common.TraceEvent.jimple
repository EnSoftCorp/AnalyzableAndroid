public class com.android.org.chromium.content.common.TraceEvent extends java.lang.Object
{
    private static volatile boolean sEnabled;
    private static java.lang.reflect.Method sSystemPropertiesGetLongMethod;
    private static long sTraceTagView;

    static void <clinit>()
    {
        java.lang.NoSuchFieldException r0, $r17;
        java.lang.reflect.InvocationTargetException r1, $r22;
        java.lang.IllegalAccessException r2, $r21;
        java.lang.IllegalArgumentException r3, $r18;
        java.lang.NoSuchMethodException r4, $r19;
        java.lang.ClassNotFoundException r5, $r20;
        java.lang.Class r6, $r10, $r12;
        java.lang.Class[] r7, $r13;
        java.lang.reflect.Method r8, $r14;
        java.lang.Object[] r9;
        int $i0;
        long $l1;
        java.lang.reflect.Field $r11;
        com.android.org.chromium.content.common.TraceEvent$1 $r15;

        <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled> = 0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label2;

     label1:
        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.Trace");

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TRACE_TAG_WEBVIEW");

        $l1 = virtualinvoke $r11.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);

        <com.android.org.chromium.content.common.TraceEvent: long sTraceTagView> = $l1;

        r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.SystemProperties");

        r7 = newarray (java.lang.Class)[2];

        r7[0] = class "java/lang/String";

        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        r7[1] = $r12;

        $r14 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getLong", r7);

        <com.android.org.chromium.content.common.TraceEvent: java.lang.reflect.Method sSystemPropertiesGetLongMethod> = $r14;

        $r13 = newarray (java.lang.Class)[1];

        $r13[0] = class "java/lang/Runnable";

        r8 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("addChangeCallback", $r13);

        r9 = newarray (java.lang.Object)[1];

        $r15 = new com.android.org.chromium.content.common.TraceEvent$1;

        specialinvoke $r15.<com.android.org.chromium.content.common.TraceEvent$1: void <init>()>();

        r9[0] = $r15;

        virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r9);

     label2:
        return;

     label3:
        $r20 := @caughtexception;

        r5 = $r20;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "init", r5);

        return;

     label4:
        $r19 := @caughtexception;

        r4 = $r19;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "init", r4);

        return;

     label5:
        $r18 := @caughtexception;

        r3 = $r18;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "init", r3);

        return;

     label6:
        $r21 := @caughtexception;

        r2 = $r21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "init", r2);

        return;

     label7:
        $r22 := @caughtexception;

        r1 = $r22;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "init", r1);

        return;

     label8:
        $r17 := @caughtexception;

        r0 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "init", r0);

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.NoSuchFieldException from label1 to label2 with label8;
    }

    public void <init>()
    {
        com.android.org.chromium.content.common.TraceEvent r0;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        return $z0;
    }

    public static void begin()
    {
        boolean $z0;
        java.lang.String $r0;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <com.android.org.chromium.content.common.TraceEvent: java.lang.String getCallerName()>();

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeBegin(java.lang.String,java.lang.String)>($r0, null);

     label1:
        return;
    }

    public static void begin(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeBegin(java.lang.String,java.lang.String)>(r0, null);

     label1:
        return;
    }

    public static void begin(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeBegin(java.lang.String,java.lang.String)>(r0, r1);

     label1:
        return;
    }

    public static void end()
    {
        boolean $z0;
        java.lang.String $r0;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <com.android.org.chromium.content.common.TraceEvent: java.lang.String getCallerName()>();

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeEnd(java.lang.String,java.lang.String)>($r0, null);

     label1:
        return;
    }

    public static void end(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeEnd(java.lang.String,java.lang.String)>(r0, null);

     label1:
        return;
    }

    private static java.lang.String getCallerName()
    {
        java.lang.StackTraceElement[] r0;
        java.lang.Thread $r1;
        java.lang.StringBuilder $r2, $r5, $r6, $r9;
        java.lang.StackTraceElement $r3, $r7;
        java.lang.String $r4, $r8, $r10;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0 = virtualinvoke $r1.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0[4];

        $r4 = virtualinvoke $r3.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = r0[4];

        $r8 = virtualinvoke $r7.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void instant(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeInstant(java.lang.String,java.lang.String)>(r0, null);

     label1:
        return;
    }

    public static void instant(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeInstant(java.lang.String,java.lang.String)>(r0, r1);

     label1:
        return;
    }

    private static native void nativeBegin(java.lang.String, java.lang.String);

    private static native void nativeEnd(java.lang.String, java.lang.String);

    private static native void nativeFinishAsync(java.lang.String, long, java.lang.String);

    private static native void nativeInstant(java.lang.String, java.lang.String);

    private static native void nativeStartATrace();

    private static native void nativeStartAsync(java.lang.String, long, java.lang.String);

    private static native void nativeStopATrace();

    private static native boolean nativeTraceEnabled();

    public static void setEnabled(boolean)
    {
        boolean z0, z1;
        java.lang.Throwable r0, $r3;
        android.os.Looper r1;
        com.android.org.chromium.content.common.TraceEvent$BasicLooperMonitor r2;
        android.util.Printer r4;

        z0 := @parameter0: boolean;

        entermonitor class "com/android/org/chromium/content/common/TraceEvent";

     label01:
        z1 = <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled>;

     label02:
        if z1 != z0 goto label04;

     label03:
        exitmonitor class "com/android/org/chromium/content/common/TraceEvent";

        return;

     label04:
        <com.android.org.chromium.content.common.TraceEvent: boolean sEnabled> = z0;

        r1 = staticinvoke <com.android.org.chromium.base.ThreadUtils: android.os.Looper getUiThreadLooper()>();

     label05:
        if z0 == 0 goto label10;

     label06:
        r2 = staticinvoke <com.android.org.chromium.content.common.TraceEvent$LooperMonitorHolder: com.android.org.chromium.content.common.TraceEvent$BasicLooperMonitor access$300()>();

     label07:
        r4 = (android.util.Printer) r2;

        virtualinvoke r1.<android.os.Looper: void setMessageLogging(android.util.Printer)>(r4);

     label08:
        goto label03;

     label09:
        $r3 := @caughtexception;

        r0 = $r3;

        exitmonitor class "com/android/org/chromium/content/common/TraceEvent";

        throw r0;

     label10:
        r2 = null;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public static void setEnabledToMatchNative()
    {
        boolean z0;
        java.lang.reflect.InvocationTargetException r0, $r10;
        java.lang.IllegalAccessException r1, $r11;
        java.lang.IllegalArgumentException r2, $r9;
        java.lang.reflect.Method r3, $r5;
        java.lang.Object[] r4;
        java.lang.Integer $r6;
        java.lang.Object $r7;
        java.lang.Long $r8;
        long $l0, $l1, $l2;
        byte $b3;

        z0 = staticinvoke <com.android.org.chromium.content.common.TraceEvent: boolean nativeTraceEnabled()>();

        $r5 = <com.android.org.chromium.content.common.TraceEvent: java.lang.reflect.Method sSystemPropertiesGetLongMethod>;

        if $r5 == null goto label3;

     label1:
        r3 = <com.android.org.chromium.content.common.TraceEvent: java.lang.reflect.Method sSystemPropertiesGetLongMethod>;

        r4 = newarray (java.lang.Object)[2];

        r4[0] = "debug.atrace.tags.enableflags";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r4[1] = $r6;

        $r7 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r4);

        $r8 = (java.lang.Long) $r7;

        $l0 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $l2 = <com.android.org.chromium.content.common.TraceEvent: long sTraceTagView>;

        $l1 = $l0 & $l2;

        $b3 = $l1 cmp 0L;

        if $b3 == 0 goto label4;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeStartATrace()>();

     label2:
        z0 = 1;

     label3:
        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void setEnabled(boolean)>(z0);

        return;

     label4:
        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void nativeStopATrace()>();

     label5:
        goto label3;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "setEnabledToMatchNative", r2);

        goto label3;

     label7:
        $r11 := @caughtexception;

        r1 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "setEnabledToMatchNative", r1);

        goto label3;

     label8:
        $r10 := @caughtexception;

        r0 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TraceEvent", "setEnabledToMatchNative", r0);

        goto label3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
        catch java.lang.reflect.InvocationTargetException from label4 to label5 with label8;
    }
}
