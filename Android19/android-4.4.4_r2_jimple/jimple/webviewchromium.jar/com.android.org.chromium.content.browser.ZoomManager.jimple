class com.android.org.chromium.content.browser.ZoomManager extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private final com.android.org.chromium.content.browser.ContentViewCore mContentViewCore;
    private long mCurrentEventTime;
    private final android.view.ScaleGestureDetector mMultiTouchDetector;
    private final com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/content/browser/ZoomManager";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.content.browser.ZoomManager: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    void <init>(android.content.Context, com.android.org.chromium.content.browser.ContentViewCore)
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        android.content.Context r1;
        com.android.org.chromium.content.browser.ContentViewCore r2;
        com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener $r5, r6;
        android.view.ScaleGestureDetector r7;
        android.view.ScaleGestureDetector$OnScaleGestureListener r8;

        r0 := @this: com.android.org.chromium.content.browser.ZoomManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.org.chromium.content.browser.ContentViewCore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore> = r2;

        r6 = new com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener;

        specialinvoke r6.<com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener: void <init>(com.android.org.chromium.content.browser.ZoomManager,com.android.org.chromium.content.browser.ZoomManager$1)>(r0, null);

        r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener> = r6;

        r7 = new android.view.ScaleGestureDetector;

        $r5 = r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener>;

        r8 = (android.view.ScaleGestureDetector$OnScaleGestureListener) $r5;

        specialinvoke r7.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>(r1, r8);

        r0.<com.android.org.chromium.content.browser.ZoomManager: android.view.ScaleGestureDetector mMultiTouchDetector> = r7;

        return;
    }

    static long access$000(com.android.org.chromium.content.browser.ZoomManager)
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.content.browser.ZoomManager;

        $l0 = r0.<com.android.org.chromium.content.browser.ZoomManager: long mCurrentEventTime>;

        return $l0;
    }

    static com.android.org.chromium.content.browser.ContentViewCore access$100(com.android.org.chromium.content.browser.ZoomManager)
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ZoomManager;

        $r1 = r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        return $r1;
    }

    boolean isScaleGestureDetectionInProgress()
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener $r1;
        boolean $z0, $z1;
        android.view.ScaleGestureDetector $r2;

        r0 := @this: com.android.org.chromium.content.browser.ZoomManager;

        $r1 = r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener: boolean getPermanentlyIgnoreDetectorEvents()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.ZoomManager: android.view.ScaleGestureDetector mMultiTouchDetector>;

        $z1 = virtualinvoke $r2.<android.view.ScaleGestureDetector: boolean isInProgress()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void passTouchEventThrough(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        android.view.MotionEvent r1;
        java.lang.Exception r2, $r5;
        com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener $r3;
        long $l0;
        android.view.ScaleGestureDetector $r4;
        boolean $z1;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.org.chromium.content.browser.ZoomManager;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener>;

        virtualinvoke $r3.<com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener: void setTemporarilyIgnoreDetectorEvents(boolean)>(1);

        $l0 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        r0.<com.android.org.chromium.content.browser.ZoomManager: long mCurrentEventTime> = $l0;

     label1:
        $r4 = r0.<com.android.org.chromium.content.browser.ZoomManager: android.view.ScaleGestureDetector mMultiTouchDetector>;

        virtualinvoke $r4.<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentViewZoom", "ScaleGestureDetector got into a bad state!", r2);

        $z1 = <com.android.org.chromium.content.browser.ZoomManager: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    boolean processTouchEvent(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        android.view.MotionEvent r1;
        java.lang.Exception r2, $r5;
        boolean z0, z1, $z2;
        int i0, $i2;
        com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener $r3;
        long $l1;
        android.view.ScaleGestureDetector $r4;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.org.chromium.content.browser.ZoomManager;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener>;

        virtualinvoke $r3.<com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener: void setTemporarilyIgnoreDetectorEvents(boolean)>(0);

        $l1 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        r0.<com.android.org.chromium.content.browser.ZoomManager: long mCurrentEventTime> = $l1;

     label1:
        z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.ZoomManager: boolean isScaleGestureDetectionInProgress()>();

        $r4 = r0.<com.android.org.chromium.content.browser.ZoomManager: android.view.ScaleGestureDetector mMultiTouchDetector>;

        z1 = virtualinvoke $r4.<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

     label2:
        if z0 != 0 goto label6;

     label3:
        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i2 == 1 goto label5;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

     label4:
        if i0 != 3 goto label6;

     label5:
        z1 = 0;

     label6:
        return z1;

     label7:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentViewZoom", "ScaleGestureDetector got into a bad state!", r2);

        $z2 = <com.android.org.chromium.content.browser.ZoomManager: boolean $assertionsDisabled>;

        if $z2 != 0 goto label8;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label8:
        return 0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    void updateMultiTouchSupport(boolean)
    {
        com.android.org.chromium.content.browser.ZoomManager r0;
        boolean z0, z1;
        com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener r1;

        r0 := @this: com.android.org.chromium.content.browser.ZoomManager;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.org.chromium.content.browser.ZoomManager: com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener mMultiTouchListener>;

        if z0 != 0 goto label2;

        z1 = 1;

     label1:
        virtualinvoke r1.<com.android.org.chromium.content.browser.ZoomManager$ScaleGestureListener: void setPermanentlyIgnoreDetectorEvents(boolean)>(z1);

        return;

     label2:
        z1 = 0;

        goto label1;
    }
}
