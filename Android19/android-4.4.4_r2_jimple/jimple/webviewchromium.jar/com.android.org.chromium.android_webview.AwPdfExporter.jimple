public class com.android.org.chromium.android_webview.AwPdfExporter extends java.lang.Object
{
    private android.print.PrintAttributes mAttributes;
    private final android.view.ViewGroup mContainerView;
    private android.os.ParcelFileDescriptor mFd;
    private long mNativeAwPdfExporter;
    private android.webkit.ValueCallback mResultCallback;

    void <init>(android.view.ViewGroup)
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.view.ViewGroup r1;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        r1 := @parameter0: android.view.ViewGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.view.ViewGroup mContainerView> = r1;

        return;
    }

    private void didExportPdf(boolean)
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        boolean z0;
        android.webkit.ValueCallback $r1;
        java.lang.Boolean $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>($r2);

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback> = null;

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes> = null;

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.os.ParcelFileDescriptor mFd> = null;

        return;
    }

    private int getBottomMargin()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$Margins $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $r2 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $i0 = virtualinvoke $r2.<android.print.PrintAttributes$Margins: int getBottomMils()>();

        return $i0;
    }

    private int getDpi()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $i0 = staticinvoke <com.android.org.chromium.android_webview.AwPdfExporter: int getPrintDpi(android.print.PrintAttributes)>($r1);

        return $i0;
    }

    private int getLeftMargin()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$Margins $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $r2 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $i0 = virtualinvoke $r2.<android.print.PrintAttributes$Margins: int getLeftMils()>();

        return $i0;
    }

    private int getPageHeight()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$MediaSize $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $r2 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $i0 = virtualinvoke $r2.<android.print.PrintAttributes$MediaSize: int getHeightMils()>();

        return $i0;
    }

    private int getPageWidth()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$MediaSize $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $r2 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $i0 = virtualinvoke $r2.<android.print.PrintAttributes$MediaSize: int getWidthMils()>();

        return $i0;
    }

    private static int getPrintDpi(android.print.PrintAttributes)
    {
        android.print.PrintAttributes r0;
        int i0, i1;
        android.print.PrintAttributes$Resolution $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: android.print.PrintAttributes;

        $r1 = virtualinvoke r0.<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>();

        i0 = virtualinvoke $r1.<android.print.PrintAttributes$Resolution: int getHorizontalDpi()>();

        $r2 = virtualinvoke r0.<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>();

        i1 = virtualinvoke $r2.<android.print.PrintAttributes$Resolution: int getVerticalDpi()>();

        if i0 == i1 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Horizontal and vertical DPIs differ. Using horizontal DPI  hDpi=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vDPI=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AwPdfExporter", $r8);

     label1:
        return i0;
    }

    private int getRightMargin()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$Margins $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $r2 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $i0 = virtualinvoke $r2.<android.print.PrintAttributes$Margins: int getRightMils()>();

        return $i0;
    }

    private int getTopMargin()
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.print.PrintAttributes $r1;
        android.print.PrintAttributes$Margins $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes>;

        $r2 = virtualinvoke $r1.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $i0 = virtualinvoke $r2.<android.print.PrintAttributes$Margins: int getTopMils()>();

        return $i0;
    }

    private native void nativeExportToPdf(long, int, android.os.CancellationSignal);

    private void setNativeAwPdfExporter(int)
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        int i0;
        long $l1;
        android.webkit.ValueCallback $r1, $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: long mNativeAwPdfExporter> = $l1;

        if i0 != 0 goto label1;

        $r1 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r2.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>($r3);

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback> = null;

     label1:
        return;
    }

    public void exportToPdf(android.os.ParcelFileDescriptor, android.print.PrintAttributes, android.webkit.ValueCallback, android.os.CancellationSignal)
    {
        com.android.org.chromium.android_webview.AwPdfExporter r0;
        android.os.ParcelFileDescriptor r1, $r9;
        android.print.PrintAttributes r2;
        android.webkit.ValueCallback r3, $r5;
        android.os.CancellationSignal r4;
        android.print.PrintAttributes$MediaSize $r6;
        android.print.PrintAttributes$Resolution $r7;
        android.print.PrintAttributes$Margins $r8;
        long $l0, $l2;
        byte $b1;
        int $i3;
        java.lang.Boolean $r10;
        java.lang.IllegalArgumentException $r11, $r12, $r13, $r14, $r16;
        java.lang.IllegalStateException $r15;

        r0 := @this: com.android.org.chromium.android_webview.AwPdfExporter;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.print.PrintAttributes;

        r3 := @parameter2: android.webkit.ValueCallback;

        r4 := @parameter3: android.os.CancellationSignal;

        if r1 != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fd cannot be null");

        throw $r16;

     label1:
        if r3 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resultCallback cannot be null");

        throw $r14;

     label2:
        $r5 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback>;

        if $r5 == null goto label3;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("printing is already pending");

        throw $r15;

     label3:
        $r6 = virtualinvoke r2.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        if $r6 != null goto label4;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("attributes must specify a media size");

        throw $r12;

     label4:
        $r7 = virtualinvoke r2.<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>();

        if $r7 != null goto label5;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("attributes must specify print resolution");

        throw $r13;

     label5:
        $r8 = virtualinvoke r2.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        if $r8 != null goto label6;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("attributes must specify margins");

        throw $r11;

     label6:
        $l0 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: long mNativeAwPdfExporter>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label7;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke r3.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>($r10);

        return;

     label7:
        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.webkit.ValueCallback mResultCallback> = r3;

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.print.PrintAttributes mAttributes> = r2;

        r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.os.ParcelFileDescriptor mFd> = r1;

        $l2 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: long mNativeAwPdfExporter>;

        $r9 = r0.<com.android.org.chromium.android_webview.AwPdfExporter: android.os.ParcelFileDescriptor mFd>;

        $i3 = virtualinvoke $r9.<android.os.ParcelFileDescriptor: int getFd()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwPdfExporter: void nativeExportToPdf(long,int,android.os.CancellationSignal)>($l2, $i3, r4);

        return;
    }
}
