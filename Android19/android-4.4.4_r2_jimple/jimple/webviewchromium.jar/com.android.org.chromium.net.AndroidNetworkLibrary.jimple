class com.android.org.chromium.net.AndroidNetworkLibrary extends java.lang.Object
{

    void <init>()
    {
        com.android.org.chromium.net.AndroidNetworkLibrary r0;

        r0 := @this: com.android.org.chromium.net.AndroidNetworkLibrary;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addTestRootCertificate(byte[]) throws java.security.cert.CertificateException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException
    {
        byte[] r0;

        r0 := @parameter0: byte[];

        staticinvoke <com.android.org.chromium.net.X509Util: void addTestRootCertificate(byte[])>(r0);

        return;
    }

    public static void clearTestRootCertificates() throws java.security.NoSuchAlgorithmException, java.security.cert.CertificateException, java.security.KeyStoreException
    {
        staticinvoke <com.android.org.chromium.net.X509Util: void clearTestRootCertificates()>();

        return;
    }

    public static java.lang.String getMimeTypeFromExtension(java.lang.String)
    {
        java.lang.String r0, $r4, $r5;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("foo.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>($r4);

        return $r5;
    }

    public static java.lang.String getNetworkList()
    {
        java.net.SocketException r0, $r27, $r32;
        java.util.Enumeration r1;
        java.lang.StringBuilder r2, r8, $r10, $r16, $r28, $r30, $r31;
        java.net.NetworkInterface r3;
        java.util.Iterator r5;
        java.net.InterfaceAddress r6;
        java.net.InetAddress r7;
        java.lang.String r9, $r12, $r15, $r22, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r11, $r14;
        java.util.List $r13;
        short $s0;
        int $i1, $i2;

     label01:
        r1 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

     label02:
        if r1 != null goto label04;

        return "";

     label03:
        $r27 := @caughtexception;

        r0 = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get network interfaces: ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r29);

        return "";

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r2 = $r10;

     label05:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label12;

        $r11 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.net.NetworkInterface) $r11;

     label06:
        $z2 = virtualinvoke r3.<java.net.NetworkInterface: boolean isUp()>();

        if $z2 == 0 goto label05;

        $z1 = virtualinvoke r3.<java.net.NetworkInterface: boolean isLoopback()>();

        if $z1 != 0 goto label05;

        $r13 = virtualinvoke r3.<java.net.NetworkInterface: java.util.List getInterfaceAddresses()>();

        r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.net.InterfaceAddress) $r14;

        r7 = virtualinvoke r6.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>();

        $z4 = virtualinvoke r7.<java.net.InetAddress: boolean isLoopbackAddress()>();

        if $z4 != 0 goto label07;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r8 = $r16;

        $r15 = virtualinvoke r3.<java.net.NetworkInterface: java.lang.String getName()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        r9 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z5 = r7 instanceof java.net.Inet6Address;

        if $z5 == 0 goto label08;

        $z6 = virtualinvoke r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("%");

        if $z6 == 0 goto label08;

        $i2 = virtualinvoke r9.<java.lang.String: int lastIndexOf(java.lang.String)>("%");

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label08:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $s0 = virtualinvoke r6.<java.net.InterfaceAddress: short getNetworkPrefixLength()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $i1 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i1 == 0 goto label09;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label09:
        $r22 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label10:
        goto label07;

     label11:
        $r32 := @caughtexception;

        goto label05;

     label12:
        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

        catch java.net.SocketException from label01 to label02 with label03;
        catch java.net.SocketException from label06 to label07 with label11;
        catch java.net.SocketException from label07 to label08 with label11;
        catch java.net.SocketException from label08 to label09 with label11;
        catch java.net.SocketException from label09 to label10 with label11;
    }

    public static boolean haveOnlyLoopbackAddresses()
    {
        java.lang.Exception r0, $r6;
        java.util.Enumeration r1;
        java.net.NetworkInterface r2;
        boolean z0, $z1, $z2;
        java.lang.Object $r4;
        java.net.SocketException $r5;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9;

     label1:
        r1 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

     label2:
        if r1 != null goto label5;

        return 0;

     label3:
        $r6 := @caughtexception;

        r0 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not get network interfaces: ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r9);

        return 0;

     label4:
        $r5 := @caughtexception;

     label5:
        $z1 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label8;

        $r4 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r2 = (java.net.NetworkInterface) $r4;

     label6:
        $z2 = virtualinvoke r2.<java.net.NetworkInterface: boolean isUp()>();

        if $z2 == 0 goto label5;

        z0 = virtualinvoke r2.<java.net.NetworkInterface: boolean isLoopback()>();

     label7:
        if z0 != 0 goto label5;

        return 0;

     label8:
        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.net.SocketException from label6 to label7 with label4;
    }

    public static boolean storeCertificate(android.content.Context, int, byte[])
    {
        android.content.Context r0;
        int i0;
        byte[] r1;
        android.content.ActivityNotFoundException r2, $r12;
        android.content.Intent r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r13, $r15;
        java.lang.String $r8, $r14;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

     label01:
        r3 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label02:
        tableswitch(i0)
        {
            case 1: goto label05;
            case 2: goto label05;
            case 3: goto label08;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid certificate type: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r8);

     label04:
        return 0;

     label05:
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("CERT", r1);

     label06:
        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r3);

     label07:
        return 1;

     label08:
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("PKCS12", r1);

     label09:
        goto label06;

     label10:
        $r12 := @caughtexception;

        r2 = $r12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not store crypto file: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r14);

        return 0;

        catch android.content.ActivityNotFoundException from label01 to label02 with label10;
        catch android.content.ActivityNotFoundException from label03 to label04 with label10;
        catch android.content.ActivityNotFoundException from label05 to label06 with label10;
        catch android.content.ActivityNotFoundException from label06 to label07 with label10;
        catch android.content.ActivityNotFoundException from label08 to label09 with label10;
    }

    public static boolean storeKeyPair(android.content.Context, byte[], byte[])
    {
        android.content.Context r0;
        byte[] r1, r2;
        android.content.ActivityNotFoundException r3, $r8;
        android.content.Intent r4;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

     label1:
        r4 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("PKEY", r2);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("KEY", r1);

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r4);

     label2:
        return 1;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not store key pair: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r12);

        return 0;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public static int verifyServerCertificates(byte[][], java.lang.String)
    {
        byte[][] r0;
        java.lang.String r1;
        int i0;
        java.security.KeyStoreException $r4;
        java.security.NoSuchAlgorithmException $r5;

        r0 := @parameter0: byte[][];

        r1 := @parameter1: java.lang.String;

     label1:
        i0 = staticinvoke <com.android.org.chromium.net.X509Util: int verifyServerCertificates(byte[][],java.lang.String)>(r0, r1);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return -1;

     label4:
        $r5 := @caughtexception;

        return -1;

        catch java.security.KeyStoreException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }
}
