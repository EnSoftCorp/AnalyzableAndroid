abstract class com.android.internal.os.LoggingPrintStream extends java.io.PrintStream
{
    private final java.lang.StringBuilder builder;
    private java.nio.CharBuffer decodedChars;
    private java.nio.charset.CharsetDecoder decoder;
    private java.nio.ByteBuffer encodedBytes;
    private final java.util.Formatter formatter;

    protected void <init>()
    {
        com.android.internal.os.LoggingPrintStream r0;
        com.android.internal.os.LoggingPrintStream$1 $r1;
        java.lang.StringBuilder $r2, $r4;
        java.util.Formatter $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        $r1 = new com.android.internal.os.LoggingPrintStream$1;

        specialinvoke $r1.<com.android.internal.os.LoggingPrintStream$1: void <init>()>();

        specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder> = $r2;

        $r3 = new java.util.Formatter;

        $r4 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        specialinvoke $r3.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r4, null);

        r0.<com.android.internal.os.LoggingPrintStream: java.util.Formatter formatter> = $r3;

        return;
    }

    private void flush(boolean)
    {
        com.android.internal.os.LoggingPrintStream r0;
        boolean z0;
        int i0, i1, i2;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        i2 = virtualinvoke $r7.<java.lang.StringBuilder: int indexOf(java.lang.String,int)>("\n", i1);

        if i2 == -1 goto label2;

        $r8 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String substring(int,int)>(i1, i2);

        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void log(java.lang.String)>($r9);

        i1 = i2 + 1;

        goto label1;

     label2:
        if z0 == 0 goto label4;

        if i1 >= i0 goto label3;

        $r5 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String substring(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void log(java.lang.String)>($r6);

     label3:
        $r4 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(0);

        return;

     label4:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, i1);

        return;
    }

    public java.io.PrintStream append(char)
    {
        com.android.internal.os.LoggingPrintStream r0;
        char c0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        c0 := @parameter0: char;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void print(char)>(c0);

     label2:
        exitmonitor r0;

        return r0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.io.PrintStream append(java.lang.CharSequence)
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label2:
        exitmonitor r0;

        return r0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.io.PrintStream append(java.lang.CharSequence, int, int)
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label2:
        exitmonitor r0;

        return r0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        com.android.internal.os.LoggingPrintStream r0;
        char c0;
        java.io.PrintStream $r1;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.CharSequence r1;
        java.io.PrintStream $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.io.PrintStream $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public boolean checkError()
    {
        com.android.internal.os.LoggingPrintStream r0;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        return 0;
    }

    public void close()
    {
        com.android.internal.os.LoggingPrintStream r0;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        return;
    }

    public void flush()
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public transient java.io.PrintStream format(java.lang.String, java.lang.Object[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Locale $r3;
        java.io.PrintStream $r4;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, r1, r2);

        return $r4;
    }

    public transient java.io.PrintStream format(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        java.lang.Throwable r4, $r8;
        java.util.Formatter $r5;
        java.lang.NullPointerException $r7;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        entermonitor r0;

        if r2 != null goto label3;

     label1:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("format");

        throw $r7;

     label2:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r0;

        throw r4;

     label3:
        $r5 = r0.<com.android.internal.os.LoggingPrintStream: java.util.Formatter formatter>;

        virtualinvoke $r5.<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label4:
        exitmonitor r0;

        return r0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    protected abstract void log(java.lang.String);

    public void print(char)
    {
        com.android.internal.os.LoggingPrintStream r0;
        char c0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        c0 := @parameter0: char;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label2:
        if c0 != 10 goto label4;

     label3:
        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void print(double)
    {
        com.android.internal.os.LoggingPrintStream r0;
        double d0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        d0 := @parameter0: double;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(float)
    {
        com.android.internal.os.LoggingPrintStream r0;
        float f0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        f0 := @parameter0: float;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(int)
    {
        com.android.internal.os.LoggingPrintStream r0;
        int i0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(long)
    {
        com.android.internal.os.LoggingPrintStream r0;
        long l0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(java.lang.Object)
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(java.lang.String)
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(boolean)
    {
        com.android.internal.os.LoggingPrintStream r0;
        boolean z0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void print(char[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        char[] r1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: char[];

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public transient java.io.PrintStream printf(java.lang.String, java.lang.Object[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.io.PrintStream $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public transient java.io.PrintStream printf(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        java.io.PrintStream $r4;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return $r4;
    }

    public void println()
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(char)
    {
        com.android.internal.os.LoggingPrintStream r0;
        char c0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        c0 := @parameter0: char;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(double)
    {
        com.android.internal.os.LoggingPrintStream r0;
        double d0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        d0 := @parameter0: double;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(float)
    {
        com.android.internal.os.LoggingPrintStream r0;
        float f0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        f0 := @parameter0: float;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(int)
    {
        com.android.internal.os.LoggingPrintStream r0;
        int i0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(long)
    {
        com.android.internal.os.LoggingPrintStream r0;
        long l0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(java.lang.Object)
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(java.lang.String)
    {
        com.android.internal.os.LoggingPrintStream r0;
        java.lang.String r1, $r6, $r8;
        java.lang.Throwable r2, $r7;
        int i0, i1, i2, $i3;
        java.lang.StringBuilder $r3, $r4;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        $i3 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i3 != 0 goto label11;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label08;

     label04:
        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(10, i1);

     label05:
        if i2 == -1 goto label08;

     label06:
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void log(java.lang.String)>($r8);

     label07:
        i1 = i2 + 1;

        goto label03;

     label08:
        if i1 >= i0 goto label10;

     label09:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void log(java.lang.String)>($r6);

     label10:
        exitmonitor r0;

        return;

     label11:
        $r4 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label12:
        goto label10;

     label13:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void println(boolean)
    {
        com.android.internal.os.LoggingPrintStream r0;
        boolean z0;
        java.lang.Throwable r1, $r4;
        java.lang.StringBuilder $r2;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void println(char[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        char[] r1;
        java.lang.Throwable r2, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: char[];

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>(r1);

        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void setError()
    {
        com.android.internal.os.LoggingPrintStream r0;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        return;
    }

    public void write(int)
    {
        com.android.internal.os.LoggingPrintStream r0;
        int i0;
        byte[] r1;
        byte $b1;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        i0 := @parameter0: int;

        r1 = newarray (byte)[1];

        $b1 = (byte) i0;

        r1[0] = $b1;

        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void write(byte[],int,int)>(r1, 0, 1);

        return;
    }

    public void write(byte[])
    {
        com.android.internal.os.LoggingPrintStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.internal.os.LoggingPrintStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int)
    {
        com.android.internal.os.LoggingPrintStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.Throwable r2, $r28;
        java.nio.charset.CoderResult r3;
        java.nio.charset.CharsetDecoder $r4, $r11, $r23, $r27, $r29;
        java.nio.ByteBuffer $r5, $r6, $r7, $r12, $r21, $r22;
        java.nio.CharBuffer $r9, $r13, $r14, $r19, $r25;
        java.lang.StringBuilder $r17;
        boolean $z0;
        java.nio.charset.CodingErrorAction $r24, $r30;
        java.nio.charset.Charset $r26;

        r0 := @this: com.android.internal.os.LoggingPrintStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.charset.CharsetDecoder decoder>;

        if $r4 != null goto label12;

        $r21 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(80);

        r0.<com.android.internal.os.LoggingPrintStream: java.nio.ByteBuffer encodedBytes> = $r21;

        $r25 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(80);

        r0.<com.android.internal.os.LoggingPrintStream: java.nio.CharBuffer decodedChars> = $r25;

        $r26 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r23 = virtualinvoke $r26.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r24 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r29 = virtualinvoke $r23.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r24);

        $r30 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r27 = virtualinvoke $r29.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r30);

        r0.<com.android.internal.os.LoggingPrintStream: java.nio.charset.CharsetDecoder decoder> = $r27;

     label02:
        goto label12;

     label03:
        if i0 >= i2 goto label10;

     label04:
        $r5 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.ByteBuffer encodedBytes>;

        $i4 = virtualinvoke $r5.<java.nio.ByteBuffer: int remaining()>();

        $i5 = i2 - i0;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $r6 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.ByteBuffer encodedBytes>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(r1, i0, i3);

     label05:
        i0 = i0 + i3;

     label06:
        $r7 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.ByteBuffer encodedBytes>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

     label07:
        $r11 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.charset.CharsetDecoder decoder>;

        $r12 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.ByteBuffer encodedBytes>;

        $r9 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.CharBuffer decodedChars>;

        r3 = virtualinvoke $r11.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r12, $r9, 0);

        $r13 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.CharBuffer decodedChars>;

        virtualinvoke $r13.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        $r17 = r0.<com.android.internal.os.LoggingPrintStream: java.lang.StringBuilder builder>;

        $r14 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.CharBuffer decodedChars>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r14);

        $r19 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.CharBuffer decodedChars>;

        virtualinvoke $r19.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        $z0 = virtualinvoke r3.<java.nio.charset.CoderResult: boolean isOverflow()>();

        if $z0 != 0 goto label07;

        $r22 = r0.<com.android.internal.os.LoggingPrintStream: java.nio.ByteBuffer encodedBytes>;

        virtualinvoke $r22.<java.nio.ByteBuffer: java.nio.ByteBuffer compact()>();

     label08:
        goto label03;

     label09:
        $r28 := @caughtexception;

        r2 = $r28;

        exitmonitor r0;

        throw r2;

     label10:
        specialinvoke r0.<com.android.internal.os.LoggingPrintStream: void flush(boolean)>(0);

     label11:
        exitmonitor r0;

        return;

     label12:
        i2 = i0 + i1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
