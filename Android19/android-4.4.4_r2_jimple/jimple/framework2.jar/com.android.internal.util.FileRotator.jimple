public class com.android.internal.util.FileRotator extends java.lang.Object
{
    private static final boolean LOGD;
    private static final java.lang.String SUFFIX_BACKUP;
    private static final java.lang.String SUFFIX_NO_BACKUP;
    private static final java.lang.String TAG;
    private final java.io.File mBasePath;
    private final long mDeleteAgeMillis;
    private final java.lang.String mPrefix;
    private final long mRotateAgeMillis;

    public void <init>(java.io.File, java.lang.String, long, long)
    {
        com.android.internal.util.FileRotator r0;
        java.io.File r1, r5, r6, $r8, $r11, $r12, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23;
        java.lang.String r2, r4, $r9, $r13, $r18, $r19, $r24, $r25;
        long l0, l1;
        java.lang.String[] r3;
        int i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object $r7, $r10;
        boolean $z1, $z2, $z3;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r8 = (java.io.File) $r7;

        r0.<com.android.internal.util.FileRotator: java.io.File mBasePath> = $r8;

        $r10 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.lang.String) $r10;

        r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix> = $r9;

        r0.<com.android.internal.util.FileRotator: long mRotateAgeMillis> = l0;

        r0.<com.android.internal.util.FileRotator: long mDeleteAgeMillis> = l1;

        $r11 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        virtualinvoke $r11.<java.io.File: boolean mkdirs()>();

        $r12 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r3 = virtualinvoke $r12.<java.io.File: java.lang.String[] list()>();

        i2 = lengthof r3;

        i3 = 0;

     label1:
        if i3 >= i2 goto label5;

        r4 = r3[i3];

        $r13 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>($r13);

        if $z1 != 0 goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $z3 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".backup");

        if $z3 == 0 goto label4;

        $r20 = new java.io.File;

        $r21 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r21, r4);

        $r22 = new java.io.File;

        $r23 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        $i7 = virtualinvoke r4.<java.lang.String: int length()>();

        $r25 = ".backup";

        $i9 = virtualinvoke $r25.<java.lang.String: int length()>();

        $i8 = $i7 - $i9;

        $r24 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, $r24);

        virtualinvoke $r20.<java.io.File: boolean renameTo(java.io.File)>($r22);

        goto label2;

     label4:
        $z2 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".no_backup");

        if $z2 == 0 goto label2;

        $r15 = new java.io.File;

        $r14 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, r4);

        r5 = $r15;

        $r17 = new java.io.File;

        $r16 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        $r19 = ".no_backup";

        $i6 = virtualinvoke $r19.<java.lang.String: int length()>();

        $i5 = $i4 - $i6;

        $r18 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, $r18);

        r6 = $r17;

        virtualinvoke r5.<java.io.File: boolean delete()>();

        virtualinvoke r6.<java.io.File: boolean delete()>();

        goto label2;

     label5:
        return;
    }

    private java.lang.String getActiveName(long)
    {
        com.android.internal.util.FileRotator r0;
        long l0, l1, $l5, $l7;
        java.lang.String r1, r4, $r6, $r8;
        com.android.internal.util.FileRotator$FileInfo r2, $r5;
        java.lang.String[] r3;
        int i2, i3;
        java.io.File $r7;
        boolean $z0, $z1;
        byte $b4, $b6;

        r0 := @this: com.android.internal.util.FileRotator;

        l0 := @parameter0: long;

        r1 = null;

        l1 = 9223372036854775807L;

        $r5 = new com.android.internal.util.FileRotator$FileInfo;

        $r6 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        specialinvoke $r5.<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        $r7 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r3 = virtualinvoke $r7.<java.io.File: java.lang.String[] list()>();

        i2 = lengthof r3;

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        r4 = r3[i3];

        $z1 = virtualinvoke r2.<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>(r4);

        if $z1 != 0 goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke r2.<com.android.internal.util.FileRotator$FileInfo: boolean isActive()>();

        if $z0 == 0 goto label2;

        $l5 = r2.<com.android.internal.util.FileRotator$FileInfo: long startMillis>;

        $b4 = $l5 cmp l0;

        if $b4 >= 0 goto label2;

        $l7 = r2.<com.android.internal.util.FileRotator$FileInfo: long startMillis>;

        $b6 = $l7 cmp l1;

        if $b6 >= 0 goto label2;

        r1 = r4;

        l1 = r2.<com.android.internal.util.FileRotator$FileInfo: long startMillis>;

        goto label2;

     label4:
        if r1 == null goto label5;

        return r1;

     label5:
        r2.<com.android.internal.util.FileRotator$FileInfo: long startMillis> = l0;

        r2.<com.android.internal.util.FileRotator$FileInfo: long endMillis> = 9223372036854775807L;

        $r8 = virtualinvoke r2.<com.android.internal.util.FileRotator$FileInfo: java.lang.String build()>();

        return $r8;
    }

    private static void readFile(java.io.File, com.android.internal.util.FileRotator$Reader) throws java.io.IOException
    {
        java.io.File r0;
        com.android.internal.util.FileRotator$Reader r1;
        java.io.BufferedInputStream r2, $r4;
        java.lang.Throwable r3, $r6;
        java.io.FileInputStream $r5;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: com.android.internal.util.FileRotator$Reader;

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        r2 = $r4;

     label1:
        interfaceinvoke r1.<com.android.internal.util.FileRotator$Reader: void read(java.io.InputStream)>(r2);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.io.IOException rethrowAsIoException(java.lang.Throwable) throws java.io.IOException
    {
        java.lang.Throwable r0;
        boolean $z0;
        java.io.IOException $r1, $r3;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof java.io.IOException;

        if $z0 == 0 goto label1;

        $r3 = (java.io.IOException) r0;

        throw $r3;

     label1:
        $r1 = new java.io.IOException;

        $r2 = virtualinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r2, r0);

        throw $r1;
    }

    private void rewriteSingle(com.android.internal.util.FileRotator$Rewriter, java.lang.String) throws java.io.IOException
    {
        com.android.internal.util.FileRotator r0;
        com.android.internal.util.FileRotator$Rewriter r1;
        java.lang.String r2, $r14, $r21;
        java.io.File r3, r4, r6, $r8, $r9, $r11, $r13, $r16, $r17;
        java.lang.Throwable r5, r7, $r22, $r24;
        boolean $z0, $z3;
        java.lang.StringBuilder $r10, $r12, $r15, $r18, $r19, $r20;
        java.io.IOException $r23, $r25;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: com.android.internal.util.FileRotator$Rewriter;

        r2 := @parameter1: java.lang.String;

        $r8 = new java.io.File;

        $r9 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r2);

        r3 = $r8;

        interfaceinvoke r1.<com.android.internal.util.FileRotator$Rewriter: void reset()>();

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        staticinvoke <com.android.internal.util.FileRotator: void readFile(java.io.File,com.android.internal.util.FileRotator$Reader)>(r3, r1);

        $z3 = interfaceinvoke r1.<com.android.internal.util.FileRotator$Rewriter: boolean shouldWrite()>();

        if $z3 != 0 goto label1;

        return;

     label1:
        $r16 = new java.io.File;

        $r17 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".backup");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r17, $r21);

        r6 = $r16;

        virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>(r6);

     label2:
        staticinvoke <com.android.internal.util.FileRotator: void writeFile(java.io.File,com.android.internal.util.FileRotator$Writer)>(r3, r1);

        virtualinvoke r6.<java.io.File: boolean delete()>();

     label3:
        return;

     label4:
        $r24 := @caughtexception;

        r7 = $r24;

        virtualinvoke r3.<java.io.File: boolean delete()>();

        virtualinvoke r6.<java.io.File: boolean renameTo(java.io.File)>(r3);

        $r25 = staticinvoke <com.android.internal.util.FileRotator: java.io.IOException rethrowAsIoException(java.lang.Throwable)>(r7);

        throw $r25;

     label5:
        $r11 = new java.io.File;

        $r13 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".no_backup");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, $r14);

        r4 = $r11;

        virtualinvoke r4.<java.io.File: boolean createNewFile()>();

     label6:
        staticinvoke <com.android.internal.util.FileRotator: void writeFile(java.io.File,com.android.internal.util.FileRotator$Writer)>(r3, r1);

        virtualinvoke r4.<java.io.File: boolean delete()>();

     label7:
        return;

     label8:
        $r22 := @caughtexception;

        r5 = $r22;

        virtualinvoke r3.<java.io.File: boolean delete()>();

        virtualinvoke r4.<java.io.File: boolean delete()>();

        $r23 = staticinvoke <com.android.internal.util.FileRotator: java.io.IOException rethrowAsIoException(java.lang.Throwable)>(r5);

        throw $r23;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private static void writeFile(java.io.File, com.android.internal.util.FileRotator$Writer) throws java.io.IOException
    {
        java.io.File r0;
        com.android.internal.util.FileRotator$Writer r1;
        java.io.FileOutputStream r2, $r5;
        java.io.BufferedOutputStream r3, $r6;
        java.lang.Throwable r4, $r7;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: com.android.internal.util.FileRotator$Writer;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        r2 = $r5;

        $r6 = new java.io.BufferedOutputStream;

        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r2);

        r3 = $r6;

     label1:
        interfaceinvoke r1.<com.android.internal.util.FileRotator$Writer: void write(java.io.OutputStream)>(r3);

        virtualinvoke r3.<java.io.BufferedOutputStream: void flush()>();

     label2:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        return;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void combineActive(com.android.internal.util.FileRotator$Reader, com.android.internal.util.FileRotator$Writer, long) throws java.io.IOException
    {
        com.android.internal.util.FileRotator r0;
        com.android.internal.util.FileRotator$Reader r1;
        com.android.internal.util.FileRotator$Writer r2;
        long l0;
        com.android.internal.util.FileRotator$1 $r3;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: com.android.internal.util.FileRotator$Reader;

        r2 := @parameter1: com.android.internal.util.FileRotator$Writer;

        l0 := @parameter2: long;

        $r3 = new com.android.internal.util.FileRotator$1;

        specialinvoke $r3.<com.android.internal.util.FileRotator$1: void <init>(com.android.internal.util.FileRotator,com.android.internal.util.FileRotator$Reader,com.android.internal.util.FileRotator$Writer)>(r0, r1, r2);

        virtualinvoke r0.<com.android.internal.util.FileRotator: void rewriteActive(com.android.internal.util.FileRotator$Rewriter,long)>($r3, l0);

        return;
    }

    public void deleteAll()
    {
        com.android.internal.util.FileRotator r0;
        com.android.internal.util.FileRotator$FileInfo r1, $r4;
        java.lang.String[] r2;
        int i0, i1;
        java.lang.String r3, $r5;
        java.io.File $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.internal.util.FileRotator;

        $r4 = new com.android.internal.util.FileRotator$FileInfo;

        $r5 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        specialinvoke $r4.<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>($r5);

        r1 = $r4;

        $r6 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r2 = virtualinvoke $r6.<java.io.File: java.lang.String[] list()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r1.<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>(r3);

        if $z0 == 0 goto label2;

        $r7 = new java.io.File;

        $r8 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, r3);

        virtualinvoke $r7.<java.io.File: boolean delete()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void dumpAll(java.io.OutputStream) throws java.io.IOException
    {
        com.android.internal.util.FileRotator r0;
        java.io.OutputStream r1;
        java.util.zip.ZipOutputStream r2, $r9;
        com.android.internal.util.FileRotator$FileInfo r3, $r10;
        java.lang.Throwable r4, r8, $r17, $r18;
        java.lang.String[] r5;
        int i0, i1;
        java.lang.String r6, $r11;
        java.io.FileInputStream r7, $r15;
        java.io.File $r12, $r14, $r16;
        java.util.zip.ZipEntry $r13;
        boolean $z0;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: java.io.OutputStream;

        $r9 = new java.util.zip.ZipOutputStream;

        specialinvoke $r9.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>(r1);

        r2 = $r9;

     label01:
        $r10 = new com.android.internal.util.FileRotator$FileInfo;

        $r11 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        specialinvoke $r10.<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>($r11);

        r3 = $r10;

        $r12 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r5 = virtualinvoke $r12.<java.io.File: java.lang.String[] list()>();

        i0 = lengthof r5;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label11;

     label04:
        r6 = r5[i1];

        $z0 = virtualinvoke r3.<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>(r6);

        if $z0 == 0 goto label12;

        $r13 = new java.util.zip.ZipEntry;

        specialinvoke $r13.<java.util.zip.ZipEntry: void <init>(java.lang.String)>(r6);

        virtualinvoke r2.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r13);

        $r15 = new java.io.FileInputStream;

        $r14 = new java.io.File;

        $r16 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, r6);

        specialinvoke $r15.<java.io.FileInputStream: void <init>(java.io.File)>($r14);

        r7 = $r15;

     label05:
        staticinvoke <libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>(r7, r2);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

        virtualinvoke r2.<java.util.zip.ZipOutputStream: void closeEntry()>();

     label07:
        goto label12;

     label08:
        $r17 := @caughtexception;

        r8 = $r17;

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

        throw r8;

     label10:
        $r18 := @caughtexception;

        r4 = $r18;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r4;

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return;

     label12:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public void maybeRotate(long)
    {
        com.android.internal.util.FileRotator r0;
        long l0, l1, l2, $l5, $l6, $l8, $l9;
        com.android.internal.util.FileRotator$FileInfo r1, $r4;
        java.lang.String[] r2;
        int i3, i4;
        java.lang.String r3, $r5, $r12;
        java.io.File $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        boolean $z1, $z2;
        byte $b7, $b10;

        r0 := @this: com.android.internal.util.FileRotator;

        l0 := @parameter0: long;

        $l5 = r0.<com.android.internal.util.FileRotator: long mRotateAgeMillis>;

        l1 = l0 - $l5;

        $l6 = r0.<com.android.internal.util.FileRotator: long mDeleteAgeMillis>;

        l2 = l0 - $l6;

        $r4 = new com.android.internal.util.FileRotator$FileInfo;

        $r5 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        specialinvoke $r4.<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>($r5);

        r1 = $r4;

        $r6 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r2 = virtualinvoke $r6.<java.io.File: java.lang.String[] list()>();

        i3 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i3 goto label5;

        r3 = r2[i4];

        $z2 = virtualinvoke r1.<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>(r3);

        if $z2 != 0 goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $z1 = virtualinvoke r1.<com.android.internal.util.FileRotator$FileInfo: boolean isActive()>();

        if $z1 == 0 goto label4;

        $l9 = r1.<com.android.internal.util.FileRotator$FileInfo: long startMillis>;

        $b10 = $l9 cmp l1;

        if $b10 > 0 goto label2;

        r1.<com.android.internal.util.FileRotator$FileInfo: long endMillis> = l0;

        $r9 = new java.io.File;

        $r11 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, r3);

        $r10 = new java.io.File;

        $r13 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        $r12 = virtualinvoke r1.<com.android.internal.util.FileRotator$FileInfo: java.lang.String build()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, $r12);

        virtualinvoke $r9.<java.io.File: boolean renameTo(java.io.File)>($r10);

        goto label2;

     label4:
        $l8 = r1.<com.android.internal.util.FileRotator$FileInfo: long endMillis>;

        $b7 = $l8 cmp l2;

        if $b7 > 0 goto label2;

        $r8 = new java.io.File;

        $r7 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r3);

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        goto label2;

     label5:
        return;
    }

    public void readMatching(com.android.internal.util.FileRotator$Reader, long, long) throws java.io.IOException
    {
        com.android.internal.util.FileRotator r0;
        com.android.internal.util.FileRotator$Reader r1;
        long l0, l1, $l5, $l7;
        com.android.internal.util.FileRotator$FileInfo r2, $r5;
        java.lang.String[] r3;
        int i2, i3;
        java.lang.String r4, $r6;
        java.io.File $r7, $r8, $r9;
        boolean $z0;
        byte $b4, $b6;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: com.android.internal.util.FileRotator$Reader;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r5 = new com.android.internal.util.FileRotator$FileInfo;

        $r6 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        specialinvoke $r5.<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        $r7 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r3 = virtualinvoke $r7.<java.io.File: java.lang.String[] list()>();

        i2 = lengthof r3;

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        r4 = r3[i3];

        $z0 = virtualinvoke r2.<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>(r4);

        if $z0 != 0 goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $l5 = r2.<com.android.internal.util.FileRotator$FileInfo: long startMillis>;

        $b4 = $l5 cmp l1;

        if $b4 > 0 goto label2;

        $l7 = r2.<com.android.internal.util.FileRotator$FileInfo: long endMillis>;

        $b6 = l0 cmp $l7;

        if $b6 > 0 goto label2;

        $r9 = new java.io.File;

        $r8 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, r4);

        staticinvoke <com.android.internal.util.FileRotator: void readFile(java.io.File,com.android.internal.util.FileRotator$Reader)>($r9, r1);

        goto label2;

     label4:
        return;
    }

    public void rewriteActive(com.android.internal.util.FileRotator$Rewriter, long) throws java.io.IOException
    {
        com.android.internal.util.FileRotator r0;
        com.android.internal.util.FileRotator$Rewriter r1;
        long l0;
        java.lang.String $r2;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: com.android.internal.util.FileRotator$Rewriter;

        l0 := @parameter1: long;

        $r2 = specialinvoke r0.<com.android.internal.util.FileRotator: java.lang.String getActiveName(long)>(l0);

        specialinvoke r0.<com.android.internal.util.FileRotator: void rewriteSingle(com.android.internal.util.FileRotator$Rewriter,java.lang.String)>(r1, $r2);

        return;
    }

    public void rewriteAll(com.android.internal.util.FileRotator$Rewriter) throws java.io.IOException
    {
        com.android.internal.util.FileRotator r0;
        com.android.internal.util.FileRotator$Rewriter r1;
        com.android.internal.util.FileRotator$FileInfo r2, $r5;
        java.lang.String[] r3;
        int i0, i1;
        java.lang.String r4, $r6;
        java.io.File $r7;
        boolean $z0;

        r0 := @this: com.android.internal.util.FileRotator;

        r1 := @parameter0: com.android.internal.util.FileRotator$Rewriter;

        $r5 = new com.android.internal.util.FileRotator$FileInfo;

        $r6 = r0.<com.android.internal.util.FileRotator: java.lang.String mPrefix>;

        specialinvoke $r5.<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        $r7 = r0.<com.android.internal.util.FileRotator: java.io.File mBasePath>;

        r3 = virtualinvoke $r7.<java.io.File: java.lang.String[] list()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $z0 = virtualinvoke r2.<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>(r4);

        if $z0 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        specialinvoke r0.<com.android.internal.util.FileRotator: void rewriteSingle(com.android.internal.util.FileRotator$Rewriter,java.lang.String)>(r1, r4);

        goto label2;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.FileRotator: java.lang.String TAG> = "FileRotator";

        <com.android.internal.util.FileRotator: java.lang.String SUFFIX_NO_BACKUP> = ".no_backup";

        <com.android.internal.util.FileRotator: java.lang.String SUFFIX_BACKUP> = ".backup";

        <com.android.internal.util.FileRotator: boolean LOGD> = 0;

        return;
    }
}
