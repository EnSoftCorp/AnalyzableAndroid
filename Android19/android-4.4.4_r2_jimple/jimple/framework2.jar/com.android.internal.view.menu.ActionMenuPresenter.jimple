public class com.android.internal.view.menu.ActionMenuPresenter extends com.android.internal.view.menu.BaseMenuPresenter implements android.view.ActionProvider$SubUiVisibilityListener
{
    private static final java.lang.String TAG;
    private final android.util.SparseBooleanArray mActionButtonGroups;
    private com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup;
    private int mActionItemWidthLimit;
    private boolean mExpandedActionViewsExclusive;
    private int mMaxItems;
    private boolean mMaxItemsSet;
    private int mMinCellSize;
    int mOpenSubMenuId;
    private android.view.View mOverflowButton;
    private com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup;
    final com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback;
    private com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable;
    private boolean mReserveOverflow;
    private boolean mReserveOverflowSet;
    private android.view.View mScrapActionButtonView;
    private boolean mStrictWidthLimit;
    private int mWidthLimit;
    private boolean mWidthLimitSet;

    public void <init>(android.content.Context)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.content.Context r1;
        android.util.SparseBooleanArray $r2;
        com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>(r1, 17367068, 17367067);

        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups> = $r2;

        $r3 = new com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback;

        specialinvoke $r3.<com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$1)>(r0, null);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback> = $r3;

        return;
    }

    static com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$100(com.android.internal.view.menu.ActionMenuPresenter)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup>;

        return $r1;
    }

    static com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$102(com.android.internal.view.menu.ActionMenuPresenter, com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter1: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup> = r1;

        return r1;
    }

    static com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup access$200(com.android.internal.view.menu.ActionMenuPresenter)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup>;

        return $r1;
    }

    static com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup access$202(com.android.internal.view.menu.ActionMenuPresenter, com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter1: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup> = r1;

        return r1;
    }

    static com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$300(com.android.internal.view.menu.ActionMenuPresenter)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable>;

        return $r1;
    }

    static com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$302(com.android.internal.view.menu.ActionMenuPresenter, com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter1: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable> = r1;

        return r1;
    }

    static android.view.View access$400(com.android.internal.view.menu.ActionMenuPresenter)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        return $r1;
    }

    private android.view.View findViewForItem(android.view.MenuItem)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.view.MenuItem r1;
        android.view.ViewGroup r2;
        int i0, i1;
        android.view.View r3;
        com.android.internal.view.menu.MenuView $r4;
        boolean $z0;
        com.android.internal.view.menu.MenuView$ItemView $r5;
        com.android.internal.view.menu.MenuItemImpl $r6;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.view.MenuItem;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        r2 = (android.view.ViewGroup) $r4;

        if r2 != null goto label2;

        r3 = null;

     label1:
        return r3;

     label2:
        i0 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        $z0 = r3 instanceof com.android.internal.view.menu.MenuView$ItemView;

        if $z0 == 0 goto label4;

        $r5 = (com.android.internal.view.menu.MenuView$ItemView) r3;

        $r6 = interfaceinvoke $r5.<com.android.internal.view.menu.MenuView$ItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>();

        if $r6 == r1 goto label1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    public void bindItemView(com.android.internal.view.menu.MenuItemImpl, com.android.internal.view.menu.MenuView$ItemView)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.MenuItemImpl r1;
        com.android.internal.view.menu.MenuView$ItemView r2;
        com.android.internal.view.menu.ActionMenuView r3;
        com.android.internal.view.menu.ActionMenuItemView r4;
        com.android.internal.view.menu.MenuView $r5;
        boolean $z0;
        com.android.internal.view.menu.ActionMenuPresenter$1 r7;
        android.view.View$OnTouchListener r8;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        r2 := @parameter1: com.android.internal.view.menu.MenuView$ItemView;

        interfaceinvoke r2.<com.android.internal.view.menu.MenuView$ItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>(r1, 0);

        $r5 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        r3 = (com.android.internal.view.menu.ActionMenuView) $r5;

        r4 = (com.android.internal.view.menu.ActionMenuItemView) r2;

        virtualinvoke r4.<com.android.internal.view.menu.ActionMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)>(r3);

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>();

        if $z0 == 0 goto label1;

        r7 = new com.android.internal.view.menu.ActionMenuPresenter$1;

        specialinvoke r7.<com.android.internal.view.menu.ActionMenuPresenter$1: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.view.View,com.android.internal.view.menu.MenuItemImpl)>(r0, r4, r1);

        r8 = (android.view.View$OnTouchListener) r7;

        virtualinvoke r4.<com.android.internal.view.menu.ActionMenuItemView: void setOnTouchListener(android.view.View$OnTouchListener)>(r8);

        return;

     label1:
        virtualinvoke r4.<com.android.internal.view.menu.ActionMenuItemView: void setOnTouchListener(android.view.View$OnTouchListener)>(null);

        return;
    }

    public boolean dismissPopupMenus()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>();

        $z1 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>();

        $z2 = $z0 | $z1;

        return $z2;
    }

    public boolean filterLeftoverView(android.view.ViewGroup, int)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.view.ViewGroup r1;
        int i0;
        android.view.View $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i0);

        $r3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        if $r2 != $r3 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>(r1, i0);

        return $z0;
    }

    public boolean flagActionItems()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        java.util.ArrayList r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.view.ViewGroup r2;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        android.util.SparseBooleanArray r3;
        com.android.internal.view.menu.MenuItemImpl r4, r5, r9;
        android.view.View r6, r7, $r13, $r14, $r15, $r16;
        com.android.internal.view.menu.MenuBuilder $r8;
        com.android.internal.view.menu.MenuView $r10;
        java.lang.Object $r11, $r12, $r17;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $r8 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        r1 = virtualinvoke $r8.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>();

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMaxItems>;

        i2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mActionItemWidthLimit>;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $r10 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        r2 = (android.view.ViewGroup) $r10;

        i4 = 0;

        i5 = 0;

        i6 = 0;

        z0 = 0;

        i7 = 0;

     label01:
        if i7 >= i0 goto label06;

        $r17 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r9 = (com.android.internal.view.menu.MenuItemImpl) $r17;

        $z14 = virtualinvoke r9.<com.android.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>();

        if $z14 == 0 goto label04;

        i4 = i4 + 1;

     label02:
        $z16 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mExpandedActionViewsExclusive>;

        if $z16 == 0 goto label03;

        $z17 = virtualinvoke r9.<com.android.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>();

        if $z17 == 0 goto label03;

        i1 = 0;

     label03:
        i7 = i7 + 1;

        goto label01;

     label04:
        $z15 = virtualinvoke r9.<com.android.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>();

        if $z15 == 0 goto label05;

        i5 = i5 + 1;

        goto label02;

     label05:
        z0 = 1;

        goto label02;

     label06:
        $z6 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow>;

        if $z6 == 0 goto label08;

        if z0 != 0 goto label07;

        $i22 = i4 + i5;

        if $i22 <= i1 goto label08;

     label07:
        i1 = i1 + -1;

     label08:
        i8 = i1 - i4;

        r3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups>;

        virtualinvoke r3.<android.util.SparseBooleanArray: void clear()>();

        z1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mStrictWidthLimit>;

        i9 = 0;

        i11 = 0;

        if z1 == 0 goto label09;

        $i23 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMinCellSize>;

        i11 = i2 / $i23;

        $i24 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMinCellSize>;

        i18 = i2 % $i24;

        $i26 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMinCellSize>;

        $i25 = i18 / i11;

        i9 = $i26 + $i25;

     label09:
        i10 = 0;

     label10:
        if i10 >= i0 goto label39;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r4 = (com.android.internal.view.menu.MenuItemImpl) $r11;

        $z8 = virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>();

        if $z8 == 0 goto label17;

        $r16 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView>;

        r7 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>(r4, $r16, r2);

        $r15 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView>;

        if $r15 != null goto label11;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView> = r7;

     label11:
        $z13 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mStrictWidthLimit>;

        if $z13 == 0 goto label16;

        $i21 = staticinvoke <com.android.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>(r7, i9, i11, i3, 0);

        i11 = i11 - $i21;

     label12:
        i17 = virtualinvoke r7.<android.view.View: int getMeasuredWidth()>();

        i2 = i2 - i17;

        if i6 != 0 goto label13;

        i6 = i17;

     label13:
        i16 = virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if i16 == 0 goto label14;

        virtualinvoke r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i16, 1);

     label14:
        virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>(1);

     label15:
        i10 = i10 + 1;

        goto label10;

     label16:
        virtualinvoke r7.<android.view.View: void measure(int,int)>(i3, i3);

        goto label12;

     label17:
        $z7 = virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>();

        if $z7 == 0 goto label38;

        i12 = virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>();

        z3 = virtualinvoke r3.<android.util.SparseBooleanArray: boolean get(int)>(i12);

        if i8 > 0 goto label18;

        if z3 == 0 goto label28;

     label18:
        if i2 <= 0 goto label28;

        $z12 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mStrictWidthLimit>;

        if $z12 == 0 goto label19;

        if i11 <= 0 goto label28;

     label19:
        z2 = 1;

     label20:
        if z2 == 0 goto label25;

        $r14 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView>;

        r6 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>(r4, $r14, r2);

        $r13 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView>;

        if $r13 != null goto label21;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView> = r6;

     label21:
        $z10 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mStrictWidthLimit>;

        if $z10 == 0 goto label29;

        i15 = staticinvoke <com.android.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>(r6, i9, i11, i3, 0);

        i11 = i11 - i15;

        if i15 != 0 goto label22;

        z2 = 0;

     label22:
        i14 = virtualinvoke r6.<android.view.View: int getMeasuredWidth()>();

        i2 = i2 - i14;

        if i6 != 0 goto label23;

        i6 = i14;

     label23:
        $z11 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mStrictWidthLimit>;

        if $z11 == 0 goto label31;

        if i2 < 0 goto label30;

        z4 = 1;

     label24:
        z2 = z2 & z4;

     label25:
        if z2 == 0 goto label34;

        if i12 == 0 goto label34;

        virtualinvoke r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i12, 1);

     label26:
        if z2 == 0 goto label27;

        i8 = i8 + -1;

     label27:
        virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>(z2);

        goto label15;

     label28:
        z2 = 0;

        goto label20;

     label29:
        virtualinvoke r6.<android.view.View: void measure(int,int)>(i3, i3);

        goto label22;

     label30:
        z4 = 0;

        goto label24;

     label31:
        $i20 = i2 + i6;

        if $i20 <= 0 goto label33;

        z5 = 1;

     label32:
        z2 = z2 & z5;

        goto label25;

     label33:
        z5 = 0;

        goto label32;

     label34:
        if z3 == 0 goto label26;

        virtualinvoke r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i12, 0);

        i13 = 0;

     label35:
        if i13 >= i10 goto label26;

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r5 = (com.android.internal.view.menu.MenuItemImpl) $r12;

        $i19 = virtualinvoke r5.<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>();

        if $i19 != i12 goto label37;

        $z9 = virtualinvoke r5.<com.android.internal.view.menu.MenuItemImpl: boolean isActionButton()>();

        if $z9 == 0 goto label36;

        i8 = i8 + 1;

     label36:
        virtualinvoke r5.<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>(0);

     label37:
        i13 = i13 + 1;

        goto label35;

     label38:
        virtualinvoke r4.<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>(0);

        goto label15;

     label39:
        return 1;
    }

    public android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl, android.view.View, android.view.ViewGroup)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.MenuItemImpl r1;
        android.view.View r2, r4;
        android.view.ViewGroup r3;
        byte b0;
        com.android.internal.view.menu.ActionMenuView r5;
        android.view.ViewGroup$LayoutParams r6;
        boolean $z0, $z1, $z2;
        com.android.internal.view.menu.ActionMenuView$LayoutParams $r7;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.ViewGroup;

        r4 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()>();

        if r4 == null goto label1;

        $z2 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>();

        if $z2 == 0 goto label2;

     label1:
        r4 = specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>(r1, r2, r3);

     label2:
        $z0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>();

        if $z0 == 0 goto label5;

        b0 = 8;

     label3:
        virtualinvoke r4.<android.view.View: void setVisibility(int)>(b0);

        r5 = (com.android.internal.view.menu.ActionMenuView) r3;

        r6 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z1 = virtualinvoke r5.<com.android.internal.view.menu.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r6);

        if $z1 != 0 goto label4;

        $r7 = virtualinvoke r5.<com.android.internal.view.menu.ActionMenuView: com.android.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r6);

        virtualinvoke r4.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r7);

     label4:
        return r4;

     label5:
        b0 = 0;

        goto label3;
    }

    public com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.view.ViewGroup r1;
        com.android.internal.view.menu.MenuView r2;
        com.android.internal.view.menu.ActionMenuView $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.view.ViewGroup;

        r2 = specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r1);

        $r3 = (com.android.internal.view.menu.ActionMenuView) r2;

        virtualinvoke $r3.<com.android.internal.view.menu.ActionMenuView: void setPresenter(com.android.internal.view.menu.ActionMenuPresenter)>(r0);

        return r2;
    }

    public boolean hideOverflowMenu()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup r1;
        com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable $r2, $r5;
        com.android.internal.view.menu.MenuView $r3, $r4;
        android.view.View $r6;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r6 = (android.view.View) $r4;

        $r5 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable>;

        virtualinvoke $r6.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r5);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable> = null;

        return 1;

     label1:
        r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup>;

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.internal.view.menu.MenuPopupHelper: void dismiss()>();

        return 1;

     label2:
        return 0;
    }

    public boolean hideSubMenus()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu $r1, $r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup>;

        virtualinvoke $r2.<com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void dismiss()>();

        return 1;

     label1:
        return 0;
    }

    public void initForMenu(android.content.Context, com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.content.Context r1, $r9;
        com.android.internal.view.menu.MenuBuilder r2;
        android.content.res.Resources r3;
        com.android.internal.view.ActionBarPolicy r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.util.DisplayMetrics $r5;
        float $f0, $f1;
        android.view.View $r6, $r7, $r10;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton $r8;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.view.menu.MenuBuilder;

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>(r1, r2);

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = staticinvoke <com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>(r1);

        $z0 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflowSet>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r4.<com.android.internal.view.ActionBarPolicy: boolean showsOverflowMenuButton()>();

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow> = $z4;

     label1:
        $z1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mWidthLimitSet>;

        if $z1 != 0 goto label2;

        $i5 = virtualinvoke r4.<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()>();

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mWidthLimit> = $i5;

     label2:
        $z2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mMaxItemsSet>;

        if $z2 != 0 goto label3;

        $i4 = virtualinvoke r4.<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()>();

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMaxItems> = $i4;

     label3:
        i0 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mWidthLimit>;

        $z3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow>;

        if $z3 == 0 goto label6;

        $r7 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        if $r7 != null goto label4;

        $r8 = new com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton;

        $r9 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.content.Context mSystemContext>;

        specialinvoke $r8.<com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context)>(r0, $r9);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton> = $r8;

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $r10 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        virtualinvoke $r10.<android.view.View: void measure(int,int)>(i1, i1);

     label4:
        $r6 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        $i3 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        i0 = i0 - $i3;

     label5:
        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mActionItemWidthLimit> = i0;

        $r5 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        $f1 = 56.0F * $f0;

        $i2 = (int) $f1;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMinCellSize> = $i2;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mScrapActionButtonView> = null;

        return;

     label6:
        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton> = null;

        goto label5;
    }

    public boolean isOverflowMenuShowPending()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable $r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable>;

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup>;

        $z0 = virtualinvoke $r2.<com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $z0 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow>;

        return $z0;
    }

    public void onCloseMenu(com.android.internal.view.menu.MenuBuilder, boolean)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.MenuBuilder r1;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>();

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>(r1, z0);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.content.res.Configuration r1;
        boolean $z0;
        com.android.internal.view.menu.MenuBuilder $r2, $r3;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        int $i0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.content.res.Configuration;

        $z0 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mMaxItemsSet>;

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694794);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMaxItems> = $i0;

     label1:
        $r2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        virtualinvoke $r3.<com.android.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1);

     label2:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        android.os.Parcelable r1;
        com.android.internal.view.menu.ActionMenuPresenter$SavedState r2;
        android.view.MenuItem r3;
        int $i0, $i1;
        com.android.internal.view.menu.MenuBuilder $r4;
        android.view.SubMenu $r5;
        com.android.internal.view.menu.SubMenuBuilder $r6;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (com.android.internal.view.menu.ActionMenuPresenter$SavedState) r1;

        $i0 = r2.<com.android.internal.view.menu.ActionMenuPresenter$SavedState: int openSubMenuId>;

        if $i0 <= 0 goto label1;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        $i1 = r2.<com.android.internal.view.menu.ActionMenuPresenter$SavedState: int openSubMenuId>;

        r3 = virtualinvoke $r4.<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>($i1);

        if r3 == null goto label1;

        $r5 = interfaceinvoke r3.<android.view.MenuItem: android.view.SubMenu getSubMenu()>();

        $r6 = (com.android.internal.view.menu.SubMenuBuilder) $r5;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>($r6);

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.ActionMenuPresenter$SavedState r1, r3;
        int $i0;
        android.os.Parcelable r4;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r3 = new com.android.internal.view.menu.ActionMenuPresenter$SavedState;

        specialinvoke r3.<com.android.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()>();

        r1 = r3;

        $i0 = r0.<com.android.internal.view.menu.ActionMenuPresenter: int mOpenSubMenuId>;

        r1.<com.android.internal.view.menu.ActionMenuPresenter$SavedState: int openSubMenuId> = $i0;

        r4 = (android.os.Parcelable) r1;

        return r4;
    }

    public boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        com.android.internal.view.menu.SubMenuBuilder r1, r2;
        android.view.View r3, $r13;
        boolean $z0;
        android.view.Menu $r4, $r12;
        com.android.internal.view.menu.MenuBuilder $r5;
        android.view.MenuItem $r6, $r7;
        int $i0;
        com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu $r8, $r10, $r11;
        android.content.Context $r9;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        r1 := @parameter0: com.android.internal.view.menu.SubMenuBuilder;

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.SubMenuBuilder: boolean hasVisibleItems()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = r1;

     label3:
        $r4 = virtualinvoke r2.<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()>();

        $r5 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        if $r4 == $r5 goto label4;

        $r12 = virtualinvoke r2.<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()>();

        r2 = (com.android.internal.view.menu.SubMenuBuilder) $r12;

        goto label3;

     label4:
        $r6 = virtualinvoke r2.<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>();

        r3 = specialinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)>($r6);

        if r3 != null goto label5;

        $r13 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        if $r13 == null goto label1;

        r3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

     label5:
        $r7 = virtualinvoke r1.<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>();

        $i0 = interfaceinvoke $r7.<android.view.MenuItem: int getItemId()>();

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mOpenSubMenuId> = $i0;

        $r8 = new com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu;

        $r9 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.content.Context mContext>;

        specialinvoke $r8.<com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.SubMenuBuilder)>(r0, $r9, r1);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup> = $r8;

        $r10 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup>;

        virtualinvoke $r10.<com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void setAnchorView(android.view.View)>(r3);

        $r11 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup>;

        virtualinvoke $r11.<com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void show()>();

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>(r1);

        return 1;
    }

    public void onSubUiVisibilityChanged(boolean)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean z0;
        com.android.internal.view.menu.MenuBuilder $r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>(null);

        return;

     label1:
        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        virtualinvoke $r1.<com.android.internal.view.menu.MenuBuilder: void close(boolean)>(0);

        return;
    }

    public void setExpandedActionViewsExclusive(boolean)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mExpandedActionViewsExclusive> = z0;

        return;
    }

    public void setItemLimit(int)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        int i0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        i0 := @parameter0: int;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mMaxItems> = i0;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mMaxItemsSet> = 1;

        return;
    }

    public void setReserveOverflow(boolean)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow> = z0;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflowSet> = 1;

        return;
    }

    public void setWidthLimit(int, boolean)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: int mWidthLimit> = i0;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mStrictWidthLimit> = z0;

        r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mWidthLimitSet> = 1;

        return;
    }

    public boolean shouldIncludeItem(int, com.android.internal.view.menu.MenuItemImpl)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        int i0;
        com.android.internal.view.menu.MenuItemImpl r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.view.menu.MenuItemImpl;

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isActionButton()>();

        return $z0;
    }

    public boolean showOverflowMenu()
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean $z0, $z1, $z2;
        com.android.internal.view.menu.MenuBuilder $r1, $r4, $r9;
        com.android.internal.view.menu.MenuView $r2, $r11;
        com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable $r3, $r6, $r12;
        java.util.ArrayList $r5;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup $r7;
        android.view.View $r8, $r13;
        android.content.Context $r10;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        $z0 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        if $z1 != 0 goto label1;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable>;

        if $r3 != null goto label1;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        $r5 = virtualinvoke $r4.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>();

        $z2 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $r6 = new com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable;

        $r7 = new com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup;

        $r10 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.content.Context mContext>;

        $r9 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        $r8 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        specialinvoke $r7.<com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean)>(r0, $r10, $r9, $r8, 1);

        specialinvoke $r6.<com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void <init>(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup)>(r0, $r7);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable> = $r6;

        $r11 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r13 = (android.view.View) $r11;

        $r12 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable>;

        virtualinvoke $r13.<android.view.View: boolean post(java.lang.Runnable)>($r12);

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>(null);

        return 1;

     label1:
        return 0;
    }

    public void updateMenuView(boolean)
    {
        com.android.internal.view.menu.ActionMenuPresenter r0;
        boolean z0, z1, z2, $z3, $z4;
        android.view.ViewGroup r1, r3, $r21;
        java.util.ArrayList r2, r5;
        com.android.internal.view.menu.ActionMenuView r4, $r16;
        int i0, i1, i2;
        android.view.ActionProvider r6;
        com.android.internal.view.menu.MenuView $r7, $r11, $r14, $r19, $r20, $r25, $r28;
        android.view.View $r8, $r10, $r15, $r18, $r22, $r23, $r24, $r26, $r32;
        android.view.ViewParent $r9, $r17, $r27;
        com.android.internal.view.menu.MenuBuilder $r12, $r13, $r35, $r36;
        android.content.Context $r30;
        com.android.internal.view.menu.ActionMenuView$LayoutParams $r31;
        com.android.internal.view.menu.MenuItemImpl $r33, $r37;
        java.lang.Object $r34, $r38;
        com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton r39;
        android.view.ActionProvider$SubUiVisibilityListener r40;

        r0 := @this: com.android.internal.view.menu.ActionMenuPresenter;

        z0 := @parameter0: boolean;

        $r7 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r8 = (android.view.View) $r7;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewParent getParent()>();

        r1 = (android.view.ViewGroup) $r9;

        if r1 == null goto label01;

        staticinvoke <com.android.internal.transition.ActionBarTransition: void beginDelayedTransition(android.view.ViewGroup)>(r1);

     label01:
        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>(z0);

        $r11 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r10 = (android.view.View) $r11;

        virtualinvoke $r10.<android.view.View: void requestLayout()>();

        $r13 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        if $r13 == null goto label04;

        $r35 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        r5 = virtualinvoke $r35.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>();

        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i2 = 0;

     label02:
        if i2 >= i1 goto label04;

        $r38 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r37 = (com.android.internal.view.menu.MenuItemImpl) $r38;

        r6 = virtualinvoke $r37.<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()>();

        if r6 == null goto label03;

        r40 = (android.view.ActionProvider$SubUiVisibilityListener) r0;

        virtualinvoke r6.<android.view.ActionProvider: void setSubUiVisibilityListener(android.view.ActionProvider$SubUiVisibilityListener)>(r40);

     label03:
        i2 = i2 + 1;

        goto label02;

     label04:
        $r12 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        if $r12 == null goto label10;

        $r36 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        r2 = virtualinvoke $r36.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>();

     label05:
        z1 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow>;

        z2 = 0;

        if z1 == 0 goto label06;

        z2 = 0;

        if r2 == null goto label06;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i0 != 1 goto label12;

        $r34 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r33 = (com.android.internal.view.menu.MenuItemImpl) $r34;

        $z4 = virtualinvoke $r33.<com.android.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>();

        if $z4 != 0 goto label11;

        z2 = 1;

     label06:
        if z2 == 0 goto label15;

        $r24 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        if $r24 != null goto label07;

        r39 = new com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton;

        $r30 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.content.Context mSystemContext>;

        specialinvoke r39.<com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context)>(r0, $r30);

        r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton> = r39;

     label07:
        $r23 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        $r27 = virtualinvoke $r23.<android.view.View: android.view.ViewParent getParent()>();

        r3 = (android.view.ViewGroup) $r27;

        $r28 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        if r3 == $r28 goto label09;

        if r3 == null goto label08;

        $r32 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        virtualinvoke r3.<android.view.ViewGroup: void removeView(android.view.View)>($r32);

     label08:
        $r25 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        r4 = (com.android.internal.view.menu.ActionMenuView) $r25;

        $r26 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        $r31 = virtualinvoke r4.<com.android.internal.view.menu.ActionMenuView: com.android.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()>();

        virtualinvoke r4.<com.android.internal.view.menu.ActionMenuView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r26, $r31);

     label09:
        $r14 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r16 = (com.android.internal.view.menu.ActionMenuView) $r14;

        $z3 = r0.<com.android.internal.view.menu.ActionMenuPresenter: boolean mReserveOverflow>;

        virtualinvoke $r16.<com.android.internal.view.menu.ActionMenuView: void setOverflowReserved(boolean)>($z3);

        return;

     label10:
        r2 = null;

        goto label05;

     label11:
        z2 = 0;

        goto label06;

     label12:
        if i0 <= 0 goto label14;

        z2 = 1;

     label13:
        goto label06;

     label14:
        z2 = 0;

        goto label13;

     label15:
        $r15 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        if $r15 == null goto label09;

        $r18 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        $r17 = virtualinvoke $r18.<android.view.View: android.view.ViewParent getParent()>();

        $r20 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        if $r17 != $r20 goto label09;

        $r19 = r0.<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r21 = (android.view.ViewGroup) $r19;

        $r22 = r0.<com.android.internal.view.menu.ActionMenuPresenter: android.view.View mOverflowButton>;

        virtualinvoke $r21.<android.view.ViewGroup: void removeView(android.view.View)>($r22);

        goto label09;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.menu.ActionMenuPresenter: java.lang.String TAG> = "ActionMenuPresenter";

        return;
    }
}
