public class com.android.internal.telephony.CallerInfo extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    public android.graphics.drawable.Drawable cachedPhoto;
    public android.graphics.Bitmap cachedPhotoIcon;
    public java.lang.String cnapName;
    public boolean contactExists;
    public android.net.Uri contactRefUri;
    public android.net.Uri contactRingtoneUri;
    public java.lang.String geoDescription;
    public boolean isCachedPhotoCurrent;
    private boolean mIsEmergency;
    private boolean mIsVoiceMail;
    public java.lang.String name;
    public int namePresentation;
    public boolean needUpdate;
    public java.lang.String normalizedNumber;
    public java.lang.String numberLabel;
    public int numberPresentation;
    public int numberType;
    public long person_id;
    public java.lang.String phoneLabel;
    public java.lang.String phoneNumber;
    public int photoResource;
    public boolean shouldSendToVoicemail;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.internal.telephony.CallerInfo: java.lang.String TAG> = "CallerInfo";

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("CallerInfo", 2);

        <com.android.internal.telephony.CallerInfo: boolean VDBG> = $z0;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.CallerInfo r0;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.CallerInfo: boolean mIsEmergency> = 0;

        r0.<com.android.internal.telephony.CallerInfo: boolean mIsVoiceMail> = 0;

        return;
    }

    static com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context, java.lang.String, com.android.internal.telephony.CallerInfo)
    {
        android.content.Context r0;
        java.lang.String r1, r3, $r5;
        com.android.internal.telephony.CallerInfo r2;
        boolean $z0, $z1, $z2;
        android.net.Uri $r4, $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.CallerInfo;

        $z0 = r2.<com.android.internal.telephony.CallerInfo: boolean contactExists>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isUriNumber(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>(r1);

        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>(r3);

        if $z2 == 0 goto label1;

        $r4 = <android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>;

        $r5 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r3);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r4, $r5);

        r2 = staticinvoke <com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri)>(r0, $r6);

     label1:
        return r2;
    }

    public static java.lang.String getCallerId(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r3, r4;
        com.android.internal.telephony.CallerInfo r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>(r0, r1);

        r3 = null;

        if r2 == null goto label1;

        r4 = r2.<com.android.internal.telephony.CallerInfo: java.lang.String name>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label2;

        r3 = r4;

     label1:
        return r3;

     label2:
        return r1;
    }

    public static com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        android.content.ContentResolver $r2;
        android.database.Cursor $r3;
        com.android.internal.telephony.CallerInfo $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke $r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, null, null, null, null);

        $r4 = staticinvoke <com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri,android.database.Cursor)>(r0, r1, $r3);

        return $r4;
    }

    public static com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context, android.net.Uri, android.database.Cursor)
    {
        android.content.Context r0;
        android.net.Uri r1, $r14;
        android.database.Cursor r2;
        com.android.internal.telephony.CallerInfo r3, $r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i12, $i14;
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r5, $r6, $r9, $r11, $r12, $r17, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.StringBuilder $r7, $r8, $r10, $r13, $r15, $r16;
        long $l10, $l11;
        java.lang.CharSequence $r18;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.database.Cursor;

        $r4 = new com.android.internal.telephony.CallerInfo;

        specialinvoke $r4.<com.android.internal.telephony.CallerInfo: void <init>()>();

        r3 = $r4;

        r3.<com.android.internal.telephony.CallerInfo: int photoResource> = 0;

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String phoneLabel> = null;

        r3.<com.android.internal.telephony.CallerInfo: int numberType> = 0;

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String numberLabel> = null;

        r3.<com.android.internal.telephony.CallerInfo: android.graphics.drawable.Drawable cachedPhoto> = null;

        r3.<com.android.internal.telephony.CallerInfo: boolean isCachedPhotoCurrent> = 0;

        r3.<com.android.internal.telephony.CallerInfo: boolean contactExists> = 0;

        $z1 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z1 == 0 goto label01;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", "getCallerInfo() based on cursor...");

     label01:
        if r2 == null goto label10;

        $z2 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 == 0 goto label09;

        i0 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("display_name");

        if i0 == -1 goto label02;

        $r21 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i0);

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String name> = $r21;

     label02:
        i1 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("number");

        if i1 == -1 goto label03;

        $r22 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber> = $r22;

     label03:
        i2 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("normalized_number");

        if i2 == -1 goto label04;

        $r23 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i2);

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String normalizedNumber> = $r23;

     label04:
        i3 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("label");

        if i3 == -1 goto label05;

        i7 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("type");

        if i7 == -1 goto label05;

        $i12 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(i7);

        r3.<com.android.internal.telephony.CallerInfo: int numberType> = $i12;

        $r20 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i3);

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String numberLabel> = $r20;

        $i14 = r3.<com.android.internal.telephony.CallerInfo: int numberType>;

        $r19 = r3.<com.android.internal.telephony.CallerInfo: java.lang.String numberLabel>;

        $r18 = staticinvoke <android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>(r0, $i14, $r19);

        $r24 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String phoneLabel> = $r24;

     label05:
        i4 = staticinvoke <com.android.internal.telephony.CallerInfo: int getColumnIndexForPersonId(android.net.Uri,android.database.Cursor)>(r1, r2);

        if i4 == -1 goto label11;

        $l10 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(i4);

        r3.<com.android.internal.telephony.CallerInfo: long person_id> = $l10;

        $z3 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z3 == 0 goto label06;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==> got info.person_id: ");

        $l11 = r3.<com.android.internal.telephony.CallerInfo: long person_id>;

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r17);

     label06:
        i5 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("custom_ringtone");

        if i5 == -1 goto label12;

        $r11 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i5);

        if $r11 == null goto label12;

        $r12 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i5);

        $r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        r3.<com.android.internal.telephony.CallerInfo: android.net.Uri contactRingtoneUri> = $r14;

     label07:
        i6 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("send_to_voicemail");

        if i6 == -1 goto label13;

        $i9 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(i6);

        if $i9 != 1 goto label13;

        z0 = 1;

     label08:
        r3.<com.android.internal.telephony.CallerInfo: boolean shouldSendToVoicemail> = z0;

        r3.<com.android.internal.telephony.CallerInfo: boolean contactExists> = 1;

     label09:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label10:
        r3.<com.android.internal.telephony.CallerInfo: boolean needUpdate> = 0;

        $r5 = r3.<com.android.internal.telephony.CallerInfo: java.lang.String name>;

        $r6 = staticinvoke <com.android.internal.telephony.CallerInfo: java.lang.String normalize(java.lang.String)>($r5);

        r3.<com.android.internal.telephony.CallerInfo: java.lang.String name> = $r6;

        r3.<com.android.internal.telephony.CallerInfo: android.net.Uri contactRefUri> = r1;

        return r3;

     label11:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find person_id column for ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CallerInfo", $r9);

        goto label06;

     label12:
        r3.<com.android.internal.telephony.CallerInfo: android.net.Uri contactRingtoneUri> = null;

        goto label07;

     label13:
        z0 = 0;

        goto label08;
    }

    public static com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r4, $r7;
        com.android.internal.telephony.CallerInfo r2, $r6, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.net.Uri $r3, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $z0 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", "getCallerInfo() based on number...");

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label3;

        r2 = null;

     label2:
        return r2;

     label3:
        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(java.lang.String,android.content.Context)>(r1, r0);

        if $z2 == 0 goto label4;

        $r11 = new com.android.internal.telephony.CallerInfo;

        specialinvoke $r11.<com.android.internal.telephony.CallerInfo: void <init>()>();

        $r10 = virtualinvoke $r11.<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsEmergency(android.content.Context)>(r0);

        return $r10;

     label4:
        $z3 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>(r1);

        if $z3 == 0 goto label5;

        $r8 = new com.android.internal.telephony.CallerInfo;

        specialinvoke $r8.<com.android.internal.telephony.CallerInfo: void <init>()>();

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()>();

        return $r9;

     label5:
        $r3 = <android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>;

        $r4 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r1);

        $r5 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r3, $r4);

        $r6 = staticinvoke <com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri)>(r0, $r5);

        r2 = staticinvoke <com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)>(r0, r1, $r6);

        $r7 = r2.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z4 == 0 goto label2;

        r2.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber> = r1;

        return r2;
    }

    private static int getColumnIndexForPersonId(android.net.Uri, android.database.Cursor)
    {
        android.net.Uri r0;
        android.database.Cursor r1;
        java.lang.String r2, r3, $r8, $r15, $r20;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.database.Cursor;

        $z0 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z0 == 0 goto label01;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- getColumnIndexForPersonId: contactRef URI = \'");

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'...");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r20);

     label01:
        r2 = virtualinvoke r0.<android.net.Uri: java.lang.String toString()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("content://com.android.contacts/data/phones");

        if $z1 == 0 goto label06;

        $z7 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z7 == 0 goto label02;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", "\'data/phones\' URI; using RawContacts.CONTACT_ID");

     label02:
        r3 = "contact_id";

     label03:
        if r3 == null goto label11;

        i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r3);

     label04:
        $z4 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z4 == 0 goto label05;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==> Using column \'");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (columnIndex = ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for person_id lookup...");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r15);

     label05:
        return i0;

     label06:
        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("content://com.android.contacts/data");

        if $z2 == 0 goto label08;

        $z6 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z6 == 0 goto label07;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", "\'data\' URI; using Data.CONTACT_ID");

     label07:
        r3 = "contact_id";

        goto label03;

     label08:
        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("content://com.android.contacts/phone_lookup");

        if $z3 == 0 goto label10;

        $z5 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z5 == 0 goto label09;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", "\'phone_lookup\' URI; using PhoneLookup._ID");

     label09:
        r3 = "_id";

        goto label03;

     label10:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected prefix for contactRef \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CallerInfo", $r8);

        r3 = null;

        goto label03;

     label11:
        i0 = -1;

        goto label04;
    }

    protected static java.lang.String getCurrentCountryIso(android.content.Context)
    {
        android.content.Context r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <com.android.internal.telephony.CallerInfo: java.lang.String getCurrentCountryIso(android.content.Context,java.util.Locale)>(r0, $r1);

        return $r2;
    }

    private static java.lang.String getCurrentCountryIso(android.content.Context, java.util.Locale)
    {
        android.content.Context r0;
        java.util.Locale r1;
        android.location.CountryDetector r2;
        java.lang.String r3, $r9;
        android.location.Country r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Locale;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("country_detector");

        r2 = (android.location.CountryDetector) $r5;

        r3 = null;

        if r2 == null goto label1;

        r4 = virtualinvoke r2.<android.location.CountryDetector: android.location.Country detectCountry()>();

        if r4 == null goto label3;

        r3 = virtualinvoke r4.<android.location.Country: java.lang.String getCountryIso()>();

     label1:
        if r3 != null goto label2;

        r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CountryDetector; falling back to countryIso based on locale: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CallerInfo", $r9);

     label2:
        return r3;

     label3:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallerInfo", "CountryDetector.detectCountry() returned null.");

        r3 = null;

        goto label1;
    }

    private static java.lang.String getGeoDescription(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r6, $r14, $r20, $r24, $r31, $r36;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.i18n.phonenumbers.PhoneNumberUtil r3;
        com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder r4;
        java.util.Locale r5;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r7;
        android.content.res.Resources $r9;
        android.content.res.Configuration $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r35, $r37;
        com.android.i18n.phonenumbers.NumberParseException $r30;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $z1 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z1 == 0 goto label1;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getGeoDescription(\'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')...");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r31);

     label1:
        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        r2 = null;

        if z0 == 0 goto label3;

     label2:
        return r2;

     label3:
        r3 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        r4 = staticinvoke <com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder getInstance()>();

        $r9 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r5 = $r10.<android.content.res.Configuration: java.util.Locale locale>;

        r6 = staticinvoke <com.android.internal.telephony.CallerInfo: java.lang.String getCurrentCountryIso(android.content.Context,java.util.Locale)>(r0, r5);

        r7 = null;

     label4:
        $z2 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z2 == 0 goto label5;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing \'");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for countryIso \'");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'...");

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r24);

     label5:
        r7 = virtualinvoke r3.<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parse(java.lang.String,java.lang.String)>(r1, r6);

        $z3 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z3 == 0 goto label6;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- parsed number: ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r20);

     label6:
        r2 = null;

        if r7 == null goto label2;

        r2 = virtualinvoke r4.<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)>(r7, r5);

        $z4 = <com.android.internal.telephony.CallerInfo: boolean VDBG>;

        if $z4 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- got description: \'");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("CallerInfo", $r14);

        return r2;

     label7:
        $r30 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getGeoDescription: NumberParseException for incoming number \'");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CallerInfo", $r36);

        goto label6;

        catch com.android.i18n.phonenumbers.NumberParseException from label4 to label5 with label7;
        catch com.android.i18n.phonenumbers.NumberParseException from label5 to label6 with label7;
    }

    private static java.lang.String normalize(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

     label1:
        return r0;

     label2:
        return null;
    }

    public boolean isEmergencyNumber()
    {
        com.android.internal.telephony.CallerInfo r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        $z0 = r0.<com.android.internal.telephony.CallerInfo: boolean mIsEmergency>;

        return $z0;
    }

    public boolean isVoiceMailNumber()
    {
        com.android.internal.telephony.CallerInfo r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        $z0 = r0.<com.android.internal.telephony.CallerInfo: boolean mIsVoiceMail>;

        return $z0;
    }

    com.android.internal.telephony.CallerInfo markAsEmergency(android.content.Context)
    {
        com.android.internal.telephony.CallerInfo r0;
        android.content.Context r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int)>(17040136);

        r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber> = $r2;

        r0.<com.android.internal.telephony.CallerInfo: int photoResource> = 17302692;

        r0.<com.android.internal.telephony.CallerInfo: boolean mIsEmergency> = 1;

        return r0;
    }

    com.android.internal.telephony.CallerInfo markAsVoiceMail()
    {
        com.android.internal.telephony.CallerInfo r0;
        java.lang.SecurityException r1, $r4;
        android.telephony.TelephonyManager $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        r0.<com.android.internal.telephony.CallerInfo: boolean mIsVoiceMail> = 1;

     label1:
        $r2 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>();

        r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber> = $r3;

     label2:
        return r0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CallerInfo", "Cannot access VoiceMail.", r1);

        return r0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.CallerInfo r0;
        java.lang.StringBuilder r1, r2, r4, r5, $r7, $r8, $r10, $r11, $r13, $r14, $r17, $r18, $r20, $r23;
        java.lang.String r3, r6, $r9, $r12, $r15, $r16, $r19, $r21, $r22;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(128);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" { ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name ");

        $r15 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String name>;

        if $r15 != null goto label3;

        r3 = "null";

     label1:
        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", phoneNumber ");

        $r19 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber>;

        if $r19 != null goto label4;

        r6 = "null";

     label2:
        $r18 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label3:
        r3 = "non-null";

        goto label1;

     label4:
        r6 = "non-null";

        goto label2;
    }

    public void updateGeoDescription(android.content.Context, java.lang.String)
    {
        com.android.internal.telephony.CallerInfo r0;
        android.content.Context r1;
        java.lang.String r2, r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallerInfo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label2;

        r3 = r2;

     label1:
        $r5 = staticinvoke <com.android.internal.telephony.CallerInfo: java.lang.String getGeoDescription(android.content.Context,java.lang.String)>(r1, r3);

        r0.<com.android.internal.telephony.CallerInfo: java.lang.String geoDescription> = $r5;

        return;

     label2:
        r3 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber>;

        goto label1;
    }
}
