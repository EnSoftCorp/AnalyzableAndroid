public class com.android.internal.util.XmlUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.internal.util.XmlUtils r0;

        r0 := @this: com.android.internal.util.XmlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void beginDocument(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2, $r6, $r10;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, r13;
        org.xmlpull.v1.XmlPullParserException r12, r14;
        java.lang.Throwable r15, r16;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

     label1:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 != 1 goto label1;

     label2:
        if i0 == 2 goto label3;

        r12 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r12.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        r15 = (java.lang.Throwable) r12;

        throw r15;

     label3:
        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        r14 = new org.xmlpull.v1.XmlPullParserException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag: found ");

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label4:
        return;
    }

    public static final boolean convertValueToBoolean(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0, z1, z2, $z3, $z4;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        return z0;

     label1:
        $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("1");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("true");

        if $z4 != 0 goto label2;

        z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("TRUE");

        z1 = 0;

        if z2 == 0 goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public static final int convertValueToInt(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0, i2, i5, $i9, $i10, $i11, $i12;
        java.lang.String r1, $r2;
        byte b1, b3;
        char c4, c6, $c7, $c8;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return i0;

     label1:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        b1 = 1;

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        b3 = 10;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        i5 = 0;

        if 45 != c4 goto label2;

        b1 = -1;

        i5 = 1;

     label2:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if 48 != $c7 goto label7;

        $i10 = i2 - 1;

        if i5 != $i10 goto label3;

        return 0;

     label3:
        $i12 = i5 + 1;

        c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i12);

        if 120 == c6 goto label4;

        if 88 != c6 goto label6;

     label4:
        i5 = i5 + 2;

        b3 = 16;

     label5:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i5);

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, b3);

        $i11 = b1 * $i9;

        return $i11;

     label6:
        i5 = i5 + 1;

        b3 = 8;

        goto label5;

     label7:
        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if 35 != $c8 goto label5;

        i5 = i5 + 1;

        b3 = 16;

        goto label5;
    }

    public static final int convertValueToList(java.lang.CharSequence, java.lang.String[], int)
    {
        java.lang.CharSequence r0;
        java.lang.String[] r1;
        int i0, i1, $i2;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        if r0 == null goto label3;

        i1 = 0;

     label1:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label3;

        $r2 = r1[i1];

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static int convertValueToUnsignedInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)>(r0);

        return $i1;
    }

    public static final void nextElement(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 != 1 goto label1;

     label2:
        return;
    }

    public static boolean nextElementWithin(org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label2;

        if i1 != 3 goto label3;

        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 != i0 goto label3;

     label2:
        return 0;

     label3:
        if i1 != 2 goto label1;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i3 = i0 + 1;

        if $i2 != $i3 goto label1;

        return 1;
    }

    public static int parseUnsignedIntAttribute(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.String r1, $r2;
        int i0, i3, $i7, $i8;
        byte b1;
        char c2, c4, $c5;
        long $l6;

        r0 := @parameter0: java.lang.CharSequence;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        b1 = 10;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if 48 != $c5 goto label5;

        $i8 = i0 - 1;

        if $i8 != 0 goto label1;

        return 0;

     label1:
        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if 120 == c4 goto label2;

        if 88 != c4 goto label4;

     label2:
        i3 = 2;

        b1 = 16;

     label3:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3);

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r2, b1);

        $i7 = (int) $l6;

        return $i7;

     label4:
        i3 = 1;

        b1 = 8;

        goto label3;

     label5:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        i3 = 0;

        if 35 != c2 goto label3;

        i3 = 1;

        b1 = 16;

        goto label3;
    }

    public static boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

        return $z0;
    }

    public static int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r12;
        int i0;
        java.lang.NumberFormatException $r4;
        java.net.ProtocolException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.net.ProtocolException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as int");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static final java.util.ArrayList readListXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }

    public static long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r12;
        long l0;
        java.lang.NumberFormatException $r4;
        java.net.ProtocolException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return l0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.net.ProtocolException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as long");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        long l0, l1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return l1;

     label3:
        $r4 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static final java.util.HashMap readMapXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.HashMap) $r3;

        return $r4;
    }

    public static final java.util.HashSet readSetXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.HashSet $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.HashSet) $r3;

        return $r4;
    }

    public static final int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r8, $r14, $r15, $r16, $r23, $r25, $r26, $r27, $r32, $r33;
        java.lang.String[] r2;
        int i0, i1, i2, $i3;
        int[] r5;
        java.lang.StringBuilder $r10, $r12, $r13, $r18, $r20, $r21, $r22, $r28, $r30, r41, r47, r49;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r31, $r39;
        java.lang.NullPointerException $r35, $r37;
        org.xmlpull.v1.XmlPullParserException r42, r43, r44, r45, r46, r48, r50;
        java.lang.Throwable r51, r52, r53, r54, r55, r56, r57;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

     label01:
        $r8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label02:
        r5 = newarray (int)[i0];

        i1 = 0;

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label03:
        if i2 != 2 goto label11;

        $r26 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label10;

     label04:
        $r33 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r33);

        r5[i1] = $i3;

     label05:
        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 1 goto label03;

        r42 = new org.xmlpull.v1.XmlPullParserException;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r15);

        r51 = (java.lang.Throwable) r42;

        throw r51;

     label06:
        $r35 := @caughtexception;

        r43 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r43.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in byte-array");

        r52 = (java.lang.Throwable) r43;

        throw r52;

     label07:
        $r39 := @caughtexception;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in byte-array");

        r53 = (java.lang.Throwable) r44;

        throw r53;

     label08:
        $r37 := @caughtexception;

        r45 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r45.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        r54 = (java.lang.Throwable) r45;

        throw r54;

     label09:
        $r31 := @caughtexception;

        r46 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r46.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        r55 = (java.lang.Throwable) r46;

        throw r55;

     label10:
        r48 = new org.xmlpull.v1.XmlPullParserException;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r48.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r32);

        r56 = (java.lang.Throwable) r48;

        throw r56;

     label11:
        if i2 != 3 goto label05;

        $r14 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label12;

        return r5;

     label12:
        $r16 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label13;

        i1 = i1 + 1;

        goto label05;

     label13:
        r50 = new org.xmlpull.v1.XmlPullParserException;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r23 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        r57 = (java.lang.Throwable) r50;

        throw r57;

        catch java.lang.NullPointerException from label01 to label02 with label06;
        catch java.lang.NumberFormatException from label01 to label02 with label07;
        catch java.lang.NullPointerException from label04 to label05 with label08;
        catch java.lang.NumberFormatException from label04 to label05 with label09;
    }

    public static final java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r10, $r11, $r16, $r18;
        java.lang.String[] r2;
        java.util.ArrayList r3, r21;
        int i0;
        java.lang.StringBuilder $r7, $r8, $r9, $r14, $r15, $r17, $r19, r22, r24;
        boolean $z0;
        java.lang.Object $r20;
        org.xmlpull.v1.XmlPullParserException r23, r25;
        java.lang.Throwable r26, r27;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r21 = new java.util.ArrayList;

        specialinvoke r21.<java.util.ArrayList: void <init>()>();

        r3 = r21;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label3;

        $r20 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r0, r2);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label2:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        r23 = new org.xmlpull.v1.XmlPullParserException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label3:
        if i0 != 3 goto label2;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        return r3;

     label4:
        r25 = new org.xmlpull.v1.XmlPullParserException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r16 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        r27 = (java.lang.Throwable) r25;

        throw r27;
    }

    public static final java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r11, $r12, $r19, $r20, $r22, $r26, $r28, $r29;
        java.lang.String[] r2;
        java.util.HashMap r3, r30;
        int i0;
        java.lang.Object r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r14, $r16, $r17, $r18, $r23, $r25, r31, r33, r35;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException r32, r34, r36;
        java.lang.Throwable r37, r38, r39;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r30 = new java.util.HashMap;

        specialinvoke r30.<java.util.HashMap: void <init>()>();

        r3 = r30;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label4;

        r4 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r0, r2);

        $r22 = r2[0];

        if $r22 == null goto label3;

        $r29 = r2[0];

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, r4);

     label2:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        r32 = new org.xmlpull.v1.XmlPullParserException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11);

        r37 = (java.lang.Throwable) r32;

        throw r37;

     label3:
        r34 = new org.xmlpull.v1.XmlPullParserException;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map value without name attribute: ");

        $r26 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r34.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r28);

        r38 = (java.lang.Throwable) r34;

        throw r38;

     label4:
        if i0 != 3 goto label2;

        $r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        return r3;

     label5:
        r36 = new org.xmlpull.v1.XmlPullParserException;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r19 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r36.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        r39 = (java.lang.Throwable) r36;

        throw r39;
    }

    private static final java.lang.Object readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r8, $r9, $r11, $r14, $r15, $r22, $r28;
        java.lang.Float r4, r31;
        java.lang.Double r5, r34;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Boolean r6, r7;
        java.lang.Long $r13;
        int $i0;
        java.lang.NumberFormatException $r16;
        java.lang.Integer $r17;
        java.lang.StringBuilder $r20, $r21, $r23, $r25, $r29, $r30, r32, r35;
        java.lang.NullPointerException $r26;
        org.xmlpull.v1.XmlPullParserException r33, r36;
        java.lang.Throwable r37, r38;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z1 == 0 goto label02;

        $r15 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r17;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z2 == 0 goto label03;

        $r14 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r14);

        return $r13;

     label03:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z3 == 0 goto label06;

        r31 = new java.lang.Float;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke r31.<java.lang.Float: void <init>(java.lang.String)>($r11);

        r4 = r31;

     label04:
        return r4;

     label05:
        $r26 := @caughtexception;

        r33 = new org.xmlpull.v1.XmlPullParserException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need value attribute in <");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r28);

        r37 = (java.lang.Throwable) r33;

        throw r37;

     label06:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z4 == 0 goto label09;

        r34 = new java.lang.Double;

        $r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke r34.<java.lang.Double: void <init>(java.lang.String)>($r9);

        r5 = r34;

     label07:
        return r5;

     label08:
        $r16 := @caughtexception;

        r36 = new org.xmlpull.v1.XmlPullParserException;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a number in value attribute in <");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r36.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        r38 = (java.lang.Throwable) r36;

        throw r38;

     label09:
        z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

     label10:
        r6 = null;

        if z0 == 0 goto label13;

     label11:
        $r8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r8);

     label12:
        r6 = r7;

     label13:
        return r6;

        catch java.lang.NullPointerException from label01 to label02 with label05;
        catch java.lang.NumberFormatException from label01 to label02 with label08;
        catch java.lang.NullPointerException from label02 to label03 with label05;
        catch java.lang.NumberFormatException from label02 to label03 with label08;
        catch java.lang.NullPointerException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label03 to label04 with label08;
        catch java.lang.NullPointerException from label06 to label07 with label05;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch java.lang.NullPointerException from label09 to label10 with label05;
        catch java.lang.NumberFormatException from label09 to label10 with label08;
        catch java.lang.NullPointerException from label11 to label12 with label05;
        catch java.lang.NumberFormatException from label11 to label12 with label08;
    }

    public static final java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r10, $r11, $r16, $r18;
        java.lang.String[] r2;
        java.util.HashSet r3, r21;
        int i0;
        java.lang.StringBuilder $r7, $r8, $r9, $r14, $r15, $r17, $r19, r22, r24;
        boolean $z0;
        java.lang.Object $r20;
        org.xmlpull.v1.XmlPullParserException r23, r25;
        java.lang.Throwable r26, r27;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r21 = new java.util.HashSet;

        specialinvoke r21.<java.util.HashSet: void <init>()>();

        r3 = r21;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label3;

        $r20 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r0, r2);

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r20);

     label2:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        r23 = new org.xmlpull.v1.XmlPullParserException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label3:
        if i0 != 3 goto label2;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        return r3;

     label4:
        r25 = new org.xmlpull.v1.XmlPullParserException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r16 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        r27 = (java.lang.Throwable) r25;

        throw r27;
    }

    private static final java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1;
        java.lang.String r2, r3, r9, $r14, $r21, $r23, $r29, $r31, $r34, $r35, $r39, $r43, $r46, $r48, $r54, $r57, $r60, $r62;
        java.lang.Object r4;
        java.util.HashSet r5;
        java.util.ArrayList r6;
        java.util.HashMap r7;
        int[] r8;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r12, $r13, $r15, $r18, $r19, $r20, $r22, $r24, $r25, $r28, $r30, $r36, $r37, $r38, $r40, $r44, $r45, $r47, $r53, $r58, $r59, $r61, $r63, r64, r66, r67, r70, r72, r74, r76, r78;
        org.xmlpull.v1.XmlPullParserException r65, r68, r69, r71, r73, r75, r77, r79;
        java.lang.Throwable r80, r81, r82, r83, r84, r85, r86, r87;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String[];

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z1 == 0 goto label02;

        r4 = null;

     label01:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 1 goto label16;

        if i0 != 3 goto label14;

        $r34 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label13;

        r1[0] = r2;

        return r4;

     label02:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z0 == 0 goto label08;

        r9 = "";

     label03:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label07;

        if i1 != 3 goto label05;

        $r54 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z7 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z7 == 0 goto label04;

        r1[0] = r2;

        return r9;

     label04:
        r65 = new org.xmlpull.v1.XmlPullParserException;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <string>: ");

        $r60 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r62);

        r80 = (java.lang.Throwable) r65;

        throw r80;

     label05:
        if i1 != 4 goto label06;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r57 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        r9 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label06:
        if i1 != 2 goto label03;

        r68 = new org.xmlpull.v1.XmlPullParserException;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <string>: ");

        $r46 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r47 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r68.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r48);

        r81 = (java.lang.Throwable) r68;

        throw r81;

     label07:
        r69 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r69.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document in <string>");

        r82 = (java.lang.Throwable) r69;

        throw r82;

     label08:
        r4 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r3);

        if r4 != null goto label01;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("int-array");

        if $z4 == 0 goto label09;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r8 = staticinvoke <com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "int-array", r1);

        r1[0] = r2;

        return r8;

     label09:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z3 == 0 goto label10;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r7 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "map", r1);

        r1[0] = r2;

        return r7;

     label10:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z6 == 0 goto label11;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r6 = staticinvoke <com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "list", r1);

        r1[0] = r2;

        return r6;

     label11:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z5 == 0 goto label12;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r5 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "set", r1);

        r1[0] = r2;

        return r5;

     label12:
        r71 = new org.xmlpull.v1.XmlPullParserException;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag: ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r71.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r43);

        r83 = (java.lang.Throwable) r71;

        throw r83;

     label13:
        r73 = new org.xmlpull.v1.XmlPullParserException;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r35 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r73.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r39);

        r84 = (java.lang.Throwable) r73;

        throw r84;

     label14:
        if i0 != 4 goto label15;

        r75 = new org.xmlpull.v1.XmlPullParserException;

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text in <");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r31 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r75.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r29);

        r85 = (java.lang.Throwable) r75;

        throw r85;

     label15:
        if i0 != 2 goto label01;

        r77 = new org.xmlpull.v1.XmlPullParserException;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r23 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r77.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r21);

        r86 = (java.lang.Throwable) r77;

        throw r86;

     label16:
        r79 = new org.xmlpull.v1.XmlPullParserException;

        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of document in <");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r79.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r14);

        r87 = (java.lang.Throwable) r79;

        throw r87;
    }

    public static final java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1;
        int i0;
        java.lang.StringBuilder $r5, $r7, $r11, $r14, r16, r18;
        java.lang.String $r6, $r8, $r12, $r13;
        java.lang.Object $r15;
        org.xmlpull.v1.XmlPullParserException r17, r19, r20;
        java.lang.Throwable r21, r22, r23;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String[];

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        $r15 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r0, r1);

        return $r15;

     label2:
        if i0 != 3 goto label3;

        r17 = new org.xmlpull.v1.XmlPullParserException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag at: ");

        $r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        r21 = (java.lang.Throwable) r17;

        throw r21;

     label3:
        if i0 != 4 goto label4;

        r19 = new org.xmlpull.v1.XmlPullParserException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text: ");

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        r22 = (java.lang.Throwable) r19;

        throw r22;

     label4:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        r20 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r20.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document");

        r23 = (java.lang.Throwable) r20;

        throw r23;
    }

    public static void skipCurrentTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label2;

        if i1 != 3 goto label1;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 > i0 goto label1;

     label2:
        return;
    }

    public static void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, boolean) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static final void writeByteArrayXml(byte[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        byte[] r0;
        java.lang.String r1, $r5, $r9;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1, i4, i6, $i7, $i8, $i9, $i10;
        java.lang.StringBuilder r3, $r6;
        byte b2, b3;
        short s5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "byte-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r5);

        $r6 = new java.lang.StringBuilder;

        $i8 = lengthof r0;

        $i7 = 2 * $i8;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i7);

        r3 = $r6;

        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

        b2 = r0[i1];

        b3 = b2 >> 4;

        if b3 < 10 goto label6;

        $i10 = b3 + 97;

        i4 = -10 + $i10;

     label4:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        s5 = b2 & 255;

        if s5 < 10 goto label7;

        $i9 = s5 + 97;

        i6 = -10 + $i9;

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        i1 = i1 + 1;

        goto label3;

     label6:
        i4 = b3 + 48;

        goto label4;

     label7:
        i6 = s5 + 48;

        goto label5;

     label8:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "byte-array");

        return;
    }

    public static final void writeIntArrayXml(int[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "int-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $i2 = r0[i1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "int-array");

        return;
    }

    public static void writeIntAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, int) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static final void writeListXml(java.util.List, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List r0;
        java.io.OutputStream r1;
        org.xmlpull.v1.XmlSerializer r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.OutputStream;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, null, r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeListXml(java.util.List, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "list");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r5, null, r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "list");

        return;
    }

    public static void writeLongAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        long l0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static final void writeMapXml(java.util.Map, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.io.OutputStream r1;
        com.android.internal.util.FastXmlSerializer r2, r5;
        java.lang.Boolean $r4;
        org.xmlpull.v1.XmlSerializer r6, r7, r8, r9, r10;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.OutputStream;

        r5 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke r5.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = r5;

        r6 = (org.xmlpull.v1.XmlSerializer) r2;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r7 = (org.xmlpull.v1.XmlSerializer) r2;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

        r8 = (org.xmlpull.v1.XmlSerializer) r2;

        interfaceinvoke r8.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        r9 = (org.xmlpull.v1.XmlSerializer) r2;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, null, r9);

        r10 = (org.xmlpull.v1.XmlSerializer) r2;

        interfaceinvoke r10.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeMapXml(java.util.Map, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.lang.String r1, $r11;
        org.xmlpull.v1.XmlSerializer r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r8, $r9, $r10;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        $r5 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "map");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r10;

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r9, $r11, r2);

        goto label2;

     label3:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "map");

        return;
    }

    public static final void writeSetXml(java.util.Set, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Set r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "set");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r6, null, r2);

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "set");

        return;
    }

    public static final void writeValueXml(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.Object r0;
        java.lang.String r1, r3, $r9, $r11, $r24, $r29;
        org.xmlpull.v1.XmlSerializer r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.RuntimeException $r5;
        java.util.List $r14;
        java.util.Set $r15;
        int[] $r16, $r19;
        byte[] $r17, $r20;
        java.util.Map $r18;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label02;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        if r1 == null goto label01;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label01:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label02:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if r1 == null goto label03;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label03:
        $r29 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r29);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label04:
        $z1 = r0 instanceof java.lang.Integer;

        if $z1 == 0 goto label07;

        r3 = "int";

     label05:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r3);

        if r1 == null goto label06;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label06:
        $r24 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r24);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r3);

        return;

     label07:
        $z2 = r0 instanceof java.lang.Long;

        if $z2 == 0 goto label08;

        r3 = "long";

        goto label05;

     label08:
        $z3 = r0 instanceof java.lang.Float;

        if $z3 == 0 goto label09;

        r3 = "float";

        goto label05;

     label09:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label10;

        r3 = "double";

        goto label05;

     label10:
        $z5 = r0 instanceof java.lang.Boolean;

        if $z5 == 0 goto label11;

        r3 = "boolean";

        goto label05;

     label11:
        $z6 = r0 instanceof byte[];

        if $z6 == 0 goto label12;

        $r17 = (byte[]) r0;

        $r20 = (byte[]) $r17;

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r20, r1, r2);

        return;

     label12:
        $z7 = r0 instanceof int[];

        if $z7 == 0 goto label13;

        $r19 = (int[]) r0;

        $r16 = (int[]) $r19;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r16, r1, r2);

        return;

     label13:
        $z9 = r0 instanceof java.util.Map;

        if $z9 == 0 goto label14;

        $r18 = (java.util.Map) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r18, r1, r2);

        return;

     label14:
        $z8 = r0 instanceof java.util.List;

        if $z8 == 0 goto label15;

        $r14 = (java.util.List) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r14, r1, r2);

        return;

     label15:
        $z11 = r0 instanceof java.util.Set;

        if $z11 == 0 goto label16;

        $r15 = (java.util.Set) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r15, r1, r2);

        return;

     label16:
        $z10 = r0 instanceof java.lang.CharSequence;

        if $z10 == 0 goto label18;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if r1 == null goto label17;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label17:
        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r11);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label18:
        $r5 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeValueXml: unable to write value ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }
}
