public class com.android.internal.app.LocalePicker extends android.app.ListFragment
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    com.android.internal.app.LocalePicker$LocaleSelectionListener mListener;

    public void <init>()
    {
        com.android.internal.app.LocalePicker r0;

        r0 := @this: com.android.internal.app.LocalePicker;

        specialinvoke r0.<android.app.ListFragment: void <init>()>();

        return;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context)
    {
        android.content.Context r0;
        android.widget.ArrayAdapter $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,boolean)>(r0, 0);

        return $r1;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1;
        android.widget.ArrayAdapter $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,int,int,boolean)>(r0, i0, i1, 0);

        return $r1;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context, int, int, boolean)
    {
        android.content.Context r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        android.content.res.Resources r1, $r14;
        java.util.ArrayList r2, $r12;
        java.lang.String[] r3, r4, r5, $r16, $r17;
        com.android.internal.app.LocalePicker$LocaleInfo[] r6, r7;
        java.lang.String r8, r9, r10, $r23, $r25, $r28, $r32, $r33, $r37, $r38, $r40, $r42, $r43;
        java.util.Locale r11, $r24, $r27, $r29, $r35;
        android.content.res.AssetManager $r13;
        java.util.List $r15;
        java.lang.Object[] $r18;
        com.android.internal.app.LocalePicker$1 $r19;
        com.android.internal.app.LocalePicker$LocaleInfo $r20, $r26, $r30, $r31, $r34, $r36, $r39, $r41;
        java.lang.Object $r21;
        android.view.LayoutInflater $r22;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = new java.util.ArrayList;

        $r14 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r13 = virtualinvoke $r14.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $r16 = virtualinvoke $r13.<android.content.res.AssetManager: java.lang.String[] getLocales()>();

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r15);

        r2 = $r12;

        if z0 == 0 goto label01;

        $z6 = virtualinvoke r2.<java.util.ArrayList: boolean contains(java.lang.Object)>("zz_ZZ");

        if $z6 != 0 goto label01;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("zz_ZZ");

     label01:
        $i7 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r17 = newarray (java.lang.String)[$i7];

        $r18 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        r3 = (java.lang.String[]) $r18;

        r4 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235975);

        r5 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235976);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r3);

        i2 = lengthof r3;

        r6 = newarray (com.android.internal.app.LocalePicker$LocaleInfo)[i2];

        i3 = 0;

        i4 = 0;

     label02:
        if i3 >= i2 goto label09;

        r8 = r3[i3];

        $i8 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i8 != 5 goto label12;

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r24 = new java.util.Locale;

        $r23 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        specialinvoke $r24.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r9, $r23);

        r11 = $r24;

        if i4 != 0 goto label04;

        i6 = i4 + 1;

        $r41 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r42 = virtualinvoke r11.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r11);

        $r43 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r42);

        specialinvoke $r41.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r43, r11);

        r6[i4] = $r41;

     label03:
        i3 = i3 + 1;

        i4 = i6;

        goto label02;

     label04:
        $i9 = i4 - 1;

        $r26 = r6[$i9];

        $r27 = $r26.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r25 = virtualinvoke $r27.<java.util.Locale: java.lang.String getLanguage()>();

        $z1 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label05;

        $i10 = i4 - 1;

        $r30 = r6[$i10];

        $r29 = $r30.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r32 = virtualinvoke $r29.<java.util.Locale: java.lang.String getLanguage()>();

        $z4 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("zz");

        if $z4 != 0 goto label05;

        $i12 = i4 - 1;

        $r34 = r6[$i12];

        $i11 = i4 - 1;

        $r36 = r6[$i11];

        $r35 = $r36.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r33 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String getDisplayName(java.util.Locale,java.lang.String[],java.lang.String[])>($r35, r4, r5);

        $r40 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r33);

        $r34.<com.android.internal.app.LocalePicker$LocaleInfo: java.lang.String label> = $r40;

        i6 = i4 + 1;

        $r39 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r38 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String getDisplayName(java.util.Locale,java.lang.String[],java.lang.String[])>(r11, r4, r5);

        $r37 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r38);

        specialinvoke $r39.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r37, r11);

        r6[i4] = $r39;

        goto label03;

     label05:
        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("zz_ZZ");

        if $z2 == 0 goto label07;

        r10 = "[Developer] Accented English";

     label06:
        i6 = i4 + 1;

        $r31 = new com.android.internal.app.LocalePicker$LocaleInfo;

        specialinvoke $r31.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>(r10, r11);

        r6[i4] = $r31;

        goto label03;

     label07:
        $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("zz_ZY");

        if $z3 == 0 goto label08;

        r10 = "[Developer] Fake Bi-Directional";

        goto label06;

     label08:
        $r28 = virtualinvoke r11.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r11);

        r10 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r28);

        goto label06;

     label09:
        r7 = newarray (com.android.internal.app.LocalePicker$LocaleInfo)[i4];

        i5 = 0;

     label10:
        if i5 >= i4 goto label11;

        $r20 = r6[i5];

        r7[i5] = $r20;

        i5 = i5 + 1;

        goto label10;

     label11:
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r7);

        $r19 = new com.android.internal.app.LocalePicker$1;

        $r21 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r22 = (android.view.LayoutInflater) $r21;

        specialinvoke $r19.<com.android.internal.app.LocalePicker$1: void <init>(android.content.Context,int,int,com.android.internal.app.LocalePicker$LocaleInfo[],android.view.LayoutInflater,int,int)>(r0, i0, i1, r7, $r22, i0, i1);

        return $r19;

     label12:
        i6 = i4;

        goto label03;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.widget.ArrayAdapter $r1;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,int,int,boolean)>(r0, 17367130, 16908666, z0);

        return $r1;
    }

    private static java.lang.String getDisplayName(java.util.Locale, java.lang.String[], java.lang.String[])
    {
        java.util.Locale r0;
        java.lang.String[] r1, r2;
        java.lang.String r3, $r4, $r5, $r6;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        r3 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $r5 = r1[i0];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r6 = r2[i0];

        return $r6;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>(r0);

        return $r4;
    }

    private static java.lang.String toTitleCase(java.lang.String)
    {
        java.lang.String r0, $r3, $r5;
        int $i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        char $c1, $c2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void updateLocale(java.util.Locale)
    {
        java.util.Locale r0;
        android.app.IActivityManager r2;
        android.content.res.Configuration r3;
        android.os.RemoteException $r4;

        r0 := @parameter0: java.util.Locale;

     label1:
        r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r3 = interfaceinvoke r2.<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r3.<android.content.res.Configuration: void setLocale(java.util.Locale)>(r0);

        interfaceinvoke r2.<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>(r3);

        staticinvoke <android.app.backup.BackupManager: void dataChanged(java.lang.String)>("com.android.providers.settings");

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected boolean isInDeveloperMode()
    {
        com.android.internal.app.LocalePicker r0;

        r0 := @this: com.android.internal.app.LocalePicker;

        return 0;
    }

    public void onActivityCreated(android.os.Bundle)
    {
        com.android.internal.app.LocalePicker r0;
        android.os.Bundle r1;
        android.app.Activity $r2;
        boolean $z0;
        android.widget.ArrayAdapter $r3;
        android.content.Context r4;
        android.widget.ListAdapter r5;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListFragment: void onActivityCreated(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.app.Activity getActivity()>();

        $z0 = virtualinvoke r0.<com.android.internal.app.LocalePicker: boolean isInDeveloperMode()>();

        r4 = (android.content.Context) $r2;

        $r3 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,boolean)>(r4, $z0);

        r5 = (android.widget.ListAdapter) $r3;

        virtualinvoke r0.<com.android.internal.app.LocalePicker: void setListAdapter(android.widget.ListAdapter)>(r5);

        return;
    }

    public void onListItemClick(android.widget.ListView, android.view.View, int, long)
    {
        com.android.internal.app.LocalePicker r0;
        android.widget.ListView r1;
        android.view.View r2;
        int i0;
        long l1;
        java.util.Locale r3;
        com.android.internal.app.LocalePicker$LocaleSelectionListener $r4, $r8;
        android.widget.ListAdapter $r5;
        java.lang.Object $r6;
        com.android.internal.app.LocalePicker$LocaleInfo $r7;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: android.widget.ListView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener>;

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.widget.ListAdapter getListAdapter()>();

        $r6 = interfaceinvoke $r5.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i0);

        $r7 = (com.android.internal.app.LocalePicker$LocaleInfo) $r6;

        r3 = $r7.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r8 = r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener>;

        interfaceinvoke $r8.<com.android.internal.app.LocalePicker$LocaleSelectionListener: void onLocaleSelected(java.util.Locale)>(r3);

     label1:
        return;
    }

    public void onResume()
    {
        com.android.internal.app.LocalePicker r0;
        android.widget.ListView $r1;

        r0 := @this: com.android.internal.app.LocalePicker;

        specialinvoke r0.<android.app.ListFragment: void onResume()>();

        $r1 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.widget.ListView getListView()>();

        virtualinvoke $r1.<android.widget.ListView: boolean requestFocus()>();

        return;
    }

    public void setLocaleSelectionListener(com.android.internal.app.LocalePicker$LocaleSelectionListener)
    {
        com.android.internal.app.LocalePicker r0;
        com.android.internal.app.LocalePicker$LocaleSelectionListener r1;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: com.android.internal.app.LocalePicker$LocaleSelectionListener;

        r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.LocalePicker: java.lang.String TAG> = "LocalePicker";

        <com.android.internal.app.LocalePicker: boolean DEBUG> = 0;

        return;
    }
}
