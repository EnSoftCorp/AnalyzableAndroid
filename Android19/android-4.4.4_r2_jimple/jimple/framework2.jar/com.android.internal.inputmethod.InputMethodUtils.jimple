public class com.android.internal.inputmethod.InputMethodUtils extends java.lang.Object
{
    public static final boolean DEBUG;
    private static final java.util.Locale ENGLISH_LOCALE;
    public static final int NOT_A_SUBTYPE_ID;
    private static final java.lang.String NOT_A_SUBTYPE_ID_STR;
    public static final java.lang.String SUBTYPE_MODE_KEYBOARD;
    public static final java.lang.String SUBTYPE_MODE_VOICE;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_ASCII_CAPABLE;
    private static final java.lang.String TAG_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE;

    static void <clinit>()
    {
        java.util.Locale $r0;
        java.lang.String $r1;

        <com.android.internal.inputmethod.InputMethodUtils: java.lang.String TAG_ENABLED_WHEN_DEFAULT_IS_NOT_ASCII_CAPABLE> = "EnabledWhenDefaultIsNotAsciiCapable";

        <com.android.internal.inputmethod.InputMethodUtils: java.lang.String TAG_ASCII_CAPABLE> = "AsciiCapable";

        <com.android.internal.inputmethod.InputMethodUtils: java.lang.String TAG> = "InputMethodUtils";

        <com.android.internal.inputmethod.InputMethodUtils: java.lang.String SUBTYPE_MODE_VOICE> = "voice";

        <com.android.internal.inputmethod.InputMethodUtils: java.lang.String SUBTYPE_MODE_KEYBOARD> = "keyboard";

        <com.android.internal.inputmethod.InputMethodUtils: int NOT_A_SUBTYPE_ID> = -1;

        <com.android.internal.inputmethod.InputMethodUtils: boolean DEBUG> = 0;

        $r0 = new java.util.Locale;

        specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String)>("en");

        <com.android.internal.inputmethod.InputMethodUtils: java.util.Locale ENGLISH_LOCALE> = $r0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(-1);

        <com.android.internal.inputmethod.InputMethodUtils: java.lang.String NOT_A_SUBTYPE_ID_STR> = $r1;

        return;
    }

    private void <init>()
    {
        com.android.internal.inputmethod.InputMethodUtils r0;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.ArrayList access$000(android.content.res.Resources, android.view.inputmethod.InputMethodInfo)
    {
        android.content.res.Resources r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.util.ArrayList $r2;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.view.inputmethod.InputMethodInfo;

        $r2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getImplicitlyApplicableSubtypesLocked(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>(r0, r1);

        return $r2;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <com.android.internal.inputmethod.InputMethodUtils: java.lang.String NOT_A_SUBTYPE_ID_STR>;

        return $r0;
    }

    public static boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        if r0 != null goto label2;

     label1:
        return 1;

     label2:
        $z0 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z0 == 0 goto label1;

        return 0;
    }

    public static boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo, java.lang.String, java.lang.String)
    {
        android.view.inputmethod.InputMethodInfo r0;
        java.lang.String r1, r2, $r4, $r6;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype $r3, $r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r3 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        $r4 = virtualinvoke $r3.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label4;

        $r5 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        $r6 = virtualinvoke $r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label2;

     label4:
        return 1;

     label5:
        return 0;
    }

    public static android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources, java.util.List, java.lang.String, java.lang.String, boolean)
    {
        android.content.res.Resources r0;
        java.util.List r1;
        java.lang.String r2, r3, r5, r8, $r11;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.view.inputmethod.InputMethodSubtype r4, r6, r7, $r12;
        int i0, i1, $i2;
        java.lang.Object $r9, $r10;
        android.content.res.Configuration $r13;
        java.util.Locale $r14;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if r1 == null goto label01;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 != 0 goto label03;

     label01:
        r4 = null;

     label02:
        return r4;

     label03:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 == 0 goto label04;

        $r13 = virtualinvoke r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r14 = $r13.<android.content.res.Configuration: java.util.Locale locale>;

        r3 = virtualinvoke $r14.<java.util.Locale: java.lang.String toString()>();

     label04:
        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        z1 = 0;

        r6 = null;

        r4 = null;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label05:
        if i1 >= i0 goto label08;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (android.view.inputmethod.InputMethodSubtype) $r9;

        r8 = virtualinvoke r7.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        if r2 == null goto label06;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (android.view.inputmethod.InputMethodSubtype) $r10;

        $r11 = virtualinvoke $r12.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z5 == 0 goto label11;

     label06:
        if r4 != null goto label07;

        r4 = r7;

     label07:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z3 == 0 goto label10;

        r6 = r7;

     label08:
        if r6 != null goto label09;

        if z0 != 0 goto label02;

     label09:
        return r6;

     label10:
        if z1 != 0 goto label11;

        $z4 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        if $z4 == 0 goto label11;

        r6 = r7;

        z1 = 1;

     label11:
        i1 = i1 + 1;

        goto label05;
    }

    public static java.lang.String getApiCallStack()
    {
        java.lang.String r0, r3;
        java.lang.RuntimeException r1, $r4, $r5;
        java.lang.StackTraceElement[] r2;
        int i0, $i1, $i2;
        java.lang.StackTraceElement $r6;
        boolean $z0;

        r0 = "";

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r1 = $r5;

        r2 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = 1;

     label3:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label6;

        $r6 = r2[i0];

        r3 = virtualinvoke $r6.<java.lang.StackTraceElement: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label5;

        r0 = r3;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        $i2 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("Transact(");

        if $i2 >= 0 goto label6;

        r0 = r3;

        goto label4;

     label6:
        return r0;

        catch java.lang.RuntimeException from label1 to label2 with label2;
    }

    public static java.util.ArrayList getDefaultEnabledImes(android.content.Context, boolean, java.util.ArrayList)
    {
        android.content.Context r0;
        boolean z0, z1, $z2, $z4, $z5;
        java.util.ArrayList r1, r2, $r5;
        int i0, i1, $i2, $i3;
        android.view.inputmethod.InputMethodInfo r3, r4;
        java.lang.Object $r6, $r7;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.ArrayList;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        z1 = 0;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label3;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (android.view.inputmethod.InputMethodInfo) $r7;

        $z4 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isDefaultEnabledIme(boolean,android.view.inputmethod.InputMethodInfo,android.content.Context)>(z0, r4, r0);

        if $z4 == 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $z5 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z5 == 0 goto label2;

        z1 = 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if z1 == 0 goto label5;

     label4:
        return r2;

     label5:
        i1 = 0;

     label6:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label4;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.view.inputmethod.InputMethodInfo) $r6;

        $z2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemAuxilialyImeThatHashAutomaticSubtype(android.view.inputmethod.InputMethodInfo)>(r3);

        if $z2 == 0 goto label7;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label7:
        i1 = i1 + 1;

        goto label6;
    }

    private static java.util.List getEnabledInputMethodSubtypeList(android.content.Context, android.view.inputmethod.InputMethodInfo, java.util.List, boolean)
    {
        android.content.Context r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.util.List r2, $r3;
        boolean z0, $z1;
        android.content.res.Resources $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r2 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getImplicitlyApplicableSubtypesLocked(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>($r4, r1);

     label1:
        $r3 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.util.List sort(android.content.Context,int,android.view.inputmethod.InputMethodInfo,java.util.List)>(r0, 0, r1, r2);

        return $r3;
    }

    public static java.lang.CharSequence getImeAndSubtypeDisplayName(android.content.Context, android.view.inputmethod.InputMethodInfo, android.view.inputmethod.InputMethodSubtype)
    {
        android.content.Context r0;
        android.view.inputmethod.InputMethodInfo r1;
        android.view.inputmethod.InputMethodSubtype r2;
        java.lang.CharSequence r3, $r10;
        java.lang.CharSequence[] r4;
        java.lang.String r5, $r7;
        android.content.pm.PackageManager $r6;
        android.content.pm.ServiceInfo $r8;
        android.content.pm.ApplicationInfo $r9;
        boolean $z0;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r2 := @parameter2: android.view.inputmethod.InputMethodSubtype;

        $r6 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r6);

        if r2 == null goto label2;

        r4 = newarray (java.lang.CharSequence)[2];

        $r7 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r8 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r9 = $r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>(r0, $r7, $r9);

        r4[0] = $r10;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label3;

        r5 = "";

     label1:
        r4[1] = r5;

        r3 = staticinvoke <android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>(r4);

     label2:
        return r3;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    private static java.util.ArrayList getImplicitlyApplicableSubtypesLocked(android.content.res.Resources, android.view.inputmethod.InputMethodInfo)
    {
        android.content.res.Resources r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.util.ArrayList r2, r4, $r18, $r27, $r31;
        java.lang.String r3, r10, r11, r13, $r21, $r23, $r28;
        java.util.HashMap r5, $r17;
        int i0, i1, i2, i3, $i4;
        android.view.inputmethod.InputMethodSubtype r6, r7, r8, r9, r12, r14;
        android.content.res.Configuration $r15;
        java.util.Locale $r16;
        boolean $z0, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10;
        java.lang.Object $r19, $r22, $r24, $r25, $r29;
        java.util.Collection $r20, $r30;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r1);

        $r15 = virtualinvoke r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r16 = $r15.<android.content.res.Configuration: java.util.Locale locale>;

        r3 = virtualinvoke $r16.<java.util.Locale: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label02;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r4 = $r31;

     label01:
        return r4;

     label02:
        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r5 = $r17;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label03:
        if i1 >= i0 goto label05;

        $r29 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r14 = (android.view.inputmethod.InputMethodSubtype) $r29;

        $z9 = virtualinvoke r14.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z9 == 0 goto label04;

        r13 = virtualinvoke r14.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z10 = virtualinvoke r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r13);

        if $z10 != 0 goto label04;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r14);

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        $i4 = virtualinvoke r5.<java.util.HashMap: int size()>();

        if $i4 <= 0 goto label06;

        $r27 = new java.util.ArrayList;

        $r30 = virtualinvoke r5.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r27.<java.util.ArrayList: void <init>(java.util.Collection)>($r30);

        return $r27;

     label06:
        i2 = 0;

     label07:
        if i2 >= i0 goto label11;

        $r24 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r9 = (android.view.inputmethod.InputMethodSubtype) $r24;

        r11 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        r10 = virtualinvoke r9.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z6 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r11);

        if $z6 == 0 goto label08;

        $r25 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r12 = (android.view.inputmethod.InputMethodSubtype) $r25;

        if r12 == null goto label10;

        $r28 = virtualinvoke r12.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z8 == 0 goto label09;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z7 == 0 goto label08;

     label10:
        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r9);

        goto label08;

     label11:
        $r19 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("keyboard");

        r6 = (android.view.inputmethod.InputMethodSubtype) $r19;

        $r18 = new java.util.ArrayList;

        $r20 = virtualinvoke r5.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r20);

        r4 = $r18;

        if r6 == null goto label14;

        $z2 = virtualinvoke r6.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("AsciiCapable");

        if $z2 != 0 goto label14;

        i3 = 0;

     label12:
        if i3 >= i0 goto label14;

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (android.view.inputmethod.InputMethodSubtype) $r22;

        $r23 = "keyboard";

        $r21 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z3 == 0 goto label13;

        $z4 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("EnabledWhenDefaultIsNotAsciiCapable");

        if $z4 == 0 goto label13;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label13:
        i3 = i3 + 1;

        goto label12;

     label14:
        if r6 != null goto label01;

        r7 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>(r0, r2, "keyboard", r3, 1);

        if r7 == null goto label01;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        return r4;
    }

    public static android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)
    {
        java.util.List r0;
        int i0, i1, $i2, $i3;
        android.view.inputmethod.InputMethodInfo r1, $r3;
        java.lang.Object $r2, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label4;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i2 <= 0 goto label4;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = -1;

     label1:
        if i0 <= 0 goto label3;

        i0 = i0 + -1;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (android.view.inputmethod.InputMethodInfo) $r4;

        $z0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemImeThatHasEnglishKeyboardSubtype(android.view.inputmethod.InputMethodInfo)>(r1);

        if $z0 == 0 goto label2;

        $z3 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z3 != 0 goto label2;

        return r1;

     label2:
        if i1 >= 0 goto label1;

        $z1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>(r1);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z2 != 0 goto label1;

        i1 = i0;

        goto label1;

     label3:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, 0);

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i3);

        $r3 = (android.view.inputmethod.InputMethodInfo) $r2;

        return $r3;

     label4:
        return null;
    }

    public static java.util.ArrayList getOverridingImplicitlyEnabledSubtypes(android.view.inputmethod.InputMethodInfo, java.lang.String)
    {
        android.view.inputmethod.InputMethodInfo r0;
        java.lang.String r1, $r5;
        java.util.ArrayList r2, $r4;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        $z0 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r2;
    }

    public static java.lang.String getStackTrace()
    {
        java.lang.StringBuilder r0, $r3, $r7, $r10, $r11;
        java.lang.RuntimeException r1, $r4, $r5;
        java.lang.StackTraceElement[] r2;
        int i0, $i1;
        java.lang.String $r6, $r9, $r12;
        java.lang.StackTraceElement $r8;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0 = $r3;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r1 = $r5;

        r2 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = 1;

     label3:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r2[i0];

        $r9 = virtualinvoke $r8.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r6 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.lang.RuntimeException from label1 to label2 with label2;
    }

    public static int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo, int)
    {
        android.view.inputmethod.InputMethodInfo r0;
        int i0, i1, i2, $i3;
        android.view.inputmethod.InputMethodSubtype $r1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        i0 := @parameter1: int;

        if r0 == null goto label3;

        i1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i2);

        $i3 = virtualinvoke $r1.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        if i0 != $i3 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)
    {
        android.view.inputmethod.InputMethodInfo r0;
        java.util.ArrayList r1, $r2;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype $r3;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static boolean isDefaultEnabledIme(boolean, android.view.inputmethod.InputMethodInfo, android.content.Context)
    {
        boolean z0, $z1, $z2;
        android.view.inputmethod.InputMethodInfo r0;
        android.content.Context r1;

        z0 := @parameter0: boolean;

        r0 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter2: android.content.Context;

        $z1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isValidSystemDefaultIme(boolean,android.view.inputmethod.InputMethodInfo,android.content.Context)>(z0, r0, r1);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemImeThatHasEnglishKeyboardSubtype(android.view.inputmethod.InputMethodInfo)>(r0);

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isSystemAuxilialyImeThatHashAutomaticSubtype(android.view.inputmethod.InputMethodInfo)
    {
        android.view.inputmethod.InputMethodInfo r0;
        int i0, i1;
        boolean $z0, $z1, $z2;
        android.view.inputmethod.InputMethodSubtype $r1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $z0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>(r0);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>();

        if $z1 == 0 goto label1;

        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        $z2 = virtualinvoke $r1.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z2 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;
    }

    public static boolean isSystemIme(android.view.inputmethod.InputMethodInfo)
    {
        android.view.inputmethod.InputMethodInfo r0;
        android.content.pm.ServiceInfo $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0, $i1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $r1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r2 = $r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSystemImeThatHasEnglishKeyboardSubtype(android.view.inputmethod.InputMethodInfo)
    {
        android.view.inputmethod.InputMethodInfo r0;
        boolean $z0, $z1;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        $z0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = <com.android.internal.inputmethod.InputMethodUtils: java.util.Locale ENGLISH_LOCALE>;

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getLanguage()>();

        $z1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo,java.lang.String,java.lang.String)>(r0, $r2, "keyboard");

        return $z1;
    }

    public static boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo, int)
    {
        android.view.inputmethod.InputMethodInfo r0;
        int i0, $i1;

        r0 := @parameter0: android.view.inputmethod.InputMethodInfo;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r0, i0);

        if $i1 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isValidSystemDefaultIme(boolean, android.view.inputmethod.InputMethodInfo, android.content.Context)
    {
        boolean z0, z1, $z2, $z3;
        android.view.inputmethod.InputMethodInfo r0;
        android.content.Context r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7, $r11;
        android.content.res.Resources $r8;
        java.util.Locale $r9;
        android.content.res.Configuration $r10;
        android.content.res.Resources$NotFoundException $r12;

        z0 := @parameter0: boolean;

        r0 := @parameter1: android.view.inputmethod.InputMethodInfo;

        r1 := @parameter2: android.content.Context;

        if z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>(r0);

        if $z2 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>();

        if $i0 == 0 goto label6;

     label3:
        $z3 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: boolean isDefault(android.content.Context)>(r1);

        if $z3 == 0 goto label6;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r9 = $r10.<android.content.res.Configuration: java.util.Locale locale>;

        $r11 = virtualinvoke $r9.<java.util.Locale: java.lang.String getLanguage()>();

        z1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo,java.lang.String,java.lang.String)>(r0, $r11, null);

     label4:
        if z1 == 0 goto label6;

        return 1;

     label5:
        $r12 := @caughtexception;

     label6:
        $i1 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i1 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found no subtypes in a system IME: ");

        $r5 = virtualinvoke r0.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodUtils", $r7);

        return 0;

        catch android.content.res.Resources$NotFoundException from label3 to label4 with label5;
    }

    private static void setDisabledUntilUsed(android.content.pm.PackageManager, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r0.<android.content.pm.PackageManager: int getApplicationEnabledSetting(java.lang.String)>(r1);

        if i0 == 0 goto label1;

        if i0 != 1 goto label2;

     label1:
        virtualinvoke r0.<android.content.pm.PackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>(r1, 4, 0);

     label2:
        return;
    }

    public static void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.PackageManager, java.util.List)
    {
        android.content.pm.PackageManager r0;
        java.util.List r1;
        java.lang.String[] r2;
        android.view.textservice.SpellCheckerInfo r3;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.lang.String r4, $r10, $r13, $r17;
        boolean z0, z1, $z2, $z3;
        android.content.pm.PackageManager$NameNotFoundException r5, $r15;
        android.content.pm.ApplicationInfo r6, r7;
        android.content.res.Resources $r8;
        android.view.textservice.TextServicesManager $r9;
        android.view.inputmethod.InputMethodInfo $r11;
        java.lang.Object $r12;
        java.lang.StringBuilder $r16, $r18, r19;
        java.lang.Throwable r20;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.util.List;

        $r8 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r2 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236011);

        if r2 == null goto label01;

        $i4 = lengthof r2;

        if $i4 != 0 goto label02;

     label01:
        return;

     label02:
        $r9 = staticinvoke <android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>();

        r3 = virtualinvoke $r9.<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>();

        i0 = lengthof r2;

        i1 = 0;

     label03:
        if i1 >= i0 goto label01;

        r4 = r2[i1];

        i2 = 0;

     label04:
        i3 = interfaceinvoke r1.<java.util.List: int size()>();

        z0 = 0;

        if i2 >= i3 goto label05;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r11 = (android.view.inputmethod.InputMethodInfo) $r12;

        $r13 = virtualinvoke $r11.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label07;

        z0 = 1;

     label05:
        if z0 == 0 goto label08;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        i2 = i2 + 1;

        goto label04;

     label08:
        if r3 == null goto label09;

        $r10 = virtualinvoke r3.<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label06;

     label09:
        r7 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r4, 32768);

     label10:
        r6 = r7;

     label11:
        if r6 == null goto label06;

        $i6 = r6.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = 1 & $i6;

        if $i5 == 0 goto label14;

        z1 = 1;

     label12:
        if z1 == 0 goto label06;

        staticinvoke <com.android.internal.inputmethod.InputMethodUtils: void setDisabledUntilUsed(android.content.pm.PackageManager,java.lang.String)>(r0, r4);

        goto label06;

     label13:
        $r15 := @caughtexception;

        r5 = $r15;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNotFoundException: ");

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r20 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodUtils", $r17, r20);

        r6 = null;

        goto label11;

     label14:
        z1 = 0;

        goto label12;

        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label13;
    }
}
