public abstract class com.android.internal.view.BaseSurfaceHolder extends java.lang.Object implements android.view.SurfaceHolder
{
    static final boolean DEBUG;
    private static final java.lang.String TAG;
    public final java.util.ArrayList mCallbacks;
    android.view.SurfaceHolder$Callback[] mGottenCallbacks;
    boolean mHaveGottenCallbacks;
    long mLastLockTime;
    protected int mRequestedFormat;
    int mRequestedHeight;
    int mRequestedType;
    int mRequestedWidth;
    public android.view.Surface mSurface;
    final android.graphics.Rect mSurfaceFrame;
    public final java.util.concurrent.locks.ReentrantLock mSurfaceLock;
    android.graphics.Rect mTmpDirty;
    int mType;

    public void <init>()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        java.util.ArrayList $r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        android.view.Surface $r3;
        android.graphics.Rect $r4;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.view.BaseSurfaceHolder: java.util.concurrent.locks.ReentrantLock mSurfaceLock> = $r2;

        $r3 = new android.view.Surface;

        specialinvoke $r3.<android.view.Surface: void <init>()>();

        r0.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface> = $r3;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedWidth> = -1;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedHeight> = -1;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedFormat> = -1;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedType> = -1;

        r0.<com.android.internal.view.BaseSurfaceHolder: long mLastLockTime> = 0L;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mType> = -1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame> = $r4;

        return;
    }

    private final android.graphics.Canvas internalLockCanvas(android.graphics.Rect)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.graphics.Rect r1, $r9, $r10, $r11, r17;
        boolean z0;
        android.graphics.Canvas r2, r5;
        long l0, l1, l2, $l5, $l6;
        java.lang.Exception r4, $r14;
        int $i3;
        java.util.concurrent.locks.ReentrantLock $r6, $r7;
        byte $b4;
        android.view.Surface $r8;
        java.lang.InterruptedException $r15;
        android.view.SurfaceHolder$BadSurfaceTypeException r16;
        java.lang.Throwable r18;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        r1 := @parameter0: android.graphics.Rect;

        $i3 = r0.<com.android.internal.view.BaseSurfaceHolder: int mType>;

        if $i3 != 3 goto label01;

        r16 = new android.view.SurfaceHolder$BadSurfaceTypeException;

        specialinvoke r16.<android.view.SurfaceHolder$BadSurfaceTypeException: void <init>(java.lang.String)>("Surface type is SURFACE_TYPE_PUSH_BUFFERS");

        r18 = (java.lang.Throwable) r16;

        throw r18;

     label01:
        $r6 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        z0 = virtualinvoke r0.<com.android.internal.view.BaseSurfaceHolder: boolean onAllowLockCanvas()>();

        r2 = null;

        if z0 == 0 goto label05;

        if r1 != null goto label03;

        $r9 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mTmpDirty>;

        if $r9 != null goto label02;

        r17 = new android.graphics.Rect;

        specialinvoke r17.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mTmpDirty> = r17;

     label02:
        $r10 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mTmpDirty>;

        $r11 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>($r11);

        r1 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mTmpDirty>;

     label03:
        $r8 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface>;

        r5 = virtualinvoke $r8.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(r1);

     label04:
        r2 = r5;

     label05:
        if r2 == null goto label07;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.view.BaseSurfaceHolder: long mLastLockTime> = $l6;

        return r2;

     label06:
        $r14 := @caughtexception;

        r4 = $r14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BaseSurfaceHolder", "Exception locking surface", r4);

        r2 = null;

        goto label05;

     label07:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = r0.<com.android.internal.view.BaseSurfaceHolder: long mLastLockTime>;

        l1 = 100L + $l5;

        $b4 = l1 cmp l0;

        if $b4 <= 0 goto label10;

        l2 = l1 - l0;

     label08:
        staticinvoke <java.lang.Thread: void sleep(long)>(l2);

     label09:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label10:
        r0.<com.android.internal.view.BaseSurfaceHolder: long mLastLockTime> = l0;

        $r7 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

     label11:
        $r15 := @caughtexception;

        goto label09;

        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.InterruptedException from label08 to label09 with label11;
    }

    public void addCallback(android.view.SurfaceHolder$Callback)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.view.SurfaceHolder$Callback r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        r1 := @parameter0: android.view.SurfaceHolder$Callback;

        r2 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.view.SurfaceHolder$Callback[] getCallbacks()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        java.util.ArrayList r1, $r3, $r8;
        java.lang.Throwable r2, $r12;
        int i0, $i1;
        boolean $z0;
        android.view.SurfaceHolder$Callback[] $r4, $r5, $r6, $r7, $r10, $r11;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $z0 = r0.<com.android.internal.view.BaseSurfaceHolder: boolean mHaveGottenCallbacks>;

        if $z0 == 0 goto label01;

        $r11 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks>;

        return $r11;

     label01:
        r1 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label03:
        if i0 <= 0 goto label09;

     label04:
        $r5 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks>;

        if $r5 == null goto label05;

        $r10 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks>;

        $i1 = lengthof $r10;

        if $i1 == i0 goto label06;

     label05:
        $r6 = newarray (android.view.SurfaceHolder$Callback)[i0];

        r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks> = $r6;

     label06:
        $r8 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        $r7 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

     label07:
        r0.<com.android.internal.view.BaseSurfaceHolder: boolean mHaveGottenCallbacks> = 1;

        exitmonitor r1;

     label08:
        $r4 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks>;

        return $r4;

     label09:
        r0.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] mGottenCallbacks> = null;

     label10:
        goto label07;

     label11:
        $r12 := @caughtexception;

        r2 = $r12;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int getRequestedFormat()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int $i0;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $i0 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedFormat>;

        return $i0;
    }

    public int getRequestedHeight()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int $i0;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $i0 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedHeight>;

        return $i0;
    }

    public int getRequestedType()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int $i0;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $i0 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedType>;

        return $i0;
    }

    public int getRequestedWidth()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int $i0;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $i0 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedWidth>;

        return $i0;
    }

    public android.view.Surface getSurface()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.view.Surface $r1;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $r1 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface>;

        return $r1;
    }

    public android.graphics.Rect getSurfaceFrame()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $r1 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame>;

        return $r1;
    }

    public android.graphics.Canvas lockCanvas()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $r1 = specialinvoke r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas internalLockCanvas(android.graphics.Rect)>(null);

        return $r1;
    }

    public android.graphics.Canvas lockCanvas(android.graphics.Rect)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.graphics.Rect r1;
        android.graphics.Canvas $r2;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = specialinvoke r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas internalLockCanvas(android.graphics.Rect)>(r1);

        return $r2;
    }

    public abstract boolean onAllowLockCanvas();

    public abstract void onRelayoutContainer();

    public abstract void onUpdateSurface();

    public void removeCallback(android.view.SurfaceHolder$Callback)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.view.SurfaceHolder$Callback r1;
        java.util.ArrayList r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        r1 := @parameter0: android.view.SurfaceHolder$Callback;

        r2 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.ArrayList mCallbacks>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setFixedSize(int, int)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedWidth>;

        if $i2 != i0 goto label1;

        $i3 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedHeight>;

        if $i3 == i1 goto label2;

     label1:
        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedWidth> = i0;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedHeight> = i1;

        virtualinvoke r0.<com.android.internal.view.BaseSurfaceHolder: void onRelayoutContainer()>();

     label2:
        return;
    }

    public void setFormat(int)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int i0, $i1;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedFormat>;

        if $i1 == i0 goto label1;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedFormat> = i0;

        virtualinvoke r0.<com.android.internal.view.BaseSurfaceHolder: void onUpdateSurface()>();

     label1:
        return;
    }

    public void setSizeFromLayout()
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        $i0 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedWidth>;

        if $i0 != -1 goto label1;

        $i1 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedHeight>;

        if $i1 == -1 goto label2;

     label1:
        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedHeight> = -1;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedWidth> = -1;

        virtualinvoke r0.<com.android.internal.view.BaseSurfaceHolder: void onRelayoutContainer()>();

     label2:
        return;
    }

    public void setSurfaceFrameSize(int, int)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int i0, i1;
        android.graphics.Rect $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame>;

        $r1.<android.graphics.Rect: int top> = 0;

        $r2 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame>;

        $r2.<android.graphics.Rect: int left> = 0;

        $r3 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame>;

        $r3.<android.graphics.Rect: int right> = i0;

        $r4 = r0.<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect mSurfaceFrame>;

        $r4.<android.graphics.Rect: int bottom> = i1;

        return;
    }

    public void setType(int)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        int i0, $i1;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label4;
            default: goto label2;
        };

     label2:
        return;

     label3:
        i0 = 0;

        goto label1;

     label4:
        $i1 = r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedType>;

        if $i1 == i0 goto label2;

        r0.<com.android.internal.view.BaseSurfaceHolder: int mRequestedType> = i0;

        virtualinvoke r0.<com.android.internal.view.BaseSurfaceHolder: void onUpdateSurface()>();

        return;
    }

    public void ungetCallbacks()
    {
        com.android.internal.view.BaseSurfaceHolder r0;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        r0.<com.android.internal.view.BaseSurfaceHolder: boolean mHaveGottenCallbacks> = 0;

        return;
    }

    public void unlockCanvasAndPost(android.graphics.Canvas)
    {
        com.android.internal.view.BaseSurfaceHolder r0;
        android.graphics.Canvas r1;
        android.view.Surface $r2;
        java.util.concurrent.locks.ReentrantLock $r3;

        r0 := @this: com.android.internal.view.BaseSurfaceHolder;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface>;

        virtualinvoke $r2.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r1);

        $r3 = r0.<com.android.internal.view.BaseSurfaceHolder: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.BaseSurfaceHolder: java.lang.String TAG> = "BaseSurfaceHolder";

        <com.android.internal.view.BaseSurfaceHolder: boolean DEBUG> = 0;

        return;
    }
}
