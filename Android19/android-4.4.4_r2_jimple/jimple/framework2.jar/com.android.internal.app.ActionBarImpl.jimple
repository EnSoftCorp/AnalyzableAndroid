public class com.android.internal.app.ActionBarImpl extends android.app.ActionBar
{
    private static final int CONTEXT_DISPLAY_NORMAL;
    private static final int CONTEXT_DISPLAY_SPLIT;
    private static final int INVALID_POSITION;
    private static final java.lang.String TAG;
    com.android.internal.app.ActionBarImpl$ActionModeImpl mActionMode;
    private com.android.internal.widget.ActionBarView mActionView;
    private android.app.Activity mActivity;
    private com.android.internal.widget.ActionBarContainer mContainerView;
    private boolean mContentAnimations;
    private android.view.View mContentView;
    private android.content.Context mContext;
    private int mContextDisplayMode;
    private com.android.internal.widget.ActionBarContextView mContextView;
    private int mCurWindowVisibility;
    private android.animation.Animator mCurrentShowAnim;
    android.view.ActionMode mDeferredDestroyActionMode;
    android.view.ActionMode$Callback mDeferredModeDestroyCallback;
    private android.app.Dialog mDialog;
    private boolean mDisplayHomeAsUpSet;
    final android.os.Handler mHandler;
    private boolean mHasEmbeddedTabs;
    private boolean mHiddenByApp;
    private boolean mHiddenBySystem;
    final android.animation.Animator$AnimatorListener mHideListener;
    private boolean mLastMenuVisibility;
    private java.util.ArrayList mMenuVisibilityListeners;
    private boolean mNowShowing;
    private com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout;
    private int mSavedTabPosition;
    private com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab;
    private boolean mShowHideAnimationEnabled;
    final android.animation.Animator$AnimatorListener mShowListener;
    private boolean mShowingForMode;
    private com.android.internal.widget.ActionBarContainer mSplitView;
    private com.android.internal.widget.ScrollingTabContainerView mTabScrollView;
    java.lang.Runnable mTabSelector;
    private java.util.ArrayList mTabs;
    private android.content.Context mThemedContext;
    final android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener;

    public void <init>(android.app.Activity)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.Activity r1, $r10;
        android.view.View r2, $r12;
        boolean z0;
        android.view.Window $r9, $r11;
        java.util.ArrayList r13, r14;
        android.os.Handler r15;
        com.android.internal.app.ActionBarImpl$1 r16;
        com.android.internal.app.ActionBarImpl$2 r17;
        com.android.internal.app.ActionBarImpl$3 r18;
        android.animation.Animator$AnimatorListener r19, r20;
        android.animation.ValueAnimator$AnimatorUpdateListener r21;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<android.app.ActionBar: void <init>()>();

        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs> = r13;

        r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition> = -1;

        r14 = new java.util.ArrayList;

        specialinvoke r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mMenuVisibilityListeners> = r14;

        r15 = new android.os.Handler;

        specialinvoke r15.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.app.ActionBarImpl: android.os.Handler mHandler> = r15;

        r0.<com.android.internal.app.ActionBarImpl: int mCurWindowVisibility> = 0;

        r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations> = 1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing> = 1;

        r16 = new com.android.internal.app.ActionBarImpl$1;

        specialinvoke r16.<com.android.internal.app.ActionBarImpl$1: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        r19 = (android.animation.Animator$AnimatorListener) r16;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mHideListener> = r19;

        r17 = new com.android.internal.app.ActionBarImpl$2;

        specialinvoke r17.<com.android.internal.app.ActionBarImpl$2: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        r20 = (android.animation.Animator$AnimatorListener) r17;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mShowListener> = r20;

        r18 = new com.android.internal.app.ActionBarImpl$3;

        specialinvoke r18.<com.android.internal.app.ActionBarImpl$3: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        r21 = (android.animation.ValueAnimator$AnimatorUpdateListener) r18;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = r21;

        r0.<com.android.internal.app.ActionBarImpl: android.app.Activity mActivity> = r1;

        $r9 = virtualinvoke r1.<android.app.Activity: android.view.Window getWindow()>();

        r2 = virtualinvoke $r9.<android.view.Window: android.view.View getDecorView()>();

        $r10 = r0.<com.android.internal.app.ActionBarImpl: android.app.Activity mActivity>;

        $r11 = virtualinvoke $r10.<android.app.Activity: android.view.Window getWindow()>();

        z0 = virtualinvoke $r11.<android.view.Window: boolean hasFeature(int)>(9);

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void init(android.view.View)>(r2);

        if z0 != 0 goto label1;

        $r12 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(16908290);

        r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView> = $r12;

     label1:
        return;
    }

    public void <init>(android.app.Dialog)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.Dialog r1;
        android.view.Window $r8;
        android.view.View $r9;
        java.util.ArrayList r10, r11;
        android.os.Handler r12;
        com.android.internal.app.ActionBarImpl$1 r13;
        com.android.internal.app.ActionBarImpl$2 r14;
        com.android.internal.app.ActionBarImpl$3 r15;
        android.animation.Animator$AnimatorListener r16, r17;
        android.animation.ValueAnimator$AnimatorUpdateListener r18;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.Dialog;

        specialinvoke r0.<android.app.ActionBar: void <init>()>();

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs> = r10;

        r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition> = -1;

        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mMenuVisibilityListeners> = r11;

        r12 = new android.os.Handler;

        specialinvoke r12.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.app.ActionBarImpl: android.os.Handler mHandler> = r12;

        r0.<com.android.internal.app.ActionBarImpl: int mCurWindowVisibility> = 0;

        r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations> = 1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing> = 1;

        r13 = new com.android.internal.app.ActionBarImpl$1;

        specialinvoke r13.<com.android.internal.app.ActionBarImpl$1: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        r16 = (android.animation.Animator$AnimatorListener) r13;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mHideListener> = r16;

        r14 = new com.android.internal.app.ActionBarImpl$2;

        specialinvoke r14.<com.android.internal.app.ActionBarImpl$2: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        r17 = (android.animation.Animator$AnimatorListener) r14;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mShowListener> = r17;

        r15 = new com.android.internal.app.ActionBarImpl$3;

        specialinvoke r15.<com.android.internal.app.ActionBarImpl$3: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        r18 = (android.animation.ValueAnimator$AnimatorUpdateListener) r15;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = r18;

        r0.<com.android.internal.app.ActionBarImpl: android.app.Dialog mDialog> = r1;

        $r8 = virtualinvoke r1.<android.app.Dialog: android.view.Window getWindow()>();

        $r9 = virtualinvoke $r8.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void init(android.view.View)>($r9);

        return;
    }

    static boolean access$000(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations>;

        return $z0;
    }

    static android.view.View access$100(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContextView access$1000(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarContextView $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarView access$1100(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        return $r1;
    }

    static android.content.Context access$1200(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        return $r1;
    }

    static com.android.internal.widget.ScrollingTabContainerView access$1300(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ScrollingTabContainerView $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContainer access$200(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarContainer $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContainer access$300(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarContainer $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        return $r1;
    }

    static int access$400(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        int $i0;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $i0 = r0.<com.android.internal.app.ActionBarImpl: int mContextDisplayMode>;

        return $i0;
    }

    static android.animation.Animator access$502(com.android.internal.app.ActionBarImpl, android.animation.Animator)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.animation.Animator r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        r1 := @parameter1: android.animation.Animator;

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim> = r1;

        return r1;
    }

    static com.android.internal.widget.ActionBarOverlayLayout access$600(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarOverlayLayout $r1;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        return $r1;
    }

    static boolean access$700(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenByApp>;

        return $z0;
    }

    static boolean access$800(com.android.internal.app.ActionBarImpl)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem>;

        return $z0;
    }

    static boolean access$900(boolean, boolean, boolean)
    {
        boolean z0, z1, z2, $z3;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $z3 = staticinvoke <com.android.internal.app.ActionBarImpl: boolean checkShowingFlags(boolean,boolean,boolean)>(z0, z1, z2);

        return $z3;
    }

    private static boolean checkShowingFlags(boolean, boolean, boolean)
    {
        boolean z0, z1, z2;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        if z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        if z0 != 0 goto label3;

        if z1 == 0 goto label1;

     label3:
        return 0;
    }

    private void cleanupTabs()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.app.ActionBarImpl$TabImpl $r1;
        java.util.ArrayList $r2;
        com.android.internal.widget.ScrollingTabContainerView $r3, $r4;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>(null);

     label1:
        $r2 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r4.<com.android.internal.widget.ScrollingTabContainerView: void removeAllTabs()>();

     label2:
        r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition> = -1;

        return;
    }

    private void configureTab(android.app.ActionBar$Tab, int)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        int i0, i1, i2;
        com.android.internal.app.ActionBarImpl$TabImpl r2, $r8;
        android.app.ActionBar$TabListener $r3;
        java.util.ArrayList $r4, $r5, $r6;
        java.lang.Object $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        r2 = (com.android.internal.app.ActionBarImpl$TabImpl) r1;

        $r3 = virtualinvoke r2.<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        if $r3 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action Bar Tab must have a Callback");

        throw $r9;

     label1:
        virtualinvoke r2.<com.android.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>(i0);

        $r4 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r2);

        $r5 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = i0 + 1;

     label2:
        if i2 >= i1 goto label3;

        $r6 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r8 = (com.android.internal.app.ActionBarImpl$TabImpl) $r7;

        virtualinvoke $r8.<com.android.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>(i2);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    private void ensureTabsExist()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ScrollingTabContainerView r1, $r2, $r3;
        android.content.Context $r4;
        boolean $z0;
        int $i0;
        com.android.internal.widget.ActionBarContainer $r5;
        com.android.internal.widget.ActionBarOverlayLayout $r6, $r7;
        com.android.internal.widget.ActionBarView $r8;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = new com.android.internal.widget.ScrollingTabContainerView;

        $r4 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        specialinvoke $r3.<com.android.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($r4);

        r1 = $r3;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs>;

        if $z0 == 0 goto label3;

        virtualinvoke r1.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r8 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r8.<com.android.internal.widget.ActionBarView: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>(r1);

     label2:
        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView> = r1;

        return;

     label3:
        $i0 = virtualinvoke r0.<com.android.internal.app.ActionBarImpl: int getNavigationMode()>();

        if $i0 != 2 goto label5;

        virtualinvoke r1.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r6 == null goto label4;

        $r7 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r7.<com.android.internal.widget.ActionBarOverlayLayout: void requestFitSystemWindows()>();

     label4:
        $r5 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r5.<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>(r1);

        goto label2;

     label5:
        virtualinvoke r1.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

        goto label4;
    }

    private void hideForActionMode()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;
        com.android.internal.widget.ActionBarOverlayLayout $r1, $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mShowingForMode>;

        if $z0 == 0 goto label2;

        r0.<com.android.internal.app.ActionBarImpl: boolean mShowingForMode> = 0;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(0);

     label1:
        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void init(android.view.View)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.view.View r1, $r4, $r7, $r9, $r11, $r14;
        byte b0;
        boolean z0, z1, $z2, $z3, $z4;
        com.android.internal.view.ActionBarPolicy r2;
        android.content.Context $r3, $r30;
        com.android.internal.widget.ActionBarOverlayLayout $r5, $r6, $r31;
        com.android.internal.widget.ActionBarView $r8, $r16, $r27, $r28, $r29;
        com.android.internal.widget.ActionBarContextView $r10, $r23, $r25;
        com.android.internal.widget.ActionBarContainer $r12, $r13, $r26;
        java.lang.IllegalStateException $r15;
        java.lang.Class $r17;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;
        java.lang.String $r20, $r24;
        int $i1, $i2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext> = $r3;

        $r4 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909075);

        $r5 = (com.android.internal.widget.ActionBarOverlayLayout) $r4;

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout> = $r5;

        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r6 == null goto label01;

        $r31 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r31.<com.android.internal.widget.ActionBarOverlayLayout: void setActionBar(com.android.internal.app.ActionBarImpl)>(r0);

     label01:
        $r7 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909077);

        $r8 = (com.android.internal.widget.ActionBarView) $r7;

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView> = $r8;

        $r9 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909078);

        $r10 = (com.android.internal.widget.ActionBarContextView) $r9;

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView> = $r10;

        $r11 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909076);

        $r12 = (com.android.internal.widget.ActionBarContainer) $r11;

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView> = $r12;

        $r14 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16909079);

        $r13 = (com.android.internal.widget.ActionBarContainer) $r14;

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView> = $r13;

        $r16 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        if $r16 == null goto label02;

        $r23 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        if $r23 == null goto label02;

        $r26 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        if $r26 != null goto label03;

     label02:
        $r15 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r17.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with a compatible window decor layout");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r15;

     label03:
        $r28 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $r25 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r28.<com.android.internal.widget.ActionBarView: void setContextView(com.android.internal.widget.ActionBarContextView)>($r25);

        $r27 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z2 = virtualinvoke $r27.<com.android.internal.widget.ActionBarView: boolean isSplitActionBar()>();

        if $z2 == 0 goto label09;

        b0 = 1;

     label04:
        r0.<com.android.internal.app.ActionBarImpl: int mContextDisplayMode> = b0;

        $r29 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i1 = virtualinvoke $r29.<com.android.internal.widget.ActionBarView: int getDisplayOptions()>();

        $i2 = 4 & $i1;

        if $i2 == 0 goto label10;

        z0 = 1;

     label05:
        if z0 == 0 goto label06;

        r0.<com.android.internal.app.ActionBarImpl: boolean mDisplayHomeAsUpSet> = 1;

     label06:
        $r30 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        r2 = staticinvoke <com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>($r30);

        $z3 = virtualinvoke r2.<com.android.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>();

        if $z3 != 0 goto label07;

        z1 = 0;

        if z0 == 0 goto label08;

     label07:
        z1 = 1;

     label08:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)>(z1);

        $z4 = virtualinvoke r2.<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>($z4);

        return;

     label09:
        b0 = 0;

        goto label04;

     label10:
        z0 = 0;

        goto label05;
    }

    private void setHasEmbeddedTabs(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, z1, z2, $z3, $z4;
        com.android.internal.widget.ActionBarView r1, $r4, $r11;
        com.android.internal.widget.ActionBarContainer $r2, $r12;
        com.android.internal.widget.ScrollingTabContainerView $r3, $r5, $r6, $r7, $r10;
        int $i0;
        com.android.internal.widget.ActionBarOverlayLayout $r8, $r9;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        z1 = 1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs> = z0;

        $z3 = r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs>;

        if $z3 != 0 goto label5;

        $r11 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r11.<com.android.internal.widget.ActionBarView: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>(null);

        $r12 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        $r10 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r12.<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>($r10);

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.app.ActionBarImpl: int getNavigationMode()>();

        if $i0 != 2 goto label6;

        z2 = 1;

     label2:
        $r5 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r5 == null goto label3;

        if z2 == 0 goto label7;

        $r7 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r7.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r8 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r8 == null goto label3;

        $r9 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r9.<com.android.internal.widget.ActionBarOverlayLayout: void requestFitSystemWindows()>();

     label3:
        r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z4 = r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs>;

        if $z4 != 0 goto label8;

        if z2 == 0 goto label8;

     label4:
        virtualinvoke r1.<com.android.internal.widget.ActionBarView: void setCollapsable(boolean)>(z1);

        return;

     label5:
        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>(null);

        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r4.<com.android.internal.widget.ActionBarView: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>($r3);

        goto label1;

     label6:
        z2 = 0;

        goto label2;

     label7:
        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r6.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

        goto label3;

     label8:
        z1 = 0;

        goto label4;
    }

    private void showForActionMode()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;
        com.android.internal.widget.ActionBarOverlayLayout $r1, $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mShowingForMode>;

        if $z0 != 0 goto label2;

        r0.<com.android.internal.app.ActionBarImpl: boolean mShowingForMode> = 1;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(1);

     label1:
        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void updateVisibility(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        $z3 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenByApp>;

        $z2 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem>;

        $z1 = r0.<com.android.internal.app.ActionBarImpl: boolean mShowingForMode>;

        $z4 = staticinvoke <com.android.internal.app.ActionBarImpl: boolean checkShowingFlags(boolean,boolean,boolean)>($z3, $z2, $z1);

        if $z4 == 0 goto label2;

        $z6 = r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing>;

        if $z6 != 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing> = 1;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void doShow(boolean)>(z0);

     label1:
        return;

     label2:
        $z5 = r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing>;

        if $z5 == 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing> = 0;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void doHide(boolean)>(z0);

        return;
    }

    public void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$OnMenuVisibilityListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$OnMenuVisibilityListener;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void addTab(android.app.ActionBar$Tab,boolean)>(r1, $z0);

        return;
    }

    public void addTab(android.app.ActionBar$Tab, int)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        int i0;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void addTab(android.app.ActionBar$Tab,int,boolean)>(r1, i0, $z0);

        return;
    }

    public void addTab(android.app.ActionBar$Tab, int, boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        int i0;
        boolean z0;
        com.android.internal.widget.ScrollingTabContainerView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void ensureTabsExist()>();

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar$Tab,int,boolean)>(r1, i0, z0);

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void configureTab(android.app.ActionBar$Tab,int)>(r1, i0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>(r1);

     label1:
        return;
    }

    public void addTab(android.app.ActionBar$Tab, boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        boolean z0;
        com.android.internal.widget.ScrollingTabContainerView $r2;
        java.util.ArrayList $r3;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void ensureTabsExist()>();

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar$Tab,boolean)>(r1, z0);

        $r3 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void configureTab(android.app.ActionBar$Tab,int)>(r1, $i0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>(r1);

     label1:
        return;
    }

    void animateToMode(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, $z1, $z2;
        byte b0, b1, b2;
        com.android.internal.widget.ActionBarView r1, $r5, $r6;
        com.android.internal.widget.ActionBarContextView r2;
        com.android.internal.widget.ScrollingTabContainerView r3, $r4;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        b0 = 8;

        if z0 == 0 goto label6;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void showForActionMode()>();

     label1:
        r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        if z0 == 0 goto label7;

        b1 = 8;

     label2:
        virtualinvoke r1.<com.android.internal.widget.ActionBarView: void animateToVisibility(int)>(b1);

        r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        if z0 == 0 goto label8;

        b2 = 0;

     label3:
        virtualinvoke r2.<com.android.internal.widget.ActionBarContextView: void animateToVisibility(int)>(b2);

        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r4 == null goto label5;

        $r5 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z1 = virtualinvoke $r5.<com.android.internal.widget.ActionBarView: boolean hasEmbeddedTabs()>();

        if $z1 != 0 goto label5;

        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z2 = virtualinvoke $r6.<com.android.internal.widget.ActionBarView: boolean isCollapsed()>();

        if $z2 == 0 goto label5;

        r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if z0 == 0 goto label9;

     label4:
        virtualinvoke r3.<com.android.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)>(b0);

     label5:
        return;

     label6:
        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void hideForActionMode()>();

        goto label1;

     label7:
        b1 = 0;

        goto label2;

     label8:
        b2 = 8;

        goto label3;

     label9:
        b0 = 0;

        goto label4;
    }

    void completeDeferredDestroyActionMode()
    {
        com.android.internal.app.ActionBarImpl r0;
        android.view.ActionMode$Callback $r1, $r3;
        android.view.ActionMode $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: android.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: android.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: android.view.ActionMode mDeferredDestroyActionMode>;

        interfaceinvoke $r3.<android.view.ActionMode$Callback: void onDestroyActionMode(android.view.ActionMode)>($r2);

        r0.<com.android.internal.app.ActionBarImpl: android.view.ActionMode mDeferredDestroyActionMode> = null;

        r0.<com.android.internal.app.ActionBarImpl: android.view.ActionMode$Callback mDeferredModeDestroyCallback> = null;

     label1:
        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, $z1;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.app.ActionBar$OnMenuVisibilityListener $r4;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.app.ActionBarImpl: boolean mLastMenuVisibility>;

        if z0 != $z1 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.internal.app.ActionBarImpl: boolean mLastMenuVisibility> = z0;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mMenuVisibilityListeners>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mMenuVisibilityListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.app.ActionBar$OnMenuVisibilityListener) $r3;

        interfaceinvoke $r4.<android.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>(z0);

        i1 = i1 + 1;

        goto label3;
    }

    public void doHide(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, $z1, $z2;
        android.animation.AnimatorSet r1, $r11;
        float f0, $f1, $f2;
        int[] r2, $r35;
        android.animation.ObjectAnimator r3, $r28, $r30;
        android.animation.AnimatorSet$Builder r4;
        com.android.internal.widget.ActionBarContainer r5, $r10, $r12, $r13, $r15, $r19, $r22, $r24, $r25, $r34;
        android.util.Property r6, $r16, $r32;
        float[] r7, $r14, $r27;
        android.animation.Animator $r8, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.animation.Animator$AnimatorListener $r9, $r23;
        android.animation.ValueAnimator$AnimatorUpdateListener $r17;
        android.content.Context $r18;
        android.view.animation.Interpolator $r21;
        android.view.View $r26, $r33;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        $r8 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim>;

        if $r8 == null goto label1;

        $r36 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim>;

        virtualinvoke $r36.<android.animation.Animator: void end()>();

     label1:
        $i0 = r0.<com.android.internal.app.ActionBarImpl: int mCurWindowVisibility>;

        if $i0 != 0 goto label6;

        $z1 = r0.<com.android.internal.app.ActionBarImpl: boolean mShowHideAnimationEnabled>;

        if $z1 != 0 goto label2;

        if z0 == 0 goto label6;

     label2:
        $r10 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r10.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r12 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r12.<com.android.internal.widget.ActionBarContainer: void setTransitioning(boolean)>(1);

        $r11 = new android.animation.AnimatorSet;

        specialinvoke $r11.<android.animation.AnimatorSet: void <init>()>();

        r1 = $r11;

        $r13 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        $i1 = virtualinvoke $r13.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $i2 = neg $i1;

        f0 = (float) $i2;

        if z0 == 0 goto label3;

        $r35 = newarray (int)[2];

        $r35[0] = 0;

        $r35[1] = 0;

        r2 = $r35;

        $r34 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r34.<com.android.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>(r2);

        $i5 = r2[1];

        $f2 = (float) $i5;

        f0 = f0 - $f2;

     label3:
        $r15 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        $r16 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r14 = newarray (float)[1];

        $r14[0] = f0;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r15, $r16, $r14);

        $r17 = r0.<com.android.internal.app.ActionBarImpl: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        virtualinvoke r3.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r17);

        r4 = virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r3);

        $z2 = r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations>;

        if $z2 == 0 goto label4;

        $r26 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        if $r26 == null goto label4;

        $r33 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        $r32 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r27 = newarray (float)[2];

        $r27[0] = 0.0F;

        $r27[1] = f0;

        $r30 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r33, $r32, $r27);

        virtualinvoke r4.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r30);

     label4:
        $r19 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        if $r19 == null goto label5;

        $r24 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        $i3 = virtualinvoke $r24.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i3 != 0 goto label5;

        $r22 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r22.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        r5 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        r6 = <android.view.View: android.util.Property TRANSLATION_Y>;

        r7 = newarray (float)[1];

        $r25 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        $i4 = virtualinvoke $r25.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $f1 = (float) $i4;

        r7[0] = $f1;

        $r28 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r5, r6, r7);

        virtualinvoke r4.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r28);

     label5:
        $r18 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $r21 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r18, 17563650);

        virtualinvoke r1.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>($r21);

        virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(250L);

        $r23 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mHideListener>;

        virtualinvoke r1.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r23);

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim> = r1;

        virtualinvoke r1.<android.animation.AnimatorSet: void start()>();

        return;

     label6:
        $r9 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mHideListener>;

        interfaceinvoke $r9.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>(null);

        return;
    }

    public void doShow(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, $z1, $z2, $z3;
        float f0, $f1, $f2;
        int[] r1, $r42;
        android.animation.AnimatorSet r2, $r20;
        android.animation.ObjectAnimator r3, $r34, $r44;
        android.animation.AnimatorSet$Builder r4;
        android.animation.Animator $r5, $r46;
        com.android.internal.widget.ActionBarContainer $r6, $r7, $r8, $r9, $r13, $r14, $r16, $r18, $r19, $r21, $r25, $r28, $r29, $r32, $r33, $r35, $r47;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.animation.Animator$AnimatorListener $r10, $r31;
        com.android.internal.widget.ActionBarOverlayLayout $r11, $r12;
        android.view.View $r15, $r17, $r40, $r45;
        android.util.Property $r22, $r36, $r38;
        float[] $r23, $r37, $r39;
        android.animation.ValueAnimator$AnimatorUpdateListener $r24;
        android.content.Context $r26;
        android.view.animation.Interpolator $r27;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        $r5 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim>;

        if $r5 == null goto label01;

        $r46 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim>;

        virtualinvoke $r46.<android.animation.Animator: void end()>();

     label01:
        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $i0 = r0.<com.android.internal.app.ActionBarImpl: int mCurWindowVisibility>;

        if $i0 != 0 goto label08;

        $z2 = r0.<com.android.internal.app.ActionBarImpl: boolean mShowHideAnimationEnabled>;

        if $z2 != 0 goto label02;

        if z0 == 0 goto label08;

     label02:
        $r19 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r19.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $r18 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        $i3 = virtualinvoke $r18.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $i2 = neg $i3;

        f0 = (float) $i2;

        if z0 == 0 goto label03;

        $r42 = newarray (int)[2];

        $r42[0] = 0;

        $r42[1] = 0;

        r1 = $r42;

        $r47 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r47.<com.android.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>(r1);

        $i6 = r1[1];

        $f2 = (float) $i6;

        f0 = f0 - $f2;

     label03:
        $r21 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r21.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(f0);

        $r20 = new android.animation.AnimatorSet;

        specialinvoke $r20.<android.animation.AnimatorSet: void <init>()>();

        r2 = $r20;

        $r25 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        $r22 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r23 = newarray (float)[1];

        $r23[0] = 0.0F;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r25, $r22, $r23);

        $r24 = r0.<com.android.internal.app.ActionBarImpl: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        virtualinvoke r3.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r24);

        r4 = virtualinvoke r2.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r3);

        $z3 = r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations>;

        if $z3 == 0 goto label04;

        $r40 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        if $r40 == null goto label04;

        $r45 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        $r38 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r39 = newarray (float)[2];

        $r39[0] = f0;

        $r39[1] = 0.0F;

        $r44 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r45, $r38, $r39);

        virtualinvoke r4.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r44);

     label04:
        $r28 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        if $r28 == null goto label05;

        $i4 = r0.<com.android.internal.app.ActionBarImpl: int mContextDisplayMode>;

        if $i4 != 1 goto label05;

        $r33 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        $r29 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        $i5 = virtualinvoke $r29.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        $f1 = (float) $i5;

        virtualinvoke $r33.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>($f1);

        $r32 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r32.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $r35 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        $r36 = <android.view.View: android.util.Property TRANSLATION_Y>;

        $r37 = newarray (float)[1];

        $r37[0] = 0.0F;

        $r34 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>($r35, $r36, $r37);

        virtualinvoke r4.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r34);

     label05:
        $r26 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $r27 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r26, 17563651);

        virtualinvoke r2.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>($r27);

        virtualinvoke r2.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(250L);

        $r31 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mShowListener>;

        virtualinvoke r2.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r31);

        r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim> = r2;

        virtualinvoke r2.<android.animation.AnimatorSet: void start()>();

     label06:
        $r11 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r11 == null goto label07;

        $r12 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r12.<com.android.internal.widget.ActionBarOverlayLayout: void requestFitSystemWindows()>();

     label07:
        return;

     label08:
        $r7 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r7.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r8 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r8.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $z1 = r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations>;

        if $z1 == 0 goto label09;

        $r15 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        if $r15 == null goto label09;

        $r17 = r0.<com.android.internal.app.ActionBarImpl: android.view.View mContentView>;

        virtualinvoke $r17.<android.view.View: void setTranslationY(float)>(0.0F);

     label09:
        $r9 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        if $r9 == null goto label10;

        $i1 = r0.<com.android.internal.app.ActionBarImpl: int mContextDisplayMode>;

        if $i1 != 1 goto label10;

        $r14 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r14.<com.android.internal.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r13 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r13.<com.android.internal.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $r16 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r16.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

     label10:
        $r10 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator$AnimatorListener mShowListener>;

        interfaceinvoke $r10.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>(null);

        goto label06;
    }

    public void enableContentAnimations(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.ActionBarImpl: boolean mContentAnimations> = z0;

        return;
    }

    public android.view.View getCustomView()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $r2 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: android.view.View getCustomNavigationView()>();

        return $r2;
    }

    public int getDisplayOptions()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: int getDisplayOptions()>();

        return $i0;
    }

    public int getHeight()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarContainer $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarContainer: int getHeight()>();

        return $i0;
    }

    public int getNavigationItemCount()
    {
        com.android.internal.app.ActionBarImpl r0;
        android.widget.SpinnerAdapter r1;
        com.android.internal.widget.ActionBarView $r2, $r4;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i0 = virtualinvoke $r2.<com.android.internal.widget.ActionBarView: int getNavigationMode()>();

        tableswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r3 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        return $i1;

     label3:
        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        r1 = virtualinvoke $r4.<com.android.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()>();

        if r1 == null goto label1;

        $i2 = interfaceinvoke r1.<android.widget.SpinnerAdapter: int getCount()>();

        return $i2;
    }

    public int getNavigationMode()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: int getNavigationMode()>();

        return $i0;
    }

    public int getSelectedNavigationIndex()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1, $r4;
        int $i0, $i1, $i2;
        com.android.internal.app.ActionBarImpl$TabImpl $r2, $r3;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: int getNavigationMode()>();

        tableswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        $i1 = virtualinvoke $r3.<com.android.internal.app.ActionBarImpl$TabImpl: int getPosition()>();

        return $i1;

     label3:
        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i2 = virtualinvoke $r4.<com.android.internal.widget.ActionBarView: int getDropdownSelectedPosition()>();

        return $i2;
    }

    public android.app.ActionBar$Tab getSelectedTab()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.app.ActionBarImpl$TabImpl $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        return $r1;
    }

    public java.lang.CharSequence getSubtitle()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $r2 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>();

        return $r2;
    }

    public android.app.ActionBar$Tab getTabAt(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.app.ActionBar$Tab $r3;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (android.app.ActionBar$Tab) $r2;

        return $r3;
    }

    public int getTabCount()
    {
        com.android.internal.app.ActionBarImpl r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public android.content.Context getThemedContext()
    {
        com.android.internal.app.ActionBarImpl r0;
        android.util.TypedValue r1, $r4;
        int i0, $i1;
        android.content.Context $r2, $r3, $r5, $r7, $r8, $r10;
        android.content.res.Resources$Theme $r6;
        android.view.ContextThemeWrapper $r9;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mThemedContext>;

        if $r2 != null goto label1;

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r6.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843671, r1, 1);

        i0 = r1.<android.util.TypedValue: int resourceId>;

        if i0 == 0 goto label2;

        $r8 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $i1 = virtualinvoke $r8.<android.content.Context: int getThemeResId()>();

        if $i1 == i0 goto label2;

        $r9 = new android.view.ContextThemeWrapper;

        $r10 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        specialinvoke $r9.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r10, i0);

        r0.<com.android.internal.app.ActionBarImpl: android.content.Context mThemedContext> = $r9;

     label1:
        $r3 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mThemedContext>;

        return $r3;

     label2:
        $r7 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        r0.<com.android.internal.app.ActionBarImpl: android.content.Context mThemedContext> = $r7;

        goto label1;
    }

    public java.lang.CharSequence getTitle()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $r2 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>();

        return $r2;
    }

    public boolean hasIcon()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: boolean hasIcon()>();

        return $z0;
    }

    public boolean hasLogo()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: boolean hasLogo()>();

        return $z0;
    }

    public boolean hasNonEmbeddedTabs()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs>;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<com.android.internal.app.ActionBarImpl: int getNavigationMode()>();

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void hide()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenByApp>;

        if $z0 != 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenByApp> = 1;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void hideForSystem()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem>;

        if $z0 != 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem> = 1;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public boolean isShowing()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mNowShowing>;

        return $z0;
    }

    public boolean isSystemShowing()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.widget.ActionBarView $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $z0 = virtualinvoke $r2.<com.android.internal.widget.ActionBarView: boolean isTitleTruncated()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.app.ActionBar$Tab newTab()
    {
        com.android.internal.app.ActionBarImpl r0;
        com.android.internal.app.ActionBarImpl$TabImpl $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $r1 = new com.android.internal.app.ActionBarImpl$TabImpl;

        specialinvoke $r1.<com.android.internal.app.ActionBarImpl$TabImpl: void <init>(com.android.internal.app.ActionBarImpl)>(r0);

        return $r1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.content.res.Configuration r1;
        android.content.Context $r2;
        com.android.internal.view.ActionBarPolicy $r3;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $r3 = staticinvoke <com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>($z0);

        return;
    }

    public void removeAllTabs()
    {
        com.android.internal.app.ActionBarImpl r0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void cleanupTabs()>();

        return;
    }

    public void removeOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$OnMenuVisibilityListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$OnMenuVisibilityListener;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removeTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        int $i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $i0 = virtualinvoke r1.<android.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void removeTabAt(int)>($i0);

        return;
    }

    public void removeTabAt(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0, i1, i2, i3, $i4, $i5;
        com.android.internal.app.ActionBarImpl$TabImpl r1, r2, $r4, $r14, $r15;
        com.android.internal.widget.ScrollingTabContainerView $r3, $r5;
        java.util.ArrayList $r6, $r8, $r9, $r10, $r13;
        java.lang.Object $r7, $r11, $r12;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r4 == null goto label6;

        $r14 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        i1 = virtualinvoke $r14.<com.android.internal.app.ActionBarImpl$TabImpl: int getPosition()>();

     label3:
        $r5 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r5.<com.android.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>(i0);

        $r6 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r1 = (com.android.internal.app.ActionBarImpl$TabImpl) $r7;

        if r1 == null goto label4;

        virtualinvoke r1.<com.android.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>(-1);

     label4:
        $r8 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i3 = i0;

     label5:
        if i3 >= i2 goto label7;

        $r13 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $r12 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r15 = (com.android.internal.app.ActionBarImpl$TabImpl) $r12;

        virtualinvoke $r15.<com.android.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>(i3);

        i3 = i3 + 1;

        goto label5;

     label6:
        i1 = r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition>;

        goto label3;

     label7:
        if i1 != i0 goto label1;

        $r9 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r9.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label9;

        r2 = null;

     label8:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>(r2);

        return;

     label9:
        $r10 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $i4 = i0 - 1;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        r2 = (com.android.internal.app.ActionBarImpl$TabImpl) $r11;

        goto label8;
    }

    public void selectTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.app.ActionBar$Tab r1;
        int i0, $i1, $i3;
        android.app.FragmentTransaction r2, $r6;
        com.android.internal.widget.ScrollingTabContainerView r3, $r20;
        android.app.Activity $r4;
        android.app.FragmentManager $r5;
        com.android.internal.app.ActionBarImpl$TabImpl $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r21;
        boolean $z0;
        android.app.ActionBar$TabListener $r11, $r16, $r18;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 = -1;

        $i1 = virtualinvoke r0.<com.android.internal.app.ActionBarImpl: int getNavigationMode()>();

        if $i1 == 2 goto label3;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<android.app.ActionBar$Tab: int getPosition()>();

     label1:
        r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition> = i0;

     label2:
        return;

     label3:
        $r4 = r0.<com.android.internal.app.ActionBarImpl: android.app.Activity mActivity>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.app.FragmentManager getFragmentManager()>();

        $r6 = virtualinvoke $r5.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        r2 = virtualinvoke $r6.<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>();

        $r7 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r7 != r1 goto label5;

        $r17 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r17 == null goto label4;

        $r19 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        $r18 = virtualinvoke $r19.<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        $r21 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        interfaceinvoke $r18.<android.app.ActionBar$TabListener: void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>($r21, r2);

        $r20 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        $i3 = virtualinvoke r1.<android.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke $r20.<com.android.internal.widget.ScrollingTabContainerView: void animateToTab(int)>($i3);

     label4:
        $z0 = virtualinvoke r2.<android.app.FragmentTransaction: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        virtualinvoke r2.<android.app.FragmentTransaction: int commit()>();

        return;

     label5:
        r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        if r1 == null goto label6;

        i0 = virtualinvoke r1.<android.app.ActionBar$Tab: int getPosition()>();

     label6:
        virtualinvoke r3.<com.android.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>(i0);

        $r8 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r8 == null goto label7;

        $r13 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        $r16 = virtualinvoke $r13.<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        $r15 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        interfaceinvoke $r16.<android.app.ActionBar$TabListener: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>($r15, r2);

     label7:
        $r9 = (com.android.internal.app.ActionBarImpl$TabImpl) r1;

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab> = $r9;

        $r10 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        if $r10 == null goto label4;

        $r12 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        $r11 = virtualinvoke $r12.<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()>();

        $r14 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$TabImpl mSelectedTab>;

        interfaceinvoke $r11.<android.app.ActionBar$TabListener: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>($r14, r2);

        goto label4;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarContainer $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setCustomView(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        android.content.Context $r1;
        android.view.LayoutInflater $r2;
        com.android.internal.widget.ActionBarView $r3;
        android.view.View $r4;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.app.ActionBarImpl: android.content.Context getThemedContext()>();

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $r4 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, $r3, 0);

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View)>($r4);

        return;
    }

    public void setCustomView(android.view.View)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.view.View r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>(r1);

        return;
    }

    public void setCustomView(android.view.View, android.app.ActionBar$LayoutParams)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.view.View r1;
        android.app.ActionBar$LayoutParams r2;
        com.android.internal.widget.ActionBarView $r3;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.app.ActionBar$LayoutParams;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>(r1);

        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.app.ActionBarImpl: boolean mDisplayHomeAsUpSet>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setDisplayHomeAsUpEnabled(boolean)>(z0);

     label1:
        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 4;

     label1:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>(b0, 4);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setDisplayOptions(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0, $i1;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarView: void setDisplayOptions(int)>(i0);

        return;
    }

    public void setDisplayOptions(int, int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.internal.widget.ActionBarView $r1, $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        i2 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: int getDisplayOptions()>();

        $i3 = i1 & 4;

        if $i3 == 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i6 = i0 & i1;

        $i4 = i1 ^ -1;

        $i5 = i2 & $i4;

        $i7 = $i6 | $i5;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setDisplayOptions(int)>($i7);

        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 16;

     label1:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>(b0, 16);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 2;

     label1:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>(b0, 2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 8;

     label1:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>(b0, 8);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>(b0, 1);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setHomeActionContentDescription(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarView: void setHomeActionContentDescription(int)>(i0);

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        com.android.internal.app.ActionBarImpl r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setHomeActionContentDescription(java.lang.CharSequence)>(r1);

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarView: void setHomeAsUpIndicator(int)>(i0);

        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>(z0);

        return;
    }

    public void setIcon(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarView: void setIcon(int)>(i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.ActionBar$OnNavigationListener)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.widget.SpinnerAdapter r1;
        android.app.ActionBar$OnNavigationListener r2;
        com.android.internal.widget.ActionBarView $r3, $r4;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.widget.SpinnerAdapter;

        r2 := @parameter1: android.app.ActionBar$OnNavigationListener;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarView: void setDropdownAdapter(android.widget.SpinnerAdapter)>(r1);

        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r4.<com.android.internal.widget.ActionBarView: void setCallback(android.app.ActionBar$OnNavigationListener)>(r2);

        return;
    }

    public void setLogo(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        com.android.internal.widget.ActionBarView $r1;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r1.<com.android.internal.widget.ActionBarView: void setLogo(int)>(i0);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setNavigationMode(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.internal.widget.ActionBarView r1, $r2, $r3;
        boolean z0, z1, $z2;
        com.android.internal.widget.ScrollingTabContainerView $r4, $r7;
        com.android.internal.widget.ActionBarOverlayLayout $r5, $r6;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        i1 = virtualinvoke $r2.<com.android.internal.widget.ActionBarView: int getNavigationMode()>();

        tableswitch(i1)
        {
            case 2: goto label5;
            default: goto label1;
        };

     label1:
        if i1 == i0 goto label2;

        $z2 = r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs>;

        if $z2 != 0 goto label2;

        $r5 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r5 == null goto label2;

        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarOverlayLayout: void requestFitSystemWindows()>();

     label2:
        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarView: void setNavigationMode(int)>(i0);

        tableswitch(i0)
        {
            case 2: goto label6;
            default: goto label3;
        };

     label3:
        r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        z0 = 0;

        if i0 != 2 goto label4;

        z1 = r0.<com.android.internal.app.ActionBarImpl: boolean mHasEmbeddedTabs>;

        z0 = 0;

        if z1 != 0 goto label4;

        z0 = 1;

     label4:
        virtualinvoke r1.<com.android.internal.widget.ActionBarView: void setCollapsable(boolean)>(z0);

        return;

     label5:
        $i4 = virtualinvoke r0.<com.android.internal.app.ActionBarImpl: int getSelectedNavigationIndex()>();

        r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition> = $i4;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>(null);

        $r7 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r7.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

        goto label1;

     label6:
        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void ensureTabsExist()>();

        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r4.<com.android.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $i2 = r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition>;

        if $i2 == -1 goto label3;

        $i3 = r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition>;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)>($i3);

        r0.<com.android.internal.app.ActionBarImpl: int mSavedTabPosition> = -1;

        goto label3;
    }

    public void setSelectedNavigationItem(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0, $i1;
        com.android.internal.widget.ActionBarView $r1, $r6;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.app.ActionBar$Tab $r5;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        $i1 = virtualinvoke $r1.<com.android.internal.widget.ActionBarView: int getNavigationMode()>();

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $r2;

     label2:
        $r3 = r0.<com.android.internal.app.ActionBarImpl: java.util.ArrayList mTabs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (android.app.ActionBar$Tab) $r4;

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>($r5);

        return;

     label3:
        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>(i0);

        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean z0;
        android.animation.Animator $r1, $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.app.ActionBarImpl: boolean mShowHideAnimationEnabled> = z0;

        if z0 != 0 goto label1;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: android.animation.Animator mCurrentShowAnim>;

        virtualinvoke $r2.<android.animation.Animator: void end()>();

     label1:
        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarContainer $r2, $r3;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r3.<com.android.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.ActionBarContainer $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setSubtitle(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(i0);

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setSubtitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        com.android.internal.app.ActionBarImpl r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setSubtitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setTitle(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ActionBarImpl: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(i0);

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.app.ActionBarImpl r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.ActionBarView $r2;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView mActionView>;

        virtualinvoke $r2.<com.android.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setWindowVisibility(int)
    {
        com.android.internal.app.ActionBarImpl r0;
        int i0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        i0 := @parameter0: int;

        r0.<com.android.internal.app.ActionBarImpl: int mCurWindowVisibility> = i0;

        return;
    }

    public void show()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenByApp>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenByApp> = 0;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void showForSystem()
    {
        com.android.internal.app.ActionBarImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        $z0 = r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.app.ActionBarImpl: boolean mHiddenBySystem> = 0;

        specialinvoke r0.<com.android.internal.app.ActionBarImpl: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        com.android.internal.app.ActionBarImpl r0;
        android.view.ActionMode$Callback r1;
        com.android.internal.app.ActionBarImpl$ActionModeImpl r2, $r3, $r5, $r13;
        com.android.internal.widget.ActionBarContextView $r4, $r6, $r8;
        boolean $z0;
        com.android.internal.widget.ActionBarContainer $r7, $r9, $r10;
        int $i0, $i1;
        com.android.internal.widget.ActionBarOverlayLayout $r11, $r12;

        r0 := @this: com.android.internal.app.ActionBarImpl;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r3 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$ActionModeImpl mActionMode>;

        if $r3 == null goto label1;

        $r13 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$ActionModeImpl mActionMode>;

        virtualinvoke $r13.<com.android.internal.app.ActionBarImpl$ActionModeImpl: void finish()>();

     label1:
        $r4 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<com.android.internal.widget.ActionBarContextView: void killMode()>();

        $r5 = new com.android.internal.app.ActionBarImpl$ActionModeImpl;

        specialinvoke $r5.<com.android.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.android.internal.app.ActionBarImpl,android.view.ActionMode$Callback)>(r0, r1);

        r2 = $r5;

        $z0 = virtualinvoke r2.<com.android.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()>();

        if $z0 == 0 goto label3;

        virtualinvoke r2.<com.android.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>();

        $r6 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r6.<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)>(r2);

        virtualinvoke r0.<com.android.internal.app.ActionBarImpl: void animateToMode(boolean)>(1);

        $r7 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        if $r7 == null goto label2;

        $i0 = r0.<com.android.internal.app.ActionBarImpl: int mContextDisplayMode>;

        if $i0 != 1 goto label2;

        $r9 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        $i1 = virtualinvoke $r9.<com.android.internal.widget.ActionBarContainer: int getVisibility()>();

        if $i1 == 0 goto label2;

        $r10 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer mSplitView>;

        virtualinvoke $r10.<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

        $r11 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r11 == null goto label2;

        $r12 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r12.<com.android.internal.widget.ActionBarOverlayLayout: void requestFitSystemWindows()>();

     label2:
        $r8 = r0.<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView mContextView>;

        virtualinvoke $r8.<com.android.internal.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        r0.<com.android.internal.app.ActionBarImpl: com.android.internal.app.ActionBarImpl$ActionModeImpl mActionMode> = r2;

        return r2;

     label3:
        return null;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.ActionBarImpl: java.lang.String TAG> = "ActionBarImpl";

        <com.android.internal.app.ActionBarImpl: int INVALID_POSITION> = -1;

        <com.android.internal.app.ActionBarImpl: int CONTEXT_DISPLAY_SPLIT> = 1;

        <com.android.internal.app.ActionBarImpl: int CONTEXT_DISPLAY_NORMAL> = 0;

        return;
    }
}
