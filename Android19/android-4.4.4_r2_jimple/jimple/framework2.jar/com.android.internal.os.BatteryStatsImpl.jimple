public final class com.android.internal.os.BatteryStatsImpl extends android.os.BatteryStats
{
    private static final java.lang.String BATCHED_WAKELOCK_NAME;
    private static final int BATTERY_PLUGGED_NONE;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    private static final boolean DEBUG_HISTORY;
    static final long DELAY_UPDATE_WAKELOCKS;
    private static final int MAGIC;
    static final int MAX_HISTORY_BUFFER;
    private static final int MAX_HISTORY_ITEMS;
    static final int MAX_MAX_HISTORY_BUFFER;
    private static final int MAX_MAX_HISTORY_ITEMS;
    private static final int MAX_WAKELOCKS_PER_UID;
    static final int MSG_REPORT_POWER_CHANGE;
    static final int MSG_UPDATE_WAKELOCKS;
    private static final int[] PROC_WAKELOCKS_FORMAT;
    private static final java.lang.String TAG;
    private static final boolean USE_OLD_HISTORY;
    private static final int VERSION;
    private static final int[] WAKEUP_SOURCES_FORMAT;
    private static int sKernelWakelockUpdateVersion;
    private static int sNumSpeedSteps;
    boolean mAudioOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer;
    long mBatteryLastRealtime;
    long mBatteryLastUptime;
    long mBatteryRealtime;
    long mBatteryUptime;
    boolean mBluetoothOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer;
    private int mBluetoothPingCount;
    private int mBluetoothPingStart;
    android.bluetooth.BluetoothHeadset mBtHeadset;
    private com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback;
    int mChangedBufferStates;
    int mChangedStates;
    int mDischargeAmountScreenOff;
    int mDischargeAmountScreenOffSinceCharge;
    int mDischargeAmountScreenOn;
    int mDischargeAmountScreenOnSinceCharge;
    int mDischargeCurrentLevel;
    int mDischargeScreenOffUnplugLevel;
    int mDischargeScreenOnUnplugLevel;
    int mDischargeStartLevel;
    int mDischargeUnplugLevel;
    private final com.android.internal.util.JournaledFile mFile;
    final java.util.ArrayList mFullTimers;
    final java.util.ArrayList mFullWifiLockTimers;
    boolean mGlobalWifiRunning;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer;
    int mGpsNesting;
    private final com.android.internal.os.BatteryStatsImpl$MyHandler mHandler;
    boolean mHaveBatteryLevel;
    int mHighDischargeAmountSinceCharge;
    android.os.BatteryStats$HistoryItem mHistory;
    long mHistoryBaseTime;
    final android.os.Parcel mHistoryBuffer;
    int mHistoryBufferLastPos;
    android.os.BatteryStats$HistoryItem mHistoryCache;
    final android.os.BatteryStats$HistoryItem mHistoryCur;
    android.os.BatteryStats$HistoryItem mHistoryEnd;
    private android.os.BatteryStats$HistoryItem mHistoryIterator;
    android.os.BatteryStats$HistoryItem mHistoryLastEnd;
    final android.os.BatteryStats$HistoryItem mHistoryLastLastWritten;
    final android.os.BatteryStats$HistoryItem mHistoryLastWritten;
    boolean mHistoryOverflow;
    final android.os.BatteryStats$HistoryItem mHistoryReadTmp;
    com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter;
    private boolean mIteratingHistory;
    private final java.util.HashMap mKernelWakelockStats;
    long mLastHistoryTime;
    final java.util.ArrayList mLastPartialTimers;
    long mLastRealtime;
    private android.net.NetworkStats mLastSnapshot;
    long mLastUptime;
    long mLastWriteTime;
    int mLowDischargeAmountSinceCharge;
    private java.util.HashSet mMobileIfaces;
    final com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters;
    private final com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory;
    int mNumHistoryItems;
    boolean mOnBattery;
    boolean mOnBatteryInternal;
    final java.util.ArrayList mPartialTimers;
    android.os.Parcel mPendingWrite;
    int mPhoneDataConnectionType;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer;
    boolean mPhoneOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer;
    private int mPhoneServiceState;
    private int mPhoneServiceStateRaw;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer;
    int mPhoneSignalStrengthBin;
    int mPhoneSignalStrengthBinRaw;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer;
    private int mPhoneSimStateRaw;
    private final java.util.Map mProcWakelockFileStats;
    private final long[] mProcWakelocksData;
    private final java.lang.String[] mProcWakelocksName;
    private long mRadioDataStart;
    private long mRadioDataUptime;
    private boolean mReadOverflow;
    long mRealtime;
    long mRealtimeStart;
    boolean mRecordingHistory;
    int mScreenBrightnessBin;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer;
    boolean mScreenOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer;
    int mSensorNesting;
    final android.util.SparseArray mSensorTimers;
    boolean mShuttingDown;
    int mStartCount;
    long mTrackBatteryPastRealtime;
    long mTrackBatteryPastUptime;
    long mTrackBatteryRealtimeStart;
    long mTrackBatteryUptimeStart;
    private java.util.HashMap mUidCache;
    final android.util.SparseArray mUidStats;
    final java.util.ArrayList mUnpluggables;
    long mUnpluggedBatteryRealtime;
    long mUnpluggedBatteryUptime;
    long mUptime;
    long mUptimeStart;
    boolean mVideoOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer;
    int mWakeLockNesting;
    final android.util.SparseArray mWifiBatchedScanTimers;
    int mWifiFullLockNesting;
    private java.util.HashSet mWifiIfaces;
    int mWifiMulticastNesting;
    final java.util.ArrayList mWifiMulticastTimers;
    boolean mWifiOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer;
    int mWifiOnUid;
    final java.util.ArrayList mWifiRunningTimers;
    int mWifiScanNesting;
    final java.util.ArrayList mWifiScanTimers;
    final java.util.ArrayList mWindowTimers;
    final java.util.concurrent.locks.ReentrantLock mWriteLock;

    static void <clinit>()
    {
        int[] $r0, $r1;
        com.android.internal.os.BatteryStatsImpl$2 r3;
        android.os.Parcelable$Creator r4;

        <com.android.internal.os.BatteryStatsImpl: int VERSION> = 67;

        <com.android.internal.os.BatteryStatsImpl: boolean USE_OLD_HISTORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: java.lang.String TAG> = "BatteryStatsImpl";

        <com.android.internal.os.BatteryStatsImpl: int MSG_UPDATE_WAKELOCKS> = 1;

        <com.android.internal.os.BatteryStatsImpl: int MSG_REPORT_POWER_CHANGE> = 2;

        <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID> = 50;

        <com.android.internal.os.BatteryStatsImpl: int MAX_MAX_HISTORY_ITEMS> = 3000;

        <com.android.internal.os.BatteryStatsImpl: int MAX_MAX_HISTORY_BUFFER> = 147456;

        <com.android.internal.os.BatteryStatsImpl: int MAX_HISTORY_ITEMS> = 2000;

        <com.android.internal.os.BatteryStatsImpl: int MAX_HISTORY_BUFFER> = 131072;

        <com.android.internal.os.BatteryStatsImpl: int MAGIC> = -1166707595;

        <com.android.internal.os.BatteryStatsImpl: long DELAY_UPDATE_WAKELOCKS> = 5000L;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG_HISTORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG> = 0;

        <com.android.internal.os.BatteryStatsImpl: int BATTERY_PLUGGED_NONE> = 0;

        <com.android.internal.os.BatteryStatsImpl: java.lang.String BATCHED_WAKELOCK_NAME> = "*overflow*";

        <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion> = 0;

        $r0 = newarray (int)[6];

        $r0[0] = 5129;

        $r0[1] = 8201;

        $r0[2] = 9;

        $r0[3] = 9;

        $r0[4] = 9;

        $r0[5] = 8201;

        <com.android.internal.os.BatteryStatsImpl: int[] PROC_WAKELOCKS_FORMAT> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = 4105;

        $r1[1] = 8457;

        $r1[2] = 265;

        $r1[3] = 265;

        $r1[4] = 265;

        $r1[5] = 265;

        $r1[6] = 8457;

        <com.android.internal.os.BatteryStatsImpl: int[] WAKEUP_SOURCES_FORMAT> = $r1;

        r3 = new com.android.internal.os.BatteryStatsImpl$2;

        specialinvoke r3.<com.android.internal.os.BatteryStatsImpl$2: void <init>()>();

        r4 = (android.os.Parcelable$Creator) r3;

        <com.android.internal.os.BatteryStatsImpl: android.os.Parcelable$Creator CREATOR> = r4;

        return;
    }

    public void <init>()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseArray $r1, $r5, $r10;
        java.util.ArrayList $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12;
        android.os.Parcel $r13;
        android.os.BatteryStats$HistoryItem $r14, $r15, $r16, $r17;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r18, $r19, $r21;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r20;
        java.lang.String[] $r22;
        java.util.HashMap $r23, $r24, $r27;
        long[] $r25;
        com.android.internal.net.NetworkStatsFactory $r26;
        java.util.HashSet $r28, $r29;
        java.util.concurrent.locks.ReentrantLock $r30;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables> = $r12;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        $r13 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r13;

        $r14 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r14.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r14;

        $r15 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r15.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r15;

        $r17 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r17.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r17;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryTime> = 0L;

        $r16 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r16.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r16;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r19 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $r18 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r18;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r21 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[17];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r21;

        $r20 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters> = $r20;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r23;

        $r22 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName> = $r22;

        $r25 = newarray (long)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData> = $r25;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats> = $r24;

        $r27 = new java.util.HashMap;

        specialinvoke $r27.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mUidCache> = $r27;

        $r26 = new com.android.internal.net.NetworkStatsFactory;

        specialinvoke $r26.<com.android.internal.net.NetworkStatsFactory: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory> = $r26;

        $r29 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mMobileIfaces> = $r29;

        $r28 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mWifiIfaces> = $r28;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        $r30 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r30.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r30;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler> = null;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, $r14;
        android.util.SparseArray $r2, $r6, $r11;
        java.util.ArrayList $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13;
        android.os.BatteryStats$HistoryItem $r15, $r16, $r17, $r19;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r18, $r20, $r21;
        java.util.HashMap $r22, $r26, $r27;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r23;
        long[] $r24;
        java.lang.String[] $r25;
        java.util.HashSet $r28, $r31;
        com.android.internal.net.NetworkStatsFactory $r29;
        java.util.concurrent.locks.ReentrantLock $r30;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables> = $r13;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        $r14 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r14;

        $r15 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r15.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r15;

        $r17 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r17.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r17;

        $r16 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r16.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r16;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryTime> = 0L;

        $r19 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r19.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r18 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r18;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $r21 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r20 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[17];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r20;

        $r23 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters> = $r23;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r22;

        $r25 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName> = $r25;

        $r24 = newarray (long)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData> = $r24;

        $r27 = new java.util.HashMap;

        specialinvoke $r27.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats> = $r27;

        $r26 = new java.util.HashMap;

        specialinvoke $r26.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mUidCache> = $r26;

        $r29 = new com.android.internal.net.NetworkStatsFactory;

        specialinvoke $r29.<com.android.internal.net.NetworkStatsFactory: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory> = $r29;

        $r28 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mMobileIfaces> = $r28;

        $r31 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mWifiIfaces> = $r31;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        $r30 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r30.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r30;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler> = null;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1, $r36;
        int i0, i1, i2, i3, $i6, $i7, $i14, $i15, $i16;
        long l4, l5, $l8, $l9, $l10, $l11, $l12, $l13;
        android.util.SparseArray $r2, $r6, $r10;
        java.util.ArrayList $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r55, $r57, $r59, $r62, $r65, $r68;
        android.os.BatteryStats$HistoryItem $r14, $r16, $r17, $r19;
        android.os.Parcel $r15;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r18, $r20, $r21, $r64, $r67, $r69;
        java.util.HashMap $r22, $r24, $r25;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r23, $r60;
        java.lang.String[] $r26;
        long[] $r27;
        java.util.HashSet $r28, $r31;
        java.util.concurrent.locks.ReentrantLock $r29;
        com.android.internal.net.NetworkStatsFactory $r30;
        java.io.File $r32, $r35;
        java.lang.StringBuilder $r33, $r38, $r39;
        com.android.internal.util.JournaledFile $r34;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r37;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r41, $r43, $r47, $r49, $r51, $r53, $r54, $r56, $r61, $r63, $r66;
        com.android.internal.os.BatteryStatsImpl$Counter $r45;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r58;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r7;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r9;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r8;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r11;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r10;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r13;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables> = $r12;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        $r15 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r15;

        $r14 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r14.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r14;

        $r17 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r17.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r17;

        $r16 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r16.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r16;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryTime> = 0L;

        $r19 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r19.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r18 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r18;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $r21 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r20 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[17];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r20;

        $r23 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters> = $r23;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r22;

        $r26 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName> = $r26;

        $r27 = newarray (long)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData> = $r27;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats> = $r24;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mUidCache> = $r25;

        $r30 = new com.android.internal.net.NetworkStatsFactory;

        specialinvoke $r30.<com.android.internal.net.NetworkStatsFactory: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory> = $r30;

        $r31 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mMobileIfaces> = $r31;

        $r28 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mWifiIfaces> = $r28;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        $r29 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r29.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r29;

        $r34 = new com.android.internal.util.JournaledFile;

        $r35 = new java.io.File;

        specialinvoke $r35.<java.io.File: void <init>(java.lang.String)>(r1);

        $r32 = new java.io.File;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.File: void <init>(java.lang.String)>($r36);

        specialinvoke $r34.<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>($r35, $r32);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = $r34;

        $r37 = new com.android.internal.os.BatteryStatsImpl$MyHandler;

        specialinvoke $r37.<com.android.internal.os.BatteryStatsImpl$MyHandler: void <init>(com.android.internal.os.BatteryStatsImpl)>(r0);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler> = $r37;

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i6 = 1 + $i7;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i6;

        $r41 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r41.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -1, null, $r40);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer> = $r41;

        i0 = 0;

     label1:
        if i0 >= 5 goto label2;

        $r69 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r63 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i16 = -100 - i0;

        $r68 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r63.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, $i16, null, $r68);

        $r69[i0] = $r63;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r45 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r45.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList)>($r44);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter> = $r45;

        $r43 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r43.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -2, null, $r42);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer> = $r43;

        i1 = 0;

     label3:
        if i1 >= 5 goto label4;

        $r64 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r66 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i14 = -200 - i1;

        $r62 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r66.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, $i14, null, $r62);

        $r64[i1] = $r66;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r49 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r49.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -199, null, $r48);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer> = $r49;

        i2 = 0;

     label5:
        if i2 >= 17 goto label6;

        $r67 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r61 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i15 = -300 - i2;

        $r65 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r61.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, $i15, null, $r65);

        $r67[i2] = $r61;

        i2 = i2 + 1;

        goto label5;

     label6:
        i3 = 0;

     label7:
        if i3 >= 4 goto label8;

        $r60 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r58 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r58.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(java.util.ArrayList)>($r59);

        $r60[i3] = $r58;

        i3 = i3 + 1;

        goto label7;

     label8:
        $r47 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r47.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -3, null, $r46);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer> = $r47;

        $r53 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r53.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -4, null, $r52);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer> = $r53;

        $r51 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r51.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -5, null, $r50);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer> = $r51;

        $r54 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r54.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -6, null, $r55);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer> = $r54;

        $r56 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r56.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>(null, -7, null, $r57);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer> = $r56;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initTimes()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = 0L;

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = 1000L * $l8;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = l4;

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = l4;

        $l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l5 = 1000L * $l9;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = l5;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = l5;

        $l10 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l10);

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l11;

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l13 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l12);

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l13;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initDischarge()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        return;
    }

    static com.android.internal.os.BatteryStatsImpl$BatteryCallback access$000(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback>;

        return $r1;
    }

    private int fixPhoneServiceState(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw>;

        if $i2 != 1 goto label1;

        if i0 != 1 goto label1;

        if i1 <= 0 goto label1;

        i0 = 0;

     label1:
        return i0;
    }

    private int getCurrentBluetoothPingCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.List r1;
        android.bluetooth.BluetoothHeadset $r2, $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r5;
        android.bluetooth.BluetoothDevice $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        r1 = virtualinvoke $r3.<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.bluetooth.BluetoothDevice) $r5;

        $i1 = virtualinvoke $r4.<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>($r6);

        return $i1;

     label1:
        return -1;
    }

    private long getCurrentRadioDataUptime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.File r1, $r6;
        java.io.BufferedReader r4, $r7;
        java.lang.String r5;
        long l0, $l1;
        boolean $z0;
        java.io.FileReader $r8;
        java.lang.NumberFormatException $r9;
        java.io.IOException $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

     label1:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>("/sys/devices/virtual/net/rmnet0/awake_time_ms");

        r1 = $r6;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

     label2:
        return 0L;

     label3:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.FileReader;

        specialinvoke $r8.<java.io.FileReader: void <init>(java.io.File)>(r1);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

        r4 = $r7;

        r5 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke r4.<java.io.BufferedReader: void close()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r5);

     label4:
        $l1 = l0 * 1000L;

        return $l1;

     label5:
        $r10 := @caughtexception;

        return 0L;

     label6:
        $r9 := @caughtexception;

        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private final java.util.Map parseProcWakelocks(byte[], int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i19, $i20, $i21, $i23, $i24, $i25;
        boolean z0, z1, $z2, $z3;
        java.lang.Throwable r2, $r16;
        java.util.Map r3;
        java.util.Iterator r4;
        java.lang.String[] r5;
        long[] r6;
        int[] r7;
        java.lang.String r8;
        long l7, $l15, $l17, $l18, $l22, $l26, $l29;
        com.android.internal.os.BatteryStatsImpl$KernelWakelockStats r9, $r11, $r15;
        java.util.Collection $r10;
        java.lang.Object $r12, $r13;
        short $s27;
        byte $b28, $b30, $b31, $b32, $b33;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $b31 = r1[i1];

        if $b31 == 10 goto label02;

        $b30 = r1[i1];

        if $b30 == 0 goto label02;

        i1 = i1 + 1;

        goto label01;

     label02:
        i2 = i1 + 1;

        i3 = i2;

        entermonitor r0;

     label03:
        r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats>;

        $i9 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        $i11 = 1 + $i9;

        <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion> = $i11;

     label04:
        i4 = 0;

        goto label40;

     label05:
        if i5 >= i0 goto label08;

     label06:
        $b33 = r1[i5];

        if $b33 == 10 goto label08;

        $b32 = r1[i5];

        if $b32 == 0 goto label08;

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        i2 = i5 + 1;

        $i12 = i0 - 1;

        if i2 < $i12 goto label11;

     label09:
        exitmonitor r0;

     label10:
        return r3;

     label11:
        r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName>;

        r6 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData>;

     label12:
        i6 = i3;

     label13:
        if i6 >= i2 goto label16;

     label14:
        $b28 = r1[i6];

        $s27 = 128 & $b28;

        if $s27 == 0 goto label41;

        r1[i6] = 63;

     label15:
        goto label41;

     label16:
        if z0 == 0 goto label24;

     label17:
        r7 = <com.android.internal.os.BatteryStatsImpl: int[] WAKEUP_SOURCES_FORMAT>;

     label18:
        z1 = staticinvoke <android.os.Process: boolean parseProcLine(byte[],int,int,int[],java.lang.String[],long[],float[])>(r1, i3, i2, r7, r5, r6, null);

        r8 = r5[0];

        $l17 = r6[1];

        i8 = (int) $l17;

     label19:
        if z0 == 0 goto label26;

     label20:
        $l29 = r6[2];

        l7 = 1000L * $l29;

     label21:
        if z1 == 0 goto label42;

     label22:
        $i16 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i16 <= 0 goto label42;

        $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r8);

        if $z3 != 0 goto label28;

        $r15 = new com.android.internal.os.BatteryStatsImpl$KernelWakelockStats;

        $i25 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        specialinvoke $r15.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: void <init>(com.android.internal.os.BatteryStatsImpl,int,long,int)>(r0, i8, l7, $i25);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r15);

     label23:
        i4 = i4 + 1;

        goto label42;

     label24:
        r7 = <com.android.internal.os.BatteryStatsImpl: int[] PROC_WAKELOCKS_FORMAT>;

     label25:
        goto label18;

     label26:
        $l18 = r6[2];

        $l15 = 500L + $l18;

        l7 = $l15 / 1000L;

     label27:
        goto label21;

     label28:
        $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.android.internal.os.BatteryStatsImpl$KernelWakelockStats) $r13;

        $i20 = r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mVersion>;

        $i19 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        if $i20 != $i19 goto label33;

        $i24 = r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount>;

        $i21 = i8 + $i24;

        r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount> = $i21;

        $l22 = r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime>;

        $l26 = l7 + $l22;

        r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime> = $l26;

     label29:
        goto label42;

     label30:
        $r16 := @caughtexception;

        r2 = $r16;

     label31:
        exitmonitor r0;

     label32:
        throw r2;

     label33:
        r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount> = i8;

        r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime> = l7;

        $i23 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        r9.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mVersion> = $i23;

     label34:
        i4 = i4 + 1;

        goto label42;

     label35:
        $i10 = interfaceinvoke r3.<java.util.Map: int size()>();

        if $i10 == i4 goto label38;

        $r10 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label36:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label38;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.internal.os.BatteryStatsImpl$KernelWakelockStats) $r12;

        $i14 = $r11.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mVersion>;

        $i13 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        if $i14 == $i13 goto label36;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label37:
        goto label36;

     label38:
        exitmonitor r0;

     label39:
        return r3;

     label40:
        if i2 >= i0 goto label35;

        i5 = i3;

        goto label05;

     label41:
        i6 = i6 + 1;

        goto label13;

     label42:
        i3 = i2;

        goto label40;

        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label11 to label12 with label30;
        catch java.lang.Throwable from label14 to label15 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label33 to label34 with label30;
        catch java.lang.Throwable from label35 to label36 with label30;
        catch java.lang.Throwable from label36 to label37 with label30;
        catch java.lang.Throwable from label38 to label39 with label30;
    }

    static byte[] readFully(java.io.FileInputStream) throws java.io.IOException
    {
        java.io.FileInputStream r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] r1, r2;

        r0 := @parameter0: java.io.FileInputStream;

        i0 = 0;

        $i3 = virtualinvoke r0.<java.io.FileInputStream: int available()>();

        r1 = newarray (byte)[$i3];

     label1:
        $i4 = lengthof r1;

        $i5 = $i4 - i0;

        i1 = virtualinvoke r0.<java.io.FileInputStream: int read(byte[],int,int)>(r1, i0, $i5);

        if i1 > 0 goto label2;

        return r1;

     label2:
        i0 = i0 + i1;

        i2 = virtualinvoke r0.<java.io.FileInputStream: int available()>();

        $i6 = lengthof r1;

        $i7 = $i6 - i0;

        if i2 <= $i7 goto label1;

        $i8 = i0 + i2;

        r2 = newarray (byte)[$i8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);

        r1 = r2;

        goto label1;
    }

    private final java.util.Map readKernelWakelockStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        byte[] r1;
        boolean z0;
        java.io.FileInputStream r2, $r6, $r9;
        int i0, i1;
        java.util.Map $r7;
        byte $b2;
        java.io.FileNotFoundException $r8, $r10;
        java.io.IOException $r11;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = newarray (byte)[8192];

        z0 = 0;

     label01:
        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>("/proc/wakelocks");

        r2 = $r6;

     label02:
        i0 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[])>(r1);

        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label03:
        if i0 <= 0 goto label05;

        i1 = 0;

     label04:
        if i1 >= i0 goto label05;

        $b2 = r1[i1];

        if $b2 != 0 goto label11;

        i0 = i1;

     label05:
        $r7 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map parseProcWakelocks(byte[],int,boolean)>(r1, i0, z0);

        return $r7;

     label06:
        $r8 := @caughtexception;

     label07:
        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>("/d/wakeup_sources");

        r2 = $r9;

     label08:
        z0 = 1;

        goto label02;

     label09:
        $r10 := @caughtexception;

        return null;

     label10:
        $r11 := @caughtexception;

        return null;

     label11:
        i1 = i1 + 1;

        goto label04;

        catch java.io.FileNotFoundException from label01 to label02 with label06;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label02 to label03 with label10;
        catch java.io.FileNotFoundException from label07 to label08 with label09;
        catch java.io.IOException from label07 to label08 with label10;
    }

    private void readSummaryFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i23, i24, i28, i29, i30, i31, i32, i33, $i36, $i37, $i38, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i60, $i62, $i64, $i65, $i67, $i68, $i70;
        com.android.internal.os.BatteryStatsImpl$Uid r2, $r14;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg r3;
        java.lang.String r4, r7, $r18, $r22, $r25, $r26, $r33, $r39, $r50, $r59, $r65, $r66, $r88, $r93;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r5;
        long l22, l25, l26, l27, $l34, $l35, $l39, $l40;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r8, $r9, $r10, $r11, $r12, $r16, $r35, $r42, $r43, $r44, $r51, $r52, $r56, $r57, $r70, $r71, $r72, $r73, $r81, $r83, $r87;
        com.android.internal.os.BatteryStatsImpl$Counter $r13, $r54;
        android.util.SparseArray $r15;
        java.lang.StringBuilder $r17, $r19, $r20, $r21, $r23, $r24, $r32, $r34, $r36, $r38, $r40, $r41, $r45, $r46, $r47, $r48, $r49, $r60, $r67, $r69, $r74, $r75, $r76, $r77, $r78, $r79, $r82, $r89, $r91, $r92;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r27, $r28, $r31;
        java.util.ArrayList $r29;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter $r30, $r37;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$BatchTimer $r53;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r55, $r80, $r84, $r86;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r58, $r64, $r90;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r61, $r62;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r63, $r85;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r68;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 67 goto label02;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readFromParcel: version got ");

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r91 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(67);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; erasing old stats");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", $r93);

     label01:
        return;

     label02:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistory(android.os.Parcel,boolean)>(r1, 1);

        $i36 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i36;

        $l35 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime> = $l35;

        $l34 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime> = $l34;

        $l40 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l40;

        $l39 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l39;

        $i38 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $i38;

        $i37 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $i37;

        $i44 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i44;

        $i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i43;

        $i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i42;

        $i41 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i41;

        $i45 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i46 = 1 + $i45;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i46;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 0;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i1 = 0;

     label03:
        if i1 >= 5 goto label04;

        $r80 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r83 = $r80[i1];

        virtualinvoke $r83.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i1 = i1 + 1;

        goto label03;

     label04:
        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i2 = 0;

     label05:
        if i2 >= 5 goto label06;

        $r86 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r81 = $r86[i2];

        virtualinvoke $r81.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i2 = i2 + 1;

        goto label05;

     label06:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i3 = 0;

     label07:
        if i3 >= 17 goto label08;

        $r84 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r87 = $r84[i3];

        virtualinvoke $r87.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i3 = i3 + 1;

        goto label07;

     label08:
        i4 = 0;

     label09:
        if i4 >= 4 goto label10;

        $r90 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r85 = $r90[i4];

        virtualinvoke $r85.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i4 = i4 + 1;

        goto label09;

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i5 <= 10000 goto label11;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many kernel wake locks ");

        $r89 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r88);

        return;

     label11:
        i6 = 0;

     label12:
        if i6 >= i5 goto label14;

        $i70 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i70 == 0 goto label13;

        $r65 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r68 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>($r65);

        virtualinvoke $r68.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label13:
        i6 = i6 + 1;

        goto label12;

     label14:
        $i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps> = $i48;

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i7 <= 10000 goto label15;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many uids ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r66 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r66);

        return;

     label15:
        i8 = 0;

     label16:
        if i8 >= i7 goto label01;

        i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r14 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r14.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i9);

        r2 = $r14;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i9, r2);

        r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiRunning> = 0;

        $i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label17;

        $r71 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        virtualinvoke $r71.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label17:
        r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 0;

        $i54 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i54 == 0 goto label18;

        $r70 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r70.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label18:
        r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiScanStarted> = 0;

        $i53 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i53 == 0 goto label19;

        $r73 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiScanTimer>;

        virtualinvoke $r73.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label19:
        r2.<com.android.internal.os.BatteryStatsImpl$Uid: int mWifiBatchedScanBinStarted> = -1;

        i10 = 0;

     label20:
        if i10 >= 5 goto label22;

        $i68 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i68 == 0 goto label21;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void makeWifiBatchedScanBin(int,android.os.Parcel)>(i10, null);

        $r55 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r72 = $r55[i10];

        virtualinvoke $r72.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label21:
        i10 = i10 + 1;

        goto label20;

     label22:
        r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiMulticastEnabled> = 0;

        $i56 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i56 == 0 goto label23;

        $r56 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        virtualinvoke $r56.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label23:
        r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mAudioTurnedOn> = 0;

        $i55 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i55 == 0 goto label24;

        $r57 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createAudioTurnedOnTimerLocked()>();

        virtualinvoke $r57.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label24:
        r2.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mVideoTurnedOn> = 0;

        $i50 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i50 == 0 goto label25;

        $r51 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createVideoTurnedOnTimerLocked()>();

        virtualinvoke $r51.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label25:
        $i49 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i49 == 0 goto label26;

        $r52 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createForegroundActivityTimerLocked()>();

        virtualinvoke $r52.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label26:
        $i52 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i52 == 0 goto label27;

        $r53 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer createVibratorOnTimerLocked()>();

        virtualinvoke $r53.<com.android.internal.os.BatteryStatsImpl$BatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label27:
        $i51 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label30;

        $r62 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r62 != null goto label28;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void initUserActivityLocked()>();

     label28:
        i32 = 0;

     label29:
        if i32 >= 3 goto label30;

        $r61 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r54 = $r61[i32];

        virtualinvoke $r54.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i32 = i32 + 1;

        goto label29;

     label30:
        $i57 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i57 == 0 goto label33;

        $r58 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        if $r58 != null goto label31;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void initNetworkActivityLocked()>();

     label31:
        i33 = 0;

     label32:
        if i33 >= 4 goto label33;

        $r64 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r63 = $r64[i33];

        virtualinvoke $r63.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i33 = i33 + 1;

        goto label32;

     label33:
        i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i11 <= 100 goto label34;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many wake locks ");

        $r60 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r59);

        return;

     label34:
        i12 = 0;

     label35:
        if i12 >= i11 goto label39;

        r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i67 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i67 == 0 goto label36;

        $r44 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakeTimerLocked(java.lang.String,int)>(r7, 1);

        virtualinvoke $r44.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label36:
        $i64 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i64 == 0 goto label37;

        $r43 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakeTimerLocked(java.lang.String,int)>(r7, 0);

        virtualinvoke $r43.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label37:
        $i65 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i65 == 0 goto label38;

        $r42 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakeTimerLocked(java.lang.String,int)>(r7, 2);

        virtualinvoke $r42.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label38:
        i12 = i12 + 1;

        goto label35;

     label39:
        i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i14 <= 1000 goto label40;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many sensors ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r50);

        return;

     label40:
        i13 = 0;

     label41:
        if i13 >= i14 goto label43;

        i31 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i62 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i62 == 0 goto label42;

        $r35 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getSensorTimerLocked(int,boolean)>(i31, 1);

        virtualinvoke $r35.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label42:
        i13 = i13 + 1;

        goto label41;

     label43:
        i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i16 <= 1000 goto label44;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many processes ");

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r33);

        return;

     label44:
        i15 = 0;

     label45:
        if i15 >= i16 goto label50;

        $r25 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r6 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>($r25);

        l25 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime> = l25;

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = l25;

        l27 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime> = l27;

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = l27;

        l26 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedForegroundTime> = l26;

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = l26;

        i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts> = i30;

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = i30;

        i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i28 <= 100 goto label46;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many speed bins ");

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i28);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r39);

        return;

     label46:
        $r31 = newarray (com.android.internal.os.BatteryStatsImpl$SamplingCounter)[i28];

        r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins> = $r31;

        i29 = 0;

     label47:
        if i29 >= i28 goto label49;

        $i60 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i60 == 0 goto label48;

        $r28 = r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r30 = new com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r30.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(java.util.ArrayList)>($r29);

        $r28[i29] = $r30;

        $r27 = r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r37 = $r27[i29];

        virtualinvoke $r37.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label48:
        i29 = i29 + 1;

        goto label47;

     label49:
        $z0 = virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean readExcessivePowerFromParcelLocked(android.os.Parcel)>(r1);

        if $z0 == 0 goto label01;

        i15 = i15 + 1;

        goto label45;

     label50:
        i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i18 <= 10000 goto label51;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many packages ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r26);

        return;

     label51:
        i17 = 0;

     label52:
        if i17 >= i18 goto label56;

        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>(r4);

        i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mLoadedWakeups> = i20;

        r3.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups> = i20;

        i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i19 <= 1000 goto label53;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many services ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r22);

        return;

     label53:
        i21 = 0;

     label54:
        if i21 >= i19 goto label55;

        $r18 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r5 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>(r4, $r18);

        l22 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mLoadedStartTime> = l22;

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mStartTime> = l22;

        i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedStarts> = i24;

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts> = i24;

        i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedLaunches> = i23;

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches> = i23;

        i21 = i21 + 1;

        goto label54;

     label55:
        i17 = i17 + 1;

        goto label52;

     label56:
        i8 = i8 + 1;

        goto label16;
    }

    private void updateAllPhoneStateLocked(int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean z0, z1, z2, $z3, $z4;
        android.os.BatteryStats$HistoryItem r1, r2, $r5, $r6, $r10, $r12;
        long $l5;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3, $r8, $r9;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r7, $r11, $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 = 0;

        z1 = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = i2;

        if i1 != 1 goto label01;

        if i0 != 1 goto label01;

        if i2 <= 0 goto label01;

        i0 = 0;

     label01:
        if i0 != 3 goto label10;

        i2 = -1;

     label02:
        if z0 != 0 goto label03;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $z4 = virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z4 == 0 goto label03;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i16 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i17 = -134217729 & $i16;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i17;

        z1 = 1;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label03:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState>;

        if $i3 == i0 goto label04;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i13 = $r10.<android.os.BatteryStats$HistoryItem: int states>;

        $i15 = -3841 & $i13;

        $i12 = i0 << 8;

        $i14 = $i15 | $i12;

        $r12.<android.os.BatteryStats$HistoryItem: int states> = $i14;

        z1 = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = i0;

     label04:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        if $i4 == i2 goto label08;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        if $i6 < 0 goto label05;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        $r11 = $r9[$i11];

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label05:
        if i2 < 0 goto label11;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r4 = $r3[i2];

        $z3 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z3 != 0 goto label06;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r7 = $r8[i2];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label06:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = $r5.<android.os.BatteryStats$HistoryItem: int states>;

        $i8 = -241 & $i7;

        $i9 = i2 << 4;

        $i10 = $i8 | $i9;

        $r6.<android.os.BatteryStats$HistoryItem: int states> = $i10;

        z1 = 1;

     label07:
        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = i2;

     label08:
        if z1 == 0 goto label09;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l5);

     label09:
        return;

     label10:
        z1 = 0;

        z0 = 0;

        if i0 == 0 goto label02;

        z1 = 0;

        z0 = 0;

        if i0 != 1 goto label02;

        z0 = 1;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        z2 = virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        z1 = 0;

        i2 = 0;

        if z2 != 0 goto label02;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i18 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i19 = 134217728 | $i18;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i19;

        z1 = 1;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

        i2 = 0;

        goto label02;

     label11:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllSignalStrengthTimersLocked(int)>(-1);

        goto label07;
    }

    private void updateNetworkActivityLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.IOException r1, $r20;
        android.net.NetworkStats r2, r3, $r7, $r8;
        android.net.NetworkStats$Entry r4;
        int i0, i1, $i5, $i7;
        com.android.internal.os.BatteryStatsImpl$Uid r5;
        boolean $z0, $z1, $z2;
        com.android.internal.net.NetworkStatsFactory $r6;
        long $l2, $l3, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l16;
        byte $b4, $b6;
        java.util.HashSet $r9, $r12;
        java.lang.String $r10, $r11;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r13, $r16, $r17, $r21;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r14, $r15, $r18, $r19;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("net.qtaguid_enabled", 0);

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory>;

        r2 = virtualinvoke $r6.<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail()>();

     label3:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastSnapshot>;

        if $r7 != null goto label5;

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastSnapshot> = r2;

        return;

     label4:
        $r20 := @caughtexception;

        r1 = $r20;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Failed to read network stats", r1);

        return;

     label5:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastSnapshot>;

        r3 = virtualinvoke r2.<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats)>($r8);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastSnapshot> = r2;

        r4 = null;

        i0 = virtualinvoke r3.<android.net.NetworkStats: int size()>();

        i1 = 0;

     label6:
        if i1 >= i0 goto label1;

        r4 = virtualinvoke r3.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i1, r4);

        $l2 = r4.<android.net.NetworkStats$Entry: long rxBytes>;

        $b4 = $l2 cmp 0L;

        if $b4 == 0 goto label7;

        $l3 = r4.<android.net.NetworkStats$Entry: long txBytes>;

        $b6 = $l3 cmp 0L;

        if $b6 != 0 goto label8;

     label7:
        i1 = i1 + 1;

        goto label6;

     label8:
        $i5 = r4.<android.net.NetworkStats$Entry: int tag>;

        if $i5 != 0 goto label7;

        $i7 = r4.<android.net.NetworkStats$Entry: int uid>;

        r5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i7);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mMobileIfaces>;

        $r10 = r4.<android.net.NetworkStats$Entry: java.lang.String iface>;

        $z1 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z1 == 0 goto label9;

        $l11 = r4.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long)>(0, $l11);

        $l12 = r4.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long)>(1, $l12);

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r17 = $r19[0];

        $l14 = r4.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l14);

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r21 = $r18[1];

        $l16 = r4.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l16);

        goto label7;

     label9:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mWifiIfaces>;

        $r11 = r4.<android.net.NetworkStats$Entry: java.lang.String iface>;

        $z2 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z2 == 0 goto label7;

        $l9 = r4.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long)>(2, $l9);

        $l8 = r4.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long)>(3, $l8);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r13 = $r15[2];

        $l10 = r4.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l10);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r16 = $r14[3];

        $l13 = r4.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l13);

        goto label7;

        catch java.io.IOException from label2 to label3 with label4;
    }

    void addHistoryBufferLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l3, $l4, $l5, $l27, $l28;
        int i2, $i6, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i29;
        boolean $z0, $z1, $z2, $z3;
        android.os.BatteryStats$HistoryItem $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        android.os.Parcel $r2, $r10, $r11;
        byte $b7, $b8, $b13, $b14, $b22, $b30;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l5 = l0 + $l3;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l4 = $r1.<android.os.BatteryStats$HistoryItem: long time>;

        l1 = $l5 - $l4;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        if $i6 < 0 goto label7;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b13 = $r7.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b13 != 1 goto label7;

        $b14 = l1 cmp 2000L;

        if $b14 >= 0 goto label7;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i18 = $r8.<android.os.BatteryStats$HistoryItem: int states>;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i15 = $r9.<android.os.BatteryStats$HistoryItem: int states>;

        $i16 = $i18 ^ $i15;

        $i19 = r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates>;

        $i17 = $i16 & $i19;

        if $i17 != 0 goto label7;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i21 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        virtualinvoke $r11.<android.os.Parcel: void setDataSize(int)>($i21);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        virtualinvoke $r10.<android.os.Parcel: void setDataPosition(int)>($i20);

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $b22 = $r14.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b22 != 1 goto label3;

        $b30 = l1 cmp 500L;

        if $b30 >= 0 goto label3;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $z3 = virtualinvoke $r21.<android.os.BatteryStats$HistoryItem: boolean same(android.os.BatteryStats$HistoryItem)>($r16);

        if $z3 == 0 goto label3;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r19.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r20);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $r22.<android.os.BatteryStats$HistoryItem: byte cmd> = 0;

        return;

     label3:
        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates>;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i26 = $r12.<android.os.BatteryStats$HistoryItem: int states>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i25 = $r13.<android.os.BatteryStats$HistoryItem: int states>;

        $i23 = $i26 ^ $i25;

        $i29 = $i24 | $i23;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates> = $i29;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l27 = $r15.<android.os.BatteryStats$HistoryItem: long time>;

        $l28 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        l0 = $l27 - $l28;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r17.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r18);

     label4:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        i2 = virtualinvoke $r2.<android.os.Parcel: int dataSize()>();

        if i2 < 131072 goto label6;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow>;

        if $z2 != 0 goto label5;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte)>(l0, 3);

     label5:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b7 = $r4.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b8 = $r3.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b7 != $b8 goto label6;

        if i2 >= 147456 goto label1;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i9 = $r6.<android.os.BatteryStats$HistoryItem: int states>;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i10 = $r5.<android.os.BatteryStats$HistoryItem: int states>;

        $i12 = $i9 ^ $i10;

        $i11 = 270270464 & $i12;

        if $i11 == 0 goto label1;

     label6:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte)>(l0, 1);

        return;

     label7:
        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedBufferStates> = 0;

        goto label4;
    }

    void addHistoryBufferLocked(long, byte)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l4, $l5;
        byte b1;
        boolean z0, $z1;
        int i2, $i3, $i6;
        android.os.Parcel $r1, $r7, $r9, $r10, $r11, $r12;
        android.os.BatteryStats$HistoryItem $r2, $r3, $r4, $r5, $r6, $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        b1 := @parameter1: byte;

        z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory>;

        i2 = 0;

        if z0 == 0 goto label1;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        i2 = virtualinvoke $r9.<android.os.Parcel: int dataPosition()>();

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i6 = virtualinvoke $r11.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r12.<android.os.Parcel: void setDataPosition(int)>($i6);

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i3 = virtualinvoke $r1.<android.os.Parcel: int dataPosition()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = $i3;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r3.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r2);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l5 = l0 + $l4;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        virtualinvoke $r5.<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>($l5, b1, $r4);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r8.<android.os.BatteryStats$HistoryItem: void writeDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>($r7, $r6);

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryTime> = l0;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory>;

        if $z1 == 0 goto label2;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r10.<android.os.Parcel: void setDataPosition(int)>(i2);

     label2:
        return;
    }

    void addHistoryRecordLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long)>(l0);

        return;
    }

    void addHistoryRecordLocked(long, byte)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3;
        byte b1;
        android.os.BatteryStats$HistoryItem r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        b1 := @parameter1: byte;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCache>;

        if r1 == null goto label2;

        $r4 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCache> = $r4;

     label1:
        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l3 = l0 + $l2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>($l3, b1, $r3);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)>(r1);

        return;

     label2:
        $r2 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r2.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r1 = $r2;

        goto label1;
    }

    void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryItems>;

        $i1 = 1 + $i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryItems> = $i1;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next> = null;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastEnd> = $r2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        $r4.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd> = r1;

        return;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistory> = r1;

        return;
    }

    void clearHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2, $r3;
        android.os.BatteryStats$HistoryItem $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryTime> = 0L;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r1.<android.os.Parcel: void setDataSize(int)>(0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r3.<android.os.Parcel: void setDataCapacity(int)>(65536);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $r4.<android.os.BatteryStats$HistoryItem: byte cmd> = 0;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r5.<android.os.BatteryStats$HistoryItem: byte cmd> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        return;
    }

    public void commitPendingDataToDisk()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, r4, $r15, $r17;
        android.os.Parcel r2;
        java.io.FileOutputStream r3, $r7;
        java.io.IOException r5, $r13;
        java.util.concurrent.locks.ReentrantLock $r6, $r12, $r16, $r18;
        com.android.internal.util.JournaledFile $r8, $r11, $r14;
        java.io.File $r9;
        byte[] $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label01:
        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        exitmonitor r0;

     label06:
        $r7 = new java.io.FileOutputStream;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        $r9 = virtualinvoke $r8.<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>();

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r9);

        r3 = $r7;

        $r10 = virtualinvoke r2.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>($r10);

        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r3);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        virtualinvoke $r11.<com.android.internal.util.JournaledFile: void commit()>();

     label07:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label08:
        $r15 := @caughtexception;

        r1 = $r15;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

     label11:
        $r13 := @caughtexception;

        r5 = $r13;

     label12:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStats", "Error writing battery statistics", r5);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        virtualinvoke $r14.<com.android.internal.util.JournaledFile: void rollback()>();

     label13:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r16.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label14:
        $r17 := @caughtexception;

        r4 = $r17;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public long computeBatteryRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        int i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime>;

        $l8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l0);

        $l9 = $l7 + $l8;

        return $l9;

     label3:
        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastRealtime>;

        return $l6;

     label4:
        $l5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l0);

        return $l5;

     label5:
        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l0);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime>;

        $l4 = $l2 - $l3;

        return $l4;
    }

    public long computeBatteryUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        int i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime>;

        $l8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>(l0);

        $l9 = $l7 + $l8;

        return $l9;

     label3:
        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastUptime>;

        return $l6;

     label4:
        $l5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>(l0);

        return $l5;

     label5:
        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>(l0);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime>;

        $l4 = $l2 - $l3;

        return $l4;
    }

    public long computeRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10;
        int i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l8 = l0 - $l7;

        $l10 = $l9 + $l8;

        return $l10;

     label3:
        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastRealtime>;

        return $l6;

     label4:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l5 = l0 - $l4;

        return $l5;

     label5:
        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        $l3 = l0 - $l2;

        return $l3;
    }

    public long computeUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10;
        int i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return 0L;

     label2:
        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l8 = l0 - $l7;

        $l10 = $l9 + $l8;

        return $l10;

     label3:
        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastUptime>;

        return $l6;

     label4:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l5 = l0 - $l4;

        return $l5;

     label5:
        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        $l3 = l0 - $l2;

        return $l3;
    }

    public int describeContents()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 0;
    }

    public void distributeWorkLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, i8, $i12, $i14, $i31, $i36, $i38, $i40;
        com.android.internal.os.BatteryStatsImpl$Uid r1, r4;
        long l1, l2, l4, l5, l6, l7, l9, $l10, $l11, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l32, $l33, $l34, $l35, $l37;
        java.util.Iterator r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r3, r5;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r6, r7, $r23;
        java.util.ArrayList r8;
        java.lang.Object $r9, $r13, $r15;
        android.util.SparseArray $r10, $r14, $r16;
        java.util.HashMap $r11;
        java.util.Collection $r12;
        boolean $z0;
        byte $b13;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r17, $r18, $r20, $r22;
        java.util.concurrent.atomic.AtomicInteger $r19, $r21;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r9 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(1010);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r9;

        if r1 == null goto label8;

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l11 = 1000L * $l10;

        l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>($l11, i0);

        $r11 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r13;

        l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)>(l1, i0);

        i3 = 0;

     label2:
        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i12 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if i3 >= $i12 goto label1;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r4 = (com.android.internal.os.BatteryStatsImpl$Uid) $r15;

        $i14 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i14 == 1010 goto label7;

        l4 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)>(l1, i0);

        $b13 = l4 cmp 0L;

        if $b13 <= 0 goto label7;

        r5 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*wifi*");

        $l18 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)>(i0);

        $l17 = l4 * $l18;

        l5 = $l17 / l2;

        $l16 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l15 = l5 + $l16;

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l15;

        $l22 = r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l21 = $l22 - l5;

        r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l21;

        $l20 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)>(i0);

        $l19 = l4 * $l20;

        l6 = $l19 / l2;

        $l26 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l25 = l6 + $l26;

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l25;

        $l24 = r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l23 = $l24 - l6;

        r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l23;

        $l30 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)>(i0);

        $l29 = l4 * $l30;

        l7 = $l29 / l2;

        $l28 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        $l27 = l7 + $l28;

        r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l27;

        $l34 = r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        $l35 = $l34 - l7;

        r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l35;

        i8 = 0;

     label3:
        $r18 = r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i36 = lengthof $r18;

        if i8 >= $i36 goto label6;

        $r17 = r3.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r6 = $r17[i8];

        if r6 == null goto label5;

        $i31 = virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: int getCountLocked(int)>(i0);

        $l32 = (long) $i31;

        $l33 = l4 * $l32;

        l9 = $l33 / l2;

        $r20 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r7 = $r20[i8];

        if r7 != null goto label4;

        r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $r23 = new com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        specialinvoke $r23.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(java.util.ArrayList)>(r8);

        r7 = $r23;

        $r22 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r22[i8] = r7;

     label4:
        $r21 = r7.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i40 = (int) l9;

        virtualinvoke $r21.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i40);

        $r19 = r6.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $l37 = neg l9;

        $i38 = (int) $l37;

        virtualinvoke $r19.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i38);

     label5:
        i8 = i8 + 1;

        goto label3;

     label6:
        l2 = l2 - l4;

     label7:
        i3 = i3 + 1;

        goto label2;

     label8:
        return;
    }

    public void doPlugLocked(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, $l5;
        int i3, $i4, $i6;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$Unpluggable $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $i4 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = -1 + $i4;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Unpluggable) $r3;

        interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Unpluggable: void plug(long,long,long)>(l0, l1, l2);

        i3 = i3 + -1;

        goto label1;

     label2:
        $l5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataUptime> = $l5;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataStart> = -1L;

        $i6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount> = $i6;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        return;
    }

    public void doUnplugLocked(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, $l5;
        int i3, $i4, $i6;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.os.BatteryStatsImpl$Unpluggable $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $i4 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = -1 + $i4;

     label1:
        if i3 < 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (com.android.internal.os.BatteryStatsImpl$Unpluggable) $r3;

        interfaceinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Unpluggable: void unplug(long,long,long)>(l0, l1, l2);

        i3 = i3 + -1;

        goto label1;

     label2:
        $l5 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getCurrentRadioDataUptime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataStart> = $l5;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataUptime> = 0L;

        $i6 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = $i6;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount> = 0;

        return;
    }

    public void dumpLocked(java.io.PrintWriter, boolean, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.PrintWriter r1;
        boolean z0;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter,boolean,int)>(r1, z0, i0);

        return;
    }

    public void finishAddingCpuLocked(int, int, int, long[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15;
        long[] r1;
        boolean z0, z1, $z3, $z4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r2, r6, r7, $r16, $r23;
        com.android.internal.os.BatteryStatsImpl$Uid r3, r5, r10;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r4, r8;
        java.util.ArrayList $r9, $r11, $r12, $r13, $r14, $r17, $r18, $r20, $r24, $r27, $r29;
        java.lang.Object $r15, $r19, $r21, $r22, $r25, $r26, $r28;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: long[];

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i0 == 0 goto label08;

        i9 = 0;

        i10 = 0;

     label01:
        if i10 >= i3 goto label03;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r28 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r7 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r28;

        $z4 = r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z4 == 0 goto label02;

        r10 = r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if r10 == null goto label02;

        $i15 = r10.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i15 == 1000 goto label02;

        i9 = i9 + 1;

     label02:
        i10 = i10 + 1;

        goto label01;

     label03:
        if i9 == 0 goto label06;

        i11 = 0;

     label04:
        if i11 >= i3 goto label06;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r26 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r6 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r26;

        $z3 = r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z3 == 0 goto label05;

        r5 = r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if r5 == null goto label05;

        $i14 = r5.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i14 == 1000 goto label05;

        i13 = i1 / i9;

        i12 = i2 / i9;

        i1 = i1 - i13;

        i2 = i2 - i12;

        i9 = i9 + -1;

        r8 = virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*wakelock*");

        virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>(i13, i12);

        virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r1);

     label05:
        i11 = i11 + 1;

        goto label04;

     label06:
        if i1 != 0 goto label07;

        if i2 == 0 goto label08;

     label07:
        r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(1000);

        if r3 == null goto label08;

        r4 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*lost*");

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>(i1, i2);

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r1);

     label08:
        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        i4 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i3 == i4 goto label12;

        z0 = 1;

     label09:
        i5 = 0;

     label10:
        if i5 >= i4 goto label14;

        if z0 != 0 goto label14;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        if $r21 == $r25 goto label13;

        z1 = 1;

     label11:
        z0 = z0 | z1;

        i5 = i5 + 1;

        goto label10;

     label12:
        z0 = 0;

        goto label09;

     label13:
        z1 = 0;

        goto label11;

     label14:
        if z0 != 0 goto label16;

        i8 = 0;

     label15:
        if i8 >= i4 goto label20;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r22 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r23 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r22;

        $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 1;

        i8 = i8 + 1;

        goto label15;

     label16:
        i6 = 0;

     label17:
        if i6 >= i4 goto label18;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r16 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r19;

        $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 0;

        i6 = i6 + 1;

        goto label17;

     label18:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r12.<java.util.ArrayList: void clear()>();

        i7 = 0;

     label19:
        if i7 >= i3 goto label20;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r2 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r15;

        r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 1;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i7 = i7 + 1;

        goto label19;

     label20:
        return;
    }

    public void finishIteratingHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;
    }

    public void finishIteratingOldHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>($i0);

        return;
    }

    public long getAwakeTimeBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>();

        $l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>($l0, 2);

        return $l1;
    }

    public long getAwakeTimePlugged()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = 1000L * $l0;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        $l3 = $l1 - $l2;

        return $l3;
    }

    public long getBatteryRealtime(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l0);

        return $l1;
    }

    long getBatteryRealtimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        $l3 = l0 - $l2;

        l1 = l1 + $l3;

     label1:
        return l1;
    }

    public long getBatteryUptime(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>(l0);

        return $l1;
    }

    long getBatteryUptimeLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = 1000L * $l0;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>($l1);

        return $l2;
    }

    long getBatteryUptimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        $l3 = l0 - $l2;

        l1 = l1 + $l3;

     label1:
        return l1;
    }

    public long getBluetoothOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getBluetoothPingCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.bluetooth.BluetoothHeadset $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart>;

        if $i0 != -1 goto label1;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount>;

        return $i4;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        if $r1 == null goto label2;

        $i1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart>;

        $i3 = $i1 - $i2;

        return $i3;

     label2:
        return 0;
    }

    public int getCpuSpeedSteps()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        return $i0;
    }

    public int getDischargeAmountScreenOff()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z1 != 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i0 = i0 + $i5;

     label2:
        exitmonitor r0;

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getDischargeAmountScreenOffSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z1 != 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i0 = i0 + $i5;

     label2:
        exitmonitor r0;

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getDischargeAmountScreenOn()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z1 == 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i0 = i0 + $i5;

     label2:
        exitmonitor r0;

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getDischargeAmountScreenOnSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z1 == 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i0 = i0 + $i5;

     label2:
        exitmonitor r0;

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getDischargeCurrentLevel()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>();

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getDischargeCurrentLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        return $i0;
    }

    public int getDischargeStartLevel()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>();

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getDischargeStartLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        return $i0;
    }

    public long getGlobalWifiRunningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getHighDischargeAmountSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i0 = i0 + $i5;

     label2:
        exitmonitor r0;

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public long getHistoryBaseTime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        return $l0;
    }

    public int getInputEventCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$Counter $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Counter: int getCountLocked(int)>(i0);

        return $i1;
    }

    public boolean getIsOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return $z0;
    }

    public java.util.Map getKernelWakelockStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5;
        java.util.HashMap $r3, $r7;
        java.lang.Object $r4;
        boolean $z0;
        java.util.ArrayList $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(java.util.ArrayList,boolean,boolean)>($r6, $z0, 1);

        r2 = $r5;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return r2;
    }

    public int getLowDischargeAmountSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        $i6 = -1 + $i5;

        i0 = i0 + $i6;

     label2:
        exitmonitor r0;

     label3:
        return i0;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public long getNetworkActivityCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r3;
        long $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $i2 = lengthof $r1;

        if i0 >= $i2 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r3 = $r2[i0];

        $l3 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i1);

        return $l3;

     label1:
        return 0L;
    }

    public boolean getNextHistoryLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        int i0, $i1;
        boolean z0;
        android.os.Parcel $r2, $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        i0 = virtualinvoke $r2.<android.os.Parcel: int dataPosition()>();

        if i0 != 0 goto label1;

        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void clear()>();

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i1 = virtualinvoke $r3.<android.os.Parcel: int dataSize()>();

        if i0 < $i1 goto label3;

        z0 = 1;

     label2:
        if z0 == 0 goto label4;

        return 0;

     label3:
        z0 = 0;

        goto label2;

     label4:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void readDelta(android.os.Parcel)>($r4);

        return 1;
    }

    public boolean getNextOldHistoryLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, r2, $r6, $r7, $r11, $r14, $r15;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        long l0, $l3, $l4;
        com.android.internal.util.FastPrintWriter r3, r17;
        android.os.Parcel $r4, $r5, $r13;
        int $i1, $i2;
        byte $b7;
        android.util.LogWriter r16;
        android.os.BatteryStats$HistoryPrinter r18, r19;
        java.io.Writer r20;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i1 = virtualinvoke $r4.<android.os.Parcel: int dataPosition()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i2 = virtualinvoke $r5.<android.os.Parcel: int dataSize()>();

        if $i1 < $i2 goto label5;

        z0 = 1;

     label1:
        if z0 != 0 goto label3;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r15.<android.os.BatteryStats$HistoryItem: void readDelta(android.os.Parcel)>($r13);

        z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $b7 = $r14.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b7 != 3 goto label6;

        z2 = 1;

     label2:
        $z6 = z2 | z1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = $z6;

     label3:
        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator>;

        if r2 != null goto label7;

        $z5 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        if $z5 != 0 goto label4;

        if z0 != 0 goto label4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Old history ends before new history!");

     label4:
        return 0;

     label5:
        z0 = 0;

        goto label1;

     label6:
        z2 = 0;

        goto label2;

     label7:
        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>(r2);

        $r6 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = $r6;

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        if $z3 != 0 goto label8;

        if z0 == 0 goto label9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "New history ends before old history!");

     label8:
        return 1;

     label9:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $z4 = virtualinvoke r1.<android.os.BatteryStats$HistoryItem: boolean same(android.os.BatteryStats$HistoryItem)>($r7);

        if $z4 != 0 goto label8;

        $l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()>();

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l3 + $l4;

        r17 = new com.android.internal.util.FastPrintWriter;

        r16 = new android.util.LogWriter;

        specialinvoke r16.<android.util.LogWriter: void <init>(int,java.lang.String)>(5, "BatteryStatsImpl");

        r20 = (java.io.Writer) r16;

        specialinvoke r17.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>(r20);

        r3 = r17;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Histories differ!");

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Old history:");

        r18 = new android.os.BatteryStats$HistoryPrinter;

        specialinvoke r18.<android.os.BatteryStats$HistoryPrinter: void <init>()>();

        virtualinvoke r18.<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long)>(r3, r1, l0);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("New history:");

        r19 = new android.os.BatteryStats$HistoryPrinter;

        specialinvoke r19.<android.os.BatteryStats$HistoryPrinter: void <init>()>();

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke r19.<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long)>(r3, $r11, l0);

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

        goto label8;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>(r1);

        return $r3;
    }

    public int getPhoneDataConnectionCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getPhoneDataConnectionTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public long getPhoneOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getPhoneSignalScanningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getPhoneSignalStrengthCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getPhoneSignalStrengthTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        $r3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        return $r3;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i1;
        java.util.HashMap $r2, $r3, $r8;
        boolean $z0;
        java.lang.Integer $r4, $r10;
        com.android.internal.os.BatteryStatsImpl$Uid $r6;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r7;
        java.lang.Object $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mUidCache>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mUidCache>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (java.lang.Integer) $r9;

        i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

     label1:
        $r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        $r7 = virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        return $r7;

     label2:
        i1 = staticinvoke <android.os.Process: int getUidForPid(int)>(i0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mUidCache>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        goto label1;
    }

    public long getProcessWakeTime(int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        long l2, l3, l4, $l5, $l6;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.os.BatteryStats$Uid$Pid r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4, $r6;
        byte $b7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 = 0L;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r1 == null goto label2;

        $r5 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mPids>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.os.BatteryStats$Uid$Pid) $r6;

        if r2 == null goto label2;

        l4 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeSum>;

        $l5 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeStart>;

        $b7 = $l5 cmp 0L;

        if $b7 == 0 goto label1;

        $l6 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeStart>;

        l3 = l2 - $l6;

     label1:
        l3 = l3 + l4;

     label2:
        return l3;
    }

    public long getRadioDataUptime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l2, $l3, $l4, $l5;
        byte $b1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataStart>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataUptime>;

        return $l5;

     label1:
        $l2 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getCurrentRadioDataUptime()>();

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataStart>;

        $l4 = $l2 - $l3;

        return $l4;
    }

    public long getRadioDataUptimeMs()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptime()>();

        $l1 = $l0 / 1000L;

        return $l1;
    }

    public long getScreenBrightnessTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public long getScreenOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int, java.lang.String, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String r1, r2;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        $r4 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public int getStartCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        return $i0;
    }

    public android.util.SparseArray getUidStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        return $r1;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid r1, $r4;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i0);

        r1 = $r4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    public long getWifiOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    void initDischarge()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = 0;

        return;
    }

    void initTimes()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime> = 0L;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l0 = 1000L * $l2;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = l0;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = 1000L * $l3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = l1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = l1;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>($l4);

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l5;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l7 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>($l6);

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l7;

        return;
    }

    public boolean isOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return $z0;
    }

    public boolean isScreenOn()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        return $z0;
    }

    public void noteActivityPausedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteActivityPausedLocked()>();

        return;
    }

    public void noteActivityResumedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteActivityResumedLocked()>();

        return;
    }

    public void noteAudioOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mAudioOn>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i1 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i2 = -4194305 & $i1;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i2;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l3);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mAudioOn> = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOffLocked()>();

        return;
    }

    public void noteAudioOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mAudioOn>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i1 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i2 = 4194304 | $i1;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i2;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l3);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mAudioOn> = 1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOnLocked()>();

        return;
    }

    public void noteBluetoothOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        int $i0, $i1;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = -65537 & $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        return;
    }

    public void noteBluetoothOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        int $i0, $i1;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = 65536 | $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        return;
    }

    public void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteFullWifiLockAcquiredLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        if $i1 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = 33554432 | $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        $i3 = 1 + $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = $i3;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockAcquiredLocked()>();

        return;
    }

    public void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteFullWifiLockReleasedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        $i2 = -1 + $i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = $i2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = -33554433 & $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockReleasedLocked()>();

        return;
    }

    public void noteInputEventAtomic()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$Counter $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Counter: void stepAtomic()>();

        return;
    }

    public void noteNetworkInterfaceTypeLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0;
        boolean $z0, $z2;
        java.util.HashSet $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>(i0);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mMobileIfaces>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label1:
        $z2 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeWifi(int)>(i0);

        if $z2 == 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mWifiIfaces>;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mMobileIfaces>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        goto label1;

     label3:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashSet mWifiIfaces>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void noteNetworkStatsEnabledLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked()>();

        return;
    }

    public void notePhoneDataConnectionStateLocked(int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        boolean z0;
        byte b1;
        android.os.BatteryStats$HistoryItem $r1, $r2;
        long $l7;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        b1 = 0;

        if z0 == 0 goto label02;

        tableswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label19;
            default: goto label01;
        };

     label01:
        b1 = 16;

     label02:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i2 == b1 goto label04;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = -61441 & $i3;

        $i4 = b1 << 12;

        $i6 = $i5 | $i4;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l7);

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i8 < 0 goto label03;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        $r5 = $r6[$i9];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label03:
        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = b1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r4 = $r3[b1];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label04:
        return;

     label05:
        b1 = 2;

        goto label02;

     label06:
        b1 = 1;

        goto label02;

     label07:
        b1 = 3;

        goto label02;

     label08:
        b1 = 4;

        goto label02;

     label09:
        b1 = 5;

        goto label02;

     label10:
        b1 = 6;

        goto label02;

     label11:
        b1 = 7;

        goto label02;

     label12:
        b1 = 8;

        goto label02;

     label13:
        b1 = 9;

        goto label02;

     label14:
        b1 = 10;

        goto label02;

     label15:
        b1 = 11;

        goto label02;

     label16:
        b1 = 12;

        goto label02;

     label17:
        b1 = 13;

        goto label02;

     label18:
        b1 = 14;

        goto label02;

     label19:
        b1 = 15;

        goto label02;
    }

    public void notePhoneOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        int $i0, $i1;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = -262145 & $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        return;
    }

    public void notePhoneOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        int $i0, $i1;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = 262144 | $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        return;
    }

    public void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.telephony.SignalStrength r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.telephony.SignalStrength;

        i0 = virtualinvoke r1.<android.telephony.SignalStrength: int getLevel()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateAllPhoneStateLocked(int,int,int)>($i2, $i1, i0);

        return;
    }

    public void notePhoneStateLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateAllPhoneStateLocked(int,int,int)>(i0, i1, $i2);

        return;
    }

    public void noteProcessDiedLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if r1 == null goto label1;

        $r4 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mPids>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i1);

     label1:
        return;
    }

    public void noteScreenBrightnessLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        android.os.BatteryStats$HistoryItem $r1, $r2;
        long $l7;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 = i0 / 51;

        if i1 >= 0 goto label5;

        i1 = 0;

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i2 == i1 goto label4;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = -16 & $i3;

        $i4 = i1 << 0;

        $i6 = $i5 | $i4;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l7);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 == 0 goto label3;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i8 < 0 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r5 = $r6[$i9];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label2:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label3:
        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = i1;

     label4:
        return;

     label5:
        if i1 < 5 goto label1;

        i1 = 4;

        goto label1;
    }

    public void noteScreenOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0, $z1;
        int $i0, $i1, $i3, $i4;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 == 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = -1048577 & $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i3 < 0 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r4 = $r3[$i4];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,int)>(-1, -1, "dummy", 0);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>(1, 0);

     label2:
        return;
    }

    public void noteScreenOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0, $z1;
        int $i0, $i1, $i3, $i4;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 != 0 goto label2;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = 1048576 | $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i3 < 0 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r4 = $r3[$i4];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,int)>(-1, -1, "dummy", 0);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>(0, 1);

     label2:
        return;
    }

    public void noteStartGpsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        if $i1 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = 268435456 | $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        $i3 = 1 + $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting> = $i3;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartGps()>();

        return;
    }

    public void noteStartSensorLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        if $i2 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = 536870912 | $i5;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l7);

     label1:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        $i4 = 1 + $i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting> = $i4;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSensor(int)>(i1);

        return;
    }

    public void noteStartWakeFromSourceLocked(android.os.WorkSource, int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, i2, i3, $i4;
        java.lang.String r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $i4 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i3);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,int)>($i4, i0, r2, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteStartWakeLocked(int, int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1;
        android.os.Message r2;
        android.os.BatteryStats$HistoryItem r3;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r4, $r6, $r7;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r5;
        long $l8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        if i2 != 0 goto label2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        if $i3 != 0 goto label1;

        r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = r3.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = 1073741824 | $i7;

        r3.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l8);

     label1:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        $i4 = 1 + $i5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting> = $i4;

     label2:
        if i0 < 0 goto label4;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        $z0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean hasMessages(int)>(1);

        if $z0 != 0 goto label3;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        r2 = virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$MyHandler: android.os.Message obtainMessage(int)>(1);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 5000L);

     label3:
        $r5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartWakeLocked(int,java.lang.String,int)>(i1, r1, i2);

     label4:
        return;
    }

    public void noteStopGpsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        $i2 = -1 + $i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting> = $i2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = -268435457 & $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopGps()>();

        return;
    }

    public void noteStopSensorLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        $i3 = -1 + $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting> = $i3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        if $i4 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = -536870913 & $i5;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l7);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSensor(int)>(i1);

        return;
    }

    public void noteStopWakeFromSourceLocked(android.os.WorkSource, int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, i2, i3, $i4;
        java.lang.String r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $i4 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i3);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,int)>($i4, i0, r2, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteStopWakeLocked(int, int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1;
        android.os.Message r2;
        android.os.BatteryStats$HistoryItem r3;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r4, $r6, $r7;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r5;
        long $l8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        if i2 != 0 goto label1;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        $i5 = -1 + $i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting> = $i5;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        if $i4 != 0 goto label1;

        r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = r3.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = -1073741825 & $i7;

        r3.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l8);

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        $z0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean hasMessages(int)>(1);

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        r2 = virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$MyHandler: android.os.Message obtainMessage(int)>(1);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 5000L);

     label2:
        $r5 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopWakeLocked(int,java.lang.String,int)>(i1, r1, i2);

     label3:
        return;
    }

    public void noteUserActivityLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteUserActivityLocked(int)>(i1);

        return;
    }

    public void noteVibratorOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVibratorOffLocked()>();

        return;
    }

    public void noteVibratorOnLocked(int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVibratorOnLocked(long)>(l1);

        return;
    }

    public void noteVideoOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mVideoOn>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i1 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i2 = -2097153 & $i1;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i2;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l3);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mVideoOn> = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOffLocked()>();

        return;
    }

    public void noteVideoOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mVideoOn>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i1 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i2 = 2097152 | $i1;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i2;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l3);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mVideoOn> = 1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOnLocked()>();

        return;
    }

    public void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, i2, $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i3 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedLocked(int,int)>($i3, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiBatchedScanStartedLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiBatchedScanStartedLocked(int)>(i1);

        return;
    }

    public void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiBatchedScanStoppedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiBatchedScanStoppedLocked()>();

        return;
    }

    public void noteWifiMulticastDisabledFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiMulticastDisabledLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        $i2 = -1 + $i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = $i2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = -8388609 & $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastDisabledLocked()>();

        return;
    }

    public void noteWifiMulticastEnabledFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiMulticastEnabledLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        if $i1 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = 8388608 | $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        $i3 = 1 + $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = $i3;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastEnabledLocked()>();

        return;
    }

    public void noteWifiOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i3 = -131073 & $i2;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i3;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l4);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        if $i0 < 0 goto label2;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid>;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i1);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiOnUid> = -1;

     label2:
        return;
    }

    public void noteWifiOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        boolean $z0;
        int $i0, $i1;
        long $l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i0 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i1 = 131072 | $i0;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l2);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

     label1:
        return;
    }

    public void noteWifiRunningChangedLocked(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1, r2;
        int i0, i1, i2, i3, $i5, $i6;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 == 0 goto label4;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i6 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i6);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = virtualinvoke r2.<android.os.WorkSource: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        $i5 = virtualinvoke r2.<android.os.WorkSource: int get(int)>(i3);

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i5);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiRunningChangedLocked -- called while WIFI not running");

     label5:
        return;
    }

    public void noteWifiRunningLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        android.os.BatteryStats$HistoryItem r2;
        int i0, i1, $i3, $i4, $i6;
        boolean $z0;
        long $l5;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 != 0 goto label2;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i4 = 67108864 | $i3;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i4;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l5);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i6 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i6);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiRunningLocked -- called while WIFI running");

     label3:
        return;
    }

    public void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiScanStartedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        if $i1 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = 16777216 | $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        $i3 = 1 + $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = $i3;

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiScanStartedLocked()>();

        return;
    }

    public void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiScanStoppedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.os.BatteryStats$HistoryItem r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        long $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        $i2 = -1 + $i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = $i2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        if $i3 != 0 goto label1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = -16777217 & $i4;

        r1.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l6);

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i0);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiScanStoppedLocked()>();

        return;
    }

    public void noteWifiStoppedLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        android.os.BatteryStats$HistoryItem r2;
        int i0, i1, $i3, $i4, $i6;
        boolean $z0;
        long $l5;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 == 0 goto label2;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i3 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i4 = -67108865 & $i3;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i4;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l5);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i6 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i6);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiStoppedLocked -- called while WIFI not running");

     label3:
        return;
    }

    public void prepareForDumpLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked()>();

        return;
    }

    public void readFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i15, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i34, $i35, $i36, $i38, $i39, $i40;
        boolean z0, $z1;
        com.android.internal.os.BatteryStatsImpl$Uid r2, r62;
        java.lang.String r3;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r4, r61;
        long $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l25, $l32, $l33;
        java.util.ArrayList $r5, $r7, $r9, $r11, $r13, $r15, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r28, $r30, $r32, $r35, $r41, $r42, $r45;
        java.util.HashMap $r21, $r33;
        android.util.SparseArray $r26, $r29, $r34;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r37, $r44, $r47;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r40;
        android.os.ParcelFormatException r49;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r50, r51, r53, r54, r55, r56, r58, r59, r60;
        com.android.internal.os.BatteryStatsImpl$Counter r52;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter r57;
        java.lang.Throwable r63;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i10 == -1166707595 goto label01;

        r49 = new android.os.ParcelFormatException;

        specialinvoke r49.<android.os.ParcelFormatException: void <init>(java.lang.String)>("Bad magic number");

        r63 = (java.lang.Throwable) r49;

        throw r63;

     label01:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistory(android.os.Parcel,boolean)>(r1, 0);

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i9;

        $l12 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime> = $l12;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastUptime> = 0L;

        $l11 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime> = $l11;

        r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryLastRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn> = 0;

        r50 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r50.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, -1, null, $r5, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer> = r50;

        i0 = 0;

     label02:
        if i0 >= 5 goto label03;

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        r51 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i39 = -100 - i0;

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r51.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, $i39, null, $r42, r1);

        $r44[i0] = r51;

        i0 = i0 + 1;

        goto label02;

     label03:
        r52 = new com.android.internal.os.BatteryStatsImpl$Counter;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r52.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList,android.os.Parcel)>($r7, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter> = r52;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        r53 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r53.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, -2, null, $r9, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer> = r53;

        i1 = 0;

     label04:
        if i1 >= 5 goto label05;

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        r54 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i40 = -200 - i1;

        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r54.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, $i40, null, $r45, r1);

        $r47[i1] = r54;

        i1 = i1 + 1;

        goto label04;

     label05:
        r55 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r55.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, -199, null, $r11, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer> = r55;

        i2 = 0;

     label06:
        if i2 >= 17 goto label07;

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        r56 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i38 = -300 - i2;

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r56.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, $i38, null, $r35, r1);

        $r37[i2] = r56;

        i2 = i2 + 1;

        goto label06;

     label07:
        i3 = 0;

     label08:
        if i3 >= 4 goto label09;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        r57 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r57.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(java.util.ArrayList,android.os.Parcel)>($r41, r1);

        $r40[i3] = r57;

        i3 = i3 + 1;

        goto label08;

     label09:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        r58 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r58.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, -2, null, $r13, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer> = r58;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        r59 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r59.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, -2, null, $r15, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer> = r59;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        r60 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke r60.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>(null, -2, null, $r18, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer> = r60;

        $l13 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l13;

        $l14 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = $l14;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastUptime> = 0L;

        $l17 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l17;

        $l18 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = $l18;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRealtime> = 0L;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label13;

        z0 = 1;

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = z0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        $l16 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = $l16;

        $l21 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = $l21;

        $l22 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = $l22;

        $l19 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = $l19;

        $l20 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l20;

        $l25 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l25;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $i26;

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $i23;

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i24;

        $i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i30;

        $i29 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = $i29;

        $i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i28;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = $i27;

        $i34 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i34;

        $l33 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l33;

        $l32 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataUptime> = $l32;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRadioDataStart> = -1L;

        $i31 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount> = $i31;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r21.<java.util.HashMap: void clear()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i5 = 0;

     label11:
        if i5 >= i4 goto label14;

        $i36 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label12;

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r61 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        specialinvoke r61.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(java.util.ArrayList,boolean,android.os.Parcel)>($r32, $z1, r1);

        r4 = r61;

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label12:
        i5 = i5 + 1;

        goto label11;

     label13:
        z0 = 0;

        goto label10;

     label14:
        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        virtualinvoke $r20.<java.util.ArrayList: void clear()>();

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers>;

        virtualinvoke $r19.<java.util.ArrayList: void clear()>();

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers>;

        virtualinvoke $r25.<java.util.ArrayList: void clear()>();

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers>;

        virtualinvoke $r24.<java.util.ArrayList: void clear()>();

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers>;

        virtualinvoke $r23.<java.util.ArrayList: void clear()>();

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers>;

        virtualinvoke $r22.<java.util.ArrayList: void clear()>();

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers>;

        virtualinvoke $r29.<android.util.SparseArray: void clear()>();

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers>;

        virtualinvoke $r30.<java.util.ArrayList: void clear()>();

        $i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps> = $i35;

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r26.<android.util.SparseArray: void clear()>();

        i7 = 0;

     label15:
        if i7 >= i6 goto label16;

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r62 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke r62.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i8);

        r2 = r62;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>($r28, r1);

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r34.<android.util.SparseArray: void append(int,java.lang.Object)>(i8, r2);

        i7 = i7 + 1;

        goto label15;

     label16:
        return;
    }

    void readHistory(android.os.Parcel, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, $r2, $r3, $r4;
        boolean z0;
        long l0, l3, $l5, $l8, $l9, $l10;
        int i1, i2, $i4, $i6;
        byte $b7;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11;
        java.lang.String $r7, $r12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataSize(int)>(0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r3.<android.os.Parcel: void setDataPosition(int)>(0);

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        if i1 < 442368 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: history data buffer too large ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r12);

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readOldHistory(android.os.Parcel)>(r1);

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = l0;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $b7 = $l5 cmp 0L;

        if $b7 <= 0 goto label3;

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l8 = $l9 - l3;

        $l10 = 60000L + $l8;

        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = $l10;

     label3:
        return;

     label4:
        $i4 = i1 & -4;

        if $i4 == i1 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: history data buffer not aligned ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r7);

        goto label1;

     label5:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r4.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(r1, i2, i1);

        $i6 = i2 + i1;

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>($i6);

        goto label1;
    }

    public void readLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.IOException r1, $r10;
        java.io.File r2;
        java.io.FileInputStream r3, $r9;
        byte[] r4;
        android.os.Parcel r5;
        com.android.internal.util.JournaledFile $r6, $r8;
        android.util.SparseArray $r7;
        boolean $z0;
        int $i0;
        long $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        if $r6 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "readLocked: no file associated with this instance");

     label1:
        return;

     label2:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r7.<android.util.SparseArray: void clear()>();

     label3:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        r2 = virtualinvoke $r8.<com.android.internal.util.JournaledFile: java.io.File chooseForRead()>();

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        r3 = $r9;

        r4 = staticinvoke <com.android.internal.os.BatteryStatsImpl: byte[] readFully(java.io.FileInputStream)>(r3);

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof r4;

        virtualinvoke r5.<android.os.Parcel: void unmarshall(byte[],int,int)>(r4, 0, $i0);

        virtualinvoke r5.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>(r5);

     label4:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte)>($l2, 2);

        return;

     label5:
        $r10 := @caughtexception;

        r1 = $r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStats", "Error reading battery statistics", r1);

        goto label4;

        catch java.io.IOException from label3 to label4 with label5;
    }

    void readOldHistory(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        return;
    }

    public void removeUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    public void reportExcessiveCpuLocked(int, java.lang.String, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String r1;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveCpuLocked(java.lang.String,long,long)>(r1, l1, l2);

     label1:
        return;
    }

    public void reportExcessiveWakeLocked(int, java.lang.String, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String r1;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveWakeLocked(java.lang.String,long,long)>(r1, l1, l2);

     label1:
        return;
    }

    public void resetAllStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.util.Iterator r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r24, $r28, $r30;
        com.android.internal.os.BatteryStatsImpl$Counter $r5;
        java.util.HashMap $r12, $r15, $r18;
        android.util.SparseArray $r13, $r21, $r22, $r23;
        java.util.Collection $r14;
        java.lang.Object $r16, $r19;
        java.util.ArrayList $r17;
        boolean $z8, $z10;
        com.android.internal.os.BatteryStatsImpl$Uid $r20;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r25, $r29, $r31;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r26;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r27;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initTimes()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i0 = 0;

     label01:
        if i0 >= 5 goto label02;

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r30 = $r31[i0];

        virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i0 = i0 + 1;

        goto label01;

     label02:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$Counter: void reset(boolean)>(0);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i1 = 0;

     label03:
        if i1 >= 5 goto label04;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r28 = $r29[i1];

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i1 = i1 + 1;

        goto label03;

     label04:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i2 = 0;

     label05:
        if i2 >= 17 goto label06;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r24 = $r25[i2];

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i2 = i2 + 1;

        goto label05;

     label06:
        i3 = 0;

     label07:
        if i3 >= 4 goto label08;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r26 = $r27[i3];

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void reset(boolean)>(0);

        i3 = i3 + 1;

        goto label07;

     label08:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r0, 0);

        i4 = 0;

     label09:
        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i5 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if i4 >= $i5 goto label11;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r19 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r20 = (com.android.internal.os.BatteryStatsImpl$Uid) $r19;

        $z10 = virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$Uid: boolean reset()>();

        if $z10 == 0 goto label10;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i7 = virtualinvoke $r23.<android.util.SparseArray: int keyAt(int)>(i4);

        virtualinvoke $r22.<android.util.SparseArray: void remove(int)>($i7);

        i4 = i4 + -1;

     label10:
        i4 = i4 + 1;

        goto label09;

     label11:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i6 = virtualinvoke $r12.<java.util.HashMap: int size()>();

        if $i6 <= 0 goto label14;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r14 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label13;

        $r16 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r16;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        goto label12;

     label13:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r18.<java.util.HashMap: void clear()>();

     label14:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initDischarge()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        return;
    }

    public void setBatteryState(int, int, int, int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, i3, i4, i5, i6, $i11, $i15, $i18, $i20, $i32, $i33, $i34, $i35;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.Throwable r1, $r25;
        byte b7, $b8, $b9, $b10, $b21, $b23, $b24, $b25, $b26, $b27, $b28, $b30;
        android.os.BatteryStats$HistoryItem r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        char $c12, $c13, $c14, $c16, $c17, $c22, $c29, $c31;
        long $l19;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        z0 = 1;

        entermonitor r0;

        if i2 != 0 goto label37;

     label01:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        i6 = $r4.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z3 != 0 goto label05;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 1;

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if z0 != $z4 goto label36;

     label02:
        if z0 == 0 goto label12;

     label03:
        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i34 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i35 = -524289 & $i34;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i35;

     label04:
        goto label36;

     label05:
        if z0 == 0 goto label07;

     label06:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

     label07:
        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if z0 == $z2 goto label17;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b25 = (byte) i3;

        $r20.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b25;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b28 = (byte) i0;

        $r19.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b28;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b27 = (byte) i1;

        $r22.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b27;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b30 = (byte) i2;

        $r21.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b30;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c29 = (char) i4;

        $r24.<android.os.BatteryStats$HistoryItem: char batteryTemperature> = $c29;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c31 = (char) i5;

        $r23.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c31;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void setOnBatteryLocked(boolean,int,int)>(z0, i6, i3);

     label08:
        if z0 != 0 goto label10;

        if i0 != 5 goto label10;

     label09:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i32 = r3.<android.os.BatteryStats$HistoryItem: int states>;

        $i33 = 524288 | $i32;

        r3.<android.os.BatteryStats$HistoryItem: int states> = $i33;

     label13:
        goto label36;

     label14:
        $r25 := @caughtexception;

        r1 = $r25;

     label15:
        exitmonitor r0;

     label16:
        throw r1;

     label17:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        b7 = $r6.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

     label18:
        z1 = 0;

        if b7 == i3 goto label21;

     label19:
        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b26 = (byte) i3;

        $r17.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b26;

     label20:
        z1 = 1;

     label21:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b8 = $r5.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if $b8 == i0 goto label23;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b23 = (byte) i0;

        $r18.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b23;

     label22:
        z1 = 1;

     label23:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b9 = $r7.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        if $b9 == i1 goto label25;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b24 = (byte) i1;

        $r15.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b24;

     label24:
        z1 = 1;

     label25:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b10 = $r8.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if $b10 == i2 goto label27;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b21 = (byte) i2;

        $r16.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b21;

     label26:
        z1 = 1;

     label27:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c12 = $r9.<android.os.BatteryStats$HistoryItem: char batteryTemperature>;

        $i11 = 10 + $c12;

        if i4 >= $i11 goto label28;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c22 = $r14.<android.os.BatteryStats$HistoryItem: char batteryTemperature>;

        $i20 = -10 + $c22;

        if i4 > $i20 goto label30;

     label28:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c13 = (char) i4;

        $r10.<android.os.BatteryStats$HistoryItem: char batteryTemperature> = $c13;

     label29:
        z1 = 1;

     label30:
        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c14 = $r11.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i15 = 20 + $c14;

        if i5 > $i15 goto label31;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c17 = $r13.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i18 = -20 + $c17;

        if i5 >= $i18 goto label33;

     label31:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c16 = (char) i5;

        $r12.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c16;

     label32:
        z1 = 1;

     label33:
        if z1 == 0 goto label08;

     label34:
        $l19 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>($l19);

     label35:
        goto label08;

     label36:
        i6 = i0;

        goto label05;

     label37:
        z0 = 0;

        goto label01;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
        catch java.lang.Throwable from label19 to label20 with label14;
        catch java.lang.Throwable from label21 to label22 with label14;
        catch java.lang.Throwable from label23 to label24 with label14;
        catch java.lang.Throwable from label25 to label26 with label14;
        catch java.lang.Throwable from label27 to label28 with label14;
        catch java.lang.Throwable from label28 to label29 with label14;
        catch java.lang.Throwable from label30 to label31 with label14;
        catch java.lang.Throwable from label31 to label32 with label14;
        catch java.lang.Throwable from label34 to label35 with label14;
    }

    public void setBtHeadset(android.bluetooth.BluetoothHeadset)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.bluetooth.BluetoothHeadset r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.bluetooth.BluetoothHeadset;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        if $r2 != null goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart>;

        if $i0 != -1 goto label1;

        $i1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = $i1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset> = r1;

        return;
    }

    public void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$BatteryCallback;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback> = r1;

        return;
    }

    public void setNumSpeedSteps(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        if $i1 != 0 goto label1;

        <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps> = i0;

     label1:
        return;
    }

    void setOnBattery(boolean, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;
        int i0, i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void setOnBatteryLocked(boolean,int,int)>(z0, i0, i1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setOnBatteryLocked(boolean, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1, $z3, $z4, $z5;
        int i0, i1, i6, $i9, $i10, $i20, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i37, $i38;
        android.os.Message r1;
        byte b2, $b8, $b26, $b32;
        long l3, l4, l5, $l7, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l21, $l22, $l23, $l35, $l36, $l39, $l40;
        android.os.BatteryStats$HistoryItem r2, r3, $r6, $r8;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r4, $r5;
        com.android.internal.util.JournaledFile $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        r1 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$MyHandler: android.os.Message obtainMessage(int)>(2);

        if z0 == 0 goto label08;

        b2 = 1;

     label01:
        r1.<android.os.Message: int arg1> = b2;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean sendMessage(android.os.Message)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = z0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = z0;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l3 = 1000L * $l7;

        l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l5 = l4 * 1000L;

        if z0 == 0 goto label10;

        if i0 == 5 goto label02;

        if i1 >= 90 goto label02;

        i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        z1 = 0;

        if i6 >= 20 goto label03;

        z1 = 0;

        if i1 < 80 goto label03;

     label02:
        z1 = 1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = i1;

     label03:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked()>();

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b32 = (byte) i1;

        $r8.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b32;

        r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i38 = r3.<android.os.BatteryStats$HistoryItem: int states>;

        $i37 = -524289 & $i38;

        r3.<android.os.BatteryStats$HistoryItem: int states> = $i37;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>(l4);

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart> = l3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart> = l5;

        $l36 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>(l3);

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime> = $l36;

        $l35 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l5);

        r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime> = $l35;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i1;

        $z5 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z5 == 0 goto label09;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

     label04:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        $l39 = r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime>;

        $l40 = r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void doUnplugLocked(long,long,long)>(l5, $l39, $l40);

     label05:
        if z1 != 0 goto label06;

        $l21 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        $l22 = 60000L + $l21;

        $b26 = $l22 cmp l4;

        if $b26 >= 0 goto label07;

     label06:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        if $r7 == null goto label07;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label07:
        return;

     label08:
        b2 = 0;

        goto label01;

     label09:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = i1;

        goto label04;

     label10:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b8 = (byte) i1;

        $r6.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b8;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i10 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i9 = 524288 | $i10;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i9;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>(l4);

        $l14 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime>;

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        $l11 = l3 - $l12;

        $l13 = $l14 + $l11;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastUptime> = $l13;

        $l15 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime>;

        $l17 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        $l18 = l5 - $l17;

        $l16 = $l15 + $l18;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryPastRealtime> = $l16;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i1;

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if i1 >= $i20 goto label11;

        $i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        $i27 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i24 = $i27 - i1;

        $i25 = -1 + $i24;

        $i30 = $i31 + $i25;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i30;

        $i34 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        $i29 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i28 = $i29 - i1;

        $i33 = $i34 + $i28;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i33;

     label11:
        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>($z3, $z4);

        $l19 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>(l3);

        $l23 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l5);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void doPlugLocked(long,long,long)>(l5, $l19, $l23);

        z1 = 0;

        goto label05;
    }

    public void setRadioScanningTimeout(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void setTimeout(long)>(l0);

     label1:
        return;
    }

    public void shutdownLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown> = 1;

        return;
    }

    public int startAddingCpuLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r3;
        boolean $z0, $z1;
        java.util.ArrayList $r4, $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$MyHandler: void removeMessages(int)>(1);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mScreenOn>;

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label3;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        return 0;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r6;

        $z1 = r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z1 == 0 goto label5;

        r2 = r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if r2 == null goto label5;

        $i2 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i2 == 1000 goto label5;

        return 50;

     label5:
        i1 = i1 + 1;

        goto label4;
    }

    public boolean startIteratingHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r1.<android.os.Parcel: void setDataPosition(int)>(0);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r2.<android.os.Parcel: int dataSize()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean startIteratingOldHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, $r3;
        android.os.Parcel $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke $r3.<android.os.BatteryStats$HistoryItem: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 1;

        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistory>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = r1;

        if r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    void stopAllSignalStrengthTimersLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= 5 goto label4;

        if i1 != i0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i1];

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>(r0);

        goto label3;

     label4:
        return;
    }

    void updateDischargeScreenLevelsLocked(boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i1 = $i11 - $i10;

        if i1 <= 0 goto label1;

        $i12 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        $i14 = i1 + $i12;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = $i14;

        $i13 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        $i15 = i1 + $i13;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i15;

     label1:
        if z1 == 0 goto label3;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = $i5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        return;

     label2:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i0 = $i3 - $i2;

        if i0 <= 0 goto label1;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        $i7 = i0 + $i6;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = $i7;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        $i9 = i0 + $i8;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i9;

        goto label1;

     label3:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = $i4;

        return;
    }

    public void updateKernelWakelocksLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.Map r1;
        java.util.Iterator r2, r3;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r4, r8, $r22;
        java.util.Map$Entry r5, $r13;
        java.lang.String r6;
        com.android.internal.os.BatteryStatsImpl$KernelWakelockStats r7;
        java.util.Set $r9, $r11;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        java.util.HashMap $r10, $r12, $r20, $r23;
        java.lang.Object $r14, $r15, $r16, $r17, $r18, $r19;
        long $l4;
        java.util.ArrayList $r21;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map readKernelWakelockStats()>();

        if r1 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Couldn\'t get kernel wake lock stats");

     label1:
        return;

     label2:
        $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r16;

        $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r18;

        $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (com.android.internal.os.BatteryStatsImpl$KernelWakelockStats) $r17;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r19 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r8 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r19;

        if r8 != null goto label4;

        $r22 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        specialinvoke $r22.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(java.util.ArrayList,boolean,boolean)>($r21, $z2, 1);

        r8 = $r22;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8);

     label4:
        $i5 = r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount>;

        virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedCount(int)>($i5);

        $l4 = r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime>;

        virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedTotalTime(long)>($l4);

        $i6 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setUpdateVersion(int)>($i6);

        goto label3;

     label5:
        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i1 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        if $i0 == $i1 goto label1;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r11 = virtualinvoke $r12.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r15;

        $i2 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()>();

        $i3 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        if $i2 == $i3 goto label6;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setStale()>();

        goto label6;
    }

    public void writeAsyncLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeLocked(boolean)>(0);

        return;
    }

    void writeHistory(android.os.Parcel, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, $r2, $r3, $r4;
        boolean z0;
        long $l0, $l1, $l2;
        int $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryTime>;

        $l2 = $l1 + $l0;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i3 = virtualinvoke $r2.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i4 = virtualinvoke $r3.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r4, 0, $i4);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeOldHistory(android.os.Parcel)>(r1);

     label1:
        return;
    }

    void writeLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        android.os.Parcel r1, $r3, $r5;
        com.android.internal.util.JournaledFile $r2;
        long $l0;
        com.android.internal.os.BatteryStatsImpl$1 $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "writeLocked: no file associated with this instance");

     label1:
        return;

     label2:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown>;

        if $z1 != 0 goto label1;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel)>(r1);

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite>;

        if $r3 == null goto label3;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite>;

        virtualinvoke $r5.<android.os.Parcel: void recycle()>();

     label3:
        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = r1;

        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void commitPendingDataToDisk()>();

        return;

     label4:
        $r4 = new com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$1: void <init>(com.android.internal.os.BatteryStatsImpl,java.lang.String)>(r0, "BatteryStats-Write");

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;
    }

    void writeOldHistory(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        return;
    }

    public void writeSummaryToParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        long l0, l1, l2, l3, $l20, $l21, $l22, $l25, $l26, $l27, $l38, $l40, $l41, $l42;
        int i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, $i23, $i24, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39, $i43, $i44;
        java.util.Iterator r2, r4, r7, r11, r15, r18;
        com.android.internal.os.BatteryStatsImpl$Uid r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg r5;
        java.util.Map$Entry r6, r9, r12, r13, r17, r19;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r8;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r10;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r14;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock r16;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r20, $r22, $r26, $r27, $r28, $r29, $r33, $r34, $r35, $r36, $r37, $r39, $r40, $r80, $r81, $r82, $r85, $r86, $r89, $r90, $r91, $r92, $r93, $r95, $r98, $r99, $r100, $r110, $r112, $r113, $r115, $r116, $r121;
        com.android.internal.os.BatteryStatsImpl$Counter $r21, $r102;
        java.util.HashMap $r23, $r24, $r41, $r42, $r45, $r49, $r50, $r51, $r53, $r65, $r69, $r87;
        java.util.Set $r25, $r48, $r52, $r64, $r68, $r88;
        android.util.SparseArray $r30, $r31, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r38, $r47, $r54, $r55, $r57, $r59, $r60, $r62, $r63, $r70, $r71, $r72, $r76, $r77, $r79, $r84, $r107, $r114, $r117, $r119;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r43, $r103;
        com.android.internal.os.BatteryStatsImpl$BatchTimer $r44, $r101;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r46, $r97, $r105;
        java.lang.String $r56, $r58, $r61, $r78, $r118;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter $r66, $r74;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r67, $r73, $r75;
        java.lang.Integer $r83;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r94, $r96, $r109, $r111, $r122;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r104, $r106;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r108;
        com.android.internal.os.BatteryStatsImpl$Timer $r120;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked()>();

        $l21 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l0 = 1000L * $l21;

        $l20 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = 1000L * $l20;

        l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>(l0);

        l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(67);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistory(android.os.Parcel,boolean)>(r1, 1);

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $l22 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>(l0, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l22);

        $l27 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>(l1, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l27);

        $l26 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>(l0, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l26);

        $l25 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>(l1, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l25);

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $i30 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $i29 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $i28 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $i32 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        i4 = 0;

     label01:
        if i4 >= 5 goto label02;

        $r122 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r121 = $r122[i4];

        virtualinvoke $r121.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        i4 = i4 + 1;

        goto label01;

     label02:
        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        i5 = 0;

     label03:
        if i5 >= 5 goto label04;

        $r109 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r110 = $r109[i5];

        virtualinvoke $r110.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        i5 = i5 + 1;

        goto label03;

     label04:
        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        i6 = 0;

     label05:
        if i6 >= 17 goto label06;

        $r111 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r112 = $r111[i6];

        virtualinvoke $r112.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        i6 = i6 + 1;

        goto label05;

     label06:
        i7 = 0;

     label07:
        if i7 >= 4 goto label08;

        $r105 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r106 = $r105[i7];

        virtualinvoke $r106.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i7 = i7 + 1;

        goto label07;

     label08:
        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i33 = virtualinvoke $r23.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i33);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r25 = virtualinvoke $r24.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r114 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r114;

        $r119 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r120 = (com.android.internal.os.BatteryStatsImpl$Timer) $r119;

        if $r120 == null goto label10;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r117 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r118 = (java.lang.String) $r117;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r118);

        $r107 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r108 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r107;

        virtualinvoke $r108.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        goto label09;

     label10:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label09;

     label11:
        $i35 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i35);

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i8 = virtualinvoke $r32.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i8);

        i9 = 0;

     label12:
        if i9 >= i8 goto label58;

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i34 = virtualinvoke $r30.<android.util.SparseArray: int keyAt(int)>(i9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i34);

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r38 = virtualinvoke $r31.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r38;

        $r37 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        if $r37 == null goto label18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r113 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        virtualinvoke $r113.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label13:
        $r40 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        if $r40 == null goto label19;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r116 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r116.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label14:
        $r39 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiScanTimer>;

        if $r39 == null goto label20;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r115 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiScanTimer>;

        virtualinvoke $r115.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label15:
        i11 = 0;

     label16:
        if i11 >= 5 goto label22;

        $r96 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r95 = $r96[i11];

        if $r95 == null goto label21;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r94 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r93 = $r94[i11];

        virtualinvoke $r93.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label17:
        i11 = i11 + 1;

        goto label16;

     label18:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label13;

     label19:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label14;

     label20:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label15;

     label21:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label17;

     label22:
        $r34 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        if $r34 == null goto label33;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r89 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        virtualinvoke $r89.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label23:
        $r33 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioTurnedOnTimer>;

        if $r33 == null goto label34;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r90 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioTurnedOnTimer>;

        virtualinvoke $r90.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label24:
        $r36 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoTurnedOnTimer>;

        if $r36 == null goto label35;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r91 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoTurnedOnTimer>;

        virtualinvoke $r91.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label25:
        $r35 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundActivityTimer>;

        if $r35 == null goto label36;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r92 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundActivityTimer>;

        virtualinvoke $r92.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label26:
        $r44 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer mVibratorOnTimer>;

        if $r44 == null goto label37;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r101 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer mVibratorOnTimer>;

        virtualinvoke $r101.<com.android.internal.os.BatteryStatsImpl$BatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label27:
        $r43 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r43 != null goto label38;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label28:
        $r46 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        if $r46 != null goto label40;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label29:
        $r45 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        i12 = virtualinvoke $r45.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i12);

        if i12 <= 0 goto label45;

        $r87 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mWakelockStats>;

        $r88 = virtualinvoke $r87.<java.util.HashMap: java.util.Set entrySet()>();

        r18 = interfaceinvoke $r88.<java.util.Set: java.util.Iterator iterator()>();

     label30:
        $z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label45;

        $r76 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r76;

        $r77 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r78 = (java.lang.String) $r77;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r78);

        $r79 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        r16 = (com.android.internal.os.BatteryStatsImpl$Uid$Wakelock) $r79;

        $r80 = r16.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerFull>;

        if $r80 == null goto label42;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r98 = r16.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerFull>;

        virtualinvoke $r98.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label31:
        $r81 = r16.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerPartial>;

        if $r81 == null goto label43;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r99 = r16.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerPartial>;

        virtualinvoke $r99.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

     label32:
        $r82 = r16.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerWindow>;

        if $r82 == null goto label44;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r100 = r16.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerWindow>;

        virtualinvoke $r100.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        goto label30;

     label33:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label23;

     label34:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label24;

     label35:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label25;

     label36:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label26;

     label37:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label27;

     label38:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        i10 = 0;

     label39:
        if i10 >= 3 goto label28;

        $r103 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r102 = $r103[i10];

        virtualinvoke $r102.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i10 = i10 + 1;

        goto label39;

     label40:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        i13 = 0;

     label41:
        if i13 >= 4 goto label29;

        $r97 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r104 = $r97[i13];

        virtualinvoke $r104.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i13 = i13 + 1;

        goto label41;

     label42:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label31;

     label43:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label32;

     label44:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label30;

     label45:
        $r41 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        i15 = virtualinvoke $r41.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i15);

        if i15 <= 0 goto label48;

        $r69 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mSensorStats>;

        $r68 = virtualinvoke $r69.<java.util.HashMap: java.util.Set entrySet()>();

        r15 = interfaceinvoke $r68.<java.util.Set: java.util.Iterator iterator()>();

     label46:
        $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label48;

        $r71 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r71;

        $r70 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r83 = (java.lang.Integer) $r70;

        $i44 = virtualinvoke $r83.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i44);

        $r84 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        r14 = (com.android.internal.os.BatteryStatsImpl$Uid$Sensor) $r84;

        $r85 = r14.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimer>;

        if $r85 == null goto label47;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r86 = r14.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimer>;

        virtualinvoke $r86.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l3);

        goto label46;

     label47:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label46;

     label48:
        $r42 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        i14 = virtualinvoke $r42.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i14);

        if i14 <= 0 goto label54;

        $r65 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mProcessStats>;

        $r64 = virtualinvoke $r65.<java.util.HashMap: java.util.Set entrySet()>();

        r11 = interfaceinvoke $r64.<java.util.Set: java.util.Iterator iterator()>();

     label49:
        $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label54;

        $r63 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r63;

        $r62 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r61 = (java.lang.String) $r62;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r61);

        $r72 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r72;

        $l40 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l40);

        $l42 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l42);

        $l41 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l41);

        $i43 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i43);

        $r73 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        i18 = lengthof $r73;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i18);

        i19 = 0;

     label50:
        if i19 >= i18 goto label53;

        $r75 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r74 = $r75[i19];

        if $r74 == null goto label52;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r67 = r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r66 = $r67[i19];

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label51:
        i19 = i19 + 1;

        goto label50;

     label52:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label51;

     label53:
        virtualinvoke r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeExcessivePowerToParcelLocked(android.os.Parcel)>(r1);

        goto label49;

     label54:
        $r50 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        i16 = virtualinvoke $r50.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i16);

        if i16 <= 0 goto label57;

        $r49 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: java.util.HashMap mPackageStats>;

        $r48 = virtualinvoke $r49.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r48.<java.util.Set: java.util.Iterator iterator()>();

     label55:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label57;

        $r47 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r47;

        $r55 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r56 = (java.lang.String) $r55;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r56);

        $r54 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r54;

        $i36 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i36);

        $r53 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        i17 = virtualinvoke $r53.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i17);

        if i17 <= 0 goto label55;

        $r51 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        $r52 = virtualinvoke $r51.<java.util.HashMap: java.util.Set entrySet()>();

        r7 = interfaceinvoke $r52.<java.util.Set: java.util.Iterator iterator()>();

     label56:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label55;

        $r60 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r60;

        $r59 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r58 = (java.lang.String) $r59;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r58);

        $r57 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv) $r57;

        $l38 = virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>(l2);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l38);

        $i37 = r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i37);

        $i39 = r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i39);

        goto label56;

     label57:
        i9 = i9 + 1;

        goto label12;

     label58:
        return;
    }

    public void writeSyncLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeLocked(boolean)>(1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>(r1, 1, i0);

        return;
    }

    void writeToParcelLocked(android.os.Parcel, boolean, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2;
        int i0, i5, i6, i7, i8, i9, i11, $i15, $i23, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i37, $i38;
        long l1, l2, l3, l4, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l24, $l25, $l30, $l36;
        byte b10;
        java.util.Iterator r2;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r3;
        java.util.Map$Entry r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r5, $r6, $r7, $r9, $r10, $r11, $r23, $r28, $r30;
        com.android.internal.os.BatteryStatsImpl$Counter $r8;
        android.util.SparseArray $r12, $r13, $r14;
        java.util.HashMap $r15, $r19;
        java.util.Set $r16;
        java.lang.Object $r17, $r24, $r25, $r26;
        com.android.internal.os.BatteryStatsImpl$Uid $r18;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r20;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r21;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r22, $r29, $r31;
        java.lang.String $r27;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked()>();

        $l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = 1000L * $l12;

        $l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = 1000L * $l13;

        l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>(l1);

        l4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>(l2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1166707595);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistory(android.os.Parcel,boolean)>(r1, 0);

        $i15 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $l14 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l14);

        $l16 = r0.<com.android.internal.os.BatteryStatsImpl: long mBatteryRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l16);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        i5 = 0;

     label01:
        if i5 >= 5 goto label02;

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r30 = $r31[i5];

        virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        i5 = i5 + 1;

        goto label01;

     label02:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Counter mInputEventCounter>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Counter: void writeToParcel(android.os.Parcel)>(r1);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        i6 = 0;

     label03:
        if i6 >= 5 goto label04;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r28 = $r29[i6];

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        i6 = i6 + 1;

        goto label03;

     label04:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        i7 = 0;

     label05:
        if i7 >= 17 goto label06;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r23 = $r22[i7];

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        i7 = i7 + 1;

        goto label05;

     label06:
        i8 = 0;

     label07:
        if i8 >= 4 goto label08;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkActivityCounters>;

        $r21 = $r20[i8];

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        i8 = i8 + 1;

        goto label07;

     label08:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l4);

        $l17 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l17);

        $l18 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l18);

        $l20 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l20);

        $l21 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l21);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z1 == 0 goto label11;

        b10 = 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b10);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l3);

        $l19 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryUptimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l19);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l4);

        $l24 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackBatteryRealtimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l24);

        $l25 = r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l25);

        $l22 = r0.<com.android.internal.os.BatteryStatsImpl: long mUnpluggedBatteryRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l22);

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i29 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $i28 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $i27 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $i26 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        $i33 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i33);

        $i32 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $l30 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l30);

        $l36 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptime()>();

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l36);

        $i35 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i35);

        if z0 == 0 goto label13;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i38 = virtualinvoke $r19.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i38);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r24 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r25;

        if r3 == null goto label12;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r26 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.String) $r26;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r27);

        staticinvoke <com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>(r1, r3, l4);

        goto label10;

     label11:
        b10 = 0;

        goto label09;

     label12:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label10;

     label13:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        $i34 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i34);

        if z0 == 0 goto label16;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i9 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i9);

        i11 = 0;

     label15:
        if i11 >= i9 goto label17;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i37 = virtualinvoke $r14.<android.util.SparseArray: int keyAt(int)>(i11);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i37);

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r17 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        $r18 = (com.android.internal.os.BatteryStatsImpl$Uid) $r17;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$Uid: void writeToParcelLocked(android.os.Parcel,long)>(r1, l4);

        i11 = i11 + 1;

        goto label15;

     label16:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label17:
        return;
    }

    public void writeToParcelWithoutUids(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>(r1, 0, i0);

        return;
    }
}
