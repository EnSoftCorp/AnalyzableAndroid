class com.android.internal.location.ILocationProvider$Stub$Proxy extends java.lang.Object implements com.android.internal.location.ILocationProvider
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        $r1 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void disable() throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

        $r4 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void enable() throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

        $r4 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        return "com.android.internal.location.ILocationProvider";
    }

    public com.android.internal.location.ProviderProperties getProperties() throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        com.android.internal.location.ProviderProperties r4;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

        $r5 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r6 = <com.android.internal.location.ProviderProperties: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r4 = (com.android.internal.location.ProviderProperties) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        r4 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public int getStatus(android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0, $i1;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 := @parameter0: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

        $r5 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label2;

        virtualinvoke r1.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getStatusUpdateTime() throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        long l0;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

        $r4 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l0 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean sendExtraCommand(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        int $i0, $i1;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        z0 = 1;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label02:
        if r2 == null goto label07;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        $r6 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label10;

     label05:
        $i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label06;

        virtualinvoke r2.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r4);

     label06:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z0;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label04;

     label09:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label10:
        z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void setRequest(com.android.internal.location.ProviderRequest, android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.location.ILocationProvider$Stub$Proxy r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.location.ILocationProvider$Stub$Proxy;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r2 := @parameter1: android.os.WorkSource;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.location.ILocationProvider");

     label02:
        if r1 == null goto label08;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.internal.location.ProviderRequest: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        if r2 == null goto label11;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label06:
        $r6 = r0.<com.android.internal.location.ILocationProvider$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        goto label04;

     label10:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        goto label06;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
