public class com.android.internal.view.InputConnectionWrapper extends java.lang.Object implements android.view.inputmethod.InputConnection
{
    private static final int MAX_WAIT_TIME_MILLIS;
    private final com.android.internal.view.IInputContext mIInputContext;

    public void <init>(com.android.internal.view.IInputContext)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext r1;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext> = r1;

        return;
    }

    public boolean beginBatchEdit()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void beginBatchEdit()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean clearMetaKeyStates(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void clearMetaKeyStates(int)>(i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        android.view.inputmethod.CompletionInfo r1;
        com.android.internal.view.IInputContext $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

     label1:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void commitCompletion(android.view.inputmethod.CompletionInfo)>(r1);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        android.view.inputmethod.CorrectionInfo r1;
        com.android.internal.view.IInputContext $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

     label1:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void commitCorrection(android.view.inputmethod.CorrectionInfo)>(r1);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        com.android.internal.view.IInputContext $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void commitText(java.lang.CharSequence,int)>(r1, i0);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean deleteSurroundingText(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void deleteSurroundingText(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean endBatchEdit()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void endBatchEdit()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean finishComposingText()
    {
        com.android.internal.view.InputConnectionWrapper r0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void finishComposingText()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getCursorCapsMode(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1, $i2;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback r2;
        java.lang.Throwable r3, $r6;
        boolean z0;
        com.android.internal.view.IInputContext $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label01:
        r2 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

        $r4 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $i2 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>(i0, $i2, r2);

        entermonitor r2;

     label02:
        virtualinvoke r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        z0 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

     label03:
        i1 = 0;

        if z0 == 0 goto label05;

     label04:
        i1 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mCursorCapsMode>;

     label05:
        exitmonitor r2;

     label06:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>(r2);

     label07:
        return i1;

     label08:
        $r6 := @caughtexception;

        r3 = $r6;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0, $i1;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback r3;
        java.lang.Throwable r4, $r7;
        boolean z0;
        android.view.inputmethod.ExtractedText r5;
        com.android.internal.view.IInputContext $r6;
        android.os.RemoteException $r8;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

     label01:
        r3 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

        $r6 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $i1 = r3.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r6.<com.android.internal.view.IInputContext: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>(r1, i0, $i1, r3);

        entermonitor r3;

     label02:
        virtualinvoke r3.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        z0 = r3.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

     label03:
        r5 = null;

        if z0 == 0 goto label05;

     label04:
        r5 = r3.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: android.view.inputmethod.ExtractedText mExtractedText>;

     label05:
        exitmonitor r3;

     label06:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>(r3);

     label07:
        return r5;

     label08:
        $r7 := @caughtexception;

        r4 = $r7;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

     label11:
        $r8 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, $i1;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback r2;
        java.lang.Throwable r3, $r7;
        boolean z0;
        java.lang.CharSequence r4;
        com.android.internal.view.IInputContext $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label01:
        r2 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

        $r5 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $i1 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)>(i0, $i1, r2);

        entermonitor r2;

     label02:
        virtualinvoke r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        z0 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

     label03:
        r4 = null;

        if z0 == 0 goto label05;

     label04:
        r4 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: java.lang.CharSequence mSelectedText>;

     label05:
        exitmonitor r2;

     label06:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>(r2);

     label07:
        return r4;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1, $i2;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback r2;
        java.lang.Throwable r3, $r7;
        boolean z0;
        java.lang.CharSequence r4;
        com.android.internal.view.IInputContext $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label01:
        r2 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

        $r5 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $i2 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>(i0, i1, $i2, r2);

        entermonitor r2;

     label02:
        virtualinvoke r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        z0 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

     label03:
        r4 = null;

        if z0 == 0 goto label05;

     label04:
        r4 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: java.lang.CharSequence mTextAfterCursor>;

     label05:
        exitmonitor r2;

     label06:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>(r2);

     label07:
        return r4;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1, $i2;
        com.android.internal.view.InputConnectionWrapper$InputContextCallback r2;
        java.lang.Throwable r3, $r7;
        boolean z0;
        java.lang.CharSequence r4;
        com.android.internal.view.IInputContext $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label01:
        r2 = staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>();

        $r5 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        $i2 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: int mSeq>;

        interfaceinvoke $r5.<com.android.internal.view.IInputContext: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>(i0, i1, $i2, r2);

        entermonitor r2;

     label02:
        virtualinvoke r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>();

        z0 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: boolean mHaveValue>;

     label03:
        r4 = null;

        if z0 == 0 goto label05;

     label04:
        r4 = r2.<com.android.internal.view.InputConnectionWrapper$InputContextCallback: java.lang.CharSequence mTextBeforeCursor>;

     label05:
        exitmonitor r2;

     label06:
        staticinvoke <com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>(r2);

     label07:
        return r4;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label11;
    }

    public boolean performContextMenuAction(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void performContextMenuAction(int)>(i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean performEditorAction(int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void performEditorAction(int)>(i0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        java.lang.String r1;
        android.os.Bundle r2;
        com.android.internal.view.IInputContext $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

     label1:
        $r4 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r4.<com.android.internal.view.IInputContext: void performPrivateCommand(java.lang.String,android.os.Bundle)>(r1, r2);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean reportFullscreenMode(boolean)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        boolean z0;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void reportFullscreenMode(boolean)>(z0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        android.view.KeyEvent r1;
        com.android.internal.view.IInputContext $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: android.view.KeyEvent;

     label1:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void sendKeyEvent(android.view.KeyEvent)>(r1);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setComposingRegion(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void setComposingRegion(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        com.android.internal.view.IInputContext $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r3.<com.android.internal.view.IInputContext: void setComposingText(java.lang.CharSequence,int)>(r1, i0);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setSelection(int, int)
    {
        com.android.internal.view.InputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContext $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.InputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<com.android.internal.view.InputConnectionWrapper: com.android.internal.view.IInputContext mIInputContext>;

        interfaceinvoke $r2.<com.android.internal.view.IInputContext: void setSelection(int,int)>(i0, i1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.InputConnectionWrapper: int MAX_WAIT_TIME_MILLIS> = 2000;

        return;
    }
}
