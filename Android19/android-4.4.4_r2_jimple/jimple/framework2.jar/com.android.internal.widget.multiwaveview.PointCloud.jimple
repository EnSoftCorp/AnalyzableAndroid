public class com.android.internal.widget.multiwaveview.PointCloud extends java.lang.Object
{
    private static final int INNER_POINTS;
    private static final float MAX_POINT_SIZE;
    private static final float MIN_POINT_SIZE;
    private static final float PI;
    private static final java.lang.String TAG;
    com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager;
    private float mCenterX;
    private float mCenterY;
    private android.graphics.drawable.Drawable mDrawable;
    private float mOuterRadius;
    private android.graphics.Paint mPaint;
    private java.util.ArrayList mPointCloud;
    private float mScale;
    com.android.internal.widget.multiwaveview.PointCloud$WaveManager waveManager;

    public void <init>(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        android.graphics.drawable.Drawable r1, $r10;
        java.util.ArrayList $r2;
        com.android.internal.widget.multiwaveview.PointCloud$WaveManager $r3;
        com.android.internal.widget.multiwaveview.PointCloud$GlowManager $r4;
        android.graphics.Paint $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.multiwaveview.PointCloud: java.util.ArrayList mPointCloud> = $r2;

        r0.<com.android.internal.widget.multiwaveview.PointCloud: float mScale> = 1.0F;

        $r3 = new com.android.internal.widget.multiwaveview.PointCloud$WaveManager;

        specialinvoke $r3.<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: void <init>(com.android.internal.widget.multiwaveview.PointCloud)>(r0);

        r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$WaveManager waveManager> = $r3;

        $r4 = new com.android.internal.widget.multiwaveview.PointCloud$GlowManager;

        specialinvoke $r4.<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: void <init>(com.android.internal.widget.multiwaveview.PointCloud)>(r0);

        r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint> = $r5;

        $r6 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r7 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 255, 255);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $r8 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r9 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setDither(boolean)>(1);

        r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable> = r1;

        $r10 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable>;

        if $r10 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i2);

     label1:
        return;
    }

    private static float hypot(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        $f4 = $f3 + $f2;

        $f5 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f4);

        return $f5;
    }

    private float interp(float, float, float)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        float f0, f1, f2, $f3, $f4, $f5;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = f2 * $f3;

        $f5 = f0 + $f4;

        return $f5;
    }

    private static float max(float, float)
    {
        float f0, f1;
        byte $b0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label1;

        return f0;

     label1:
        return f1;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        android.graphics.Canvas r1;
        java.util.ArrayList r2;
        int i0, i1, $i3, $i5, $i6;
        com.android.internal.widget.multiwaveview.PointCloud$Point r3;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        java.lang.Object $r4;
        android.graphics.Paint $r5, $r8;
        android.graphics.drawable.Drawable $r6, $r7, $r9, $r10, $r11;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<com.android.internal.widget.multiwaveview.PointCloud: java.util.ArrayList mPointCloud>;

        virtualinvoke r1.<android.graphics.Canvas: int save(int)>(1);

        $f9 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mScale>;

        $f7 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mScale>;

        $f8 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mCenterX>;

        $f6 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mCenterY>;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>($f9, $f7, $f8, $f6);

        i0 = 0;

     label1:
        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i0 >= $i3 goto label5;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.internal.widget.multiwaveview.PointCloud$Point) $r4;

        $f12 = r3.<com.android.internal.widget.multiwaveview.PointCloud$Point: float radius>;

        $f10 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mOuterRadius>;

        $f11 = $f12 / $f10;

        f0 = specialinvoke r0.<com.android.internal.widget.multiwaveview.PointCloud: float interp(float,float,float)>(4.0F, 2.0F, $f11);

        $f15 = r3.<com.android.internal.widget.multiwaveview.PointCloud$Point: float x>;

        $f13 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mCenterX>;

        f1 = $f15 + $f13;

        $f16 = r3.<com.android.internal.widget.multiwaveview.PointCloud$Point: float y>;

        $f14 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mCenterY>;

        f2 = $f16 + $f14;

        i1 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.PointCloud: int getAlphaForPoint(com.android.internal.widget.multiwaveview.PointCloud$Point)>(r3);

        if i1 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable>;

        if $r6 == null goto label4;

        virtualinvoke r1.<android.graphics.Canvas: int save(int)>(1);

        $r7 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable>;

        $i5 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f17 = (float) $i5;

        f3 = 0.5F * $f17;

        $r9 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable>;

        $i6 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f20 = (float) $i6;

        f4 = 0.5F * $f20;

        f5 = f0 / 4.0F;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>(f5, f5, f1, f2);

        $f19 = f1 - f3;

        $f18 = f2 - f4;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f19, $f18);

        $r10 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setAlpha(int)>(i1);

        $r11 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r11.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label2;

     label4:
        $r5 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(i1);

        $r8 = r0.<com.android.internal.widget.multiwaveview.PointCloud: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f2, f0, $r8);

        goto label2;

     label5:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public int getAlphaForPoint(com.android.internal.widget.multiwaveview.PointCloud$Point)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        com.android.internal.widget.multiwaveview.PointCloud$Point r1;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        byte b0, b1;
        com.android.internal.widget.multiwaveview.PointCloud$GlowManager $r2, $r3, $r4, $r9, $r10;
        com.android.internal.widget.multiwaveview.PointCloud$WaveManager $r5, $r6, $r7, $r8;
        int $i2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        r1 := @parameter0: com.android.internal.widget.multiwaveview.PointCloud$Point;

        $r2 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager>;

        $f6 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$000(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>($r2);

        $f7 = r1.<com.android.internal.widget.multiwaveview.PointCloud$Point: float x>;

        $f8 = $f6 - $f7;

        $r3 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager>;

        $f9 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$100(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>($r3);

        $f11 = r1.<com.android.internal.widget.multiwaveview.PointCloud$Point: float y>;

        $f10 = $f9 - $f11;

        f0 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud: float hypot(float,float)>($f8, $f10);

        $r4 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager>;

        $f13 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$200(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>($r4);

        b0 = f0 cmpg $f13;

        f1 = 0.0F;

        if b0 >= 0 goto label1;

        $f29 = 0.7853982F * f0;

        $r9 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager>;

        $f28 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$200(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>($r9);

        $f27 = $f29 / $f28;

        f5 = staticinvoke <android.util.FloatMath: float cos(float)>($f27);

        $r10 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$GlowManager glowManager>;

        $f30 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$300(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>($r10);

        $d2 = (double) f5;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 10.0);

        $f32 = (float) $d3;

        $f31 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud: float max(float,float)>(0.0F, $f32);

        f1 = $f30 * $f31;

     label1:
        $f14 = r1.<com.android.internal.widget.multiwaveview.PointCloud$Point: float x>;

        $f12 = r1.<com.android.internal.widget.multiwaveview.PointCloud$Point: float y>;

        f2 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud: float hypot(float,float)>($f14, $f12);

        $r5 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$WaveManager waveManager>;

        $f16 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$400(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>($r5);

        $f15 = 2.0F * $f16;

        b1 = f2 cmpg $f15;

        f3 = 0.0F;

        if b1 >= 0 goto label2;

        $r6 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$WaveManager waveManager>;

        $f19 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$400(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>($r6);

        $f20 = f2 - $f19;

        $f23 = 1.5707964F * $f20;

        $r7 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$WaveManager waveManager>;

        $f21 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$400(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>($r7);

        $f22 = $f23 / $f21;

        f4 = staticinvoke <android.util.FloatMath: float cos(float)>($f22);

        $r8 = r0.<com.android.internal.widget.multiwaveview.PointCloud: com.android.internal.widget.multiwaveview.PointCloud$WaveManager waveManager>;

        $f24 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$500(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>($r8);

        $d0 = (double) f4;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 6.0);

        $f25 = (float) $d1;

        $f26 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud: float max(float,float)>(0.0F, $f25);

        f3 = $f24 * $f26;

     label2:
        $f17 = staticinvoke <com.android.internal.widget.multiwaveview.PointCloud: float max(float,float)>(f1, f3);

        $f18 = 255.0F * $f17;

        $i2 = (int) $f18;

        return $i2;
    }

    public float getScale()
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        float $f0;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        $f0 = r0.<com.android.internal.widget.multiwaveview.PointCloud: float mScale>;

        return $f0;
    }

    public void makePointCloud(float, float)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        int i0, i1, i2, i3;
        java.util.ArrayList r1, $r3;
        byte $b4;
        com.android.internal.widget.multiwaveview.PointCloud$Point r2, $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b4 = f0 cmpl 0.0F;

        if $b4 != 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PointCloud", "Must specify an inner radius");

     label1:
        return;

     label2:
        r0.<com.android.internal.widget.multiwaveview.PointCloud: float mOuterRadius> = f1;

        $r3 = r0.<com.android.internal.widget.multiwaveview.PointCloud: java.util.ArrayList mPointCloud>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        f2 = f1 - f0;

        $f10 = 6.2831855F * f0;

        f3 = $f10 / 8.0F;

        $f11 = f2 / f3;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f11);

        $f13 = (float) i0;

        f4 = f2 / $f13;

        f5 = f0;

        i1 = 0;

     label3:
        if i1 > i0 goto label1;

        $f12 = 6.2831855F * f5;

        $f15 = $f12 / f3;

        i2 = (int) $f15;

        f6 = 1.5707964F;

        $f14 = (float) i2;

        f7 = 6.2831855F / $f14;

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        $f17 = staticinvoke <android.util.FloatMath: float cos(float)>(f6);

        f8 = f5 * $f17;

        $f16 = staticinvoke <android.util.FloatMath: float sin(float)>(f6);

        f9 = f5 * $f16;

        f6 = f6 + f7;

        r1 = r0.<com.android.internal.widget.multiwaveview.PointCloud: java.util.ArrayList mPointCloud>;

        $r4 = new com.android.internal.widget.multiwaveview.PointCloud$Point;

        specialinvoke $r4.<com.android.internal.widget.multiwaveview.PointCloud$Point: void <init>(com.android.internal.widget.multiwaveview.PointCloud,float,float,float)>(r0, f8, f9, f5);

        r2 = $r4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i3 = i3 + 1;

        goto label4;

     label5:
        i1 = i1 + 1;

        f5 = f5 + f4;

        goto label3;
    }

    public void setCenter(float, float)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        float f0, f1;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<com.android.internal.widget.multiwaveview.PointCloud: float mCenterX> = f0;

        r0.<com.android.internal.widget.multiwaveview.PointCloud: float mCenterY> = f1;

        return;
    }

    public void setScale(float)
    {
        com.android.internal.widget.multiwaveview.PointCloud r0;
        float f0;

        r0 := @this: com.android.internal.widget.multiwaveview.PointCloud;

        f0 := @parameter0: float;

        r0.<com.android.internal.widget.multiwaveview.PointCloud: float mScale> = f0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.multiwaveview.PointCloud: java.lang.String TAG> = "PointCloud";

        <com.android.internal.widget.multiwaveview.PointCloud: float PI> = 3.1415927F;

        <com.android.internal.widget.multiwaveview.PointCloud: float MIN_POINT_SIZE> = 2.0F;

        <com.android.internal.widget.multiwaveview.PointCloud: float MAX_POINT_SIZE> = 4.0F;

        <com.android.internal.widget.multiwaveview.PointCloud: int INNER_POINTS> = 8;

        return;
    }
}
