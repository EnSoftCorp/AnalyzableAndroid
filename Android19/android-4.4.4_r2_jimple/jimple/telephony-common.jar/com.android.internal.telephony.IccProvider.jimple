public class com.android.internal.telephony.IccProvider extends android.content.ContentProvider
{
    private static final java.lang.String[] ADDRESS_BOOK_COLUMN_NAMES;
    private static final int ADN;
    private static final boolean DBG;
    private static final int FDN;
    private static final int SDN;
    private static final java.lang.String STR_EMAILS;
    private static final java.lang.String STR_NUMBER;
    private static final java.lang.String STR_PIN2;
    private static final java.lang.String STR_TAG;
    private static final java.lang.String TAG;
    private static final android.content.UriMatcher URL_MATCHER;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.content.UriMatcher $r1, $r2, $r3, $r4;

        <com.android.internal.telephony.IccProvider: java.lang.String TAG> = "IccProvider";

        <com.android.internal.telephony.IccProvider: java.lang.String STR_TAG> = "tag";

        <com.android.internal.telephony.IccProvider: java.lang.String STR_PIN2> = "pin2";

        <com.android.internal.telephony.IccProvider: java.lang.String STR_NUMBER> = "number";

        <com.android.internal.telephony.IccProvider: java.lang.String STR_EMAILS> = "emails";

        <com.android.internal.telephony.IccProvider: int SDN> = 3;

        <com.android.internal.telephony.IccProvider: int FDN> = 2;

        <com.android.internal.telephony.IccProvider: boolean DBG> = 0;

        <com.android.internal.telephony.IccProvider: int ADN> = 1;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "name";

        $r0[1] = "number";

        $r0[2] = "emails";

        $r0[3] = "_id";

        <com.android.internal.telephony.IccProvider: java.lang.String[] ADDRESS_BOOK_COLUMN_NAMES> = $r0;

        $r1 = new android.content.UriMatcher;

        specialinvoke $r1.<android.content.UriMatcher: void <init>(int)>(-1);

        <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER> = $r1;

        $r2 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        virtualinvoke $r2.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("icc", "adn", 1);

        $r3 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        virtualinvoke $r3.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("icc", "fdn", 2);

        $r4 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        virtualinvoke $r4.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("icc", "sdn", 3);

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.IccProvider r0;

        r0 := @this: com.android.internal.telephony.IccProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    private boolean addIccRecordToEf(int, java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.internal.telephony.IccProvider r0;
        int i0;
        java.lang.String r1, r2, r4;
        java.lang.String[] r3;
        com.android.internal.telephony.IIccPhoneBook r7;
        boolean z0, z1;
        android.os.IBinder $r8;
        android.os.RemoteException $r9;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.internal.telephony.IccProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

     label1:
        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("simphonebook");

        r7 = staticinvoke <com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>($r8);

     label2:
        z0 = 0;

        if r7 == null goto label5;

     label3:
        z1 = interfaceinvoke r7.<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(i0, "", "", r1, r2, r4);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r10 := @caughtexception;

        return 0;

     label7:
        $r9 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.SecurityException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.SecurityException from label3 to label4 with label6;
    }

    private boolean deleteIccRecordFromEf(int, java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.internal.telephony.IccProvider r0;
        int i0;
        java.lang.String r1, r2, r4;
        java.lang.String[] r3;
        com.android.internal.telephony.IIccPhoneBook r7;
        boolean z0, z1;
        android.os.IBinder $r8;
        android.os.RemoteException $r9;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.internal.telephony.IccProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

     label1:
        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("simphonebook");

        r7 = staticinvoke <com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>($r8);

     label2:
        z0 = 0;

        if r7 == null goto label5;

     label3:
        z1 = interfaceinvoke r7.<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, "", "", r4);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r10 := @caughtexception;

        return 0;

     label7:
        $r9 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.SecurityException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.SecurityException from label3 to label4 with label6;
    }

    private android.database.MatrixCursor loadFromEf(int)
    {
        com.android.internal.telephony.IccProvider r0;
        int i0, i1, i2;
        java.util.List r2, r6;
        android.database.MatrixCursor r3, $r8, $r10;
        com.android.internal.telephony.IIccPhoneBook r5;
        android.os.IBinder $r7;
        java.lang.String[] $r9, $r12;
        java.lang.Object $r11;
        com.android.internal.telephony.uicc.AdnRecord $r13;
        java.lang.SecurityException $r14;
        android.os.RemoteException $r15;

        r0 := @this: com.android.internal.telephony.IccProvider;

        i0 := @parameter0: int;

     label01:
        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("simphonebook");

        r5 = staticinvoke <com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>($r7);

     label02:
        r2 = null;

        if r5 == null goto label05;

     label03:
        r6 = interfaceinvoke r5.<com.android.internal.telephony.IIccPhoneBook: java.util.List getAdnRecordsInEf(int)>(i0);

     label04:
        r2 = r6;

     label05:
        if r2 == null goto label07;

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r10 = new android.database.MatrixCursor;

        $r12 = <com.android.internal.telephony.IccProvider: java.lang.String[] ADDRESS_BOOK_COLUMN_NAMES>;

        specialinvoke $r10.<android.database.MatrixCursor: void <init>(java.lang.String[],int)>($r12, i1);

        r3 = $r10;

        i2 = 0;

     label06:
        if i2 >= i1 goto label08;

        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (com.android.internal.telephony.uicc.AdnRecord) $r11;

        specialinvoke r0.<com.android.internal.telephony.IccProvider: void loadRecord(com.android.internal.telephony.uicc.AdnRecord,android.database.MatrixCursor,int)>($r13, r3, i2);

        i2 = i2 + 1;

        goto label06;

     label07:
        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("IccProvider", "Cannot load ADN records");

        $r8 = new android.database.MatrixCursor;

        $r9 = <com.android.internal.telephony.IccProvider: java.lang.String[] ADDRESS_BOOK_COLUMN_NAMES>;

        specialinvoke $r8.<android.database.MatrixCursor: void <init>(java.lang.String[])>($r9);

        r3 = $r8;

     label08:
        return r3;

     label09:
        $r14 := @caughtexception;

        r2 = null;

        goto label05;

     label10:
        $r15 := @caughtexception;

        r2 = null;

        goto label05;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch java.lang.SecurityException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.SecurityException from label03 to label04 with label09;
    }

    private void loadRecord(com.android.internal.telephony.uicc.AdnRecord, android.database.MatrixCursor, int)
    {
        com.android.internal.telephony.IccProvider r0;
        com.android.internal.telephony.uicc.AdnRecord r1;
        android.database.MatrixCursor r2;
        int i0, i1, i2;
        java.lang.Object[] r3;
        java.lang.String r4, r5, $r10, $r12;
        java.lang.String[] r6;
        java.lang.StringBuilder r7, $r8;
        boolean $z0;
        java.lang.Integer $r9;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: com.android.internal.telephony.uicc.AdnRecord;

        r2 := @parameter1: android.database.MatrixCursor;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.uicc.AdnRecord: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r3 = newarray (java.lang.Object)[4];

        r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String getAlphaTag()>();

        r5 = virtualinvoke r1.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String getNumber()>();

        r3[0] = r4;

        r3[1] = r5;

        r6 = virtualinvoke r1.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String[] getEmails()>();

        if r6 == null goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r7 = $r8;

        i1 = lengthof r6;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r12 = r6[i2];

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        i2 = i2 + 1;

        goto label1;

     label2:
        $r10 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[2] = $r10;

     label3:
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3[3] = $r9;

        virtualinvoke r2.<android.database.MatrixCursor: void addRow(java.lang.Object[])>(r3);

     label4:
        return;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.IccProvider r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[IccProvider] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("IccProvider", $r5);

        return;
    }

    private java.lang.String normalizeValue(java.lang.String)
    {
        com.android.internal.telephony.IccProvider r0;
        java.lang.String r1, r2;
        int i0, $i2, $i4;
        char $c1, $c3;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = r1;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c1 != 39 goto label1;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 39 goto label1;

        $i4 = i0 - 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

     label1:
        return r2;
    }

    private boolean updateIccRecordInEf(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.IccProvider r0;
        int i0;
        java.lang.String r1, r2, r3, r4, r5;
        com.android.internal.telephony.IIccPhoneBook r8;
        boolean z0, z1;
        android.os.IBinder $r9;
        android.os.RemoteException $r10;
        java.lang.SecurityException $r11;

        r0 := @this: com.android.internal.telephony.IccProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

     label1:
        $r9 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("simphonebook");

        r8 = staticinvoke <com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>($r9);

     label2:
        z0 = 0;

        if r8 == null goto label5;

     label3:
        z1 = interfaceinvoke r8.<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3, r4, r5);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r11 := @caughtexception;

        return 0;

     label7:
        $r10 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.SecurityException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.SecurityException from label3 to label4 with label6;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.android.internal.telephony.IccProvider r0;
        android.net.Uri r1;
        java.lang.String r2, r4, r5, r6, r9, r10, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.String[] r3, r7, r8;
        short s0;
        int i1, $i2;
        android.content.UriMatcher $r11;
        java.lang.UnsupportedOperationException $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r11 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        $i2 = virtualinvoke $r11.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label05;
            default: goto label01;
        };

     label01:
        $r12 = new java.lang.UnsupportedOperationException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot insert into URL: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label02:
        s0 = 28474;

     label03:
        r4 = null;

        r5 = null;

        r6 = null;

        r7 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("AND");

        i1 = lengthof r7;

     label04:
        i1 = i1 + -1;

        if i1 < 0 goto label09;

        $r17 = r7[i1];

        r8 = virtualinvoke $r17.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("=", 2);

        $r18 = r8[0];

        r9 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $r19 = r8[1];

        r10 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        $r20 = "tag";

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label06;

        r4 = specialinvoke r0.<com.android.internal.telephony.IccProvider: java.lang.String normalizeValue(java.lang.String)>(r10);

        goto label04;

     label05:
        s0 = 28475;

        goto label03;

     label06:
        $r22 = "number";

        $z5 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z5 == 0 goto label07;

        r5 = specialinvoke r0.<com.android.internal.telephony.IccProvider: java.lang.String normalizeValue(java.lang.String)>(r10);

        goto label04;

     label07:
        $r21 = "emails";

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z4 == 0 goto label08;

        goto label04;

     label08:
        $r23 = "pin2";

        $z6 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z6 == 0 goto label04;

        r6 = specialinvoke r0.<com.android.internal.telephony.IccProvider: java.lang.String normalizeValue(java.lang.String)>(r10);

        goto label04;

     label09:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label10;

        return 0;

     label10:
        if s0 != 28475 goto label11;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 == 0 goto label11;

        return 0;

     label11:
        $z2 = specialinvoke r0.<com.android.internal.telephony.IccProvider: boolean deleteIccRecordFromEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>(s0, r4, r5, null, r6);

        if $z2 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    public java.lang.String getType(android.net.Uri)
    {
        com.android.internal.telephony.IccProvider r0;
        android.net.Uri r1;
        android.content.UriMatcher $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        $i0 = virtualinvoke $r2.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return "vnd.android.cursor.dir/sim-contact";
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        com.android.internal.telephony.IccProvider r0;
        android.net.Uri r1, $r15;
        android.content.ContentValues r2;
        java.lang.String r3, $r10, $r11, $r12, $r16;
        int i0;
        short s1;
        java.lang.StringBuilder r4, $r7, $r8, $r9, $r14;
        android.content.UriMatcher $r5;
        java.lang.UnsupportedOperationException $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 = null;

        $r5 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        i0 = virtualinvoke $r5.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot insert into URL: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        s1 = 28474;

     label3:
        $r11 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("tag");

        $r12 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("number");

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccProvider: boolean addIccRecordToEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>(s1, $r11, $r12, null, r3);

        if $z0 != 0 goto label5;

        return null;

     label4:
        s1 = 28475;

        r3 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("pin2");

        goto label3;

     label5:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("content://icc/");

        r4 = $r14;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label8;
            default: goto label6;
        };

     label6:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        $r16 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r16);

        return $r15;

     label7:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adn/");

        goto label6;

     label8:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fdn/");

        goto label6;
    }

    public boolean onCreate()
    {
        com.android.internal.telephony.IccProvider r0;

        r0 := @this: com.android.internal.telephony.IccProvider;

        return 1;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.internal.telephony.IccProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, $r11;
        android.content.UriMatcher $r6;
        int $i0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        android.database.MatrixCursor $r12, $r13, $r14;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        $i0 = virtualinvoke $r6.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        $r14 = specialinvoke r0.<com.android.internal.telephony.IccProvider: android.database.MatrixCursor loadFromEf(int)>(28474);

        return $r14;

     label3:
        $r13 = specialinvoke r0.<com.android.internal.telephony.IccProvider: android.database.MatrixCursor loadFromEf(int)>(28475);

        return $r13;

     label4:
        $r12 = specialinvoke r0.<com.android.internal.telephony.IccProvider: android.database.MatrixCursor loadFromEf(int)>(28489);

        return $r12;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.android.internal.telephony.IccProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3, r5, $r11, $r12, $r13, $r14, $r15;
        java.lang.String[] r4;
        short s0;
        android.content.UriMatcher $r6;
        int $i1;
        java.lang.UnsupportedOperationException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 = null;

        $r6 = <com.android.internal.telephony.IccProvider: android.content.UriMatcher URL_MATCHER>;

        $i1 = virtualinvoke $r6.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r7 = new java.lang.UnsupportedOperationException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot insert into URL: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        s0 = 28474;

     label3:
        $r12 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("tag");

        $r14 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("number");

        $r13 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("newTag");

        $r15 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("newNumber");

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccProvider: boolean updateIccRecordInEf(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(s0, $r12, $r14, $r13, $r15, r5);

        if $z0 != 0 goto label5;

        return 0;

     label4:
        s0 = 28475;

        r5 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("pin2");

        goto label3;

     label5:
        return 1;
    }
}
