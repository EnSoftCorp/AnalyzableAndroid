public class com.android.internal.telephony.cdma.CdmaServiceStateTracker extends com.android.internal.telephony.ServiceStateTracker
{
    static final java.lang.String LOG_TAG;
    private static final int NITZ_UPDATE_DIFF_DEFAULT;
    private static final int NITZ_UPDATE_SPACING_DEFAULT;
    private static final java.lang.String UNACTIVATED_MIN2_VALUE;
    private static final java.lang.String UNACTIVATED_MIN_VALUE;
    private static final java.lang.String WAKELOCK_TAG;
    private android.database.ContentObserver mAutoTimeObserver;
    private android.database.ContentObserver mAutoTimeZoneObserver;
    protected android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants;
    private boolean mCdmaRoaming;
    private com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM;
    android.telephony.cdma.CdmaCellLocation mCellLoc;
    private android.content.ContentResolver mCr;
    protected java.lang.String mCurPlmn;
    private java.lang.String mCurrentCarrier;
    int mCurrentOtaspMode;
    private int mDefaultRoamingIndicator;
    protected boolean mGotCountryCode;
    protected int[] mHomeNetworkId;
    protected int[] mHomeSystemId;
    private boolean mIsEriTextLoaded;
    private boolean mIsInPrl;
    protected boolean mIsMinInfoReady;
    protected boolean mIsSubscriptionFromRuim;
    protected java.lang.String mMdn;
    protected java.lang.String mMin;
    protected boolean mNeedFixZone;
    android.telephony.cdma.CdmaCellLocation mNewCellLoc;
    private int mNitzUpdateDiff;
    private int mNitzUpdateSpacing;
    com.android.internal.telephony.cdma.CDMAPhone mPhone;
    protected java.lang.String mPrlVersion;
    private java.lang.String mRegistrationDeniedReason;
    protected int mRegistrationState;
    private int mRoamingIndicator;
    long mSavedAtTime;
    long mSavedTime;
    java.lang.String mSavedTimeZone;
    private android.os.PowerManager$WakeLock mWakeLock;
    private boolean mZoneDst;
    private int mZoneOffset;
    private long mZoneTime;

    public void <init>(com.android.internal.telephony.cdma.CDMAPhone)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        android.telephony.CellInfoCdma $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CDMAPhone;

        $r2 = new android.telephony.CellInfoCdma;

        specialinvoke $r2.<android.telephony.CellInfoCdma: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo)>(r1, $r2);

        return;
    }

    protected void <init>(com.android.internal.telephony.cdma.CDMAPhone, android.telephony.CellInfo)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        android.telephony.CellInfo r2;
        boolean z0, z1;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.CommandsInterface $r3, $r13, $r20, $r22, $r23, $r24, $r25;
        android.os.RegistrantList $r4;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker$1 $r5;
        android.os.Handler $r6, $r8;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker$2 $r7;
        android.content.Context $r9, $r14, $r17;
        android.content.ContentResolver $r10, $r26, $r28, $r32;
        android.telephony.cdma.CdmaCellLocation $r11, $r12;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r15, $r16;
        android.os.PowerManager $r18;
        java.lang.Object $r19;
        android.os.PowerManager$WakeLock $r21;
        android.net.Uri $r27, $r29;
        android.database.ContentObserver $r30, $r31;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CDMAPhone;

        r2 := @parameter1: android.telephony.CellInfo;

        $r3 = r1.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CommandsInterface mCi>;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo)>(r1, $r3, r2);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode> = 0;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.nitz_update_spacing", 600000);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateSpacing> = $i1;

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.nitz_update_diff", 2000);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateDiff> = $i2;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState> = -1;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants> = $r4;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsEriTextLoaded> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurrentCarrier> = null;

        $r5 = new com.android.internal.telephony.cdma.CdmaServiceStateTracker$1;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        specialinvoke $r5.<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void <init>(com.android.internal.telephony.cdma.CdmaServiceStateTracker,android.os.Handler)>(r0, $r6);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeObserver> = $r5;

        $r7 = new com.android.internal.telephony.cdma.CdmaServiceStateTracker$2;

        $r8 = new android.os.Handler;

        specialinvoke $r8.<android.os.Handler: void <init>()>();

        specialinvoke $r7.<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2: void <init>(com.android.internal.telephony.cdma.CdmaServiceStateTracker,android.os.Handler)>(r0, $r8);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeZoneObserver> = $r7;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone> = r1;

        $r9 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr> = $r10;

        $r12 = new android.telephony.cdma.CdmaCellLocation;

        specialinvoke $r12.<android.telephony.cdma.CdmaCellLocation: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc> = $r12;

        $r11 = new android.telephony.cdma.CdmaCellLocation;

        specialinvoke $r11.<android.telephony.cdma.CdmaCellLocation: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc> = $r11;

        $r14 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r16 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>($r14, $r13, r0, 39, null);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM> = $r16;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i3 = virtualinvoke $r15.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        if $i3 != 0 goto label3;

        z0 = 1;

     label1:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim> = z0;

        $r17 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r19 = virtualinvoke $r17.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r18 = (android.os.PowerManager) $r19;

        $r21 = virtualinvoke $r18.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ServiceStateTracker");

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock> = $r21;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void registerForRadioStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r23 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r23.<com.android.internal.telephony.CommandsInterface: void registerForVoiceNetworkStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 30, null);

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r22.<com.android.internal.telephony.CommandsInterface: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>(r0, 11, null);

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r25.<com.android.internal.telephony.CommandsInterface: void registerForCdmaPrlChanged(android.os.Handler,int,java.lang.Object)>(r0, 40, null);

        virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: void registerForEriFileLoaded(android.os.Handler,int,java.lang.Object)>(r0, 36, null);

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r24.<com.android.internal.telephony.CommandsInterface: void registerForCdmaOtaProvision(android.os.Handler,int,java.lang.Object)>(r0, 37, null);

        $r28 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r28, "airplane_mode_on", 0);

        z1 = 0;

        if i0 > 0 goto label2;

        z1 = 1;

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDesiredPowerState> = z1;

        $r26 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r27 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("auto_time");

        $r31 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeObserver>;

        virtualinvoke $r26.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r27, 1, $r31);

        $r32 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r29 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("auto_time_zone");

        $r30 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeZoneObserver>;

        virtualinvoke $r32.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r29, 1, $r30);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>();

        return;

     label3:
        z0 = 0;

        goto label1;
    }

    static void access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTime()>();

        return;
    }

    static void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTimeZone()>();

        return;
    }

    private java.util.TimeZone findTimeZone(int, boolean, long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i2, i3, i4, $i5;
        boolean z0, $z1;
        long l1;
        java.lang.String[] r1;
        java.util.Date r2, $r5;
        java.util.TimeZone r3, r4;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        i2 = i0;

        if z0 == 0 goto label1;

        i2 = i2 - 3600000;

     label1:
        r1 = staticinvoke <java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>(i2);

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>(l1);

        r2 = $r5;

        i3 = lengthof r1;

        i4 = 0;

     label2:
        r3 = null;

        if i4 >= i3 goto label3;

        $r6 = r1[i4];

        r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6);

        $i5 = virtualinvoke r4.<java.util.TimeZone: int getOffset(long)>(l1);

        if $i5 != i0 goto label4;

        $z1 = virtualinvoke r4.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r2);

        if $z1 != z0 goto label4;

        r3 = r4;

     label3:
        return r3;

     label4:
        i4 = i4 + 1;

        goto label2;
    }

    private boolean getAutoTime()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        android.content.ContentResolver $r2;
        android.provider.Settings$SettingNotFoundException $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "auto_time");

     label2:
        if i0 <= 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        return 1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label4;
    }

    private boolean getAutoTimeZone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        android.content.ContentResolver $r2;
        android.provider.Settings$SettingNotFoundException $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "auto_time_zone");

     label2:
        if i0 <= 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        return 1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label4;
    }

    private java.util.TimeZone getNitzTimeZone(int, boolean, long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        boolean z0, z1;
        long l1;
        java.util.TimeZone r1;
        java.lang.StringBuilder r2, $r4, $r5;
        java.io.Serializable r3;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        r1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone findTimeZone(int,boolean,long)>(i0, z0, l1);

        if r1 != null goto label2;

        if z0 != 0 goto label4;

        z1 = 1;

     label1:
        r1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone findTimeZone(int,boolean,long)>(i0, z1, l1);

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNitzTimeZone returning ");

        if r1 != null goto label5;

        r3 = r1;

     label3:
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r6);

        return r1;

     label4:
        z1 = 0;

        goto label1;

     label5:
        r3 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getID()>();

        goto label3;
    }

    private void getSubscriptionInfoAndStartPollingThreads()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(34);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>($r2);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        return;
    }

    private void handleCdmaSubscriptionSource(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        boolean z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription Source : ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r4);

        if i0 != 0 goto label3;

        z0 = 1;

     label1:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim> = z0;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveCdmaSubscriptionSource(int)>(i0);

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z1 != 0 goto label2;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(35);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean sendMessage(android.os.Message)>($r5);

     label2:
        return;

     label3:
        z0 = 0;

        goto label1;
    }

    private boolean isHomeSid(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        if $r1 == null goto label3;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i2 = lengthof $r2;

        if i1 >= $i2 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i3 = $r3[i1];

        if i0 != $i3 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isRoamIndForHomeSystem(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r2, $r4;
        boolean z0, z1, $z2;
        java.lang.String[] r3;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.homesystem");

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        z1 = 0;

        if z0 != 0 goto label2;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r3;

        i1 = 0;

     label1:
        z1 = 0;

        if i1 >= i0 goto label2;

        $r4 = r3[i1];

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        z1 = 1;

     label2:
        return z1;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    private boolean isRoamingBetweenOperators(boolean, android.telephony.ServiceState)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean z0, z1, z2, $z3, $z4;
        android.telephony.ServiceState r1;
        java.lang.String r2, r3, r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.telephony.ServiceState;

        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", "empty");

        r3 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        r4 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>();

        if r3 == null goto label3;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 == 0 goto label3;

        z1 = 1;

     label1:
        if r4 == null goto label4;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label4;

        z2 = 1;

     label2:
        if z0 == 0 goto label5;

        if z1 != 0 goto label5;

        if z2 != 0 goto label5;

        return 1;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z2 = 0;

        goto label2;

     label5:
        return 0;
    }

    private void queueNextSignalStrengthPoll()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Message r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDontPollSignalStrength>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage()>();

        r1.<android.os.Message: int what> = 10;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean sendMessageDelayed(android.os.Message,long)>(r1, 20000L);

        return;
    }

    private boolean regCodeIsRoaming(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        if 5 != i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void revertToNitzTime()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.content.ContentResolver $r1;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        long $l1, $l2, $l3, $l5, $l7, $l8, $l9, $l10, $l11;
        java.lang.String $r7;
        byte $b4, $b6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "auto_time", 0);

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revertToNitzTime: mSavedTime=");

        $l1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedAtTime=");

        $l2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $l3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label1;

        $l5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label1;

        $l7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $l11 = $l9 - $l8;

        $l10 = $l7 + $l11;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>($l10);

        return;
    }

    private void revertToNitzTimeZone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, $r9, $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "auto_time_zone", 0);

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revertToNitzTimeZone: tz=\'");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r8);

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        if $r9 == null goto label1;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>($r10);

        return;
    }

    private void saveCdmaSubscriptionSource(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        com.android.internal.telephony.cdma.CDMAPhone $r5;
        android.content.Context $r6;
        android.content.ContentResolver $r7;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing cdma subscription source: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r7, "subscription_mode", i0);

        return;
    }

    private void saveNitzTimeZone(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone> = r1;

        return;
    }

    private void setAndBroadcastNetworkSetTime(long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        long l0;
        android.content.Intent r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        com.android.internal.telephony.cdma.CDMAPhone $r10;
        android.content.Context $r11;
        android.os.UserHandle $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAndBroadcastNetworkSetTime: time=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r6);

        staticinvoke <android.os.SystemClock: boolean setCurrentTimeMillis(long)>(l0);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.NETWORK_SET_TIME");

        r1 = $r7;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("time", l0);

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r12);

        return;
    }

    private void setAndBroadcastNetworkSetTimeZone(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r6;
        android.content.Intent r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r5;
        com.android.internal.telephony.cdma.CDMAPhone $r7, $r14;
        android.content.Context $r8, $r15;
        java.lang.Object $r9;
        android.app.AlarmManager $r10;
        android.os.UserHandle $r16;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAndBroadcastNetworkSetTimeZone: setTimeZone=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r10 = (android.app.AlarmManager) $r9;

        virtualinvoke $r10.<android.app.AlarmManager: void setTimeZone(java.lang.String)>(r1);

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.NETWORK_SET_TIMEZONE");

        r2 = $r11;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("time-zone", r1);

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r15.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r16);

        return;
    }

    private void setTimeFromNITZString(java.lang.String, long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r6, r8, r9, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r37, $r42, $r51, $r55, $r69, $r75, $r84, $r90, $r91, $r92, $r95, $r102, $r105, $r106, $r107, $r108, $r116;
        long l0, l1, l7, l8, l9, l10, l12, l13, l16, l17, l18, l19, $l20, $l31, $l35, $l38, $l39, $l40, $l41, $l43, $l45, $l46, $l47, $l49, $l50, $l51, $l53, $l54, $l56, $l57, $l58, $l59, $l62;
        java.lang.RuntimeException r2, $r114;
        java.util.Calendar r3;
        java.lang.String[] r4;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int i2, i3, i5, i6, i11, i14, i15, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i42, $i48, $i60, $i61;
        byte b4, $b36, $b37, $b44, $b52, $b55;
        java.util.TimeZone r5, $r20;
        java.lang.StringBuilder r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r47, $r50, $r52, $r54, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r70, $r71, $r72, $r73, $r74, $r76, $r77, $r78, $r79, $r80, $r82, $r83, $r85, $r86, $r87, $r88, $r89, $r93, $r96, $r97, $r98, $r99, $r100, $r101, $r104, $r109, $r110, $r111, $r112, $r113, $r117, $r118, $r119, $r120;
        java.lang.Throwable r10, $r103;
        android.os.PowerManager$WakeLock $r43, $r53, $r68, $r81, $r94, $r115;
        android.content.ContentResolver $r48, $r49;
        java.util.Date $r57;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: ");

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start=");

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delay=");

        $l20 = l1 - l0;

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r21);

     label01:
        $r20 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r20);

        virtualinvoke r3.<java.util.Calendar: void clear()>();

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(16, 0);

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[/:,+-]");

        $r23 = r4[0];

        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        $i21 = 2000 + $i22;

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(1, $i21);

        $r22 = r4[1];

        $i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        $i26 = -1 + $i25;

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(2, $i26);

        $r25 = r4[2];

        $i23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(5, $i23);

        $r24 = r4[3];

        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(10, $i24);

        $r27 = r4[4];

        $i29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(12, $i29);

        $r28 = r4[5];

        $i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        virtualinvoke r3.<java.util.Calendar: void set(int,int)>(13, $i27);

        $i28 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(45);

        if $i28 != -1 goto label61;

     label02:
        z0 = 1;

     label03:
        $r26 = r4[6];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        $i32 = lengthof r4;

        if $i32 < 8 goto label62;

        $r107 = r4[7];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r107);

     label04:
        goto label59;

     label05:
        $i34 = b4 * i2;

        $i33 = 15 * $i34;

        $i30 = 60 * $i33;

        i5 = 1000 * $i30;

     label06:
        i6 = lengthof r4;

     label07:
        r5 = null;

        if i6 < 9 goto label09;

     label08:
        $r105 = r4[8];

        $r106 = virtualinvoke $r105.<java.lang.String: java.lang.String replace(char,char)>(33, 47);

        r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r106);

     label09:
        r6 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.operator.iso-country");

     label10:
        if r5 != null goto label16;

     label11:
        $z11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode>;

        if $z11 == 0 goto label16;

     label12:
        if r6 == null goto label65;

     label13:
        $i60 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i60 <= 0 goto label65;

     label14:
        if i3 == 0 goto label64;

        z1 = 1;

     label15:
        l7 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        r5 = staticinvoke <android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>(i5, z1, l7, r6);

     label16:
        if r5 == null goto label19;

     label17:
        $i61 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        if $i61 != i5 goto label19;

        z4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

     label18:
        if i3 == 0 goto label67;

        z5 = 1;

        goto label60;

     label19:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone> = 1;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset> = i5;

     label20:
        if i3 == 0 goto label68;

        z2 = 1;

     label21:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst> = z2;

        $l31 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime> = $l31;

     label22:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: tzOffset=");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        r7 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" zone=");

     label23:
        if r5 == null goto label35;

     label24:
        r9 = virtualinvoke r5.<java.util.TimeZone: java.lang.String getID()>();

     label25:
        $r32 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iso=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r41 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGotCountryCode=");

        $z7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode>;

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNeedFixZone=");

        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r37);

     label26:
        if r5 == null goto label29;

     label27:
        $z9 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTimeZone()>();

        if $z9 == 0 goto label28;

        $r91 = virtualinvoke r5.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>($r91);

     label28:
        $r92 = virtualinvoke r5.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveNitzTimeZone(java.lang.String)>($r92);

     label29:
        r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.ignore-nitz");

     label30:
        if r8 == null goto label36;

     label31:
        $z10 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z10 == 0 goto label36;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("NITZ: Not setting clock because gsm.ignore-nitz is set");

     label32:
        return;

     label33:
        l19 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        r5 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone getNitzTimeZone(int,boolean,long)>(i5, z3, l19);

     label34:
        goto label16;

     label35:
        r9 = "NULL";

        goto label25;

     label36:
        $r43 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r43.<android.os.PowerManager$WakeLock: void acquire()>();

        $l38 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l9 = $l38 - l0;

     label37:
        $b37 = l9 cmp 0L;

        if $b37 >= 0 goto label42;

     label38:
        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: not setting time, clock has rolled backwards since NITZ time was received, ");

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r102);

     label39:
        l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r99 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l10);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l59 = l10 - l1;

        $r93 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l59);

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r95);

        $r94 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r94.<android.os.PowerManager$WakeLock: void release()>();

     label40:
        return;

     label41:
        $r114 := @caughtexception;

        r2 = $r114;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: Parsing NITZ time ");

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ex=");

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r108 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r108);

        return;

     label42:
        $b36 = l9 cmp 2147483647L;

        if $b36 <= 0 goto label46;

     label43:
        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: not setting time, processing has taken ");

        $l58 = l9 / 86400000L;

        $r85 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l58);

        $r89 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" days");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r90);

     label44:
        l17 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l17);

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l57 = l17 - l1;

        $r83 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l57);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r84);

        $r81 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r81.<android.os.PowerManager$WakeLock: void release()>();

     label45:
        return;

     label46:
        i11 = (int) l9;

     label47:
        virtualinvoke r3.<java.util.Calendar: void add(int,int)>(14, i11);

        $z8 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTime()>();

        if $z8 == 0 goto label51;

        $l45 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        $l47 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l12 = $l45 - $l47;

        $l46 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l49 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        l16 = $l46 - $l49;

        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateSpacing>;

        i14 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r48, "nitz_update_spacing", $i48);

        $r49 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i42 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateDiff>;

        i15 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r49, "nitz_update_diff", $i42);

        $l43 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $b44 = $l43 cmp 0L;

        if $b44 == 0 goto label50;

     label48:
        $l51 = (long) i14;

        $b52 = l16 cmp $l51;

        if $b52 > 0 goto label50;

     label49:
        $l53 = staticinvoke <java.lang.Math: long abs(long)>(l12);

        $l54 = (long) i15;

        $b55 = $l53 cmp $l54;

        if $b55 <= 0 goto label54;

     label50:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: Auto updating time of day to ");

        $r57 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NITZ receive delay=");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms gained=");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l12);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms from ");

        $r54 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r55);

        $l50 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>($l50);

     label51:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("NITZ: update nitz time property");

        $l35 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        $r42 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l35);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.nitz.time", $r42);

        $l41 = virtualinvoke r3.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime> = $l41;

        $l40 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime> = $l40;

     label52:
        l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l13);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l39 = l13 - l1;

        $r52 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l39);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r51);

        $r53 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r53.<android.os.PowerManager$WakeLock: void release()>();

     label53:
        return;

     label54:
        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: ignore, a previous update was ");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms ago and gained=");

        $r77 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l12);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r75);

     label55:
        l18 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l18);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l56 = l18 - l1;

        $r70 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l56);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r69);

        $r68 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r68.<android.os.PowerManager$WakeLock: void release()>();

     label56:
        return;

     label57:
        $r103 := @caughtexception;

        r10 = $r103;

     label58:
        l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        $r118 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l62 = l8 - l1;

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l62);

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r116);

        $r115 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r115.<android.os.PowerManager$WakeLock: void release()>();

        throw r10;

     label59:
        if z0 == 0 goto label63;

        b4 = 1;

        goto label05;

     label60:
        if z4 == z5 goto label22;

        goto label19;

     label61:
        z0 = 0;

        goto label03;

     label62:
        i3 = 0;

        goto label59;

     label63:
        b4 = -1;

        goto label05;

     label64:
        z1 = 0;

        goto label15;

     label65:
        if i3 == 0 goto label66;

        z3 = 1;

        goto label33;

     label66:
        z3 = 0;

        goto label33;

     label67:
        z5 = 0;

        goto label60;

     label68:
        z2 = 0;

        goto label21;

        catch java.lang.RuntimeException from label01 to label02 with label41;
        catch java.lang.RuntimeException from label03 to label04 with label41;
        catch java.lang.RuntimeException from label06 to label07 with label41;
        catch java.lang.RuntimeException from label08 to label09 with label41;
        catch java.lang.RuntimeException from label09 to label10 with label41;
        catch java.lang.RuntimeException from label11 to label12 with label41;
        catch java.lang.RuntimeException from label13 to label14 with label41;
        catch java.lang.RuntimeException from label15 to label16 with label41;
        catch java.lang.RuntimeException from label17 to label18 with label41;
        catch java.lang.RuntimeException from label19 to label20 with label41;
        catch java.lang.RuntimeException from label21 to label22 with label41;
        catch java.lang.RuntimeException from label22 to label23 with label41;
        catch java.lang.RuntimeException from label24 to label25 with label41;
        catch java.lang.RuntimeException from label25 to label26 with label41;
        catch java.lang.RuntimeException from label27 to label28 with label41;
        catch java.lang.RuntimeException from label28 to label29 with label41;
        catch java.lang.RuntimeException from label29 to label30 with label41;
        catch java.lang.RuntimeException from label31 to label32 with label41;
        catch java.lang.RuntimeException from label33 to label34 with label41;
        catch java.lang.Throwable from label36 to label37 with label57;
        catch java.lang.Throwable from label38 to label39 with label57;
        catch java.lang.RuntimeException from label39 to label40 with label41;
        catch java.lang.Throwable from label43 to label44 with label57;
        catch java.lang.RuntimeException from label44 to label45 with label41;
        catch java.lang.Throwable from label47 to label48 with label57;
        catch java.lang.Throwable from label49 to label50 with label57;
        catch java.lang.Throwable from label50 to label51 with label57;
        catch java.lang.Throwable from label51 to label52 with label57;
        catch java.lang.RuntimeException from label52 to label53 with label41;
        catch java.lang.Throwable from label54 to label55 with label57;
        catch java.lang.RuntimeException from label55 to label56 with label41;
        catch java.lang.RuntimeException from label58 to label59 with label41;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.CommandsInterface $r1, $r2, $r3, $r7, $r13;
        com.android.internal.telephony.cdma.CDMAPhone $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5, $r15;
        com.android.internal.telephony.uicc.IccRecords $r6, $r14;
        android.database.ContentObserver $r8, $r10;
        android.content.ContentResolver $r9, $r11;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void checkCorrectThread()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("ServiceStateTracker dispose");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void unregisterForRadioStateChanged(android.os.Handler)>(r0);

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForVoiceNetworkStateChanged(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaOtaProvision(android.os.Handler)>(r0);

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForEriFileLoaded(android.os.Handler)>(r0);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r5 == null goto label1;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r15.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

     label1:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r6 == null goto label2;

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r14.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

     label2:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void unSetOnNITZTime(android.os.Handler)>(r0);

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeObserver>;

        virtualinvoke $r9.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r8);

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeZoneObserver>;

        virtualinvoke $r11.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r10);

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        virtualinvoke $r12.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void dispose(android.os.Handler)>(r0);

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaPrlChanged(android.os.Handler)>(r0);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void dispose()>();

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r48, $r50, $r51, $r53, $r55, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r68, $r69, $r70, $r71, $r72, $r74, $r76, $r78, $r79, $r80, $r81, $r83, $r84, $r86, $r89, $r90, $r91, $r94, $r96, $r97, $r98, $r99, $r101, $r103, $r104, $r106, $r107, $r109, $r110, $r112, $r114, $r115, $r116, $r118, $r120, $r121, $r124, $r126, $r127, $r128, $r129, $r131, $r132, $r134, $r136, $r137, $r138, $r139, $r141, $r142, $r145, $r147;
        com.android.internal.telephony.cdma.CDMAPhone $r6;
        java.lang.String $r8, $r13, $r19, $r22, $r29, $r34, $r35, $r39, $r46, $r49, $r52, $r54, $r57, $r64, $r67, $r73, $r75, $r77, $r82, $r85, $r88, $r92, $r93, $r95, $r100, $r105, $r108, $r111, $r117, $r119, $r122, $r123, $r125, $r130, $r133, $r135, $r140, $r144, $r146;
        android.telephony.ServiceState $r11, $r17;
        android.telephony.cdma.CdmaCellLocation $r20, $r27;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long $l5, $l6, $l7;
        android.os.PowerManager$WakeLock $r87;
        int[] $r102, $r113;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r143;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("CdmaServiceStateTracker extends:");

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPhone=");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSS=");

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewSS=");

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCellLoc=");

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewCellLoc=");

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentOtaspMode=");

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaRoaming=");

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRoamingIndicator=");

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsInPrl=");

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r46);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDefaultRoamingIndicator=");

        $i2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRegistrationState=");

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState>;

        $r53 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNeedFixZone=");

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r54);

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneOffset=");

        $i4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneDst=");

        $z3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $r66 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneTime=");

        $l5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        $r63 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGotCountryCode=");

        $z4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r75);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedTimeZone=");

        $r73 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r82 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r82);

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedTime=");

        $l6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $r78 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r77);

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedAtTime=");

        $l7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $r90 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r88);

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLock=");

        $r87 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r87);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r85);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurPlmn=");

        $r95 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn>;

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r93 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r93);

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMdn=");

        $r92 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn>;

        $r106 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r105);

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHomeSystemId=");

        $r102 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $r101 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHomeNetworkId=");

        $r113 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId>;

        $r112 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r113);

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r111);

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMin=");

        $r108 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $r107 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r122 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r122);

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPrlVersion=");

        $r123 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion>;

        $r126 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r125);

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsMinInfoReady=");

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady>;

        $r115 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r117);

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsEriTextLoaded=");

        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsEriTextLoaded>;

        $r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r119);

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsSubscriptionFromRuim=");

        $z7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r140);

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaSSM=");

        $r143 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $r129 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r143);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r130);

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRegistrationDeniedReason=");

        $r133 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason>;

        $r134 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r135);

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r147 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentCarrier=");

        $r146 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurrentCarrier>;

        $r145 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r144);

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("CdmaServiceStateTracker finalized");

        return;
    }

    protected void fixTimeZone(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r2, $r16, $r18, $r20, $r22, $r23, $r28, $r30, $r35, $r39, $r40;
        java.util.TimeZone r3;
        long l0, l1, l2, $l6, $l9, $l13, $l14, $l15;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r17, $r19, $r21, $r25, $r26, $r27, $r29, $r31, $r32, $r33, $r34, $r36, $r37, $r38;
        int $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String[] $r13, $r24;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone zoneName=\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' mZoneOffset=");

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneDst=");

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iso-cc=\'");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' iso-cc-idx=");

        $r13 = <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String[] GMT_COUNTRY_CODES>;

        $i4 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r13, r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r16);

        $i5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        if $i5 != 0 goto label5;

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        if $z5 != 0 goto label5;

        if r2 == null goto label5;

        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i10 <= 0 goto label5;

        $r24 = <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String[] GMT_COUNTRY_CODES>;

        $i11 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r24, r1);

        if $i11 >= 0 goto label5;

        r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        if $z6 == 0 goto label1;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i12 = virtualinvoke r3.<java.util.TimeZone: int getOffset(long)>(l0);

        l1 = (long) $i12;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: tzOffset=");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ltod=");

        $r30 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>(l0);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r28);

        $z7 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTime()>();

        if $z7 == 0 goto label4;

        l2 = l0 - l1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: adj ltod=");

        $r35 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>(l2);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r40);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>(l2);

     label1:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: using default TimeZone");

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone> = 0;

        if r3 == null goto label8;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: zone != null zone.getID=");

        $r18 = virtualinvoke r3.<java.util.TimeZone: java.lang.String getID()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r22);

        $z3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTimeZone()>();

        if $z3 == 0 goto label7;

        $r23 = virtualinvoke r3.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>($r23);

     label3:
        $r20 = virtualinvoke r3.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveNitzTimeZone(java.lang.String)>($r20);

        return;

     label4:
        $l14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $l13 = $l14 - l1;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime> = $l13;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: adj mSavedTime=");

        $l15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r39);

        goto label1;

     label5:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label6;

        $i8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $z4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $l9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        r3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone getNitzTimeZone(int,boolean,long)>($i8, $z4, $l9);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: using NITZ TimeZone");

        goto label2;

     label6:
        $i7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $l6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        r3 = staticinvoke <android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>($i7, $z2, $l6, r1);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: using getTimeZone(off, dst, time, iso)");

        goto label2;

     label7:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: skip changing zone as getAutoTimeZone was false");

        goto label3;

     label8:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: zone == null, do nothing for zone");

        return;
    }

    public java.lang.String getCdmaMin()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        return $r1;
    }

    public int getCurrentDataConnectionState()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.telephony.ServiceState $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r1.<android.telephony.ServiceState: int getDataRegState()>();

        return $i0;
    }

    java.lang.String getImsi()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r2, $r5, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.sim.operator.numeric", "");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return null;
    }

    public java.lang.String getMdnNumber()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn>;

        return $r1;
    }

    int getOtasp()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        byte b0;
        java.lang.String $r1, $r4, $r7, $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r10;
        int $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        if $r1 == null goto label1;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 >= 6 goto label3;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOtasp: bad mMin=\'");

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        b0 = 1;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOtasp: state=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r11);

        return b0;

     label3:
        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("1111110111");

        if $z0 != 0 goto label4;

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("000000");

        if $z1 != 0 goto label4;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("test_cdma_setup", 0);

        if $z2 == 0 goto label5;

     label4:
        b0 = 2;

        goto label2;

     label5:
        b0 = 3;

        goto label2;
    }

    protected com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        return $r1;
    }

    public java.lang.String getPrlVersion()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion>;

        return $r1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Message r1, $r24, $r79, $r91;
        android.os.AsyncResult r2, r3, r4, r5, r6, r8, r9, $r69, $r98;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18;
        java.lang.String[] r7, r10, $r28, $r55;
        java.lang.NumberFormatException r11, $r100;
        boolean $z0, $z1, $z3;
        com.android.internal.telephony.cdma.CDMAPhone $r12, $r50, $r67, $r72;
        java.lang.Object $r13, $r14, $r20, $r22, $r25, $r31, $r45, $r54, $r66, $r75, $r76, $r77, $r81, $r85, $r86, $r87, $r90;
        java.lang.Throwable $r15, $r23, $r30, $r53, $r68;
        int[] $r16, $r17, $r21, $r26;
        java.lang.String $r18, $r33, $r35, $r36, $r37, $r40, $r41, $r42, $r44, $r46, $r51, $r52, $r56, $r57, $r58, $r59, $r60, $r61, $r64, $r65, $r70, $r80, $r103, $r109;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r19, $r94;
        com.android.internal.telephony.CommandsInterface $r27, $r78, $r89, $r92, $r97;
        java.lang.StringBuilder $r29, $r32, $r34, $r38, $r39, $r43, $r62, $r63, $r71, $r93, $r99, $r101, $r102, $r104, $r105, $r106, $r107, $r108, $r110;
        com.android.internal.telephony.uicc.IccRecords $r47, $r48;
        android.telephony.cdma.CdmaCellLocation $r49;
        java.lang.Object[] $r73, $r74, $r83, $r84;
        long $l15;
        java.lang.Long $r82;
        com.android.internal.telephony.CommandsInterface$RadioState $r88, $r95, $r96;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: android.os.Message;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $z0 = $r12.<com.android.internal.telephony.cdma.CDMAPhone: boolean mIsTheCurrentActivePhone>;

        if $z0 != 0 goto label02;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received message ");

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i18 = r1.<android.os.Message: int what>;

        $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r107 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r110 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while being destroyed. Ignoring.");

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r109);

     label01:
        return;

     label02:
        $i7 = r1.<android.os.Message: int what>;

        tableswitch($i7)
        {
            case 1: goto label09;
            case 2: goto label03;
            case 3: goto label12;
            case 4: goto label03;
            case 5: goto label24;
            case 6: goto label03;
            case 7: goto label03;
            case 8: goto label03;
            case 9: goto label03;
            case 10: goto label28;
            case 11: goto label29;
            case 12: goto label30;
            case 13: goto label03;
            case 14: goto label03;
            case 15: goto label03;
            case 16: goto label03;
            case 17: goto label03;
            case 18: goto label32;
            case 19: goto label03;
            case 20: goto label03;
            case 21: goto label03;
            case 22: goto label03;
            case 23: goto label03;
            case 24: goto label24;
            case 25: goto label24;
            case 26: goto label05;
            case 27: goto label31;
            case 28: goto label03;
            case 29: goto label03;
            case 30: goto label11;
            case 31: goto label13;
            case 32: goto label03;
            case 33: goto label03;
            case 34: goto label25;
            case 35: goto label08;
            case 36: goto label33;
            case 37: goto label34;
            case 38: goto label03;
            case 39: goto label04;
            case 40: goto label36;
            default: goto label03;
        };

     label03:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handleMessage(android.os.Message)>(r1);

        return;

     label04:
        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i9 = virtualinvoke $r19.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleCdmaSubscriptionSource(int)>($i9);

        return;

     label05:
        $r72 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $i14 = virtualinvoke $r72.<com.android.internal.telephony.cdma.CDMAPhone: int getLteOnCdmaMode()>();

        if $i14 != 1 goto label07;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Receive EVENT_RUIM_READY");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

     label06:
        $r67 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r67.<com.android.internal.telephony.cdma.CDMAPhone: void prepareEri()>();

        return;

     label07:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Receive EVENT_RUIM_READY and Send Request getCDMASubscription.");

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>();

        goto label06;

     label08:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>();

        return;

     label09:
        $r97 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r96 = interfaceinvoke $r97.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $r95 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_ON>;

        if $r96 != $r95 goto label10;

        $r94 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i17 = virtualinvoke $r94.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleCdmaSubscriptionSource(int)>($i17);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>();

     label10:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setPowerStateToDesired()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        return;

     label11:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        return;

     label12:
        $r89 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r88 = interfaceinvoke $r89.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z3 = virtualinvoke $r88.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z3 == 0 goto label01;

        $r87 = r1.<android.os.Message: java.lang.Object obj>;

        $r98 = (android.os.AsyncResult) $r87;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>($r98, 0);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>();

        return;

     label13:
        $r45 = r1.<android.os.Message: java.lang.Object obj>;

        r9 = (android.os.AsyncResult) $r45;

        $r53 = r9.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r53 != null goto label22;

        $r54 = r9.<android.os.AsyncResult: java.lang.Object result>;

        $r55 = (java.lang.String[]) $r54;

        r10 = (java.lang.String[]) $r55;

        i1 = -1;

        i2 = 2147483647;

        i3 = 2147483647;

        i5 = -1;

        i4 = -1;

        $i12 = lengthof r10;

        if $i12 <= 9 goto label21;

     label14:
        $r51 = r10[4];

        if $r51 == null goto label15;

        $r65 = r10[4];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r65);

     label15:
        $r52 = r10[5];

        if $r52 == null goto label16;

        $r64 = r10[5];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r64);

     label16:
        $r58 = r10[6];

        if $r58 == null goto label37;

        $r57 = r10[6];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r57);

     label17:
        goto label37;

     label18:
        $r59 = r10[8];

        if $r59 == null goto label19;

        $r56 = r10[8];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r56);

     label19:
        $r60 = r10[9];

        if $r60 == null goto label21;

        $r61 = r10[9];

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r61);

     label20:
        i4 = i6;

     label21:
        $r49 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        virtualinvoke $r49.<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>(i1, i2, i3, i5, i4);

        $r50 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r50.<com.android.internal.telephony.cdma.CDMAPhone: void notifyLocationChanged()>();

     label22:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void disableSingleLocationUpdate()>();

        return;

     label23:
        $r100 := @caughtexception;

        r11 = $r100;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing cell location data: ");

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r103);

        goto label21;

     label24:
        $r90 = r1.<android.os.Message: java.lang.Object obj>;

        r8 = (android.os.AsyncResult) $r90;

        $i16 = r1.<android.os.Message: int what>;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>($i16, r8);

        return;

     label25:
        $r25 = r1.<android.os.Message: java.lang.Object obj>;

        r6 = (android.os.AsyncResult) $r25;

        $r30 = r6.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r30 != null goto label01;

        $r31 = r6.<android.os.AsyncResult: java.lang.Object result>;

        $r28 = (java.lang.String[]) $r31;

        r7 = (java.lang.String[]) $r28;

        if r7 == null goto label27;

        $i11 = lengthof r7;

        if $i11 < 5 goto label27;

        $r37 = r7[0];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn> = $r37;

        $r35 = r7[1];

        $r36 = r7[2];

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void parseSidNid(java.lang.String,java.lang.String)>($r35, $r36);

        $r41 = r7[3];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin> = $r41;

        $r40 = r7[4];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion> = $r40;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_CDMA_SUBSCRIPTION: MDN=");

        $r44 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn>;

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r42);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady> = 1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateOtaspState()>();

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z1 != 0 goto label26;

        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r48 == null goto label26;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("GET_CDMA_SUBSCRIPTION set imsi in mIccRecords");

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r46 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getImsi()>();

        virtualinvoke $r47.<com.android.internal.telephony.uicc.IccRecords: void setImsi(java.lang.String)>($r46);

        return;

     label26:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("GET_CDMA_SUBSCRIPTION either mIccRecords is null  or NV type device - not setting Imsi in mIccRecords");

        return;

     label27:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_CDMA_SUBSCRIPTION: error parsing cdmaSubscription params num=");

        $i10 = lengthof r7;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r33);

        return;

     label28:
        $r92 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r91 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r92.<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>($r91);

        return;

     label29:
        $r75 = r1.<android.os.Message: java.lang.Object obj>;

        r5 = (android.os.AsyncResult) $r75;

        $r76 = r5.<android.os.AsyncResult: java.lang.Object result>;

        $r73 = (java.lang.Object[]) $r76;

        $r74 = (java.lang.Object[]) $r73;

        $r85 = $r74[0];

        $r80 = (java.lang.String) $r85;

        $r86 = r5.<android.os.AsyncResult: java.lang.Object result>;

        $r83 = (java.lang.Object[]) $r86;

        $r84 = (java.lang.Object[]) $r83;

        $r81 = $r84[1];

        $r82 = (java.lang.Long) $r81;

        $l15 = virtualinvoke $r82.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>($r80, $l15);

        return;

     label30:
        $r77 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (android.os.AsyncResult) $r77;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDontPollSignalStrength> = 1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>(r4, 0);

        return;

     label31:
        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_RUIM_RECORDS_LOADED: what=");

        $i13 = r1.<android.os.Message: int what>;

        $r71 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r70);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>();

        return;

     label32:
        $r66 = r1.<android.os.Message: java.lang.Object obj>;

        $r69 = (android.os.AsyncResult) $r66;

        $r68 = $r69.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r68 != null goto label01;

        $r78 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r79 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(31, null);

        interfaceinvoke $r78.<com.android.internal.telephony.CommandsInterface: void getVoiceRegistrationState(android.os.Message)>($r79);

        return;

     label33:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("[CdmaServiceStateTracker] ERI file has been loaded, repolling.");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        return;

     label34:
        $r22 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (android.os.AsyncResult) $r22;

        $r23 = r3.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r23 != null goto label01;

        $r20 = r3.<android.os.AsyncResult: java.lang.Object result>;

        $r21 = (int[]) $r20;

        $r26 = (int[]) $r21;

        i0 = $r26[0];

        if i0 == 8 goto label35;

        if i0 != 10 goto label01;

     label35:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("EVENT_OTA_PROVISION_STATUS_CHANGE: Complete, Reload MDN");

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r24 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(34);

        interfaceinvoke $r27.<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>($r24);

        return;

     label36:
        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r13;

        $r15 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r15 != null goto label01;

        $r14 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r17 = (int[]) $r14;

        $r16 = (int[]) $r17;

        $i8 = $r16[0];

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion> = $r18;

        return;

     label37:
        if i2 != 0 goto label18;

        if i3 != 0 goto label18;

        i2 = 2147483647;

        i3 = 2147483647;

        goto label18;

        catch java.lang.NumberFormatException from label14 to label15 with label23;
        catch java.lang.NumberFormatException from label15 to label16 with label23;
        catch java.lang.NumberFormatException from label16 to label17 with label23;
        catch java.lang.NumberFormatException from label18 to label19 with label23;
        catch java.lang.NumberFormatException from label19 to label20 with label23;
    }

    protected void handlePollStateResult(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.os.AsyncResult r1;
        java.lang.RuntimeException r2, $r65;
        int[] r3, $r5, $r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        com.android.internal.telephony.CommandException$Error r4, $r51, $r54;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r52, $r56, $r61;
        android.telephony.ServiceState $r9, $r10, $r12, $r13, $r14, $r16, $r22, $r25, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48;
        java.lang.String $r11, $r35, $r59, $r62;
        com.android.internal.telephony.cdma.EriManager $r15, $r18;
        com.android.internal.telephony.cdma.CDMAPhone $r17, $r19;
        java.lang.StringBuilder $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r50, $r58, $r60, $r63, $r64, $r66;
        com.android.internal.telephony.CommandsInterface$RadioState $r49;
        com.android.internal.telephony.CommandsInterface $r53;
        com.android.internal.telephony.CommandException $r55, $r57;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.AsyncResult;

        $r6 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        if $r6 == $r5 goto label02;

     label01:
        return;

     label02:
        $r7 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r7 == null goto label12;

        $r52 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        z4 = $r52 instanceof com.android.internal.telephony.CommandException;

        r4 = null;

        if z4 == 0 goto label03;

        $r56 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r57 = (com.android.internal.telephony.CommandException) $r56;

        $r55 = (com.android.internal.telephony.CommandException) $r57;

        r4 = virtualinvoke $r55.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

     label03:
        $r54 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error RADIO_NOT_AVAILABLE>;

        if r4 != $r54 goto label04;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void cancelPollState()>();

        return;

     label04:
        $r53 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r49 = interfaceinvoke $r53.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z16 = virtualinvoke $r49.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z16 != 0 goto label05;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void cancelPollState()>();

        return;

     label05:
        $r51 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error OP_NOT_ALLOWED_BEFORE_REG_NW>;

        if r4 == $r51 goto label06;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResult: RIL returned an error where it must succeed");

        $r61 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r59);

     label06:
        r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i2 = r3[0];

        $i3 = -1 + $i2;

        r3[0] = $i3;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i4 = $r8[0];

        if $i4 != 0 goto label01;

        z0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isSidsAllZeros()>();

        z1 = 0;

        if z0 != 0 goto label07;

        $r46 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i19 = virtualinvoke $r46.<android.telephony.ServiceState: int getSystemId()>();

        z3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isHomeSid(int)>($i19);

        z1 = 0;

        if z3 == 0 goto label07;

        z1 = 1;

     label07:
        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z6 == 0 goto label15;

        $r45 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z14 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isRoamingBetweenOperators(boolean,android.telephony.ServiceState)>($z15, $r48);

        virtualinvoke $r45.<android.telephony.ServiceState: void setRoaming(boolean)>($z14);

     label08:
        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r10.<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)>($i5);

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r12.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i6);

        z2 = 1;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion>;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z7 == 0 goto label09;

        z2 = 0;

     label09:
        if z2 == 0 goto label10;

        $r40 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i15 = virtualinvoke $r40.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i15 != 0 goto label16;

     label10:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Turn off roaming indicator if !isPrlLoaded or voice RAT is unknown");

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r13.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

     label11:
        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        i1 = virtualinvoke $r14.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r15 = $r17.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $i7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $i9 = virtualinvoke $r15.<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)>(i1, $i7);

        virtualinvoke $r16.<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>($i9);

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r18 = $r19.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $i8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $i10 = virtualinvoke $r18.<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)>(i1, $i8);

        virtualinvoke $r22.<android.telephony.ServiceState: void setCdmaEriIconMode(int)>($i10);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set CDMA Roaming Indicator to: ");

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i11 = virtualinvoke $r25.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". mCdmaRoaming = ");

        $z8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isPrlLoaded = ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". namMatch = ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , mIsInPrl = ");

        $z9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRoamingIndicator = ");

        $i12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDefaultRoamingIndicator= ");

        $i13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r35);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>();

        return;

     label12:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>(i0, r1);

     label13:
        goto label06;

     label14:
        $r65 := @caughtexception;

        r2 = $r65;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResult: Exception while polling service state. Probably malformed RIL response.");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r62 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r62);

        goto label06;

     label15:
        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        virtualinvoke $r9.<android.telephony.ServiceState: void setRoaming(boolean)>($z5);

        goto label08;

     label16:
        $z11 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isSidsAllZeros()>();

        if $z11 != 0 goto label11;

        if z1 != 0 goto label17;

        $z12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        if $z12 != 0 goto label17;

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r47.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i20);

        goto label11;

     label17:
        if z1 == 0 goto label19;

        $z13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        if $z13 != 0 goto label19;

        $r44 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i17 = virtualinvoke $r44.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i17 != 14 goto label18;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Turn off roaming indicator as voice is LTE");

        $r42 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r42.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label11;

     label18:
        $r41 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r41.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(2);

        goto label11;

     label19:
        if z1 != 0 goto label20;

        $z10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        if $z10 == 0 goto label20;

        $r43 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r43.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i18);

        goto label11;

     label20:
        $i16 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        if $i16 > 2 goto label21;

        $r39 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r39.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label11;

     label21:
        $r38 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r38.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i14);

        goto label11;

        catch java.lang.RuntimeException from label12 to label13 with label14;
    }

    protected void handlePollStateResultMessage(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.os.AsyncResult r1;
        java.lang.String[] r2, r3, r11, $r16, $r41, $r81;
        java.lang.NumberFormatException r4, r13, $r87, $r100;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String r5, r6, r7, r8, r9, r10, r12, $r14, $r17, $r19, $r23, $r24, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r56, $r57, $r58, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r72, $r73, $r74, $r75, $r84, $r85, $r86, $r95, $r99;
        java.lang.Object $r15, $r40, $r71;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r25, $r37, $r38, $r39, $r47, $r59, $r60, $r61, $r76, $r77, $r78, $r79, $r80, $r82, $r83, $r89, $r91, $r92, $r93, $r94, $r96, $r97, $r98, $r101, $r102, $r103;
        android.telephony.ServiceState $r27, $r32, $r51, $r52, $r54, $r55, $r88, $r90;
        java.lang.RuntimeException $r42;
        android.telephony.cdma.CdmaCellLocation $r53;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.AsyncResult;

        lookupswitch(i0)
        {
            case 5: goto label03;
            case 24: goto label12;
            case 25: goto label49;
            default: goto label01;
        };

     label01:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>("handlePollStateResultMessage: RIL response handle in wrong phone! Expected CDMA RIL request and get GSM RIL request.");

     label02:
        return;

     label03:
        $r71 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r81 = (java.lang.String[]) $r71;

        r11 = (java.lang.String[]) $r81;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: EVENT_POLL_STATE_GPRS states.length=");

        $i26 = lengthof r11;

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" states=");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r75);

        i15 = 4;

        i14 = lengthof r11;

        i17 = 0;

        if i14 <= 0 goto label10;

     label04:
        $r84 = r11[0];

        i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r84);

        i19 = lengthof r11;

     label05:
        i17 = 0;

        if i19 < 4 goto label10;

     label06:
        r12 = r11[3];

     label07:
        i17 = 0;

        if r12 == null goto label10;

     label08:
        $r86 = r11[3];

        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r86);

     label09:
        i17 = i18;

     label10:
        i16 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int regCodeToServiceState(int)>(i15);

        $r88 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r88.<android.telephony.ServiceState: void setDataRegState(int)>(i16);

        $r90 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r90.<android.telephony.ServiceState: void setRilDataRadioTechnology(int)>(i17);

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlPollStateResultMessage: cdma setDataRegState=");

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r94 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" regState=");

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r83 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataRadioTechnology=");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r85 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r85);

        return;

     label11:
        $r100 := @caughtexception;

        r13 = $r100;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: error parsing GprsRegistrationState: ");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r95 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r95);

        i17 = 0;

        goto label10;

     label12:
        $r40 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r41 = (java.lang.String[]) $r40;

        r3 = (java.lang.String[]) $r41;

        i1 = 4;

        i2 = -1;

        i3 = -1;

        i4 = 2147483647;

        i5 = 2147483647;

        i6 = 0;

        i7 = 0;

        i8 = 0;

        i9 = -1;

        i10 = 0;

        i11 = 0;

        $i23 = lengthof r3;

        if $i23 < 14 goto label44;

     label13:
        $r49 = r3[0];

        if $r49 == null goto label14;

        $r72 = r3[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r72);

     label14:
        $r50 = r3[3];

        if $r50 == null goto label15;

        $r73 = r3[3];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r73);

     label15:
        $r43 = r3[4];

        if $r43 == null goto label16;

        $r74 = r3[4];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r74);

     label16:
        $r44 = r3[5];

        if $r44 == null goto label17;

        $r67 = r3[5];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r67);

     label17:
        $r45 = r3[6];

        if $r45 == null goto label54;

        $r68 = r3[6];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r68);

     label18:
        goto label54;

     label19:
        r6 = r3[7];

     label20:
        i6 = 0;

        if r6 == null goto label22;

     label21:
        $r69 = r3[7];

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r69);

     label22:
        r5 = r3[8];

     label23:
        i7 = 0;

        if r5 == null goto label25;

     label24:
        $r70 = r3[8];

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r70);

     label25:
        r8 = r3[9];

     label26:
        i8 = 0;

        if r8 == null goto label28;

     label27:
        $r63 = r3[9];

        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r63);

     label28:
        $r46 = r3[10];

        if $r46 == null goto label29;

        $r64 = r3[10];

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r64);

     label29:
        r7 = r3[11];

     label30:
        i10 = 0;

        if r7 == null goto label32;

     label31:
        $r65 = r3[11];

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r65);

     label32:
        r10 = r3[12];

     label33:
        i11 = 0;

        if r10 == null goto label35;

     label34:
        $r66 = r3[12];

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r66);

     label35:
        r9 = r3[13];

     label36:
        i12 = 0;

        if r9 == null goto label39;

     label37:
        $r58 = r3[13];

        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r58);

     label38:
        i12 = i13;

     label39:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState> = i1;

        $z4 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean regCodeIsRoaming(int)>(i1);

        if $z4 == 0 goto label45;

        $r56 = r3[10];

        $z5 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isRoamIndForHomeSystem(java.lang.String)>($r56);

        if $z5 != 0 goto label45;

        z1 = 1;

     label40:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming> = z1;

        $r54 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i25 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int regCodeToServiceState(int)>(i1);

        virtualinvoke $r54.<android.telephony.ServiceState: void setState(int)>($i25);

        $r55 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r55.<android.telephony.ServiceState: void setRilVoiceRadioTechnology(int)>(i2);

        $r52 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r52.<android.telephony.ServiceState: void setCssIndicator(int)>(i6);

        $r51 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r51.<android.telephony.ServiceState: void setSystemAndNetworkId(int,int)>(i7, i8);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator> = i9;

        if i10 != 0 goto label46;

        z0 = 0;

     label41:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl> = z0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator> = i11;

        $r53 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        virtualinvoke $r53.<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>(i3, i4, i5, i7, i8);

        if i12 != 0 goto label47;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "General";

     label42:
        $i24 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState>;

        if $i24 != 3 goto label02;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registration denied, ");

        $r62 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r57 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r57);

        return;

     label43:
        $r87 := @caughtexception;

        r4 = $r87;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_POLL_STATE_REGISTRATION_CDMA: error parsing: ");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r99);

        i12 = 0;

        goto label39;

     label44:
        $r42 = new java.lang.RuntimeException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning! Wrong number of parameters returned from RIL_REQUEST_REGISTRATION_STATE: expected 14 or more strings and got ");

        $i22 = lengthof r3;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r47 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" strings");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.RuntimeException: void <init>(java.lang.String)>($r48);

        throw $r42;

     label45:
        z1 = 0;

        goto label40;

     label46:
        z0 = 1;

        goto label41;

     label47:
        if i12 != 1 goto label48;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "Authentication Failure";

        goto label42;

     label48:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "";

        goto label42;

     label49:
        $r15 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r16 = (java.lang.String[]) $r15;

        r2 = (java.lang.String[]) $r16;

        if r2 == null goto label53;

        $i20 = lengthof r2;

        if $i20 < 3 goto label53;

        $r14 = r2[2];

        if $r14 == null goto label50;

        $r31 = r2[2];

        $i21 = virtualinvoke $r31.<java.lang.String: int length()>();

        if $i21 < 5 goto label50;

        $r35 = "00000";

        $r36 = r2[2];

        $z3 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z3 == 0 goto label51;

     label50:
        $r19 = <com.android.internal.telephony.cdma.CDMAPhone: java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC>;

        $r17 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>($r19, "00000");

        r2[2] = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_OPERATOR.response[2], the numeric,  is bad. Using SystemProperties \'");

        $r23 = <com.android.internal.telephony.cdma.CDMAPhone: java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'= ");

        $r26 = r2[2];

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r24);

     label51:
        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z2 != 0 goto label52;

        $r32 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r33 = r2[1];

        $r34 = r2[2];

        virtualinvoke $r32.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>(null, $r33, $r34);

        return;

     label52:
        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r28 = r2[0];

        $r29 = r2[1];

        $r30 = r2[2];

        virtualinvoke $r27.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>($r28, $r29, $r30);

        return;

     label53:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("EVENT_POLL_STATE_OPERATOR_CDMA: error parsing opNames");

        return;

     label54:
        if i4 != 0 goto label19;

        if i5 != 0 goto label19;

        i4 = 2147483647;

        i5 = 2147483647;

        goto label19;

        catch java.lang.NumberFormatException from label04 to label05 with label11;
        catch java.lang.NumberFormatException from label06 to label07 with label11;
        catch java.lang.NumberFormatException from label08 to label09 with label11;
        catch java.lang.NumberFormatException from label13 to label14 with label43;
        catch java.lang.NumberFormatException from label14 to label15 with label43;
        catch java.lang.NumberFormatException from label15 to label16 with label43;
        catch java.lang.NumberFormatException from label16 to label17 with label43;
        catch java.lang.NumberFormatException from label17 to label18 with label43;
        catch java.lang.NumberFormatException from label19 to label20 with label43;
        catch java.lang.NumberFormatException from label21 to label22 with label43;
        catch java.lang.NumberFormatException from label22 to label23 with label43;
        catch java.lang.NumberFormatException from label24 to label25 with label43;
        catch java.lang.NumberFormatException from label25 to label26 with label43;
        catch java.lang.NumberFormatException from label27 to label28 with label43;
        catch java.lang.NumberFormatException from label28 to label29 with label43;
        catch java.lang.NumberFormatException from label29 to label30 with label43;
        catch java.lang.NumberFormatException from label31 to label32 with label43;
        catch java.lang.NumberFormatException from label32 to label33 with label43;
        catch java.lang.NumberFormatException from label34 to label35 with label43;
        catch java.lang.NumberFormatException from label35 to label36 with label43;
        catch java.lang.NumberFormatException from label37 to label38 with label43;
    }

    protected void hangupAndPowerOff()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1, $r4, $r7;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2, $r5, $r8;
        com.android.internal.telephony.cdma.CdmaCall $r3, $r6, $r9;
        com.android.internal.telephony.CommandsInterface $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r2 = $r1.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        virtualinvoke $r3.<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>();

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r5 = $r4.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r6 = $r5.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>();

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r8 = $r7.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r9 = $r8.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>();

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(0, null);

        return;
    }

    public boolean isConcurrentVoiceAndDataAllowed()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        return 0;
    }

    public boolean isMinInfoReady()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady>;

        return $z0;
    }

    protected boolean isSidsAllZeros()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, $i1, $i2;
        int[] $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        if $r1 == null goto label3;

        i0 = 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i2 = $r3[i0];

        if $i2 == 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CdmaSST] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaSST", $r5);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CdmaSST] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaSST", $r5);

        return;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, $r4, $r5, $r6, $r8, $r11;
        com.android.internal.telephony.uicc.UiccController $r2, $r3;
        com.android.internal.telephony.uicc.IccRecords $r7, $r9, $r10, $r12, $r13;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(2);

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r4 == r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r5 == null goto label4;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Removing stale icc objects.");

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r11.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r12 == null goto label3;

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r13.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

     label3:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = null;

     label4:
        if r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("New card found");

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = r1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = $r7;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r8.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>(r0, 26, null);

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r9 == null goto label1;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r10.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 27, null);

        return;
    }

    protected void parseSidNid(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r2, $r10, $r14, $r16, $r20, $r23, $r30;
        java.lang.String[] r3, r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.NumberFormatException r4, r6, $r21, $r28;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r22, $r24, $r25, $r26, $r27, $r29;
        int[] $r15, $r17, $r18, $r19;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label05;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i5 = lengthof r5;

        $r18 = newarray (int)[$i5];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId> = $r18;

        i1 = 0;

     label01:
        $i6 = lengthof r5;

        if i1 >= $i6 goto label05;

     label02:
        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $r20 = r5[i1];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        $r19[i1] = $i7;

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $r21 := @caughtexception;

        r6 = $r21;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing system id: ");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r23);

        goto label03;

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: SID=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r10);

        if r2 == null goto label10;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i2 = lengthof r3;

        $r15 = newarray (int)[$i2];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId> = $r15;

        i0 = 0;

     label06:
        $i3 = lengthof r3;

        if i0 >= $i3 goto label10;

     label07:
        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId>;

        $r16 = r3[i0];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        $r17[i0] = $i4;

     label08:
        i0 = i0 + 1;

        goto label06;

     label09:
        $r28 := @caughtexception;

        r4 = $r28;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: error parsing network id: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r30);

        goto label08;

     label10:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: NID=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r14);

        return;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }

    protected void pollState()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int[] r1, r2, r3, $r4, $r5, $r7, $r9, $r13, $r15;
        com.android.internal.telephony.CommandsInterface $r6, $r10, $r12, $r17;
        com.android.internal.telephony.CommandsInterface$RadioState $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.os.Message $r11, $r14, $r16;
        android.telephony.cdma.CdmaCellLocation $r18, $r20;
        android.telephony.ServiceState $r19, $r21;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r4 = newarray (int)[1];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext> = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r5[0] = 0;

        $r7 = <com.android.internal.telephony.cdma.CdmaServiceStateTracker$3: int[] $SwitchMap$com$android$internal$telephony$CommandsInterface$RadioState>;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $i0 = virtualinvoke $r8.<com.android.internal.telephony.CommandsInterface$RadioState: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i2 = r1[0];

        $i3 = 1 + $i2;

        r1[0] = $i3;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r11 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(25, $r9);

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void getOperator(android.os.Message)>($r11);

        r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i5 = r2[0];

        $i4 = 1 + $i5;

        r2[0] = $i4;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r14 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(24, $r13);

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void getVoiceRegistrationState(android.os.Message)>($r14);

        r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i6 = r3[0];

        $i7 = 1 + $i6;

        r3[0] = $i7;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r16 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(5, $r15);

        interfaceinvoke $r17.<com.android.internal.telephony.CommandsInterface: void getDataRegistrationState(android.os.Message)>($r16);

        return;

     label2:
        $r21 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r21.<android.telephony.ServiceState: void setStateOutOfService()>();

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        virtualinvoke $r20.<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>();

        return;

     label3:
        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r19.<android.telephony.ServiceState: void setStateOff()>();

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        virtualinvoke $r18.<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>();

        return;
    }

    protected void pollStateDone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.lang.Object[] r1;
        android.telephony.ServiceState r2, $r14, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r39, $r40, $r42, $r44, $r46, $r47, $r48, $r58, $r60, $r69, $r70, $r76, $r78, $r80, $r81, $r82, $r84, $r87, $r88, $r94, $r95, $r96, $r97;
        android.telephony.cdma.CdmaCellLocation r3, $r35, $r36, $r55;
        java.lang.String r4, r5, r6, r8, r10, r13, $r22, $r59, $r64, $r79, $r93, $r102;
        java.lang.StringIndexOutOfBoundsException r7, $r101;
        com.android.internal.telephony.cdma.CDMAPhone r9, $r54, $r57, $r61, $r65, $r67, $r68, $r71, $r72, $r75, $r77, $r83, $r86;
        java.lang.NumberFormatException r11, $r89;
        java.lang.StringBuilder $r12, $r15, $r16, $r17, $r18, $r21, $r90, $r91, $r92, $r98, $r99, $r100;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.Integer $r41, $r43, $r45, $r49;
        android.os.RegistrantList $r50, $r51, $r53, $r56, $r85;
        com.android.internal.telephony.CommandsInterface $r52;
        com.android.internal.telephony.CommandsInterface$RadioState $r62;
        android.content.Context $r66, $r74;
        java.lang.CharSequence $r73;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: cdma oldSS=[");

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] newSS=[");

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r22);

        $z10 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z10 == 0 goto label01;

        $z21 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.test.forceRoaming", 0);

        if $z21 == 0 goto label01;

        $r88 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r88.<android.telephony.ServiceState: void setRoaming(boolean)>(1);

     label01:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void useDataRegStateForDataOnlyDevices()>();

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r20.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i1 == 0 goto label30;

        $r97 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i22 = virtualinvoke $r97.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i22 != 0 goto label30;

        z0 = 1;

     label02:
        $r24 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r24.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i0 != 0 goto label31;

        $r96 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i25 = virtualinvoke $r96.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i25 == 0 goto label31;

     label03:
        $r23 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i3 = virtualinvoke $r23.<android.telephony.ServiceState: int getDataRegState()>();

        if $i3 == 0 goto label32;

        $r95 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i24 = virtualinvoke $r95.<android.telephony.ServiceState: int getDataRegState()>();

        if $i24 != 0 goto label32;

        z1 = 1;

     label04:
        $r26 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke $r26.<android.telephony.ServiceState: int getDataRegState()>();

        if $i2 != 0 goto label33;

        $r94 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i23 = virtualinvoke $r94.<android.telephony.ServiceState: int getDataRegState()>();

        if $i23 == 0 goto label33;

        z2 = 1;

     label05:
        $r25 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i5 = virtualinvoke $r25.<android.telephony.ServiceState: int getDataRegState()>();

        $r28 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i4 = virtualinvoke $r28.<android.telephony.ServiceState: int getDataRegState()>();

        if $i5 == $i4 goto label34;

        z3 = 1;

     label06:
        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i7 = virtualinvoke $r27.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r30 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i6 = virtualinvoke $r30.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i7 == $i6 goto label35;

        z4 = 1;

     label07:
        $r29 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i9 = virtualinvoke $r29.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $r32 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i8 = virtualinvoke $r32.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        if $i9 == $i8 goto label36;

        z5 = 1;

     label08:
        $r34 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r31 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z12 = virtualinvoke $r34.<android.telephony.ServiceState: boolean equals(java.lang.Object)>($r31);

        if $z12 != 0 goto label37;

        z6 = 1;

     label09:
        $r33 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z11 = virtualinvoke $r33.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z11 != 0 goto label38;

        $r82 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z22 = virtualinvoke $r82.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z22 == 0 goto label38;

        z7 = 1;

     label10:
        $r37 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z13 = virtualinvoke $r37.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z13 == 0 goto label39;

        $r81 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z20 = virtualinvoke $r81.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z20 != 0 goto label39;

        z8 = 1;

     label11:
        $r35 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        $r36 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        $z14 = virtualinvoke $r35.<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>($r36);

        if $z14 != 0 goto label40;

        z9 = 1;

     label12:
        $r39 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i12 = virtualinvoke $r39.<android.telephony.ServiceState: int getVoiceRegState()>();

        $r40 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i10 = virtualinvoke $r40.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i12 != $i10 goto label13;

        $r78 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i19 = virtualinvoke $r78.<android.telephony.ServiceState: int getDataRegState()>();

        $r80 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i20 = virtualinvoke $r80.<android.telephony.ServiceState: int getDataRegState()>();

        if $i19 == $i20 goto label14;

     label13:
        r1 = newarray (java.lang.Object)[4];

        $r38 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i11 = virtualinvoke $r38.<android.telephony.ServiceState: int getVoiceRegState()>();

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        r1[0] = $r43;

        $r44 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i14 = virtualinvoke $r44.<android.telephony.ServiceState: int getDataRegState()>();

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        r1[1] = $r41;

        $r42 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i13 = virtualinvoke $r42.<android.telephony.ServiceState: int getVoiceRegState()>();

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        r1[2] = $r49;

        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i16 = virtualinvoke $r48.<android.telephony.ServiceState: int getDataRegState()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        r1[3] = $r45;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50116, r1);

     label14:
        r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS> = $r47;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS> = r2;

        $r46 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r46.<android.telephony.ServiceState: void setStateOutOfService()>();

        r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        $r55 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc> = $r55;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc> = r3;

        if z4 == 0 goto label15;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>();

     label15:
        if z5 == 0 goto label16;

        $r86 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r87 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i21 = virtualinvoke $r87.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $r79 = staticinvoke <android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>($i21);

        virtualinvoke $r86.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.network.type", $r79);

     label16:
        if z0 == 0 goto label17;

        $r85 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mNetworkAttachedRegistrants>;

        virtualinvoke $r85.<android.os.RegistrantList: void notifyRegistrants()>();

     label17:
        if z6 == 0 goto label22;

        $r52 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r62 = interfaceinvoke $r52.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z15 = virtualinvoke $r62.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z15 == 0 goto label19;

        $z19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z19 != 0 goto label19;

        $r76 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i18 = virtualinvoke $r76.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i18 != 0 goto label41;

        $r83 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r13 = virtualinvoke $r83.<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaEriText()>();

     label18:
        $r84 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r84.<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)>(r13);

     label19:
        $r61 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r60 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r59 = virtualinvoke $r60.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        virtualinvoke $r61.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.alpha", $r59);

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.operator.numeric", "");

        $r58 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        r6 = virtualinvoke $r58.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $r67 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r67.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.numeric", r6);

        $r65 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r66 = virtualinvoke $r65.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateCarrierMccMncConfiguration(java.lang.String,java.lang.String,android.content.Context)>(r6, r4, $r66);

        if r6 != null goto label42;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("operatorNumeric is null");

        $r77 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r77.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.iso-country", "");

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

     label20:
        r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r70 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z16 = virtualinvoke $r70.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z16 == 0 goto label48;

        r8 = "true";

     label21:
        virtualinvoke r9.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.isroaming", r8);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>();

        $r68 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r69 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r68.<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>($r69);

     label22:
        if z1 == 0 goto label23;

        $r53 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mAttachedRegistrants>;

        virtualinvoke $r53.<android.os.RegistrantList: void notifyRegistrants()>();

     label23:
        if z2 == 0 goto label24;

        $r50 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mDetachedRegistrants>;

        virtualinvoke $r50.<android.os.RegistrantList: void notifyRegistrants()>();

     label24:
        if z3 != 0 goto label25;

        if z5 == 0 goto label26;

     label25:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void notifyDataRegStateRilRadioTechnologyChanged()>();

        $r54 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r54.<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String)>(null);

     label26:
        if z7 == 0 goto label27;

        $r51 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mRoamingOnRegistrants>;

        virtualinvoke $r51.<android.os.RegistrantList: void notifyRegistrants()>();

     label27:
        if z8 == 0 goto label28;

        $r56 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mRoamingOffRegistrants>;

        virtualinvoke $r56.<android.os.RegistrantList: void notifyRegistrants()>();

     label28:
        if z9 == 0 goto label29;

        $r57 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r57.<com.android.internal.telephony.cdma.CDMAPhone: void notifyLocationChanged()>();

     label29:
        return;

     label30:
        z0 = 0;

        goto label02;

     label31:
        goto label03;

     label32:
        z1 = 0;

        goto label04;

     label33:
        z2 = 0;

        goto label05;

     label34:
        z3 = 0;

        goto label06;

     label35:
        z4 = 0;

        goto label07;

     label36:
        z5 = 0;

        goto label08;

     label37:
        z6 = 0;

        goto label09;

     label38:
        z7 = 0;

        goto label10;

     label39:
        z8 = 0;

        goto label11;

     label40:
        z9 = 0;

        goto label12;

     label41:
        $r75 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r74 = virtualinvoke $r75.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r73 = virtualinvoke $r74.<android.content.Context: java.lang.CharSequence getText(int)>(17039509);

        r13 = virtualinvoke $r73.<java.lang.Object: java.lang.String toString()>();

        goto label18;

     label42:
        r5 = "";

        virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

     label43:
        $r64 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r64);

        r10 = staticinvoke <com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(int)>($i17);

     label44:
        r5 = r10;

     label45:
        $r72 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r72.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.iso-country", r5);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 1;

        $r71 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $z18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        $z17 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean shouldFixTimeZoneNow(com.android.internal.telephony.PhoneBase,java.lang.String,java.lang.String,boolean)>($r71, r6, r4, $z18);

        if $z17 == 0 goto label20;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>(r5);

        goto label20;

     label46:
        $r89 := @caughtexception;

        r11 = $r89;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: countryCodeForMcc error");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r93);

        goto label45;

     label47:
        $r101 := @caughtexception;

        r7 = $r101;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: countryCodeForMcc error");

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r102 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r102);

        goto label45;

     label48:
        r8 = "false";

        goto label21;

        catch java.lang.NumberFormatException from label43 to label44 with label46;
        catch java.lang.StringIndexOutOfBoundsException from label43 to label44 with label47;
    }

    protected int radioTechnologyToDataServiceState(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label1;
            case 10: goto label1;
            case 11: goto label1;
            case 12: goto label3;
            case 13: goto label3;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>("radioTechnologyToDataServiceState: Wrong radioTechnology code.");

     label2:
        return 1;

     label3:
        return 0;
    }

    protected int regCodeToServiceState(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("regCodeToServiceState: unexpected service state ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r4);

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isMinInfoReady()>();

        if $z0 == 0 goto label1;

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    protected void setPowerStateToDesired()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.CommandsInterface $r1, $r5, $r8;
        com.android.internal.telephony.CommandsInterface$RadioState $r2, $r6, $r7;
        com.android.internal.telephony.cdma.CDMAPhone $r3;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDesiredPowerState>;

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r6 = interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $r7 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_OFF>;

        if $r6 != $r7 goto label2;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(1, null);

     label1:
        return;

     label2:
        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDesiredPowerState>;

        if $z1 != 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z2 = virtualinvoke $r2.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z2 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r4 = $r3.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.dataconnection.DcTrackerBase)>($r4);

        return;
    }

    protected void setSignalStrengthDefaultValues()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.telephony.SignalStrength $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = new android.telephony.SignalStrength;

        specialinvoke $r1.<android.telephony.SignalStrength: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.SignalStrength mSignalStrength> = $r1;

        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    protected void updateOtaspState()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, $i2, $i3, $i4;
        android.os.RegistrantList $r1, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        com.android.internal.telephony.cdma.CDMAPhone $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getOtasp()>();

        i1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode> = i0;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("CDMA_SUBSCRIPTION: call notifyRegistrants()");

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r9.<android.os.RegistrantList: void notifyRegistrants()>();

     label1:
        $i2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        if i1 == $i2 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: call notifyOtaspChanged old otaspMode=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new otaspMode=");

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $i4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        virtualinvoke $r8.<com.android.internal.telephony.cdma.CDMAPhone: void notifyOtaspChanged(int)>($i4);

     label2:
        return;
    }

    protected void updateSpnDisplay()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r5, $r7;
        boolean z0, $z1;
        java.lang.Object[] r2;
        android.content.Intent r3, $r8;
        android.telephony.ServiceState $r4;
        java.lang.Boolean $r6;
        android.content.Context $r14;
        com.android.internal.telephony.cdma.CDMAPhone $r15;
        android.os.UserHandle $r16;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        r1 = virtualinvoke $r4.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r5);

        if $z1 != 0 goto label2;

        if r1 == null goto label3;

        z0 = 1;

     label1:
        r2 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r2[0] = $r6;

        r2[1] = r1;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateSpnDisplay: changed sending intent showPlmn=\'%b\' plmn=\'%s\'", r2);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.SPN_STRINGS_UPDATED");

        r3 = $r8;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("showSpn", 0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("spn", "");

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("showPlmn", z0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("plmn", r1);

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r14 = virtualinvoke $r15.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r14.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r16);

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn> = r1;

        return;

     label3:
        z0 = 0;

        goto label1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String WAKELOCK_TAG> = "ServiceStateTracker";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String UNACTIVATED_MIN_VALUE> = "1111110111";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String UNACTIVATED_MIN2_VALUE> = "000000";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: int NITZ_UPDATE_SPACING_DEFAULT> = 600000;

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: int NITZ_UPDATE_DIFF_DEFAULT> = 2000;

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String LOG_TAG> = "CdmaSST";

        return;
    }
}
