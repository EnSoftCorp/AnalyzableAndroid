/*
 * Copyright (C) 2011-2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is auto-generated. DO NOT MODIFY!
 * The source Renderscript file: frameworks/rs/java/tests/ImageProcessing/src/com/android/rs/image/blend.rs
 */

package com.android.rs.image;

/**
 * @hide
 */
public class blendBitCode {
    // return byte array representation of the 32-bit bitcode.
    public static byte[] getBitCode32() {
        return getBitCode32Internal();
    };

    private static byte[] getSegment32_0() {
        byte[] data = {
             -34,  -64,   23,   11,    0,    0,    0,    0,   44,    0,    0,    0,  -60,    4,    0,    0,
               0,    0,    0,    0,   21,    0,    0,    0,    0,    0,    0,    0,    1,   64,    4,    0,
             109,    7,    0,    0,    2,   64,    4,    0,    3,    0,    0,    0,   66,   67,  -64,  -34,
              33,   12,    0,    0,   46,    1,    0,    0,    1,   16,    0,    0,   18,    0,    0,    0,
               7, -127,   35, -111,   65,  -56,    4,   73,    6,   16,   50,   57, -110,    1, -124,   12,
              37,    5,    8,   25,   30,    4, -117,   98, -128,   16,   69,    2,   66, -110,   11,   66,
            -124,   16,   50,   20,   56,    8,   24,   73,   10,   50,   68,   36,   72,   10, -112,   33,
              35,  -60,   82, -128,   12,   25,   33,  114,   36,    7,  -56,    8,   17,   98,  -88,  -96,
             -88,   64,  -58,  -16,    1,    0,    0,    0,   73,   24,    0,    0,    9,    0,    0,    0,
              11, -120,    0,    4,   65,   16,    4, -119,   -1,   -1,   -1,   -1,   31,  -64,   96, -127,
             -16,   -1,   -1,   -1,   -1,    3,   24,   45,   16,   -2,   -1,   -1,   -1,  127,    0,   35,
               0,    0,    0,    0, -119,   32,    0,    0,   17,    0,    0,    0,   50,   34,    8,    9,
              32,  100, -123,    4,   19,   34,  -92, -124,    4,   19,   34,  -29, -124,  -95, -112,   20,
              18,   76, -120, -116,   11, -124, -124,   76,   16,   60,  115,    4,    8,  -63,    8,  -64,
              48,    2,    1,  -48,  -52,   17, -128,   65,   33, -124,  -86,  -56, -122,   17, -120,  -94,
               8, -125, -108,   69,  -64,  -95,   29,    8, -104,   35,    0,    5,    0,    0,    0,    0,
              19,  -80,  112, -112, -121,  118,  -80, -121,   59,  104,    3,  119,  120,    7,  119,   40,
            -121,   54,   96, -121,  116,  112, -121,  122,  -64, -121,   54,   56,    7,  119,  -88, -121,
             114,    8,    7,  113,   72, -121,   13,  104,   80,   14,  109,  -48,   14,  122,   80,   14,
             109,    0,   15,  122,   48,    7,  114,  -96,    7,  115,   32,    7,  109, -112,   14,  118,
              64,    7,  122,   96,    7,  116,  -48,    6,  -10,   16,    7,  114, -128,    7,  122,   96,
               7,  116,  -96,    7,  113,   32,    7,  120,  -48,    6,  -18,   48,    7,  114,  -48,    6,
             -77,   96,    7,  116,  -96,  -13,   64, -126,    4,   50,   66,   36,    4,   96,    5,   28,
             -94,   28,    0,    0,    4,    0,    0,    0,  -64,   16,   69,    1,    2,   64,    0,    0,
               0,    0, -122,   40,   12,   16,    0,    2,    0,    0,    0, -112,    5,    2,    0,    0,
               7,    0,    0,    0,   50,   30, -104,   16,   25,   17,   76, -112, -116,    9,   38,   71,
             -58,    4,   67, -126,   17,    0,  -86,   18,   40,    4,  -14,   17,    0,    0,    0,    0,
             121,   24,    0,    0, -124,    0,    0,    0,   67, -116,  -94,  104, -126,  -62,   88,  -96,
             -36,  -61,   56,  -96,   67,   56,  -56,  -61,   47,  -52,   67,   58,  -24,   67,   57,   12,
              49, -118,  -94,   25,   10,   99,   65,  -45,   14,  -23,  -32,   14,  -65,   80,   14,  -18,
              80,   15,  -19,  -16,   11,  -13, -112,   14,   -6,   80,   14,   67, -124,  -90,   88,   32,
            -115,    3,   59, -124, -125,   59, -100,    3,   24,  -40,   67,   57,  -56,  -61,   60,  -92,
             -61,   59,  -72,    3,   24,  -52, -127,   27,  -44,    1,   24,   12,   33, -102,  -93,   65,
              22,   28,  -10,   80,   14,  -14,   48,   15,  -23,  -16,   14,  -18,  -80,   32, -120, -125,
              33,   68,  -93,   52,  -53, -126,   72,   29,  -62,  -63,   30,  -62,  -31,   23,  -32,   33,
              28,  -58,   97,   29,  -62,  -31,   28,  -54,  -31,   23,  -36,   33,   28,  -38,  -95,   28,
              22,   80,  -29,  -16,   14,  -19,  -32,    6,  -31,  -32,   14,  -28,   32,   15,  -17, -112,
              14,  -28,  -32,    6,  -14,   48,   15,  110, -112,   14,  -19,   16,   14,  -25,   80,   14,
              67, -120,  -90,  105, -100,    5, -115,   60,  -52,  -61,   47, -104,    3,   60,   -4, -126,
              60, -108,    3,   59, -124,    3,   62, -108,    3,   57,   44,    0, -122,   16,   13,  -44,
              68,   11, -118,  112,   96,    7,  120,   64, -121,  112,   88,   16,  -36,  -63,   16,  -95,
            -103,   22,   16,  -14,  -16,   14,  -17,   64,   15,   67, -124,  -90,   90,  -48,  -52,   67,
              57,  -48,   67,   42,  -76,   67,   56, -100,   67,   57, -124,    2,   59,  -64,    3,   58,
            -124,  -61,   16,  -95,  -71,   22,    4,  112,   48,   68,  104,  -78,    5, -126,   28,  -40,
             -63,   16,  -93,  -39, -102,  -51,   57, -122,   24,   13,  -41,  116,  -50,  -79,  -32,  121,
            -121,  118,  112, -121,  116, -128, -121,  119,  -96, -121,  114,  112,    7,  122,    0, -125,
             113,   64, -121,  112, -112, -121,   33,   66,  -29,   45, -120,  102,   33,   29,  -38,    1,
              30,  -40,  -95,   28,  -64,   96,   20,  -34,   96,   20,  -42,   96,   13,  -64, -128,   22,
              68,   33,   20,   66,   97,   68,  -60,   14,  -20,   96,   15,  -19,  -32,    6,  -19,  -16,
              14,  -28,   80,   15,  -20,   80,   14,  110,   96,   14,  -20,   16,   14,  -25,   48,   15,
              83,    4,   64,   24,  -95,  -80,    3,   59,  -40,   67,   59,  -72,   65,   58, -112,   67,
              57,  -72,    3,   61,   76,    9, -120,   17,  -57,   24,  -64, -125,   60, -124,  -61,   57,
             -76,   67,   56,   76,   25, -116, -124,   25,  -31, -116, -127,   60,  -52,  -61,   47, -108,
               3,   62,  -64,  -61,   59,  -56,    3,   61,   -4, -126,   61, -124, -125,   60,   76,    9,
             -98,   17,  -48,   24,  -56,  -61,   60,   -4,  -62,   59, -120, -125,   58, -108,  -61,   56,
             -48,  -61,   47,  -52,    3,   59,  -68,    3,   61,  -52,  -61,   20,   96,  -60,   53,    6,
             -14,   48,   15,  -65,   80,   14,   -8,    0,   15,  -17,   32,   15,  -12,  -16,   11,  -26,
             -16,   14,  -14,   80,   14,  -31,   48,   14,  -24,  -16,   11,  -18,   16,   14,  -19,   80,
              14,   83,    4, -119,   26,   33, -115, -127,   60,  -52,  -61,   47, -108,    3,   62,  -64,
             -61,   59,  -56,    3,   61,   -4, -126,   57,  -68, -125,   60, -108,   67,   56, -116,    3,
              58,   76,   17,   44,   12,    0,    0,    0,  121,   24,    0,    0,   23,    0,    0,    0,
              51,    8, -128,   28,  -60,  -31,   28,  102,   20,    1,   61, -120,   67,   56, -124,  -61,
            -116,   66, -128,    7,  121,  120,    7,  115, -104,  113,   12,  -26,    0,   15,  -19,   16,
              14,  -12, -128,   14,   51,   12,   66,   30,  -62,  -63,   29,  -50,  -95,   28,  102,   48,
               5,   61, -120,   67,   56, -124, -125,   27,  -52,    3,   61,  -56,   67,   61, -116,    3,
              61,  -52,  120, -116,  116,  112,    7,  123,    8,    7,  121,   72, -121,  112,  112,    7,
             122,  112,    3,  118,  120, -121,  112,   32,    7,    0,    0,    0,  113,   32,    0,    0,
              15,    0,    0,    0,   22,  -48,   72,  -60,   36,   50, -128,   65,  104,  -53,  115,    0,
               6,   80,    0,  -53,  115,    0,   54,   96,   -3,  115,  125,   11,   78,   83,   17,  -47,
             -12,   83,   72,   51,  -31,   93, -123,   -1, -121,    9,   92,   -1,   92,  -29, -126,  -45,
              84,   68,   52,   -3, -108,  112,    0,   17,  -34,   85,   -8,  -97,    0,    0,    0,    0,
              97,   32,    0,    0,   29,    0,    0,    0,   19,    4,   65,   44,   16,    0,    0,    0,
               5,    0,    0,    0,   84,    5,   49,    2,   80,    6, -124,   51,    0,   35,    0,   99,
              17,    8, -126,   32,    0,    0,    0,    0, -124, -116,   17,    3,   98,    8, -122, -120,
            -128,  112,   83,  -59,   28, -125,   67,   49, -125,   12, -107,  -13, -108,  100,   73,   93,
              16, -114,   24,   16,   67,   32,   96,  115,   12,  -39,  -44,   12,   70,   32,  -38,    0,
              96,   56,   16,    0,    4,    0,    0,    0, -106,   16,   92,  -90,   16,   96, -122,   80,
              84,  -65,   67,   77,    0,    0,    0,    0,    1,   49,    0,    0,    2,    0,    0,    0,
              91,    6,   33,  -48,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        };
        return data;
    }

    private static int bitCode32Length = 1264;

    private static byte[] getBitCode32Internal() {
        byte[] bc = new byte[bitCode32Length];
        int offset = 0;
        byte[] seg;
        seg = getSegment32_0();
        System.arraycopy(seg, 0, bc, offset, seg.length);
        offset += seg.length;
        return bc;
    }

    // return byte array representation of the 64-bit bitcode.
    public static byte[] getBitCode64() {
        return getBitCode64Internal();
    };

    private static byte[] getSegment64_0() {
        byte[] data = {
             -34,  -64,   23,   11,    0,    0,    0,    0,   44,    0,    0,    0,  104,    4,    0,    0,
               0,    0,    0,    0,   21,    0,    0,    0,    0,    0,    0,    0,    1,   64,    4,    0,
             109,    7,    0,    0,    2,   64,    4,    0,    3,    0,    0,    0,   66,   67,  -64,  -34,
              33,   12,    0,    0,   23,    1,    0,    0,    1,   16,    0,    0,   18,    0,    0,    0,
               7, -127,   35, -111,   65,  -56,    4,   73,    6,   16,   50,   57, -110,    1, -124,   12,
              37,    5,    8,   25,   30,    4, -117,   98, -128,   16,   69,    2,   66, -110,   11,   66,
            -124,   16,   50,   20,   56,    8,   24,   73,   10,   50,   68,   36,   72,   10, -112,   33,
              35,  -60,   82, -128,   12,   25,   33,  114,   36,    7,  -56,    8,   17,   98,  -88,  -96,
             -88,   64,  -58,  -16,    1,    0,    0,    0,   73,   24,    0,    0,    9,    0,    0,    0,
              11, -120,    0,    4,   65,   16,    4, -119,   -1,   -1,   -1,   -1,   31,  -64,   96, -127,
             -16,   -1,   -1,   -1,   -1,    3,   24,   45,   16,   -2,   -1,   -1,   -1,  127,    0,   35,
               0,    0,    0,    0, -119,   32,    0,    0,   17,    0,    0,    0,   50,   34,    8,    9,
              32,  100, -123,    4,   19,   34,  -92, -124,    4,   19,   34,  -29, -124,  -95, -112,   20,
              18,   76, -120, -116,   11, -124, -124,   76,   16,   60,  115,    4,    8,  -63,    8,  -64,
              48,    2,    1,  -48,  -52,   17, -128,   65,   33, -124,  -86,  -56, -122,   17, -120,  -94,
               8, -125, -108,   69,  -64,  -94,   29,    8, -104,   35,    0,    5,    0,    0,    0,    0,
              19,  -76,  112,    8,    7,  121,   24,    7,  116,  -80,    3,   58,  104,    3,  119,  120,
               7,  119,   40, -121,   54,   96, -121,  116,  112, -121,  122,  -64, -121,   54,   56,    7,
             119,  -88, -121,  114,    8,    7,  113,   72, -121,   13,   97,   80,   14,  109,  -48,   14,
             122,   80,   14,  109, -112,   14,  118,   64,    7,  122,   96,    7,  116,  -48,    6,  -23,
              16,    7,  114, -128,    7,  122,   16,    7,  114, -128,    7,  109,  -32,   14,  115,   32,
               7,  122,   96,    7,  116,  -48,    6,  -77,   16,    7,  114, -128,    7,   58,   15,   36,
              72,   32,   35,   68,   66,    0,   86,  -64,   33,  -54,    1,    0,   64,    0,    0,    0,
               0,   12,   81,   20,   32,    0,    4,    0,    0,    0,   96, -120,  -62,    0,    1,   32,
               0,    0,    0,    0,   89,   32,    0,    0,    6,    0,    0,    0,   50,   30, -104,   12,
              25,   17,   76, -112, -116,    9,   38,   71,  -58,    4,   67, -126,   17,    0,  -14,   17,
               0,    0,    0,    0,  121,   24,    0,    0,  111,    0,    0,    0,   67, -124,   38,   88,
              32, -115,    3,   59, -124, -125,   59, -100,    3,   24,  -40,   67,   57,  -56,  -61,   60,
             -92,  -61,   59,  -72,    3,   24,  -52, -127,   27,  -44,    1,   24,   12,   33, -102,  -95,
              33,   22,   28,  -10,   80,   14,  -14,   48,   15,  -23,  -16,   14,  -18,  -80,   32, -120,
            -125,   33,   68,   99,   52,  -57, -126,   72,   29,  -62,  -63,   30,  -62,  -31,   23,  -32,
              33,   28,  -58,   97,   29,  -62,  -31,   28,  -54,  -31,   23,  -36,   33,   28,  -38,  -95,
              28,   22,   80,  -29,  -16,   14,  -19,  -32,    6,  -31,  -32,   14,  -28,   32,   15,  -17,
            -112,   14,  -28,  -32,    6,  -14,   48,   15,  110, -112,   14,  -19,   16,   14,  -25,   80,
              14,   67, -120,   38,  105, -108,    5, -115,   60,  -52,  -61,   47, -104,    3,   60,   -4,
            -126,   60, -108,    3,   59, -124,    3,   62, -108,    3,   57,   44,    0, -122,   16,   13,
             -45,   52,   11, -118,  112,   96,    7,  120,   64, -121,  112,   88,   16,  -36,  -63,   16,
             -95,  121,   22,   16,  -14,  -16,   14,  -17,   64,   15,   67, -124,   38,   90,  -48,  -52,
              67,   57,  -48,   67,   42,  -76,   67,   56, -100,   67,   57, -124,    2,   59,  -64,    3,
              58, -124,  -61,   16,  -95, -103,   22,    4,  112,   48,   68,  104,  -86,    5, -126,   28,
             -40,  -63,   16,  -93,  -71, -102,  -53,   41, -122,   24,   13,  -42,  100,   78,  -79,  -32,
             121, -121,  118,  112, -121,  116, -128, -121,  119,  -96, -121,  114,  112,    7,  122,    0,
            -125,  113,   64, -121,  112, -112, -121,   33,   66,  -93,   45, -120,  102,   33,   29,  -38,
               1,   30,  -40,  -95,   28,  -64,   96,   20,  -34,   96,   20,  -42,   96,   13,  -64, -128,
              22,   68,   33,   20,   66,   97, -124,  -62,   14,  -20,   96,   15,  -19,  -32,    6,  -23,
              64,   14,  -27,  -32,   14,  -12,   48,   37,    0,   70,   28,   99,    0,   15,  -14,   16,
              14,  -25,  -48,   14,  -31,   48,  101,   16,   10,  100, -124,   51,    6,  -14,   48,   15,
             -65,   80,   14,   -8,    0,   15,  -17,   32,   15,  -12,  -16,   11,  -10,   16,   14,  -14,
              48,   37,   88,   70,   64,   99,   32,   15,  -13,  -16,   11,  -17,   32,   14,  -22,   80,
              14,  -29,   64,   15,  -65,   48,   15,  -20,  -16,   14,  -12,   48,   15,   83, -128,   17,
             -41,   24,  -56,  -61,   60,   -4,   66,   57,  -32,    3,   60,  -68, -125,   60,  -48,  -61,
              47, -104,  -61,   59,  -56,   67,   57, -124,  -61,   56,  -96,  -61,   47,  -72,   67,   56,
             -76,   67,   57,   76,   17,   28,  104, -124,   52,    6,  -14,   48,   15,  -65,   80,   14,
              -8,    0,   15,  -17,   32,   15,  -12,  -16,   11,  -26,  -16,   14,  -14,   80,   14,  -31,
              48,   14,  -24,   48,   69, -112,   40,    0,  121,   24,    0,    0,   23,    0,    0,    0,
              51,    8, -128,   28,  -60,  -31,   28,  102,   20,    1,   61, -120,   67,   56, -124,  -61,
            -116,   66, -128,    7,  121,  120,    7,  115, -104,  113,   12,  -26,    0,   15,  -19,   16,
              14,  -12, -128,   14,   51,   12,   66,   30,  -62,  -63,   29,  -50,  -95,   28,  102,   48,
               5,   61, -120,   67,   56, -124, -125,   27,  -52,    3,   61,  -56,   67,   61, -116,    3,
              61,  -52,  120, -116,  116,  112,    7,  123,    8,    7,  121,   72, -121,  112,  112,    7,
             122,  112,    3,  118,  120, -121,  112,   32,    7,    0,    0,    0,  113,   32,    0,    0,
              15,    0,    0,    0,   22,  -48,   72,  -60,   36,   50, -128,   65,  104,  -53,  115,    0,
               6,   80,    0,  -53,  115,    0,   54,   96,   -3,  115,  125,   11,   78,   83,   17,  -47,
             -12,   83,   72,   51,  -31,   93, -123,   -1, -121,    9,   92,   -1,   92,  -29, -126,  -45,
              84,   68,   52,   -3, -108,  112,    0,   17,  -34,   85,   -8,  -97,    0,    0,    0,    0,
              97,   32,    0,    0,   30,    0,    0,    0,   19,    4,   65,   44,   16,    0,    0,    0,
               5,    0,    0,    0,   84,    5,   49,    2,   64,   56,    3,   48,    2,   48,   22, -127,
              32,    8,   66,   94,    6,    0,    0,    0,  100, -116,  123,  106,   71,   12, -120,   33,
              24,   32,    2,  -62,   73,   21,  115,   12,  -53,  -92,   12,   50,   80,   11,   83,   81,
              37,  101,   53,   56,   98,   64,   12, -127,  112,  -51,   49,   96, -110,   51,   24,   97,
             100,    3, -128,  -31,   64,    0,    0,    0,    4,    0,    0,    0,  118,   16,   92, -122,
              16,   96,  102,   80,   84,  -65,   67,   77,    0,    0,    0,    0,    1,   49,    0,    0,
               2,    0,    0,    0,   91, -122,   33,  -80,    0,    0,    0,    0,    0,    0,    0,    0,
               0,    0,    0,    0,
        };
        return data;
    }

    private static int bitCode64Length = 1172;

    private static byte[] getBitCode64Internal() {
        byte[] bc = new byte[bitCode64Length];
        int offset = 0;
        byte[] seg;
        seg = getSegment64_0();
        System.arraycopy(seg, 0, bc, offset, seg.length);
        offset += seg.length;
        return bc;
    }

}

