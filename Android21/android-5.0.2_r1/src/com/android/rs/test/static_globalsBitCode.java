/*
 * Copyright (C) 2011-2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is auto-generated. DO NOT MODIFY!
 * The source Renderscript file: frameworks/rs/java/tests/RsTest/src/com/android/rs/test/static_globals.rs
 */

package com.android.rs.test;

/**
 * @hide
 */
public class static_globalsBitCode {
    // return byte array representation of the 32-bit bitcode.
    public static byte[] getBitCode32() {
        return getBitCode32Internal();
    };

    private static byte[] getSegment32_0() {
        byte[] data = {
             -34,  -64,   23,   11,    0,    0,    0,    0,   44,    0,    0,    0,   40,    4,    0,    0,
               0,    0,    0,    0,   -1,   -1,   -1,   -1,    0,    0,    0,    0,    1,   64,    4,    0,
             109,    7,    0,    0,    2,   64,    4,    0,    3,    0,    0,    0,   66,   67,  -64,  -34,
              33,   12,    0,    0,    7,    1,    0,    0,    1,   16,    0,    0,   18,    0,    0,    0,
               7, -127,   35, -111,   65,  -56,    4,   73,    6,   16,   50,   57, -110,    1, -124,   12,
              37,    5,    8,   25,   30,    4, -117,   98, -128,   16,   69,    2,   66, -110,   11,   66,
            -124,   16,   50,   20,   56,    8,   24,   73,   10,   50,   68,   36,   72,   10, -112,   33,
              35,  -60,   82, -128,   12,   25,   33,  114,   36,    7,  -56,    8,   17,   98,  -88,  -96,
             -88,   64,  -58,  -16,    1,    0,    0,    0,   73,   24,    0,    0,   11,    0,    0,    0,
              11, -120,    0,    4,   65,   16,    4, -119,   -1,   -1,   -1,   -1,   31,  -64,   96, -127,
             -16,   -1,   -1,   -1,   -1,    3,   24,   44,   16,   -2,   -1,   -1,   -1,  127,    0,   22,
               8,   -1,   -1,   -1,   -1,   63, -128,    1,    0,    0,    0,    0, -119,   32,    0,    0,
              14,    0,    0,    0,   50,   34,    8,    9,   32,  100, -123,    4,   19,   34,  -92, -124,
               4,   19,   34,  -29, -124,  -95, -112,   20,   18,   76, -120, -116,   11, -124, -124,   76,
              16,   52,  115,    4,    1,  -63,    8,  -64,   28,    1,   24,  -48,   20,   66,  104, -122,
             -86,    4,   66,   87,    4,   25,  -54, -127, -128,   41,    0,    0,   19,  -80,  112, -112,
            -121,  118,  -80, -121,   59,  104,    3,  119,  120,    7,  119,   40, -121,   54,   96, -121,
             116,  112, -121,  122,  -64, -121,   54,   56,    7,  119,  -88, -121,  114,    8,    7,  113,
              72, -121,   13,  104,   80,   14,  109,  -48,   14,  122,   80,   14,  109,    0,   15,  122,
              48,    7,  114,  -96,    7,  115,   32,    7,  109, -112,   14,  118,   64,    7,  122,   96,
               7,  116,  -48,    6,  -10,   16,    7,  114, -128,    7,  122,   96,    7,  116,  -96,    7,
             113,   32,    7,  120,  -48,    6,  -18,   48,    7,  114,  -48,    6,  -77,   96,    7,  116,
             -96,  -13,   64, -126,    4,   50,   66,    2,    4,  -40,  -95,    4,   64,   49,    0,    0,
               0,    4,  -64,   16,  -59,    0,    0,   32,    0,    0,    0,    0, -122,   40,    8,    0,
               0,    2,    0,    0,    0,   48,   68,   81, -128,    0,   24,    0,    0,    0, -128,   44,
              16,    0,    0,    0,    6,    0,    0,    0,   50,   30, -104,   12,   25,   17,   76, -112,
            -116,    9,   38,   71,  -58,    4,   67, -126,   17,    0, -102,   18,   40,    4,    0,    0,
             121,   24,    0,    0,   96,    0,    0,    0,   67, -116,  -95,   88, -126,  -63,   88,  -96,
             -36,  -61,   56,  -96,   67,   56,  -56,  -61,   47,  -52,   67,   58,  -24,   67,   57,   12,
              49, -122,   98,   25,    6,   99,   65,  -45,   14,  -23,  -32,   14,  -65,   80,   14,  -18,
              80,   15,  -19,  -16,   11,  -13, -112,   14,   -6,   80,   14,   67, -124,  -91,   88,   32,
            -115,    3,   59, -124, -125,   59, -100,    3,   24,  -40,   67,   57,  -56,  -61,   60,  -92,
             -61,   59,  -72,    3,   24,  -52, -127,   27,  -44,    1,   24,   12,   33, -106,   99,   65,
              22,   28,  -10,   80,   14,  -14,   48,   15,  -23,  -16,   14,  -18,  -80,   32, -120, -125,
              33,  -60,  -94,   44,  -53, -126,   72,   29,  -62,  -63,   30,  -62,  -31,   23,  -32,   33,
              28,  -58,   97,   29,  -62,  -31,   28,  -54,  -31,   23,  -36,   33,   28,  -38,  -95,   28,
              22,   76,  -29,  -16,   14,  -19,  -32,    6,  -31,  -32,   14,  -28,   32,   15,  -17, -112,
              14,  -28,  -32,    6,  -14,   48,   15,  110,   64,   15,  -27,   48,   15,  -12,   48,   68,
              88, -102,    5,  -45,   60,  -48,   67,   56,  -48,   67,   58, -116,  -61,   47, -100,    3,
              59,  -68, -125,   56, -124,    3,   59,  -52,  -61,   47,  -48,   67,   57,  -52,    3,   61,
              12,   17, -106,  103,    1,   33,   15,  -17,  -16,   14,  -12,   48,   68,   88,  -94,    5,
            -126,   28,  -44,  -63, -120, -120,   29,  -40,  -63,   30,  -38,  -63,   13,  -38,  -31,   29,
             -56,  -95,   30,  -40,  -95,   28,  -36,  -64,   28,  -40,   33,   28,  -50,   97,   30,  -90,
               8, -128,   48,   66,   97,    7,  118,  -80, -121,  118,  112, -125,  116,   32, -121,  114,
             112,    7,  122, -104,   18,   16,   35, -114,   49, -128,    7,  121,    8, -121,  115,  104,
            -121,  112, -104,   34,   24,  -55, -120,  103,   12,  -28,   97,   30,  126,  -95,   28,  -16,
               1,   30,  -34,   65,   30,  -24,  -31,   23,  -52,  -95,   30,  -36,   97,   28,  -90,    4,
             -52, -120,  107,   12,  -28,   97,   30,  126,  -95,   28,  -16,    1,   30,  -34,   65,   30,
             -24,  -31,   23,  -52,  -31,   29,  -28,  -95,   28,  -62,   97,   28,  -48,  -31,   23,  -36,
              33,   28,  -38,  -95,   28,  -90,    4,  -50,    8,  105,   12,  -28,   97,   30,  126,  -95,
              28,  -16,    1,   30,  -34,   65,   30,  -24,  -31,   23,  -52,  -31,   29,  -28,  -95,   28,
             -62,   97,   28,  -48,   97,   74,    0,    1,  121,   24,    0,    0,   23,    0,    0,    0,
              51,    8, -128,   28,  -60,  -31,   28,  102,   20,    1,   61, -120,   67,   56, -124,  -61,
            -116,   66, -128,    7,  121,  120,    7,  115, -104,  113,   12,  -26,    0,   15,  -19,   16,
              14,  -12, -128,   14,   51,   12,   66,   30,  -62,  -63,   29,  -50,  -95,   28,  102,   48,
               5,   61, -120,   67,   56, -124, -125,   27,  -52,    3,   61,  -56,   67,   61, -116,    3,
              61,  -52,  120, -116,  116,  112,    7,  123,    8,    7,  121,   72, -121,  112,  112,    7,
             122,  112,    3,  118,  120, -121,  112,   32,    7,    0,    0,    0,  113,   32,    0,    0,
              12,    0,    0,    0,   54,  -80,   -3,  -77,  109,   71,   18,   75,   52,   67,  -21,  112,
              11,   66,   52,  -45,  -74,   56, -126, -126,   52,    6,   98,    0,   65,   96,    1,   68,
             -28,   56, -109,    9,   76,  -46,    4,   76, -120,  -16,   27, -117,   19,    0, -117,  -12,
              79, -124,   52,    1,   97,   32,    0,    0,   11,    0,    0,    0,   19,    4,   65,   44,
              16,    0,    0,    0,    1,    0,    0,    0,    4,   53,    0,    0, -125,   17, -128,   18,
               0,   24,   14,    4,    3,    0,    0,    0, -122,   16,   92, -106,   16,   96,  118,   16,
              56,    0,    0,    0,    0,    0,    0,    0,   97,   32,    0,    0,   16,    0,    0,    0,
              19,    4,   68,   44,   16,    0,    0,    0,    2,    0,    0,    0,   52,  -91,   28,   80,
             -56,    1,    0,    0,    4, -124,   89,    6,   33,   72,   70,   12,    8,   34,   24, -114,
              89, -126,   97,  -60, -128,   32, -126,    1, -103,   37,   24,   48,   28,    8,    0,    0,
               2,    0,    0,    0, -106,   32,   -8,    1,    0,    0,    0,    0,    0,    0,    0,    0,
               0,    0,    0,    0,
        };
        return data;
    }

    private static int bitCode32Length = 1108;

    private static byte[] getBitCode32Internal() {
        byte[] bc = new byte[bitCode32Length];
        int offset = 0;
        byte[] seg;
        seg = getSegment32_0();
        System.arraycopy(seg, 0, bc, offset, seg.length);
        offset += seg.length;
        return bc;
    }

    // return byte array representation of the 64-bit bitcode.
    public static byte[] getBitCode64() {
        return getBitCode64Internal();
    };

    private static byte[] getSegment64_0() {
        byte[] data = {
             -34,  -64,   23,   11,    0,    0,    0,    0,   44,    0,    0,    0,  -52,    3,    0,    0,
               0,    0,    0,    0,   -1,   -1,   -1,   -1,    0,    0,    0,    0,    1,   64,    4,    0,
             109,    7,    0,    0,    2,   64,    4,    0,    3,    0,    0,    0,   66,   67,  -64,  -34,
              33,   12,    0,    0,  -16,    0,    0,    0,    1,   16,    0,    0,   18,    0,    0,    0,
               7, -127,   35, -111,   65,  -56,    4,   73,    6,   16,   50,   57, -110,    1, -124,   12,
              37,    5,    8,   25,   30,    4, -117,   98, -128,   16,   69,    2,   66, -110,   11,   66,
            -124,   16,   50,   20,   56,    8,   24,   73,   10,   50,   68,   36,   72,   10, -112,   33,
              35,  -60,   82, -128,   12,   25,   33,  114,   36,    7,  -56,    8,   17,   98,  -88,  -96,
             -88,   64,  -58,  -16,    1,    0,    0,    0,   73,   24,    0,    0,   11,    0,    0,    0,
              11, -120,    0,    4,   65,   16,    4, -119,   -1,   -1,   -1,   -1,   31,  -64,   96, -127,
             -16,   -1,   -1,   -1,   -1,    3,   24,   44,   16,   -2,   -1,   -1,   -1,  127,    0,   22,
               8,   -1,   -1,   -1,   -1,   63, -128,    1,    0,    0,    0,    0, -119,   32,    0,    0,
              14,    0,    0,    0,   50,   34,    8,    9,   32,  100, -123,    4,   19,   34,  -92, -124,
               4,   19,   34,  -29, -124,  -95, -112,   20,   18,   76, -120, -116,   11, -124, -124,   76,
              16,   52,  115,    4,    1,  -63,    8,  -64,   28,    1,   24,  -48,   20,   66,  104, -122,
             -86,    4,   66,   87,    4,   25,  -54, -127, -128,   41,    0,    0,   19,  -76,  112,    8,
               7,  121,   24,    7,  116,  -80,    3,   58,  104,    3,  119,  120,    7,  119,   40, -121,
              54,   96, -121,  116,  112, -121,  122,  -64, -121,   54,   56,    7,  119,  -88, -121,  114,
               8,    7,  113,   72, -121,   13,   97,   80,   14,  109,  -48,   14,  122,   80,   14,  109,
            -112,   14,  118,   64,    7,  122,   96,    7,  116,  -48,    6,  -23,   16,    7,  114, -128,
               7,  122,   16,    7,  114, -128,    7,  109,  -32,   14,  115,   32,    7,  122,   96,    7,
             116,  -48,    6,  -77,   16,    7,  114, -128,    7,   58,   15,   36,   72,   32,   35,   36,
              64, -128,   29,   74,    0,   20,    3,    0,    0,   64,    0,   12,   81,   12,    0,    0,
               2,    0,    0,    0,   96, -120, -126,    0,    0,   32,    0,    0,    0,    0,   67,   20,
               5,    8, -128,    1,    0,    0,    0,  -56,    2,    1,    0,    0,    5,    0,    0,    0,
              50,   30, -104,   12,   25,   17,   76, -112, -116,    9,   38,   71,  -58,    4,   67, -126,
              17,    0,    0,    0,  121,   24,    0,    0,   76,    0,    0,    0,   67, -124,   37,   88,
              32, -115,    3,   59, -124, -125,   59, -100,    3,   24,  -40,   67,   57,  -56,  -61,   60,
             -92,  -61,   59,  -72,    3,   24,  -52, -127,   27,  -44,    1,   24,   12,   33, -106,   97,
              33,   22,   28,  -10,   80,   14,  -14,   48,   15,  -23,  -16,   14,  -18,  -80,   32, -120,
            -125,   33,  -60,   98,   44,  -57, -126,   72,   29,  -62,  -63,   30,  -62,  -31,   23,  -32,
              33,   28,  -58,   97,   29,  -62,  -31,   28,  -54,  -31,   23,  -36,   33,   28,  -38,  -95,
              28,   22,   76,  -29,  -16,   14,  -19,  -32,    6,  -31,  -32,   14,  -28,   32,   15,  -17,
            -112,   14,  -28,  -32,    6,  -14,   48,   15,  110,   64,   15,  -27,   48,   15,  -12,   48,
              68,   88, -110,    5,  -45,   60,  -48,   67,   56,  -48,   67,   58, -116,  -61,   47, -100,
               3,   59,  -68, -125,   56, -124,    3,   59,  -52,  -61,   47,  -48,   67,   57,  -52,    3,
              61,   12,   17, -106,  101,    1,   33,   15,  -17,  -16,   14,  -12,   48,   68,   88, -102,
               5, -126,   28,  -44,  -63,    8, -123,   29,  -40,  -63,   30,  -38,  -63,   13,  -46, -127,
              28,  -54,  -63,   29,  -24,   97,   74,    0, -116,   56,  -58,    0,   30,  -28,   33,   28,
             -50,  -95,   29,  -62,   97, -118,   32,   20,   35,  -98,   49, -112, -121,  121,   -8, -123,
             114,  -64,    7,  120,  120,    7,  121,  -96, -121,   95,   48, -121,  122,  112, -121,  113,
            -104,   18,   32,   35,  -82,   49, -112, -121,  121,   -8, -123,  114,  -64,    7,  120,  120,
               7,  121,  -96, -121,   95,   48, -121,  119, -112, -121,  114,    8, -121,  113,   64, -121,
              95,  112, -121,  112,  104, -121,  114, -104,   18,   40,   35,  -92,   49, -112, -121,  121,
              -8, -123,  114,  -64,    7,  120,  120,    7,  121,  -96, -121,   95,   48, -121,  119, -112,
            -121,  114,    8, -121,  113,   64, -121,   41,    1,    3,    0,    0,  121,   24,    0,    0,
              23,    0,    0,    0,   51,    8, -128,   28,  -60,  -31,   28,  102,   20,    1,   61, -120,
              67,   56, -124,  -61, -116,   66, -128,    7,  121,  120,    7,  115, -104,  113,   12,  -26,
               0,   15,  -19,   16,   14,  -12, -128,   14,   51,   12,   66,   30,  -62,  -63,   29,  -50,
             -95,   28,  102,   48,    5,   61, -120,   67,   56, -124, -125,   27,  -52,    3,   61,  -56,
              67,   61, -116,    3,   61,  -52,  120, -116,  116,  112,    7,  123,    8,    7,  121,   72,
            -121,  112,  112,    7,  122,  112,    3,  118,  120, -121,  112,   32,    7,    0,    0,    0,
             113,   32,    0,    0,   12,    0,    0,    0,   54,  -80,   -3,  -77,  109,   71,   18,   75,
              52,   67,  -21,  112,   11,   66,   52,  -45,  -74,   56, -126, -126,   52,    6,   98,    0,
              65,   96,    1,   68,  -28,   56, -109,    9,   76,  -46,    4,   76, -120,  -16,   27, -117,
              19,    0, -117,  -12,   79, -124,   52,    1,   97,   32,    0,    0,   11,    0,    0,    0,
              19,    4,   65,   44,   16,    0,    0,    0,    1,    0,    0,    0,    4,   53,    0,    0,
            -125,   17,    0,   18,    0,   24,   14,    4,    3,    0,    0,    0,  102,   16,   92,  118,
              16,   96,   86,   16,   56,    0,    0,    0,    0,    0,    0,    0,   97,   32,    0,    0,
              16,    0,    0,    0,   19,    4,   68,   44,   16,    0,    0,    0,    2,    0,    0,    0,
              52,  -91,   28,   80,  -56,    1,    0,    0,    4, -124,   89,    6,   33,   56,   70,   12,
               8,   34,   24, -118,   89, -126,   97,  -60, -128,   32, -126,  -63, -104,   37,   24,   48,
              28,    8,    0,    0,    2,    0,    0,    0,  118,   32,   -8,    1,    0,    0,    0,    0,
               0,    0,    0,    0,    0,    0,    0,    0,
        };
        return data;
    }

    private static int bitCode64Length = 1016;

    private static byte[] getBitCode64Internal() {
        byte[] bc = new byte[bitCode64Length];
        int offset = 0;
        byte[] seg;
        seg = getSegment64_0();
        System.arraycopy(seg, 0, bc, offset, seg.length);
        offset += seg.length;
        return bc;
    }

}

