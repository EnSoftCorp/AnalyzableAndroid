/*
 * Copyright (C) 2011-2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is auto-generated. DO NOT MODIFY!
 * The source Renderscript file: frameworks/rs/java/tests/RsTest/src/com/android/rs/test/rslist.rs
 */

package com.android.rs.test;

/**
 * @hide
 */
public class rslistBitCode {
    // return byte array representation of the 32-bit bitcode.
    public static byte[] getBitCode32() {
        return getBitCode32Internal();
    };

    private static byte[] getSegment32_0() {
        byte[] data = {
             -34,  -64,   23,   11,    0,    0,    0,    0,   44,    0,    0,    0, -120,    3,    0,    0,
               0,    0,    0,    0,   -1,   -1,   -1,   -1,    0,    0,    0,    0,    1,   64,    4,    0,
             109,    7,    0,    0,    2,   64,    4,    0,    3,    0,    0,    0,   66,   67,  -64,  -34,
              33,   12,    0,    0,  -33,    0,    0,    0,    1,   16,    0,    0,   18,    0,    0,    0,
               7, -127,   35, -111,   65,  -56,    4,   73,    6,   16,   50,   57, -110,    1, -124,   12,
              37,    5,    8,   25,   30,    4, -117,   98, -128,   12,   69,    2,   66, -110,   11,   66,
             100,   16,   50,   20,   56,    8,   24,   73,   10,   50,   68,   36,   72,   10, -112,   33,
              35,  -60,   82, -128,   12,   25,   33,  114,   36,    7,  -56,  -56,   16,   98,  -88,  -96,
             -88,   64,  -58,  -16,    1,    0,    0,    0, -119,   32,    0,    0,   19,    0,    0,    0,
              50,   34,  -56,    8,   32,  100, -123,    4, -109,   33,  -92, -124,    4, -109,   33,  -29,
            -124,  -95, -112,   20,   18,   76, -122, -116,   11, -124,  100,   76,   16,   28,  115,    4,
              96,   64,   56,   75, -102,   34,   74, -104,   -4,   72,   -6, -127,  101,  113,    4,   96,
              66, -100,  -58,  -49,   81, -112, -101,  -92,   41,  -94, -124,  -55,   47,   17,  105,  -46,
            -106,  -59,   17,  -92,   95,   66, -126,   64,   35,   14,    4,    0,   19,  -80,  112, -112,
            -121,  118,  -80, -121,   59,  104,    3,  119,  120,    7,  119,   40, -121,   54,   96, -121,
             116,  112, -121,  122,  -64, -121,   54,   56,    7,  119,  -88, -121,  114,    8,    7,  113,
              72, -121,   13,  104,   80,   14,  109,  -48,   14,  122,   80,   14,  109,    0,   15,  122,
              48,    7,  114,  -96,    7,  115,   32,    7,  109, -112,   14,  118,   64,    7,  122,   96,
               7,  116,  -48,    6,  -10,   16,    7,  114, -128,    7,  122,   96,    7,  116,  -96,    7,
             113,   32,    7,  120,  -48,    6,  -18,   48,    7,  114,  -48,    6,  -77,   96,    7,  116,
             -96,  -13,   64, -122,    4,   50,   66,   68,    4,   96,   17,  120,   22,    8,    0,    0,
               6,    0,    0,    0,   50,   30, -104,   12,   25,   17,   76, -112, -116,    9,   38,   71,
             -58,    4,   67,   66,    9,   20,    2,  113,    4,    0,    0,    0,  121,   24,    0,    0,
             114,    0,    0,    0,   67,   12,   32,   48,    2,   64,   88,  -96,  -36,  -61,   56,  -96,
              67,   56,  -56,  -61,   47,  -52,   67,   58,  -24,   67,   57,   12,   49, -128,  -64,   24,
               0,   97,   65,  -45,   14,  -23,  -32,   14,  -65,   80,   14,  -18,   80,   15,  -19,  -16,
              11,  -13, -112,   14,   -6,   80,   14,   67,    4,  -93,   88,   32, -115,    3,   59, -124,
            -125,   59, -100,    3,   24,  -40,   67,   57,  -56,  -61,   60,  -92,  -61,   59,  -72,    3,
              24,  -52, -127,   27,  -44,    1,   24,   12,   33, -116,  -61,   64,   22,   28,  -10,   80,
              14,  -14,   48,   15,  -23,  -16,   14,  -18,  -80,   32, -120, -125,   33, -124,  -95,   24,
             -53, -126,   72,   29,  -62,  -63,   30,  -62,  -31,   23,  -32,   33,   28,  -58,   97,   29,
             -62,  -31,   28,  -54,  -31,   23,  -36,   33,   28,  -38,  -95,   28,   22,   76,  -29,  -16,
              14,  -19,  -32,    6,  -31,  -32,   14,  -28,   32,   15,  -17, -112,   14,  -28,  -32,    6,
             -14,   48,   15,  110,   64,   15,  -27,   48,   15,  -12,   48, -124,   48,   26,  -61,   89,
              80, -100,    3,   43,  -92,  -61,   60,  -48,  -61, -126,   70,   13,   88,   33,   29,  -26,
            -127,   30,   66, -127,   29,  -40,  -31,   29,  -58,   97,   30,  126,   97,   30, -122,    8,
               6,  -76, -128,   97, -123,  116, -104,    7,  122,    8,    5,  118,   96, -121,  119,   24,
            -121,  121,   -8, -123,  121,   24,   66,   24, -110,   49,   45,   32,  -24,  -95,   28,  -16,
            -127,   30,   22,   52,  -14,   48,   15,  -65,   16,   14,  -20,  -64,   14,  -17,   48,   14,
             -31,   64,   15,  -23,  -16,   14,  -18,   48, -124,   48,   42,  -61,   90,   96,  -56,   67,
              57,  -52,   67,   61,  -80,    3,   61,   44,   24,  -46,  -63,   29,  -24,   97,   68,  -60,
              14,  -20,   96,   15,  -19,  -32,    6,  -19,  -16,   14,  -28,   80,   15,  -20,   80,   14,
             110,   96,   14,  -20,   16,   14,  -25,   48,   15,   83,    4,   64,   24,  -95,  -80,    3,
              59,  -40,   67,   59,  -72,   65,   58, -112,   67,   57,  -72,    3,   61,   76,    9, -120,
              17,  -57,   24,  -64, -125,   60, -124,  -61,   57,  -76,   67,   56,   76,   17, -116,  100,
            -124,   51,    6,  -14,   48,   15,  -65,   80,   14,   -8,    0,   15,  -17,   32,   15,  -12,
             -16,   11,  -10,   16,   14,  -14,   48,   37,   96,   70,   64,   99,   32,   15,  -13,  -16,
              11,  -17,   32,   14,  -22,   80,   14,  -29,   64,   15,  -65,   48,   15,  -20,  -16,   14,
             -12,   48,   15,   83, -128,   17,  -49,   24,  -56,  -61,   60,   -4,   66,   57,  -32,    3,
              60,  -68, -125,   60,  -48,  -61,   47,  -48,   67,   62,  -64,   67,   57,   76,    9,  -98,
              17,   77,   25,  -80,   66,   58,  -52,    3,   61, -124,    2,   59,  -80,  -61,   59, -116,
             -61,   60,   -4,  -62,   60,   76,   17,   34,   10,    0,    0,    0,  121,   24,    0,    0,
              23,    0,    0,    0,   51,    8, -128,   28,  -60,  -31,   28,  102,   20,    1,   61, -120,
              67,   56, -124,  -61, -116,   66, -128,    7,  121,  120,    7,  115, -104,  113,   12,  -26,
               0,   15,  -19,   16,   14,  -12, -128,   14,   51,   12,   66,   30,  -62,  -63,   29,  -50,
             -95,   28,  102,   48,    5,   61, -120,   67,   56, -124, -125,   27,  -52,    3,   61,  -56,
              67,   61, -116,    3,   61,  -52,  120, -116,  116,  112,    7,  123,    8,    7,  121,   72,
            -121,  112,  112,    7,  122,  112,    3,  118,  120, -121,  112,   32,    7,    0,    0,    0,
             113,   32,    0,    0,    2,    0,    0,    0,    6,   80,   24,   37,   34,   77,    0,    0,
               0,    0,    0,    0,
        };
        return data;
    }

    private static int bitCode32Length = 948;

    private static byte[] getBitCode32Internal() {
        byte[] bc = new byte[bitCode32Length];
        int offset = 0;
        byte[] seg;
        seg = getSegment32_0();
        System.arraycopy(seg, 0, bc, offset, seg.length);
        offset += seg.length;
        return bc;
    }

    // return byte array representation of the 64-bit bitcode.
    public static byte[] getBitCode64() {
        return getBitCode64Internal();
    };

    private static byte[] getSegment64_0() {
        byte[] data = {
             -34,  -64,   23,   11,    0,    0,    0,    0,   44,    0,    0,    0,   52,    3,    0,    0,
               0,    0,    0,    0,   -1,   -1,   -1,   -1,    0,    0,    0,    0,    1,   64,    4,    0,
             109,    7,    0,    0,    2,   64,    4,    0,    3,    0,    0,    0,   66,   67,  -64,  -34,
              33,   12,    0,    0,  -54,    0,    0,    0,    1,   16,    0,    0,   18,    0,    0,    0,
               7, -127,   35, -111,   65,  -56,    4,   73,    6,   16,   50,   57, -110,    1, -124,   12,
              37,    5,    8,   25,   30,    4, -117,   98, -128,   16,   69,    2,   66, -110,   11,   66,
            -124,   16,   50,   20,   56,    8,   24,   73,   10,   50,   68,   36,   72,   10, -112,   33,
              35,  -60,   82, -128,   12,   25,   33,  114,   36,    7,  -56,    8,   17,   98,  -88,  -96,
             -88,   64,  -58,  -16,    1,    0,    0,    0, -119,   32,    0,    0,   22,    0,    0,    0,
              50,   34,    8,    9,   32,  100, -123,    4,   19,   34,  -92, -124,    4,   19,   34,  -29,
            -124,  -95, -112,   20,   18,   76, -120, -116,   11, -124, -124,   76,   16,   32,  115,    4,
             -96,   64,  112, -105,   52,   69, -108,   48,   -7, -111,  -12,    3,  -53,  -30,    8,  -64,
            -124,   56, -115,  111,   -9, -120, -120, -120, -104,   35,    0, -125,  -77,  -92,   41,  -94,
            -124,  -55,   47,   17,  105,  -46, -106,  -59,   17,  -92,   95,  -14,  109,   30,    9,   50,
              68,   84,    3,    1,    0,    0,    0,    0,   19,  -76,  112,    8,    7,  121,   24,    7,
             116,  -80,    3,   58,  104,    3,  119,  120,    7,  119,   40, -121,   54,   96, -121,  116,
             112, -121,  122,  -64, -121,   54,   56,    7,  119,  -88, -121,  114,    8,    7,  113,   72,
            -121,   13,   97,   80,   14,  109,  -48,   14,  122,   80,   14,  109, -112,   14,  118,   64,
               7,  122,   96,    7,  116,  -48,    6,  -23,   16,    7,  114, -128,    7,  122,   16,    7,
             114, -128,    7,  109,  -32,   14,  115,   32,    7,  122,   96,    7,  116,  -48,    6,  -77,
              16,    7,  114, -128,    7,   58,   15,  100,   72,   32,   35,   68,   70,    0, -102, -128,
             -52,    2,    1,    0,    5,    0,    0,    0,   50,   30, -104,    8,   25,   17,   76, -112,
            -116,    9,   38,   71,  -58,    4,   67,  -86,   17,    0,    0,    0,  121,   24,    0,    0,
              93,    0,    0,    0,   67, -124,   35,   88,   32, -115,    3,   59, -124, -125,   59, -100,
               3,   24,  -40,   67,   57,  -56,  -61,   60,  -92,  -61,   59,  -72,    3,   24,  -52, -127,
              27,  -44,    1,   24,   12,   33, -114,  -31,   32,   22,   28,  -10,   80,   14,  -14,   48,
              15,  -23,  -16,   14,  -18,  -80,   32, -120, -125,   33,  -60,   97,   28,  -57, -126,   72,
              29,  -62,  -63,   30,  -62,  -31,   23,  -32,   33,   28,  -58,   97,   29,  -62,  -31,   28,
             -54,  -31,   23,  -36,   33,   28,  -38,  -95,   28,   22,   76,  -29,  -16,   14,  -19,  -32,
               6,  -31,  -32,   14,  -28,   32,   15,  -17, -112,   14,  -28,  -32,    6,  -14,   48,   15,
             110,   64,   15,  -27,   48,   15,  -12,   48, -124,   56, -110,   67,   89,   80, -100,    3,
              43,  -92,  -61,   60,  -48,  -61, -126,   70,   13,   88,   33,   29,  -26, -127,   30,   66,
            -127,   29,  -40,  -31,   29,  -58,   97,   30,  126,   97,   30, -122,    8,    7,  -77, -128,
              97, -123,  116, -104,    7,  122,    8,    5,  118,   96, -121,  119,   24, -121,  121,   -8,
            -123,  121,   24,   66,   28,  -50,  -15,   44,   32,  -24,  -95,   28,  -16, -127,   30,   22,
              52,  -14,   48,   15,  -65,   16,   14,  -20,  -64,   14,  -17,   48,   14,  -31,   64,   15,
             -23,  -16,   14,  -18,   48, -124,   56,  -94,   67,   90,   96,  -56,   67,   57,  -52,   67,
              61,  -80,    3,   61,   44,   24,  -46,  -63,   29,  -24,   97, -124,  -62,   14,  -20,   96,
              15,  -19,  -32,    6,  -23,   64,   14,  -27,  -32,   14,  -12,   48,   37,    0,   70,   28,
              99,    0,   15,  -14,   16,   14,  -25,  -48,   14,  -31,   48,   69,   16, -118,   17,  -50,
              24,  -56,  -61,   60,   -4,   66,   57,  -32,    3,   60,  -68, -125,   60,  -48,  -61,   47,
             -40,   67,   56,  -56,  -61, -108,    0,   25,    1, -115, -127,   60,  -52,  -61,   47,  -68,
            -125,   56,  -88,   67,   57, -116,    3,   61,   -4,  -62,   60,  -80,  -61,   59,  -48,  -61,
              60,   76,    1,   70,   60,   99,   32,   15,  -13,  -16,   11,  -27, -128,   15,  -16,  -16,
              14,  -14,   64,   15,  -65,   64,   15,   -7,    0,   15,  -27,   48,   37,   88,   70,   52,
             101,  -64,   10,  -23,   48,   15,  -12,   16,   10,  -20,  -64,   14,  -17,   48,   14,  -13,
             -16,   11,  -13,   48,   69,  104,   32,    0,  121,   24,    0,    0,   23,    0,    0,    0,
              51,    8, -128,   28,  -60,  -31,   28,  102,   20,    1,   61, -120,   67,   56, -124,  -61,
            -116,   66, -128,    7,  121,  120,    7,  115, -104,  113,   12,  -26,    0,   15,  -19,   16,
              14,  -12, -128,   14,   51,   12,   66,   30,  -62,  -63,   29,  -50,  -95,   28,  102,   48,
               5,   61, -120,   67,   56, -124, -125,   27,  -52,    3,   61,  -56,   67,   61, -116,    3,
              61,  -52,  120, -116,  116,  112,    7,  123,    8,    7,  121,   72, -121,  112,  112,    7,
             122,  112,    3,  118,  120, -121,  112,   32,    7,    0,    0,    0,  113,   32,    0,    0,
               2,    0,    0,    0,    6,   80,   24,   37,   34,   77,    0,    0,    0,    0,    0,    0,
        };
        return data;
    }

    private static int bitCode64Length = 864;

    private static byte[] getBitCode64Internal() {
        byte[] bc = new byte[bitCode64Length];
        int offset = 0;
        byte[] seg;
        seg = getSegment64_0();
        System.arraycopy(seg, 0, bc, offset, seg.length);
        offset += seg.length;
        return bc;
    }

}

