/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.deskclock;

public final class R {
    public static final class animator {
        public static final int fade_in=0x7f050000;
        public static final int fade_out=0x7f050001;
    }
    public static final class array {
        /**  Alarm confirmation toast: Describes how long from now until
         alarm fires 
         */
        public static final int alarm_set=0x7f0a0004;
        /**  Entries listed in the ListPreference when invoking the auto silence
         preference. 
         */
        public static final int auto_silence_entries=0x7f0a0005;
        /**  Values that are retrieved from the ListPreference. These must match
         the auto_silence_entries above. 
 Off 
         */
        public static final int auto_silence_values=0x7f0a0006;
        public static final int cities_id=0x7f0a0002;
        public static final int cities_names=0x7f0a0000;
        public static final int cities_tz=0x7f0a0001;
        /**  Entries listed in the ListPreference when invoking the clock style
         preference. 
         */
        public static final int clock_style_entries=0x7f0a000d;
        /**  Values that are retrieved from the ListPreference. These must match
         the clock_style_entries above. 
         */
        public static final int clock_style_values=0x7f0a000e;
        /**  Formatted stopwatch time for laps shared using the share button 
         */
        public static final int shared_laps_format_set=0x7f0a000a;
        /**  Formatted stopwatch time 
         */
        public static final int stopwatch_format_set=0x7f0a0009;
        /**  Label to enumerate the number of laps the user has counted 
         */
        public static final int sw_lap_number_set=0x7f0a000b;
        /**  Jocular content that user may append when sharing the lap times 
         */
        public static final int sw_share_strings=0x7f0a000c;
        /**  Timer notification: how long from now until timer goes off. 
         */
        public static final int timer_notifications=0x7f0a0003;
        /**  Choices for timezones, must be kept in sync with timezone_values. CHAR LIMIT=25] 
         */
        public static final int timezone_labels=0x7f0a000f;
        /**  Choices for timezones, must be kept in sync with timezone_values. 
         */
        public static final int timezone_values=0x7f0a0010;
        /**  Entries listed in the setting for the side-button action. 
         */
        public static final int volume_button_setting_entries=0x7f0a0007;
        /**  Values for the side-button setting. 
         */
        public static final int volume_button_setting_values=0x7f0a0008;
    }
    public static final class attr {
        /**  Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm a". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format12Hour=0x7f010003;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "H:mm". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format24Hour=0x7f010004;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelColor=0x7f010002;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelOffset=0x7f010001;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int jewelRadius=0x7f010000;
    }
    public static final class bool {
        /**  no need for the dock app, we have Dreams now 
         */
        public static final int config_dockAppEnabled=0x7f0c0001;
        public static final int config_requiresScreenSaver=0x7f0c0000;
        public static final int config_rotateAlarmAlert=0x7f0c0002;
    }
    public static final class color {
        public static final int action_bar_button_text_color=0x7f0b0006;
        public static final int ampm_off=0x7f0b0000;
        public static final int ampm_on=0x7f0b0001;
        public static final int ampm_text_color=0x7f0b0003;
        public static final int bg_day_tint_color=0x7f0b0019;
        public static final int black=0x7f0b0009;
        public static final int black_16p=0x7f0b000c;
        public static final int black_54p=0x7f0b000b;
        public static final int black_87p=0x7f0b000a;
        public static final int blackish_selected=0x7f0b000f;
        public static final int bright_foreground_light_disabled=0x7f0b0013;
        public static final int clock_gray=0x7f0b0015;
        public static final int clock_white=0x7f0b0014;
        /**  App icon color as default 
         */
        public static final int default_background=0x7f0b0016;
        public static final int dialog_gray=0x7f0b0007;
        public static final int hairline=0x7f0b0012;
        public static final int hot_pink=0x7f0b0011;
        public static final int pressed_state_color=0x7f0b0008;
        public static final int screen_saver_color=0x7f0b0004;
        public static final int screen_saver_dim_color=0x7f0b0005;
        public static final int status_bar=0x7f0b0017;
        public static final int time_picker_gray=0x7f0b0018;
        public static final int time_text_color=0x7f0b0002;
        public static final int transparent=0x7f0b0010;
        public static final int white=0x7f0b000d;
        public static final int white_69p=0x7f0b000e;
    }
    public static final class dimen {
        public static final int actionbar_tab_padding=0x7f09001a;
        public static final int actionbar_title_font_size=0x7f09001b;
        public static final int alarm_alert_clock_padding_left=0x7f090069;
        /**  Width of the clock, for use with alarm buttons. 
 Width of the clock, for use with alarm buttons. 
         */
        public static final int alarm_alert_display_width=0x7f090052;
        /**  Bottom padding for alarm lock screen hint text 
         */
        public static final int alarm_alert_hint_padding=0x7f090053;
        public static final int alarm_clock_vertical_margin=0x7f090018;
        public static final int alarm_info_font_size=0x7f090032;
        public static final int alarm_label_padding=0x7f09000d;
        public static final int alarm_label_size=0x7f090036;
        public static final int alarm_lockscreen_alarm_horizontal_padding=0x7f090025;
        public static final int alarm_lockscreen_alarm_vertical_padding=0x7f090026;
        public static final int alarm_lockscreen_bottom_margin=0x7f090028;
        public static final int alarm_lockscreen_pulse_size=0x7f090027;
        public static final int alarm_min_distance=0x7f090020;
        public static final int alarm_side_padding=0x7f090014;
        public static final int alarm_text_font_size=0x7f09001f;
        public static final int alarm_text_padding=0x7f09001e;
        public static final int alarm_time_font_size=0x7f090031;
        public static final int alarm_undo_bar_horizontal_margin=0x7f090021;
        public static final int alert_dialog_title_height=0x7f09000e;
        public static final int ampm_text_size=0x7f090005;
        public static final int analog_clock_margin=0x7f09004a;
        public static final int big_font_size=0x7f090029;
        public static final int body_font_padding=0x7f090033;
        public static final int body_font_size=0x7f090030;
        /**  Analog clock size in the the screen saver 
         */
        public static final int bottom_text_size=0x7f090019;
        public static final int bottom_text_spacing_analog=0x7f090011;
        public static final int bottom_text_spacing_analog_small=0x7f090012;
        public static final int bottom_text_spacing_digital=0x7f09000f;
        public static final int button_font_size=0x7f090034;
        /**  Height of the button footers. 56 height and 16 on top and bottom. 
         */
        public static final int button_footer_height=0x7f090057;
        /**  Negative value of the height of the button footers, for use with lightsout. 
         */
        public static final int button_footer_height_neg=0x7f090058;
        /**  Size of margin for circles. 
         */
        public static final int circle_margin=0x7f090049;
        /**  Size of margin for circles. 
 Size of margin for circles. 
 Size of margin for circles. 
         */
        public static final int circle_margin_top=0x7f090048;
        public static final int circle_size=0x7f09004c;
        public static final int circletimer_circle_size=0x7f090023;
        public static final int circletimer_dot_size=0x7f090022;
        public static final int circletimer_marker_size=0x7f090024;
        public static final int cities_list_item_height=0x7f090047;
        public static final int clock_side_padding=0x7f090015;
        /**  clock_side_padding_reduced = clock_side_padding - world_clock_end_padding 
         */
        public static final int clock_side_padding_reduced=0x7f090016;
        /**  Bottom margin for the expand area 
         */
        public static final int collapse_expand_height=0x7f090067;
        public static final int date_text_size=0x7f090006;
        public static final int dialog_button_font_size=0x7f090035;
        /** padding should be (in dip) ~ 60% dialpad_font_size 
         */
        public static final int dialpad_digit_padding=0x7f090041;
        public static final int dialpad_font_size=0x7f090040;
        public static final int digital_screensaver_clock_text_size=0x7f090013;
        public static final int digital_widget_city_margin_bottom=0x7f090066;
        /**  top margin for digital_appwidget_listview 
         */
        public static final int digital_widget_list_margin_top=0x7f090065;
        /**  sum of fixed heights 
         */
        public static final int digital_widget_list_min_fixed_height=0x7f090064;
        /**  sum of scaled heights 
         */
        public static final int digital_widget_list_min_scaled_height=0x7f090063;
        public static final int footer_button_layout_margin=0x7f09001d;
        public static final int footer_button_size=0x7f09001c;
        /**  Divider height 
         */
        public static final int hairline_height=0x7f090068;
        public static final int header_font_size=0x7f09002f;
        public static final int label_font_size=0x7f09002c;
        public static final int label_margin_big=0x7f09003e;
        public static final int label_margin_small=0x7f09003f;
        public static final int label_text_size=0x7f090003;
        public static final int main_ampm_font_size=0x7f09002e;
        public static final int main_clock_padding=0x7f09003d;
        public static final int medium_font_padding=0x7f090037;
        public static final int medium_font_size=0x7f09002a;
        public static final int medium_space_bottom=0x7f09003a;
        public static final int medium_space_top=0x7f090039;
        public static final int min_digital_widget_height=0x7f090060;
        public static final int min_digital_widget_resize_height=0x7f090062;
        /**  same as min_digital_widget_{width,height} 
         */
        public static final int min_digital_widget_resize_width=0x7f090061;
        /**  width/height of layout/digital_widget_time 
 height is sum of widget_big_font_size + label_font_size + margins 
         */
        public static final int min_digital_widget_width=0x7f09005f;
        public static final int min_lock=0x7f090002;
        public static final int min_swipe=0x7f090000;
        public static final int min_vert=0x7f090001;
        public static final int next_alarm_text_size=0x7f090007;
        /**  The width and height of the notification icon 
         */
        public static final int notification_icon_size=0x7f09004f;
        /**  Size of notification text (see TextAppearance.StatusBar.EventContent) 
         */
        public static final int notification_text_size=0x7f090050;
        /**  Size of notification text titles (see TextAppearance.StatusBar.EventContent.Title) 
         */
        public static final int notification_title_text_size=0x7f090051;
        public static final int screensaver_margin=0x7f09000c;
        public static final int small_font_size=0x7f09002b;
        public static final int small_space=0x7f090038;
        public static final int stopwatch_list_margin_start=0x7f09004d;
        public static final int style_label_space=0x7f09003b;
        public static final int sw_item_space=0x7f09003c;
        public static final int sw_padding_end=0x7f09004e;
        public static final int time_margin_top=0x7f090008;
        public static final int time_text_size=0x7f090004;
        /**  88dip + 0.5 of footer_button_size 
 88dip + 0.5 of footer_button_size 
         */
        public static final int timer_cancel_end_margin=0x7f09000b;
        public static final int timer_circle_margin=0x7f09004b;
        /**  Height of space between timers. 
         */
        public static final int timer_divider_height=0x7f090059;
        public static final int timer_list_padding_bottom=0x7f09000a;
        public static final int timer_padding_left=0x7f090009;
        public static final int timer_setup_button_size=0x7f090043;
        public static final int timer_setup_delete_padding=0x7f090045;
        /** margin should be ~ half timer_setup_font_size 
         */
        public static final int timer_setup_delete_start_margin=0x7f090044;
        public static final int timer_setup_font_size=0x7f090042;
        public static final int timer_setup_label_size=0x7f090046;
        public static final int toast_bar_bottom_margin_in_conversation=0x7f090056;
        public static final int top_text_spacing_digital=0x7f090010;
        public static final int widget_24_medium_font_size=0x7f09005c;
        /**  Digital Widget settings (keyguard|home_screen) 
 Clock and world clock sizes 
 Digital Widget settings (keyguard|home_screen) 
 Use larger fonts 
         */
        public static final int widget_big_font_size=0x7f09005a;
        /**  Hour and minute spacing 
         */
        public static final int widget_big_time_margin_right=0x7f09005d;
        public static final int widget_label_font_size=0x7f09002d;
        public static final int widget_medium_font_size=0x7f09005b;
        public static final int widget_medium_time_margin_right=0x7f09005e;
        /**  Size of analog clock in world clock. 
 Size of analog clock in world clock. 
         */
        public static final int world_clock_analog_size=0x7f090054;
        public static final int world_clock_end_padding=0x7f090017;
        public static final int world_clock_margin=0x7f090055;
    }
    public static final class drawable {
        public static final int alarm_background_normal=0x7f020000;
        public static final int alarm_tab=0x7f020001;
        public static final int appwidget_analog_clock_preview=0x7f020002;
        public static final int appwidget_clock_dial=0x7f020003;
        public static final int appwidget_clock_hour=0x7f020004;
        public static final int appwidget_clock_minute=0x7f020005;
        public static final int appwidget_digital_clock_preview=0x7f020006;
        public static final int bg_circle_pink=0x7f020007;
        public static final int bg_circle_white=0x7f020008;
        public static final int bg_day_selected=0x7f020009;
        public static final int bg_edittext_activated=0x7f02000a;
        public static final int bg_edittext_default=0x7f02000b;
        public static final int bg_gray_circle=0x7f02000c;
        public static final int clock_analog_dial=0x7f02000d;
        public static final int clock_analog_dial_mipmap=0x7f02000e;
        public static final int clock_analog_hour=0x7f02000f;
        public static final int clock_analog_hour_mipmap=0x7f020010;
        public static final int clock_analog_minute=0x7f020011;
        public static final int clock_analog_minute_mipmap=0x7f020012;
        public static final int clock_analog_second=0x7f020013;
        public static final int clock_analog_second_mipmap=0x7f020014;
        public static final int clock_tab=0x7f020015;
        public static final int divider=0x7f020016;
        public static final int fastscroll_thumb_default_holo=0x7f020017;
        public static final int fastscroll_thumb_pressed_holo=0x7f020018;
        public static final int floating_action_button=0x7f020019;
        public static final int ic_add_timer=0x7f02001a;
        public static final int ic_alarm_off=0x7f02001b;
        public static final int ic_alarm_off_black=0x7f02001c;
        public static final int ic_alarm_small=0x7f02001d;
        public static final int ic_backspace=0x7f02001e;
        public static final int ic_backspace_disabled=0x7f02001f;
        public static final int ic_backspace_normal=0x7f020020;
        public static final int ic_cancel=0x7f020021;
        public static final int ic_delete=0x7f020022;
        public static final int ic_delete_small=0x7f020023;
        public static final int ic_expand_down=0x7f020024;
        public static final int ic_fab_alarm=0x7f020025;
        public static final int ic_fab_pause=0x7f020026;
        public static final int ic_fab_play=0x7f020027;
        public static final int ic_fab_plus=0x7f020028;
        public static final int ic_fab_stop=0x7f020029;
        public static final int ic_globe=0x7f02002a;
        public static final int ic_label=0x7f02002b;
        public static final int ic_label_normal=0x7f02002c;
        public static final int ic_label_pressed=0x7f02002d;
        public static final int ic_lap=0x7f02002e;
        public static final int ic_menu_add=0x7f02002f;
        public static final int ic_menu_revert_holo_dark=0x7f020030;
        public static final int ic_noalarms=0x7f020031;
        public static final int ic_notify_lap=0x7f020032;
        public static final int ic_notify_reset=0x7f020033;
        public static final int ic_notify_start=0x7f020034;
        public static final int ic_notify_stop=0x7f020035;
        public static final int ic_overflow=0x7f020036;
        public static final int ic_plusone=0x7f020037;
        public static final int ic_reset=0x7f020038;
        public static final int ic_ringtone=0x7f020039;
        public static final int ic_share=0x7f02003a;
        public static final int ic_snooze=0x7f02003b;
        public static final int ic_snooze_black=0x7f02003c;
        public static final int ic_swipe_circle_bottom=0x7f02003d;
        public static final int ic_swipe_circle_dark=0x7f02003e;
        public static final int ic_swipe_circle_light=0x7f02003f;
        public static final int ic_swipe_circle_top=0x7f020040;
        public static final int ic_tab_alarm_activated=0x7f020041;
        public static final int ic_tab_alarm_normal=0x7f020042;
        public static final int ic_tab_clock_activated=0x7f020043;
        public static final int ic_tab_clock_normal=0x7f020044;
        public static final int ic_tab_stopwatch_activated=0x7f020045;
        public static final int ic_tab_stopwatch_normal=0x7f020046;
        public static final int ic_tab_timer_activated=0x7f020047;
        public static final int ic_tab_timer_normal=0x7f020048;
        public static final int panel_undo_holo=0x7f020049;
        public static final int red_fastscroll_thumb=0x7f02004a;
        public static final int stat_notify_alarm=0x7f02004b;
        public static final int stat_notify_stopwatch=0x7f02004c;
        public static final int stat_notify_timer=0x7f02004d;
        public static final int stopwatch_tab=0x7f02004e;
        public static final int timer_tab=0x7f02004f;
        public static final int toggle_circle=0x7f020050;
    }
    public static final class id {
        public static final int action_button=0x7f0e0003;
        public static final int action_icon=0x7f0e0005;
        public static final int action_text=0x7f0e0006;
        public static final int alarm=0x7f0e000d;
        public static final int alarm_item=0x7f0e001a;
        public static final int alarm_layout=0x7f0e0019;
        public static final int alarms_empty_view=0x7f0e0014;
        public static final int alarms_footer_view=0x7f0e0017;
        public static final int alarms_list=0x7f0e0013;
        public static final int alert=0x7f0e000f;
        public static final int alert_info=0x7f0e0011;
        public static final int alert_title=0x7f0e0010;
        public static final int analog_appwidget=0x7f0e002a;
        public static final int analog_clock=0x7f0e0038;
        public static final int arrow=0x7f0e0029;
        public static final int cancelButton=0x7f0e003f;
        public static final int choose_ringtone=0x7f0e001f;
        public static final int cities=0x7f0e0031;
        public static final int cities_list=0x7f0e002b;
        public static final int city_day=0x7f0e007a;
        public static final int city_day_left=0x7f0e007f;
        public static final int city_day_right=0x7f0e0082;
        public static final int city_left=0x7f0e007b;
        public static final int city_name=0x7f0e002f;
        public static final int city_name_layout=0x7f0e0079;
        public static final int city_name_left=0x7f0e007e;
        public static final int city_name_right=0x7f0e0081;
        public static final int city_onoff=0x7f0e002e;
        public static final int city_spacer=0x7f0e0083;
        public static final int city_time=0x7f0e0030;
        public static final int collapse_expand=0x7f0e0022;
        public static final int content=0x7f0e0007;
        public static final int date=0x7f0e0039;
        public static final int daysOfWeek=0x7f0e0027;
        public static final int delete=0x7f0e0023;
        public static final int description_icon=0x7f0e0001;
        public static final int description_text=0x7f0e0002;
        public static final int desk_clock_pager=0x7f0e0033;
        public static final int digital_appwidget=0x7f0e003b;
        public static final int digital_appwidget_listview=0x7f0e003c;
        public static final int digital_clock=0x7f0e0009;
        public static final int dismiss=0x7f0e000c;
        public static final int divider=0x7f0e005a;
        public static final int edit_label=0x7f0e0021;
        public static final int end_space=0x7f0e004a;
        public static final int expand_area=0x7f0e001c;
        public static final int fab=0x7f0e0035;
        public static final int first=0x7f0e005b;
        public static final int fourth=0x7f0e005e;
        public static final int fragment_container=0x7f0e0060;
        public static final int hairline=0x7f0e0024;
        public static final int header=0x7f0e002c;
        public static final int hint=0x7f0e000e;
        public static final int hours_label=0x7f0e0066;
        public static final int hours_ones=0x7f0e0065;
        public static final int index=0x7f0e002d;
        public static final int key_left=0x7f0e0056;
        public static final int key_middle=0x7f0e0057;
        public static final int key_right=0x7f0e0058;
        public static final int label=0x7f0e0026;
        public static final int labelBox=0x7f0e003e;
        public static final int lap_number=0x7f0e0041;
        public static final int lap_time=0x7f0e0042;
        public static final int lap_total=0x7f0e0043;
        public static final int laps_list=0x7f0e004b;
        public static final int left_button=0x7f0e0034;
        public static final int left_clock=0x7f0e007d;
        public static final int line1=0x7f0e004d;
        public static final int main=0x7f0e0012;
        public static final int main_clock=0x7f0e0037;
        public static final int main_clock_frame=0x7f0e0044;
        public static final int main_clock_left_pane=0x7f0e0032;
        public static final int menu_button=0x7f0e0018;
        public static final int menu_item_help=0x7f0e0087;
        public static final int menu_item_night_mode=0x7f0e0089;
        public static final int menu_item_search=0x7f0e0084;
        public static final int menu_item_settings=0x7f0e0086;
        public static final int menu_item_sort=0x7f0e0085;
        public static final int menu_items=0x7f0e0088;
        public static final int minutes_label=0x7f0e0069;
        public static final int minutes_ones=0x7f0e0068;
        public static final int minutes_picker=0x7f0e0045;
        public static final int minutes_tens=0x7f0e0067;
        public static final int nextAlarm=0x7f0e003a;
        public static final int notification_icon=0x7f0e0055;
        public static final int numbers_key=0x7f0e0000;
        public static final int onoff=0x7f0e001b;
        public static final int page_indicator0=0x7f0e0074;
        public static final int page_indicator1=0x7f0e0075;
        public static final int page_indicator2=0x7f0e0076;
        public static final int page_indicator3=0x7f0e0077;
        public static final int page_indicators=0x7f0e0073;
        public static final int pulse=0x7f0e000a;
        public static final int repeat_days=0x7f0e001e;
        public static final int repeat_onoff=0x7f0e001d;
        public static final int reset_add=0x7f0e0071;
        public static final int right_button=0x7f0e0036;
        public static final int right_clock=0x7f0e0080;
        public static final int second=0x7f0e005c;
        public static final int seconds=0x7f0e006a;
        public static final int seconds_label=0x7f0e006b;
        public static final int separator=0x7f0e0004;
        public static final int setButton=0x7f0e0040;
        public static final int snooze=0x7f0e000b;
        public static final int start_space=0x7f0e0046;
        public static final int stopwatch_circle=0x7f0e0047;
        public static final int stopwatch_time=0x7f0e0049;
        public static final int stopwatch_time_text=0x7f0e0048;
        public static final int summary=0x7f0e0025;
        public static final int swn_collapsed_chronometer=0x7f0e004e;
        public static final int swn_collapsed_hitspace=0x7f0e004c;
        public static final int swn_collapsed_laps=0x7f0e004f;
        public static final int swn_expanded_chronometer=0x7f0e0051;
        public static final int swn_expanded_hitspace=0x7f0e0050;
        public static final int swn_expanded_laps=0x7f0e0052;
        public static final int swn_left_button=0x7f0e0053;
        public static final int swn_right_button=0x7f0e0054;
        public static final int the_clock=0x7f0e003d;
        public static final int third=0x7f0e005d;
        public static final int timer_cancel=0x7f0e0061;
        public static final int timer_circle=0x7f0e006c;
        public static final int timer_label=0x7f0e006e;
        public static final int timer_label_placeholder=0x7f0e0070;
        public static final int timer_label_text=0x7f0e006f;
        public static final int timer_setup=0x7f0e0064;
        public static final int timer_time=0x7f0e006d;
        public static final int timer_time_display=0x7f0e005f;
        public static final int timer_time_text=0x7f0e0059;
        public static final int timer_view=0x7f0e0072;
        public static final int timers_list=0x7f0e0063;
        public static final int timers_list_page=0x7f0e0062;
        public static final int title=0x7f0e0008;
        public static final int tomorrowLabel=0x7f0e0028;
        public static final int undo_bar=0x7f0e0016;
        public static final int undo_frame=0x7f0e0015;
        public static final int vertical_view_pager=0x7f0e0078;
        public static final int vibrate_onoff=0x7f0e0020;
        public static final int widget_item=0x7f0e007c;
    }
    public static final class integer {
        /**  Number of world clocks in a row, for the digital appwidget. 
         */
        public static final int appwidget_world_clocks_per_row=0x7f08000c;
        public static final int dim_animation_duration=0x7f080009;
        public static final int dismiss_animation_duration=0x7f080006;
        public static final int escape_animation_duration=0x7f080002;
        /** 
    <integer name="activity_slide_left_duration">475</integer>
    <integer name="activity_slide_right_duration">525</integer>
    <integer name="activity_collapse_duration">125</integer>
    <integer name="expand_cc_bcc_dur">150</integer>
    <integer name="fadein_cc_bcc_dur">150</integer>

    <integer name="dialog_animationDefaultDur">220</integer>
    <integer name="dialog_animationShortDur">150</integer>
    <integer name="shrink_animation_duration">350</integer>
    <integer name="slide_animation_duration">320</integer>
    <integer name="fade_in_animation_duration">350</integer>
    
         */
        public static final int fade_duration=0x7f080000;
        public static final int hide_animation_duration=0x7f080008;
        public static final int max_dismiss_velocity=0x7f080004;
        public static final int max_escape_animation_duration=0x7f080003;
        public static final int snap_animation_duration=0x7f080005;
        /**  Swipe constants 
         */
        public static final int swipe_escape_velocity=0x7f080001;
        public static final int swipe_scroll_slop=0x7f080007;
        public static final int timer_column_count=0x7f08000a;
        /**  Number of world clocks in a row, for the clock tab. 
         */
        public static final int world_clocks_per_row=0x7f08000b;
    }
    public static final class layout {
        public static final int actionable_toast_row=0x7f040000;
        public static final int alarm_activity=0x7f040001;
        public static final int alarm_clock=0x7f040002;
        public static final int alarm_time=0x7f040003;
        public static final int analog_appwidget=0x7f040004;
        public static final int blank_footer_view=0x7f040005;
        public static final int cities_activity=0x7f040006;
        public static final int city_list_header=0x7f040007;
        public static final int city_list_item=0x7f040008;
        public static final int clock_fragment=0x7f040009;
        public static final int day_button=0x7f04000a;
        public static final int desk_clock=0x7f04000b;
        public static final int desk_clock_saver=0x7f04000c;
        public static final int digital_appwidget=0x7f04000d;
        public static final int digital_widget_time=0x7f04000e;
        public static final int label_dialog=0x7f04000f;
        public static final int lap_view=0x7f040010;
        public static final int main_clock_frame=0x7f040011;
        public static final int snooze_length_picker=0x7f040012;
        public static final int stopwatch_fragment=0x7f040013;
        public static final int stopwatch_notif_collapsed=0x7f040014;
        public static final int stopwatch_notif_expanded=0x7f040015;
        public static final int stopwatch_notification_icon=0x7f040016;
        public static final int three_keys_view=0x7f040017;
        public static final int time_setup_view=0x7f040018;
        public static final int timer_alert_full_screen=0x7f040019;
        public static final int timer_cancel_button=0x7f04001a;
        public static final int timer_fragment=0x7f04001b;
        public static final int timer_full_screen_fragment=0x7f04001c;
        public static final int timer_h_mm_ss_view=0x7f04001d;
        public static final int timer_list_item=0x7f04001e;
        public static final int timer_setup_view=0x7f04001f;
        public static final int timer_timer_view=0x7f040020;
        public static final int world_clock_item=0x7f040021;
        public static final int world_clock_label=0x7f040022;
        public static final int world_clock_list_item=0x7f040023;
        public static final int world_clock_remote_list_item=0x7f040024;
    }
    public static final class menu {
        public static final int cities_menu=0x7f110000;
        public static final int desk_clock_menu=0x7f110001;
        public static final int settings_menu=0x7f110002;
    }
    public static final class mipmap {
        public static final int ic_launcher_alarmclock=0x7f030000;
    }
    public static final class plurals {
        /**  Stopwatch accessibility strings 
         */
        public static final int Nhours_description=0x7f0f0004;
        public static final int Nminutes_description=0x7f0f0005;
        public static final int Nseconds_description=0x7f0f0006;
        /**  The text shown after user snoozed an alerting alarm. The text will be shown
         together with the word 'Snoozed' in two separate lines or example:
             Snoozed
             10 min
         [CHAR LIMIT=10]
    
         */
        public static final int alarm_alert_snooze_duration=0x7f0f0000;
        /**  Toast that appears after Alarm is snoozed from the Alarm
         dialog. Says the alarm will snooze for xxx minutes.  
         */
        public static final int alarm_alert_snooze_set=0x7f0f0001;
        /**  Alarm deletion confirmation message
         */
        public static final int alarm_delete_confirmation=0x7f0f0008;
        public static final int snooze_duration=0x7f0f0002;
        public static final int snooze_picker_label=0x7f0f0003;
        public static final int timers_num=0x7f0f0007;
    }
    public static final class raw {
        public static final int fallbackring=0x7f070000;
        public static final int in_call_alarm=0x7f070001;
    }
    public static final class string {
        /**  String matching the lock screen format for displaying the date. 
         */
        public static final int abbrev_wday_month_day_no_year=0x7f0d0000;
        /**  Menu item on Alarm Clock screen: Add alarm 
         */
        public static final int add_alarm=0x7f0d0005;
        /**  Button labels on the pre-dismiss alarm notifications: Dismiss now 
         */
        public static final int alarm_alert_dismiss_now_text=0x7f0d001b;
        /**  Button labels on the alarm dialog: Dismiss 
         */
        public static final int alarm_alert_dismiss_text=0x7f0d001a;
        /**  The text shown as an option to dismiss an alerting alarm [CHAR LIMIT=5] 
         */
        public static final int alarm_alert_off_action_text=0x7f0d0019;
        /**  The text shown after user dismissed an alerting alarm [CHAR LIMIT=15] 
         */
        public static final int alarm_alert_off_text=0x7f0d001f;
        /**  Text to appear in the notification title while an alarm is about to go off. 
         */
        public static final int alarm_alert_predismiss_title=0x7f0d0022;
        /**  Button labels on the alarm dialog: Snooze 
         */
        public static final int alarm_alert_snooze_text=0x7f0d0020;
        /**  Text to appear inside a notification while an alarm is snoozing. 
         */
        public static final int alarm_alert_snooze_until=0x7f0d0021;
        /**  The text shown after user snoozed an alerting alarm. The text will be shown
         together with the number of minutes in two separate lines. For example:
             Snoozed
             10 min
         [CHAR LIMIT=10]
    
         */
        public static final int alarm_alert_snoozed_text=0x7f0d001e;
        /**  The text shown above the clock when alarm is alerting [CHAR LIMIT=10] 
         */
        public static final int alarm_alert_wake_up=0x7f0d0018;
        public static final int alarm_button_description=0x7f0d0040;
        /**  Toast content when an alarm was deleted  
         */
        public static final int alarm_deleted=0x7f0d0097;
        /**  A description for the DeskClock alarm sound playback service.
         [CHAR LIMIT=NONE] 
         */
        public static final int alarm_klaxon_service_desc=0x7f0d004a;
        /**  Title for AlarmClock activity 
 Label for the Alarms activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int alarm_list_title=0x7f0d0004;
        public static final int alarm_missed_text=0x7f0d001d;
        /**  Alarm Alert screen: this message is shown after an alarm rung
         unattended for a number of minutes.  It tells the user that
         the alarm has been silenced.
         */
        public static final int alarm_missed_title=0x7f0d001c;
        /**  Text to display in the notification ticker and label 
         */
        public static final int alarm_notify_snooze_label=0x7f0d003b;
        /**  Text to display in the notification when the alarm has been snoozed 
         */
        public static final int alarm_notify_snooze_text=0x7f0d003c;
        /**  Text to display in the small text of the notification 
         */
        public static final int alarm_notify_text=0x7f0d003a;
        /**  Setting labels on Set alarm screen: Repeat 
         */
        public static final int alarm_repeat=0x7f0d0012;
        /**  Header in the preferences settings for the section pertaining to alarms 
         */
        public static final int alarm_settings=0x7f0d0086;
        /**  Font size for AM/PM should match alarm_label_size 
 Font size for AM/PM should match alarm_label_size 
         */
        public static final int alarm_time_12_hours_format=0x7f0d00a6;
        /**  Label shown when user is setting up non-repeating alarm for later today [CHAR LIMIT=15] 
         */
        public static final int alarm_today=0x7f0d0017;
        /**  Label shown when user is setting up non-repeating alarm for tomorrow [CHAR LIMIT=15] 
         */
        public static final int alarm_tomorrow=0x7f0d0016;
        /**  Description of the button to undo change to alarm 
         */
        public static final int alarm_undo=0x7f0d0096;
        /**  Setting labels on Set alarm screen: Vibration on or off 
         */
        public static final int alarm_vibrate=0x7f0d0011;
        /**  Setting title for changing the alarm volume. 
         */
        public static final int alarm_volume_title=0x7f0d0038;
        /**  Displays the number of alarms selected from the list of alarms. 
         */
        public static final int alarms_selected=0x7f0d009c;
        /**  Setting labels on Set alarm screen: Select alarm ringtone  
         */
        public static final int alert=0x7f0d0013;
        /**  Notification text when multiple timers are stopped. 
         */
        public static final int all_timers_stopped_notif=0x7f0d008e;
        /**  Label for analog clock gadget displayed on-screen when that gadget is represented to the user. 
         */
        public static final int analog_gadget=0x7f0d002e;
        /**  
 Label shown on launcher icon 
 Label for the this application displayed on-screen when this application must be represented to the user. 
         */
        public static final int app_label=0x7f0d0003;
        /**  Auto silence summary when turned off 
         */
        public static final int auto_silence_never=0x7f0d0034;
        /**  Auto silence summary string set based on the preference value. 
         */
        public static final int auto_silence_summary=0x7f0d0033;
        /**  Auto silence preference title 
         */
        public static final int auto_silence_title=0x7f0d0032;
        /**  Title for an option that will automtically show a clock representing the user's regular timezone on the main fragment whenever the user leaves their regular timezone
         */
        public static final int automatic_home_clock=0x7f0d007c;
        /**  Describes the functionality provided by the automatic_home_clock option 
         */
        public static final int automatic_home_clock_summary=0x7f0d007d;
        /**  A short representation of charging information, e.g "34%" 
         */
        public static final int battery_charging_level=0x7f0d0048;
        /**  Clock view buttons strings
 Describes the purpose of the button to start the activity to add/edit/delete alarms 
         */
        public static final int button_alarms=0x7f0d0053;
        /**  Describes the purpose of the button which provides a list of cities for the world clock settings 
         */
        public static final int button_cities=0x7f0d0054;
        /**  Describes the purpose of the button which pops up a menu of setting choices 
         */
        public static final int button_menu=0x7f0d0055;
        /**  Label for the Cities activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int cities_activity_title=0x7f0d0079;
        /**  world clock deletion confirmation 
         */
        public static final int city_delete_confirmation=0x7f0d009f;
        /**  format strings for clocks 
         */
        public static final int clock_24_hours_format=0x7f0d00a1;
        /**  Appears at the top of the Clock Picker screen: Tell user to
         select a clock to display 
         */
        public static final int clock_instructions=0x7f0d002d;
        /**  Settings strings 
 Header in the preferences settings for the section pertaining to clocks on the main fragment 
         */
        public static final int clock_settings=0x7f0d007a;
        /**  Header for a Clock Dream Setting referring to choosing analog or digital style 
         */
        public static final int clock_style=0x7f0d007b;
        /**  Description of the up caret in the alarm alert screen to collapse the alarm content to summary perspective. [CHAR LIMIT=NONE] 
         */
        public static final int collapse_alarm=0x7f0d0095;
        /**  Label on the main screen control used to set alarm [CHAR LIMIT=30]
         */
        public static final int control_set_alarm=0x7f0d004d;
        /**  Label on the main screen control used to set alarm when there is already an existing alarm [CHAR LIMIT=30]
         */
        public static final int control_set_alarm_with_existing=0x7f0d004e;
        /**  Alarm confirmation toast: singular day 
         */
        public static final int day=0x7f0d0024;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: concatenate days with
         this character, i.e. "Mon, Tue, Wed" 
         */
        public static final int day_concat=0x7f0d002c;
        /**  Alarm confirmation toast: plural days 
         */
        public static final int days=0x7f0d0025;
        /**  Default clock style. 
         */
        public static final int default_clock_style=0x7f0d0002;
        /**  Default label to display for an alarm 
         */
        public static final int default_label=0x7f0d000f;
        /**  Title of the ringtone setting. 
         */
        public static final int default_ringtone_setting_title=0x7f0d003f;
        /**  Delete button when editing an alarm. 
         */
        public static final int delete=0x7f0d0037;
        /**  Context Menu Item on Alarm Settings screen: Delete alarm 
         */
        public static final int delete_alarm=0x7f0d0008;
        /**  Delete alarm confirmation dialog message. 
         */
        public static final int delete_alarm_confirm=0x7f0d000b;
        /**  message used by the talkback accessebility app to say that something was deleted 
         */
        public static final int deleted_message=0x7f0d009d;
        /**  Text instruction for snooze alarm on alarm lock screen. The snooze button will still
         be on the left even on RTL languages so please do not reverse this during
         translation. 
         */
        public static final int description_direction_left=0x7f0d008b;
        /**  Text instruction for dismiss alarm on alarm lock screen. The dismiss button will still
         be on the right even on RTL languages so please do not reverse this during
         translation. 
         */
        public static final int description_direction_right=0x7f0d008a;
        public static final int desk_clock_button_description=0x7f0d0045;
        public static final int desk_clock_help_url=0x7f0d0087;
        /**  Label for digital clock gadget displayed on-screen when that gadget is represented to the user. 
         */
        public static final int digital_gadget=0x7f0d00a0;
        /**  Context Menu Item on Alarm Settings screen: Disable alarm 
         */
        public static final int disable_alarm=0x7f0d000a;
        /**  Done button when editing an alarm. 
         */
        public static final int done=0x7f0d0035;
        /**  Context Menu Item on Alarm Settings screen: Enable alarm 
         */
        public static final int enable_alarm=0x7f0d0009;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: special case for when
         the alarm is set to repeat every day 
         */
        public static final int every_day=0x7f0d002a;
        /**  Description of the down caret in the alarm alert screen to expand the alarm content to edit perspective. [CHAR LIMIT=NONE] 
         */
        public static final int expand_alarm=0x7f0d0094;
        /**  Format for describing the date, for accessibility. 
         */
        public static final int full_wday_month_day_no_year=0x7f0d0001;
        public static final int gallery_button_description=0x7f0d0041;
        /**  Help activity name 
         */
        public static final int help=0x7f0d002f;
        /**  Menu item on Alarm Clock screen: Hide clock 
         */
        public static final int hide_clock=0x7f0d000d;
        public static final int home_button_description=0x7f0d0044;
        /**  Title with the clock on the main page displaying the user's regular timezone (shows when automatic_home_clock enabled) 
         */
        public static final int home_label=0x7f0d0078;
        /**  Title in the preferences change the time zone for the user's home 
         */
        public static final int home_time_zone=0x7f0d007e;
        /**  Title in a list dialog box to pick a time zone for the user's home 
         */
        public static final int home_time_zone_title=0x7f0d007f;
        /**  Alarm confirmation toast: singular hour 
         */
        public static final int hour=0x7f0d0026;
        /**  Alarm confirmation toast: plural hours 
         */
        public static final int hours=0x7f0d0027;
        /**  Abbreviation for temporal hours [CHAR LIMIT=1] 
         */
        public static final int hours_label=0x7f0d0062;
        /**  Accessibility strings 
         */
        public static final int hours_label_description=0x7f0d0065;
        /**  Setting label on Set alarm screen: Label 
         */
        public static final int label=0x7f0d000e;
        /**  Accessibility labels for alarm buttons 
         */
        public static final int label_description=0x7f0d0046;
        public static final int label_unlabeled=0x7f0d009b;
        /**  String displayed as the alert summary while loading the alert name from
         the media player. [CHAR LIMIT=NONE] 
         */
        public static final int loading_ringtone=0x7f0d004b;
        /**  Font size for AM/PM should match bottom_text_size 
 format strings for clocks 
 Font size for AM/PM should match bottom_text_size 
         */
        public static final int main_clock_12_hours_format=0x7f0d00a4;
        public static final int main_widget_12_hours_format=0x7f0d00a2;
        /**   ActionBar strings 
 Describes the purpose of the tab button which which switches the activity to the Alarm page 
         */
        public static final int menu_alarm=0x7f0d004f;
        /**  Describes the purpose of the tab button which which switches the activity to the Clock page 
         */
        public static final int menu_clock=0x7f0d0051;
        /**  Menu item on Alarm Clock screen: Desk clock 
         */
        public static final int menu_desk_clock=0x7f0d0006;
        /**  Menu item on Alarm Clock screen: Edit alarm 
         */
        public static final int menu_edit_alarm=0x7f0d0007;
        /**  Menu item on most screens to get to the help information 
         */
        public static final int menu_item_help=0x7f0d0057;
        /**  Menu item on clock screen to enter night mode. 
         */
        public static final int menu_item_night_mode=0x7f0d0058;
        /**  Menu item on most screens to get to more settings 
         */
        public static final int menu_item_settings=0x7f0d0056;
        /**  Menu item on Cities screen to sort by GMT offset 
         */
        public static final int menu_item_sort_by_gmt_offset=0x7f0d0059;
        /**  Menu item on Cities screen to sort by alphabetical order 
         */
        public static final int menu_item_sort_by_name=0x7f0d005a;
        /**  Describes the purpose of the tab button which which switches the activity to the Stopwatch page 
         */
        public static final int menu_stopwatch=0x7f0d0052;
        /**  Describes the purpose of the tab button which which switches the activity to the Timer page 
         */
        public static final int menu_timer=0x7f0d0050;
        /**  Alarm confirmation toast: singular minute  
         */
        public static final int minute=0x7f0d0028;
        /**  Alarm confirmation toast: plural minutes  
         */
        public static final int minutes=0x7f0d0029;
        /**  Abbreviation for temporal minutes [CHAR LIMIT=1] 
         */
        public static final int minutes_label=0x7f0d0063;
        public static final int minutes_label_description=0x7f0d0066;
        /**  Text to appear in when trying to view a missed alarm that has been deleted 
         */
        public static final int missed_alarm_has_been_deleted=0x7f0d0023;
        public static final int music_button_description=0x7f0d0042;
        /**  Repeat options that appear under an alarm on main Alarm Clock
         screen to identify repetition schedule: special case for when
         the alarm is set to never repeat 
         */
        public static final int never=0x7f0d002b;
        /**  Description of field showing the next alarm time in the clock page, for accessibility. 
         */
        public static final int next_alarm_description=0x7f0d009a;
        /**  Notification text when at least one timer, of those in use, is counting down. 
         */
        public static final int next_timer_notif=0x7f0d0090;
        /**  Describes intensity of display diminuation during dream mode 
         */
        public static final int night_mode_summary=0x7f0d0093;
        /**  Title for check box to pick intensity of display diminuation during dream mode 
         */
        public static final int night_mode_title=0x7f0d0092;
        public static final int nightmode_button_description=0x7f0d0043;
        /**  String for no alarms 
         */
        public static final int no_alarms=0x7f0d00a7;
        /**  String for no alarms set [CHAR LIMIT=24] 
         */
        public static final int no_alarms_set=0x7f0d00a8;
        /**  String for no enabled alarms in timeline view [CHAR LIMIT=30] 
         */
        public static final int no_upcoming_alarms=0x7f0d00a9;
        /**  Revert button when editing an alarm. 
         */
        public static final int revert=0x7f0d0036;
        /**  Label on expanded alarm edit view. 
         */
        public static final int ringtone=0x7f0d0014;
        public static final int ringtone_description=0x7f0d0047;
        /**  screensaver settings strings 
 Label for the screen saver activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int screensaver_settings=0x7f0d0091;
        /**  Abbreviation for temporal seconds [CHAR LIMIT=1] 
         */
        public static final int seconds_label=0x7f0d0064;
        public static final int seconds_label_description=0x7f0d0067;
        /**  Label for selected cities in Cities list view 
         */
        public static final int selected_cities_label=0x7f0d005b;
        /**  Preference category on Alarm Settings screen: Set alarm 
 Also label for the old Alarms dialog activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int set_alarm=0x7f0d0010;
        /**  Settings activity name 
 Label for the Settings activity displayed on-screen when that activity must be represented to the user. 
         */
        public static final int settings=0x7f0d0030;
        /**  Menu item on Alarm Clock screen: Show clock 
         */
        public static final int show_clock=0x7f0d000c;
        /**  Summary for the alarm preference when silent is chosen. 
         */
        public static final int silent_alarm_summary=0x7f0d0039;
        /**  slash between date and next alarm in the clock 
         */
        public static final int slash=0x7f0d0098;
        /**  Setting title for changing the snooze duration. 
         */
        public static final int snooze_duration_title=0x7f0d0031;
        /**  Describes the running service for the stopwatch 
         */
        public static final int stopwatch_service_desc=0x7f0d0088;
        /**  Describes the purpose of the button to record current the stopwatch value into the4 collection of lap times. 
         */
        public static final int sw_lap_button=0x7f0d005f;
        /**  Label to enumerate the number of laps in the notification the user has counted 
         */
        public static final int sw_notification_lap_number=0x7f0d006b;
        /**  Describes the purpose of the button to return the stopwatch to zero and remove the lap times. 
         */
        public static final int sw_reset_button=0x7f0d0060;
        /**  Stop Watch strings 
 Describes the purpose of the button to resume running a stopwatch 
         */
        public static final int sw_resume_button=0x7f0d005c;
        /**  Describes the purpose of the button to share the stopwatch value.
         Also used as title for chooser when sharing stopwatch results. 
         */
        public static final int sw_share_button=0x7f0d0061;
        /**  Header within the message created to share a list of lap times (a new line is appended to this) 
         */
        public static final int sw_share_laps=0x7f0d006a;
        /**   Stopwatch share strings 
 Sentence within the message created to share the total time recorded within the stopwatch 
         */
        public static final int sw_share_main=0x7f0d0069;
        /**  Describes the purpose of the button to begin running a stopwatch 
         */
        public static final int sw_start_button=0x7f0d005d;
        /**  Describes the purpose of the button to pause a stopwatch. 
         */
        public static final int sw_stop_button=0x7f0d005e;
        /**  Desription for the stopped stop watch 
         */
        public static final int swn_stopped=0x7f0d0089;
        /**  Setting labels on Set alarm screen: Set time  
         */
        public static final int time=0x7f0d0015;
        /**  add 00 as minutes to the time when pressing this button 
         */
        public static final int time_picker_00_label=0x7f0d0084;
        /**  add 30 as minutes to the time when pressing this button 
         */
        public static final int time_picker_30_label=0x7f0d0085;
        /**   place holder for am/pm label when it is not set 
         */
        public static final int time_picker_ampm_label=0x7f0d0083;
        /**  Textual content of the button to discard the current dialog values and close the dialog 
         */
        public static final int time_picker_cancel=0x7f0d0080;
        /**  Textual content of the button to update an alarm with the current dialog values 
         */
        public static final int time_picker_set=0x7f0d0081;
        public static final int time_picker_time_seperator=0x7f0d0082;
        /**  timer strings 
 Describes the purpose of the button to add a new timer 
         */
        public static final int timer_add_timer=0x7f0d006c;
        /**  Describes the purpose of the button to discard the current dialog values. Will also close the dialog if other time's exist 
         */
        public static final int timer_cancel=0x7f0d0074;
        /**  Describes the purpose of the button to delete a timer. 
         */
        public static final int timer_delete=0x7f0d006e;
        /**  Timer deletion confirmation 
         */
        public static final int timer_delete_confirmation=0x7f0d009e;
        /**  Describes the purpose of the button to stop and delete the timer. 
         */
        public static final int timer_done=0x7f0d0072;
        /**  Label associated with a notification for a Timer 
         */
        public static final int timer_notification_label=0x7f0d0076;
        /**  Like "timer_plus_one", but with 'minute' abbreviated for the notification. 
         */
        public static final int timer_plus_1_min=0x7f0d0070;
        /**  Describes the purpose of the button increase the remaining time on a timer by one minute. 
         */
        public static final int timer_plus_one=0x7f0d006f;
        /**  Describes the purpose of the button to return the timer to it's original starting value. 
         */
        public static final int timer_reset=0x7f0d0073;
        /**  A description for the DeskClock timer sound playback service.
         [CHAR LIMIT=NONE] 
         */
        public static final int timer_ring_service_desc=0x7f0d004c;
        /**  Describes the purpose of the button to begin or continue running a timer 
         */
        public static final int timer_start=0x7f0d006d;
        /**  Describes the purpose of the button to stop the timer. 
         */
        public static final int timer_stop=0x7f0d0071;
        /**  Notification title when timer is stopped. 
         */
        public static final int timer_stopped=0x7f0d008c;
        /**  Notification content shown when a timer has completed and has no more time remaining 
         */
        public static final int timer_times_up=0x7f0d0075;
        /**  Notification title when at least one timer, of those in use, is counting down. 
         */
        public static final int timers_in_use=0x7f0d008f;
        /**  Toast content shown when user attempts to create a new timer when there are already 4 timers 
         */
        public static final int timers_max_count_reached=0x7f0d0077;
        /**  Notification title when multiple timers are stopped. 
         */
        public static final int timers_stopped=0x7f0d008d;
        /**  Dialog title of the volume and power setting. 
         */
        public static final int volume_button_dialog_title=0x7f0d003e;
        /**  Title of the setting to change hardware button behavior. This string
         should be changed for each piece of hardware. [CHAR LIMIT=20] 
         */
        public static final int volume_button_setting_title=0x7f0d003d;
        /**  Font size for AM/PM should match widget_label_font_size 
 Font size for AM/PM should match widget_label_font_size 
         */
        public static final int wc_widget_12_hours_format=0x7f0d00a3;
        /**  What to show the user if the weather widget exists but fails to
         respond. This is a sign of an error; if the weather widget is not
         present on the device, we show nothing at all. 
         */
        public static final int weather_fetch_failure=0x7f0d0049;
        /**  Font size for AM/PM should match label_font_size 
 Font size for AM/PM should match label_font_size 
         */
        public static final int world_clock_12_hours_format=0x7f0d00a5;
        /**  slash between date and next alarm in the clock 
         */
        public static final int world_day_of_week_label=0x7f0d0099;
        public static final int zero=0x7f0d0068;
    }
    public static final class style {
        /**  NOTE: This must be a fullscreen theme, or else the fullscreen alarm will
         be unable to turn the screen on. 
         */
        public static final int AlarmAlertFullScreenTheme=0x7f100013;
        public static final int AlarmClockTheme=0x7f10000c;
        public static final int AlarmSwitchTheme=0x7f100002;
        public static final int AmPmTextAppearance=0x7f100006;
        public static final int CitiesTheme=0x7f10000e;
        public static final int CitiesTheme_ActionBar=0x7f100010;
        public static final int DeskClock=0x7f100007;
        public static final int DeskClockBarStyle=0x7f10000a;
        public static final int DeskClockDropDownListView=0x7f10000b;
        public static final int DeskClockParentTheme=0x7f100001;
        public static final int DeskClockTabBarStyle=0x7f100009;
        public static final int DeskClockTabStyle=0x7f100008;
        public static final int FastScrollStyle=0x7f10000f;
        public static final int PrimaryLabelTextAppearance=0x7f100033;
        public static final int RoundTouchButton=0x7f100017;
        public static final int ScreensaverActivityTheme=0x7f100015;
        public static final int ScreensaverSettingsActivityTheme=0x7f100016;
        public static final int SecondaryLabelTextAppearance=0x7f100034;
        public static final int SettingsTheme=0x7f10000d;
        public static final int SettingsTheme_ActionBar=0x7f100011;
        public static final int SettingsTheme_TextAppearance_ActionBar_Title=0x7f100012;
        public static final int TextAppearance=0x7f100035;
        /**  Status Bar Styles 
         */
        public static final int TextAppearance_StatusBar=0x7f100036;
        /**  Notification content styles 
         */
        public static final int TextAppearance_StatusBar_EventContent=0x7f100037;
        public static final int TextAppearance_StatusBar_EventContent_Title=0x7f100038;
        public static final int TimeLabelTextAppearance=0x7f100005;
        public static final int TimePickerStyle=0x7f100004;
        public static final int TimePickerTheme=0x7f100003;
        public static final int TimerAlertFullScreenTheme=0x7f100014;
        public static final int ToastBarStyle=0x7f100039;
        public static final int alarm_label=0x7f100029;
        public static final int alarm_label_bold=0x7f10002b;
        public static final int alarm_label_not_caps=0x7f10002a;
        public static final int alarm_list_left_column=0x7f100018;
        public static final int alarm_lockscreen_thin=0x7f100027;
        public static final int big_thin=0x7f100026;
        public static final int body=0x7f10002c;
        public static final int body_bold=0x7f10002e;
        public static final int body_not_caps=0x7f10002d;
        public static final int bold_button=0x7f100031;
        public static final int button=0x7f10002f;
        public static final int clock=0x7f100000;
        public static final int dialpad=0x7f100032;
        public static final int header=0x7f100024;
        public static final int header_not_caps=0x7f100025;
        public static final int label=0x7f100021;
        public static final int labelEditTextStyle=0x7f100030;
        public static final int label_not_caps=0x7f100022;
        public static final int medium_light=0x7f10001f;
        public static final int no_alarms=0x7f10001b;
        public static final int small_bold=0x7f100019;
        public static final int small_light=0x7f10001c;
        public static final int small_thin=0x7f10001a;
        public static final int timer_setup_digit=0x7f10001d;
        public static final int timer_setup_label=0x7f10001e;
        public static final int widget_big_thin=0x7f100028;
        public static final int widget_label=0x7f100023;
        public static final int widget_medium_thin=0x7f100020;
    }
    public static final class xml {
        public static final int analog_appwidget=0x7f060000;
        public static final int digital_appwidget=0x7f060001;
        public static final int dream_info=0x7f060002;
        public static final int dream_settings=0x7f060003;
        public static final int settings=0x7f060004;
    }
    public static final class styleable {
        /** Attributes that can be used with a AnalogClock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnalogClock_jewelColor com.android.deskclock:jewelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_jewelOffset com.android.deskclock:jewelOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_jewelRadius com.android.deskclock:jewelRadius}</code></td><td></td></tr>
           </table>
           @see #AnalogClock_jewelColor
           @see #AnalogClock_jewelOffset
           @see #AnalogClock_jewelRadius
         */
        public static final int[] AnalogClock = {
            0x7f010000, 0x7f010001, 0x7f010002
        };
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelColor}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelColor
        */
        public static final int AnalogClock_jewelColor = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelOffset}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelOffset
        */
        public static final int AnalogClock_jewelOffset = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#jewelRadius}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.deskclock:jewelRadius
        */
        public static final int AnalogClock_jewelRadius = 0;
        /** Attributes that can be used with a TextTime.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextTime_format12Hour com.android.deskclock:format12Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode.</td></tr>
           <tr><td><code>{@link #TextTime_format24Hour com.android.deskclock:format24Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode.</td></tr>
           </table>
           @see #TextTime_format12Hour
           @see #TextTime_format24Hour
         */
        public static final int[] TextTime = {
            0x7f010003, 0x7f010004
        };
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm a". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:format12Hour
        */
        public static final int TextTime_format12Hour = 0;
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "H:mm". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.deskclock:format24Hour
        */
        public static final int TextTime_format24Hour = 1;
    };
}
