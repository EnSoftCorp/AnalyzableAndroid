/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.keyguard;

public final class R {
    public static final class anim {
        public static final int heads_up_enter=0x7f050000;
        public static final int heads_up_exit=0x7f050001;
        public static final int keyguard_action_assist_enter=0x7f050002;
        public static final int keyguard_action_assist_exit=0x7f050003;
        public static final int lock_screen_enter=0x7f050004;
        public static final int lock_screen_exit=0x7f050005;
        public static final int notification_buttons_in=0x7f050006;
        public static final int notification_buttons_out=0x7f050007;
        public static final int notification_icons_in=0x7f050008;
        public static final int notification_icons_out=0x7f050009;
        public static final int progress_indeterminate_horizontal_rect1_scale=0x7f05000a;
        public static final int progress_indeterminate_horizontal_rect1_translate=0x7f05000b;
        public static final int progress_indeterminate_horizontal_rect2_scale=0x7f05000c;
        public static final int progress_indeterminate_horizontal_rect2_translate=0x7f05000d;
        public static final int recent_appear=0x7f05000e;
        public static final int recents_from_app_enter=0x7f05000f;
        public static final int recents_from_app_exit=0x7f050010;
        public static final int recents_from_launcher_enter=0x7f050011;
        public static final int recents_from_launcher_exit=0x7f050012;
        public static final int recents_from_search_launcher_enter=0x7f050013;
        public static final int recents_from_search_launcher_exit=0x7f050014;
        public static final int recents_from_unknown_enter=0x7f050015;
        public static final int recents_from_unknown_exit=0x7f050016;
        public static final int recents_launch_from_launcher_enter=0x7f050017;
        public static final int recents_launch_from_launcher_exit=0x7f050018;
        public static final int recents_launch_next_affiliated_task_bounce=0x7f050019;
        public static final int recents_launch_next_affiliated_task_source=0x7f05001a;
        public static final int recents_launch_next_affiliated_task_target=0x7f05001b;
        public static final int recents_launch_prev_affiliated_task_bounce=0x7f05001c;
        public static final int recents_launch_prev_affiliated_task_source=0x7f05001d;
        public static final int recents_launch_prev_affiliated_task_target=0x7f05001e;
        public static final int recents_return_to_launcher_enter=0x7f05001f;
        public static final int recents_return_to_launcher_exit=0x7f050020;
        public static final int recents_to_launcher_enter=0x7f050021;
        public static final int recents_to_launcher_exit=0x7f050022;
        public static final int recents_to_search_launcher_enter=0x7f050023;
        public static final int recents_to_search_launcher_exit=0x7f050024;
        public static final int search_launch_enter=0x7f050025;
        public static final int search_launch_exit=0x7f050026;
        public static final int system_in=0x7f050027;
        public static final int system_out=0x7f050028;
        public static final int wallpaper_recents_launch_from_launcher_enter=0x7f050029;
        public static final int wallpaper_recents_launch_from_launcher_exit=0x7f05002a;
        public static final int zen_toast_enter=0x7f05002b;
        public static final int zen_toast_exit=0x7f05002c;
    }
    public static final class array {
        public static final int batterymeter_bolt_points=0x7f060002;
        /**  BatteryMeterView parameters 
         */
        public static final int batterymeter_color_levels=0x7f060000;
        public static final int batterymeter_color_values=0x7f060001;
        /**  list of 3- or 4-letter mnemonics for a 10-key numeric keypad 
 9 
         */
        public static final int lockscreen_num_pad_klondike=0x7f060003;
    }
    public static final class attr {
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int activatedFontFamily=0x7f010011;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int activeFrameColor=0x7f01000f;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allCaps=0x7f010025;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>small</code></td><td>1</td><td></td></tr>
<tr><td><code>gone</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int amPmStyle=0x7f01000b;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int datePattern=0x7f010012;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int decayTime=0x7f010009;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int digit=0x7f010022;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dotSize=0x7f01001a;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int frameColor=0x7f01000a;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int framePadding=0x7f01000e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int frameWidth=0x7f01000d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int glowDot=0x7f01001c;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int holdTime=0x7f010008;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalSpacing=0x7f010015;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetLeft=0x7f010003;
        /**  key code to send when pressed; if absent or 0, no key is sent 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyCode=0x7f010000;
        /**  does this button generate longpress / repeat events? 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeat=0x7f010001;
        /**  Percentage of the screen this child should consume or center within.
             If 0/default, the view will be measured by standard rules
             as if this were a FrameLayout. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerWithinArea=0x7f010020;
        /**  Some child types have special behavior. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
         */
        public static final int layout_childType=0x7f01001e;
        /**  Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f010016;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxHeight=0x7f01001f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxWidth=0x7f010021;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int leftToRight=0x7f01001d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxSize=0x7f010007;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minSize=0x7f010006;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numColumns=0x7f010013;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numDots=0x7f01001b;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int orientation=0x7f01000c;
        /**  The space between adjacent pages of the PagedView. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pageSpacing=0x7f010017;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int recentItemLayout=0x7f010005;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int regularFontFamily=0x7f010010;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f010004;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaledTextSize=0x7f010024;
        /**  The padding for the scroll indicator area 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollIndicatorPaddingLeft=0x7f010018;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollIndicatorPaddingRight=0x7f010019;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int text=0x7f010002;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textView=0x7f010023;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalSpacing=0x7f010014;
    }
    public static final class bool {
        public static final int action_bar_embed_tabs=0x7f08001f;
        public static final int config_dead_zone_flash=0x7f08000b;
        /**  Allow the menu hard key to be disabled in LockScreen on some devices [DO NOT TRANSLATE] 
         */
        public static final int config_disableMenuKeyInLockScreen=0x7f080024;
        /**  Whether to enable KeyguardService or not 
         */
        public static final int config_enableKeyguardService=0x7f080010;
        /**  Alias used to reference framework configuration for screen rotation.  
         */
        public static final int config_enableLockScreenRotation=0x7f080018;
        /**  Alias used to reference framework configuration for translucent decor.  
         */
        public static final int config_enableLockScreenTranslucentDecor=0x7f080019;
        /**  Control whether status bar should distinguish HSPA data icon form UMTS
    data icon on devices 
         */
        public static final int config_hspa_data_distinguishable=0x7f080004;
        /**  Show camera affordance on Keyguard 
         */
        public static final int config_keyguardShowCameraAffordance=0x7f080009;
        /**  Set to true to enable the user switcher on the keyguard. 
 Set to true to enable the user switcher on the keyguard. 
         */
        public static final int config_keyguardUserSwitcher=0x7f080012;
        /**  Whether to use cheap, less good looking shadows for recents 
         */
        public static final int config_recents_fake_shadows=0x7f080003;
        /**  Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
         */
        public static final int config_recents_interface_for_tablets=0x7f080000;
        /**  Whether recents thumbnails should stretch in both x and y to fill their
     ImageView 
 Whether recents thumbnails should stretch in both x and y to fill their
     ImageView 
         */
        public static final int config_recents_thumbnail_image_fits_to_xy=0x7f080001;
        /**  Whether recents should use hardware layers for its taskviews. This flag can be enabled
    for devices where the java drawing of round rects may be slow 
         */
        public static final int config_recents_use_hardware_layers=0x7f080002;
        /**  Should "4G" be shown instead of "LTE" when the network is NETWORK_TYPE_LTE? 
         */
        public static final int config_show4GForLTE=0x7f08000d;
        /**  When true, show 1/2G networks as 3G. 
         */
        public static final int config_showMin3G=0x7f080007;
        /**  Show phone (voice) signal strength instead of data in mobile RSSI. 
         */
        public static final int config_showPhoneRSSIForData=0x7f080006;
        /**  Show rotation lock toggle in System UI
         */
        public static final int config_showRotationLock=0x7f080008;
        /**  Whether or not we show the number in the bar. 
         */
        public static final int config_statusBarShowNumber=0x7f080005;
        /**  Whether we should use SRC drawing mode when drawing the scrim behind. If this flag is set,
         we change the canvas opacity so libhwui doesn't call glClear on our surface, and then we
         draw the scrim with SRC to overwrite the whole buffer, which saves us a layer of overdraw.
         However, SRC performs poorly on some devices, where it is more efficient to
         glClear + SRC_OVER, in which case this flag should be disabled. 
         */
        public static final int config_status_bar_scrim_behind_use_src=0x7f08000a;
        /**  Doze: does this device support STATE_DOZE and STATE_DOZE_SUSPEND?  
         */
        public static final int doze_display_state_supported=0x7f080013;
        /**  Doze: should notifications be used as a pulse signal? 
         */
        public static final int doze_pulse_on_notifications=0x7f080016;
        /**  Doze: should the pickup sensor be used as a pulse signal? 
         */
        public static final int doze_pulse_on_pick_up=0x7f080015;
        /**  Doze: should the significant motion sensor be used as a pulse signal? 
         */
        public static final int doze_pulse_on_significant_motion=0x7f080014;
        /**  Set to true to enable the classic notification ticker that scrolls
         Notification.tickerText across the status bar for what seems like an
         eternity. 
         */
        public static final int enable_ticker=0x7f080011;
        public static final int kg_center_small_widgets_vertically=0x7f08001b;
        /**  No camera for you, tablet user 
         */
        public static final int kg_enable_camera_default_widget=0x7f08001a;
        public static final int kg_share_status_area=0x7f080020;
        public static final int kg_show_ime_at_screen_on=0x7f08001d;
        public static final int kg_sim_puk_account_full_screen=0x7f080021;
        public static final int kg_top_align_page_shrink_on_bouncer_visible=0x7f08001c;
        /**  Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
 Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
 Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
         */
        public static final int kg_use_all_caps=0x7f08001e;
        /**  Whether or not the RSSI tile is capitalized or not. 
 Whether or not the RSSI tile is capitalized or not. 
 Whether or not the RSSI tile is capitalized or not. 
 Whether or not the RSSI tile is capitalized or not. 
         */
        public static final int quick_settings_rssi_tile_capitalization=0x7f08000c;
        /**  Transposes the nav bar in landscape (only used for purposes of layout). 
 Transposes the nav bar in landscape (only used for purposes of layout). 
 Transposes the nav bar in landscape (only used for purposes of layout). 
         */
        public static final int recents_has_transposed_nav_bar=0x7f08000f;
        /**  Transposes the search bar layout in landscape. 
 Transposes the search bar layout in landscape. 
 Transposes the search bar layout in landscape. 
         */
        public static final int recents_has_transposed_search_bar=0x7f08000e;
        /**  Transposes the search bar layout in landscape 
         */
        public static final int recents_transpose_search_layout_with_orientation=0x7f080017;
        public static final int show_ongoing_ime_switcher=0x7f080023;
        public static final int target_honeycomb_needs_options_menu=0x7f080022;
    }
    public static final class color {
        public static final int batterymeter_bolt_color=0x7f070008;
        /**  40% white 
         */
        public static final int batterymeter_charge_color=0x7f070007;
        public static final int batterymeter_frame_color=0x7f070006;
        public static final int clock_gray=0x7f070041;
        /**  Clock 
         */
        public static final int clock_white=0x7f070040;
        /**  The color of the circle around the primary user in the user switcher 
         */
        public static final int current_user_border_color=0x7f07002c;
        /**  60% white 
         */
        public static final int data_usage_graph_track=0x7f070016;
        /**  20% white 
         */
        public static final int data_usage_graph_warning=0x7f070017;
        /**  60% deep teal 500 
         */
        public static final int data_usage_secondary=0x7f070015;
        public static final int doze_small_icon_background_color=0x7f070035;
        /**  FaceLock 
         */
        public static final int facelock_spotlight_mask=0x7f07003f;
        /**  Shadow color for the furthest pixels around the fake shadow for recents. 
         */
        public static final int fake_shadow_end_color=0x7f070038;
        /**  Shadow color for the first pixels around the fake shadow for recents. 
         */
        public static final int fake_shadow_start_color=0x7f070037;
        public static final int keyguard_affordance=0x7f070023;
        /**  Keyguard colors 
         */
        public static final int keyguard_avatar_frame_color=0x7f07003a;
        public static final int keyguard_avatar_frame_pressed_color=0x7f07003d;
        public static final int keyguard_avatar_frame_shadow_color=0x7f07003b;
        public static final int keyguard_avatar_nick_color=0x7f07003c;
        /**  not so muted after all 
 Tint color for the content on the notification overflow card. 
         */
        public static final int keyguard_overflow_content_color=0x7f07001a;
        public static final int keyguard_user_switcher_background_gradient_color=0x7f070034;
        public static final int kg_widget_pager_gradient=0x7f07003e;
        /**  The color of the navigation bar icons. Need to be in sync with ic_sysbar_* 
         */
        public static final int navigation_bar_icon_color=0x7f070036;
        /**  60% 
 The "inside" of a notification, reached via longpress 
         */
        public static final int notification_guts_bg_color=0x7f07002e;
        public static final int notification_guts_btn_color=0x7f070031;
        public static final int notification_guts_text_color=0x7f070030;
        public static final int notification_guts_title_color=0x7f07002f;
        /**  The color of the legacy notification background 
         */
        public static final int notification_legacy_background_color=0x7f070024;
        public static final int notification_list_shadow_top=0x7f070005;
        /**  The color of the material notification background 
         */
        public static final int notification_material_background_color=0x7f070025;
        /**  The color of the material notification background when dimmed 
         */
        public static final int notification_material_background_dimmed_color=0x7f070026;
        /**  The color of the material notification background when low priority 
         */
        public static final int notification_material_background_low_priority_color=0x7f070027;
        /**  The color of the material notification background for media notifications when no custom
         color is specified 
         */
        public static final int notification_material_background_media_default_color=0x7f070028;
        public static final int notification_panel_solid_background=0x7f070003;
        /**  The color of the ripples on the low priority notifications 
         */
        public static final int notification_ripple_color_low_priority=0x7f07002a;
        /**  The color of the ripples on the tinted notifications 
         */
        public static final int notification_ripple_tinted_color=0x7f07002b;
        /**  The color of the ripples on the untinted notifications 
         */
        public static final int notification_ripple_untinted_color=0x7f070029;
        public static final int qs_batterymeter_frame_color=0x7f070009;
        /**  60% white 
         */
        public static final int qs_detail_empty=0x7f070012;
        public static final int qs_detail_progress_track=0x7f070014;
        /**  14% blue grey 200
         */
        public static final int qs_detail_transition=0x7f070013;
        /**  70% white 
         */
        public static final int qs_subhead=0x7f070011;
        /**  deep orange 600 
         */
        public static final int qs_text=0x7f07000e;
        public static final int qs_tile_divider=0x7f07000f;
        /**  16% white 
         */
        public static final int qs_tile_text=0x7f070010;
        public static final int qs_user_detail_icon_muted=0x7f070019;
        public static final int qs_user_detail_name=0x7f070042;
        /**  The recents task bar dark dismiss icon color to be drawn on top of light backgrounds. 
         */
        public static final int recents_task_bar_dark_dismiss_color=0x7f07001f;
        /**  The recents task bar dark text color to be drawn on top of light backgrounds. 
         */
        public static final int recents_task_bar_dark_text_color=0x7f07001d;
        /**  The default recents task bar background color. 
         */
        public static final int recents_task_bar_default_background_color=0x7f07001b;
        /**  The recents task bar highlight color. 
         */
        public static final int recents_task_bar_highlight_color=0x7f070020;
        /**  The recents task bar light dismiss icon color to be drawn on top of dark backgrounds. 
         */
        public static final int recents_task_bar_light_dismiss_color=0x7f07001e;
        /**  The recents task bar light text color to be drawn on top of dark backgrounds. 
         */
        public static final int recents_task_bar_light_text_color=0x7f07001c;
        /**  The lock to task button background color. 
         */
        public static final int recents_task_view_lock_to_app_button_background_color=0x7f070021;
        /**  The lock to task button foreground color. 
         */
        public static final int recents_task_view_lock_to_app_button_color=0x7f070022;
        public static final int search_panel_circle_color=0x7f070032;
        public static final int search_panel_ripple_color=0x7f070033;
        public static final int segmented_button_text_inactive=0x7f07002d;
        public static final int segmented_button_text_selector=0x7f070043;
        public static final int status_bar_clock_color=0x7f070018;
        public static final int status_bar_recents_app_label_color=0x7f070004;
        public static final int system_accent_color=0x7f07000c;
        public static final int system_bar_background_opaque=0x7f070000;
        public static final int system_bar_background_semi_transparent=0x7f070001;
        /**  40% black 
         */
        public static final int system_bar_background_transparent=0x7f070002;
        public static final int system_primary_color=0x7f07000a;
        /**  blue grey 900 
         */
        public static final int system_secondary_color=0x7f07000b;
        /**  deep teal 200 
         */
        public static final int system_warning_color=0x7f07000d;
        /**  Alias used to reference framework color for transparency. 
         */
        public static final int transparent=0x7f070039;
    }
    public static final class dimen {
        public static final int G=0x7f0c00d1;
        /**  Touch slop for the global toggle accessibility gesture 
         */
        public static final int accessibility_touch_slop=0x7f0c00f4;
        /**  The y translation to apply at the start in appear animations. 
         */
        public static final int appear_y_translation_start=0x7f0c0107;
        /**  Battery level text padding end when in expanded QS and on Keyguard 
         */
        public static final int battery_level_padding_end=0x7f0c0099;
        /**  The text size for battery level 
         */
        public static final int battery_level_text_size=0x7f0c00ac;
        public static final int battery_margin_bottom=0x7f0c00b2;
        public static final int big_font_size=0x7f0c0106;
        public static final int blinds_pop_threshold=0x7f0c0034;
        public static final int boost_dv=0x7f0c00c1;
        /**  Space reserved for the cards behind the top card in the bottom stack 
         */
        public static final int bottom_stack_peek_amount=0x7f0c0067;
        /**  The height of the area before the bottom stack in which the notifications slow down 
         */
        public static final int bottom_stack_slow_down_length=0x7f0c0069;
        /**  Default clock parameters 
         */
        public static final int bottom_text_spacing_digital=0x7f0c0102;
        public static final int building_height_min=0x7f0c00ca;
        public static final int building_width_max=0x7f0c00c9;
        public static final int building_width_min=0x7f0c00c8;
        /**  fill_horizontal|top 
 Height of the carrier/wifi name label 
         */
        public static final int carrier_label_height=0x7f0c0031;
        /**  The top padding of the clear all button 
         */
        public static final int clear_all_padding_top=0x7f0c009a;
        /**  The padding bottom of the clock group when QS is collapsed. 
         */
        public static final int clock_collapsed_bottom_margin=0x7f0c008e;
        /**  The padding bottom of the clock group when QS is collapsed for large text 
         */
        public static final int clock_collapsed_bottom_margin_large_text=0x7f0c008f;
        /**  The padding bottom of the clock group when QS is expanded. 
         */
        public static final int clock_expanded_bottom_margin=0x7f0c008d;
        /**  Height of the draggable handle at the bottom of the phone notification panel 
         */
        public static final int close_handle_height=0x7f0c0029;
        /**  Amount of close_handle that will NOT overlap the notification list 
         */
        public static final int close_handle_underlap=0x7f0c002a;
        public static final int cloud_size_max=0x7f0c00cc;
        public static final int cloud_size_min=0x7f0c00cb;
        public static final int data_usage_graph_marker_width=0x7f0c008c;
        /**  The vertical margin between the date and the owner info. 
         */
        public static final int date_owner_info_margin=0x7f0c010a;
        /**  used by DessertCase 
         */
        public static final int dessert_case_cell_size=0x7f0c0053;
        public static final int dialog_min_width_major=0x7f0c010d;
        public static final int dialog_min_width_minor=0x7f0c010e;
        /**  The translation for disappearing security views after having solved them. 
         */
        public static final int disappear_y_translation=0x7f0c010b;
        /**  EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
         Should be 0 on devices with plenty of room (e.g. tablets) 
 EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
         Should be 0 on devices with plenty of room (e.g. tablets) 
         */
        public static final int eca_overlap=0x7f0c0101;
        /**  The width of the region on the left/right edge of the screen for performing the camera/
         phone hints. 
 The width of the region on the left/right edge of the screen for performing the camera/
     phone hints. 
         */
        public static final int edge_tap_area_width=0x7f0c0085;
        /**  Height of FaceUnlock view in keyguard 
 Height of FaceUnlock view in keyguard 
         */
        public static final int face_unlock_height=0x7f0c00e1;
        /**  Inset shadow for FakeShadowDrawable. It is used to avoid gaps between the card
         and the shadow. 
         */
        public static final int fake_shadow_inset=0x7f0c00b6;
        public static final int fake_shadow_size=0x7f0c00b7;
        /**  The padding on the global screenshot background image 
         */
        public static final int global_screenshot_bg_padding=0x7f0c0022;
        /**  The bottom margin for the GlowPadView container 
 The bottom margin for the GlowPadView container 
         */
        public static final int glowpadcontainer_bottom_margin=0x7f0c00d9;
        /**  Default glow radius for GlowPadView 
 Default glow radius for GlowPadView 
         */
        public static final int glowpadview_glow_radius=0x7f0c0054;
        /**  Default distance from each snap target that GlowPadView considers a "hit" 
 Default distance from each snap target that GlowPadView considers a "hit" 
         */
        public static final int glowpadview_inner_radius=0x7f0c0055;
        /**  Default distance beyond which GlowPadView snaps to the matching target 
         */
        public static final int glowpadview_snap_margin=0x7f0c00db;
        /**  Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
 target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
         */
        public static final int glowpadview_target_placement_radius=0x7f0c00da;
        /**  Additional translation (downwards) for appearing notifications when going to the full shade
         from Keyguard. 
         */
        public static final int go_to_full_shade_appearing_translation=0x7f0c00a0;
        /**  Margin on the left side of the battery % in the header. 
         */
        public static final int header_battery_margin_expanded=0x7f0c009d;
        /**  Margin on the left side of the battery % when on Keyguard. 
         */
        public static final int header_battery_margin_keyguard=0x7f0c009e;
        /**  Distance between notifications and header when they are considered to be colliding. 
         */
        public static final int header_notifications_collide_distance=0x7f0c0081;
        public static final int heads_up_window_height=0x7f0c0079;
        /**  The chevron padding to the circle when hinting 
         */
        public static final int hint_chevron_circle_padding=0x7f0c007d;
        /**  The grow amount for the camera and phone circles when hinting 
         */
        public static final int hint_grow_amount_sideways=0x7f0c007c;
        /**  Move distance for the unlock hint animation on the lockscreen 
         */
        public static final int hint_move_distance=0x7f0c0084;
        public static final int hud_z=0x7f0c00d7;
        /**  The maximum width of the navigation bar ripples. 
         */
        public static final int key_button_ripple_max_width=0x7f0c00b5;
        /**  The width/height of the phone/camera/unlock icon view on keyguard. 
 The width/height of the phone/camera/unlock icon on keyguard. 
         */
        public static final int keyguard_affordance_height=0x7f0c00a7;
        /**  The width/height of the phone/camera/unlock icon drawable on keyguard. 
         */
        public static final int keyguard_affordance_icon_height=0x7f0c00a9;
        public static final int keyguard_affordance_icon_width=0x7f0c00aa;
        /**  The minimum background radius when swiping to a side for the camera / phone affordances. 
         */
        public static final int keyguard_affordance_min_background_radius=0x7f0c007b;
        public static final int keyguard_affordance_width=0x7f0c00a8;
        /**  Shadow radius under the frame for the circular avatars. 
         */
        public static final int keyguard_avatar_frame_shadow_radius=0x7f0c00fb;
        /**  Stroke width of the frame for the circular avatars. 
 Stroke width of the frame for the circular avatars. 
         */
        public static final int keyguard_avatar_frame_stroke_width=0x7f0c00fa;
        /**  Size of the text under the avator on the multiuser lockscreen. 
 Size of the text under the avator on the multiuser lockscreen. 
         */
        public static final int keyguard_avatar_name_size=0x7f0c00fd;
        /**  Size of the avator on hte multiuser lockscreen. 
 Size of the avator on the multiuser lockscreen. 
         */
        public static final int keyguard_avatar_size=0x7f0c00fc;
        /**  Margin on the left side of the carrier text on Keyguard 
 Margin on the left side of the carrier text on Keyguard 
         */
        public static final int keyguard_carrier_text_margin=0x7f0c009c;
        public static final int keyguard_clock_notifications_margin_max=0x7f0c0078;
        /**  The margin between the clock and the notifications on Keyguard. See
         keyguard_clock_height_fraction_* for the difference between min and max.
 The margin between the clock and the notifications on Keyguard. See
         keyguard_clock_height_fraction_* for the difference between min and max.
         */
        public static final int keyguard_clock_notifications_margin_min=0x7f0c0077;
        /**  Minimum distance the user has to drag down to go to the full shade. 
         */
        public static final int keyguard_drag_down_min_distance=0x7f0c0076;
        public static final int keyguard_indication_margin_bottom=0x7f0c00ab;
        /**  Size of lockscreen outerring on unsecure unlock LockScreen 
 Size of lockscreen outerring on unsecure unlock LockScreen 
         */
        public static final int keyguard_lockscreen_outerring_diameter=0x7f0c00d8;
        /**  Padding on left margin of PIN text entry field to center it when del button is showing 
         */
        public static final int keyguard_lockscreen_pin_margin_left=0x7f0c00e0;
        /**  Size of top margin on Clock font to edge on unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_clockfont_bottom_margin=0x7f0c00df;
        /**  Size of top margin on Clock font to edge on unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_clockfont_top_margin=0x7f0c00de;
        /**  Size of right margin on Unsecure unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_font_right_margin=0x7f0c00dd;
        /**  Size of status line font on Unsecure unlock LockScreen. 
         */
        public static final int keyguard_lockscreen_status_line_font_size=0x7f0c00dc;
        /**  The minimum amount the user needs to swipe to go to the camera / phone. 
         */
        public static final int keyguard_min_swipe_amount=0x7f0c007a;
        /**  Margin around the various security views 
 Margin around the various security views 
 Margin around the various security views 
         */
        public static final int keyguard_muliuser_selector_margin=0x7f0c00f9;
        /**  Size of status line font in LockScreen. 
         */
        public static final int keyguard_pattern_unlock_status_line_font_size=0x7f0c0111;
        /**  Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x
         keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer
        (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_height=0x7f0c00f6;
        /**  Max Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_max_height=0x7f0c00f7;
        /**  Margin around the various security views 
 Margin around the various security views 
         */
        public static final int keyguard_security_view_margin=0x7f0c00f8;
        /**  Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_width=0x7f0c00f5;
        /**  The thickness of the colored border around the current user. 
         */
        public static final int keyguard_user_switcher_border_thickness=0x7f0c008b;
        /**  Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
         */
        public static final int kg_clock_top_margin=0x7f0c00e9;
        /**  Size of the region along the edge of the screen that will accept
         swipes to scroll the widget area. 
         */
        public static final int kg_edge_swipe_region_size=0x7f0c00fe;
        /**  Shift emergency button from the left edge by this amount.  Used by landscape layout on
         phones 
         */
        public static final int kg_emergency_button_shift=0x7f0c0110;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_key_horizontal_gap=0x7f0c00ea;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_key_vertical_gap=0x7f0c00eb;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_pin_key_height=0x7f0c00ec;
        /**  The height of the runway lights strip 
         */
        public static final int kg_runway_lights_height=0x7f0c00ee;
        /**  Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding 
 Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding 
 Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding 
         */
        public static final int kg_runway_lights_top_margin=0x7f0c00f3;
        /**  The height of the runway lights strip 
         */
        public static final int kg_runway_lights_vertical_padding=0x7f0c00ef;
        /**  Space reserved at the bottom of secure views (pin/pattern/password/SIM pin/SIM puk) 
 Space reserved at the bottom of secure views (pin/pattern/password/SIM pin/SIM puk) 
         */
        public static final int kg_secure_padding_height=0x7f0c00ed;
        /**  Keyguard dimensions 
 TEMP 
         */
        public static final int kg_security_panel_height=0x7f0c00e2;
        /**  Height of security view in keyguard. 
         */
        public static final int kg_security_view_height=0x7f0c00e3;
        /**  The height of widgets which do not support vertical resizing. This is only
    used on tablets; on phones, this size is determined by the space left by the
    security mode. 
         */
        public static final int kg_small_widget_height=0x7f0c0100;
        /**  If the height if keyguard drops below this threshold (most likely
    due to the appearance of the IME), then drop the multiuser selector. 
 If the height if keyguard drops below this threshold (most likely
    due to the appearance of the IME), then drop the multiuser selector.
    Landscape's layout allows this to be smaller than for portrait. 
         */
        public static final int kg_squashed_layout_threshold=0x7f0c00ff;
        /**  Size of the clock font in keyguard's status view 
 Keyguard dimensions 
 Size of the clock font in keyguard's status view 
 Keyguard dimensions 
 Size of the clock font in keyguard's status view 
         */
        public static final int kg_status_clock_font_size=0x7f0c00e6;
        /**  Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
         */
        public static final int kg_status_line_font_right_margin=0x7f0c00e8;
        /**  Size of the generic status lines keyguard's status view  
 Size of the generic status lines keyguard's status view  
         */
        public static final int kg_status_line_font_size=0x7f0c00e7;
        /**  Bottom padding for the widget pager 
 Bottom padding for the widget pager 
 Bottom padding for the widget pager 
 Bottom padding for the widget pager 
         */
        public static final int kg_widget_pager_bottom_padding=0x7f0c00f2;
        /**  Horizontal padding for the widget pager 
 Horizontal padding for the widget pager 
 Horizontal padding for the widget pager 
 Horizontal padding for the widget pager 
         */
        public static final int kg_widget_pager_horizontal_padding=0x7f0c00f0;
        /**  Top padding for the widget pager 
 Top padding for the widget pager 
 Top padding for the widget pager 
 Top padding for the widget pager 
         */
        public static final int kg_widget_pager_top_padding=0x7f0c00f1;
        /**  Height of widget view in keyguard. 
         */
        public static final int kg_widget_view_height=0x7f0c00e5;
        /**  Width of widget view in keyguard. 
         */
        public static final int kg_widget_view_width=0x7f0c00e4;
        public static final int label_font_size=0x7f0c0103;
        /**  Width for the notification panel and related windows 
         */
        public static final int match_parent=0x7f0c002e;
        /**  Largest size an avatar might need to be drawn in the user picker, status bar, or
         quick settings header 
         */
        public static final int max_avatar_size=0x7f0c009b;
        public static final int max_v=0x7f0c00d2;
        /**  bottom_stack_peek_amount + notification_min_height
         + notification_collapse_second_card_padding 
         */
        public static final int min_stack_height=0x7f0c0068;
        /**  The minimum amount of top overscroll to go to the quick settings. 
         */
        public static final int min_top_overscroll_to_qs=0x7f0c006f;
        public static final int moon_size=0x7f0c00ce;
        /**  The width of user avatar when collapsed 
         */
        public static final int multi_user_avatar_collapsed_size=0x7f0c0093;
        /**  The width of user avatar when on Keyguard 
 The width of user avatar when on Keyguard 
         */
        public static final int multi_user_avatar_keyguard_size=0x7f0c0094;
        /**  end margin for multi user switch in collapsed quick settings 
         */
        public static final int multi_user_switch_collapsed_margin=0x7f0c0088;
        /**  end margin for multi user switch in expanded quick settings 
         */
        public static final int multi_user_switch_expanded_margin=0x7f0c0087;
        /**  end margin for multi user switch in collapsed quick settings 
 end margin for multi user switch in collapsed quick settings 
         */
        public static final int multi_user_switch_keyguard_margin=0x7f0c0089;
        /**  The width of the multi user switch on keyguard and collapsed QS header. 
         */
        public static final int multi_user_switch_width_collapsed=0x7f0c0090;
        /**  The width of the multi user switch in expanded QS header. 
         */
        public static final int multi_user_switch_width_expanded=0x7f0c0091;
        /**  The width of user avatar when on Keyguard 
 The width of user avatar when on Keyguard 
         */
        public static final int multi_user_switch_width_keyguard=0x7f0c0092;
        /**  Diameter of outer shape drawable shown in navbar search
 Diameter of outer shape drawable shown in navbar search
         */
        public static final int navbar_search_outerring_diameter=0x7f0c0026;
        /**  Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value 
 Diameter of outer shape drawable shown in navbar search. Should be 1/2 of above value. 
         */
        public static final int navbar_search_outerring_radius=0x7f0c0027;
        /**  Height of search panel including navigation bar height 
 Height of search panel including navigation bar height 
         */
        public static final int navbar_search_panel_height=0x7f0c0028;
        /**  Default distance beyond which snaps to the matching target 
         */
        public static final int navbar_search_snap_margin=0x7f0c0025;
        /**  thickness (height) of the dead zone at the top of the navigation bar,
         reducing false presses on navbar buttons; approx 2mm 
         */
        public static final int navigation_bar_deadzone_size=0x7f0c0016;
        /**  size of the dead zone when touches have recently occurred elsewhere on screen 
         */
        public static final int navigation_bar_deadzone_size_max=0x7f0c0017;
        public static final int navigation_bar_height=0x7f0c00be;
        /**  Minimum swipe distance to catch the swipe gestures to invoke assist or switch tasks. 
         */
        public static final int navigation_bar_min_swipe_distance=0x7f0c0015;
        /**  thickness (height) of the navigation bar on phones that require it 
 thickness (width) of the navigation bar on phones that require it 
         */
        public static final int navigation_bar_size=0x7f0c0014;
        /**  The width of the view containing the menu/ime navigation bar icons 
 The width of the view containing the menu/ime navigation bar icons 
         */
        public static final int navigation_extra_key_width=0x7f0c0024;
        /**  The width of the view containing non-menu status bar icons 
         */
        public static final int navigation_key_width=0x7f0c0023;
        /**  The padding to the second card when the notifications collapse. 
         */
        public static final int notification_collapse_second_card_padding=0x7f0c0070;
        /**  half the distance between notifications in the panel 
         */
        public static final int notification_divider_height=0x7f0c0021;
        /**  radius of the corners of the material rounded rect background 
         */
        public static final int notification_material_rounded_rect_radius=0x7f0c0086;
        /**  Height of a large notification in the status bar 
         */
        public static final int notification_max_height=0x7f0c001b;
        /**  Height of a medium notification in the status bar 
         */
        public static final int notification_mid_height=0x7f0c001c;
        /**  Height of a small notification in the status bar 
         */
        public static final int notification_min_height=0x7f0c001a;
        /**  The padding between the individual notification cards. 
         */
        public static final int notification_padding=0x7f0c006e;
        /**  The padding between the individual notification cards when dimmed. 
         */
        public static final int notification_padding_dimmed=0x7f0c006d;
        /**  The minimum height of the notification panel window 
         */
        public static final int notification_panel_min_height=0x7f0c00ba;
        /**  Minimum fraction of the screen that should be taken up by the notification panel.
         Not used at this screen size. 
 Minimum fraction of the screen that should be taken up by the notification panel. 
         */
        public static final int notification_panel_min_height_frac=0x7f0c0033;
        /**  includes notification_side_padding on each side 
 Standard notification width + gravity 
 Standard notification width + gravity 
         */
        public static final int notification_panel_width=0x7f0c0030;
        /**  Distance after which the scrim starts fading in when dragging down the quick settings 
         */
        public static final int notification_scrim_wait_distance=0x7f0c0083;
        /**  The side padding of the notifications
         */
        public static final int notification_side_padding=0x7f0c006b;
        /**  Height of a the summary ("more card") notification on keyguard. 
         */
        public static final int notification_summary_height=0x7f0c001d;
        public static final int notifications_top_padding=0x7f0c0075;
        public static final int obstacle_gap=0x7f0c00c6;
        public static final int obstacle_height_min=0x7f0c00c7;
        public static final int obstacle_spacing=0x7f0c00bf;
        public static final int obstacle_stem_width=0x7f0c00c5;
        public static final int obstacle_width=0x7f0c00c4;
        public static final int obstacle_z=0x7f0c00d4;
        /**  The distance you can pull a notification before it pops open 
         */
        public static final int one_finger_pop_limit=0x7f0c0032;
        /**  Bottom margin (from display edge) for status bar panels 
         */
        public static final int panel_float=0x7f0c00bb;
        /**  The padding between chars of the password view. 
         */
        public static final int password_char_padding=0x7f0c0109;
        /**  The size of the dots in the PIN unlock method. 
         */
        public static final int password_dot_size=0x7f0c0108;
        /**  How far to slide the panel out when you touch it 
 On tablets this is just the close_handle_height 
         */
        public static final int peek_height=0x7f0c00b9;
        /**  Amount to offset bottom of notification peek window from top of status bar. 
         */
        public static final int peek_window_y_offset=0x7f0c0013;
        public static final int player_hit_size=0x7f0c00c2;
        public static final int player_size=0x7f0c00c3;
        public static final int player_z=0x7f0c00d5;
        public static final int player_z_boost=0x7f0c00d6;
        /**  Preference UI dimensions for larger screens. 
         */
        public static final int preference_widget_width=0x7f0c010f;
        /**  The size of the gesture span needed to activate the "pull" notification expansion 
         */
        public static final int pull_span_min=0x7f0c0035;
        public static final int qs_brightness_padding_top=0x7f0c0046;
        public static final int qs_data_usage_text_size=0x7f0c004c;
        public static final int qs_data_usage_usage_text_size=0x7f0c004d;
        /**  The font size of the date in QS 
         */
        public static final int qs_date_collapsed_size=0x7f0c0098;
        public static final int qs_detail_button_text_size=0x7f0c0048;
        public static final int qs_detail_empty_text_size=0x7f0c004b;
        public static final int qs_detail_header_text_size=0x7f0c0047;
        public static final int qs_detail_item_height=0x7f0c0044;
        public static final int qs_detail_item_height_twoline=0x7f0c0045;
        public static final int qs_detail_item_primary_text_size=0x7f0c0049;
        public static final int qs_detail_item_secondary_text_size=0x7f0c004a;
        public static final int qs_dual_tile_height=0x7f0c003b;
        public static final int qs_dual_tile_padding_horizontal=0x7f0c003d;
        public static final int qs_dual_tile_padding_vertical=0x7f0c003c;
        /**  The font size of the "emergency calls only" label in QS 
         */
        public static final int qs_emergency_calls_only_text_size=0x7f0c0097;
        /**  Lockscreen falsing threshold for quick settings. 
         */
        public static final int qs_falsing_threshold=0x7f0c0073;
        public static final int qs_panel_padding=0x7f0c003a;
        public static final int qs_panel_padding_bottom=0x7f0c0043;
        /**  How far the expanded QS panel peeks from the header in collapsed state. 
         */
        public static final int qs_peek_height=0x7f0c0050;
        public static final int qs_tile_divider_height=0x7f0c0039;
        public static final int qs_tile_height=0x7f0c0036;
        public static final int qs_tile_icon_size=0x7f0c0037;
        public static final int qs_tile_padding_below_icon=0x7f0c0040;
        public static final int qs_tile_padding_bottom=0x7f0c0041;
        public static final int qs_tile_padding_top=0x7f0c003e;
        public static final int qs_tile_padding_top_large_text=0x7f0c003f;
        public static final int qs_tile_spacing=0x7f0c0042;
        public static final int qs_tile_text_size=0x7f0c0038;
        /**  The font size of the time when collapsed in QS 
         */
        public static final int qs_time_collapsed_size=0x7f0c0095;
        /**  The font size of the time when expanded in QS 
         */
        public static final int qs_time_expanded_size=0x7f0c0096;
        /**  Used to calculate the translation animation duration, the expected amount of movement 
         in dps over one second of time. 
         */
        public static final int recents_animation_movement_in_dps_per_second=0x7f0c0064;
        /**  The height of the search bar space. 
 The height of the search bar space. 
         */
        public static final int recents_search_bar_space_height=0x7f0c0060;
        /**  The overscroll percentage allowed on the stack. 
         */
        public static final int recents_stack_overscroll_percentage=0x7f0c0062;
        /**  The top offset for the task stack. 
         */
        public static final int recents_stack_top_padding=0x7f0c0063;
        /**  The side padding for the task stack as a percentage of the width. 
 The side padding for the task stack as a percentage of the width. 
 The side padding for the task stack as a percentage of the width. 
 The side padding for the task stack as a percentage of the width. 
         */
        public static final int recents_stack_width_padding_percentage=0x7f0c0061;
        /**  The min alpha to apply to a task affiliation group color. 
         */
        public static final int recents_task_affiliation_color_min_alpha_percentage=0x7f0c0065;
        /**  The height of a task view bar. 
         */
        public static final int recents_task_bar_height=0x7f0c005f;
        /**  The amount to offset when animating into an affiliate group. 
         */
        public static final int recents_task_view_affiliate_group_enter_offset=0x7f0c005d;
        /**  The size of the application icon in the recents task view. 
         */
        public static final int recents_task_view_application_icon_size=0x7f0c0056;
        /**  The amount of highlight to make on each task view. 
         */
        public static final int recents_task_view_highlight=0x7f0c005b;
        /**  The height of the lock-to-app button. 
         */
        public static final int recents_task_view_lock_to_app_button_height=0x7f0c005c;
        /**  The amount to translate when animating the removal of a task. 
         */
        public static final int recents_task_view_remove_anim_translation_x=0x7f0c005a;
        /**  The radius of the rounded corners on a task view. 
 The radius of the rounded corners on a task view. 
         */
        public static final int recents_task_view_rounded_corners_radius=0x7f0c0057;
        /**  The alpha to apply to a task thumbnail. 
         */
        public static final int recents_task_view_thumbnail_alpha=0x7f0c005e;
        /**  The max translation in the Z index for the last task. 
         */
        public static final int recents_task_view_z_max=0x7f0c0059;
        /**  The min translation in the Z index for the last task. 
         */
        public static final int recents_task_view_z_min=0x7f0c0058;
        public static final int scenery_z=0x7f0c00d3;
        /**  The margin to the edge of the screen from where the circle starts to appear 
         */
        public static final int search_panel_circle_base_margin=0x7f0c00a2;
        /**  The elevation of the search panel circle 
         */
        public static final int search_panel_circle_elevation=0x7f0c00a4;
        /**  The diameter of the search panel circle. 
         */
        public static final int search_panel_circle_size=0x7f0c00a1;
        /**  The amount the circle translates when appearing 
         */
        public static final int search_panel_circle_travel_distance=0x7f0c00a3;
        /**  The height of the scrim behind the search panel circle. 
         */
        public static final int search_panel_scrim_height=0x7f0c00a5;
        /**  How far the user needs to drag up to invoke search. 
         */
        public static final int search_panel_threshold=0x7f0c00a6;
        /**  Minimum width of the search view text entry area. 
         */
        public static final int search_view_text_min_width=0x7f0c010c;
        public static final int segmented_button_radius=0x7f0c004f;
        public static final int segmented_button_spacing=0x7f0c004e;
        /**  The height of the speed bump view. 
         */
        public static final int speed_bump_height=0x7f0c0071;
        public static final int standard_notification_panel_width=0x7f0c002f;
        public static final int star_size_max=0x7f0c00d0;
        public static final int star_size_min=0x7f0c00cf;
        /**  The font size for the clock 
         */
        public static final int status_bar_clock_size=0x7f0c0019;
        /**  Margin at the edge of the screen to ignore touch events for in the windowshade. 
         */
        public static final int status_bar_edge_ignore=0x7f0c0000;
        /**  Height of the status bar header bar 
         */
        public static final int status_bar_header_height=0x7f0c002b;
        /**  Height of the status bar header bar when expanded 
         */
        public static final int status_bar_header_height_expanded=0x7f0c002c;
        /**  Height of the status bar header bar when on Keyguard 
 Height of the status bar header bar when on Keyguard 
         */
        public static final int status_bar_header_height_keyguard=0x7f0c002d;
        public static final int status_bar_height=0x7f0c00bd;
        /**  opacity at which Notification icons will be drawn in the status bar 
         */
        public static final int status_bar_icon_drawing_alpha=0x7f0c001f;
        /**  size at which Notification icons will be drawn in the status bar 
         */
        public static final int status_bar_icon_drawing_size=0x7f0c001e;
        /**  gap on either side of status bar notification icons 
 ======================================== 
 The following resources were recently moved from sw600dp; there may
         be situations where they don't sync up perfectly with PhoneStatusBar. 
 ======================================== 
 gap on either side of status bar notification icons 
         */
        public static final int status_bar_icon_padding=0x7f0c0020;
        /**  Height of notification icons in the status bar 
         */
        public static final int status_bar_icon_size=0x7f0c0018;
        /**  Size of application description text 
 Size of application description text 
         */
        public static final int status_bar_recents_app_description_text_size=0x7f0c0007;
        /**  Where to place the app icon over the thumbnail 
 Where to place the app icon over the thumbnail 
 Where to place the app icon over the thumbnail 
         */
        public static final int status_bar_recents_app_icon_left_margin=0x7f0c0011;
        /**  Upper height limit for application icon 
 Upper height limit for application icon 
         */
        public static final int status_bar_recents_app_icon_max_height=0x7f0c0002;
        /**  Recent Applications parameters 
 Upper width limit for application icon 
 Upper width limit for application icon 
         */
        public static final int status_bar_recents_app_icon_max_width=0x7f0c0001;
        public static final int status_bar_recents_app_icon_top_margin=0x7f0c0012;
        /**  When recents first appears, how far the icon and label of the primary activity
         travel 
         */
        public static final int status_bar_recents_app_icon_translate_distance=0x7f0c0010;
        /**  Left margin of application label text 
 Left margin of application label text 
 Left margin for application label 
         */
        public static final int status_bar_recents_app_label_left_margin=0x7f0c000e;
        /**  Size of application label text 
 Size of application label text 
         */
        public static final int status_bar_recents_app_label_text_size=0x7f0c0006;
        /**  Width of application label text 
 Width of application label text 
 Recent Applications parameters 
 Recent Applications parameters 
 Width of application label text 
         */
        public static final int status_bar_recents_app_label_width=0x7f0c000d;
        /**  Padding between recents items 
 Padding between recents items 
         */
        public static final int status_bar_recents_item_padding=0x7f0c000f;
        /**  Margin between recents container and glow on the right 
 Margin between recents container and glow on the right 
         */
        public static final int status_bar_recents_right_glow_margin=0x7f0c000a;
        /**  Size of fading edge for scrolling 
 Size of fading edge for scrolling 
         */
        public static final int status_bar_recents_scroll_fading_edge_length=0x7f0c0009;
        /**  Padding for text descriptions 
 Padding for text descriptions 
 Padding for text descriptions 
         */
        public static final int status_bar_recents_text_description_padding=0x7f0c000c;
        /**  Size of fading edge for text 
 Size of fading edge for text 
         */
        public static final int status_bar_recents_text_fading_edge_length=0x7f0c0008;
        public static final int status_bar_recents_thumbnail_bg_padding=0x7f0c0005;
        public static final int status_bar_recents_thumbnail_height=0x7f0c0004;
        /**  How far the thumbnail for a recent app appears from left edge 
 Recent Applications parameters 
 How far the thumbnail for a recent app appears from left edge 
 Recent Applications parameters 
 How far the thumbnail for a recent app appears from left edge 
         */
        public static final int status_bar_recents_thumbnail_left_margin=0x7f0c000b;
        /**  How far the thumbnail for a recent app appears from top edge 
         */
        public static final int status_bar_recents_thumbnail_top_margin=0x7f0c00b8;
        /**  Size of application thumbnail 
 Size of application thumbnail 
 Size of application icon 
         */
        public static final int status_bar_recents_thumbnail_width=0x7f0c0003;
        /**  Width of recents panel 
         */
        public static final int status_bar_recents_width=0x7f0c00bc;
        public static final int sun_size=0x7f0c00cd;
        /**  Falsing threshold used when dismissing notifications from the lockscreen. 
         */
        public static final int swipe_helper_falsing_threshold=0x7f0c0074;
        /**  Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
         */
        public static final int system_icons_keyguard_padding_end=0x7f0c009f;
        /**  end margin for system icons if multi user switch is hidden 
         */
        public static final int system_icons_switcher_hidden_expanded_margin=0x7f0c008a;
        /**  Space reserved for the cards behind the top card in the top stack 
         */
        public static final int top_stack_peek_amount=0x7f0c0066;
        /**  The height of the area before the top stack in which the notifications slow down 
         */
        public static final int top_stack_slow_down_length=0x7f0c006a;
        public static final int translation_per_sec=0x7f0c00c0;
        /**  TrustDrawable: Inner radius at the beginning of the enter animation 
         */
        public static final int trust_circle_inner_radius_enter=0x7f0c00b0;
        /**  TrustDrawable: Inner radius at the end of the exit animation 
         */
        public static final int trust_circle_inner_radius_exit=0x7f0c00af;
        /**  TrustDrawable: Maximum inner radius of the breathing animation 
         */
        public static final int trust_circle_inner_radius_visible_max=0x7f0c00ae;
        /**  TrustDrawable: Minimum inner radius of the breathing animation 
         */
        public static final int trust_circle_inner_radius_visible_min=0x7f0c00ad;
        /**  TrustDrawable: Thickness of the circle 
         */
        public static final int trust_circle_thickness=0x7f0c00b1;
        /**  Lockscreen unlocking falsing threshold. 
         */
        public static final int unlock_falsing_threshold=0x7f0c0072;
        /**  Distance the user needs to drag vertically such that a swipe is accepted to unlock the
         device. 
         */
        public static final int unlock_move_distance=0x7f0c0082;
        /**  Volume panel dialog y offset 
         */
        public static final int volume_panel_top=0x7f0c007e;
        /**  Volume panel dialog width 
         */
        public static final int volume_panel_width=0x7f0c007f;
        /**  Volume panel z depth 
         */
        public static final int volume_panel_z=0x7f0c0080;
        /**  Extra padding between the mobile data type icon and the strength indicator when the data
         type icon is wide. 
         */
        public static final int wide_type_icon_start_padding=0x7f0c00b3;
        /**  Extra padding between the mobile data type icon and the strength indicator when the data
         type icon is wide for the tile in quick settings. 
         */
        public static final int wide_type_icon_start_padding_qs=0x7f0c00b4;
        /**  Overload default clock widget parameters 
 Overload default clock widget parameters 
         */
        public static final int widget_big_font_size=0x7f0c0105;
        public static final int widget_label_font_size=0x7f0c0104;
        /**  Z distance between notifications if they are in the stack 
         */
        public static final int z_distance_between_notifications=0x7f0c006c;
        public static final int zen_mode_condition_detail_button_padding=0x7f0c0051;
        /**  Explicit width of the zen toast window 
         */
        public static final int zen_toast_width=0x7f0c0052;
    }
    public static final class drawable {
        public static final int android=0x7f020000;
        public static final int bg_protect=0x7f020001;
        public static final int bottom_divider_glow=0x7f020002;
        public static final int brightness_mirror_background=0x7f020003;
        public static final int btn_borderless_rect=0x7f020004;
        public static final int btn_fab_recents=0x7f020005;
        public static final int bugdroid=0x7f020006;
        public static final int cloud=0x7f020007;
        public static final int cloud_off=0x7f020008;
        public static final int dessert_android=0x7f020009;
        public static final int dessert_cupcake=0x7f02000a;
        public static final int dessert_dandroid=0x7f02000b;
        public static final int dessert_donut=0x7f02000c;
        public static final int dessert_donutburger=0x7f02000d;
        public static final int dessert_eclair=0x7f02000e;
        public static final int dessert_flan=0x7f02000f;
        public static final int dessert_froyo=0x7f020010;
        public static final int dessert_gingerbread=0x7f020011;
        public static final int dessert_honeycomb=0x7f020012;
        public static final int dessert_ics=0x7f020013;
        public static final int dessert_jandycane=0x7f020014;
        public static final int dessert_jellybean=0x7f020015;
        public static final int dessert_keylimepie=0x7f020016;
        public static final int dessert_kitkat=0x7f020017;
        public static final int dessert_petitfour=0x7f020018;
        public static final int dessert_zombiegingerbread=0x7f020019;
        public static final int heads_up_notification_bg_pressed=0x7f020147;
        public static final int heads_up_scrim=0x7f02001a;
        public static final int ic_access_alarms_big=0x7f02001b;
        public static final int ic_access_alarms_small=0x7f02001c;
        public static final int ic_add_circle_qs=0x7f02001d;
        public static final int ic_android=0x7f02001e;
        public static final int ic_audio_alarm=0x7f02001f;
        public static final int ic_audio_alarm_mute=0x7f020020;
        public static final int ic_audio_vol=0x7f020021;
        public static final int ic_audio_vol_mute=0x7f020022;
        public static final int ic_backspace_24dp=0x7f020023;
        public static final int ic_brightness_thumb=0x7f020024;
        public static final int ic_camera_alt_24dp=0x7f020025;
        public static final int ic_chevron_left=0x7f020026;
        public static final int ic_close=0x7f020027;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int ic_contact_picture=0x7f02014b;
        public static final int ic_dismiss_all=0x7f020028;
        public static final int ic_done_wht=0x7f020029;
        public static final int ic_facial_backup=0x7f02002a;
        public static final int ic_ime_switcher_default=0x7f02002b;
        public static final int ic_info=0x7f02002c;
        public static final int ic_input_delete=0x7f02002d;
        public static final int ic_lock_24dp=0x7f02002e;
        public static final int ic_lock_open_24dp=0x7f02002f;
        public static final int ic_lock_to_app_24dp=0x7f020030;
        public static final int ic_lockscreen_camera=0x7f020031;
        public static final int ic_lockscreen_camera_activated=0x7f020032;
        public static final int ic_lockscreen_camera_normal=0x7f020033;
        public static final int ic_lockscreen_emergencycall_normal=0x7f020034;
        public static final int ic_lockscreen_emergencycall_pressed=0x7f020035;
        public static final int ic_lockscreen_glowdot=0x7f020036;
        public static final int ic_lockscreen_google_activated=0x7f020037;
        public static final int ic_lockscreen_google_focused=0x7f020038;
        public static final int ic_lockscreen_google_normal=0x7f020039;
        public static final int ic_lockscreen_handle=0x7f02003a;
        public static final int ic_lockscreen_handle_normal=0x7f02003b;
        public static final int ic_lockscreen_handle_pressed=0x7f02003c;
        public static final int ic_lockscreen_ime=0x7f02003d;
        public static final int ic_lockscreen_lock_normal=0x7f02003e;
        public static final int ic_lockscreen_lock_pressed=0x7f02003f;
        public static final int ic_lockscreen_outerring=0x7f020040;
        public static final int ic_lockscreen_player_background=0x7f020041;
        public static final int ic_lockscreen_search_activated=0x7f020042;
        public static final int ic_lockscreen_search_normal=0x7f020043;
        public static final int ic_lockscreen_silent=0x7f020044;
        public static final int ic_lockscreen_silent_activated=0x7f020045;
        public static final int ic_lockscreen_silent_focused=0x7f020046;
        public static final int ic_lockscreen_silent_normal=0x7f020047;
        public static final int ic_lockscreen_sim=0x7f020048;
        public static final int ic_lockscreen_soundon=0x7f020049;
        public static final int ic_lockscreen_soundon_activated=0x7f02004a;
        public static final int ic_lockscreen_soundon_focused=0x7f02004b;
        public static final int ic_lockscreen_soundon_normal=0x7f02004c;
        public static final int ic_lockscreen_unlock=0x7f02004d;
        public static final int ic_lockscreen_unlock_activated=0x7f02004e;
        public static final int ic_lockscreen_unlock_normal=0x7f02004f;
        public static final int ic_lockscreen_unlock_phantom=0x7f020050;
        public static final int ic_media_next=0x7f020051;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int ic_media_pause=0x7f020149;
        public static final int ic_media_play=0x7f020052;
        public static final int ic_media_previous=0x7f020053;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int ic_media_stop=0x7f02014a;
        public static final int ic_menu_share=0x7f020054;
        public static final int ic_notification_overlay=0x7f020055;
        public static final int ic_notify_button_bg=0x7f020056;
        public static final int ic_phone_24dp=0x7f020057;
        public static final int ic_power_low=0x7f020058;
        public static final int ic_power_saver=0x7f020059;
        public static final int ic_qs_airplane_off=0x7f02005a;
        public static final int ic_qs_airplane_on=0x7f02005b;
        public static final int ic_qs_alarm_on=0x7f02005c;
        public static final int ic_qs_back=0x7f02005d;
        public static final int ic_qs_bluetooth_connected=0x7f02005e;
        public static final int ic_qs_bluetooth_connecting=0x7f02005f;
        public static final int ic_qs_bluetooth_detail_empty=0x7f020060;
        public static final int ic_qs_bluetooth_off=0x7f020061;
        public static final int ic_qs_bluetooth_on=0x7f020062;
        public static final int ic_qs_brightness_auto_off=0x7f020063;
        public static final int ic_qs_brightness_auto_off_alpha=0x7f020064;
        public static final int ic_qs_brightness_auto_on=0x7f020065;
        public static final int ic_qs_brightness_auto_on_alpha=0x7f020066;
        public static final int ic_qs_cancel=0x7f020067;
        public static final int ic_qs_cast_detail_empty=0x7f020068;
        public static final int ic_qs_cast_off=0x7f020069;
        public static final int ic_qs_cast_on=0x7f02006a;
        public static final int ic_qs_certificate_info=0x7f02006b;
        public static final int ic_qs_default_user=0x7f02006c;
        public static final int ic_qs_flashlight_off=0x7f02006d;
        public static final int ic_qs_flashlight_on=0x7f02006e;
        public static final int ic_qs_hotspot_off=0x7f02006f;
        public static final int ic_qs_hotspot_on=0x7f020070;
        public static final int ic_qs_ime=0x7f020071;
        public static final int ic_qs_inversion_off=0x7f020072;
        public static final int ic_qs_inversion_on=0x7f020073;
        public static final int ic_qs_location_off=0x7f020074;
        public static final int ic_qs_location_on=0x7f020075;
        public static final int ic_qs_minus=0x7f020076;
        public static final int ic_qs_no_sim=0x7f020077;
        public static final int ic_qs_plus=0x7f020078;
        public static final int ic_qs_ringer_audible=0x7f020079;
        public static final int ic_qs_ringer_silent=0x7f02007a;
        public static final int ic_qs_ringer_vibrate=0x7f02007b;
        public static final int ic_qs_rotation_landscape=0x7f02007c;
        public static final int ic_qs_rotation_portrait=0x7f02007d;
        public static final int ic_qs_rotation_unlocked=0x7f02007e;
        public static final int ic_qs_settings=0x7f02007f;
        public static final int ic_qs_signal_0=0x7f020080;
        public static final int ic_qs_signal_1=0x7f020081;
        public static final int ic_qs_signal_1x=0x7f020082;
        public static final int ic_qs_signal_2=0x7f020083;
        public static final int ic_qs_signal_3=0x7f020084;
        public static final int ic_qs_signal_3g=0x7f020085;
        public static final int ic_qs_signal_4=0x7f020086;
        public static final int ic_qs_signal_4g=0x7f020087;
        public static final int ic_qs_signal_disabled=0x7f020088;
        public static final int ic_qs_signal_e=0x7f020089;
        public static final int ic_qs_signal_full_0=0x7f02008a;
        public static final int ic_qs_signal_full_1=0x7f02008b;
        public static final int ic_qs_signal_full_2=0x7f02008c;
        public static final int ic_qs_signal_full_3=0x7f02008d;
        public static final int ic_qs_signal_full_4=0x7f02008e;
        public static final int ic_qs_signal_g=0x7f02008f;
        public static final int ic_qs_signal_h=0x7f020090;
        public static final int ic_qs_signal_in=0x7f020091;
        public static final int ic_qs_signal_lte=0x7f020092;
        public static final int ic_qs_signal_no_signal=0x7f020093;
        public static final int ic_qs_signal_out=0x7f020094;
        public static final int ic_qs_signal_r=0x7f020095;
        public static final int ic_qs_usb_device=0x7f020096;
        public static final int ic_qs_vpn=0x7f020097;
        public static final int ic_qs_wifi_0=0x7f020098;
        public static final int ic_qs_wifi_1=0x7f020099;
        public static final int ic_qs_wifi_2=0x7f02009a;
        public static final int ic_qs_wifi_3=0x7f02009b;
        public static final int ic_qs_wifi_4=0x7f02009c;
        public static final int ic_qs_wifi_detail_empty=0x7f02009d;
        public static final int ic_qs_wifi_disabled=0x7f02009e;
        public static final int ic_qs_wifi_full_0=0x7f02009f;
        public static final int ic_qs_wifi_full_1=0x7f0200a0;
        public static final int ic_qs_wifi_full_2=0x7f0200a1;
        public static final int ic_qs_wifi_full_3=0x7f0200a2;
        public static final int ic_qs_wifi_full_4=0x7f0200a3;
        public static final int ic_qs_wifi_no_network=0x7f0200a4;
        public static final int ic_ringer_audible=0x7f0200a5;
        public static final int ic_ringer_mute=0x7f0200a6;
        public static final int ic_ringer_vibrate=0x7f0200a7;
        public static final int ic_settings=0x7f0200a8;
        public static final int ic_sysbar_back=0x7f0200a9;
        public static final int ic_sysbar_back_ime=0x7f0200aa;
        public static final int ic_sysbar_back_land=0x7f0200ab;
        public static final int ic_sysbar_home=0x7f0200ac;
        public static final int ic_sysbar_home_land=0x7f0200ad;
        public static final int ic_sysbar_lights_out_dot_large=0x7f0200ae;
        public static final int ic_sysbar_lights_out_dot_small=0x7f0200af;
        public static final int ic_sysbar_menu=0x7f0200b0;
        public static final int ic_sysbar_menu_land=0x7f0200b1;
        public static final int ic_sysbar_recent=0x7f0200b2;
        public static final int ic_sysbar_recent_land=0x7f0200b3;
        public static final int ic_zen_important=0x7f0200b4;
        public static final int ic_zen_none=0x7f0200b5;
        public static final int icon=0x7f0200b6;
        public static final int indeterminate=0x7f0200b7;
        public static final int indeterminate_anim=0x7f0200b8;
        public static final int intro_bg=0x7f0200b9;
        public static final int keyguard_add_widget_button=0x7f0200ba;
        public static final int keyguard_expand_challenge_handle=0x7f0200bb;
        public static final int keyguard_overflow_number_background=0x7f0200bc;
        public static final int kg_add_widget=0x7f0200bd;
        public static final int kg_add_widget_disabled=0x7f0200be;
        public static final int kg_add_widget_pressed=0x7f0200bf;
        public static final int kg_security_grip=0x7f0200c0;
        public static final int kg_security_lock=0x7f0200c1;
        public static final int kg_security_lock_focused=0x7f0200c2;
        public static final int kg_security_lock_normal=0x7f0200c3;
        public static final int kg_security_lock_pressed=0x7f0200c4;
        public static final int kg_widget_bg_padded=0x7f0200c5;
        public static final int kg_widget_delete_drop_target=0x7f0200c6;
        public static final int lockscreen_emergency_button=0x7f0200c7;
        public static final int lockscreen_protection_pattern=0x7f0200c8;
        public static final int lollipop=0x7f0200c9;
        public static final int moon=0x7f0200ca;
        public static final int nav_background=0x7f0200cb;
        public static final int navbar_search_outerring=0x7f0200cc;
        public static final int notification_guts_bg=0x7f0200cd;
        public static final int notification_header_bg=0x7f0200ce;
        public static final int notification_list_shadow=0x7f0200cf;
        public static final int notification_material_bg=0x7f0200d0;
        public static final int notification_material_bg_dim=0x7f0200d1;
        public static final int notification_number_text_color=0x7f020141;
        public static final int notification_panel_bg=0x7f0200d2;
        public static final int notification_scrim=0x7f0200d3;
        public static final int notify_item_glow_bottom=0x7f0200d4;
        public static final int pop_belt=0x7f0200d5;
        public static final int pop_droid=0x7f0200d6;
        public static final int pop_pizza=0x7f0200d7;
        public static final int pop_stripes=0x7f0200d8;
        public static final int pop_swirl=0x7f0200d9;
        public static final int pop_vortex=0x7f0200da;
        public static final int pop_vortex2=0x7f0200db;
        public static final int progress_bg_holo_light=0x7f0200dc;
        public static final int progress_primary_holo_light=0x7f0200dd;
        public static final int progress_secondary_holo_light=0x7f0200de;
        public static final int qs_background_primary=0x7f0200df;
        public static final int qs_background_secondary=0x7f0200e0;
        public static final int qs_detail_background=0x7f0200e1;
        public static final int qs_dual_tile_caret=0x7f0200e2;
        public static final int qs_navbar_scrim=0x7f0200e3;
        public static final int qs_subhead_caret=0x7f0200e4;
        public static final int qs_tile_background=0x7f0200e5;
        public static final int recents_button_bg=0x7f0200e6;
        public static final int recents_callout_line=0x7f020146;
        public static final int recents_dismiss_dark=0x7f0200e7;
        public static final int recents_dismiss_light=0x7f0200e8;
        public static final int recents_lock_to_app_pin=0x7f0200e9;
        public static final int recents_lock_to_task_button_bg=0x7f0200ea;
        public static final int recents_lower_gradient=0x7f0200eb;
        public static final int recents_status_gradient=0x7f0200ec;
        public static final int recents_task_shadow=0x7f0200ed;
        public static final int recents_task_view_header_bg=0x7f0200ee;
        public static final int recents_task_view_header_bg_color=0x7f0200ef;
        public static final int recents_thumbnail_bg=0x7f0200f0;
        public static final int recents_thumbnail_bg_normal=0x7f0200f1;
        public static final int recents_thumbnail_bg_press=0x7f0200f2;
        public static final int recents_thumbnail_fg=0x7f0200f3;
        public static final int recents_thumbnail_no_press=0x7f0200f4;
        public static final int ripple_drawable=0x7f0200f5;
        public static final int scorecard=0x7f0200f6;
        public static final int scorecard_gameover=0x7f0200f7;
        public static final int screenshot_panel=0x7f0200f8;
        public static final int scrubber_control_disabled_holo=0x7f0200f9;
        public static final int scrubber_control_focused_holo=0x7f0200fa;
        public static final int scrubber_control_normal_holo=0x7f0200fb;
        public static final int scrubber_control_pressed_holo=0x7f0200fc;
        public static final int scrubber_control_selector_holo=0x7f0200fd;
        public static final int scrubber_primary_holo=0x7f0200fe;
        public static final int scrubber_progress_horizontal_holo_light=0x7f0200ff;
        public static final int scrubber_secondary_holo=0x7f020100;
        public static final int scrubber_track_holo_light=0x7f020101;
        public static final int search_bg_transparent=0x7f020102;
        public static final int search_panel_scrim=0x7f020103;
        public static final int spinner_default_holo_dark_am_no_underline=0x7f020104;
        public static final int star=0x7f020105;
        public static final int stat_notify_image=0x7f020106;
        public static final int stat_notify_image_error=0x7f020107;
        public static final int stat_notify_more=0x7f020108;
        public static final int stat_sys_airplane_mode=0x7f020109;
        public static final int stat_sys_alarm=0x7f02010a;
        public static final int stat_sys_cast=0x7f02010b;
        public static final int stat_sys_data_bluetooth=0x7f02010c;
        public static final int stat_sys_data_bluetooth_connected=0x7f02010d;
        public static final int stat_sys_data_fully_connected_1x=0x7f02010e;
        public static final int stat_sys_data_fully_connected_3g=0x7f02010f;
        public static final int stat_sys_data_fully_connected_4g=0x7f020110;
        public static final int stat_sys_data_fully_connected_e=0x7f020111;
        public static final int stat_sys_data_fully_connected_g=0x7f020112;
        public static final int stat_sys_data_fully_connected_h=0x7f020113;
        public static final int stat_sys_data_fully_connected_lte=0x7f020114;
        public static final int stat_sys_data_fully_connected_roam=0x7f020115;
        public static final int stat_sys_location=0x7f020116;
        public static final int stat_sys_ringer_vibrate=0x7f020117;
        public static final int stat_sys_roaming_cdma_0=0x7f020118;
        public static final int stat_sys_signal_0=0x7f020119;
        public static final int stat_sys_signal_0_fully=0x7f02011a;
        public static final int stat_sys_signal_1=0x7f02011b;
        public static final int stat_sys_signal_1_fully=0x7f02011c;
        public static final int stat_sys_signal_2=0x7f02011d;
        public static final int stat_sys_signal_2_fully=0x7f02011e;
        public static final int stat_sys_signal_3=0x7f02011f;
        public static final int stat_sys_signal_3_fully=0x7f020120;
        public static final int stat_sys_signal_4=0x7f020121;
        public static final int stat_sys_signal_4_fully=0x7f020122;
        public static final int stat_sys_signal_null=0x7f020123;
        public static final int stat_sys_sync=0x7f020124;
        public static final int stat_sys_tty_mode=0x7f020125;
        public static final int stat_sys_vpn_ic=0x7f020126;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int stat_sys_warning=0x7f020148;
        public static final int stat_sys_wifi_signal_0=0x7f020127;
        public static final int stat_sys_wifi_signal_0_fully=0x7f020128;
        public static final int stat_sys_wifi_signal_1=0x7f020129;
        public static final int stat_sys_wifi_signal_1_fully=0x7f02012a;
        public static final int stat_sys_wifi_signal_2=0x7f02012b;
        public static final int stat_sys_wifi_signal_2_fully=0x7f02012c;
        public static final int stat_sys_wifi_signal_3=0x7f02012d;
        public static final int stat_sys_wifi_signal_3_fully=0x7f02012e;
        public static final int stat_sys_wifi_signal_4=0x7f02012f;
        public static final int stat_sys_wifi_signal_4_fully=0x7f020130;
        public static final int stat_sys_wifi_signal_null=0x7f020131;
        public static final int stat_sys_zen_important=0x7f020132;
        public static final int stat_sys_zen_none=0x7f020133;
        public static final int status_background=0x7f020134;
        public static final int status_bar_close=0x7f020135;
        public static final int status_bar_close_off=0x7f020136;
        public static final int status_bar_close_on=0x7f020137;
        public static final int status_bar_notification_row_background_color=0x7f020145;
        public static final int status_bar_recents_app_thumbnail_background=0x7f020144;
        public static final int status_bar_recents_background=0x7f020138;
        public static final int status_bar_settings_slider_disabled=0x7f020139;
        public static final int status_bar_toggle_button=0x7f02013a;
        public static final int sun=0x7f02013b;
        public static final int sun2=0x7f02013c;
        public static final int sym_keyboard_return_holo=0x7f02013d;
        public static final int system_bar_background=0x7f020143;
        public static final int system_bar_notification_header_bg=0x7f02013e;
        public static final int ticker_background_color=0x7f020142;
        public static final int top_divider_glow=0x7f02013f;
        public static final int zen_toast_background=0x7f020140;
    }
    public static final class fraction {
        /**  Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
 Margin on the right side of the system icon group on Keyguard. 
         */
        public static final int battery_button_height_fraction=0x7f0d0002;
        /**  Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
     fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
 Fraction value to smooth the edges of the battery icon. The path will be inset by this
         fraction of a pixel.
         */
        public static final int battery_subpixel_smoothing_left=0x7f0d0003;
        public static final int battery_subpixel_smoothing_right=0x7f0d0004;
        /**  The fraction of the screen height where the clock on the Keyguard has its center. The
         max value is used when no notifications are displaying, and the min value is when the
         highest possible number of notifications are showing. 
 The fraction of the screen height where the clock on the Keyguard has its center. The
         max value is used when no notifications are displaying, and the min value is when the
         highest possible number of notifications are showing. 
 The fraction of the screen height where the clock on the Keyguard has its center. The
     max value is used when no notifications are displaying, and the min value is when the
     highest possible number of notifications are showing. 
 The fraction of the screen height where the clock on the Keyguard has its center. The
         min value is used when no notifications are displaying, and the max value is when the
         highest possible number of notifications are showing. 
         */
        public static final int keyguard_clock_y_fraction_max=0x7f0d0000;
        public static final int keyguard_clock_y_fraction_min=0x7f0d0001;
    }
    public static final class id {
        public static final int activity_description=0x7f0e00c4;
        public static final int airplane=0x7f0e00cf;
        public static final int alarm_status=0x7f0e007f;
        public static final int alpha_animator_end_value_tag=0x7f0e0009;
        public static final int alpha_animator_start_value_tag=0x7f0e000f;
        public static final int alpha_animator_tag=0x7f0e0003;
        public static final int am_pm_view=0x7f0e00d1;
        public static final int app_description=0x7f0e00ff;
        public static final int app_icon=0x7f0e00fb;
        public static final int app_label=0x7f0e00fa;
        public static final int app_thumbnail=0x7f0e00fc;
        public static final int app_thumbnail_image=0x7f0e00fd;
        public static final int app_widget_container=0x7f0e0051;
        public static final int application_icon=0x7f0e00c3;
        public static final int artist_album=0x7f0e008f;
        public static final int back=0x7f0e009f;
        public static final int backdrop=0x7f0e010e;
        public static final int backdrop_back=0x7f0e010f;
        public static final int backdrop_front=0x7f0e0110;
        public static final int backgroundDimmed=0x7f0e00f0;
        public static final int backgroundNormal=0x7f0e00ef;
        public static final int badge=0x7f0e008b;
        public static final int battery=0x7f0e0118;
        public static final int battery_level=0x7f0e0085;
        public static final int bottom=0x7f0e0018;
        public static final int brightness_icon=0x7f0e00b4;
        public static final int brightness_mirror=0x7f0e0112;
        public static final int brightness_slider=0x7f0e00b5;
        public static final int btn_next=0x7f0e0096;
        public static final int btn_play=0x7f0e0095;
        public static final int btn_prev=0x7f0e0094;
        public static final int camera_button=0x7f0e0042;
        public static final int carrier_label=0x7f0e002e;
        public static final int carrier_text=0x7f0e0045;
        public static final int center=0x7f0e0019;
        public static final int center_horizontal=0x7f0e001a;
        public static final int center_vertical=0x7f0e001b;
        public static final int challenge=0x7f0e0026;
        public static final int clip_horizontal=0x7f0e001c;
        public static final int clip_vertical=0x7f0e001d;
        public static final int clock=0x7f0e0076;
        public static final int clock_view=0x7f0e0077;
        public static final int content_holder=0x7f0e0038;
        public static final int date_collapsed=0x7f0e00e8;
        public static final int date_expanded=0x7f0e00e9;
        public static final int date_group=0x7f0e00e7;
        public static final int date_view=0x7f0e007e;
        public static final int deadzone=0x7f0e00a5;
        public static final int debug_info=0x7f0e00aa;
        public static final int debug_overlay_stub=0x7f0e00bb;
        public static final int debug_seek_bar_1=0x7f0e00bd;
        public static final int debug_seek_bar_2=0x7f0e00be;
        public static final int delete_button=0x7f0e0064;
        public static final int digit_text=0x7f0e005a;
        public static final int dismiss_task=0x7f0e00c5;
        public static final int dismiss_text=0x7f0e00ee;
        public static final int divider=0x7f0e0065;
        public static final int doze_saved_filter_tag=0x7f0e0012;
        public static final int emergency_call_button=0x7f0e0046;
        public static final int emergency_calls_only=0x7f0e00de;
        public static final int empty_time_view=0x7f0e00d2;
        public static final int empty_view_stub=0x7f0e00ba;
        public static final int end=0x7f0e001e;
        public static final int expandChallengeHandle=0x7f0e0027;
        public static final int expanded=0x7f0e00f4;
        public static final int expandedPublic=0x7f0e00f5;
        public static final int face_unlock_area_view=0x7f0e0049;
        public static final int face_unlock_cancel_button=0x7f0e004b;
        public static final int fill=0x7f0e001f;
        public static final int fill_horizontal=0x7f0e0020;
        public static final int fill_vertical=0x7f0e0021;
        public static final int footer_icon=0x7f0e00b7;
        public static final int footer_text=0x7f0e00b6;
        public static final int global_screenshot=0x7f0e0036;
        public static final int global_screenshot_background=0x7f0e0035;
        public static final int global_screenshot_flash=0x7f0e0037;
        public static final int glow_pad_view=0x7f0e004d;
        public static final int gone=0x7f0e0013;
        public static final int header=0x7f0e00e4;
        public static final int header_debug_info=0x7f0e00ec;
        public static final int header_emergency_calls_only=0x7f0e00e6;
        public static final int height_animator_end_value_tag=0x7f0e000b;
        public static final int height_animator_start_value_tag=0x7f0e0011;
        public static final int height_animator_tag=0x7f0e0005;
        public static final int home=0x7f0e00a0;
        public static final int horizontal=0x7f0e0016;
        public static final int icon=0x7f0e00ae;
        public static final int ime_switcher=0x7f0e00a3;
        public static final int info_container=0x7f0e008c;
        public static final int key0=0x7f0e0073;
        public static final int key1=0x7f0e0067;
        public static final int key2=0x7f0e0068;
        public static final int key3=0x7f0e0069;
        public static final int key4=0x7f0e006b;
        public static final int key5=0x7f0e006c;
        public static final int key6=0x7f0e006d;
        public static final int key7=0x7f0e006f;
        public static final int key8=0x7f0e0070;
        public static final int key9=0x7f0e0071;
        public static final int key_enter=0x7f0e0074;
        public static final int keyguard_account_view=0x7f0e0039;
        public static final int keyguard_add_widget=0x7f0e003d;
        public static final int keyguard_add_widget_view=0x7f0e003e;
        public static final int keyguard_bottom_area=0x7f0e003f;
        public static final int keyguard_bouncer_frame=0x7f0e0048;
        public static final int keyguard_carrier_text=0x7f0e0086;
        public static final int keyguard_clock_container=0x7f0e0088;
        public static final int keyguard_face_unlock_view=0x7f0e0047;
        public static final int keyguard_header=0x7f0e0080;
        public static final int keyguard_host_view=0x7f0e004e;
        public static final int keyguard_indication_text=0x7f0e0040;
        public static final int keyguard_message_area=0x7f0e0055;
        public static final int keyguard_password_view=0x7f0e005c;
        public static final int keyguard_pattern_view=0x7f0e005f;
        public static final int keyguard_pin_view=0x7f0e0061;
        public static final int keyguard_security_container=0x7f0e0052;
        public static final int keyguard_selector_fade_container=0x7f0e004c;
        public static final int keyguard_selector_view=0x7f0e0078;
        public static final int keyguard_selector_view_frame=0x7f0e0079;
        public static final int keyguard_sim_pin_view=0x7f0e007a;
        public static final int keyguard_sim_puk_view=0x7f0e007c;
        public static final int keyguard_status_view=0x7f0e0087;
        public static final int keyguard_transport_control=0x7f0e008a;
        public static final int keyguard_user_avatar=0x7f0e0056;
        public static final int keyguard_user_name=0x7f0e0057;
        public static final int keyguard_user_selector=0x7f0e0058;
        public static final int keyguard_user_switcher=0x7f0e0097;
        public static final int keyguard_users_grid=0x7f0e0059;
        public static final int keyguard_widget_pager_delete_target=0x7f0e0050;
        public static final int klondike_text=0x7f0e005b;
        public static final int label=0x7f0e010d;
        public static final int left=0x7f0e0022;
        public static final int lights_out=0x7f0e00a4;
        public static final int lockPatternView=0x7f0e0060;
        public static final int lock_icon=0x7f0e0044;
        public static final int lock_to_app_fab=0x7f0e00c1;
        public static final int login=0x7f0e003a;
        public static final int menu=0x7f0e00a2;
        public static final int metadata_container=0x7f0e008d;
        public static final int mobile_combo=0x7f0e00cb;
        public static final int mobile_signal=0x7f0e00cc;
        public static final int mobile_type=0x7f0e00cd;
        public static final int moreIcon=0x7f0e00d8;
        public static final int more_icon_overflow=0x7f0e00f2;
        public static final int more_text=0x7f0e00f1;
        public static final int multi_pane_challenge=0x7f0e0054;
        public static final int multi_user_avatar=0x7f0e0082;
        public static final int multi_user_switch=0x7f0e0081;
        public static final int nav_bar_scrim=0x7f0e00bc;
        public static final int nav_buttons=0x7f0e009e;
        public static final int no_notifications=0x7f0e00ed;
        public static final int none=0x7f0e0028;
        public static final int normal=0x7f0e0014;
        public static final int notificationIcons=0x7f0e00d9;
        public static final int notification_container_parent=0x7f0e00df;
        public static final int notification_guts=0x7f0e00a7;
        public static final int notification_guts_stub=0x7f0e00f7;
        public static final int notification_icon_area=0x7f0e00d6;
        public static final int notification_icon_area_inner=0x7f0e00d7;
        public static final int notification_inspect_app_provided_settings=0x7f0e00ab;
        public static final int notification_inspect_item=0x7f0e00ac;
        public static final int notification_lights_out=0x7f0e00d4;
        public static final int notification_panel=0x7f0e00dd;
        public static final int notification_stack_scroller=0x7f0e00e2;
        public static final int ok=0x7f0e003c;
        public static final int overflow_icons_view=0x7f0e00f3;
        public static final int owner_info=0x7f0e0089;
        public static final int pageDeleteDropTarget=0x7f0e0029;
        public static final int panel_holder=0x7f0e0113;
        public static final int password=0x7f0e003b;
        public static final int passwordEntry=0x7f0e005d;
        public static final int phone_button=0x7f0e0043;
        public static final int pinEntry=0x7f0e0063;
        public static final int pkgname=0x7f0e00a8;
        public static final int presentation=0x7f0e0075;
        public static final int preview_container=0x7f0e0041;
        public static final int profile_badge_line3=0x7f0e00b0;
        public static final int pukEntry=0x7f0e007d;
        public static final int qs_detail_header=0x7f0e00ea;
        public static final int qs_detail_header_progress=0x7f0e00eb;
        public static final int qs_navbar_scrim=0x7f0e00e3;
        public static final int quick_settings_container=0x7f0e00b2;
        public static final int quick_settings_panel=0x7f0e00b3;
        public static final int recent_apps=0x7f0e00a1;
        public static final int recent_inspect_item=0x7f0e0126;
        public static final int recent_item=0x7f0e00f9;
        public static final int recent_remove_item=0x7f0e0125;
        public static final int recents_bg_protect=0x7f0e0101;
        public static final int recents_callout_line=0x7f0e00fe;
        public static final int recents_container=0x7f0e0102;
        public static final int recents_linear_layout=0x7f0e0103;
        public static final int recents_no_apps=0x7f0e0104;
        public static final int recents_root=0x7f0e0100;
        public static final int recents_view=0x7f0e00b9;
        public static final int remember=0x7f0e00c6;
        public static final int reserve_notification_space=0x7f0e00e1;
        public static final int right=0x7f0e0023;
        public static final int rot0=0x7f0e009d;
        public static final int rot90=0x7f0e00a6;
        public static final int row0=0x7f0e0062;
        public static final int row1=0x7f0e0066;
        public static final int row2=0x7f0e006a;
        public static final int row3=0x7f0e006e;
        public static final int row4=0x7f0e0072;
        public static final int scale_animator_end_value_tag=0x7f0e0008;
        public static final int scale_animator_start_value_tag=0x7f0e000e;
        public static final int scale_animator_tag=0x7f0e0002;
        public static final int score=0x7f0e009b;
        public static final int scrim=0x7f0e002a;
        public static final int scrim_behind=0x7f0e0111;
        public static final int scrim_in_front=0x7f0e0114;
        public static final int scroll_view=0x7f0e00e0;
        public static final int search_logo=0x7f0e0108;
        public static final int search_panel_circle=0x7f0e0107;
        public static final int search_panel_container=0x7f0e0105;
        public static final int search_panel_scrim=0x7f0e0106;
        public static final int seekbar=0x7f0e011d;
        public static final int settings_button=0x7f0e00e5;
        public static final int signal_cluster=0x7f0e0117;
        public static final int simPinEntry=0x7f0e007b;
        public static final int slider=0x7f0e010c;
        public static final int slider_panel=0x7f0e011a;
        public static final int sliding_layout=0x7f0e004f;
        public static final int small=0x7f0e0015;
        public static final int speedbump_line=0x7f0e00f8;
        public static final int spotlightMask=0x7f0e004a;
        public static final int start=0x7f0e0024;
        public static final int statusIcons=0x7f0e0116;
        public static final int status_bar=0x7f0e00d3;
        public static final int status_bar_contents=0x7f0e00d5;
        public static final int status_bar_latest_event_content=0x7f0e00ad;
        public static final int status_bar_scrim=0x7f0e00b8;
        public static final int stream_icon=0x7f0e011b;
        public static final int suppressor=0x7f0e011c;
        public static final int switch_ime_button=0x7f0e005e;
        public static final int system_icon_area=0x7f0e00da;
        public static final int system_icons=0x7f0e0115;
        public static final int system_icons_container=0x7f0e0084;
        public static final int system_icons_super_container=0x7f0e0083;
        public static final int task_view_bar=0x7f0e00c2;
        public static final int task_view_content=0x7f0e00bf;
        public static final int task_view_thumbnail=0x7f0e00c0;
        public static final int text=0x7f0e00b1;
        public static final int ticker=0x7f0e00dc;
        public static final int tickerIcon=0x7f0e0109;
        public static final int tickerText=0x7f0e010a;
        public static final int ticker_stub=0x7f0e00db;
        public static final int time=0x7f0e00af;
        public static final int time_view=0x7f0e00d0;
        public static final int timestamp=0x7f0e00a9;
        public static final int title=0x7f0e008e;
        public static final int toggle=0x7f0e010b;
        public static final int top=0x7f0e0025;
        public static final int top_inset_animator_end_value_tag=0x7f0e000a;
        public static final int top_inset_animator_start_value_tag=0x7f0e0010;
        public static final int top_inset_animator_tag=0x7f0e0004;
        public static final int transient_seek=0x7f0e0090;
        public static final int transient_seek_bar=0x7f0e0091;
        public static final int transient_seek_time_elapsed=0x7f0e0092;
        public static final int transient_seek_time_remaining=0x7f0e0093;
        public static final int translation_y_animator_end_value_tag=0x7f0e0006;
        public static final int translation_y_animator_start_value_tag=0x7f0e000c;
        public static final int translation_y_animator_tag=0x7f0e0000;
        public static final int translation_z_animator_end_value_tag=0x7f0e0007;
        public static final int translation_z_animator_start_value_tag=0x7f0e000d;
        public static final int translation_z_animator_tag=0x7f0e0001;
        public static final int usage_carrier_text=0x7f0e0031;
        public static final int usage_graph=0x7f0e0030;
        public static final int usage_info_bottom_text=0x7f0e0034;
        public static final int usage_info_top_text=0x7f0e0032;
        public static final int usage_period_text=0x7f0e0033;
        public static final int usage_text=0x7f0e002f;
        public static final int userSwitcher=0x7f0e002b;
        public static final int user_name=0x7f0e0098;
        public static final int user_picture=0x7f0e0099;
        public static final int vertical=0x7f0e0017;
        public static final int veto=0x7f0e00f6;
        public static final int view_flipper=0x7f0e0053;
        public static final int visible_panel=0x7f0e0119;
        public static final int vpn=0x7f0e00c7;
        public static final int welcome=0x7f0e009c;
        public static final int widget=0x7f0e002c;
        public static final int widgets=0x7f0e002d;
        public static final int wifi_airplane_spacer=0x7f0e00ce;
        public static final int wifi_combo=0x7f0e00c8;
        public static final int wifi_signal=0x7f0e00c9;
        public static final int wifi_signal_spacer=0x7f0e00ca;
        public static final int world=0x7f0e009a;
        public static final int zen_buttons=0x7f0e011f;
        public static final int zen_conditions=0x7f0e0124;
        public static final int zen_mode_panel=0x7f0e011e;
        public static final int zen_more_settings=0x7f0e0123;
        public static final int zen_subhead=0x7f0e0120;
        public static final int zen_subhead_collapsed=0x7f0e0121;
        public static final int zen_subhead_expanded=0x7f0e0122;
    }
    public static final class integer {
        public static final int blinds_pop_duration_ms=0x7f090011;
        /**  Alias used to reference framework activity duration.  
         */
        public static final int config_activityDefaultDur=0x7f090034;
        /**  How many icons may be shown at once in the system bar. Includes any
         slots that may be reused for things like IME control. 
         */
        public static final int config_maxNotificationIcons=0x7f090002;
        /**  Min alpha % that recent items will fade to while being dismissed 
 Min alpha % that recent items will fade to while being dismissed 
         */
        public static final int config_recent_item_min_alpha=0x7f09000a;
        /**  The number of app icons we keep in memory 
         */
        public static final int config_recents_max_icon_count=0x7f090001;
        /**  The number of app thumbnails we keep in memory 
         */
        public static final int config_recents_max_thumbnail_count=0x7f090000;
        /**  Vibration duration for GlowPadView used in SearchPanelView 
         */
        public static final int config_search_panel_view_vibration_duration=0x7f090005;
        /**  Amount of time to hold off before showing the search panel when the user presses home 
         */
        public static final int config_show_search_delay=0x7f090003;
        /**  Vibration duration for GlowPadView used in SearchPanelView 
         */
        public static final int config_vibration_duration=0x7f090004;
        /**  Tiles with feature timeouts: number of days to show after feature is used. 
         */
        public static final int days_to_show_timeout_tiles=0x7f09002d;
        /**  Doze: duration to avoid false pickup gestures triggered by notification vibrations 
         */
        public static final int doze_pickup_vibration_threshold=0x7f090027;
        /**  Doze: pulse parameter - how long does it take to fade in? 
         */
        public static final int doze_pulse_duration_in=0x7f090028;
        /**  Doze: pulse parameter - how long does it take to fade out? 
         */
        public static final int doze_pulse_duration_out=0x7f09002a;
        /**  Doze: pulse parameter - once faded in, how long does it stay visible? 
         */
        public static final int doze_pulse_duration_visible=0x7f090029;
        /**  Doze: maximum number of times the notification pulse schedule can be reset 
         */
        public static final int doze_pulse_schedule_resets=0x7f090026;
        /**  Doze: alpha to apply to small icons when dozing 
         */
        public static final int doze_small_icon_alpha=0x7f09002b;
        /**  milliseconds before the heads up notification auto-dismisses. 
         */
        public static final int heads_up_notification_decay=0x7f090012;
        /**  milliseconds before the heads up notification accepts touches. 
         */
        public static final int heads_up_sensitivity_delay=0x7f090013;
        /**  The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 We have only space for one notification on phone landscape layouts. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
     card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
         card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
         card. 
 The maximum count of notifications on Keyguard. The rest will be collapsed in an overflow
         card. 
         */
        public static final int keyguard_max_notification_count=0x7f090025;
        public static final int kg_carousel_angle=0x7f090035;
        public static final int kg_glowpad_rotation_offset=0x7f090036;
        public static final int kg_security_flipper_weight=0x7f090039;
        /**  Gravity to make KeyguardSelectorView work in multiple orientations
        0x31 == "top|center_horizontal" 
 Gravity to make KeyguardSelectorView work in multiple orientations
        0x13 == "left|center_vertical" 
         */
        public static final int kg_selector_gravity=0x7f090037;
        public static final int kg_widget_region_weight=0x7f090038;
        public static final int navigation_bar_deadzone_decay=0x7f090009;
        /**  decay duration (from size_max -> size), in ms 
         */
        public static final int navigation_bar_deadzone_hold=0x7f090008;
        /**  top|center_horizontal 
         */
        public static final int notification_panel_layout_gravity=0x7f090033;
        /**  The length of the vibration when the notification pops open. 
         */
        public static final int one_finger_pop_duration_ms=0x7f090006;
        public static final int quick_settings_brightness_dialog_long_timeout=0x7f090010;
        /**  Timeouts for brightness dialog to disappear 
         */
        public static final int quick_settings_brightness_dialog_short_timeout=0x7f09000f;
        /**  The maximum number of rows in the QuickSettings 
 The maximum number of rows in the QuickSettings 
 The maximum number of rows in the QuickSettings 
         */
        public static final int quick_settings_max_rows=0x7f09000c;
        /**  The maximum number of rows in the QuickSettings when on the keyguard 
         */
        public static final int quick_settings_max_rows_keyguard=0x7f09000d;
        /**  The number of columns in the QuickSettings 
         */
        public static final int quick_settings_num_columns=0x7f09000b;
        /**  The number of columns that the top level tiles span in the QuickSettings 
 The number of columns that the top level tiles span in the QuickSettings 
 The number of columns that the top level tiles span in the QuickSettings 
         */
        public static final int quick_settings_user_time_settings_tile_span=0x7f09000e;
        /**  The delay to enforce between each alt-tab key press. 
         */
        public static final int recents_alt_tab_key_delay=0x7f090024;
        /**  The long duration when animating in/out the lock to app button. 
         */
        public static final int recents_animate_lock_to_app_button_long_duration=0x7f09001f;
        /**  The short duration when animating in/out the lock to app button. 
         */
        public static final int recents_animate_lock_to_app_button_short_duration=0x7f09001e;
        /**  The animation delay for animating the first task in. This should roughly be the animation
     duration of the transition in to recents. 
         */
        public static final int recents_animate_task_bar_enter_delay=0x7f090018;
        /**  The min animation duration for animating the task bar in. 
         */
        public static final int recents_animate_task_bar_enter_duration=0x7f090017;
        /**  The min animation duration for animating the task bar out. 
         */
        public static final int recents_animate_task_bar_exit_duration=0x7f09001a;
        /**  The animation delay for animating the first task in. This should roughly be the animation
     duration of the transition in to recents from home. 
         */
        public static final int recents_animate_task_enter_from_home_delay=0x7f09001b;
        /**  The min animation duration for animating the task in when transitioning from home. 
         */
        public static final int recents_animate_task_enter_from_home_duration=0x7f09001c;
        /**  The animation stagger to apply to each task animation when transitioning from home. 
         */
        public static final int recents_animate_task_enter_from_home_stagger_delay=0x7f09001d;
        /**  The min animation duration for animating the task bar out. 
         */
        public static final int recents_animate_task_exit_to_home_duration=0x7f090019;
        /**  The animation duration for scrolling the stack to a particular item. 
         */
        public static final int recents_animate_task_stack_scroll_duration=0x7f090022;
        /**  The animation duration for animating the removal of a task view. 
         */
        public static final int recents_animate_task_view_remove_duration=0x7f090021;
        /**  The min animation duration for animating views that are currently visible. 
         */
        public static final int recents_filter_animate_current_views_duration=0x7f090015;
        /**  The min animation duration for animating views that are newly visible. 
         */
        public static final int recents_filter_animate_new_views_duration=0x7f090016;
        /**  The minimum alpha for the dim applied to cards that go deeper into the stack. 
         */
        public static final int recents_max_task_stack_view_dim=0x7f090023;
        /**  The min animation duration for animating the nav bar scrim in. 
         */
        public static final int recents_nav_bar_scrim_enter_duration=0x7f090020;
        /**  The duration in seconds to wait before the dismiss buttons are shown. 
         */
        public static final int recents_task_bar_dismiss_delay_seconds=0x7f090014;
        /**  Gravity for the notification panel 
         */
        public static final int standard_notification_panel_layout_gravity=0x7f090032;
        public static final int status_bar_config_maxNotificationIcons=0x7f090031;
        /**  Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
 Whether we're using the tablet-optimized recents interface (we use this
     value at runtime for some things) 
         */
        public static final int status_bar_recents_bg_gradient_degrees=0x7f090007;
        /**  87% of 0xff 
 Volume: time to delay dismissing the volume panel after a click is performed 
         */
        public static final int volume_panel_dismiss_delay=0x7f09002c;
        /**  Number of times to show the strong alarm warning text in the volume dialog 
         */
        public static final int zen_mode_alarm_warning_threshold=0x7f09002e;
        /**  Zen toast fade in/out duration 
         */
        public static final int zen_toast_animation_duration=0x7f09002f;
        /**  Zen toast visibility duration 
         */
        public static final int zen_toast_visible_duration=0x7f090030;
    }
    public static final class layout {
        public static final int carrier_label=0x7f040000;
        public static final int data_usage=0x7f040001;
        public static final int global_screenshot=0x7f040002;
        public static final int heads_up=0x7f040003;
        public static final int keyguard_account_view=0x7f040004;
        public static final int keyguard_add_widget=0x7f040005;
        public static final int keyguard_bottom_area=0x7f040006;
        public static final int keyguard_bouncer=0x7f040007;
        /**  Alias used to reference one of two possible layouts in keyguard.  
 Alias used to reference one of two possible layouts in keyguard.  
         */
        public static final int keyguard_eca=0x7f04004f;
        public static final int keyguard_emergency_carrier_area=0x7f040008;
        public static final int keyguard_face_unlock_view=0x7f040009;
        public static final int keyguard_glow_pad_container=0x7f04000a;
        public static final int keyguard_glow_pad_view=0x7f04000b;
        public static final int keyguard_host_view=0x7f04000c;
        public static final int keyguard_message_area=0x7f04000d;
        public static final int keyguard_message_area_large=0x7f04000e;
        public static final int keyguard_multi_user_avatar=0x7f04000f;
        public static final int keyguard_multi_user_selector=0x7f040010;
        public static final int keyguard_num_pad_key=0x7f040011;
        public static final int keyguard_password_view=0x7f040012;
        public static final int keyguard_pattern_view=0x7f040013;
        public static final int keyguard_pin_view=0x7f040014;
        public static final int keyguard_presentation=0x7f040015;
        public static final int keyguard_selector_view=0x7f040016;
        public static final int keyguard_sim_pin_view=0x7f040017;
        public static final int keyguard_sim_puk_view=0x7f040018;
        public static final int keyguard_simple_host_view=0x7f040019;
        public static final int keyguard_status_area=0x7f04001a;
        public static final int keyguard_status_bar=0x7f04001b;
        public static final int keyguard_status_view=0x7f04001c;
        public static final int keyguard_transport_control_view=0x7f04001d;
        public static final int keyguard_user_switcher=0x7f04001e;
        public static final int keyguard_user_switcher_item=0x7f04001f;
        public static final int keyguard_widget_pager=0x7f040020;
        public static final int keyguard_widget_remove_drop_target=0x7f040021;
        public static final int lland=0x7f040022;
        public static final int navigation_bar=0x7f040023;
        public static final int notification_guts=0x7f040024;
        public static final int notification_public_default=0x7f040025;
        public static final int qs_detail=0x7f040026;
        public static final int qs_detail_header=0x7f040027;
        public static final int qs_detail_item=0x7f040028;
        public static final int qs_detail_items=0x7f040029;
        public static final int qs_panel=0x7f04002a;
        public static final int qs_user_detail=0x7f04002b;
        public static final int qs_user_detail_item=0x7f04002c;
        public static final int quick_settings_brightness_dialog=0x7f04002d;
        public static final int quick_settings_footer=0x7f04002e;
        public static final int recents=0x7f04002f;
        public static final int recents_debug_overlay=0x7f040030;
        public static final int recents_empty=0x7f040031;
        public static final int recents_search_bar=0x7f040032;
        public static final int recents_task_view=0x7f040033;
        public static final int recents_task_view_header=0x7f040034;
        public static final int remember_permission_checkbox=0x7f040035;
        public static final int segmented_button=0x7f040036;
        public static final int signal_cluster_view=0x7f040037;
        public static final int split_clock_view=0x7f040038;
        public static final int status_bar=0x7f040039;
        public static final int status_bar_expanded=0x7f04003a;
        public static final int status_bar_expanded_header=0x7f04003b;
        public static final int status_bar_no_notifications=0x7f04003c;
        public static final int status_bar_no_recent_apps=0x7f04003d;
        public static final int status_bar_notification_dismiss_all=0x7f04003e;
        public static final int status_bar_notification_keyguard_overflow=0x7f04003f;
        public static final int status_bar_notification_row=0x7f040040;
        public static final int status_bar_notification_speed_bump=0x7f040041;
        public static final int status_bar_recent_item=0x7f040042;
        public static final int status_bar_recent_panel=0x7f040043;
        public static final int status_bar_search_panel=0x7f040044;
        public static final int status_bar_ticker=0x7f040045;
        public static final int status_bar_toggle_slider=0x7f040046;
        public static final int super_status_bar=0x7f040047;
        public static final int system_icons=0x7f040048;
        public static final int volume_dialog=0x7f040049;
        public static final int volume_panel=0x7f04004a;
        public static final int volume_panel_item=0x7f04004b;
        public static final int zen_mode_condition=0x7f04004c;
        public static final int zen_mode_panel=0x7f04004d;
        public static final int zen_toast=0x7f04004e;
    }
    public static final class menu {
        public static final int recent_popup_menu=0x7f100000;
    }
    public static final class mipmap {
        public static final int ic_daydreams=0x7f030000;
        public static final int ic_launcher_dreams=0x7f030001;
    }
    public static final class plurals {
        /**  Instructions telling the user that they entered the wrong SIM PIN while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_pin_code=0x7f0f0001;
        /**  Instructions telling the user that they entered the wrong puk while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_puk_code=0x7f0f0002;
        /**  Message that is read when you enter recent apps in TalkBack 
         */
        public static final int status_bar_accessibility_recent_apps=0x7f0f0000;
    }
    public static final class string {
        /**  Skeleton string format for displaying the date. 
         */
        public static final int abbrev_wday_month_day_no_year=0x7f0b0169;
        /**  Skeleton string format for displaying the date when an alarm is set. 
         */
        public static final int abbrev_wday_month_day_no_year_alarm=0x7f0b016a;
        /**  Content description of the airplane mode icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_airplane_mode=0x7f0b0084;
        /**  Content description of the back button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_back=0x7f0b0040;
        /**  Content description of the battery when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_full=0x7f0b0054;
        /**  Content description of the battery level icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_level=0x7f0b0085;
        /**  Content description of the battery when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_one_bar=0x7f0b0051;
        /**  Content description of the battery when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_three_bars=0x7f0b0053;
        /**  Content description of the battery when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_battery_two_bars=0x7f0b0052;
        /**  Content description of the bluetooth icon when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_connected=0x7f0b004e;
        /**  Content description of the bluetooth icon when connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_disconnected=0x7f0b004f;
        /**  Content description of the bluetooth label showing what we are connected to. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_name=0x7f0b0066;
        /**  Content description of the bluetooth tethering icon for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_bluetooth_tether=0x7f0b0083;
        /**  Content description of the display brightness slider (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_brightness=0x7f0b00b9;
        /**  Content description of the camera button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_camera_button=0x7f0b0045;
        /**  Content description of the cast icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_casting=0x7f0b008e;
        /**  Announcement made when the screen stopped casting (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_casting_turned_off=0x7f0b00b8;
        /**  Content description of the clear button in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_clear_all=0x7f0b00c5;
        /**  Content description of the compatibility zoom button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_compatibility_zoom_button=0x7f0b004c;
        /**  Content description of picture of the compatibility zoom example for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_compatibility_zoom_example=0x7f0b004d;
        /**  Content description of the data connection type 1x for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_1x=0x7f0b0078;
        /**  Content description of the data connection type 3.5G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_3_5g=0x7f0b007b;
        /**  Content description of the data connection type 3G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_3g=0x7f0b007a;
        /**  Content description of the data connection type 4G for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_4g=0x7f0b007c;
        /**  Content description of the data connection type CDMA for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_cdma=0x7f0b007e;
        /**  Content description of the data connection type Edge for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_edge=0x7f0b0080;
        /**  Content description of the data connection type GPRS for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_gprs=0x7f0b0077;
        /**  Content description of the data connection type HSPA and its variants for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_hspa=0x7f0b0079;
        /**  Content description of the data connection type LTE for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_lte=0x7f0b007d;
        /**  Content description of the roaming data connection type for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_roaming=0x7f0b007f;
        /**  Content description of the data connection type WiFi for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_connection_wifi=0x7f0b0081;
        /**  Content description of the data signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_one_bar=0x7f0b005b;
        /**  Content description of the data signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_signal_full=0x7f0b005e;
        /**  Content description of the data signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_three_bars=0x7f0b005d;
        /**  Content description of the data signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_data_two_bars=0x7f0b005c;
        /**  Content description of an item that is connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_connected=0x7f0b0075;
        /**  Content description of an item that is connecting for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_connecting=0x7f0b0076;
        /**  Content description for the lock screen (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_lock_screen=0x7f0b0095;
        /**  Content description for the notification shade panel (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_notification_shade=0x7f0b0093;
        /**  Content description of an item that is turned off for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_off=0x7f0b0074;
        /**  Content description of an item that is turned on for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_on=0x7f0b0073;
        /**  Content description for the quick settings panel (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_quick_settings=0x7f0b0094;
        /**  Content description for the recent apps panel (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_recent_apps=0x7f0b0097;
        /**  Content description for the settings button in the status bar header. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_desc_settings=0x7f0b0096;
        /**  Content description of the acquiring GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_gps_acquiring=0x7f0b008a;
        /**  Content description of the enabled GPS icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_gps_enabled=0x7f0b0089;
        /**  Content description of the home button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_home=0x7f0b0041;
        /**  Content description of the switch input method button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ime_switch_button=0x7f0b004b;
        /**  Accessibility text describing the presence of active location requests by one or more apps 
         */
        public static final int accessibility_location_active=0x7f0b00c4;
        /**  Content description of the menu button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_menu=0x7f0b0042;
        /**  Accessibility label for the button that opens the quick contact of the user. 
         */
        public static final int accessibility_multi_user_switch_quick_contact=0x7f0b0125;
        /**  Accessibility label for the button that opens the user switcher. 
         */
        public static final int accessibility_multi_user_switch_switcher=0x7f0b0123;
        /**  Accessibility label for the button that opens the user switcher and announces the current user. 
         */
        public static final int accessibility_multi_user_switch_switcher_with_current=0x7f0b0124;
        /**  Content description of the battery when no battery for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_battery=0x7f0b0050;
        /**  Content description of the data signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_data=0x7f0b005a;
        /**  Content description of the phone signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_phone=0x7f0b0055;
        /**  Content description of an item with no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_signal=0x7f0b006c;
        /**  Content description of the data connection with no SIM for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_sim=0x7f0b0082;
        /**  Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_wifi=0x7f0b0060;
        /**  Content description of the WiMAX signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_wimax=0x7f0b0067;
        /**  Content description of an item with no signal and no connection for accessibility (not shown on the screen) [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_not_connected=0x7f0b006d;
        /**  Content description to tell the user a notification has been removed from the notification shade 
         */
        public static final int accessibility_notification_dismissed=0x7f0b0092;
        /**  Content description of the button for showing a notifications panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_notifications_button=0x7f0b0087;
        /**  Content description of an item with one signal bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_one_bar=0x7f0b006f;
        /**  Content description of the phone button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_button=0x7f0b0046;
        /**  Content description of the phone signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_one_bar=0x7f0b0056;
        /**  Content description of the phone signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_signal_full=0x7f0b0059;
        /**  Content description of the phone signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_three_bars=0x7f0b0058;
        /**  Content description of the phone signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_phone_two_bars=0x7f0b0057;
        public static final int accessibility_quick_settings_airplane=0x7f0b015c;
        /**  Announcement made when the airplane mode changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_changed_off=0x7f0b00a0;
        /**  Announcement made when the airplane mode changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_changed_on=0x7f0b00a1;
        /**  Content description of the airplane mode tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_off=0x7f0b009e;
        /**  Content description of the airplane mode tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_airplane_on=0x7f0b009f;
        /**  Content description of the alarm tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_alarm=0x7f0b00ac;
        /**  Content description of the battery tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_battery=0x7f0b009d;
        public static final int accessibility_quick_settings_bluetooth=0x7f0b015d;
        /**  Announcement made when the bluetooth is turned off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_changed_off=0x7f0b00a6;
        /**  Announcement made when the bluetooth is turned on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_changed_on=0x7f0b00a7;
        /**  Content description of the bluetooth tile in quick settings when connected (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_connected=0x7f0b00a5;
        /**  Content description of the bluetooth tile in quick settings when connecting (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_connecting=0x7f0b00a4;
        /**  Content description of the bluetooth tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_off=0x7f0b00a2;
        /**  Content description of the bluetooth tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_bluetooth_on=0x7f0b00a3;
        /**  Content description of quick settings detail panel close button (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_close=0x7f0b00ad;
        /**  Announcement made when the color inversion state changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_color_inversion_changed_off=0x7f0b00b4;
        /**  Announcement made when the color inversion state changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_color_inversion_changed_on=0x7f0b00b5;
        /**  Announcement made when the flashlight state changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_changed_off=0x7f0b00b2;
        /**  Announcement made when the flashlight state changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_changed_on=0x7f0b00b3;
        /**  Content description of the flashlight tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_off=0x7f0b00b0;
        /**  Content description of the flashlight tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_flashlight_on=0x7f0b00b1;
        /**  Announcement made when the hotspot state changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_hotspot_changed_off=0x7f0b00b6;
        /**  Announcement made when the hotspot state changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_hotspot_changed_on=0x7f0b00b7;
        /**  Content description of zen mode time condition minus button (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_less_time=0x7f0b00af;
        /**  Announcement made when the location tile changes to off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_changed_off=0x7f0b00aa;
        /**  Announcement made when the location tile changes to on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_changed_on=0x7f0b00ab;
        /**  Content description of the location tile in quick settings when off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_off=0x7f0b00a8;
        /**  Content description of the location tile in quick settings when on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_location_on=0x7f0b00a9;
        /**  Content description of the mobile data tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_mobile=0x7f0b009c;
        /**  Content description of zen mode time condition plus button (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_more_time=0x7f0b00ae;
        /**  Content description of the user tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_user=0x7f0b0098;
        /**  Content description of the wifi tile in quick settings (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_wifi=0x7f0b0099;
        /**  Announcement made when the wifi is turned off (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_wifi_changed_off=0x7f0b009a;
        /**  Announcement made when the wifi is turned on (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_quick_settings_wifi_changed_on=0x7f0b009b;
        /**  Content description of the recents button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_recent=0x7f0b0043;
        /**  Content description to tell the user an application has been removed from recents 
         */
        public static final int accessibility_recents_item_dismissed=0x7f0b0090;
        /**  Content description to tell the user an application has been launched from recents 
         */
        public static final int accessibility_recents_item_launched=0x7f0b0091;
        /**  Content description to tell the user that this button will remove an application from recents 
         */
        public static final int accessibility_recents_item_will_be_dismissed=0x7f0b008f;
        /**  Content description of the button for removing a notification in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_remove_notification=0x7f0b0088;
        /**  Content description of the ringer silent icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ringer_silent=0x7f0b008d;
        /**  Content description of the ringer vibrate icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_ringer_vibrate=0x7f0b008c;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is on. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_off=0x7f0b00c8;
        /**  Announcement made when the screen is rotating automatically again (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_off_changed=0x7f0b00cb;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_landscape=0x7f0b00c9;
        /**  Announcement made when the rotation lock state changes to landscape only (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_landscape_changed=0x7f0b00cc;
        /**  Description of the button in the phone-style notification panel that controls auto-rotation, when auto-rotation is off. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_portrait=0x7f0b00ca;
        /**  Announcement made when the rotation lock state changes to portrait only (not shown on the screen).  [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_rotation_lock_on_portrait_changed=0x7f0b00cd;
        /**  Content description of the search button for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_search_light=0x7f0b0044;
        /**  Content description of the button for showing a settings panel in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_settings_button=0x7f0b0086;
        /**  Content description of an item with full signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_signal_full=0x7f0b0072;
        /**  Content description of an item with three signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_three_bars=0x7f0b0071;
        /**  Content description of the TeleTypewriter(TTY) enabled icon in the notification panel for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_tty_enabled=0x7f0b008b;
        /**  Content description of an item with two signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_two_bars=0x7f0b0070;
        /**  Content description of the unlock button for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_unlock_button=0x7f0b0047;
        /**  Content description of the wifi label showing what we are connected to. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_name=0x7f0b0065;
        /**  Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_off=0x7f0b005f;
        /**  Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_one_bar=0x7f0b0061;
        /**  Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_signal_full=0x7f0b0064;
        /**  Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_three_bars=0x7f0b0063;
        /**  Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_two_bars=0x7f0b0062;
        /**  Content description of the WiMAX signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_one_bar=0x7f0b0068;
        /**  Content description of the WiMAX signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_signal_full=0x7f0b006b;
        /**  Content description of the WiMAX signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_three_bars=0x7f0b006a;
        /**  Content description of the WiMAX signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wimax_two_bars=0x7f0b0069;
        /**  Content description of an item with zero signal bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_zero_bars=0x7f0b006e;
        /**  Checkbox label for USB accessory dialogs.  [CHAR LIMIT=50] 
         */
        public static final int always_use_accessory=0x7f0b002f;
        /**  Checkbox label for USB device dialogs.  [CHAR LIMIT=50] 
         */
        public static final int always_use_device=0x7f0b002e;
        /**  Name of the status bar as seen in the applications info settings page. [CHAR LIMIT=12] 
         */
        public static final int app_label=0x7f0b0008;
        /**  App label in the manifest  
         */
        public static final int app_name=0x7f0b016d;
        /**  Battery level for expanded quick settings [CHAR LIMIT=2] 
         */
        public static final int battery_level_template=0x7f0b0137;
        /**  A message that appears when the battery level is getting low in a dialog.  This is
        appened to the subtitle of the low battery alert.  "number" is the percentage of battery
        remaining [CHAR LIMIT=none]
         */
        public static final int battery_low_percent_format=0x7f0b0012;
        /**  Same as battery_low_percent_format, with a notice about battery saver if on. [CHAR LIMIT=none]
         */
        public static final int battery_low_percent_format_saver_started=0x7f0b0013;
        public static final int battery_low_subtitle=0x7f0b015b;
        /**  When the battery is low, this is displayed to the user in a dialog.  The title of the low battery alert.  [CHAR LIMIT=NONE]
         */
        public static final int battery_low_title=0x7f0b0011;
        /**  When the battery is low, this is the label of the button to go to the
         power usage activity to find out what drained the battery.  [CHAR LIMIT=30] 
         */
        public static final int battery_low_why=0x7f0b0017;
        /**  Glyph to be overlaid atop the battery when the level is extremely low. Do not translate. 
         */
        public static final int battery_meter_very_low_overlay_symbol=0x7f0b010e;
        /**  Battery saver confirmation dialog ok text [CHAR LIMIT=40]
         */
        public static final int battery_saver_confirmation_ok=0x7f0b0019;
        /**  Battery saver confirmation dialog title [CHAR LIMIT=NONE]
         */
        public static final int battery_saver_confirmation_title=0x7f0b0018;
        /**  Battery saver notification action text. [CHAR LIMIT=60] 
         */
        public static final int battery_saver_notification_action_text=0x7f0b0136;
        /**  Battery saver notification text. [CHAR LIMIT=60] 
         */
        public static final int battery_saver_notification_text=0x7f0b0135;
        /**  Battery saver notification title. [CHAR LIMIT=60]
         */
        public static final int battery_saver_notification_title=0x7f0b0134;
        /**  Battery saver notification action [CHAR LIMIT=NONE]
         */
        public static final int battery_saver_start_action=0x7f0b001a;
        /**  Network connection string for Bluetooth Reverse Tethering 
         */
        public static final int bluetooth_tethered=0x7f0b0024;
        /**  Shows when people have clicked at the right edge of the screen to explain how to open the phone. In right-to-left languages, this is the opposite direction. [CHAR LIMIT=60] 
         */
        public static final int camera_hint=0x7f0b011e;
        /**  Click action label for accessibility for the phone button. [CHAR LIMIT=NONE] 
         */
        public static final int camera_label=0x7f0b004a;
        /**  The text to clear all notifications. [CHAR LIMIT=60] 
         */
        public static final int clear_all_notifications_text=0x7f0b013b;
        /**  Skeleton string format for displaying the time in 12-hour format. 
         */
        public static final int clock_12hr_format=0x7f0b016b;
        /**  Skeleton string format for displaying the time in 24-hour format. 
         */
        public static final int clock_24hr_format=0x7f0b016c;
        /**  Checkbox label for application compatibility mode OFF (normal mode on tablets).
         [CHAR LIMIT=25] 
         */
        public static final int compat_mode_off=0x7f0b0034;
        /**  Checkbox label for application compatibility mode ON (zooming app to look like it's running
         on a phone).  [CHAR LIMIT=25] 
         */
        public static final int compat_mode_on=0x7f0b0033;
        /**  Component to be used as the status bar service.  Must implement the IStatusBar
     interface.  This name is in the ComponentName flattened format (package/class)  
         */
        public static final int config_statusBarComponent=0x7f0b0000;
        /**  Body of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_disabled_dialog=0x7f0b00be;
        /**  Title of dialog shown when 2G-3G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_3g_title=0x7f0b00ba;
        /**  Title of dialog shown when 4G data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_4g_title=0x7f0b00bb;
        /**  Dialog button indicating that data connection should be re-enabled. [CHAR LIMIT=28] 
         */
        public static final int data_usage_disabled_dialog_enable=0x7f0b00bf;
        /**  Title of dialog shown when mobile data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_mobile_title=0x7f0b00bc;
        /**  Title of dialog shown when data usage has exceeded limit and has been disabled. [CHAR LIMIT=48] 
         */
        public static final int data_usage_disabled_dialog_title=0x7f0b00bd;
        /**  Description of the down direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_down=0x7f0b01b7;
        /**  Description of the left direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
 Description of the left direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_left=0x7f0b0112;
        /**  Description of the right direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_right=0x7f0b01b8;
        /**  Description of the up direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
 Description of the up direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_up=0x7f0b0111;
        /**  Description of the camera target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_camera=0x7f0b01b4;
        /**  Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] 
 Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_search=0x7f0b0110;
        /**  Description of the silent target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_silent=0x7f0b01b5;
        /**  Description of the sound on target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_soundon=0x7f0b01b6;
        /**  Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_unlock=0x7f0b01b3;
        /**  Name of the K-release easter egg: a display case for all our tastiest desserts. [CHAR LIMIT=30] 
         */
        public static final int dessert_case=0x7f0b00ce;
        /**  Footer device owned text [CHAR LIMIT=50] 
         */
        public static final int device_owned_footer=0x7f0b013e;
        /**  Monitoring dialog disable vpn button [CHAR LIMIT=30] 
         */
        public static final int disable_vpn=0x7f0b0144;
        /**  Monitoring dialog disconnect vpn button [CHAR LIMIT=30] 
         */
        public static final int disconnect_vpn=0x7f0b0145;
        public static final int done_button=0x7f0b0161;
        /**  Doze: when to pulse after a buzzworthy notification arrives 
         */
        public static final int doze_pulse_schedule=0x7f0b0004;
        /**  Text which is shown in the notification shade when there are no notifications. [CHAR LIMIT=30] 
         */
        public static final int empty_shade_text=0x7f0b013d;
        /**  Textual description of Ethernet connections 
         */
        public static final int ethernet_label=0x7f0b00d0;
        /**  Expanded Status Bar Header: Battery Charged [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_charged=0x7f0b010a;
        /**  Expanded Status Bar Header: Charging, no known time [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_charging=0x7f0b010b;
        /**  Expanded Status Bar Header: Charging, showing time left until charged [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_charging_with_time=0x7f0b010c;
        /**  Expanded Status Bar Header: Not charging [CHAR LIMIT=40] 
         */
        public static final int expanded_header_battery_not_charging=0x7f0b010d;
        /**  Shown when face unlock failed multiple times so we're just using the backup 
         */
        public static final int faceunlock_multiple_failures=0x7f0b0177;
        /**  Notification text: when GPS has found a fix [CHAR LIMIT=50] 
         */
        public static final int gps_notification_found_text=0x7f0b00c3;
        /**  Notification text: when GPS is getting a fix [CHAR LIMIT=50] 
         */
        public static final int gps_notification_searching_text=0x7f0b00c2;
        /**  Label for exiting and removing the  guest session in the user switcher [CHAR LIMIT=35] 
         */
        public static final int guest_exit_guest=0x7f0b012a;
        /**  Message of the confirmation dialog when exiting guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_exit_guest_dialog_message=0x7f0b012c;
        /**  Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35] 
         */
        public static final int guest_exit_guest_dialog_remove=0x7f0b012d;
        /**  Title of the confirmation dialog when exiting guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_exit_guest_dialog_title=0x7f0b012b;
        /**  Label for adding a new guest in the user switcher [CHAR LIMIT=35] 
         */
        public static final int guest_new_guest=0x7f0b0129;
        /**  Name for the guest user [CHAR LIMIT=35] 
         */
        public static final int guest_nickname=0x7f0b0128;
        /**  Notification when resuming an existing guest session: Action that continues with the current session [CHAR LIMIT=35] 
         */
        public static final int guest_wipe_session_dontwipe=0x7f0b0131;
        /**  Message of the notification when resuming an existing guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_wipe_session_message=0x7f0b012f;
        /**  Title of the notification when resuming an existing guest session [CHAR LIMIT=NONE] 
         */
        public static final int guest_wipe_session_title=0x7f0b012e;
        /**  Notification when resuming an existing guest session: Action that starts a new session [CHAR LIMIT=35] 
         */
        public static final int guest_wipe_session_wipe=0x7f0b0130;
        /**  Cancel action for notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=20] 
         */
        public static final int hidden_notifications_cancel=0x7f0b0154;
        /**  continue action for notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=20] 
         */
        public static final int hidden_notifications_setup=0x7f0b0155;
        /**  Body of notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=60] 
         */
        public static final int hidden_notifications_text=0x7f0b0153;
        /**  Title of notification educating the user about enabling notifications on the lockscreen. [CHAR LIMIT=40] 
         */
        public static final int hidden_notifications_title=0x7f0b0152;
        /**  Label for the installer CD image option in UsbPreferenceActivity. [CHAR LIMIT=50] 
         */
        public static final int installer_cd_button_title=0x7f0b003f;
        /**  Interruption level: All. [CHAR LIMIT=20] 
         */
        public static final int interruption_level_all=0x7f0b0121;
        /**  Interruption level: None. [CHAR LIMIT=20] 
         */
        public static final int interruption_level_none=0x7f0b011f;
        /**  Interruption level: Priority. [CHAR LIMIT=20] 
         */
        public static final int interruption_level_priority=0x7f0b0120;
        /**  A message that appears when a USB charger is plugged in and the device does not
    support charging on it.  That is, a charger that fits into the USB port and goes into
    a wall socket, not into a computer. (This happens because some devices require more
    current than the USB spec allows.  [CHAR LIMIT=NONE] 
         */
        public static final int invalid_charger=0x7f0b0014;
        /**  Second line of invalid_charger, used in the notification form.  [CHAR LIMIT=NONE]
         */
        public static final int invalid_charger_text=0x7f0b0016;
        /**  First line of invalid_charger, used in the notification form.  [CHAR LIMIT=NONE]
         */
        public static final int invalid_charger_title=0x7f0b0015;
        public static final int jelly_bean_dream_name=0x7f0b015e;
        /**  Description of the Alt button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_alt=0x7f0b01ac;
        /**  Description of the Cancel button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_cancel=0x7f0b01ad;
        /**  Description of the Delete button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_delete=0x7f0b01ae;
        /**  Description of the Done button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_done=0x7f0b01af;
        /**  Description of the Enter button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_enter=0x7f0b01b2;
        /**  Description of the Mode change button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_mode_change=0x7f0b01b0;
        /**  Description of the Shift button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_shift=0x7f0b01b1;
        /**  Accessibility description of the lock media control widget. [CHAR_LIMIT=none] 
         */
        public static final int keygaurd_accessibility_media_controls=0x7f0b0190;
        /**  Accessibility description of the add widget button. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_add_widget=0x7f0b0189;
        /**  Accessibility description of the camera widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_camera=0x7f0b018f;
        /**  Accessibility description announced when user drags widget away from delete drop target [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_delete_widget_end=0x7f0b01a7;
        /**  Accessibility description announced when user drags widget over the delete drop target [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_delete_widget_start=0x7f0b01a6;
        /**  Accessibility description of the button to expand the lock area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_expand_lock_area=0x7f0b0194;
        /**  Accessibility description of the face unlock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_face_unlock=0x7f0b0197;
        /**  Accessibility description for when the bouncer prompt is dismissed. [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_hide_bouncer=0x7f0b01a5;
        /**  Accessibility description for the text view that indicates when the next alarm is set (not shown on screen). [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_next_alarm=0x7f0b01a8;
        /**  Accessibility description of the password lock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_password_unlock=0x7f0b0199;
        /**  Accessibility description of the unlock pattern area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pattern_area=0x7f0b019a;
        /**  Accessibility description of the pattern unlock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pattern_unlock=0x7f0b0196;
        /**  Accessibility description of the pin lock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pin_unlock=0x7f0b0198;
        /**  Accessibility description for when the device prompts the user to dismiss keyguard
         in order to complete an action. This will be followed by a message about the current
         security option (e.g. "Pattern unlock."). [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_show_bouncer=0x7f0b01a4;
        /**  Accessibility description of the unlock slide area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_slide_area=0x7f0b019b;
        /**  Accessibility description of the slide unlock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_slide_unlock=0x7f0b0195;
        public static final int keyguard_accessibility_status=0x7f0b01e7;
        /**  Shown on transport control of lockscreen. Pressing button toggles the "heart" rating. 
         */
        public static final int keyguard_accessibility_transport_heart_description=0x7f0b01a3;
        /**  Shown on transport control of lockscreen. Pressing button goes to next track. 
         */
        public static final int keyguard_accessibility_transport_next_description=0x7f0b019d;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_accessibility_transport_pause_description=0x7f0b019e;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_accessibility_transport_play_description=0x7f0b019f;
        /**  Shown on transport control of lockscreen. Pressing button goes to previous track. 
         */
        public static final int keyguard_accessibility_transport_prev_description=0x7f0b019c;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_accessibility_transport_stop_description=0x7f0b01a0;
        /**  Shown on transport control of lockscreen. Pressing button rates the track as "thumbs down." 
         */
        public static final int keyguard_accessibility_transport_thumbs_down_description=0x7f0b01a2;
        /**  Shown on transport control of lockscreen. Pressing button rates the track as "thumbs up." 
         */
        public static final int keyguard_accessibility_transport_thumbs_up_description=0x7f0b01a1;
        /**  Accessibility description of the event of collapsing an unlock area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_unlock_area_collapsed=0x7f0b018c;
        /**  Accessibility description of the event of expanding an unlock area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_unlock_area_expanded=0x7f0b018b;
        /**  Accessibility description of the lock screen user selector widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_user_selector=0x7f0b018e;
        /**  Accessibility description of a lock screen widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget=0x7f0b018d;
        /**  Accessibility description sent when user changes the current lock screen widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_changed=0x7f0b0188;
        /**  Accessibility description of the a widget deletion event. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_deleted=0x7f0b0193;
        /**  Accessibility description of the empty sidget slot (place holder for a new widget). [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_empty_slot=0x7f0b018a;
        /**  Accessibility description of widget reordering end. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_reorder_end=0x7f0b0192;
        /**  Accessibility description of widget reordering start. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_reorder_start=0x7f0b0191;
        /**  On the keyguard screen, it shows the carrier the phone is connected to.
        This is displayed if the phone is not connected to a carrier.
         */
        public static final int keyguard_carrier_default=0x7f0b01e6;
        /**  When the lock screen is showing, the phone is plugged in and the battery is fully
         charged, say that it is charged. 
         */
        public static final int keyguard_charged=0x7f0b0178;
        /**  Indication on the keyguard that is shown when the device is charging. [CHAR LIMIT=40]
         */
        public static final int keyguard_indication_charging_time=0x7f0b0122;
        /**  Indication on the keyguard that appears when the user disables trust agents until the next time they unlock manually. [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_indication_trust_disabled=0x7f0b0151;
        /**  On the keyguard screen, when pattern lock is disabled, only tell them to press menu to unlock.  This is shown in small font at the bottom. 
         */
        public static final int keyguard_instructions_when_pattern_disabled=0x7f0b017b;
        /**  Instructions telling the user how to unlock the phone. 
         */
        public static final int keyguard_label_text=0x7f0b0176;
        /**  When the lock screen is showing and the battery is low, warn user to plug
         in the phone soon. 
         */
        public static final int keyguard_low_battery=0x7f0b017a;
        /**  Shown to ask the user to insert a SIM card. 
         */
        public static final int keyguard_missing_sim_instructions=0x7f0b017f;
        /**  Shown to ask the user to insert a SIM card when sim is missing or not readable. 
         */
        public static final int keyguard_missing_sim_instructions_long=0x7f0b0180;
        /**  Shown when there is no SIM card. 
         */
        public static final int keyguard_missing_sim_message=0x7f0b017e;
        /**  Shown when there is no SIM card. 
         */
        public static final int keyguard_missing_sim_message_short=0x7f0b017d;
        /**  Text for overflow card on Keyguard when there is not enough space for all notifications on Keyguard. [CHAR LIMIT=1] 
         */
        public static final int keyguard_more_overflow_text=0x7f0b0119;
        /**  When the user inserts a sim card from an unsupported network, it becomes network locked 
         */
        public static final int keyguard_network_locked_message=0x7f0b017c;
        /**  Instructions telling the user to enter their text password to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_password_code=0x7f0b0173;
        /**  Instructions telling the user to enter their SIM PIN to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_pin_code=0x7f0b016e;
        /**  Instructions telling the user to enter their PIN password to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_pin_password_code=0x7f0b0174;
        /**  Prompt to enter New SIM PIN in Edit Text Box in unlock screen 
         */
        public static final int keyguard_password_enter_pin_prompt=0x7f0b0171;
        /**  Instructions telling the user to enter their SIM PUK to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_puk_code=0x7f0b016f;
        /**  Prompt to enter SIM PUK in Edit Text Box in unlock screen 
         */
        public static final int keyguard_password_enter_puk_prompt=0x7f0b0170;
        /**  Displayed as hint in passwordEntry EditText on PasswordUnlockScreen [CHAR LIMIT=30]
         */
        public static final int keyguard_password_entry_touch_hint=0x7f0b0172;
        /**  Instructions telling the user that they entered the wrong pin while trying
         to unlock the keyguard.  Displayed in one line in a large font.  
         */
        public static final int keyguard_password_wrong_pin_code=0x7f0b0175;
        /**  Shown to inform the user to SIM card is permanently disabled. 
         */
        public static final int keyguard_permanent_disabled_sim_instructions=0x7f0b0182;
        /**  Shown when SIM card is permanently disabled. 
         */
        public static final int keyguard_permanent_disabled_sim_message_short=0x7f0b0181;
        /**  When the lock screen is showing and the phone plugged in, and the battery
         is not fully charged, say that it's charging.  
         */
        public static final int keyguard_plugged_in=0x7f0b0179;
        /**  Shown to tell the user that their SIM is locked and they must unlock it. 
         */
        public static final int keyguard_sim_locked_message=0x7f0b0183;
        /**  When the user enters a wrong sim pin too many times, it becomes PUK locked (Pin Unlock Kode) 
         */
        public static final int keyguard_sim_puk_locked_message=0x7f0b0184;
        /**  For the unlock screen, When the user enters a sim unlock code, it takes a little while to check
         whether it is valid, and to unlock the sim if it is valid.  we display a
         progress dialog in the meantime.  this is the emssage. 
         */
        public static final int keyguard_sim_unlock_progress_dialog_message=0x7f0b0185;
        /**  Shown on transport control of lockscreen. Pressing button goes to next track. 
         */
        public static final int keyguard_transport_next_description=0x7f0b01e2;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_transport_pause_description=0x7f0b01e3;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_transport_play_description=0x7f0b01e4;
        /**  Transport control strings 
 Shown on transport control of lockscreen. Pressing button goes to previous track. 
         */
        public static final int keyguard_transport_prev_description=0x7f0b01e1;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_transport_stop_description=0x7f0b01e5;
        /**  Shows when people have pressed the unlock icon to explain how to unlock. [CHAR LIMIT=60] 
         */
        public static final int keyguard_unlock=0x7f0b011c;
        /**  Time format strings for fall-back clock widget 
         */
        public static final int keyguard_widget_12_hours_format=0x7f0b0186;
        /**  Time format strings for fall-back clock widget 
         */
        public static final int keyguard_widget_24_hours_format=0x7f0b0187;
        /**  Label shown on emergency call button in keyguard 
         */
        public static final int kg_emergency_call_label=0x7f0b01ba;
        /**  Message shown when the user needs to confirm the PIN they just entered in the PUK screen 
         */
        public static final int kg_enter_confirm_pin_hint=0x7f0b01c6;
        /**  Message shown in dialog when user is almost at the limit where they will be
    locked out and may have to enter an alternate username/password to unlock the phone 
         */
        public static final int kg_failed_attempts_almost_at_login=0x7f0b01d9;
        /**  Message shown when user is almost at the limit of password attempts where the device will be wiped. 
         */
        public static final int kg_failed_attempts_almost_at_wipe=0x7f0b01d7;
        /**  Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped 
         */
        public static final int kg_failed_attempts_now_wiping=0x7f0b01d8;
        /**  Message shown in pattern unlock after some number of unsuccessful attempts 
         */
        public static final int kg_forgot_pattern_button_text=0x7f0b01bb;
        /**  String shown in PUK screen when PIN codes don't match 
         */
        public static final int kg_invalid_confirm_pin_hint=0x7f0b01cb;
        /**  Message shown when the user enters an invalid PUK code 
         */
        public static final int kg_invalid_puk=0x7f0b01ca;
        /**  Message shown when the user enters an invalid SIM pin password in PUK screen 
         */
        public static final int kg_invalid_sim_pin_hint=0x7f0b01c8;
        /**  Message shown when the user enters an invalid PUK code in the PUK screen 
         */
        public static final int kg_invalid_sim_puk_hint=0x7f0b01c9;
        /**  Hint text shown when user has too many failed password attempts in account unlock screen of keyguard 
         */
        public static final int kg_login_account_recovery_hint=0x7f0b01d2;
        /**  Message shown while device checks username/password in account unlock screen of keyguard 
         */
        public static final int kg_login_checking_password=0x7f0b01d3;
        /**  Instructions show in account unlock screen allowing user to enter their email password 
         */
        public static final int kg_login_instructions=0x7f0b01cd;
        /**  Message shown when the user enters an invalid username/password combination in account unlock screen of keyguard 
         */
        public static final int kg_login_invalid_input=0x7f0b01d1;
        /**  Hint shown in TextView in account unlock screen of keyguard 
         */
        public static final int kg_login_password_hint=0x7f0b01cf;
        /**  Label shown on sign in button on account unlock screen of keyguard 
         */
        public static final int kg_login_submit_button=0x7f0b01d0;
        /**  Message shown when the user exceeds the maximum number of pattern attempts 
         */
        public static final int kg_login_too_many_attempts=0x7f0b01cc;
        /**  Hint shown in TextView in account unlock screen of keyguard 
         */
        public static final int kg_login_username_hint=0x7f0b01ce;
        /**  Instructions for using the password unlock screen 
         */
        public static final int kg_password_instructions=0x7f0b01c3;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with SIM PIN failed. Displayed in one line in a large font.  
         */
        public static final int kg_password_pin_failed=0x7f0b01de;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with PUK failed. Displayed in one line in a large font.  
         */
        public static final int kg_password_puk_failed=0x7f0b01df;
        public static final int kg_password_wrong_pin_code=0x7f0b01e8;
        /**  Instructions telling the user that they entered the wrong SIM PIN for the last time.
         Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_pin_code_pukked=0x7f0b01dc;
        /**  Instructions telling the user that they have exhausted SIM PUK retries and the SIM is now unusable.
         Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_puk_code_dead=0x7f0b01dd;
        /**  Instructions for using the pattern unlock screen 
         */
        public static final int kg_pattern_instructions=0x7f0b01c0;
        /**  Notification telling the user that the PIN1 they entered is valid 
         */
        public static final int kg_pin_accepted=0x7f0b01e0;
        /**  Instructions for using the PIN unlock screen 
         */
        public static final int kg_pin_instructions=0x7f0b01c2;
        /**  Hint shown in the PUK unlock screen PIN TextView 
         */
        public static final int kg_puk_enter_pin_hint=0x7f0b01c5;
        /**  Hint shown in the PUK screen that asks the user to enter the PUK code given to them by their provider 
         */
        public static final int kg_puk_enter_puk_hint=0x7f0b01c4;
        /**  The delete-widget drop target button text 
         */
        public static final int kg_reordering_delete_drop_target_text=0x7f0b01db;
        /**  Instructions for using the SIM PIN unlock screen 
         */
        public static final int kg_sim_pin_instructions=0x7f0b01c1;
        /**  Message shown in dialog while the device is unlocking the SIM card 
         */
        public static final int kg_sim_unlock_progress_dialog_message=0x7f0b01c7;
        /**  Sequence of characters used to separate message strings in keyguard. Typically just em-dash
         with spaces on either side. [CHAR LIMIT=3] 
         */
        public static final int kg_text_message_separator=0x7f0b01da;
        /**  Countdown message shown after too many failed unlock attempts 
         */
        public static final int kg_too_many_failed_attempts_countdown=0x7f0b01bf;
        /**  Message shown in dialog when max number of attempts are reached for password screen of keyguard 
         */
        public static final int kg_too_many_failed_password_attempts_dialog_message=0x7f0b01d5;
        public static final int kg_too_many_failed_pattern_attempts_dialog_message=0x7f0b01d6;
        /**  Message shown in dialog when max number of attempts are reached for PIN screen of keyguard 
         */
        public static final int kg_too_many_failed_pin_attempts_dialog_message=0x7f0b01d4;
        /**  Message shown when user enters wrong password 
         */
        public static final int kg_wrong_password=0x7f0b01bd;
        /**  Message shown when user enters wrong pattern 
         */
        public static final int kg_wrong_pattern=0x7f0b01bc;
        /**  Message shown when user enters wrong PIN 
         */
        public static final int kg_wrong_pin=0x7f0b01be;
        /**  View button label for USB dialogs.  [CHAR LIMIT=15] 
         */
        public static final int label_view=0x7f0b002d;
        /**  Name of the L Land easter egg. DO NOT TRANSLATE 
         */
        public static final int lland=0x7f0b0007;
        /**  Media projection permission dialog action text. [CHAR LIMIT=60] 
         */
        public static final int media_projection_action_text=0x7f0b013c;
        /**  Media projection permission dialog warning text. [CHAR LIMIT=NONE] 
         */
        public static final int media_projection_dialog_text=0x7f0b0139;
        /**  Media projection permission dialog permanent grant check box. [CHAR LIMIT=NONE] 
         */
        public static final int media_projection_remember_text=0x7f0b013a;
        /**  Monitoring dialog device and profile owner body text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_device_and_profile_owned=0x7f0b014c;
        /**  Monitoring dialog device owner body text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_device_owned=0x7f0b0146;
        /**  Monitoring dialog legacy VPN text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_legacy_vpn=0x7f0b0148;
        /**  Monitoring dialog legacy VPN with device and profile owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_legacy_vpn_device_and_profile_owned=0x7f0b0150;
        /**  Monitoring dialog legacy VPN with device owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_legacy_vpn_device_owned=0x7f0b014a;
        /**  Monitoring dialog legacy VPN with profile owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_legacy_vpn_profile_owned=0x7f0b014e;
        /**  Monitoring dialog profile owner body text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_profile_owned=0x7f0b014b;
        /**  Monitoring dialog non-legacy VPN text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn=0x7f0b0147;
        /**  Monitoring dialog non-legacy VPN with device and profile owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn_device_and_profile_owned=0x7f0b014f;
        /**  Monitoring dialog non-legacy VPN with device owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn_device_owned=0x7f0b0149;
        /**  Monitoring dialog non-legacy VPN with profile owner text [CHAR LIMIT=400] 
         */
        public static final int monitoring_description_vpn_profile_owned=0x7f0b014d;
        /**  Monitoring dialog title for normal devices  [CHAR LIMIT=35]
         */
        public static final int monitoring_title=0x7f0b0143;
        /**  Monitoring dialog title for device owned devices [CHAR LIMIT=35] 
         */
        public static final int monitoring_title_device_owned=0x7f0b0141;
        /**  Monitoring dialog title for profile owned devices [CHAR LIMIT=35] 
         */
        public static final int monitoring_title_profile_owned=0x7f0b0142;
        /**  Indication that the current volume and other effects (vibration) are being suppressed by a third party, such as a notification listener. [CHAR LIMIT=30] 
         */
        public static final int muted_by=0x7f0b0156;
        /**  Text shown in place of notification contents when the notification is hidden on a secure lockscreen 
         */
        public static final int notification_hidden_text=0x7f0b0138;
        /**  Shows to explain the double tap interaction with notifications: After tapping a notification on Keyguard, this will explain users to tap again to launch a notification. [CHAR LIMIT=60] 
         */
        public static final int notification_tap_again=0x7f0b011b;
        public static final int notifications_off_text=0x7f0b015a;
        public static final int notifications_off_title=0x7f0b0159;
        /**  Alias used to reference framework "OK" string in keyguard.  
         */
        public static final int ok=0x7f0b0166;
        /**  Label for "switch to alphabetic" key.  Must be short to fit on key! 
         */
        public static final int password_keyboard_label_alpha_key=0x7f0b01aa;
        /**  Label for ALT modifier key.  Must be short to fit on key! 
         */
        public static final int password_keyboard_label_alt_key=0x7f0b01ab;
        /**  Label for "switch to symbols" key.  Must be short to fit on key! 
         */
        public static final int password_keyboard_label_symbol_key=0x7f0b01a9;
        /**  Shows when people have clicked at the left edge of the screen to explain how to open the phone. In right-to-left languages, this is the opposite direction. [CHAR LIMIT=60] 
         */
        public static final int phone_hint=0x7f0b011d;
        /**  Click action label for accessibility for the phone button. [CHAR LIMIT=NONE] 
         */
        public static final int phone_label=0x7f0b0049;
        /**  Footer profile owned text [CHAR LIMIT=50] 
         */
        public static final int profile_owned_footer=0x7f0b013f;
        /**  QuickSettings: Airplane mode [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_airplane_mode_label=0x7f0b00d1;
        /**  QuickSettings: Battery Charged [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_battery_charged_label=0x7f0b00d3;
        /**  QuickSettings: Battery Charging [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_battery_charging_label=0x7f0b00d2;
        /**  QuickSettings: Bluetooth detail panel, text when there are no items [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_detail_empty_text=0x7f0b00d7;
        /**  QuickSettings: Bluetooth [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_label=0x7f0b00d4;
        /**  QuickSettings: Bluetooth (Multiple) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_multiple_devices_label=0x7f0b00d5;
        /**  QuickSettings: Bluetooth (Off) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_bluetooth_off_label=0x7f0b00d6;
        /**  QuickSettings: Brightness dialog auto brightness button [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_brightness_dialog_auto_brightness_label=0x7f0b00f3;
        /**  QuickSettings: Brightness dialog title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_brightness_dialog_title=0x7f0b00f2;
        /**  QuickSettings: Brightness [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_brightness_label=0x7f0b00d8;
        /**  QuickSettings: Cast detail panel, text when there are no items [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_detail_empty_text=0x7f0b00f1;
        /**  QuickSettings: Cast detail panel, default device description [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_device_default_description=0x7f0b00f0;
        /**  QuickSettings: Cast detail panel, default device name [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_device_default_name=0x7f0b00ef;
        /**  QuickSettings: Cast title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cast_title=0x7f0b00ed;
        /**  QuickSettings: Cast detail panel, status text when casting [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_casting=0x7f0b00ee;
        /**  QuickSettings: Cellular detail panel, data limit format string [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_limit=0x7f0b0103;
        /**  QuickSettings: Cellular detail panel, data usage title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_usage=0x7f0b00ff;
        /**  QuickSettings: Cellular detail panel, data used format string [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_used=0x7f0b0102;
        /**  QuickSettings: Cellular detail panel, data warning format string [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_data_warning=0x7f0b0104;
        /**  QuickSettings: Cellular detail panel, over limit title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_over_limit=0x7f0b0101;
        /**  QuickSettings: Cellular detail panel, remaining data title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_remaining_data=0x7f0b0100;
        /**  QuickSettings: Cellular detail panel title [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_cellular_detail_title=0x7f0b00fe;
        /**  QuickSettings: Label for the toggle that controls whether display color correction is enabled. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_color_space_label=0x7f0b00f5;
        /**  QuickSettings: Control panel: Label for connected device. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_connected=0x7f0b00f8;
        /**  QuickSettings: Control panel: Label for connecting device. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_connecting=0x7f0b00f9;
        /**  QuickSettings: Control panel: Label for button that dismisses control panel. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_done=0x7f0b00f7;
        /**  QuickSettings: Flashlight [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_flashlight_label=0x7f0b00fd;
        /**  QuickSettings: Hotspot. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_hotspot_label=0x7f0b00fb;
        /**  QuickSettings: IME [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_ime_label=0x7f0b00dd;
        /**  QuickSettings: Label for the toggle that controls whether display inversion is enabled. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_inversion_label=0x7f0b00f4;
        /**  QuickSettings: Location [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_location_label=0x7f0b00de;
        /**  QuickSettings: Location (Off) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_location_off_label=0x7f0b00df;
        /**  QuickSettings: Media device [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_media_device_label=0x7f0b00e0;
        /**  QuickSettings: Control panel: Label for button that navigates to settings. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_more_settings=0x7f0b00f6;
        /**  QuickSettings: Notifications [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_notifications_label=0x7f0b00fc;
        /**  QuickSettings: Rotation Locked [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_locked_label=0x7f0b00da;
        /**  QuickSettings: Locked to Landscape [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_locked_landscape_label=0x7f0b00dc;
        /**  QuickSettings: Locked to Portrait [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_locked_portrait_label=0x7f0b00db;
        /**  QuickSettings: Rotation Unlocked [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rotation_unlocked_label=0x7f0b00d9;
        /**  QuickSettings: RSSI (No network) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rssi_emergency_only=0x7f0b00e2;
        /**  QuickSettings: RSSI [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_rssi_label=0x7f0b00e1;
        /**  QuickSettings: Settings [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_settings_label=0x7f0b00e3;
        /**  QuickSettings: Tethering. [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_tethering_label=0x7f0b00fa;
        /**  The tiles to display in QuickSettings 
         */
        public static final int quick_settings_tiles=0x7f0b0002;
        /**  The default tiles to display in QuickSettings 
         */
        public static final int quick_settings_tiles_default=0x7f0b0001;
        /**  QuickSettings: Time [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_time_label=0x7f0b00e4;
        /**  QuickSettings: User [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_user_label=0x7f0b00e5;
        /**  QuickSettings: Label on the item for adding a new user [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_user_new_user=0x7f0b00e7;
        /**  QuickSettings: Title of the user detail panel [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_user_title=0x7f0b00e6;
        /**  QuickSettings: Wifi detail panel, text when there are no items [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_detail_empty_text=0x7f0b00ec;
        public static final int quick_settings_wifi_display_label=0x7f0b015f;
        public static final int quick_settings_wifi_display_no_connection_label=0x7f0b0160;
        /**  QuickSettings: Wifi [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_label=0x7f0b00e8;
        /**  QuickSettings: Wifi (No network) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_no_network=0x7f0b00ea;
        /**  QuickSettings: Wifi (Not connected) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_not_connected=0x7f0b00e9;
        /**  QuickSettings: Wifi (Off) [CHAR LIMIT=NONE] 
         */
        public static final int quick_settings_wifi_off_label=0x7f0b00eb;
        /**  Recents: The info panel app info button string. [CHAR LIMIT=NONE] 
         */
        public static final int recents_app_info_button_label=0x7f0b0106;
        /**  Recents: The empty recents string. [CHAR LIMIT=NONE] 
         */
        public static final int recents_empty_message=0x7f0b0105;
        /**  Recents: Launch error string. [CHAR LIMIT=NONE] 
         */
        public static final int recents_launch_error_message=0x7f0b0109;
        /**  Recents: The lock-to-app button. [CHAR LIMIT=NONE] 
         */
        public static final int recents_lock_to_app_button_label=0x7f0b0107;
        /**  Recents: Temporary string for the button in the recents search bar. [CHAR LIMIT=NONE] 
         */
        public static final int recents_search_bar_label=0x7f0b0108;
        /**  Notification text displayed when we fail to take a screenshot. [CHAR LIMIT=100] 
         */
        public static final int screenshot_failed_text=0x7f0b003b;
        /**  Notification title displayed when we fail to take a screenshot. [CHAR LIMIT=50] 
         */
        public static final int screenshot_failed_title=0x7f0b003a;
        /**  Notification text displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=100] 
         */
        public static final int screenshot_saved_text=0x7f0b0039;
        /**  Notification title displayed when a screenshot is saved to the Gallery. [CHAR LIMIT=50] 
         */
        public static final int screenshot_saved_title=0x7f0b0038;
        /**  Notification text displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=100] 
         */
        public static final int screenshot_saving_text=0x7f0b0037;
        /**  Notification ticker displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=30] 
         */
        public static final int screenshot_saving_ticker=0x7f0b0035;
        /**  Notification title displayed when a screenshot is being saved to the Gallery. [CHAR LIMIT=50] 
         */
        public static final int screenshot_saving_title=0x7f0b0036;
        /**  An explanation for the visual speed bump in the notifications, which will appear when you click on it. [CHAR LIMIT=50] 
         */
        public static final int speed_bump_explanation=0x7f0b011a;
        public static final int ssl_ca_cert_dialog_title=0x7f0b0162;
        public static final int ssl_ca_cert_info_message=0x7f0b0163;
        public static final int ssl_ca_cert_settings_button=0x7f0b0165;
        /**  Shows up when there is a user SSL CA Cert installed on the
         device.  Indicates to the user that SSL traffic can be intercepted.
         If the text fits on one line (~14 chars), it should start with a
         linebreak to position it correctly.  [CHAR LIMIT=45] 
         */
        public static final int ssl_ca_cert_warning=0x7f0b010f;
        public static final int ssl_ca_cert_warning_message=0x7f0b0164;
        /**  Name of the launcher shortcut icon that allows dreams to be started immediately [CHAR LIMIT=20] 
         */
        public static final int start_dreams=0x7f0b00cf;
        /**  Content description for the button to dismiss Recent Apps (only present on large
         devices) 
         */
        public static final int status_bar_accessibility_dismiss_recents=0x7f0b000d;
        /**  The text for the button in the notification window-shade that clears
         all of the currently visible notifications. [CHAR LIMIT=10]
         */
        public static final int status_bar_clear_all_button=0x7f0b0009;
        /**  For formatting day of week and date in DateView.  %1$s is DOW, %2$s is date.
         We show both (DOW on one line, then the date) but this can be overridden for locales as
         necessary.
         
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
 For formatting day of week and date in DateView.  Day of week precedes date by default,
         but this may be overridden on a per-locale basis if necessary. 
         */
        public static final int status_bar_date_formatter=0x7f0b0006;
        /**  Title of a button to open the settings for input methods [CHAR LIMIT=30] 
         */
        public static final int status_bar_input_method_settings_configure_input_methods=0x7f0b0025;
        /**  The label for the group of notifications for recent events in the opened version of
         the status bar.  Recently received text messsages (SMS), emails, calendar alerts, etc.
         [CHAR LIMIT=40] 
         */
        public static final int status_bar_latest_events_title=0x7f0b0010;
        /**  Separator for PLMN and SPN in network name. 
         */
        public static final int status_bar_network_name_separator=0x7f0b0023;
        /**  The label in the bar at the top of the status bar when there are no notifications
         showing.  [CHAR LIMIT=40]
         */
        public static final int status_bar_no_notifications_title=0x7f0b000e;
        /**  Message shown in the middle of the screen after clicking on the recent apps button
         when there are no recent apps to show. Also used for accessibility. [CHAR LIMIT=45]
         */
        public static final int status_bar_no_recent_apps=0x7f0b000c;
        /**  Content description of button in notification inspetor for application-provided settings
         for its own notifications [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_notification_app_settings_title=0x7f0b00c7;
        /**  Content description of button in notification inspector for system settings relating to
         notifications from this application [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_notification_inspect_item_title=0x7f0b00c6;
        /**  The label for the group of notifications for ongoing events in the opened version of
         the status bar.  An ongoing call is the prime example of this.  The MP3 music player
         might be another example.   [CHAR LIMIT=40] 
         */
        public static final int status_bar_ongoing_events_title=0x7f0b000f;
        /**  Title shown in recents popup for inspecting an application's properties 
         */
        public static final int status_bar_recent_inspect_item_title=0x7f0b000b;
        /**  Title shown in recents popup for removing an application from the list 
         */
        public static final int status_bar_recent_remove_item_title=0x7f0b000a;
        /**  Label in the system panel for airplane mode (all radios are turned off)[CHAR LIMIT=30] 
         */
        public static final int status_bar_settings_airplane=0x7f0b001d;
        /**  Abbreviation / label for automatic brightness mode button. Should be all caps. [CHAR LIMIT=6] 
         */
        public static final int status_bar_settings_auto_brightness_label=0x7f0b0020;
        /**  Label in system panel saying the device will use the orientation sensor to rotate [CHAR LIMIT=30] 
         */
        public static final int status_bar_settings_auto_rotation=0x7f0b001e;
        /**  Text to display next to the graphical battery meter.  [CHAR LIMIT=3] 
         */
        public static final int status_bar_settings_battery_meter_format=0x7f0b0022;
        /**  Abbreviation / label for mute brightness mode button. Should be all caps. [CHAR LIMIT=6] 
         */
        public static final int status_bar_settings_mute_label=0x7f0b001f;
        /**  Label in system panel saying the device will show notifications [CHAR LIMIT=30] 
         */
        public static final int status_bar_settings_notifications=0x7f0b0021;
        /**  Name of the button that links to the Settings app. [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_settings_settings_button=0x7f0b001b;
        /**  Text to display underneath the graphical signal strength meter when
         no connection is available. [CHAR LIMIT=20] 
         */
        public static final int status_bar_settings_signal_meter_disconnected=0x7f0b00c0;
        /**  Text to display underneath the graphical signal strength meter when
         it is displaying Wi-Fi status and Wi-Fi is connected to a network
         whose SSID is not available.
         [CHAR LIMIT=20] 
         */
        public static final int status_bar_settings_signal_meter_wifi_nossid=0x7f0b00c1;
        /**  Name of the button that links to the Wifi settings screen. [CHAR LIMIT=NONE] 
         */
        public static final int status_bar_settings_wifi_button=0x7f0b001c;
        /**  Label of a toggle switch to disable use of the physical keyboard in favor of the IME. [CHAR LIMIT=25] 
         */
        public static final int status_bar_use_physical_keyboard=0x7f0b0026;
        /**  Date format for display: should match the lockscreen in /policy.  
 Alias used to reference framework "OK" string in keyguard.  
         */
        public static final int system_ui_date_pattern=0x7f0b0005;
        /**  Title for USB accessory dialog.  Used when the name of the accessory cannot be determined.  [CHAR LIMIT=50] 
         */
        public static final int title_usb_accessory=0x7f0b002c;
        /**  Rotation lock toast text: shown when rotation lock is turned on in landscape orientation.
         
         */
        public static final int toast_rotation_locked=0x7f0b0158;
        /**  Click action label for accessibility for the unlock button. [CHAR LIMIT=NONE] 
         */
        public static final int unlock_label=0x7f0b0048;
        /**  Prompt for the USB accessory confirm dialog [CHAR LIMIT=80] 
         */
        public static final int usb_accessory_confirm_prompt=0x7f0b002a;
        /**  Prompt for the USB accessory permission dialog [CHAR LIMIT=80] 
         */
        public static final int usb_accessory_permission_prompt=0x7f0b0028;
        /**  Prompt for the USB accessory URI dialog [CHAR LIMIT=80] 
         */
        public static final int usb_accessory_uri_prompt=0x7f0b002b;
        /**  Option to always allow USB debugging from the attached computer 
         */
        public static final int usb_debugging_always=0x7f0b0032;
        /**  Message of confirmation dialog for USB debugging 
         */
        public static final int usb_debugging_message=0x7f0b0031;
        /**  Title of confirmation dialog for USB debugging 
         */
        public static final int usb_debugging_title=0x7f0b0030;
        /**  Prompt for the USB device confirm dialog [CHAR LIMIT=80] 
         */
        public static final int usb_device_confirm_prompt=0x7f0b0029;
        /**  Prompt for the USB device permission dialog [CHAR LIMIT=80] 
         */
        public static final int usb_device_permission_prompt=0x7f0b0027;
        /**  Title for the USB function chooser in UsbPreferenceActivity. [CHAR LIMIT=30] 
         */
        public static final int usb_preference_title=0x7f0b003c;
        /**  Label for the MTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50] 
         */
        public static final int use_mtp_button_title=0x7f0b003d;
        /**  Label for the PTP USB function in UsbPreferenceActivity. [CHAR LIMIT=50] 
         */
        public static final int use_ptp_button_title=0x7f0b003e;
        /**  Label for the adding a new user in the user switcher [CHAR LIMIT=35] 
         */
        public static final int user_add_user=0x7f0b0126;
        /**  Message for add user confirmation dialog - short version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_short=0x7f0b0133;
        /**  Title for add user confirmation dialog [CHAR LIMIT=30] 
         */
        public static final int user_add_user_title=0x7f0b0132;
        /**  Name for a freshly added user [CHAR LIMIT=30] 
         */
        public static final int user_new_user_name=0x7f0b0127;
        /**  Text spoken when the current user is switched if accessibility is enabled. [CHAR LIMIT=none] 
         */
        public static final int user_switched=0x7f0b01b9;
        /**  Defines the implementation of the velocity tracker to be used for the panel expansion. Can
         be 'platform' or 'noisy' (i.e. for noisy touch screens). 
         */
        public static final int velocity_tracker_impl=0x7f0b0003;
        /**  Footer vpn present text [CHAR LIMIT=50] 
         */
        public static final int vpn_footer=0x7f0b0140;
        /**  Class name for default keyguard appwidget [DO NOT TRANSLATE] 
         */
        public static final int widget_default_class_name=0x7f0b0168;
        /**  Package name for default keyguard appwidget [DO NOT TRANSLATE] 
         */
        public static final int widget_default_package_name=0x7f0b0167;
        /**  Zen mode: Next alarm information - day and time. [CHAR LIMIT=40] 
         */
        public static final int zen_alarm_information_day_time=0x7f0b0117;
        /**  Zen mode: Next alarm information - just a time. [CHAR LIMIT=40] 
         */
        public static final int zen_alarm_information_time=0x7f0b0116;
        /**  Zen mode: Next alarm warning. [CHAR LIMIT=40] 
         */
        public static final int zen_alarm_warning=0x7f0b0118;
        /**  Zen mode: Only important interruptions. [CHAR LIMIT=40] 
         */
        public static final int zen_important_interruptions=0x7f0b0115;
        /**  Accessibility string for current zen mode and selected exit condition. A template that simply concatenates existing mode string and the current condition description. [CHAR LIMIT=20] 
         */
        public static final int zen_mode_and_condition=0x7f0b0157;
        /**  Zen mode: No interruptions. [CHAR LIMIT=40] 
         */
        public static final int zen_no_interruptions=0x7f0b0114;
        /**  Zen mode: No interruptions title, with a warning about alarms. [CHAR LIMIT=60] 
         */
        public static final int zen_no_interruptions_with_warning=0x7f0b0113;
    }
    public static final class style {
        public static final int Animation=0x7f0a0024;
        /**  Standard animations for a non-full-screen window or activity. 
         */
        public static final int Animation_LockScreen=0x7f0a0035;
        public static final int Animation_RecentPanel=0x7f0a0026;
        /**  Animations for a non-full-screen window or activity. 
         */
        public static final int Animation_RecentsActivity=0x7f0a0005;
        public static final int Animation_ShirtPocketPanel=0x7f0a0025;
        /**  Standard animations for hiding and showing the status bar. 
         */
        public static final int Animation_StatusBar=0x7f0a0027;
        public static final int Animation_StatusBar_HeadsUp=0x7f0a0028;
        public static final int BaseBrightnessDialogContainer=0x7f0a0022;
        public static final int BouncerSecurityContainer=0x7f0a003a;
        public static final int BrightnessDialogContainer=0x7f0a0023;
        public static final int PasswordTheme=0x7f0a003b;
        public static final int QSBorderlessButton=0x7f0a002c;
        public static final int RecentsStyle=0x7f0a0001;
        public static final int RecentsTheme=0x7f0a0002;
        /**  Performance optimized alternate Recents theme (no wallpaper) 
         */
        public static final int RecentsTheme_NoWallpaper=0x7f0a0004;
        /**  Alternate Recents theme 
         */
        public static final int RecentsTheme_Wallpaper=0x7f0a0003;
        public static final int SearchPanelCircle=0x7f0a002f;
        public static final int SearchPanelScrim=0x7f0a0030;
        public static final int TextAppearance=0x7f0a0014;
        public static final int TextAppearance_Material_Notification_Parenthetical=0x7f0a002e;
        public static final int TextAppearance_QS=0x7f0a0015;
        public static final int TextAppearance_QS_DataUsage=0x7f0a001f;
        public static final int TextAppearance_QS_DataUsage_Secondary=0x7f0a0021;
        public static final int TextAppearance_QS_DataUsage_Usage=0x7f0a0020;
        public static final int TextAppearance_QS_DetailButton=0x7f0a001a;
        public static final int TextAppearance_QS_DetailEmpty=0x7f0a001b;
        public static final int TextAppearance_QS_DetailHeader=0x7f0a0016;
        public static final int TextAppearance_QS_DetailItemPrimary=0x7f0a0017;
        public static final int TextAppearance_QS_DetailItemSecondary=0x7f0a0018;
        public static final int TextAppearance_QS_SegmentedButton=0x7f0a001e;
        public static final int TextAppearance_QS_Subhead=0x7f0a001c;
        public static final int TextAppearance_QS_VolumeSuppressor=0x7f0a0019;
        public static final int TextAppearance_QS_ZenToast=0x7f0a001d;
        public static final int TextAppearance_StatusBar_Clock=0x7f0a0009;
        public static final int TextAppearance_StatusBar_Expanded=0x7f0a000a;
        public static final int TextAppearance_StatusBar_Expanded_AboveDateTime=0x7f0a000d;
        public static final int TextAppearance_StatusBar_Expanded_ChargingInfo=0x7f0a000f;
        public static final int TextAppearance_StatusBar_Expanded_Clock=0x7f0a000b;
        public static final int TextAppearance_StatusBar_Expanded_Date=0x7f0a000c;
        public static final int TextAppearance_StatusBar_Expanded_EmergencyCallsOnly=0x7f0a000e;
        public static final int TextAppearance_StatusBar_Expanded_Network=0x7f0a0010;
        public static final int TextAppearance_StatusBar_Expanded_Network_EmergencyOnly=0x7f0a0011;
        public static final int TextAppearance_StatusBar_Expanded_UserSwitcher=0x7f0a0012;
        public static final int TextAppearance_StatusBar_Expanded_UserSwitcher_UserName=0x7f0a0013;
        public static final int TextAppearance_StatusBar_HeadsUp=0x7f0a0006;
        public static final int TextAppearance_StatusBar_PhoneTicker=0x7f0a0029;
        public static final int TextAppearance_StatusBar_SystemPanel=0x7f0a0007;
        public static final int TextAppearance_StatusBar_TextButton=0x7f0a0008;
        public static final int Theme_SystemUI_Dialog=0x7f0a002b;
        public static final int UserDetailView=0x7f0a0031;
        /**  Window animations used for volume panel. 
         */
        public static final int VolumePanelAnimation=0x7f0a002d;
        /**  Keyguard PIN pad styles 
         */
        public static final int Widget_TextView_NumPadKey=0x7f0a0033;
        public static final int Widget_TextView_NumPadKey_Klondike=0x7f0a0034;
        public static final int Widget_TransportControl_SeekBar=0x7f0a0039;
        public static final int ZenToastAnimations=0x7f0a0032;
        public static final int big_thin=0x7f0a0037;
        /**  The theme to use for RecentsActivity. 
         */
        public static final int config_recents_activity_theme=0x7f0a0000;
        public static final int systemui_theme=0x7f0a002a;
        public static final int widget_big_thin=0x7f0a0038;
        /**  Built-in clock widget stuff 
         */
        public static final int widget_label=0x7f0a0036;
    }
    public static final class styleable {
        /** Attributes that can be used with a BatteryMeterView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BatteryMeterView_frameColor com.android.systemui:frameColor}</code></td><td></td></tr>
           </table>
           @see #BatteryMeterView_frameColor
         */
        public static final int[] BatteryMeterView = {
            0x7f01000a
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#frameColor}
          attribute's value can be found in the {@link #BatteryMeterView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:frameColor
        */
        public static final int BatteryMeterView_frameColor = 0;
        /** Attributes that can be used with a CarrierText.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CarrierText_allCaps com.android.systemui:allCaps}</code></td><td></td></tr>
           </table>
           @see #CarrierText_allCaps
         */
        public static final int[] CarrierText = {
            0x7f010025
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#allCaps}
          attribute's value can be found in the {@link #CarrierText} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:allCaps
        */
        public static final int CarrierText_allCaps = 0;
        /** Attributes that can be used with a Clock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Clock_amPmStyle com.android.systemui:amPmStyle}</code></td><td></td></tr>
           </table>
           @see #Clock_amPmStyle
         */
        public static final int[] Clock = {
            0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#amPmStyle}
          attribute's value can be found in the {@link #Clock} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>small</code></td><td>1</td><td></td></tr>
<tr><td><code>gone</code></td><td>2</td><td></td></tr>
</table>
          @attr name com.android.systemui:amPmStyle
        */
        public static final int Clock_amPmStyle = 0;
        /** Attributes that can be used with a DateView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DateView_datePattern com.android.systemui:datePattern}</code></td><td></td></tr>
           </table>
           @see #DateView_datePattern
         */
        public static final int[] DateView = {
            0x7f010012
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#datePattern}
          attribute's value can be found in the {@link #DateView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:datePattern
        */
        public static final int DateView_datePattern = 0;
        /** Attributes that can be used with a DeadZone.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DeadZone_decayTime com.android.systemui:decayTime}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_holdTime com.android.systemui:holdTime}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_maxSize com.android.systemui:maxSize}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_minSize com.android.systemui:minSize}</code></td><td></td></tr>
           <tr><td><code>{@link #DeadZone_orientation com.android.systemui:orientation}</code></td><td></td></tr>
           </table>
           @see #DeadZone_decayTime
           @see #DeadZone_holdTime
           @see #DeadZone_maxSize
           @see #DeadZone_minSize
           @see #DeadZone_orientation
         */
        public static final int[] DeadZone = {
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000c
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#decayTime}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:decayTime
        */
        public static final int DeadZone_decayTime = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#holdTime}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:holdTime
        */
        public static final int DeadZone_holdTime = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#maxSize}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:maxSize
        */
        public static final int DeadZone_maxSize = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#minSize}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:minSize
        */
        public static final int DeadZone_minSize = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#orientation}
          attribute's value can be found in the {@link #DeadZone} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.android.systemui:orientation
        */
        public static final int DeadZone_orientation = 4;
        /** Attributes that can be used with a KeyButtonView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyButtonView_keyCode com.android.systemui:keyCode}</code></td><td> key code to send when pressed; if absent or 0, no key is sent </td></tr>
           <tr><td><code>{@link #KeyButtonView_keyRepeat com.android.systemui:keyRepeat}</code></td><td> does this button generate longpress / repeat events? </td></tr>
           </table>
           @see #KeyButtonView_keyCode
           @see #KeyButtonView_keyRepeat
         */
        public static final int[] KeyButtonView = {
            0x7f010000, 0x7f010001
        };
        /**
          <p>
          @attr description
           key code to send when pressed; if absent or 0, no key is sent 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui:keyCode
        */
        public static final int KeyButtonView_keyCode = 0;
        /**
          <p>
          @attr description
           does this button generate longpress / repeat events? 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui:keyRepeat
        */
        public static final int KeyButtonView_keyRepeat = 1;
        /** Attributes that can be used with a KeyguardGlowStripView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_dotSize com.android.systemui:dotSize}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_glowDot com.android.systemui:glowDot}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_leftToRight com.android.systemui:leftToRight}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_numDots com.android.systemui:numDots}</code></td><td></td></tr>
           </table>
           @see #KeyguardGlowStripView_dotSize
           @see #KeyguardGlowStripView_glowDot
           @see #KeyguardGlowStripView_leftToRight
           @see #KeyguardGlowStripView_numDots
         */
        public static final int[] KeyguardGlowStripView = {
            0x7f01001a, 0x7f01001b, 0x7f01001c, 0x7f01001d
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#dotSize}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:dotSize
        */
        public static final int KeyguardGlowStripView_dotSize = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#glowDot}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui:glowDot
        */
        public static final int KeyguardGlowStripView_glowDot = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#leftToRight}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:leftToRight
        */
        public static final int KeyguardGlowStripView_leftToRight = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#numDots}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:numDots
        */
        public static final int KeyguardGlowStripView_numDots = 1;
        /** Attributes that can be used with a KeyguardSecurityViewFlipper_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxHeight com.android.systemui:layout_maxHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxWidth com.android.systemui:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxHeight
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxWidth
         */
        public static final int[] KeyguardSecurityViewFlipper_Layout = {
            0x7f01001f, 0x7f010021
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:layout_maxHeight
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxHeight = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:layout_maxWidth
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxWidth = 1;
        /** Attributes that can be used with a MultiPaneChallengeLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_android_orientation android:orientation}</code></td><td> Influences how layout_centerWithinArea behaves </td></tr>
           </table>
           @see #MultiPaneChallengeLayout_android_orientation
         */
        public static final int[] MultiPaneChallengeLayout = {
            0x010100c4
        };
        /**
          <p>
          @attr description
           Influences how layout_centerWithinArea behaves 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int MultiPaneChallengeLayout_android_orientation = 0;
        /** Attributes that can be used with a MultiPaneChallengeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_centerWithinArea com.android.systemui:layout_centerWithinArea}</code></td><td> Percentage of the screen this child should consume or center within.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_childType com.android.systemui:layout_childType}</code></td><td> Some child types have special behavior.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_gravity com.android.systemui:layout_gravity}</code></td><td> Standard gravity constant that a child supplies to its parent.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_maxHeight com.android.systemui:layout_maxHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_maxWidth com.android.systemui:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #MultiPaneChallengeLayout_Layout_layout_centerWithinArea
           @see #MultiPaneChallengeLayout_Layout_layout_childType
           @see #MultiPaneChallengeLayout_Layout_layout_gravity
           @see #MultiPaneChallengeLayout_Layout_layout_maxHeight
           @see #MultiPaneChallengeLayout_Layout_layout_maxWidth
         */
        public static final int[] MultiPaneChallengeLayout_Layout = {
            0x7f010016, 0x7f01001e, 0x7f01001f, 0x7f010020,
            0x7f010021
        };
        /**
          <p>
          @attr description
           Percentage of the screen this child should consume or center within.
             If 0/default, the view will be measured by standard rules
             as if this were a FrameLayout. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui:layout_centerWithinArea
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_centerWithinArea = 3;
        /**
          <p>
          @attr description
           Some child types have special behavior. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.systemui:layout_childType
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_childType = 1;
        /**
          <p>
          @attr description
           Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.systemui:layout_gravity
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #MultiPaneChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:layout_maxHeight
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_maxHeight = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #MultiPaneChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:layout_maxWidth
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_maxWidth = 4;
        /** Attributes that can be used with a NotificationLinearLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NotificationLinearLayout_insetLeft com.android.systemui:insetLeft}</code></td><td></td></tr>
           </table>
           @see #NotificationLinearLayout_insetLeft
         */
        public static final int[] NotificationLinearLayout = {
            0x7f010003
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#insetLeft}
          attribute's value can be found in the {@link #NotificationLinearLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:insetLeft
        */
        public static final int NotificationLinearLayout_insetLeft = 0;
        /** Attributes that can be used with a NotificationRowLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NotificationRowLayout_rowHeight com.android.systemui:rowHeight}</code></td><td></td></tr>
           </table>
           @see #NotificationRowLayout_rowHeight
         */
        public static final int[] NotificationRowLayout = {
            0x7f010004
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#rowHeight}
          attribute's value can be found in the {@link #NotificationRowLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:rowHeight
        */
        public static final int NotificationRowLayout_rowHeight = 0;
        /** Attributes that can be used with a NumPadKey.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NumPadKey_digit com.android.systemui:digit}</code></td><td></td></tr>
           <tr><td><code>{@link #NumPadKey_textView com.android.systemui:textView}</code></td><td></td></tr>
           </table>
           @see #NumPadKey_digit
           @see #NumPadKey_textView
         */
        public static final int[] NumPadKey = {
            0x7f010022, 0x7f010023
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#digit}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:digit
        */
        public static final int NumPadKey_digit = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#textView}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui:textView
        */
        public static final int NumPadKey_textView = 1;
        /**  PagedView specific attributes. These attributes are used to customize
         a PagedView view in XML files. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PagedView_pageSpacing com.android.systemui:pageSpacing}</code></td><td> The space between adjacent pages of the PagedView.</td></tr>
           <tr><td><code>{@link #PagedView_scrollIndicatorPaddingLeft com.android.systemui:scrollIndicatorPaddingLeft}</code></td><td> The padding for the scroll indicator area </td></tr>
           <tr><td><code>{@link #PagedView_scrollIndicatorPaddingRight com.android.systemui:scrollIndicatorPaddingRight}</code></td><td></td></tr>
           </table>
           @see #PagedView_pageSpacing
           @see #PagedView_scrollIndicatorPaddingLeft
           @see #PagedView_scrollIndicatorPaddingRight
         */
        public static final int[] PagedView = {
            0x7f010017, 0x7f010018, 0x7f010019
        };
        /**
          <p>
          @attr description
           The space between adjacent pages of the PagedView. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui:pageSpacing
        */
        public static final int PagedView_pageSpacing = 0;
        /**
          <p>
          @attr description
           The padding for the scroll indicator area 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.systemui:scrollIndicatorPaddingLeft
        */
        public static final int PagedView_scrollIndicatorPaddingLeft = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#scrollIndicatorPaddingRight}
          attribute's value can be found in the {@link #PagedView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:scrollIndicatorPaddingRight
        */
        public static final int PagedView_scrollIndicatorPaddingRight = 2;
        /** Attributes that can be used with a PasswordTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PasswordTextView_scaledTextSize com.android.systemui:scaledTextSize}</code></td><td></td></tr>
           </table>
           @see #PasswordTextView_scaledTextSize
         */
        public static final int[] PasswordTextView = {
            0x7f010024
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#scaledTextSize}
          attribute's value can be found in the {@link #PasswordTextView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:scaledTextSize
        */
        public static final int PasswordTextView_scaledTextSize = 0;
        /** Attributes that can be used with a PseudoGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PseudoGridView_horizontalSpacing com.android.systemui:horizontalSpacing}</code></td><td></td></tr>
           <tr><td><code>{@link #PseudoGridView_numColumns com.android.systemui:numColumns}</code></td><td></td></tr>
           <tr><td><code>{@link #PseudoGridView_verticalSpacing com.android.systemui:verticalSpacing}</code></td><td></td></tr>
           </table>
           @see #PseudoGridView_horizontalSpacing
           @see #PseudoGridView_numColumns
           @see #PseudoGridView_verticalSpacing
         */
        public static final int[] PseudoGridView = {
            0x7f010013, 0x7f010014, 0x7f010015
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#horizontalSpacing}
          attribute's value can be found in the {@link #PseudoGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:horizontalSpacing
        */
        public static final int PseudoGridView_horizontalSpacing = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#numColumns}
          attribute's value can be found in the {@link #PseudoGridView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:numColumns
        */
        public static final int PseudoGridView_numColumns = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#verticalSpacing}
          attribute's value can be found in the {@link #PseudoGridView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:verticalSpacing
        */
        public static final int PseudoGridView_verticalSpacing = 1;
        /** Attributes that can be used with a RecentsPanelView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RecentsPanelView_recentItemLayout com.android.systemui:recentItemLayout}</code></td><td></td></tr>
           </table>
           @see #RecentsPanelView_recentItemLayout
         */
        public static final int[] RecentsPanelView = {
            0x7f010005
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#recentItemLayout}
          attribute's value can be found in the {@link #RecentsPanelView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.systemui:recentItemLayout
        */
        public static final int RecentsPanelView_recentItemLayout = 0;
        /** Attributes that can be used with a SlidingChallengeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingChallengeLayout_Layout_layout_childType com.android.systemui:layout_childType}</code></td><td> Some child types have special behavior.</td></tr>
           <tr><td><code>{@link #SlidingChallengeLayout_Layout_layout_maxHeight com.android.systemui:layout_maxHeight}</code></td><td></td></tr>
           </table>
           @see #SlidingChallengeLayout_Layout_layout_childType
           @see #SlidingChallengeLayout_Layout_layout_maxHeight
         */
        public static final int[] SlidingChallengeLayout_Layout = {
            0x7f01001e, 0x7f01001f
        };
        /**
          <p>
          @attr description
           Some child types have special behavior. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.systemui:layout_childType
        */
        public static final int SlidingChallengeLayout_Layout_layout_childType = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #SlidingChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:layout_maxHeight
        */
        public static final int SlidingChallengeLayout_Layout_layout_maxHeight = 1;
        /** Attributes that can be used with a ToggleSlider.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ToggleSlider_text com.android.systemui:text}</code></td><td></td></tr>
           </table>
           @see #ToggleSlider_text
         */
        public static final int[] ToggleSlider = {
            0x7f010002
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#text}
          attribute's value can be found in the {@link #ToggleSlider} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:text
        */
        public static final int ToggleSlider_text = 0;
        /** Attributes that can be used with a UserAvatarView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #UserAvatarView_activeFrameColor com.android.systemui:activeFrameColor}</code></td><td></td></tr>
           <tr><td><code>{@link #UserAvatarView_frameColor com.android.systemui:frameColor}</code></td><td></td></tr>
           <tr><td><code>{@link #UserAvatarView_framePadding com.android.systemui:framePadding}</code></td><td></td></tr>
           <tr><td><code>{@link #UserAvatarView_frameWidth com.android.systemui:frameWidth}</code></td><td></td></tr>
           </table>
           @see #UserAvatarView_activeFrameColor
           @see #UserAvatarView_frameColor
           @see #UserAvatarView_framePadding
           @see #UserAvatarView_frameWidth
         */
        public static final int[] UserAvatarView = {
            0x7f01000a, 0x7f01000d, 0x7f01000e, 0x7f01000f
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#activeFrameColor}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:activeFrameColor
        */
        public static final int UserAvatarView_activeFrameColor = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#frameColor}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:frameColor
        */
        public static final int UserAvatarView_frameColor = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#framePadding}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:framePadding
        */
        public static final int UserAvatarView_framePadding = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#frameWidth}
          attribute's value can be found in the {@link #UserAvatarView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:frameWidth
        */
        public static final int UserAvatarView_frameWidth = 1;
        /** Attributes that can be used with a UserDetailItemView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #UserDetailItemView_activatedFontFamily com.android.systemui:activatedFontFamily}</code></td><td></td></tr>
           <tr><td><code>{@link #UserDetailItemView_regularFontFamily com.android.systemui:regularFontFamily}</code></td><td></td></tr>
           </table>
           @see #UserDetailItemView_activatedFontFamily
           @see #UserDetailItemView_regularFontFamily
         */
        public static final int[] UserDetailItemView = {
            0x7f010010, 0x7f010011
        };
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#activatedFontFamily}
          attribute's value can be found in the {@link #UserDetailItemView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:activatedFontFamily
        */
        public static final int UserDetailItemView_activatedFontFamily = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.systemui.R.attr#regularFontFamily}
          attribute's value can be found in the {@link #UserDetailItemView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.systemui:regularFontFamily
        */
        public static final int UserDetailItemView_regularFontFamily = 0;
    };
}
