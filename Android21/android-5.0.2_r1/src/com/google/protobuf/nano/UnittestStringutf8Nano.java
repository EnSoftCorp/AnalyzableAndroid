// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.protobuf.nano;

@SuppressWarnings("hiding")
public interface UnittestStringutf8Nano {
  
  public static final class StringUtf8 extends
      com.google.protobuf.nano.MessageNano {
    
    private static volatile StringUtf8[] _emptyArray;
    public static StringUtf8[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new StringUtf8[0];
          }
        }
      }
      return _emptyArray;
    }
    
    // optional string id = 1;
    public java.lang.String id;
    
    // repeated string rs = 2;
    public java.lang.String[] rs;
    
    public StringUtf8() {
      clear();
    }
    
    public StringUtf8 clear() {
      id = "";
      rs = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.id.equals("")) {
        output.writeString(1, this.id);
      }
      if (this.rs != null && this.rs.length > 0) {
        for (int i = 0; i < this.rs.length; i++) {
          java.lang.String element = this.rs[i];
          if (element != null) {
            output.writeString(2, element);
          }
        }
      }
      super.writeTo(output);
    }
    
    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.id.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (this.rs != null && this.rs.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.rs.length; i++) {
          java.lang.String element = this.rs[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }
    
    @Override
    public StringUtf8 mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.rs == null ? 0 : this.rs.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.rs, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.rs = newArray;
            break;
          }
        }
      }
    }
    
    public static StringUtf8 parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new StringUtf8(), data);
    }
    
    public static StringUtf8 parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new StringUtf8().mergeFrom(input);
    }
  }
}
