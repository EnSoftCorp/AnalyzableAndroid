class com.android.certinstaller.CertInstaller$1 extends android.os.AsyncTask
{
    final java.lang.String val$password;
    final com.android.certinstaller.CertInstaller this$0;

    void <init>(com.android.certinstaller.CertInstaller, java.lang.String)
    {
        com.android.certinstaller.CertInstaller$1 r0;
        com.android.certinstaller.CertInstaller r1;
        java.lang.String r2;

        r0 := @this: com.android.certinstaller.CertInstaller$1;

        r1 := @parameter0: com.android.certinstaller.CertInstaller;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.certinstaller.CertInstaller$1: com.android.certinstaller.CertInstaller this$0> = r1;

        r0.<com.android.certinstaller.CertInstaller$1: java.lang.String val$password> = r2;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Boolean doInBackground(java.lang.Void[])
    {
        com.android.certinstaller.CertInstaller$1 r0;
        java.lang.Void[] r1;
        com.android.certinstaller.CertInstaller $r2;
        com.android.certinstaller.CredentialHelper $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.Boolean $r5;

        r0 := @this: com.android.certinstaller.CertInstaller$1;

        r1 := @parameter0: java.lang.Void[];

        $r2 = r0.<com.android.certinstaller.CertInstaller$1: com.android.certinstaller.CertInstaller this$0>;

        $r3 = staticinvoke <com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper access$200(com.android.certinstaller.CertInstaller)>($r2);

        $r4 = r0.<com.android.certinstaller.CertInstaller$1: java.lang.String val$password>;

        $z0 = virtualinvoke $r3.<com.android.certinstaller.CredentialHelper: boolean extractPkcs12(java.lang.String)>($r4);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r5;
    }

    protected void onPostExecute(java.lang.Boolean)
    {
        com.android.certinstaller.CertInstaller$1 r0;
        java.lang.Boolean r1;
        com.android.certinstaller.CertInstaller$OnExtractionDoneAction r2, $r3;
        boolean $z0;
        com.android.certinstaller.CertInstaller $r4, $r5, $r6;
        int $i0;

        r0 := @this: com.android.certinstaller.CertInstaller$1;

        r1 := @parameter0: java.lang.Boolean;

        $r3 = new com.android.certinstaller.CertInstaller$OnExtractionDoneAction;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        specialinvoke $r3.<com.android.certinstaller.CertInstaller$OnExtractionDoneAction: void <init>(boolean)>($z0);

        r2 = $r3;

        $r4 = r0.<com.android.certinstaller.CertInstaller$1: com.android.certinstaller.CertInstaller this$0>;

        $i0 = staticinvoke <com.android.certinstaller.CertInstaller: int access$400(com.android.certinstaller.CertInstaller)>($r4);

        if $i0 != 3 goto label1;

        $r6 = r0.<com.android.certinstaller.CertInstaller$1: com.android.certinstaller.CertInstaller this$0>;

        staticinvoke <com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction access$502(com.android.certinstaller.CertInstaller,com.android.certinstaller.CertInstaller$MyAction)>($r6, r2);

        goto label2;

     label1:
        $r5 = r0.<com.android.certinstaller.CertInstaller$1: com.android.certinstaller.CertInstaller this$0>;

        interfaceinvoke r2.<com.android.certinstaller.CertInstaller$MyAction: void run(com.android.certinstaller.CertInstaller)>($r5);

     label2:
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.certinstaller.CertInstaller$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: com.android.certinstaller.CertInstaller$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        virtualinvoke r0.<com.android.certinstaller.CertInstaller$1: void onPostExecute(java.lang.Boolean)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.certinstaller.CertInstaller$1 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.android.certinstaller.CertInstaller$1;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.certinstaller.CertInstaller$1: java.lang.Boolean doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
