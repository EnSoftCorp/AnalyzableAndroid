public class com.android.certinstaller.CertInstaller extends android.app.Activity
{
    private static final java.lang.String TAG;
    private static final int STATE_INIT;
    private static final int STATE_RUNNING;
    private static final int STATE_PAUSED;
    private static final int NAME_CREDENTIAL_DIALOG;
    private static final int PKCS12_PASSWORD_DIALOG;
    private static final int PROGRESS_BAR_DIALOG;
    private static final int REQUEST_SYSTEM_INSTALL_CODE;
    private static final java.lang.String NEXT_ACTION_KEY;
    private static final java.lang.String PKEY_MAP_KEY;
    private static final int USAGE_TYPE_SYSTEM;
    private static final int USAGE_TYPE_WIFI;
    private final android.security.KeyStore mKeyStore;
    private final com.android.certinstaller.ViewHelper mView;
    private int mState;
    private com.android.certinstaller.CredentialHelper mCredentials;
    private com.android.certinstaller.CertInstaller$MyAction mNextAction;

    public void <init>()
    {
        com.android.certinstaller.CertInstaller r0;
        android.security.KeyStore $r1;
        com.android.certinstaller.ViewHelper $r2;

        r0 := @this: com.android.certinstaller.CertInstaller;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<com.android.certinstaller.CertInstaller: android.security.KeyStore mKeyStore> = $r1;

        $r2 = new com.android.certinstaller.ViewHelper;

        specialinvoke $r2.<com.android.certinstaller.ViewHelper: void <init>()>();

        r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView> = $r2;

        return;
    }

    private com.android.certinstaller.CredentialHelper createCredentialHelper(android.content.Intent)
    {
        com.android.certinstaller.CertInstaller r0;
        android.content.Intent r1;
        java.lang.Throwable r2, $r4;
        com.android.certinstaller.CredentialHelper $r3, $r5;

        r0 := @this: com.android.certinstaller.CertInstaller;

        r1 := @parameter0: android.content.Intent;

     label1:
        $r3 = new com.android.certinstaller.CredentialHelper;

        specialinvoke $r3.<com.android.certinstaller.CredentialHelper: void <init>(android.content.Intent)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("CertInstaller", "createCredentialHelper", r2);

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void toastErrorAndFinish(int)>(2131099670);

        $r5 = new com.android.certinstaller.CredentialHelper;

        specialinvoke $r5.<com.android.certinstaller.CredentialHelper: void <init>()>();

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.android.certinstaller.CertInstaller r0;
        android.os.Bundle r1;
        com.android.certinstaller.CertInstaller$InstallOthersAction r2, $r10;
        android.content.Intent $r3;
        com.android.certinstaller.CredentialHelper $r4, $r5, $r8, $r9;
        int $i0;
        java.io.Serializable $r6;
        com.android.certinstaller.CertInstaller$MyAction $r7;
        boolean $z0, $z1, $z2;
        byte $b1;

        r0 := @this: com.android.certinstaller.CertInstaller;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r3 = virtualinvoke r0.<com.android.certinstaller.CertInstaller: android.content.Intent getIntent()>();

        $r4 = specialinvoke r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper createCredentialHelper(android.content.Intent)>($r3);

        r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials> = $r4;

        if r1 != null goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        r0.<com.android.certinstaller.CertInstaller: int mState> = $b1;

        $i0 = r0.<com.android.certinstaller.CertInstaller: int mState>;

        if $i0 != 1 goto label7;

        $r8 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z0 = virtualinvoke $r8.<com.android.certinstaller.CredentialHelper: boolean containsAnyRawData()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void toastErrorAndFinish(int)>(2131099669);

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void finish()>();

        goto label8;

     label3:
        $r9 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z1 = virtualinvoke $r9.<com.android.certinstaller.CredentialHelper: boolean hasPkcs12KeyStore()>();

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void showDialog(int)>(2);

        goto label8;

     label4:
        $r10 = new com.android.certinstaller.CertInstaller$InstallOthersAction;

        specialinvoke $r10.<com.android.certinstaller.CertInstaller$InstallOthersAction: void <init>(com.android.certinstaller.CertInstaller$1)>(null);

        r2 = $r10;

        $z2 = specialinvoke r0.<com.android.certinstaller.CertInstaller: boolean needsKeyStoreAccess()>();

        if $z2 == 0 goto label5;

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void sendUnlockKeyStoreIntent()>();

        r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction> = r2;

        goto label6;

     label5:
        interfaceinvoke r2.<com.android.certinstaller.CertInstaller$MyAction: void run(com.android.certinstaller.CertInstaller)>(r0);

     label6:
        goto label8;

     label7:
        $r5 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        virtualinvoke $r5.<com.android.certinstaller.CredentialHelper: void onRestoreStates(android.os.Bundle)>(r1);

        $r6 = virtualinvoke r1.<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>("na");

        $r7 = (com.android.certinstaller.CertInstaller$MyAction) $r6;

        r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction> = $r7;

     label8:
        return;
    }

    protected void onResume()
    {
        com.android.certinstaller.CertInstaller r0;
        int $i0;
        com.android.certinstaller.CertInstaller$MyAction $r1, $r2;

        r0 := @this: com.android.certinstaller.CertInstaller;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $i0 = r0.<com.android.certinstaller.CertInstaller: int mState>;

        if $i0 != 1 goto label1;

        r0.<com.android.certinstaller.CertInstaller: int mState> = 2;

        goto label2;

     label1:
        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction>;

        interfaceinvoke $r2.<com.android.certinstaller.CertInstaller$MyAction: void run(com.android.certinstaller.CertInstaller)>(r0);

     label2:
        return;
    }

    private boolean needsKeyStoreAccess()
    {
        com.android.certinstaller.CertInstaller r0;
        com.android.certinstaller.CredentialHelper $r1, $r3;
        boolean $z0, $z1, $z2, $z3;
        android.security.KeyStore $r2;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z0 = virtualinvoke $r1.<com.android.certinstaller.CredentialHelper: boolean hasKeyPair()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z3 = virtualinvoke $r3.<com.android.certinstaller.CredentialHelper: boolean hasUserCertificate()>();

        if $z3 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.certinstaller.CertInstaller: android.security.KeyStore mKeyStore>;

        $z1 = virtualinvoke $r2.<android.security.KeyStore: boolean isUnlocked()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void onPause()
    {
        com.android.certinstaller.CertInstaller r0;

        r0 := @this: com.android.certinstaller.CertInstaller;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        r0.<com.android.certinstaller.CertInstaller: int mState> = 3;

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        com.android.certinstaller.CertInstaller r0;
        android.os.Bundle r1;
        com.android.certinstaller.CredentialHelper $r2;
        com.android.certinstaller.CertInstaller$MyAction $r3, $r4;

        r0 := @this: com.android.certinstaller.CertInstaller;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r2 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        virtualinvoke $r2.<com.android.certinstaller.CredentialHelper: void onSaveStates(android.os.Bundle)>(r1);

        $r3 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction>;

        virtualinvoke r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("na", $r4);

     label1:
        return;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        com.android.certinstaller.CertInstaller r0;
        int i0;
        android.app.ProgressDialog r1, $r3;
        android.app.Dialog $r2, $r5;
        java.lang.String $r4;

        r0 := @this: com.android.certinstaller.CertInstaller;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = specialinvoke r0.<com.android.certinstaller.CertInstaller: android.app.Dialog createPkcs12PasswordDialog()>();

        return $r2;

     label2:
        $r5 = specialinvoke r0.<com.android.certinstaller.CertInstaller: android.app.Dialog createNameCredentialDialog()>();

        return $r5;

     label3:
        $r3 = new android.app.ProgressDialog;

        specialinvoke $r3.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);

        r1 = $r3;

        $r4 = virtualinvoke r0.<com.android.certinstaller.CertInstaller: java.lang.String getString(int)>(2131099651);

        virtualinvoke r1.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r4);

        virtualinvoke r1.<android.app.ProgressDialog: void setIndeterminate(boolean)>(1);

        virtualinvoke r1.<android.app.ProgressDialog: void setCancelable(boolean)>(0);

        return r1;

     label4:
        return null;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        com.android.certinstaller.CertInstaller r0;
        int i0, i1;
        android.content.Intent r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r12, $r13;
        java.lang.String $r5, $r9, $r14, $r15, $r18, $r19;
        com.android.certinstaller.CredentialHelper $r11, $r16, $r20;
        java.lang.Object[] $r17;
        android.widget.Toast $r21;
        java.lang.Void[] $r22;
        boolean $z0;
        com.android.certinstaller.CertInstaller$InstallCaCertsToKeyChainTask $r24;

        r0 := @this: com.android.certinstaller.CertInstaller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        if i0 != 1 goto label3;

        if i1 != -1 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("credential is added: ");

        $r11 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $r14 = virtualinvoke $r11.<com.android.certinstaller.CredentialHelper: java.lang.String getName()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CertInstaller", $r15);

        $r17 = newarray (java.lang.Object)[1];

        $r16 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $r19 = virtualinvoke $r16.<com.android.certinstaller.CredentialHelper: java.lang.String getName()>();

        $r17[0] = $r19;

        $r18 = virtualinvoke r0.<com.android.certinstaller.CertInstaller: java.lang.String getString(int,java.lang.Object[])>(2131099671, $r17);

        $r21 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r18, 1);

        virtualinvoke $r21.<android.widget.Toast: void show()>();

        $r20 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z0 = virtualinvoke $r20.<com.android.certinstaller.CredentialHelper: boolean hasCaCerts()>();

        if $z0 == 0 goto label1;

        $r24 = new com.android.certinstaller.CertInstaller$InstallCaCertsToKeyChainTask;

        specialinvoke $r24.<com.android.certinstaller.CertInstaller$InstallCaCertsToKeyChainTask: void <init>(com.android.certinstaller.CertInstaller,com.android.certinstaller.CertInstaller$1)>(r0, null);

        $r22 = newarray (java.lang.Void)[0];

        virtualinvoke $r24.<com.android.certinstaller.CertInstaller$InstallCaCertsToKeyChainTask: android.os.AsyncTask execute(java.lang.Object[])>($r22);

        return;

     label1:
        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void setResult(int)>(-1);

        goto label4;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("credential not saved, err: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CertInstaller", $r9);

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void toastErrorAndFinish(int)>(2131099668);

        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown request code: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CertInstaller", $r5);

     label4:
        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void finish()>();

        return;
    }

    void installOthers()
    {
        com.android.certinstaller.CertInstaller r0;
        java.security.cert.X509Certificate r1;
        java.lang.String r2, $r13, $r17;
        java.util.Map r3;
        byte[] r4, $r8;
        com.android.certinstaller.CredentialHelper $r5, $r6, $r18;
        boolean $z0;
        java.security.PublicKey $r7;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r15, $r16;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r5 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z0 = virtualinvoke $r5.<com.android.certinstaller.CredentialHelper: boolean hasKeyPair()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void saveKeyPair()>();

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void finish()>();

        goto label4;

     label1:
        $r6 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        r1 = virtualinvoke $r6.<com.android.certinstaller.CredentialHelper: java.security.cert.X509Certificate getUserCertificate()>();

        if r1 == null goto label3;

        $r7 = virtualinvoke r1.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r8 = interfaceinvoke $r7.<java.security.PublicKey: byte[] getEncoded()>();

        r2 = staticinvoke <com.android.certinstaller.Util: java.lang.String toMd5(byte[])>($r8);

        r3 = specialinvoke r0.<com.android.certinstaller.CertInstaller: java.util.Map getPkeyMap()>();

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (byte[]) $r9;

        if r4 == null goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found matched key: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CertInstaller", $r17);

        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void savePkeyMap(java.util.Map)>(r3);

        $r18 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        virtualinvoke $r18.<com.android.certinstaller.CredentialHelper: void setPrivateKey(byte[])>(r4);

        goto label3;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("didn\'t find matched private key: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CertInstaller", $r13);

     label3:
        specialinvoke r0.<com.android.certinstaller.CertInstaller: void nameCredential()>();

     label4:
        return;
    }

    private void sendUnlockKeyStoreIntent()
    {
        com.android.certinstaller.CertInstaller r0;
        android.security.Credentials $r1;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r1 = staticinvoke <android.security.Credentials: android.security.Credentials getInstance()>();

        virtualinvoke $r1.<android.security.Credentials: void unlock(android.content.Context)>(r0);

        return;
    }

    private void nameCredential()
    {
        com.android.certinstaller.CertInstaller r0;
        com.android.certinstaller.CredentialHelper $r1;
        boolean $z0;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z0 = virtualinvoke $r1.<com.android.certinstaller.CredentialHelper: boolean hasAnyForSystemInstall()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void toastErrorAndFinish(int)>(2131099669);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void showDialog(int)>(1);

     label2:
        return;
    }

    private void saveKeyPair()
    {
        com.android.certinstaller.CertInstaller r0;
        byte[] r1, $r6;
        java.lang.String r2, $r13;
        java.util.Map r3;
        com.android.certinstaller.CredentialHelper $r4, $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r4 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        r1 = virtualinvoke $r4.<com.android.certinstaller.CredentialHelper: byte[] getData(java.lang.String)>("PKEY");

        $r5 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $r6 = virtualinvoke $r5.<com.android.certinstaller.CredentialHelper: byte[] getData(java.lang.String)>("KEY");

        r2 = staticinvoke <com.android.certinstaller.Util: java.lang.String toMd5(byte[])>($r6);

        r3 = specialinvoke r0.<com.android.certinstaller.CertInstaller: java.util.Map getPkeyMap()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void savePkeyMap(java.util.Map)>(r3);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("save privatekey: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> #keys:");

        $i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CertInstaller", $r13);

        return;
    }

    private void savePkeyMap(java.util.Map)
    {
        com.android.certinstaller.CertInstaller r0;
        java.util.Map r1;
        byte[] r2;
        boolean $z0, $z1, $z2;
        android.security.KeyStore $r3, $r4;

        r0 := @this: com.android.certinstaller.CertInstaller;

        r1 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.android.certinstaller.CertInstaller: android.security.KeyStore mKeyStore>;

        $z2 = virtualinvoke $r4.<android.security.KeyStore: boolean delete(java.lang.String)>("PKEY_MAP");

        if $z2 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CertInstaller", "savePkeyMap(): failed to delete pkey map");

     label1:
        return;

     label2:
        r2 = staticinvoke <com.android.certinstaller.Util: byte[] toBytes(java.lang.Object)>(r1);

        $r3 = r0.<com.android.certinstaller.CertInstaller: android.security.KeyStore mKeyStore>;

        $z1 = virtualinvoke $r3.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>("PKEY_MAP", r2, -1, 1);

        if $z1 != 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CertInstaller", "savePkeyMap(): failed to write pkey map");

     label3:
        return;
    }

    private java.util.Map getPkeyMap()
    {
        com.android.certinstaller.CertInstaller r0;
        byte[] r1;
        java.util.Map r2;
        android.security.KeyStore $r3;
        com.android.certinstaller.CertInstaller$MyMap $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r3 = r0.<com.android.certinstaller.CertInstaller: android.security.KeyStore mKeyStore>;

        r1 = virtualinvoke $r3.<android.security.KeyStore: byte[] get(java.lang.String)>("PKEY_MAP");

        if r1 == null goto label1;

        $r5 = staticinvoke <com.android.certinstaller.Util: java.lang.Object fromBytes(byte[])>(r1);

        r2 = (java.util.Map) $r5;

        if r2 == null goto label1;

        return r2;

     label1:
        $r4 = new com.android.certinstaller.CertInstaller$MyMap;

        specialinvoke $r4.<com.android.certinstaller.CertInstaller$MyMap: void <init>(com.android.certinstaller.CertInstaller$1)>(null);

        return $r4;
    }

    void extractPkcs12InBackground(java.lang.String)
    {
        com.android.certinstaller.CertInstaller r0;
        java.lang.String r1;
        com.android.certinstaller.CertInstaller$1 $r2;
        java.lang.Void[] $r3;

        r0 := @this: com.android.certinstaller.CertInstaller;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void showDialog(int)>(3);

        $r2 = new com.android.certinstaller.CertInstaller$1;

        specialinvoke $r2.<com.android.certinstaller.CertInstaller$1: void <init>(com.android.certinstaller.CertInstaller,java.lang.String)>(r0, r1);

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<com.android.certinstaller.CertInstaller$1: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    void onExtractionDone(boolean)
    {
        com.android.certinstaller.CertInstaller r0;
        boolean z0;
        com.android.certinstaller.ViewHelper $r1, $r2;

        r0 := @this: com.android.certinstaller.CertInstaller;

        z0 := @parameter0: boolean;

        r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction> = null;

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void removeDialog(int)>(3);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void removeDialog(int)>(2);

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void nameCredential()>();

        goto label2;

     label1:
        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r1.<com.android.certinstaller.ViewHelper: void setText(int,java.lang.String)>(2131296261, "");

        $r2 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r2.<com.android.certinstaller.ViewHelper: void showError(int)>(2131099662);

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void showDialog(int)>(2);

     label2:
        return;
    }

    private android.app.Dialog createPkcs12PasswordDialog()
    {
        com.android.certinstaller.CertInstaller r0;
        android.view.View r1;
        java.lang.String r2, $r8, r19;
        android.app.AlertDialog r3;
        com.android.certinstaller.ViewHelper $r4, $r5, $r17, $r18;
        boolean $z0, $z1;
        com.android.certinstaller.CredentialHelper $r6;
        java.lang.Object[] $r7;
        android.app.AlertDialog$Builder $r9, $r10, $r11, $r14, $r15;
        com.android.certinstaller.CertInstaller$3 $r12;
        com.android.certinstaller.CertInstaller$2 $r13;
        com.android.certinstaller.CertInstaller$4 $r16;

        r0 := @this: com.android.certinstaller.CertInstaller;

        r1 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130837505, null);

        $r4 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r4.<com.android.certinstaller.ViewHelper: void setView(android.view.View)>(r1);

        $r5 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        $z0 = virtualinvoke $r5.<com.android.certinstaller.ViewHelper: boolean getHasEmptyError()>();

        if $z0 == 0 goto label1;

        $r17 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r17.<com.android.certinstaller.ViewHelper: void showError(int)>(2131099663);

        $r18 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r18.<com.android.certinstaller.ViewHelper: void setHasEmptyError(boolean)>(0);

     label1:
        $r6 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        r2 = virtualinvoke $r6.<com.android.certinstaller.CredentialHelper: java.lang.String getName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.android.certinstaller.CertInstaller: java.lang.String getString(int)>(2131099650);

        goto label3;

     label2:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r2;

        $r8 = virtualinvoke r0.<com.android.certinstaller.CertInstaller: java.lang.String getString(int,java.lang.Object[])>(2131099652, $r7);

     label3:
        r19 = $r8;

        $r9 = new android.app.AlertDialog$Builder;

        specialinvoke $r9.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r10 = virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r1);

        $r11 = virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>(r19);

        $r12 = new com.android.certinstaller.CertInstaller$3;

        specialinvoke $r12.<com.android.certinstaller.CertInstaller$3: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        $r14 = virtualinvoke $r11.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r12);

        $r13 = new com.android.certinstaller.CertInstaller$2;

        specialinvoke $r13.<com.android.certinstaller.CertInstaller$2: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        $r15 = virtualinvoke $r14.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(17039360, $r13);

        r3 = virtualinvoke $r15.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r16 = new com.android.certinstaller.CertInstaller$4;

        specialinvoke $r16.<com.android.certinstaller.CertInstaller$4: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        virtualinvoke r3.<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r16);

        return r3;
    }

    private android.app.Dialog createNameCredentialDialog()
    {
        com.android.certinstaller.CertInstaller r0;
        android.view.ViewGroup r1;
        android.widget.EditText r2;
        android.widget.Spinner r3;
        android.view.View $r4, $r11, $r14, $r25;
        com.android.certinstaller.ViewHelper $r5, $r6, $r8, $r24, $r26;
        boolean $z0, $z1;
        com.android.certinstaller.CredentialHelper $r7, $r12;
        java.lang.CharSequence $r9;
        java.lang.String $r10, $r16;
        com.android.certinstaller.CertInstaller$5 $r13;
        android.app.AlertDialog$Builder $r15, $r17, $r18, $r21, $r22;
        com.android.certinstaller.CertInstaller$7 $r19;
        com.android.certinstaller.CertInstaller$6 $r20;
        com.android.certinstaller.CertInstaller$8 $r23;
        android.app.AlertDialog r27;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r4 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130837504, null);

        r1 = (android.view.ViewGroup) $r4;

        $r5 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r5.<com.android.certinstaller.ViewHelper: void setView(android.view.View)>(r1);

        $r6 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        $z0 = virtualinvoke $r6.<com.android.certinstaller.ViewHelper: boolean getHasEmptyError()>();

        if $z0 == 0 goto label1;

        $r24 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r24.<com.android.certinstaller.ViewHelper: void showError(int)>(2131099664);

        $r26 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        virtualinvoke $r26.<com.android.certinstaller.ViewHelper: void setHasEmptyError(boolean)>(0);

     label1:
        $r8 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        $r7 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $r9 = virtualinvoke $r7.<com.android.certinstaller.CredentialHelper: java.lang.CharSequence getDescription(android.content.Context)>(r0);

        $r10 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r8.<com.android.certinstaller.ViewHelper: void setText(int,java.lang.String)>(2131296260, $r10);

        $r11 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(2131296257);

        r2 = (android.widget.EditText) $r11;

        $r12 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        $z1 = virtualinvoke $r12.<com.android.certinstaller.CredentialHelper: boolean isInstallAsUidSet()>();

        if $z1 == 0 goto label2;

        $r25 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(2131296258);

        virtualinvoke $r25.<android.view.View: void setVisibility(int)>(8);

        goto label3;

     label2:
        $r14 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(2131296259);

        r3 = (android.widget.Spinner) $r14;

        $r13 = new com.android.certinstaller.CertInstaller$5;

        specialinvoke $r13.<com.android.certinstaller.CertInstaller$5: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        virtualinvoke r3.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r13);

     label3:
        $r16 = specialinvoke r0.<com.android.certinstaller.CertInstaller: java.lang.String getDefaultName()>();

        virtualinvoke r2.<android.widget.EditText: void setText(java.lang.CharSequence)>($r16);

        virtualinvoke r2.<android.widget.EditText: void selectAll()>();

        $r15 = new android.app.AlertDialog$Builder;

        specialinvoke $r15.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r18 = virtualinvoke $r15.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r1);

        $r17 = virtualinvoke $r18.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099653);

        $r19 = new com.android.certinstaller.CertInstaller$7;

        specialinvoke $r19.<com.android.certinstaller.CertInstaller$7: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        $r21 = virtualinvoke $r17.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r19);

        $r20 = new com.android.certinstaller.CertInstaller$6;

        specialinvoke $r20.<com.android.certinstaller.CertInstaller$6: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        $r22 = virtualinvoke $r21.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(17039360, $r20);

        r27 = virtualinvoke $r22.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r23 = new com.android.certinstaller.CertInstaller$8;

        specialinvoke $r23.<com.android.certinstaller.CertInstaller$8: void <init>(com.android.certinstaller.CertInstaller)>(r0);

        virtualinvoke r27.<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r23);

        return r27;
    }

    private java.lang.String getDefaultName()
    {
        com.android.certinstaller.CertInstaller r0;
        java.lang.String r1;
        int i0;
        com.android.certinstaller.CredentialHelper $r2;
        boolean $z0;

        r0 := @this: com.android.certinstaller.CertInstaller;

        $r2 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        r1 = virtualinvoke $r2.<com.android.certinstaller.CredentialHelper: java.lang.String getName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if i0 <= 0 goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        return r1;
    }

    private void toastErrorAndFinish(int)
    {
        com.android.certinstaller.CertInstaller r0;
        int i0;
        android.widget.Toast $r1;

        r0 := @this: com.android.certinstaller.CertInstaller;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r0, i0, 0);

        virtualinvoke $r1.<android.widget.Toast: void show()>();

        virtualinvoke r0.<com.android.certinstaller.CertInstaller: void finish()>();

        return;
    }

    static com.android.certinstaller.CredentialHelper access$200(com.android.certinstaller.CertInstaller)
    {
        com.android.certinstaller.CertInstaller r0;
        com.android.certinstaller.CredentialHelper $r1;

        r0 := @parameter0: com.android.certinstaller.CertInstaller;

        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CredentialHelper mCredentials>;

        return $r1;
    }

    static int access$400(com.android.certinstaller.CertInstaller)
    {
        com.android.certinstaller.CertInstaller r0;
        int $i0;

        r0 := @parameter0: com.android.certinstaller.CertInstaller;

        $i0 = r0.<com.android.certinstaller.CertInstaller: int mState>;

        return $i0;
    }

    static com.android.certinstaller.CertInstaller$MyAction access$502(com.android.certinstaller.CertInstaller, com.android.certinstaller.CertInstaller$MyAction)
    {
        com.android.certinstaller.CertInstaller r0;
        com.android.certinstaller.CertInstaller$MyAction r1;

        r0 := @parameter0: com.android.certinstaller.CertInstaller;

        r1 := @parameter1: com.android.certinstaller.CertInstaller$MyAction;

        r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction> = r1;

        return r1;
    }

    static void access$600(com.android.certinstaller.CertInstaller, int)
    {
        com.android.certinstaller.CertInstaller r0;
        int i0;

        r0 := @parameter0: com.android.certinstaller.CertInstaller;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.certinstaller.CertInstaller: void toastErrorAndFinish(int)>(i0);

        return;
    }

    static com.android.certinstaller.ViewHelper access$700(com.android.certinstaller.CertInstaller)
    {
        com.android.certinstaller.CertInstaller r0;
        com.android.certinstaller.ViewHelper $r1;

        r0 := @parameter0: com.android.certinstaller.CertInstaller;

        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.ViewHelper mView>;

        return $r1;
    }

    static com.android.certinstaller.CertInstaller$MyAction access$500(com.android.certinstaller.CertInstaller)
    {
        com.android.certinstaller.CertInstaller r0;
        com.android.certinstaller.CertInstaller$MyAction $r1;

        r0 := @parameter0: com.android.certinstaller.CertInstaller;

        $r1 = r0.<com.android.certinstaller.CertInstaller: com.android.certinstaller.CertInstaller$MyAction mNextAction>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.certinstaller.CertInstaller: int USAGE_TYPE_WIFI> = 1;

        <com.android.certinstaller.CertInstaller: int USAGE_TYPE_SYSTEM> = 0;

        <com.android.certinstaller.CertInstaller: java.lang.String PKEY_MAP_KEY> = "PKEY_MAP";

        <com.android.certinstaller.CertInstaller: java.lang.String NEXT_ACTION_KEY> = "na";

        <com.android.certinstaller.CertInstaller: int REQUEST_SYSTEM_INSTALL_CODE> = 1;

        <com.android.certinstaller.CertInstaller: int PROGRESS_BAR_DIALOG> = 3;

        <com.android.certinstaller.CertInstaller: int PKCS12_PASSWORD_DIALOG> = 2;

        <com.android.certinstaller.CertInstaller: int NAME_CREDENTIAL_DIALOG> = 1;

        <com.android.certinstaller.CertInstaller: int STATE_PAUSED> = 3;

        <com.android.certinstaller.CertInstaller: int STATE_RUNNING> = 2;

        <com.android.certinstaller.CertInstaller: int STATE_INIT> = 1;

        <com.android.certinstaller.CertInstaller: java.lang.String TAG> = "CertInstaller";

        return;
    }
}
