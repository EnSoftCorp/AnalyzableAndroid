public class android.support.v4.media.session.MediaSessionCompat extends java.lang.Object
{
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl;
    public static final int FLAG_HANDLES_MEDIA_BUTTONS;
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS;

    public void <init>(android.content.Context, java.lang.String)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.content.Context r1;
        java.lang.String r2;
        boolean $z0;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r6;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("tag must not be null or empty");

        throw $r5;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r4 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21;

        specialinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21: void <init>(android.content.Context,java.lang.String)>(r1, r2);

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r4;

        goto label4;

     label3:
        $r3 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;

        specialinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r3;

     label4:
        return;
    }

    private void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = r1;

        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Callback r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>(r1, null);

        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$Callback r1;
        android.os.Handler r2, $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;

        r2 := @parameter1: android.os.Handler;

        $r4 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

     label2:
        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>(r1, $r3);

        return;
    }

    public void setFlags(int)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        int i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setFlags(int)>(i0);

        return;
    }

    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        int i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackToLocal(int)>(i0);

        return;
    }

    public void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.VolumeProviderCompat r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null!");

        throw $r3;

     label1:
        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)>(r1);

        return;
    }

    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        boolean z0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setActive(boolean)>(z0);

        return;
    }

    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        boolean $z0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: boolean isActive()>();

        return $z0;
    }

    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event cannot be null or empty");

        throw $r4;

     label1:
        $r3 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void sendSessionEvent(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void release()>();

        return;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        return $r2;
    }

    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.PlaybackStateCompat r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>(r1);

        return;
    }

    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.MediaMetadataCompat r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMetadata(android.support.v4.media.MediaMetadataCompat)>(r1);

        return;
    }

    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        java.lang.Object $r2;

        r0 := @this: android.support.v4.media.session.MediaSessionCompat;

        $r1 = r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.Object getMediaSession()>();

        return $r2;
    }

    public static android.support.v4.media.session.MediaSessionCompat obtain(java.lang.Object)
    {
        java.lang.Object r0;
        android.support.v4.media.session.MediaSessionCompat $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = new android.support.v4.media.session.MediaSessionCompat;

        $r2 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21;

        specialinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21: void <init>(java.lang.Object)>(r0);

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)>($r2);

        return $r1;
    }

    public static void <clinit>()
    {
        <android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_TRANSPORT_CONTROLS> = 2;

        <android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_MEDIA_BUTTONS> = 1;

        return;
    }
}
