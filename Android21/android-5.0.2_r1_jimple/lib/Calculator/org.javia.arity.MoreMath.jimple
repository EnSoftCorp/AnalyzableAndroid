class org.javia.arity.MoreMath extends java.lang.Object
{
    private static final double LOG2E;
    static final double[] GAMMA;
    static final double[] FACT;

    void <init>()
    {
        org.javia.arity.MoreMath r0;

        r0 := @this: org.javia.arity.MoreMath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final double asinh(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        byte $b0;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $d9 = neg d0;

        $d10 = staticinvoke <org.javia.arity.MoreMath: double asinh(double)>($d9);

        $d8 = neg $d10;

        goto label2;

     label1:
        $d3 = d0 + d0;

        $d1 = d0 * d0;

        $d2 = $d1 + 1.0;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        $d5 = $d4 + d0;

        $d6 = 1.0 / $d5;

        $d7 = $d3 + $d6;

        $d8 = staticinvoke <java.lang.Math: double log(double)>($d7);

     label2:
        return $d8;
    }

    public static final double acosh(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        d0 := @parameter0: double;

        $d3 = d0 + d0;

        $d1 = d0 * d0;

        $d2 = $d1 - 1.0;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        $d5 = $d4 + d0;

        $d6 = 1.0 / $d5;

        $d7 = $d3 - $d6;

        $d8 = staticinvoke <java.lang.Math: double log(double)>($d7);

        return $d8;
    }

    public static final double atanh(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $d7 = neg d0;

        $d8 = staticinvoke <org.javia.arity.MoreMath: double atanh(double)>($d7);

        $d6 = neg $d8;

        goto label2;

     label1:
        $d2 = d0 + d0;

        $d1 = 1.0 - d0;

        $d3 = $d2 / $d1;

        $d4 = 1.0 + $d3;

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        $d6 = 0.5 * $d5;

     label2:
        return $d6;
    }

    public static final double trunc(double)
    {
        double d0, $d1;
        byte $b0;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        goto label2;

     label1:
        $d1 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

     label2:
        return $d1;
    }

    public static final double gcd(double, double)
    {
        double d0, d1, d2, $d3, d4, d5;
        boolean $z0, $z1, $z2, $z3;
        byte $b0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z2 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);

        if $z3 == 0 goto label2;

     label1:
        return #NaN;

     label2:
        d4 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        d5 = staticinvoke <java.lang.Math: double abs(double)>(d1);

     label3:
        $d3 = d5 * 1.0E15;

        $b0 = d4 cmpg $d3;

        if $b0 >= 0 goto label4;

        d2 = d5;

        d5 = d4 % d5;

        d4 = d2;

        goto label3;

     label4:
        return d4;
    }

    public static final double lgamma(double)
    {
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        int i0, $i1;
        double[] $r0, $r1;

        d0 := @parameter0: double;

        d1 = d0 + 5.2421875;

        d2 = 0.9999999999999971;

        i0 = 0;

     label1:
        $r0 = <org.javia.arity.MoreMath: double[] GAMMA>;

        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $r1 = <org.javia.arity.MoreMath: double[] GAMMA>;

        $d10 = $r1[i0];

        $d11 = d0 + 1.0;

        d0 = $d11;

        $d12 = $d10 / $d11;

        d2 = d2 + $d12;

        i0 = i0 + 1;

        goto label1;

     label2:
        $d3 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d4 = 0.9189385332046728 + $d3;

        $d5 = d1 - 4.7421875;

        $d6 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d7 = $d5 * $d6;

        $d8 = $d4 + $d7;

        $d9 = $d8 - d1;

        return $d9;
    }

    public static final double factorial(double)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        int i0, $i4, $i5, $i6;
        byte $b1, $b2, $b3;
        double[] $r0, $r1;

        d0 := @parameter0: double;

        $b1 = d0 cmpg 0.0;

        if $b1 >= 0 goto label01;

        return #NaN;

     label01:
        $b2 = d0 cmpg 170.0;

        if $b2 > 0 goto label10;

        $d4 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        $b3 = $d4 cmpl d0;

        if $b3 != 0 goto label10;

        i0 = (int) d0;

        d1 = d0;

        $i4 = i0 & 7;

        tableswitch($i4)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label02;
            default: goto label10;
        };

     label02:
        $d5 = d0 - 1.0;

        d0 = $d5;

        d1 = d1 * $d5;

     label03:
        $d6 = d0 - 1.0;

        d0 = $d6;

        d1 = d1 * $d6;

     label04:
        $d7 = d0 - 1.0;

        d0 = $d7;

        d1 = d1 * $d7;

     label05:
        $d8 = d0 - 1.0;

        d0 = $d8;

        d1 = d1 * $d8;

     label06:
        $d10 = d0 - 1.0;

        d0 = $d10;

        d1 = d1 * $d10;

     label07:
        $d9 = d0 - 1.0;

        d1 = d1 * $d9;

     label08:
        $r0 = <org.javia.arity.MoreMath: double[] FACT>;

        $i5 = i0 >> 3;

        $d12 = $r0[$i5];

        $d11 = $d12 * d1;

        return $d11;

     label09:
        $r1 = <org.javia.arity.MoreMath: double[] FACT>;

        $i6 = i0 >> 3;

        $d13 = $r1[$i6];

        return $d13;

     label10:
        $d2 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>(d0);

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        return $d3;
    }

    public static final double combinations(double, double)
    {
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b1 = d1 cmpg 0.0;

        if $b1 >= 0 goto label2;

     label1:
        return #NaN;

     label2:
        $b2 = d0 cmpg d1;

        if $b2 >= 0 goto label3;

        return 0.0;

     label3:
        $d5 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        $b3 = $d5 cmpl d0;

        if $b3 != 0 goto label7;

        $d13 = staticinvoke <java.lang.Math: double floor(double)>(d1);

        $b4 = $d13 cmpl d1;

        if $b4 != 0 goto label7;

        $d14 = d0 - d1;

        d23 = staticinvoke <java.lang.Math: double min(double,double)>(d1, $d14);

        $b6 = d0 cmpg 170.0;

        if $b6 > 0 goto label4;

        $b8 = 12.0 cmpg d23;

        if $b8 >= 0 goto label4;

        $b9 = d23 cmpg 170.0;

        if $b9 > 0 goto label4;

        $d19 = staticinvoke <org.javia.arity.MoreMath: double factorial(double)>(d0);

        $d17 = staticinvoke <org.javia.arity.MoreMath: double factorial(double)>(d23);

        $d21 = $d19 / $d17;

        $d18 = d0 - d23;

        $d22 = staticinvoke <org.javia.arity.MoreMath: double factorial(double)>($d18);

        $d20 = $d21 / $d22;

        return $d20;

     label4:
        d2 = 1.0;

        d3 = d0 - d23;

        d4 = d23;

     label5:
        $b5 = d4 cmpl 0.5;

        if $b5 <= 0 goto label6;

        $b7 = d2 cmpg #Infinity;

        if $b7 >= 0 goto label6;

        $d15 = d3 + d4;

        $d16 = $d15 / d4;

        d2 = d2 * $d16;

        d4 = d4 - 1.0;

        goto label5;

     label6:
        return d2;

     label7:
        $d6 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>(d0);

        $d8 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>(d1);

        $d10 = $d6 - $d8;

        $d7 = d0 - d1;

        $d9 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>($d7);

        $d12 = $d10 - $d9;

        $d11 = staticinvoke <java.lang.Math: double exp(double)>($d12);

        return $d11;
    }

    public static final double permutations(double, double)
    {
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b1 = d1 cmpg 0.0;

        if $b1 >= 0 goto label2;

     label1:
        return #NaN;

     label2:
        $b2 = d0 cmpg d1;

        if $b2 >= 0 goto label3;

        return 0.0;

     label3:
        $d5 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        $b3 = $d5 cmpl d0;

        if $b3 != 0 goto label7;

        $d11 = staticinvoke <java.lang.Math: double floor(double)>(d1);

        $b4 = $d11 cmpl d1;

        if $b4 != 0 goto label7;

        $b5 = d0 cmpg 170.0;

        if $b5 > 0 goto label4;

        $b9 = 10.0 cmpg d1;

        if $b9 >= 0 goto label4;

        $b8 = d1 cmpg 170.0;

        if $b8 > 0 goto label4;

        $d14 = staticinvoke <org.javia.arity.MoreMath: double factorial(double)>(d0);

        $d13 = d0 - d1;

        $d16 = staticinvoke <org.javia.arity.MoreMath: double factorial(double)>($d13);

        $d15 = $d14 / $d16;

        return $d15;

     label4:
        d2 = 1.0;

        $d12 = d0 - d1;

        d3 = $d12 + 0.5;

        d4 = d0;

     label5:
        $b7 = d4 cmpl d3;

        if $b7 <= 0 goto label6;

        $b6 = d2 cmpg #Infinity;

        if $b6 >= 0 goto label6;

        d2 = d2 * d4;

        d4 = d4 - 1.0;

        goto label5;

     label6:
        return d2;

     label7:
        $d6 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>(d0);

        $d8 = d0 - d1;

        $d7 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>($d8);

        $d10 = $d6 - $d7;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        return $d9;
    }

    public static final double log2(double)
    {
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double log(double)>(d0);

        $d2 = $d1 * 1.4426950408889634;

        return $d2;
    }

    private static final boolean isPiMultiple(double)
    {
        double d0, d1, $d2;
        byte $b0;
        boolean $z0;

        d0 := @parameter0: double;

        d1 = d0 / 3.141592653589793;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>(d1);

        $b0 = d1 cmpl $d2;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final double sin(double)
    {
        double d0, $d1;
        boolean $z0;

        d0 := @parameter0: double;

        $z0 = staticinvoke <org.javia.arity.MoreMath: boolean isPiMultiple(double)>(d0);

        if $z0 == 0 goto label1;

        $d1 = 0.0;

        goto label2;

     label1:
        $d1 = staticinvoke <java.lang.Math: double sin(double)>(d0);

     label2:
        return $d1;
    }

    public static final double cos(double)
    {
        double d0, $d1, $d2;
        boolean $z0;

        d0 := @parameter0: double;

        $d1 = d0 - 1.5707963267948966;

        $z0 = staticinvoke <org.javia.arity.MoreMath: boolean isPiMultiple(double)>($d1);

        if $z0 == 0 goto label1;

        $d2 = 0.0;

        goto label2;

     label1:
        $d2 = staticinvoke <java.lang.Math: double cos(double)>(d0);

     label2:
        return $d2;
    }

    public static final double tan(double)
    {
        double d0, $d1;
        boolean $z0;

        d0 := @parameter0: double;

        $z0 = staticinvoke <org.javia.arity.MoreMath: boolean isPiMultiple(double)>(d0);

        if $z0 == 0 goto label1;

        $d1 = 0.0;

        goto label2;

     label1:
        $d1 = staticinvoke <java.lang.Math: double tan(double)>(d0);

     label2:
        return $d1;
    }

    public static final int intLog10(double)
    {
        double d0, $d1, $d2;
        int $i0;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double log10(double)>(d0);

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        $i0 = (int) $d2;

        return $i0;
    }

    public static final double intExp10(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;
        double $d0;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1E");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        return $d0;
    }

    static void <clinit>()
    {
        double[] $r0, $r1;

        <org.javia.arity.MoreMath: double LOG2E> = 1.4426950408889634;

        $r0 = newarray (double)[14];

        $r0[0] = 57.15623566586292;

        $r0[1] = -59.59796035547549;

        $r0[2] = 14.136097974741746;

        $r0[3] = -0.4919138160976202;

        $r0[4] = 3.399464998481189E-5;

        $r0[5] = 4.652362892704858E-5;

        $r0[6] = -9.837447530487956E-5;

        $r0[7] = 1.580887032249125E-4;

        $r0[8] = -2.1026444172410488E-4;

        $r0[9] = 2.1743961811521265E-4;

        $r0[10] = -1.643181065367639E-4;

        $r0[11] = 8.441822398385275E-5;

        $r0[12] = -2.6190838401581408E-5;

        $r0[13] = 3.6899182659531625E-6;

        <org.javia.arity.MoreMath: double[] GAMMA> = $r0;

        $r1 = newarray (double)[22];

        $r1[0] = 1.0;

        $r1[1] = 40320.0;

        $r1[2] = 2.0922789888E13;

        $r1[3] = 6.204484017332394E23;

        $r1[4] = 2.631308369336935E35;

        $r1[5] = 8.159152832478977E47;

        $r1[6] = 1.2413915592536073E61;

        $r1[7] = 7.109985878048635E74;

        $r1[8] = 1.2688693218588417E89;

        $r1[9] = 6.1234458376886085E103;

        $r1[10] = 7.156945704626381E118;

        $r1[11] = 1.8548264225739844E134;

        $r1[12] = 9.916779348709496E149;

        $r1[13] = 1.0299016745145628E166;

        $r1[14] = 1.974506857221074E182;

        $r1[15] = 6.689502913449127E198;

        $r1[16] = 3.856204823625804E215;

        $r1[17] = 3.659042881952549E232;

        $r1[18] = 5.5502938327393044E249;

        $r1[19] = 1.3113358856834524E267;

        $r1[20] = 4.7147236359920616E284;

        $r1[21] = 2.5260757449731984E302;

        <org.javia.arity.MoreMath: double[] FACT> = $r1;

        return;
    }
}
