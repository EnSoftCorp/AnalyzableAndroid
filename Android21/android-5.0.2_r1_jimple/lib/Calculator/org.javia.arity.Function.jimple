public abstract class org.javia.arity.Function extends java.lang.Object
{
    private org.javia.arity.Function cachedDerivate;
    java.lang.String comment;

    public void <init>()
    {
        org.javia.arity.Function r0;

        r0 := @this: org.javia.arity.Function;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.javia.arity.Function: org.javia.arity.Function cachedDerivate> = null;

        return;
    }

    public abstract int arity();

    public org.javia.arity.Function getDerivative()
    {
        org.javia.arity.Function r0, $r1, $r2;
        org.javia.arity.Derivative $r3;

        r0 := @this: org.javia.arity.Function;

        $r1 = r0.<org.javia.arity.Function: org.javia.arity.Function cachedDerivate>;

        if $r1 != null goto label1;

        $r3 = new org.javia.arity.Derivative;

        specialinvoke $r3.<org.javia.arity.Derivative: void <init>(org.javia.arity.Function)>(r0);

        r0.<org.javia.arity.Function: org.javia.arity.Function cachedDerivate> = $r3;

     label1:
        $r2 = r0.<org.javia.arity.Function: org.javia.arity.Function cachedDerivate>;

        return $r2;
    }

    void setDerivative(org.javia.arity.Function)
    {
        org.javia.arity.Function r0, r1;

        r0 := @this: org.javia.arity.Function;

        r1 := @parameter0: org.javia.arity.Function;

        r0.<org.javia.arity.Function: org.javia.arity.Function cachedDerivate> = r1;

        return;
    }

    public double eval()
    {
        org.javia.arity.Function r0;
        org.javia.arity.ArityException $r1;

        r0 := @this: org.javia.arity.Function;

        $r1 = new org.javia.arity.ArityException;

        specialinvoke $r1.<org.javia.arity.ArityException: void <init>(int)>(0);

        throw $r1;
    }

    public double eval(double)
    {
        org.javia.arity.Function r0;
        double d0;
        org.javia.arity.ArityException $r1;

        r0 := @this: org.javia.arity.Function;

        d0 := @parameter0: double;

        $r1 = new org.javia.arity.ArityException;

        specialinvoke $r1.<org.javia.arity.ArityException: void <init>(int)>(1);

        throw $r1;
    }

    public double eval(double, double)
    {
        org.javia.arity.Function r0;
        double d0, d1;
        org.javia.arity.ArityException $r1;

        r0 := @this: org.javia.arity.Function;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new org.javia.arity.ArityException;

        specialinvoke $r1.<org.javia.arity.ArityException: void <init>(int)>(2);

        throw $r1;
    }

    public double eval(double[])
    {
        org.javia.arity.Function r0;
        double[] r1;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.javia.arity.ArityException $r2;

        r0 := @this: org.javia.arity.Function;

        r1 := @parameter0: double[];

        $i0 = lengthof r1;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $d0 = virtualinvoke r0.<org.javia.arity.Function: double eval()>();

        return $d0;

     label2:
        $d4 = r1[0];

        $d5 = virtualinvoke r0.<org.javia.arity.Function: double eval(double)>($d4);

        return $d5;

     label3:
        $d2 = r1[0];

        $d1 = r1[1];

        $d3 = virtualinvoke r0.<org.javia.arity.Function: double eval(double,double)>($d2, $d1);

        return $d3;

     label4:
        $r2 = new org.javia.arity.ArityException;

        $i1 = lengthof r1;

        specialinvoke $r2.<org.javia.arity.ArityException: void <init>(int)>($i1);

        throw $r2;
    }

    public org.javia.arity.Complex evalComplex()
    {
        org.javia.arity.Function r0;
        org.javia.arity.Complex $r1;
        double $d0;

        r0 := @this: org.javia.arity.Function;

        virtualinvoke r0.<org.javia.arity.Function: void checkArity(int)>(0);

        $r1 = new org.javia.arity.Complex;

        $d0 = virtualinvoke r0.<org.javia.arity.Function: double eval()>();

        specialinvoke $r1.<org.javia.arity.Complex: void <init>(double,double)>($d0, 0.0);

        return $r1;
    }

    public org.javia.arity.Complex eval(org.javia.arity.Complex)
    {
        org.javia.arity.Function r0;
        org.javia.arity.Complex r1, $r2;
        double $d0, $d1, $d2;
        byte $b0;

        r0 := @this: org.javia.arity.Function;

        r1 := @parameter0: org.javia.arity.Complex;

        virtualinvoke r0.<org.javia.arity.Function: void checkArity(int)>(1);

        $r2 = new org.javia.arity.Complex;

        $d0 = r1.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r1.<org.javia.arity.Complex: double re>;

        $d2 = virtualinvoke r0.<org.javia.arity.Function: double eval(double)>($d1);

        goto label2;

     label1:
        $d2 = #NaN;

     label2:
        specialinvoke $r2.<org.javia.arity.Complex: void <init>(double,double)>($d2, 0.0);

        return $r2;
    }

    public org.javia.arity.Complex eval(org.javia.arity.Complex, org.javia.arity.Complex)
    {
        org.javia.arity.Function r0;
        org.javia.arity.Complex r1, r2, $r3;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Function;

        r1 := @parameter0: org.javia.arity.Complex;

        r2 := @parameter1: org.javia.arity.Complex;

        virtualinvoke r0.<org.javia.arity.Function: void checkArity(int)>(2);

        $r3 = new org.javia.arity.Complex;

        $d0 = r1.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r2.<org.javia.arity.Complex: double im>;

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        $d4 = r1.<org.javia.arity.Complex: double re>;

        $d3 = r2.<org.javia.arity.Complex: double re>;

        $d2 = virtualinvoke r0.<org.javia.arity.Function: double eval(double,double)>($d4, $d3);

        goto label2;

     label1:
        $d2 = #NaN;

     label2:
        specialinvoke $r3.<org.javia.arity.Complex: void <init>(double,double)>($d2, 0.0);

        return $r3;
    }

    public org.javia.arity.Complex eval(org.javia.arity.Complex[])
    {
        org.javia.arity.Function r0;
        org.javia.arity.Complex[] r1;
        int i0, i1, $i2, $i3;
        double[] r2;
        org.javia.arity.Complex $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2;
        byte $b4;

        r0 := @this: org.javia.arity.Function;

        r1 := @parameter0: org.javia.arity.Complex[];

        $i2 = lengthof r1;

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = virtualinvoke r0.<org.javia.arity.Function: org.javia.arity.Complex evalComplex()>();

        return $r3;

     label2:
        $r7 = r1[0];

        $r8 = virtualinvoke r0.<org.javia.arity.Function: org.javia.arity.Complex eval(org.javia.arity.Complex)>($r7);

        return $r8;

     label3:
        $r5 = r1[0];

        $r4 = r1[1];

        $r6 = virtualinvoke r0.<org.javia.arity.Function: org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex)>($r5, $r4);

        return $r6;

     label4:
        i0 = lengthof r1;

        virtualinvoke r0.<org.javia.arity.Function: void checkArity(int)>(i0);

        r2 = newarray (double)[i0];

        $i3 = lengthof r1;

        i1 = $i3 - 1;

     label5:
        if i1 < 0 goto label7;

        $r10 = r1[i1];

        $d1 = $r10.<org.javia.arity.Complex: double im>;

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label6;

        $r12 = new org.javia.arity.Complex;

        specialinvoke $r12.<org.javia.arity.Complex: void <init>(double,double)>(#NaN, 0.0);

        return $r12;

     label6:
        $r11 = r1[i1];

        $d2 = $r11.<org.javia.arity.Complex: double re>;

        r2[i1] = $d2;

        i1 = i1 + -1;

        goto label5;

     label7:
        $r9 = new org.javia.arity.Complex;

        $d0 = virtualinvoke r0.<org.javia.arity.Function: double eval(double[])>(r2);

        specialinvoke $r9.<org.javia.arity.Complex: void <init>(double,double)>($d0, 0.0);

        return $r9;
    }

    public void checkArity(int) throws org.javia.arity.ArityException
    {
        org.javia.arity.Function r0;
        int i0, $i1, $i2;
        org.javia.arity.ArityException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.javia.arity.Function;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.javia.arity.Function: int arity()>();

        if $i1 == i0 goto label1;

        $r1 = new org.javia.arity.ArityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $i2 = virtualinvoke r0.<org.javia.arity.Function: int arity()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments, got ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.javia.arity.ArityException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label1:
        return;
    }
}
