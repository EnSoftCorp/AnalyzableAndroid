public final class com.google.common.primitives.Primitives extends java.lang.Object
{
    private static final java.util.Map PRIMITIVE_TO_WRAPPER_TYPE;
    private static final java.util.Map WRAPPER_TO_PRIMITIVE_TYPE;

    private void <init>()
    {
        com.google.common.primitives.Primitives r0;

        r0 := @this: com.google.common.primitives.Primitives;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void add(java.util.Map, java.util.Map, java.lang.Class, java.lang.Class)
    {
        java.util.Map r0, r1;
        java.lang.Class r2, r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: java.lang.Class;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

        return;
    }

    public static java.util.Set allPrimitiveTypes()
    {
        java.util.Map $r0;
        java.util.Set $r1;

        $r0 = <com.google.common.primitives.Primitives: java.util.Map PRIMITIVE_TO_WRAPPER_TYPE>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        return $r1;
    }

    public static java.util.Set allWrapperTypes()
    {
        java.util.Map $r0;
        java.util.Set $r1;

        $r0 = <com.google.common.primitives.Primitives: java.util.Map WRAPPER_TO_PRIMITIVE_TYPE>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        return $r1;
    }

    public static boolean isWrapperType(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.google.common.primitives.Primitives: java.util.Map WRAPPER_TO_PRIMITIVE_TYPE>;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    public static java.lang.Class wrap(java.lang.Class)
    {
        java.lang.Class r0, r1, $r5;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = <com.google.common.primitives.Primitives: java.util.Map PRIMITIVE_TO_WRAPPER_TYPE>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Class) $r4;

        if r1 != null goto label1;

        $r5 = r0;

        goto label2;

     label1:
        $r5 = r1;

     label2:
        return $r5;
    }

    public static java.lang.Class unwrap(java.lang.Class)
    {
        java.lang.Class r0, r1, $r5;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = <com.google.common.primitives.Primitives: java.util.Map WRAPPER_TO_PRIMITIVE_TYPE>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Class) $r4;

        if r1 != null goto label1;

        $r5 = r0;

        goto label2;

     label1:
        $r5 = r1;

     label2:
        return $r5;
    }

    static void <clinit>()
    {
        java.util.HashMap r0, r1, $r2, $r3;
        java.lang.Class $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.util.Map $r13, $r14;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(16);

        r0 = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(16);

        r1 = $r3;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r4, class "java/lang/Boolean");

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r5, class "java/lang/Byte");

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r6, class "java/lang/Character");

        $r7 = <java.lang.Double: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r7, class "java/lang/Double");

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r8, class "java/lang/Float");

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r9, class "java/lang/Integer");

        $r10 = <java.lang.Long: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r10, class "java/lang/Long");

        $r11 = <java.lang.Short: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r11, class "java/lang/Short");

        $r12 = <java.lang.Void: java.lang.Class TYPE>;

        staticinvoke <com.google.common.primitives.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)>(r0, r1, $r12, class "java/lang/Void");

        $r13 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r0);

        <com.google.common.primitives.Primitives: java.util.Map PRIMITIVE_TO_WRAPPER_TYPE> = $r13;

        $r14 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        <com.google.common.primitives.Primitives: java.util.Map WRAPPER_TO_PRIMITIVE_TYPE> = $r14;

        return;
    }
}
