public class android.support.v4.content.FileProvider extends android.content.ContentProvider
{
    private static final java.lang.String[] COLUMNS;
    private static final java.lang.String META_DATA_FILE_PROVIDER_PATHS;
    private static final java.lang.String TAG_ROOT_PATH;
    private static final java.lang.String TAG_FILES_PATH;
    private static final java.lang.String TAG_CACHE_PATH;
    private static final java.lang.String TAG_EXTERNAL;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_PATH;
    private static final java.io.File DEVICE_ROOT;
    private static java.util.HashMap sCache;
    private android.support.v4.content.FileProvider$PathStrategy mStrategy;

    public void <init>()
    {
        android.support.v4.content.FileProvider r0;

        r0 := @this: android.support.v4.content.FileProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    public boolean onCreate()
    {
        android.support.v4.content.FileProvider r0;

        r0 := @this: android.support.v4.content.FileProvider;

        return 1;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.support.v4.content.FileProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;
        boolean $z0, $z1;
        java.lang.String $r3;
        android.support.v4.content.FileProvider$PathStrategy $r4;
        java.lang.SecurityException $r5, $r6;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r1, r2);

        $z0 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must not be exported");

        throw $r6;

     label1:
        $z1 = r2.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z1 != 0 goto label2;

        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must grant uri permissions");

        throw $r5;

     label2:
        $r3 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r4 = staticinvoke <android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)>(r1, $r3);

        r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy> = $r4;

        return;
    }

    public static android.net.Uri getUriForFile(android.content.Context, java.lang.String, java.io.File)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.io.File r2;
        android.support.v4.content.FileProvider$PathStrategy r3;
        android.net.Uri $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.File;

        r3 = staticinvoke <android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)>(r0, r1);

        $r4 = interfaceinvoke r3.<android.support.v4.content.FileProvider$PathStrategy: android.net.Uri getUriForFile(java.io.File)>(r2);

        return $r4;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.support.v4.content.FileProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4, r7, r9, r17;
        java.lang.String r3, r5, r10, $r12, $r14, $r16;
        java.io.File r6;
        java.lang.Object[] r8, r18;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        android.support.v4.content.FileProvider$PathStrategy $r11;
        android.database.MatrixCursor $r13, r19;
        boolean $z0, $z1;
        java.lang.Long $r15;
        long $l6;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r11 = r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        r6 = interfaceinvoke $r11.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>(r1);

        if r2 != null goto label1;

        r2 = <android.support.v4.content.FileProvider: java.lang.String[] COLUMNS>;

     label1:
        $i4 = lengthof r2;

        r7 = newarray (java.lang.String)[$i4];

        $i3 = lengthof r2;

        r8 = newarray (java.lang.Object)[$i3];

        i0 = 0;

        r9 = r2;

        i1 = lengthof r9;

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        r10 = r9[i2];

        $r12 = "_display_name";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label3;

        r7[i0] = "_display_name";

        $i7 = i0;

        i0 = i0 + 1;

        $r16 = virtualinvoke r6.<java.io.File: java.lang.String getName()>();

        r8[$i7] = $r16;

        goto label4;

     label3:
        $r14 = "_size";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label4;

        r7[i0] = "_size";

        $i5 = i0;

        i0 = i0 + 1;

        $l6 = virtualinvoke r6.<java.io.File: long length()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        r8[$i5] = $r15;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        r17 = staticinvoke <android.support.v4.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)>(r7, i0);

        r18 = staticinvoke <android.support.v4.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)>(r8, i0);

        $r13 = new android.database.MatrixCursor;

        specialinvoke $r13.<android.database.MatrixCursor: void <init>(java.lang.String[],int)>(r17, 1);

        r19 = $r13;

        virtualinvoke r19.<android.database.MatrixCursor: void addRow(java.lang.Object[])>(r18);

        return r19;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.support.v4.content.FileProvider r0;
        android.net.Uri r1;
        java.io.File r2;
        int i0, $i1;
        java.lang.String r3, r4, $r6, $r7;
        android.support.v4.content.FileProvider$PathStrategy $r5;
        android.webkit.MimeTypeMap $r8;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.net.Uri;

        $r5 = r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        r2 = interfaceinvoke $r5.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>(r1);

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        i0 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label1;

        $r7 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $i1 = i0 + 1;

        r3 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r8 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        r4 = virtualinvoke $r8.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>(r3);

        if r4 == null goto label1;

        return r4;

     label1:
        return "application/octet-stream";
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.support.v4.content.FileProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No external inserts");

        throw $r3;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.support.v4.content.FileProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No external updates");

        throw $r5;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.support.v4.content.FileProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        java.io.File r4;
        android.support.v4.content.FileProvider$PathStrategy $r5;
        boolean $z0;
        byte $b0;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        r4 = interfaceinvoke $r5.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>(r1);

        $z0 = virtualinvoke r4.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.support.v4.content.FileProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.io.File r3;
        int i0;
        android.support.v4.content.FileProvider$PathStrategy $r4;
        android.os.ParcelFileDescriptor $r5;

        r0 := @this: android.support.v4.content.FileProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        r3 = interfaceinvoke $r4.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>(r1);

        i0 = staticinvoke <android.support.v4.content.FileProvider: int modeToMode(java.lang.String)>(r2);

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r3, i0);

        return $r5;
    }

    private static android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.support.v4.content.FileProvider$PathStrategy r2;
        java.util.HashMap r3, $r6, $r7, $r9;
        java.io.IOException r4, $r14;
        java.lang.Throwable r5, $r13;
        java.lang.Object $r8;
        org.xmlpull.v1.XmlPullParserException $r11, r16;
        java.lang.IllegalArgumentException $r12, $r15;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r6 = <android.support.v4.content.FileProvider: java.util.HashMap sCache>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = <android.support.v4.content.FileProvider: java.util.HashMap sCache>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.support.v4.content.FileProvider$PathStrategy) $r8;

        if r2 != null goto label07;

     label02:
        r2 = staticinvoke <android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>(r0, r1);

     label03:
        goto label06;

     label04:
        $r14 := @caughtexception;

        r4 = $r14;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse android.support.FILE_PROVIDER_PATHS meta-data", r4);

        throw $r15;

     label05:
        $r11 := @caughtexception;

        r16 = $r11;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse android.support.FILE_PROVIDER_PATHS meta-data", r16);

        throw $r12;

     label06:
        $r9 = <android.support.v4.content.FileProvider: java.util.HashMap sCache>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r3;

     label10:
        throw r5;

     label11:
        return r2;

        catch java.io.IOException from label02 to label03 with label04;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context r0;
        java.lang.String r1, r5, r6, r7, $r12, $r13, $r14, $r15;
        android.support.v4.content.FileProvider$SimplePathStrategy r2, $r9;
        android.content.pm.ProviderInfo r3;
        android.content.res.XmlResourceParser r4;
        int i0, $i1;
        java.io.File r8, $r16, $r19, $r21, $r24;
        android.content.pm.PackageManager $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r17, $r18, $r20, $r23;
        java.lang.IllegalArgumentException $r22;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r9 = new android.support.v4.content.FileProvider$SimplePathStrategy;

        specialinvoke $r9.<android.support.v4.content.FileProvider$SimplePathStrategy: void <init>(java.lang.String)>(r1);

        r2 = $r9;

        $r10 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>(r1, 128);

        $r11 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r4 = virtualinvoke r3.<android.content.pm.ProviderInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r11, "android.support.FILE_PROVIDER_PATHS");

        if r4 != null goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing android.support.FILE_PROVIDER_PATHS meta-data");

        throw $r22;

     label1:
        $i1 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int next()>();

        i0 = $i1;

        if $i1 == 1 goto label7;

        if i0 != 2 goto label1;

        r5 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        r6 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r7 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "path");

        r8 = null;

        $r12 = "root-path";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        $r24 = <android.support.v4.content.FileProvider: java.io.File DEVICE_ROOT>;

        $r23 = newarray (java.lang.String)[1];

        $r23[0] = r7;

        r8 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r24, $r23);

        goto label5;

     label2:
        $r13 = "files-path";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        $r21 = virtualinvoke r0.<android.content.Context: java.io.File getFilesDir()>();

        $r20 = newarray (java.lang.String)[1];

        $r20[0] = r7;

        r8 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r21, $r20);

        goto label5;

     label3:
        $r14 = "cache-path";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label4;

        $r19 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        $r18 = newarray (java.lang.String)[1];

        $r18[0] = r7;

        r8 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r19, $r18);

        goto label5;

     label4:
        $r15 = "external-path";

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label5;

        $r16 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r17 = newarray (java.lang.String)[1];

        $r17[0] = r7;

        r8 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r16, $r17);

     label5:
        if r8 == null goto label6;

        virtualinvoke r2.<android.support.v4.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)>(r6, r8);

     label6:
        goto label1;

     label7:
        return r2;
    }

    private static int modeToMode(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r11;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        $r1 = "r";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        i0 = 268435456;

        goto label7;

     label1:
        $r2 = "w";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r3 = "wt";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

     label2:
        i0 = 738197504;

        goto label7;

     label3:
        $r4 = "wa";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        i0 = 704643072;

        goto label7;

     label4:
        $r5 = "rw";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        i0 = 939524096;

        goto label7;

     label5:
        $r6 = "rwt";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        i0 = 1006632960;

        goto label7;

     label6:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label7:
        return i0;
    }

    private static transient java.io.File buildPath(java.io.File, java.lang.String[])
    {
        java.io.File r0, r2, $r5;
        java.lang.String[] r1, r3;
        int i0, i1;
        java.lang.String r4;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String[];

        r2 = r0;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        if r4 == null goto label2;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, r4);

        r2 = $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r2;
    }

    private static java.lang.String[] copyOf(java.lang.String[], int)
    {
        java.lang.String[] r0, r1;
        int i0;

        r0 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r1 = newarray (java.lang.String)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    private static java.lang.Object[] copyOf(java.lang.Object[], int)
    {
        java.lang.Object[] r0, r1;
        int i0;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r1 = newarray (java.lang.Object)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.io.File $r1;
        java.util.HashMap $r2;

        <android.support.v4.content.FileProvider: java.lang.String ATTR_PATH> = "path";

        <android.support.v4.content.FileProvider: java.lang.String ATTR_NAME> = "name";

        <android.support.v4.content.FileProvider: java.lang.String TAG_EXTERNAL> = "external-path";

        <android.support.v4.content.FileProvider: java.lang.String TAG_CACHE_PATH> = "cache-path";

        <android.support.v4.content.FileProvider: java.lang.String TAG_FILES_PATH> = "files-path";

        <android.support.v4.content.FileProvider: java.lang.String TAG_ROOT_PATH> = "root-path";

        <android.support.v4.content.FileProvider: java.lang.String META_DATA_FILE_PROVIDER_PATHS> = "android.support.FILE_PROVIDER_PATHS";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "_display_name";

        $r0[1] = "_size";

        <android.support.v4.content.FileProvider: java.lang.String[] COLUMNS> = $r0;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/");

        <android.support.v4.content.FileProvider: java.io.File DEVICE_ROOT> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.support.v4.content.FileProvider: java.util.HashMap sCache> = $r2;

        return;
    }
}
