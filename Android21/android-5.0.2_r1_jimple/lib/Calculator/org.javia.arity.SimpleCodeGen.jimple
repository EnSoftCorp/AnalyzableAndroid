class org.javia.arity.SimpleCodeGen extends org.javia.arity.TokenConsumer
{
    static final org.javia.arity.SyntaxException HAS_ARGUMENTS;
    org.javia.arity.ByteStack code;
    org.javia.arity.DoubleStack consts;
    org.javia.arity.FunctionStack funcs;
    org.javia.arity.Symbols symbols;
    org.javia.arity.SyntaxException exception;

    void <init>(org.javia.arity.SyntaxException)
    {
        org.javia.arity.SimpleCodeGen r0;
        org.javia.arity.SyntaxException r1;
        org.javia.arity.ByteStack $r2;
        org.javia.arity.DoubleStack $r3;
        org.javia.arity.FunctionStack $r4;

        r0 := @this: org.javia.arity.SimpleCodeGen;

        r1 := @parameter0: org.javia.arity.SyntaxException;

        specialinvoke r0.<org.javia.arity.TokenConsumer: void <init>()>();

        $r2 = new org.javia.arity.ByteStack;

        specialinvoke $r2.<org.javia.arity.ByteStack: void <init>()>();

        r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.ByteStack code> = $r2;

        $r3 = new org.javia.arity.DoubleStack;

        specialinvoke $r3.<org.javia.arity.DoubleStack: void <init>()>();

        r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.DoubleStack consts> = $r3;

        $r4 = new org.javia.arity.FunctionStack;

        specialinvoke $r4.<org.javia.arity.FunctionStack: void <init>()>();

        r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.FunctionStack funcs> = $r4;

        r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException exception> = r1;

        return;
    }

    org.javia.arity.SimpleCodeGen setSymbols(org.javia.arity.Symbols)
    {
        org.javia.arity.SimpleCodeGen r0;
        org.javia.arity.Symbols r1;

        r0 := @this: org.javia.arity.SimpleCodeGen;

        r1 := @parameter0: org.javia.arity.Symbols;

        r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.Symbols symbols> = r1;

        return r0;
    }

    void start()
    {
        org.javia.arity.SimpleCodeGen r0;
        org.javia.arity.ByteStack $r1;
        org.javia.arity.DoubleStack $r2;
        org.javia.arity.FunctionStack $r3;

        r0 := @this: org.javia.arity.SimpleCodeGen;

        $r1 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.ByteStack code>;

        virtualinvoke $r1.<org.javia.arity.ByteStack: void clear()>();

        $r2 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.DoubleStack consts>;

        virtualinvoke $r2.<org.javia.arity.DoubleStack: void clear()>();

        $r3 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.FunctionStack funcs>;

        virtualinvoke $r3.<org.javia.arity.FunctionStack: void clear()>();

        return;
    }

    org.javia.arity.Symbol getSymbol(org.javia.arity.Token) throws org.javia.arity.SyntaxException
    {
        org.javia.arity.SimpleCodeGen r0;
        org.javia.arity.Token r1;
        java.lang.String r2, $r10, $r20, $r27;
        boolean z0;
        org.javia.arity.Symbol r3;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.javia.arity.Symbols $r4;
        org.javia.arity.Function $r5, $r12, $r14;
        java.lang.StringBuilder $r6, $r8, $r9, $r13, $r15, $r17, $r18, $r19, $r22, $r23, $r26;
        org.javia.arity.SyntaxException $r7, $r11, $r16, $r21, $r24, $r25;
        byte $b2, $b3;

        r0 := @this: org.javia.arity.SimpleCodeGen;

        r1 := @parameter0: org.javia.arity.Token;

        r2 = r1.<org.javia.arity.Token: java.lang.String name>;

        z0 = virtualinvoke r1.<org.javia.arity.Token: boolean isDerivative()>();

        if z0 == 0 goto label2;

        $i6 = r1.<org.javia.arity.Token: int arity>;

        if $i6 != 1 goto label1;

        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

        $i9 = $i10 - 1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        goto label2;

     label1:
        $r24 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException exception>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Derivative expects arity 1 but found ");

        $i7 = r1.<org.javia.arity.Token: int arity>;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $i8 = r1.<org.javia.arity.Token: int position>;

        $r25 = virtualinvoke $r24.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>($r27, $i8);

        throw $r25;

     label2:
        $r4 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.Symbols symbols>;

        $i0 = r1.<org.javia.arity.Token: int arity>;

        r3 = virtualinvoke $r4.<org.javia.arity.Symbols: org.javia.arity.Symbol lookup(java.lang.String,int)>(r2, $i0);

        if r3 != null goto label3;

        $r16 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException exception>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("undefined \'");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with arity ");

        $i4 = r1.<org.javia.arity.Token: int arity>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $i5 = r1.<org.javia.arity.Token: int position>;

        $r21 = virtualinvoke $r16.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>($r20, $i5);

        throw $r21;

     label3:
        if z0 == 0 goto label4;

        $b2 = r3.<org.javia.arity.Symbol: byte op>;

        if $b2 <= 0 goto label4;

        $r12 = r3.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        if $r12 != null goto label4;

        $b3 = r3.<org.javia.arity.Symbol: byte op>;

        $r14 = staticinvoke <org.javia.arity.CompiledFunction: org.javia.arity.Function makeOpFunction(int)>($b3);

        r3.<org.javia.arity.Symbol: org.javia.arity.Function fun> = $r14;

     label4:
        if z0 == 0 goto label5;

        $r5 = r3.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        if $r5 != null goto label5;

        $r7 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException exception>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid derivative ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = r1.<org.javia.arity.Token: int position>;

        $r11 = virtualinvoke $r7.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>($r10, $i1);

        throw $r11;

     label5:
        return r3;
    }

    void push(org.javia.arity.Token) throws org.javia.arity.SyntaxException
    {
        org.javia.arity.SimpleCodeGen r0;
        org.javia.arity.Token r1;
        byte b0, $b2;
        org.javia.arity.Symbol r2;
        int $i1, $i3, $i4;
        double $d0, $d1, $d2;
        org.javia.arity.DoubleStack $r3, $r6;
        org.javia.arity.ByteStack $r4;
        boolean $z0;
        org.javia.arity.Function $r5, $r7, $r11, $r13;
        org.javia.arity.SyntaxException $r8, $r10, $r12, $r24;
        org.javia.arity.FunctionStack $r9, $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.Error $r16;
        java.lang.String $r25, $r26;

        r0 := @this: org.javia.arity.SimpleCodeGen;

        r1 := @parameter0: org.javia.arity.Token;

        $i1 = r1.<org.javia.arity.Token: int id>;

        tableswitch($i1)
        {
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label2;
            default: goto label6;
        };

     label1:
        b0 = 1;

        $r3 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.DoubleStack consts>;

        $d0 = r1.<org.javia.arity.Token: double value>;

        virtualinvoke $r3.<org.javia.arity.DoubleStack: void push(double,double)>($d0, 0.0);

        goto label7;

     label2:
        r2 = virtualinvoke r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.Symbol getSymbol(org.javia.arity.Token)>(r1);

        $z0 = virtualinvoke r1.<org.javia.arity.Token: boolean isDerivative()>();

        if $z0 == 0 goto label3;

        b0 = 2;

        $r14 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.FunctionStack funcs>;

        $r11 = r2.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        $r13 = virtualinvoke $r11.<org.javia.arity.Function: org.javia.arity.Function getDerivative()>();

        virtualinvoke $r14.<org.javia.arity.FunctionStack: void push(org.javia.arity.Function)>($r13);

        goto label7;

     label3:
        $b2 = r2.<org.javia.arity.Symbol: byte op>;

        if $b2 <= 0 goto label4;

        b0 = r2.<org.javia.arity.Symbol: byte op>;

        if b0 < 38 goto label7;

        if b0 > 42 goto label7;

        $r10 = <org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException HAS_ARGUMENTS>;

        $r8 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException exception>;

        $i3 = $r8.<org.javia.arity.SyntaxException: int position>;

        $r12 = virtualinvoke $r10.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>("eval() on implicit function", $i3);

        throw $r12;

     label4:
        $r5 = r2.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        if $r5 == null goto label5;

        b0 = 2;

        $r9 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.FunctionStack funcs>;

        $r7 = r2.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        virtualinvoke $r9.<org.javia.arity.FunctionStack: void push(org.javia.arity.Function)>($r7);

        goto label7;

     label5:
        b0 = 1;

        $r6 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.DoubleStack consts>;

        $d2 = r2.<org.javia.arity.Symbol: double valueRe>;

        $d1 = r2.<org.javia.arity.Symbol: double valueIm>;

        virtualinvoke $r6.<org.javia.arity.DoubleStack: void push(double,double)>($d2, $d1);

        goto label7;

     label6:
        b0 = r1.<org.javia.arity.Token: byte vmop>;

        if b0 > 0 goto label7;

        $r16 = new java.lang.Error;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrong vmop: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id ");

        $i4 = r1.<org.javia.arity.Token: int id>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in \"");

        $r24 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException exception>;

        $r25 = $r24.<org.javia.arity.SyntaxException: java.lang.String expression>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>($r26);

        throw $r16;

     label7:
        $r4 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.ByteStack code>;

        virtualinvoke $r4.<org.javia.arity.ByteStack: void push(byte)>(b0);

        return;
    }

    org.javia.arity.CompiledFunction getFun()
    {
        org.javia.arity.SimpleCodeGen r0;
        org.javia.arity.CompiledFunction $r1;
        org.javia.arity.ByteStack $r2;
        byte[] $r3;
        org.javia.arity.DoubleStack $r4, $r6;
        double[] $r5, $r7;
        org.javia.arity.FunctionStack $r8;
        org.javia.arity.Function[] $r9;

        r0 := @this: org.javia.arity.SimpleCodeGen;

        $r1 = new org.javia.arity.CompiledFunction;

        $r2 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.ByteStack code>;

        $r3 = virtualinvoke $r2.<org.javia.arity.ByteStack: byte[] toArray()>();

        $r4 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.DoubleStack consts>;

        $r5 = virtualinvoke $r4.<org.javia.arity.DoubleStack: double[] getRe()>();

        $r6 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.DoubleStack consts>;

        $r7 = virtualinvoke $r6.<org.javia.arity.DoubleStack: double[] getIm()>();

        $r8 = r0.<org.javia.arity.SimpleCodeGen: org.javia.arity.FunctionStack funcs>;

        $r9 = virtualinvoke $r8.<org.javia.arity.FunctionStack: org.javia.arity.Function[] toArray()>();

        specialinvoke $r1.<org.javia.arity.CompiledFunction: void <init>(int,byte[],double[],double[],org.javia.arity.Function[])>(0, $r3, $r5, $r7, $r9);

        return $r1;
    }

    static void <clinit>()
    {
        org.javia.arity.SyntaxException $r0;

        $r0 = new org.javia.arity.SyntaxException;

        specialinvoke $r0.<org.javia.arity.SyntaxException: void <init>()>();

        <org.javia.arity.SimpleCodeGen: org.javia.arity.SyntaxException HAS_ARGUMENTS> = $r0;

        return;
    }
}
