class com.google.common.base.Joiner$2 extends com.google.common.base.Joiner
{
    final com.google.common.base.Joiner this$0;

    void <init>(com.google.common.base.Joiner, com.google.common.base.Joiner)
    {
        com.google.common.base.Joiner$2 r0;
        com.google.common.base.Joiner r1, r2;

        r0 := @this: com.google.common.base.Joiner$2;

        r1 := @parameter0: com.google.common.base.Joiner;

        r2 := @parameter1: com.google.common.base.Joiner;

        r0.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0> = r1;

        specialinvoke r0.<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1)>(r2, null);

        return;
    }

    public java.lang.Appendable appendTo(java.lang.Appendable, java.util.Iterator) throws java.io.IOException
    {
        com.google.common.base.Joiner$2 r0;
        java.lang.Appendable r1;
        java.util.Iterator r2;
        java.lang.Object r3, r15;
        boolean $z0, $z1;
        com.google.common.base.Joiner $r6, $r9, $r13;
        java.lang.String $r7;
        java.lang.CharSequence $r10, $r12;

        r0 := @this: com.google.common.base.Joiner$2;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.util.Iterator;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "appendable");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "parts");

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r3 == null goto label2;

        $r13 = r0.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0>;

        $r12 = virtualinvoke $r13.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>(r3);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r12);

        goto label3;

     label2:
        goto label1;

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r15 == null goto label4;

        $r6 = r0.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0>;

        $r7 = staticinvoke <com.google.common.base.Joiner: java.lang.String access$100(com.google.common.base.Joiner)>($r6);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

        $r9 = r0.<com.google.common.base.Joiner$2: com.google.common.base.Joiner this$0>;

        $r10 = virtualinvoke $r9.<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>(r15);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r10);

     label4:
        goto label3;

     label5:
        return r1;
    }

    public com.google.common.base.Joiner useForNull(java.lang.String)
    {
        com.google.common.base.Joiner$2 r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.google.common.base.Joiner$2;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("already specified skipNulls");

        throw $r3;
    }

    public com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)
    {
        com.google.common.base.Joiner$2 r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.google.common.base.Joiner$2;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("can\'t use .skipNulls() with maps");

        throw $r3;
    }
}
