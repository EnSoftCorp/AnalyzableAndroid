class org.javia.arity.FunctionStack extends java.lang.Object
{
    private org.javia.arity.Function[] data;
    private int size;

    void <init>()
    {
        org.javia.arity.FunctionStack r0;
        org.javia.arity.Function[] $r1;

        r0 := @this: org.javia.arity.FunctionStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.javia.arity.Function)[8];

        r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data> = $r1;

        r0.<org.javia.arity.FunctionStack: int size> = 0;

        return;
    }

    void clear()
    {
        org.javia.arity.FunctionStack r0;

        r0 := @this: org.javia.arity.FunctionStack;

        r0.<org.javia.arity.FunctionStack: int size> = 0;

        return;
    }

    void push(org.javia.arity.Function)
    {
        org.javia.arity.FunctionStack r0;
        org.javia.arity.Function r1;
        org.javia.arity.Function[] r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.javia.arity.FunctionStack;

        r1 := @parameter0: org.javia.arity.Function;

        $i1 = r0.<org.javia.arity.FunctionStack: int size>;

        $r3 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label1;

        $r5 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $i4 = lengthof $r5;

        $i5 = $i4 << 1;

        r2 = newarray (org.javia.arity.Function)[$i5];

        $r7 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $r6 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $i6 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r2, 0, $i6);

        r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data> = r2;

     label1:
        $r4 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $i2 = r0.<org.javia.arity.FunctionStack: int size>;

        $i3 = $i2 + 1;

        r0.<org.javia.arity.FunctionStack: int size> = $i3;

        $r4[$i2] = r1;

        return;
    }

    org.javia.arity.Function pop()
    {
        org.javia.arity.FunctionStack r0;
        int $i0, $i1;
        org.javia.arity.Function[] $r1;
        org.javia.arity.Function $r2;

        r0 := @this: org.javia.arity.FunctionStack;

        $r1 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $i0 = r0.<org.javia.arity.FunctionStack: int size>;

        $i1 = $i0 - 1;

        r0.<org.javia.arity.FunctionStack: int size> = $i1;

        $r2 = $r1[$i1];

        return $r2;
    }

    org.javia.arity.Function[] toArray()
    {
        org.javia.arity.FunctionStack r0;
        org.javia.arity.Function[] r1, $r2;
        int $i0, $i1;

        r0 := @this: org.javia.arity.FunctionStack;

        $i0 = r0.<org.javia.arity.FunctionStack: int size>;

        r1 = newarray (org.javia.arity.Function)[$i0];

        $r2 = r0.<org.javia.arity.FunctionStack: org.javia.arity.Function[] data>;

        $i1 = r0.<org.javia.arity.FunctionStack: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }
}
