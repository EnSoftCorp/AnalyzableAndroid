public class javax.annotation.RegEx$Checker extends java.lang.Object implements javax.annotation.meta.TypeQualifierValidator
{

    public void <init>()
    {
        javax.annotation.RegEx$Checker r0;

        r0 := @this: javax.annotation.RegEx$Checker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.annotation.meta.When forConstantValue(javax.annotation.RegEx, java.lang.Object)
    {
        javax.annotation.RegEx$Checker r0;
        javax.annotation.RegEx r1;
        java.lang.Object r2;
        boolean $z0;
        java.lang.String $r4;
        javax.annotation.meta.When $r6, $r7, $r9;
        java.util.regex.PatternSyntaxException $r8;

        r0 := @this: javax.annotation.RegEx$Checker;

        r1 := @parameter0: javax.annotation.RegEx;

        r2 := @parameter1: java.lang.Object;

        $z0 = r2 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r7 = <javax.annotation.meta.When: javax.annotation.meta.When NEVER>;

        return $r7;

     label1:
        $r4 = (java.lang.String) r2;

        staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <javax.annotation.meta.When: javax.annotation.meta.When NEVER>;

        return $r9;

     label4:
        $r6 = <javax.annotation.meta.When: javax.annotation.meta.When ALWAYS>;

        return $r6;

        catch java.util.regex.PatternSyntaxException from label1 to label2 with label3;
    }

    public volatile javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation, java.lang.Object)
    {
        javax.annotation.RegEx$Checker r0;
        java.lang.annotation.Annotation r1;
        java.lang.Object r2;
        javax.annotation.RegEx $r3;
        javax.annotation.meta.When $r4;

        r0 := @this: javax.annotation.RegEx$Checker;

        r1 := @parameter0: java.lang.annotation.Annotation;

        r2 := @parameter1: java.lang.Object;

        $r3 = (javax.annotation.RegEx) r1;

        $r4 = virtualinvoke r0.<javax.annotation.RegEx$Checker: javax.annotation.meta.When forConstantValue(javax.annotation.RegEx,java.lang.Object)>($r3, r2);

        return $r4;
    }
}
