class com.google.common.collect.StandardTable$Column$EntrySet extends java.util.AbstractSet
{
    final com.google.common.collect.StandardTable$Column this$1;

    void <init>(com.google.common.collect.StandardTable$Column)
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable$Column r1;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        r1 := @parameter0: com.google.common.collect.StandardTable$Column;

        r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable$Column$EntrySetIterator $r1;
        com.google.common.collect.StandardTable$Column $r2;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 = new com.google.common.collect.StandardTable$Column$EntrySetIterator;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        specialinvoke $r1.<com.google.common.collect.StandardTable$Column$EntrySetIterator: void <init>(com.google.common.collect.StandardTable$Column)>($r2);

        return $r1;
    }

    public int size()
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        int i0;
        java.util.Iterator r1;
        java.util.Map r2, $r5;
        com.google.common.collect.StandardTable$Column $r3, $r8;
        com.google.common.collect.StandardTable $r4;
        java.util.Collection $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r9;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        i0 = 0;

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r5 = $r4.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map) $r7;

        $r8 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r9 = $r8.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        goto label1;

     label3:
        return i0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.collect.StandardTable$Column $r1, $r2;
        java.lang.Object $r3;
        com.google.common.collect.StandardTable $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r1.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $z0 = virtualinvoke $r4.<com.google.common.collect.StandardTable: boolean containsColumn(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void clear()
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        com.google.common.base.Predicate r1;
        com.google.common.collect.StandardTable$Column $r2;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        r1 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate alwaysTrue()>();

        $r2 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        virtualinvoke $r2.<com.google.common.collect.StandardTable$Column: boolean removePredicate(com.google.common.base.Predicate)>(r1);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        java.lang.Object r1, $r5, $r7, $r8;
        java.util.Map$Entry r2;
        boolean $z0, $z1;
        com.google.common.collect.StandardTable$Column $r3, $r6;
        com.google.common.collect.StandardTable $r4;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r7 = $r6.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = staticinvoke <com.google.common.collect.StandardTable: boolean access$300(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r7, $r8);

        return $z1;

     label1:
        return 0;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        java.lang.Object r1, $r5, $r7, $r8;
        java.util.Map$Entry r2;
        boolean $z0, $z1;
        com.google.common.collect.StandardTable$Column $r3, $r6;
        com.google.common.collect.StandardTable $r4;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r3.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r7 = $r6.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = staticinvoke <com.google.common.collect.StandardTable: boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r7, $r8);

        return $z1;

     label1:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        java.util.Collection r1;
        boolean z0, $z1, $z2;
        java.util.Iterator r2;
        java.lang.Object r3;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        r1 := @parameter0: java.util.Collection;

        z0 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z2 = virtualinvoke r0.<com.google.common.collect.StandardTable$Column$EntrySet: boolean remove(java.lang.Object)>(r3);

        z0 = z0 | $z2;

        goto label1;

     label2:
        return z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.StandardTable$Column$EntrySet r0;
        java.util.Collection r1;
        com.google.common.collect.StandardTable$Column $r2;
        com.google.common.base.Predicate $r3, $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.StandardTable$Column$EntrySet;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$EntrySet: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate in(java.util.Collection)>(r1);

        $r4 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate not(com.google.common.base.Predicate)>($r3);

        $z0 = virtualinvoke $r2.<com.google.common.collect.StandardTable$Column: boolean removePredicate(com.google.common.base.Predicate)>($r4);

        return $z0;
    }
}
