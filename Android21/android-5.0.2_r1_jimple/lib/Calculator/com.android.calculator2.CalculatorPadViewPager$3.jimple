class com.android.calculator2.CalculatorPadViewPager$3 extends java.lang.Object implements android.support.v4.view.ViewPager$PageTransformer
{
    final com.android.calculator2.CalculatorPadViewPager this$0;

    void <init>(com.android.calculator2.CalculatorPadViewPager)
    {
        com.android.calculator2.CalculatorPadViewPager$3 r0;
        com.android.calculator2.CalculatorPadViewPager r1;

        r0 := @this: com.android.calculator2.CalculatorPadViewPager$3;

        r1 := @parameter0: com.android.calculator2.CalculatorPadViewPager;

        r0.<com.android.calculator2.CalculatorPadViewPager$3: com.android.calculator2.CalculatorPadViewPager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void transformPage(android.view.View, float)
    {
        com.android.calculator2.CalculatorPadViewPager$3 r0;
        android.view.View r1;
        float f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0;
        com.android.calculator2.CalculatorPadViewPager $r2;
        int $i1;

        r0 := @this: com.android.calculator2.CalculatorPadViewPager$3;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r2 = r0.<com.android.calculator2.CalculatorPadViewPager$3: com.android.calculator2.CalculatorPadViewPager this$0>;

        $i1 = virtualinvoke $r2.<com.android.calculator2.CalculatorPadViewPager: int getWidth()>();

        $f2 = (float) $i1;

        $f1 = neg f0;

        $f3 = $f2 * $f1;

        virtualinvoke r1.<android.view.View: void setTranslationX(float)>($f3);

        $f4 = 1.0F + f0;

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>($f4, 0.0F);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>($f5);

        goto label2;

     label1:
        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

     label2:
        return;
    }
}
