public class org.javia.arity.Complex extends java.lang.Object
{
    public double re;
    public double im;

    public void <init>()
    {
        org.javia.arity.Complex r0;

        r0 := @this: org.javia.arity.Complex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(double, double)
    {
        org.javia.arity.Complex r0;
        double d0, d1;

        r0 := @this: org.javia.arity.Complex;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d0, d1);

        return;
    }

    public void <init>(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(org.javia.arity.Complex)>(r1);

        return;
    }

    public org.javia.arity.Complex set(double, double)
    {
        org.javia.arity.Complex r0;
        double d0, d1;

        r0 := @this: org.javia.arity.Complex;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0.<org.javia.arity.Complex: double re> = d0;

        r0.<org.javia.arity.Complex: double im> = d1;

        return r0;
    }

    public org.javia.arity.Complex set(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;
        double $d0, $d1;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d0 = r1.<org.javia.arity.Complex: double re>;

        r0.<org.javia.arity.Complex: double re> = $d0;

        $d1 = r1.<org.javia.arity.Complex: double im>;

        r0.<org.javia.arity.Complex: double im> = $d1;

        return r0;
    }

    public java.lang.String toString()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1, $d2, $d3;
        byte $b0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10;
        java.lang.String $r7;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r7;
    }

    public double asReal()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        goto label2;

     label1:
        $d1 = #NaN;

     label2:
        return $d1;
    }

    public final org.javia.arity.Complex conjugate()
    {
        org.javia.arity.Complex r0, $r1;
        double $d0, $d1, $d2;

        r0 := @this: org.javia.arity.Complex;

        $d2 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $d1 = neg $d0;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d2, $d1);

        return $r1;
    }

    public final org.javia.arity.Complex negate()
    {
        org.javia.arity.Complex r0, $r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $d3 = neg $d0;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $d2 = neg $d1;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d3, $d2);

        return $r1;
    }

    public final boolean isInfinite()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z1 == 0 goto label2;

        $z3 = virtualinvoke r0.<org.javia.arity.Complex: boolean isNaN()>();

        if $z3 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final boolean isFinite()
    {
        org.javia.arity.Complex r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.javia.arity.Complex;

        $z0 = virtualinvoke r0.<org.javia.arity.Complex: boolean isInfinite()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.javia.arity.Complex: boolean isNaN()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public final boolean isNaN()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final boolean equals(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r1.<org.javia.arity.Complex: double re>;

        $b0 = $d1 cmpl $d0;

        if $b0 == 0 goto label1;

        $d9 = r0.<org.javia.arity.Complex: double re>;

        $d8 = r0.<org.javia.arity.Complex: double re>;

        $b4 = $d9 cmpl $d8;

        if $b4 == 0 goto label3;

        $d10 = r1.<org.javia.arity.Complex: double re>;

        $d11 = r1.<org.javia.arity.Complex: double re>;

        $b5 = $d10 cmpl $d11;

        if $b5 == 0 goto label3;

     label1:
        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d2 = r1.<org.javia.arity.Complex: double im>;

        $b1 = $d3 cmpl $d2;

        if $b1 == 0 goto label2;

        $d5 = r0.<org.javia.arity.Complex: double im>;

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $b2 = $d5 cmpl $d4;

        if $b2 == 0 goto label3;

        $d7 = r1.<org.javia.arity.Complex: double im>;

        $d6 = r1.<org.javia.arity.Complex: double im>;

        $b3 = $d7 cmpl $d6;

        if $b3 == 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public final double arg()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1, $d2;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        return $d2;
    }

    public final double abs()
    {
        org.javia.arity.Complex r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        boolean z0, $z1;
        byte $b0, $b1, $b2;

        r0 := @this: org.javia.arity.Complex;

        $d3 = r0.<org.javia.arity.Complex: double re>;

        d0 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $d4 = r0.<org.javia.arity.Complex: double im>;

        d1 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label2;

     label1:
        $d5 = d0 + d1;

        return $d5;

     label2:
        $b2 = d0 cmpl d1;

        if $b2 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

        if z0 == 0 goto label5;

        $d10 = d1 / d0;

        goto label6;

     label5:
        $d10 = d0 / d1;

     label6:
        d2 = $d10;

        if z0 == 0 goto label7;

        $d11 = d0;

        goto label8;

     label7:
        $d11 = d1;

     label8:
        $d7 = d2 * d2;

        $d6 = 1.0 + $d7;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        $d8 = $d11 * $d9;

        return $d8;
    }

    public final double abs2()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $d5 = $d1 * $d0;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $d4 = $d3 * $d2;

        $d6 = $d5 + $d4;

        return $d6;
    }

    public final org.javia.arity.Complex add(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        d0 = staticinvoke <java.lang.Math: double ulp(double)>($d1);

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $d2 = r1.<org.javia.arity.Complex: double re>;

        $d4 = $d3 + $d2;

        r0.<org.javia.arity.Complex: double re> = $d4;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        $d5 = r1.<org.javia.arity.Complex: double im>;

        $d7 = $d6 + $d5;

        r0.<org.javia.arity.Complex: double im> = $d7;

        $d8 = r0.<org.javia.arity.Complex: double re>;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $d10 = d0 * 1024.0;

        $b0 = $d9 cmpg $d10;

        if $b0 >= 0 goto label1;

        r0.<org.javia.arity.Complex: double re> = 0.0;

     label1:
        return r0;
    }

    public final org.javia.arity.Complex sub(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        d0 = staticinvoke <java.lang.Math: double ulp(double)>($d1);

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $d2 = r1.<org.javia.arity.Complex: double re>;

        $d4 = $d3 - $d2;

        r0.<org.javia.arity.Complex: double re> = $d4;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        $d5 = r1.<org.javia.arity.Complex: double im>;

        $d7 = $d6 - $d5;

        r0.<org.javia.arity.Complex: double im> = $d7;

        $d8 = r0.<org.javia.arity.Complex: double re>;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $d10 = d0 * 1024.0;

        $b0 = $d9 cmpg $d10;

        if $b0 >= 0 goto label1;

        r0.<org.javia.arity.Complex: double re> = 0.0;

     label1:
        return r0;
    }

    org.javia.arity.Complex mul(double)
    {
        org.javia.arity.Complex r0;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: org.javia.arity.Complex;

        d0 := @parameter0: double;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = $d1 * d0;

        r0.<org.javia.arity.Complex: double re> = $d2;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d4 = $d3 * d0;

        r0.<org.javia.arity.Complex: double im> = $d4;

        return r0;
    }

    public final org.javia.arity.Complex mul(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        d2 = r1.<org.javia.arity.Complex: double re>;

        d3 = r1.<org.javia.arity.Complex: double im>;

        $b0 = d1 cmpl 0.0;

        if $b0 != 0 goto label01;

        $b9 = d3 cmpl 0.0;

        if $b9 != 0 goto label01;

        $d25 = d0 * d2;

        $r16 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d25, 0.0);

        return $r16;

     label01:
        $d8 = d0 * d2;

        $d6 = d1 * d3;

        d4 = $d8 - $d6;

        $d9 = d0 * d3;

        $d7 = d1 * d2;

        d5 = $d9 + $d7;

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d4, d5);

        $z0 = virtualinvoke $r2.<org.javia.arity.Complex: boolean isNaN()>();

        if $z0 != 0 goto label02;

        return r0;

     label02:
        $r3 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d0, d1);

        $z2 = virtualinvoke $r3.<org.javia.arity.Complex: boolean isInfinite()>();

        if $z2 == 0 goto label03;

        specialinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex normalizeInfinity()>();

        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

     label03:
        $z1 = virtualinvoke r1.<org.javia.arity.Complex: boolean isInfinite()>();

        if $z1 == 0 goto label04;

        $r15 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d2, d3);

        specialinvoke $r15.<org.javia.arity.Complex: org.javia.arity.Complex normalizeInfinity()>();

        d2 = r0.<org.javia.arity.Complex: double re>;

        d3 = r0.<org.javia.arity.Complex: double im>;

     label04:
        $b2 = d1 cmpl 0.0;

        if $b2 != 0 goto label07;

        $b7 = d3 cmpl 0.0;

        if $b7 != 0 goto label05;

        $d23 = d0 * d2;

        $r11 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d23, 0.0);

        return $r11;

     label05:
        $b8 = d2 cmpl 0.0;

        if $b8 != 0 goto label06;

        $d24 = d0 * d3;

        $r12 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, $d24);

        return $r12;

     label06:
        $d21 = d0 * d2;

        $d22 = d0 * d3;

        $r10 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d21, $d22);

        return $r10;

     label07:
        $b1 = d0 cmpl 0.0;

        if $b1 != 0 goto label10;

        $b5 = d2 cmpl 0.0;

        if $b5 != 0 goto label08;

        $d19 = neg d1;

        $d20 = $d19 * d3;

        $r9 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d20, 0.0);

        return $r9;

     label08:
        $b6 = d3 cmpl 0.0;

        if $b6 != 0 goto label09;

        $d17 = d1 * d2;

        $r7 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, $d17);

        return $r7;

     label09:
        $d15 = neg d1;

        $d18 = $d15 * d3;

        $d16 = d1 * d2;

        $r8 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d18, $d16);

        return $r8;

     label10:
        $b4 = d3 cmpl 0.0;

        if $b4 != 0 goto label11;

        $d13 = d0 * d2;

        $d14 = d1 * d2;

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d13, $d14);

        return $r5;

     label11:
        $b3 = d2 cmpl 0.0;

        if $b3 != 0 goto label12;

        $d10 = neg d1;

        $d11 = $d10 * d3;

        $d12 = d0 * d3;

        $r6 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d11, $d12);

        return $r6;

     label12:
        $r4 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d4, d5);

        return $r4;
    }

    public final org.javia.arity.Complex div(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, d43, d44;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        d0 = r1.<org.javia.arity.Complex: double re>;

        d1 = r1.<org.javia.arity.Complex: double im>;

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b5 = d1 cmpl 0.0;

        if $b5 != 0 goto label1;

        $d42 = r0.<org.javia.arity.Complex: double re>;

        $d41 = $d42 / d0;

        $r8 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d41, 0.0);

        return $r8;

     label1:
        $z0 = virtualinvoke r1.<org.javia.arity.Complex: boolean isInfinite()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.javia.arity.Complex: boolean isFinite()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 0.0);

        return $r6;

     label2:
        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label4;

        $d36 = r0.<org.javia.arity.Complex: double re>;

        $b4 = $d36 cmpl 0.0;

        if $b4 != 0 goto label3;

        $d37 = r0.<org.javia.arity.Complex: double im>;

        $d40 = $d37 / d0;

        $r7 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, $d40);

        return $r7;

     label3:
        $d35 = r0.<org.javia.arity.Complex: double re>;

        $d38 = $d35 / d0;

        $d34 = r0.<org.javia.arity.Complex: double im>;

        $d39 = $d34 / d0;

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d38, $d39);

        return $r5;

     label4:
        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label5;

        $d28 = r0.<org.javia.arity.Complex: double im>;

        $d31 = $d28 / d1;

        $d29 = r0.<org.javia.arity.Complex: double re>;

        $d32 = neg $d29;

        $d33 = $d32 / d1;

        $r4 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d31, $d33);

        return $r4;

     label5:
        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d6 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $b3 = $d5 cmpl $d6;

        if $b3 <= 0 goto label6;

        d2 = d1 / d0;

        $d19 = d1 * d2;

        d3 = d0 + $d19;

        $d23 = r0.<org.javia.arity.Complex: double re>;

        $d18 = r0.<org.javia.arity.Complex: double im>;

        $d22 = $d18 * d2;

        $d20 = $d23 + $d22;

        $d30 = $d20 / d3;

        $d27 = r0.<org.javia.arity.Complex: double im>;

        $d21 = r0.<org.javia.arity.Complex: double re>;

        $d26 = $d21 * d2;

        $d24 = $d27 - $d26;

        $d25 = $d24 / d3;

        $r3 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d30, $d25);

        return $r3;

     label6:
        d43 = d0 / d1;

        $d8 = d0 * d43;

        d44 = $d8 + d1;

        $d7 = r0.<org.javia.arity.Complex: double re>;

        $d9 = $d7 * d43;

        $d10 = r0.<org.javia.arity.Complex: double im>;

        $d12 = $d9 + $d10;

        $d17 = $d12 / d44;

        $d11 = r0.<org.javia.arity.Complex: double im>;

        $d13 = $d11 * d43;

        $d14 = r0.<org.javia.arity.Complex: double re>;

        $d16 = $d13 - $d14;

        $d15 = $d16 / d44;

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d17, $d15);

        return $r2;
    }

    public final org.javia.arity.Complex sqrt()
    {
        org.javia.arity.Complex r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label2;

        $d17 = r0.<org.javia.arity.Complex: double re>;

        $b3 = $d17 cmpg 0.0;

        if $b3 < 0 goto label1;

        $d21 = r0.<org.javia.arity.Complex: double re>;

        $d22 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d22, 0.0);

        goto label6;

     label1:
        $d18 = r0.<org.javia.arity.Complex: double re>;

        $d19 = neg $d18;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d19);

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, $d20);

        goto label6;

     label2:
        $d2 = r0.<org.javia.arity.Complex: double re>;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $d4 = virtualinvoke r0.<org.javia.arity.Complex: double abs()>();

        $d5 = $d3 + $d4;

        $d6 = $d5 / 2.0;

        d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        $d7 = r0.<org.javia.arity.Complex: double re>;

        $b1 = $d7 cmpl 0.0;

        if $b1 < 0 goto label3;

        $d16 = r0.<org.javia.arity.Complex: double im>;

        $d14 = d0 + d0;

        $d15 = $d16 / $d14;

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d0, $d15);

        goto label6;

     label3:
        $d8 = r0.<org.javia.arity.Complex: double im>;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d8);

        $d10 = d0 + d0;

        $d12 = $d9 / $d10;

        $d11 = r0.<org.javia.arity.Complex: double im>;

        $b2 = $d11 cmpl 0.0;

        if $b2 < 0 goto label4;

        $d13 = d0;

        goto label5;

     label4:
        $d13 = neg d0;

     label5:
        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d12, $d13);

     label6:
        return r0;
    }

    public final org.javia.arity.Complex mod(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, $r2, $r3, $r4, $r5, $r6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        $b0 = d1 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d10 = r1.<org.javia.arity.Complex: double im>;

        $b1 = $d10 cmpl 0.0;

        if $b1 != 0 goto label1;

        $d11 = r1.<org.javia.arity.Complex: double re>;

        $d12 = d0 % $d11;

        $r6 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d12, 0.0);

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex div(org.javia.arity.Complex)>(r1);

        $d2 = r0.<org.javia.arity.Complex: double re>;

        $d3 = staticinvoke <java.lang.Math: double rint(double)>($d2);

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $d5 = staticinvoke <java.lang.Math: double rint(double)>($d4);

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d3, $d5);

        $r4 = virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex mul(org.javia.arity.Complex)>(r1);

        $d6 = r0.<org.javia.arity.Complex: double re>;

        $d8 = d0 - $d6;

        $d7 = r0.<org.javia.arity.Complex: double im>;

        $d9 = d1 - $d7;

        $r5 = virtualinvoke $r4.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d8, $d9);

        return $r5;
    }

    public final org.javia.arity.Complex gcd(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, r2, $r3, $r7, $r9;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d14 = r1.<org.javia.arity.Complex: double im>;

        $b4 = $d14 cmpl 0.0;

        if $b4 != 0 goto label1;

        $d17 = r0.<org.javia.arity.Complex: double re>;

        $d16 = r1.<org.javia.arity.Complex: double re>;

        $d15 = staticinvoke <org.javia.arity.MoreMath: double gcd(double,double)>($d17, $d16);

        $r9 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d15, 0.0);

        return $r9;

     label1:
        $r3 = new org.javia.arity.Complex;

        specialinvoke $r3.<org.javia.arity.Complex: void <init>(org.javia.arity.Complex)>(r1);

        r2 = $r3;

        d0 = virtualinvoke r0.<org.javia.arity.Complex: double abs2()>();

        d1 = virtualinvoke r2.<org.javia.arity.Complex: double abs2()>();

     label2:
        $d5 = d1 * 1.0E30;

        $b1 = d0 cmpg $d5;

        if $b1 >= 0 goto label3;

        d2 = r2.<org.javia.arity.Complex: double re>;

        d3 = r2.<org.javia.arity.Complex: double im>;

        $r7 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex mod(org.javia.arity.Complex)>(r2);

        virtualinvoke r2.<org.javia.arity.Complex: org.javia.arity.Complex set(org.javia.arity.Complex)>($r7);

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d2, d3);

        d0 = d1;

        d1 = virtualinvoke r2.<org.javia.arity.Complex: double abs2()>();

        goto label2;

     label3:
        $d7 = r0.<org.javia.arity.Complex: double re>;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $d9 = r0.<org.javia.arity.Complex: double im>;

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d9);

        $b2 = $d6 cmpg $d8;

        if $b2 >= 0 goto label4;

        $d12 = r0.<org.javia.arity.Complex: double im>;

        $d13 = neg $d12;

        $d11 = r0.<org.javia.arity.Complex: double re>;

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d13, $d11);

     label4:
        $d10 = r0.<org.javia.arity.Complex: double re>;

        $b3 = $d10 cmpg 0.0;

        if $b3 >= 0 goto label5;

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex negate()>();

     label5:
        return r0;
    }

    public final org.javia.arity.Complex log()
    {
        org.javia.arity.Complex r0, $r1, $r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d6 = r0.<org.javia.arity.Complex: double re>;

        $b1 = $d6 cmpg 0.0;

        if $b1 < 0 goto label1;

        $d7 = r0.<org.javia.arity.Complex: double re>;

        $d8 = staticinvoke <java.lang.Math: double log(double)>($d7);

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d8, 0.0);

        return $r2;

     label1:
        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d2 = r0.<org.javia.arity.Complex: double re>;

        d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d3, $d2);

        $d4 = virtualinvoke r0.<org.javia.arity.Complex: double abs()>();

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d5, d0);

        return $r1;
    }

    public final org.javia.arity.Complex exp()
    {
        org.javia.arity.Complex r0, $r1, $r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        d0 = staticinvoke <java.lang.Math: double exp(double)>($d1);

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d0, 0.0);

        return $r2;

     label1:
        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d4 = staticinvoke <org.javia.arity.MoreMath: double cos(double)>($d3);

        $d6 = d0 * $d4;

        $d5 = r0.<org.javia.arity.Complex: double im>;

        $d7 = staticinvoke <org.javia.arity.MoreMath: double sin(double)>($d5);

        $d8 = d0 * $d7;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d6, $d8);

        return $r1;
    }

    public final org.javia.arity.Complex square()
    {
        org.javia.arity.Complex r0, $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $d5 = $d1 * $d0;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $d4 = $d3 * $d2;

        $d10 = $d5 - $d4;

        $d6 = r0.<org.javia.arity.Complex: double re>;

        $d8 = 2.0 * $d6;

        $d7 = r0.<org.javia.arity.Complex: double im>;

        $d9 = $d8 * $d7;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d10, $d9);

        return $r1;
    }

    public final org.javia.arity.Complex pow(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d44, d45;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d2 = r1.<org.javia.arity.Complex: double im>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label5;

        $d30 = r1.<org.javia.arity.Complex: double re>;

        $b4 = $d30 cmpl 0.0;

        if $b4 != 0 goto label1;

        $r11 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 0.0);

        return $r11;

     label1:
        $d29 = r0.<org.javia.arity.Complex: double im>;

        $b3 = $d29 cmpl 0.0;

        if $b3 != 0 goto label2;

        $d43 = r0.<org.javia.arity.Complex: double re>;

        $d42 = r1.<org.javia.arity.Complex: double re>;

        d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d43, $d42);

        $b7 = d0 cmpl d0;

        if $b7 != 0 goto label2;

        $r10 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d0, 0.0);

        return $r10;

     label2:
        $d32 = r1.<org.javia.arity.Complex: double re>;

        $b6 = $d32 cmpl 2.0;

        if $b6 != 0 goto label3;

        $r12 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex square()>();

        return $r12;

     label3:
        $d31 = r1.<org.javia.arity.Complex: double re>;

        $b5 = $d31 cmpl 0.5;

        if $b5 != 0 goto label4;

        $r8 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex sqrt()>();

        return $r8;

     label4:
        $d35 = virtualinvoke r0.<org.javia.arity.Complex: double abs2()>();

        $d34 = r1.<org.javia.arity.Complex: double re>;

        $d33 = $d34 / 2.0;

        d44 = staticinvoke <java.lang.Math: double pow(double,double)>($d35, $d33);

        $d39 = virtualinvoke r0.<org.javia.arity.Complex: double arg()>();

        $d38 = r1.<org.javia.arity.Complex: double re>;

        d1 = $d39 * $d38;

        $d37 = staticinvoke <org.javia.arity.MoreMath: double cos(double)>(d1);

        $d36 = d44 * $d37;

        $d41 = staticinvoke <org.javia.arity.MoreMath: double sin(double)>(d1);

        $d40 = d44 * $d41;

        $r9 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d36, $d40);

        return $r9;

     label5:
        $d3 = r0.<org.javia.arity.Complex: double im>;

        $b1 = $d3 cmpl 0.0;

        if $b1 != 0 goto label6;

        $d18 = r0.<org.javia.arity.Complex: double re>;

        $b2 = $d18 cmpl 0.0;

        if $b2 <= 0 goto label6;

        $d20 = r0.<org.javia.arity.Complex: double re>;

        $d19 = r1.<org.javia.arity.Complex: double re>;

        d45 = staticinvoke <java.lang.Math: double pow(double,double)>($d20, $d19);

        $d21 = r1.<org.javia.arity.Complex: double im>;

        $d23 = r0.<org.javia.arity.Complex: double re>;

        $d22 = staticinvoke <java.lang.Math: double log(double)>($d23);

        $d25 = $d21 * $d22;

        $r6 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, $d25);

        $r5 = virtualinvoke $r6.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

        $d24 = r0.<org.javia.arity.Complex: double re>;

        $d26 = d45 * $d24;

        $d27 = r0.<org.javia.arity.Complex: double im>;

        $d28 = d45 * $d27;

        $r7 = virtualinvoke $r5.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d26, $d28);

        return $r7;

     label6:
        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d5 = r1.<org.javia.arity.Complex: double re>;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        $d10 = $d5 * $d4;

        $d7 = r1.<org.javia.arity.Complex: double im>;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        $d8 = $d7 * $d6;

        $d17 = $d10 - $d8;

        $d12 = r1.<org.javia.arity.Complex: double re>;

        $d9 = r0.<org.javia.arity.Complex: double im>;

        $d16 = $d12 * $d9;

        $d14 = r1.<org.javia.arity.Complex: double im>;

        $d11 = r0.<org.javia.arity.Complex: double re>;

        $d13 = $d14 * $d11;

        $d15 = $d16 + $d13;

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d17, $d15);

        $r4 = virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

        return $r4;
    }

    public final org.javia.arity.Complex lgamma()
    {
        org.javia.arity.Complex r0, $r4;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39;
        double[] r1;
        int i0, $i1;

        r0 := @this: org.javia.arity.Complex;

        d0 = 0.9999999999999971;

        d1 = 0.0;

        $d9 = r0.<org.javia.arity.Complex: double re>;

        $d10 = r0.<org.javia.arity.Complex: double re>;

        $d13 = $d9 * $d10;

        $d11 = r0.<org.javia.arity.Complex: double im>;

        $d12 = r0.<org.javia.arity.Complex: double im>;

        $d14 = $d11 * $d12;

        d2 = $d13 + $d14;

        d3 = r0.<org.javia.arity.Complex: double re>;

        r1 = <org.javia.arity.MoreMath: double[] GAMMA>;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        d3 = d3 + 1.0;

        $d30 = d3 + d3;

        $d36 = $d30 - 1.0;

        d2 = d2 + $d36;

        d4 = r1[i0];

        $d35 = d4 * d3;

        $d34 = $d35 / d2;

        d0 = d0 + $d34;

        $d33 = r0.<org.javia.arity.Complex: double im>;

        $d38 = d4 * $d33;

        $d37 = $d38 / d2;

        d1 = d1 - $d37;

        i0 = i0 + 1;

        goto label1;

     label2:
        $d15 = r0.<org.javia.arity.Complex: double re>;

        d39 = $d15 + 0.5;

        $d16 = r0.<org.javia.arity.Complex: double re>;

        d5 = $d16 + 5.2421875;

        d6 = r0.<org.javia.arity.Complex: double im>;

        r0.<org.javia.arity.Complex: double re> = d5;

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d18 = r0.<org.javia.arity.Complex: double re>;

        $d22 = d39 * $d18;

        $d17 = r0.<org.javia.arity.Complex: double im>;

        $d21 = d6 * $d17;

        $d19 = $d22 - $d21;

        $d20 = $d19 + 0.9189385332046728;

        d7 = $d20 - d5;

        $d25 = r0.<org.javia.arity.Complex: double im>;

        $d24 = d39 * $d25;

        $d26 = r0.<org.javia.arity.Complex: double re>;

        $d23 = d6 * $d26;

        $d28 = $d24 + $d23;

        d8 = $d28 - d6;

        $r4 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(d0, d1);

        virtualinvoke $r4.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d27 = r0.<org.javia.arity.Complex: double re>;

        $d31 = $d27 + d7;

        r0.<org.javia.arity.Complex: double re> = $d31;

        $d32 = r0.<org.javia.arity.Complex: double im>;

        $d29 = $d32 + d8;

        r0.<org.javia.arity.Complex: double im> = $d29;

        return r0;
    }

    public final org.javia.arity.Complex factorial()
    {
        org.javia.arity.Complex r0, $r1, $r2;
        double $d0, $d1, $d2;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <org.javia.arity.MoreMath: double factorial(double)>($d1);

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d2, 0.0);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

     label2:
        return $r2;
    }

    public final org.javia.arity.Complex sin()
    {
        org.javia.arity.Complex r0, $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d11 = r0.<org.javia.arity.Complex: double re>;

        $d12 = staticinvoke <org.javia.arity.MoreMath: double sin(double)>($d11);

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d12, 0.0);

        goto label2;

     label1:
        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <org.javia.arity.MoreMath: double sin(double)>($d1);

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d4 = staticinvoke <java.lang.Math: double cosh(double)>($d3);

        $d6 = $d2 * $d4;

        $d5 = r0.<org.javia.arity.Complex: double re>;

        $d7 = staticinvoke <org.javia.arity.MoreMath: double cos(double)>($d5);

        $d8 = r0.<org.javia.arity.Complex: double im>;

        $d9 = staticinvoke <java.lang.Math: double sinh(double)>($d8);

        $d10 = $d7 * $d9;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d6, $d10);

     label2:
        return $r1;
    }

    public final org.javia.arity.Complex sinh()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3;
        double $d0, $d1, $d2;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <java.lang.Math: double sinh(double)>($d1);

        $r3 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d2, 0.0);

        goto label2;

     label1:
        $r1 = specialinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex swap()>();

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex sin()>();

        $r3 = specialinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex swap()>();

     label2:
        return $r3;
    }

    public final org.javia.arity.Complex cos()
    {
        org.javia.arity.Complex r0, $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d12 = r0.<org.javia.arity.Complex: double re>;

        $d13 = staticinvoke <org.javia.arity.MoreMath: double cos(double)>($d12);

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d13, 0.0);

        goto label2;

     label1:
        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <org.javia.arity.MoreMath: double cos(double)>($d1);

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d4 = staticinvoke <java.lang.Math: double cosh(double)>($d3);

        $d6 = $d2 * $d4;

        $d5 = r0.<org.javia.arity.Complex: double re>;

        $d7 = staticinvoke <org.javia.arity.MoreMath: double sin(double)>($d5);

        $d9 = neg $d7;

        $d8 = r0.<org.javia.arity.Complex: double im>;

        $d10 = staticinvoke <java.lang.Math: double sinh(double)>($d8);

        $d11 = $d9 * $d10;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d6, $d11);

     label2:
        return $r1;
    }

    public final org.javia.arity.Complex cosh()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3;
        double $d0, $d1, $d2;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <java.lang.Math: double cosh(double)>($d1);

        $r3 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d2, 0.0);

        goto label2;

     label1:
        $r1 = specialinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex swap()>();

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex cos()>();

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex conjugate()>();

     label2:
        return $r3;
    }

    public final org.javia.arity.Complex tan()
    {
        org.javia.arity.Complex r0, $r1, $r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d3 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d15 = r0.<org.javia.arity.Complex: double re>;

        $d14 = staticinvoke <org.javia.arity.MoreMath: double tan(double)>($d15);

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d14, 0.0);

        return $r2;

     label1:
        $d5 = r0.<org.javia.arity.Complex: double re>;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        d0 = $d5 + $d4;

        $d7 = r0.<org.javia.arity.Complex: double im>;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        d1 = $d7 + $d6;

        $d8 = staticinvoke <org.javia.arity.MoreMath: double cos(double)>(d0);

        $d9 = staticinvoke <java.lang.Math: double cosh(double)>(d1);

        d2 = $d8 + $d9;

        $d10 = staticinvoke <org.javia.arity.MoreMath: double sin(double)>(d0);

        $d12 = $d10 / d2;

        $d11 = staticinvoke <java.lang.Math: double sinh(double)>(d1);

        $d13 = $d11 / d2;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d12, $d13);

        return $r1;
    }

    public final org.javia.arity.Complex tanh()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3;
        double $d0, $d1, $d2;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d2 = staticinvoke <java.lang.Math: double tanh(double)>($d1);

        $r3 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d2, 0.0);

        goto label2;

     label1:
        $r1 = specialinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex swap()>();

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex tan()>();

        $r3 = specialinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex swap()>();

     label2:
        return $r3;
    }

    public final org.javia.arity.Complex asin()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3, $r4, $r5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d11 = r0.<org.javia.arity.Complex: double re>;

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $b1 = $d10 cmpg 1.0;

        if $b1 > 0 goto label1;

        $d12 = r0.<org.javia.arity.Complex: double re>;

        $d13 = staticinvoke <java.lang.Math: double asin(double)>($d12);

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d13, 0.0);

        return $r5;

     label1:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        $r1 = specialinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex sqrt1z()>();

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $d6 = $d3 - d1;

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $d5 = $d4 + d0;

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d6, $d5);

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d9 = r0.<org.javia.arity.Complex: double im>;

        $d7 = r0.<org.javia.arity.Complex: double re>;

        $d8 = neg $d7;

        $r4 = virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d9, $d8);

        return $r4;
    }

    public final org.javia.arity.Complex acos()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3, $r4, $r5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d11 = r0.<org.javia.arity.Complex: double re>;

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $b1 = $d10 cmpg 1.0;

        if $b1 > 0 goto label1;

        $d12 = r0.<org.javia.arity.Complex: double re>;

        $d13 = staticinvoke <java.lang.Math: double acos(double)>($d12);

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d13, 0.0);

        return $r5;

     label1:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        $r1 = specialinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex sqrt1z()>();

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d6 = d0 - $d3;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        $d5 = d1 + $d4;

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d6, $d5);

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d9 = r0.<org.javia.arity.Complex: double im>;

        $d7 = r0.<org.javia.arity.Complex: double re>;

        $d8 = neg $d7;

        $r4 = virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d9, $d8);

        return $r4;
    }

    public final org.javia.arity.Complex atan()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3, $r4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d3 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d25 = r0.<org.javia.arity.Complex: double re>;

        $d28 = staticinvoke <java.lang.Math: double atan(double)>($d25);

        $r4 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d28, 0.0);

        return $r4;

     label1:
        $d5 = r0.<org.javia.arity.Complex: double re>;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        d0 = $d5 * $d4;

        $d7 = r0.<org.javia.arity.Complex: double im>;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        d1 = $d7 * $d6;

        $d9 = d0 + d1;

        $d8 = r0.<org.javia.arity.Complex: double im>;

        $d12 = $d9 - $d8;

        $d10 = r0.<org.javia.arity.Complex: double im>;

        $d11 = $d12 - $d10;

        d2 = $d11 + 1.0;

        $d14 = d0 + d1;

        $d13 = $d14 - 1.0;

        $d16 = neg $d13;

        $d21 = $d16 / d2;

        $d18 = r0.<org.javia.arity.Complex: double re>;

        $d15 = r0.<org.javia.arity.Complex: double re>;

        $d17 = $d18 + $d15;

        $d20 = neg $d17;

        $d19 = $d20 / d2;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d21, $d19);

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d22 = r0.<org.javia.arity.Complex: double im>;

        $d24 = neg $d22;

        $d27 = $d24 / 2.0;

        $d23 = r0.<org.javia.arity.Complex: double re>;

        $d26 = $d23 / 2.0;

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d27, $d26);

        return $r3;
    }

    public final org.javia.arity.Complex asinh()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3, $r4, $r5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d19 = r0.<org.javia.arity.Complex: double re>;

        $d20 = staticinvoke <org.javia.arity.MoreMath: double asinh(double)>($d19);

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d20, 0.0);

        return $r5;

     label1:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $d8 = $d4 * $d3;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        $d5 = r0.<org.javia.arity.Complex: double im>;

        $d7 = $d6 * $d5;

        $d9 = $d8 - $d7;

        $d14 = $d9 + 1.0;

        $d10 = r0.<org.javia.arity.Complex: double re>;

        $d13 = 2.0 * $d10;

        $d11 = r0.<org.javia.arity.Complex: double im>;

        $d12 = $d13 * $d11;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d14, $d12);

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex sqrt()>();

        $d15 = r0.<org.javia.arity.Complex: double re>;

        $d18 = $d15 + d0;

        $d17 = r0.<org.javia.arity.Complex: double im>;

        $d16 = $d17 + d1;

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d18, $d16);

        $r4 = virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        return $r4;
    }

    public final org.javia.arity.Complex acosh()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3, $r4, $r5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d19 = r0.<org.javia.arity.Complex: double re>;

        $b1 = $d19 cmpl 1.0;

        if $b1 < 0 goto label1;

        $d20 = r0.<org.javia.arity.Complex: double re>;

        $d21 = staticinvoke <org.javia.arity.MoreMath: double acosh(double)>($d20);

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d21, 0.0);

        return $r5;

     label1:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $d8 = $d4 * $d3;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        $d5 = r0.<org.javia.arity.Complex: double im>;

        $d7 = $d6 * $d5;

        $d9 = $d8 - $d7;

        $d14 = $d9 - 1.0;

        $d10 = r0.<org.javia.arity.Complex: double re>;

        $d13 = 2.0 * $d10;

        $d11 = r0.<org.javia.arity.Complex: double im>;

        $d12 = $d13 * $d11;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d14, $d12);

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex sqrt()>();

        $d15 = r0.<org.javia.arity.Complex: double re>;

        $d18 = $d15 + d0;

        $d17 = r0.<org.javia.arity.Complex: double im>;

        $d16 = $d17 + d1;

        $r3 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d18, $d16);

        $r4 = virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        return $r4;
    }

    public final org.javia.arity.Complex atanh()
    {
        org.javia.arity.Complex r0, $r1, $r2, $r3, $r4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        byte $b0;

        r0 := @this: org.javia.arity.Complex;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d3 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d23 = r0.<org.javia.arity.Complex: double re>;

        $d24 = staticinvoke <org.javia.arity.MoreMath: double atanh(double)>($d23);

        $r4 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d24, 0.0);

        return $r4;

     label1:
        $d5 = r0.<org.javia.arity.Complex: double re>;

        $d4 = r0.<org.javia.arity.Complex: double re>;

        d0 = $d5 * $d4;

        $d7 = r0.<org.javia.arity.Complex: double im>;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        d1 = $d7 * $d6;

        $d9 = d0 + 1.0;

        $d8 = r0.<org.javia.arity.Complex: double re>;

        $d12 = $d9 - $d8;

        $d10 = r0.<org.javia.arity.Complex: double re>;

        d2 = $d12 - $d10;

        $d11 = 1.0 - d0;

        $d14 = $d11 - d1;

        $d17 = $d14 / d2;

        $d16 = r0.<org.javia.arity.Complex: double im>;

        $d13 = r0.<org.javia.arity.Complex: double im>;

        $d15 = $d16 + $d13;

        $d18 = $d15 / d2;

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d17, $d18);

        $r1 = virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $d20 = r0.<org.javia.arity.Complex: double re>;

        $d21 = $d20 / 2.0;

        $d19 = r0.<org.javia.arity.Complex: double im>;

        $d22 = $d19 / 2.0;

        $r3 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d21, $d22);

        return $r3;
    }

    public final org.javia.arity.Complex combinations(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, $r2, $r5, $r7, $r8, $r9;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d6 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d6 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d18 = r1.<org.javia.arity.Complex: double im>;

        $b1 = $d18 cmpl 0.0;

        if $b1 != 0 goto label1;

        $d19 = r0.<org.javia.arity.Complex: double re>;

        $d17 = r1.<org.javia.arity.Complex: double re>;

        $d20 = staticinvoke <org.javia.arity.MoreMath: double combinations(double,double)>($d19, $d17);

        $r9 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d20, 0.0);

        return $r9;

     label1:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        d2 = r0.<org.javia.arity.Complex: double re>;

        d3 = r0.<org.javia.arity.Complex: double im>;

        $r2 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(org.javia.arity.Complex)>(r1);

        virtualinvoke $r2.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        d4 = r0.<org.javia.arity.Complex: double re>;

        d5 = r0.<org.javia.arity.Complex: double im>;

        $d7 = r1.<org.javia.arity.Complex: double re>;

        $d10 = d0 - $d7;

        $d9 = r1.<org.javia.arity.Complex: double im>;

        $d8 = d1 - $d9;

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d10, $d8);

        virtualinvoke $r5.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        $d13 = d2 - d4;

        $d11 = r0.<org.javia.arity.Complex: double re>;

        $d16 = $d13 - $d11;

        $d15 = d3 - d5;

        $d12 = r0.<org.javia.arity.Complex: double im>;

        $d14 = $d15 - $d12;

        $r7 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d16, $d14);

        $r8 = virtualinvoke $r7.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

        return $r8;
    }

    public final org.javia.arity.Complex permutations(org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1, $r3, $r5, $r6, $r7;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0, $b1;

        r0 := @this: org.javia.arity.Complex;

        r1 := @parameter0: org.javia.arity.Complex;

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d13 = r1.<org.javia.arity.Complex: double im>;

        $b1 = $d13 cmpl 0.0;

        if $b1 != 0 goto label1;

        $d16 = r0.<org.javia.arity.Complex: double re>;

        $d14 = r1.<org.javia.arity.Complex: double re>;

        $d15 = staticinvoke <org.javia.arity.MoreMath: double permutations(double,double)>($d16, $d14);

        $r7 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d15, 0.0);

        return $r7;

     label1:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        d2 = r0.<org.javia.arity.Complex: double re>;

        d3 = r0.<org.javia.arity.Complex: double im>;

        $d5 = r1.<org.javia.arity.Complex: double re>;

        $d8 = d0 - $d5;

        $d6 = r1.<org.javia.arity.Complex: double im>;

        $d7 = d1 - $d6;

        $r3 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d8, $d7);

        virtualinvoke $r3.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        $d9 = r0.<org.javia.arity.Complex: double re>;

        $d12 = d2 - $d9;

        $d11 = r0.<org.javia.arity.Complex: double im>;

        $d10 = d3 - $d11;

        $r5 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d12, $d10);

        $r6 = virtualinvoke $r5.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

        return $r6;
    }

    private final org.javia.arity.Complex swap()
    {
        org.javia.arity.Complex r0, $r1;
        double $d0, $d1;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double im>;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d1, $d0);

        return $r1;
    }

    private final org.javia.arity.Complex normalizeInfinity()
    {
        org.javia.arity.Complex r0;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: org.javia.arity.Complex;

        $d0 = r0.<org.javia.arity.Complex: double im>;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        r0.<org.javia.arity.Complex: double im> = 0.0;

        goto label2;

     label1:
        $d1 = r0.<org.javia.arity.Complex: double re>;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z1 != 0 goto label2;

        r0.<org.javia.arity.Complex: double re> = 0.0;

     label2:
        return r0;
    }

    private final org.javia.arity.Complex sqrt1z()
    {
        org.javia.arity.Complex r0, $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r0.<org.javia.arity.Complex: double re>;

        $d2 = $d1 * $d0;

        $d6 = 1.0 - $d2;

        $d4 = r0.<org.javia.arity.Complex: double im>;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d5 = $d4 * $d3;

        $d11 = $d6 + $d5;

        $d7 = r0.<org.javia.arity.Complex: double re>;

        $d9 = -2.0 * $d7;

        $d8 = r0.<org.javia.arity.Complex: double im>;

        $d10 = $d9 * $d8;

        $r1 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>($d11, $d10);

        $r2 = virtualinvoke $r1.<org.javia.arity.Complex: org.javia.arity.Complex sqrt()>();

        return $r2;
    }
}
