class org.javia.arity.RPN extends org.javia.arity.TokenConsumer
{
    java.util.Stack stack;
    int prevTokenId;
    org.javia.arity.TokenConsumer consumer;
    org.javia.arity.SyntaxException exception;

    void <init>(org.javia.arity.SyntaxException)
    {
        org.javia.arity.RPN r0;
        org.javia.arity.SyntaxException r1;
        java.util.Stack $r2;

        r0 := @this: org.javia.arity.RPN;

        r1 := @parameter0: org.javia.arity.SyntaxException;

        specialinvoke r0.<org.javia.arity.TokenConsumer: void <init>()>();

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.javia.arity.RPN: java.util.Stack stack> = $r2;

        r0.<org.javia.arity.RPN: int prevTokenId> = 0;

        r0.<org.javia.arity.RPN: org.javia.arity.SyntaxException exception> = r1;

        return;
    }

    void setConsumer(org.javia.arity.TokenConsumer)
    {
        org.javia.arity.RPN r0;
        org.javia.arity.TokenConsumer r1;

        r0 := @this: org.javia.arity.RPN;

        r1 := @parameter0: org.javia.arity.TokenConsumer;

        r0.<org.javia.arity.RPN: org.javia.arity.TokenConsumer consumer> = r1;

        return;
    }

    void start()
    {
        org.javia.arity.RPN r0;
        java.util.Stack $r1;
        org.javia.arity.TokenConsumer $r2;

        r0 := @this: org.javia.arity.RPN;

        $r1 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: void removeAllElements()>();

        r0.<org.javia.arity.RPN: int prevTokenId> = 0;

        $r2 = r0.<org.javia.arity.RPN: org.javia.arity.TokenConsumer consumer>;

        virtualinvoke $r2.<org.javia.arity.TokenConsumer: void start()>();

        return;
    }

    private org.javia.arity.Token top()
    {
        org.javia.arity.RPN r0;
        java.util.Stack $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.javia.arity.Token $r4;

        r0 := @this: org.javia.arity.RPN;

        $r1 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean empty()>();

        if $z0 == 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.javia.arity.Token) $r3;

     label2:
        return $r4;
    }

    private void popHigher(int) throws org.javia.arity.SyntaxException
    {
        org.javia.arity.RPN r0;
        int i0, $i1;
        org.javia.arity.Token r1;
        org.javia.arity.TokenConsumer $r2;
        java.util.Stack $r3;

        r0 := @this: org.javia.arity.RPN;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<org.javia.arity.RPN: org.javia.arity.Token top()>();

     label1:
        if r1 == null goto label2;

        $i1 = r1.<org.javia.arity.Token: int priority>;

        if $i1 < i0 goto label2;

        $r2 = r0.<org.javia.arity.RPN: org.javia.arity.TokenConsumer consumer>;

        virtualinvoke $r2.<org.javia.arity.TokenConsumer: void push(org.javia.arity.Token)>(r1);

        $r3 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object pop()>();

        r1 = specialinvoke r0.<org.javia.arity.RPN: org.javia.arity.Token top()>();

        goto label1;

     label2:
        return;
    }

    static final boolean isOperand(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 8 goto label1;

        if i0 == 14 goto label1;

        if i0 == 9 goto label1;

        if i0 == 10 goto label1;

        if i0 != 17 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    void push(org.javia.arity.Token) throws org.javia.arity.SyntaxException
    {
        org.javia.arity.RPN r0;
        org.javia.arity.Token r1, r2, $r4, $r5, $r6, $r13, $r25, r28, r29;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.javia.arity.TokenConsumer $r3, $r10;
        java.util.Stack $r8, $r19, $r23, $r27;
        org.javia.arity.SyntaxException $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r24;
        byte $b23;

        r0 := @this: org.javia.arity.RPN;

        r1 := @parameter0: org.javia.arity.Token;

        i0 = r1.<org.javia.arity.Token: int priority>;

        i1 = r1.<org.javia.arity.Token: int id>;

        tableswitch(i1)
        {
            case 9: goto label01;
            case 10: goto label01;
            case 11: goto label14;
            case 12: goto label08;
            case 13: goto label14;
            case 14: goto label03;
            case 15: goto label12;
            default: goto label14;
        };

     label01:
        $i2 = r0.<org.javia.arity.RPN: int prevTokenId>;

        $z0 = staticinvoke <org.javia.arity.RPN: boolean isOperand(int)>($i2);

        if $z0 == 0 goto label02;

        $r4 = <org.javia.arity.Lexer: org.javia.arity.Token TOK_MUL>;

        virtualinvoke r0.<org.javia.arity.RPN: void push(org.javia.arity.Token)>($r4);

     label02:
        $r3 = r0.<org.javia.arity.RPN: org.javia.arity.TokenConsumer consumer>;

        virtualinvoke $r3.<org.javia.arity.TokenConsumer: void push(org.javia.arity.Token)>(r1);

        goto label22;

     label03:
        $i5 = r0.<org.javia.arity.RPN: int prevTokenId>;

        if $i5 != 11 goto label04;

        $r13 = specialinvoke r0.<org.javia.arity.RPN: org.javia.arity.Token top()>();

        $i11 = $r13.<org.javia.arity.Token: int arity>;

        $i10 = $i11 - 1;

        $r13.<org.javia.arity.Token: int arity> = $i10;

        goto label05;

     label04:
        $i6 = r0.<org.javia.arity.RPN: int prevTokenId>;

        $z1 = staticinvoke <org.javia.arity.RPN: boolean isOperand(int)>($i6);

        if $z1 != 0 goto label05;

        $r12 = r0.<org.javia.arity.RPN: org.javia.arity.SyntaxException exception>;

        $i9 = r1.<org.javia.arity.Token: int position>;

        $r14 = virtualinvoke $r12.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>("unexpected ) or END", $i9);

        throw $r14;

     label05:
        specialinvoke r0.<org.javia.arity.RPN: void popHigher(int)>(i0);

        r2 = specialinvoke r0.<org.javia.arity.RPN: org.javia.arity.Token top()>();

        if r2 == null goto label22;

        $i7 = r2.<org.javia.arity.Token: int id>;

        if $i7 != 11 goto label06;

        $r10 = r0.<org.javia.arity.RPN: org.javia.arity.TokenConsumer consumer>;

        virtualinvoke $r10.<org.javia.arity.TokenConsumer: void push(org.javia.arity.Token)>(r2);

        goto label07;

     label06:
        $r6 = <org.javia.arity.Lexer: org.javia.arity.Token TOK_LPAREN>;

        if r2 == $r6 goto label07;

        $r9 = r0.<org.javia.arity.RPN: org.javia.arity.SyntaxException exception>;

        $i8 = r1.<org.javia.arity.Token: int position>;

        $r11 = virtualinvoke $r9.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>("expected LPAREN or CALL", $i8);

        throw $r11;

     label07:
        $r8 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        virtualinvoke $r8.<java.util.Stack: java.lang.Object pop()>();

        goto label22;

     label08:
        $i12 = r0.<org.javia.arity.RPN: int prevTokenId>;

        $z2 = staticinvoke <org.javia.arity.RPN: boolean isOperand(int)>($i12);

        if $z2 != 0 goto label09;

        $r17 = r0.<org.javia.arity.RPN: org.javia.arity.SyntaxException exception>;

        $i15 = r1.<org.javia.arity.Token: int position>;

        $r18 = virtualinvoke $r17.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>("misplaced COMMA", $i15);

        throw $r18;

     label09:
        specialinvoke r0.<org.javia.arity.RPN: void popHigher(int)>(i0);

        r28 = specialinvoke r0.<org.javia.arity.RPN: org.javia.arity.Token top()>();

        if r28 == null goto label10;

        $i16 = r28.<org.javia.arity.Token: int id>;

        if $i16 == 11 goto label11;

     label10:
        $r15 = r0.<org.javia.arity.RPN: org.javia.arity.SyntaxException exception>;

        $i13 = r1.<org.javia.arity.Token: int position>;

        $r16 = virtualinvoke $r15.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>("COMMA not inside CALL", $i13);

        throw $r16;

     label11:
        $i17 = r28.<org.javia.arity.Token: int arity>;

        $i14 = $i17 + 1;

        r28.<org.javia.arity.Token: int arity> = $i14;

        goto label22;

     label12:
        r29 = <org.javia.arity.Lexer: org.javia.arity.Token TOK_RPAREN>;

        $i4 = r1.<org.javia.arity.Token: int position>;

        r29.<org.javia.arity.Token: int position> = $i4;

     label13:
        virtualinvoke r0.<org.javia.arity.RPN: void push(org.javia.arity.Token)>(r29);

        $r5 = specialinvoke r0.<org.javia.arity.RPN: org.javia.arity.Token top()>();

        if $r5 != null goto label13;

        goto label22;

     label14:
        $i18 = r1.<org.javia.arity.Token: int assoc>;

        if $i18 != 1 goto label16;

        $i24 = r0.<org.javia.arity.RPN: int prevTokenId>;

        $z4 = staticinvoke <org.javia.arity.RPN: boolean isOperand(int)>($i24);

        if $z4 == 0 goto label15;

        $r25 = <org.javia.arity.Lexer: org.javia.arity.Token TOK_MUL>;

        virtualinvoke r0.<org.javia.arity.RPN: void push(org.javia.arity.Token)>($r25);

     label15:
        $r27 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        virtualinvoke $r27.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        goto label22;

     label16:
        $i19 = r0.<org.javia.arity.RPN: int prevTokenId>;

        $z3 = staticinvoke <org.javia.arity.RPN: boolean isOperand(int)>($i19);

        if $z3 != 0 goto label19;

        if i1 != 2 goto label17;

        r1 = <org.javia.arity.Lexer: org.javia.arity.Token TOK_UMIN>;

        $r23 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        virtualinvoke $r23.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        goto label22;

     label17:
        if i1 != 1 goto label18;

        return;

     label18:
        $r20 = r0.<org.javia.arity.RPN: org.javia.arity.SyntaxException exception>;

        $i22 = r1.<org.javia.arity.Token: int position>;

        $r24 = virtualinvoke $r20.<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)>("operator without operand", $i22);

        throw $r24;

     label19:
        $i21 = r1.<org.javia.arity.Token: int assoc>;

        if $i21 != 3 goto label20;

        $b23 = 1;

        goto label21;

     label20:
        $b23 = 0;

     label21:
        $i20 = i0 + $b23;

        specialinvoke r0.<org.javia.arity.RPN: void popHigher(int)>($i20);

        $r19 = r0.<org.javia.arity.RPN: java.util.Stack stack>;

        virtualinvoke $r19.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

     label22:
        $i3 = r1.<org.javia.arity.Token: int id>;

        r0.<org.javia.arity.RPN: int prevTokenId> = $i3;

        return;
    }
}
