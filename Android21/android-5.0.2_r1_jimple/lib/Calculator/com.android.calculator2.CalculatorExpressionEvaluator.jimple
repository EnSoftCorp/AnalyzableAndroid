public class com.android.calculator2.CalculatorExpressionEvaluator extends java.lang.Object
{
    private static final int MAX_DIGITS;
    private static final int ROUNDING_DIGITS;
    private final org.javia.arity.Symbols mSymbols;
    private final com.android.calculator2.CalculatorExpressionTokenizer mTokenizer;

    public void <init>(com.android.calculator2.CalculatorExpressionTokenizer)
    {
        com.android.calculator2.CalculatorExpressionEvaluator r0;
        com.android.calculator2.CalculatorExpressionTokenizer r1;
        org.javia.arity.Symbols $r2;

        r0 := @this: com.android.calculator2.CalculatorExpressionEvaluator;

        r1 := @parameter0: com.android.calculator2.CalculatorExpressionTokenizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.javia.arity.Symbols;

        specialinvoke $r2.<org.javia.arity.Symbols: void <init>()>();

        r0.<com.android.calculator2.CalculatorExpressionEvaluator: org.javia.arity.Symbols mSymbols> = $r2;

        r0.<com.android.calculator2.CalculatorExpressionEvaluator: com.android.calculator2.CalculatorExpressionTokenizer mTokenizer> = r1;

        return;
    }

    public void evaluate(java.lang.CharSequence, com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback)
    {
        com.android.calculator2.CalculatorExpressionEvaluator r0;
        java.lang.CharSequence r1;
        com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback r2;
        java.lang.String $r3;

        r0 := @this: com.android.calculator2.CalculatorExpressionEvaluator;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback;

        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r0.<com.android.calculator2.CalculatorExpressionEvaluator: void evaluate(java.lang.String,com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback)>($r3, r2);

        return;
    }

    public void evaluate(java.lang.String, com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback)
    {
        com.android.calculator2.CalculatorExpressionEvaluator r0;
        java.lang.String r1, r4, $r9, $r10, r13;
        com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback r2;
        com.android.calculator2.CalculatorExpressionTokenizer $r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        java.lang.Double $r6;
        org.javia.arity.Symbols $r7;
        boolean $z0;
        char $c5;
        org.javia.arity.SyntaxException $r11;
        java.lang.NumberFormatException $r12;
        double d0;

        r0 := @this: com.android.calculator2.CalculatorExpressionEvaluator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback;

        $r5 = r0.<com.android.calculator2.CalculatorExpressionEvaluator: com.android.calculator2.CalculatorExpressionTokenizer mTokenizer>;

        r13 = virtualinvoke $r5.<com.android.calculator2.CalculatorExpressionTokenizer: java.lang.String getNormalizedExpression(java.lang.String)>(r1);

     label01:
        $i0 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

        $r10 = "+-/*";

        $i3 = virtualinvoke r13.<java.lang.String: int length()>();

        $i2 = $i3 - 1;

        $c5 = virtualinvoke r13.<java.lang.String: char charAt(int)>($i2);

        $i4 = virtualinvoke $r10.<java.lang.String: int indexOf(int)>($c5);

        if $i4 == -1 goto label02;

        $i6 = virtualinvoke r13.<java.lang.String: int length()>();

        $i7 = $i6 - 1;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        goto label01;

     label02:
        $i1 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i1 == 0 goto label03;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r13);

        if $r6 == null goto label05;

     label03:
        interfaceinvoke r2.<com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback: void onEvaluate(java.lang.String,java.lang.String,int)>(r13, null, -1);

     label04:
        return;

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

     label07:
        $r7 = r0.<com.android.calculator2.CalculatorExpressionEvaluator: org.javia.arity.Symbols mSymbols>;

        d0 = virtualinvoke $r7.<org.javia.arity.Symbols: double eval(java.lang.String)>(r13);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label08;

        interfaceinvoke r2.<com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback: void onEvaluate(java.lang.String,java.lang.String,int)>(r13, null, 2131165198);

        goto label09;

     label08:
        $r8 = r0.<com.android.calculator2.CalculatorExpressionEvaluator: com.android.calculator2.CalculatorExpressionTokenizer mTokenizer>;

        $r9 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int,int)>(d0, 12, 2);

        r4 = virtualinvoke $r8.<com.android.calculator2.CalculatorExpressionTokenizer: java.lang.String getLocalizedExpression(java.lang.String)>($r9);

        interfaceinvoke r2.<com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback: void onEvaluate(java.lang.String,java.lang.String,int)>(r13, r4, -1);

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

        interfaceinvoke r2.<com.android.calculator2.CalculatorExpressionEvaluator$EvaluateCallback: void onEvaluate(java.lang.String,java.lang.String,int)>(r13, null, 2131165199);

     label11:
        return;

        catch java.lang.NumberFormatException from label02 to label04 with label06;
        catch org.javia.arity.SyntaxException from label07 to label09 with label10;
    }

    public static void <clinit>()
    {
        <com.android.calculator2.CalculatorExpressionEvaluator: int ROUNDING_DIGITS> = 2;

        <com.android.calculator2.CalculatorExpressionEvaluator: int MAX_DIGITS> = 12;

        return;
    }
}
