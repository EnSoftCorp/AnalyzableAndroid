class org.javia.arity.OptCodeGen extends org.javia.arity.SimpleCodeGen
{
    org.javia.arity.EvalContext context;
    int sp;
    org.javia.arity.Complex[] stack;
    double[] traceConstsRe;
    double[] traceConstsIm;
    org.javia.arity.Function[] traceFuncs;
    byte[] traceCode;
    org.javia.arity.CompiledFunction tracer;
    int intrinsicArity;
    private boolean isPercent;

    void <init>(org.javia.arity.SyntaxException)
    {
        org.javia.arity.OptCodeGen r0;
        org.javia.arity.SyntaxException r1;
        org.javia.arity.EvalContext $r2, $r3;
        org.javia.arity.Complex[] $r4;
        double[] $r5, $r6, $r11, $r12;
        org.javia.arity.Function[] $r7, $r10;
        byte[] $r8, $r13;
        org.javia.arity.CompiledFunction $r9;

        r0 := @this: org.javia.arity.OptCodeGen;

        r1 := @parameter0: org.javia.arity.SyntaxException;

        specialinvoke r0.<org.javia.arity.SimpleCodeGen: void <init>(org.javia.arity.SyntaxException)>(r1);

        $r2 = new org.javia.arity.EvalContext;

        specialinvoke $r2.<org.javia.arity.EvalContext: void <init>()>();

        r0.<org.javia.arity.OptCodeGen: org.javia.arity.EvalContext context> = $r2;

        $r3 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.EvalContext context>;

        $r4 = $r3.<org.javia.arity.EvalContext: org.javia.arity.Complex[] stackComplex>;

        r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack> = $r4;

        $r5 = newarray (double)[1];

        r0.<org.javia.arity.OptCodeGen: double[] traceConstsRe> = $r5;

        $r6 = newarray (double)[1];

        r0.<org.javia.arity.OptCodeGen: double[] traceConstsIm> = $r6;

        $r7 = newarray (org.javia.arity.Function)[1];

        r0.<org.javia.arity.OptCodeGen: org.javia.arity.Function[] traceFuncs> = $r7;

        $r8 = newarray (byte)[1];

        r0.<org.javia.arity.OptCodeGen: byte[] traceCode> = $r8;

        $r9 = new org.javia.arity.CompiledFunction;

        $r13 = r0.<org.javia.arity.OptCodeGen: byte[] traceCode>;

        $r12 = r0.<org.javia.arity.OptCodeGen: double[] traceConstsRe>;

        $r11 = r0.<org.javia.arity.OptCodeGen: double[] traceConstsIm>;

        $r10 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Function[] traceFuncs>;

        specialinvoke $r9.<org.javia.arity.CompiledFunction: void <init>(int,byte[],double[],double[],org.javia.arity.Function[])>(0, $r13, $r12, $r11, $r10);

        r0.<org.javia.arity.OptCodeGen: org.javia.arity.CompiledFunction tracer> = $r9;

        return;
    }

    void start()
    {
        org.javia.arity.OptCodeGen r0;

        r0 := @this: org.javia.arity.OptCodeGen;

        specialinvoke r0.<org.javia.arity.SimpleCodeGen: void start()>();

        r0.<org.javia.arity.OptCodeGen: int sp> = -1;

        r0.<org.javia.arity.OptCodeGen: int intrinsicArity> = 0;

        r0.<org.javia.arity.OptCodeGen: boolean isPercent> = 0;

        return;
    }

    void push(org.javia.arity.Token) throws org.javia.arity.SyntaxException
    {
        org.javia.arity.OptCodeGen r0;
        org.javia.arity.Token r1;
        boolean z0, $z1, $z2;
        byte b0, b2, $b10, $b15, $b17;
        org.javia.arity.Symbol r2;
        int i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i21, $i22, $i23, i25;
        org.javia.arity.Function r3, $r26, $r29, $r31, $r32, $r38, $r46;
        double $d0, $d1, $d2, $d3, $d4;
        double[] $r4, $r5, $r33, $r34;
        byte[] $r6, $r13, $r22;
        org.javia.arity.Complex[] $r7, $r10, $r11, $r15, $r16, $r35, $r40;
        org.javia.arity.Complex $r8, $r9, $r12, $r14, $r17, $r36, $r41;
        org.javia.arity.ByteStack $r18, $r19, $r42;
        org.javia.arity.DoubleStack $r20, $r23;
        org.javia.arity.FunctionStack $r21, $r28;
        org.javia.arity.Function[] $r24, $r25, $r37, $r39;
        org.javia.arity.EvalContext $r27;
        org.javia.arity.CompiledFunction $r30;
        java.lang.String $r43;
        java.lang.StringBuilder $r44, $r47, $r48;
        java.lang.Error $r45;

        r0 := @this: org.javia.arity.OptCodeGen;

        r1 := @parameter0: org.javia.arity.Token;

        z0 = r0.<org.javia.arity.OptCodeGen: boolean isPercent>;

        r0.<org.javia.arity.OptCodeGen: boolean isPercent> = 0;

        $i3 = r1.<org.javia.arity.Token: int id>;

        tableswitch($i3)
        {
            case 9: goto label01;
            case 10: goto label02;
            case 11: goto label02;
            default: goto label07;
        };

     label01:
        b0 = 1;

        $r4 = r0.<org.javia.arity.OptCodeGen: double[] traceConstsRe>;

        $d0 = r1.<org.javia.arity.Token: double value>;

        $r4[0] = $d0;

        $r5 = r0.<org.javia.arity.OptCodeGen: double[] traceConstsIm>;

        $r5[0] = 0.0;

        goto label09;

     label02:
        r2 = virtualinvoke r0.<org.javia.arity.OptCodeGen: org.javia.arity.Symbol getSymbol(org.javia.arity.Token)>(r1);

        $z2 = virtualinvoke r1.<org.javia.arity.Token: boolean isDerivative()>();

        if $z2 == 0 goto label03;

        b0 = 2;

        $r39 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Function[] traceFuncs>;

        $r38 = r2.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        $r46 = virtualinvoke $r38.<org.javia.arity.Function: org.javia.arity.Function getDerivative()>();

        $r39[0] = $r46;

        goto label09;

     label03:
        $b17 = r2.<org.javia.arity.Symbol: byte op>;

        if $b17 <= 0 goto label05;

        b0 = r2.<org.javia.arity.Symbol: byte op>;

        if b0 < 38 goto label09;

        if b0 > 42 goto label09;

        i1 = b0 - 38;

        $i21 = i1 + 1;

        $i20 = r0.<org.javia.arity.OptCodeGen: int intrinsicArity>;

        if $i21 <= $i20 goto label04;

        $i23 = i1 + 1;

        r0.<org.javia.arity.OptCodeGen: int intrinsicArity> = $i23;

     label04:
        $r35 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i22 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $i18 = $i22 + 1;

        r0.<org.javia.arity.OptCodeGen: int sp> = $i18;

        $r36 = $r35[$i18];

        $r36.<org.javia.arity.Complex: double re> = #NaN;

        $r40 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i19 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $r41 = $r40[$i19];

        $r41.<org.javia.arity.Complex: double im> = 0.0;

        $r42 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.ByteStack code>;

        virtualinvoke $r42.<org.javia.arity.ByteStack: void push(byte)>(b0);

        return;

     label05:
        $r31 = r2.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        if $r31 == null goto label06;

        b0 = 2;

        $r37 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Function[] traceFuncs>;

        $r32 = r2.<org.javia.arity.Symbol: org.javia.arity.Function fun>;

        $r37[0] = $r32;

        goto label09;

     label06:
        b0 = 1;

        $r34 = r0.<org.javia.arity.OptCodeGen: double[] traceConstsRe>;

        $d3 = r2.<org.javia.arity.Symbol: double valueRe>;

        $r34[0] = $d3;

        $r33 = r0.<org.javia.arity.OptCodeGen: double[] traceConstsIm>;

        $d4 = r2.<org.javia.arity.Symbol: double valueIm>;

        $r33[0] = $d4;

        goto label09;

     label07:
        b0 = r1.<org.javia.arity.Token: byte vmop>;

        if b0 > 0 goto label08;

        $r45 = new java.lang.Error;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrong vmop: ");

        $r44 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.Error: void <init>(java.lang.String)>($r43);

        throw $r45;

     label08:
        if b0 != 12 goto label09;

        r0.<org.javia.arity.OptCodeGen: boolean isPercent> = 1;

     label09:
        $r6 = r0.<org.javia.arity.OptCodeGen: byte[] traceCode>;

        $r6[0] = b0;

        if b0 == 8 goto label12;

        $r30 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.CompiledFunction tracer>;

        $r27 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.EvalContext context>;

        $i14 = r0.<org.javia.arity.OptCodeGen: int sp>;

        if z0 == 0 goto label10;

        $b15 = -1;

        goto label11;

     label10:
        $b15 = -2;

     label11:
        $i16 = virtualinvoke $r30.<org.javia.arity.CompiledFunction: int execWithoutCheckComplex(org.javia.arity.EvalContext,int,int)>($r27, $i14, $b15);

        r0.<org.javia.arity.OptCodeGen: int sp> = $i16;

        goto label13;

     label12:
        $r7 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i4 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $i5 = $i4 + 1;

        r0.<org.javia.arity.OptCodeGen: int sp> = $i5;

        $r8 = $r7[$i5];

        $r8.<org.javia.arity.Complex: double re> = #NaN;

        $r10 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i6 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $r9 = $r10[$i6];

        $r9.<org.javia.arity.Complex: double im> = 0.0;

     label13:
        $r11 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i7 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $r12 = $r11[$i7];

        $z1 = virtualinvoke $r12.<org.javia.arity.Complex: boolean isNaN()>();

        if $z1 == 0 goto label14;

        if b0 != 1 goto label22;

     label14:
        if b0 != 2 goto label15;

        $r25 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Function[] traceFuncs>;

        $r26 = $r25[0];

        $i13 = virtualinvoke $r26.<org.javia.arity.Function: int arity()>();

        goto label16;

     label15:
        $r13 = <org.javia.arity.VM: byte[] arity>;

        $i13 = $r13[b0];

     label16:
        i25 = $i13;

     label17:
        if i25 <= 0 goto label21;

        $r19 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.ByteStack code>;

        b2 = virtualinvoke $r19.<org.javia.arity.ByteStack: byte pop()>();

        if b2 != 1 goto label18;

        $r23 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.DoubleStack consts>;

        virtualinvoke $r23.<org.javia.arity.DoubleStack: void pop()>();

        goto label20;

     label18:
        if b2 != 2 goto label19;

        $r21 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.FunctionStack funcs>;

        r3 = virtualinvoke $r21.<org.javia.arity.FunctionStack: org.javia.arity.Function pop()>();

        $i12 = virtualinvoke r3.<org.javia.arity.Function: int arity()>();

        $i11 = $i12 - 1;

        i25 = i25 + $i11;

        goto label20;

     label19:
        $r22 = <org.javia.arity.VM: byte[] arity>;

        $b10 = $r22[b2];

        i25 = i25 + $b10;

     label20:
        i25 = i25 + -1;

        goto label17;

     label21:
        $r20 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.DoubleStack consts>;

        $r15 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i8 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $r14 = $r15[$i8];

        $d2 = $r14.<org.javia.arity.Complex: double re>;

        $r16 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Complex[] stack>;

        $i9 = r0.<org.javia.arity.OptCodeGen: int sp>;

        $r17 = $r16[$i9];

        $d1 = $r17.<org.javia.arity.Complex: double im>;

        virtualinvoke $r20.<org.javia.arity.DoubleStack: void push(double,double)>($d2, $d1);

        b0 = 1;

        goto label23;

     label22:
        if b0 != 2 goto label23;

        $r28 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.FunctionStack funcs>;

        $r24 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.Function[] traceFuncs>;

        $r29 = $r24[0];

        virtualinvoke $r28.<org.javia.arity.FunctionStack: void push(org.javia.arity.Function)>($r29);

     label23:
        $r18 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.ByteStack code>;

        virtualinvoke $r18.<org.javia.arity.ByteStack: void push(byte)>(b0);

        return;
    }

    org.javia.arity.CompiledFunction getFun(int)
    {
        org.javia.arity.OptCodeGen r0;
        int i0;
        org.javia.arity.CompiledFunction $r1;
        org.javia.arity.ByteStack $r2;
        byte[] $r3;
        org.javia.arity.DoubleStack $r4, $r6;
        double[] $r5, $r7;
        org.javia.arity.FunctionStack $r8;
        org.javia.arity.Function[] $r9;

        r0 := @this: org.javia.arity.OptCodeGen;

        i0 := @parameter0: int;

        $r1 = new org.javia.arity.CompiledFunction;

        $r2 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.ByteStack code>;

        $r3 = virtualinvoke $r2.<org.javia.arity.ByteStack: byte[] toArray()>();

        $r4 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.DoubleStack consts>;

        $r5 = virtualinvoke $r4.<org.javia.arity.DoubleStack: double[] getRe()>();

        $r6 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.DoubleStack consts>;

        $r7 = virtualinvoke $r6.<org.javia.arity.DoubleStack: double[] getIm()>();

        $r8 = r0.<org.javia.arity.OptCodeGen: org.javia.arity.FunctionStack funcs>;

        $r9 = virtualinvoke $r8.<org.javia.arity.FunctionStack: org.javia.arity.Function[] toArray()>();

        specialinvoke $r1.<org.javia.arity.CompiledFunction: void <init>(int,byte[],double[],double[],org.javia.arity.Function[])>(i0, $r3, $r5, $r7, $r9);

        return $r1;
    }
}
