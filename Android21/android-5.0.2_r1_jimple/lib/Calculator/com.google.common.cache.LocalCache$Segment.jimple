class com.google.common.cache.LocalCache$Segment extends java.util.concurrent.locks.ReentrantLock
{
    final com.google.common.cache.LocalCache map;
    volatile int count;
    int totalWeight;
    int modCount;
    int threshold;
    volatile java.util.concurrent.atomic.AtomicReferenceArray table;
    final long maxSegmentWeight;
    final java.lang.ref.ReferenceQueue keyReferenceQueue;
    final java.lang.ref.ReferenceQueue valueReferenceQueue;
    final java.util.Queue recencyQueue;
    final java.util.concurrent.atomic.AtomicInteger readCount;
    final java.util.Queue writeQueue;
    final java.util.Queue accessQueue;
    final com.google.common.cache.AbstractCache$StatsCounter statsCounter;

    void <init>(com.google.common.cache.LocalCache, int, long, com.google.common.cache.AbstractCache$StatsCounter)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache r1;
        int i0;
        long l1;
        com.google.common.cache.AbstractCache$StatsCounter r2;
        java.util.concurrent.atomic.AtomicReferenceArray $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Queue $r5, $r6, $r7;
        java.lang.ref.ReferenceQueue $r8, $r9, r11, r12;
        java.util.concurrent.atomic.AtomicInteger r10;
        java.util.concurrent.ConcurrentLinkedQueue r13;
        com.google.common.cache.LocalCache$WriteQueue r14;
        com.google.common.cache.LocalCache$AccessQueue r15;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 := @parameter3: com.google.common.cache.AbstractCache$StatsCounter;

        specialinvoke r0.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke r10.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicInteger readCount> = r10;

        r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map> = r1;

        r0.<com.google.common.cache.LocalCache$Segment: long maxSegmentWeight> = l1;

        r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter> = r2;

        $r4 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>(i0);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void initTable(java.util.concurrent.atomic.AtomicReferenceArray)>($r4);

        $z0 = virtualinvoke r1.<com.google.common.cache.LocalCache: boolean usesKeyReferences()>();

        if $z0 == 0 goto label01;

        r11 = new java.lang.ref.ReferenceQueue;

        $r9 = r11;

        specialinvoke r11.<java.lang.ref.ReferenceQueue: void <init>()>();

        goto label02;

     label01:
        $r9 = null;

     label02:
        r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue keyReferenceQueue> = $r9;

        $z1 = virtualinvoke r1.<com.google.common.cache.LocalCache: boolean usesValueReferences()>();

        if $z1 == 0 goto label03;

        r12 = new java.lang.ref.ReferenceQueue;

        $r8 = r12;

        specialinvoke r12.<java.lang.ref.ReferenceQueue: void <init>()>();

        goto label04;

     label03:
        $r8 = null;

     label04:
        r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue valueReferenceQueue> = $r8;

        $z2 = virtualinvoke r1.<com.google.common.cache.LocalCache: boolean usesAccessQueue()>();

        if $z2 == 0 goto label05;

        r13 = new java.util.concurrent.ConcurrentLinkedQueue;

        $r5 = r13;

        specialinvoke r13.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        goto label06;

     label05:
        $r5 = staticinvoke <com.google.common.cache.LocalCache: java.util.Queue discardingQueue()>();

     label06:
        r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue recencyQueue> = $r5;

        $z3 = virtualinvoke r1.<com.google.common.cache.LocalCache: boolean usesWriteQueue()>();

        if $z3 == 0 goto label07;

        r14 = new com.google.common.cache.LocalCache$WriteQueue;

        $r6 = r14;

        specialinvoke r14.<com.google.common.cache.LocalCache$WriteQueue: void <init>()>();

        goto label08;

     label07:
        $r6 = staticinvoke <com.google.common.cache.LocalCache: java.util.Queue discardingQueue()>();

     label08:
        r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue> = $r6;

        $z4 = virtualinvoke r1.<com.google.common.cache.LocalCache: boolean usesAccessQueue()>();

        if $z4 == 0 goto label09;

        r15 = new com.google.common.cache.LocalCache$AccessQueue;

        $r7 = r15;

        specialinvoke r15.<com.google.common.cache.LocalCache$AccessQueue: void <init>()>();

        goto label10;

     label09:
        $r7 = staticinvoke <com.google.common.cache.LocalCache: java.util.Queue discardingQueue()>();

     label10:
        r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue> = $r7;

        return;
    }

    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        int i0;
        java.util.concurrent.atomic.AtomicReferenceArray $r1;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        i0 := @parameter0: int;

        $r1 = new java.util.concurrent.atomic.AtomicReferenceArray;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(i0);

        return $r1;
    }

    void initTable(java.util.concurrent.atomic.AtomicReferenceArray)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.util.concurrent.atomic.AtomicReferenceArray r1;
        int $i0, $i1, $i2, $i3, $i7, $i8;
        com.google.common.cache.LocalCache $r2;
        boolean $z0;
        long $l4, $l5;
        byte $b6;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicReferenceArray;

        $i0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i1 = $i0 * 3;

        $i2 = $i1 / 4;

        r0.<com.google.common.cache.LocalCache$Segment: int threshold> = $i2;

        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean customWeigher()>();

        if $z0 != 0 goto label1;

        $i3 = r0.<com.google.common.cache.LocalCache$Segment: int threshold>;

        $l5 = (long) $i3;

        $l4 = r0.<com.google.common.cache.LocalCache$Segment: long maxSegmentWeight>;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label1;

        $i7 = r0.<com.google.common.cache.LocalCache$Segment: int threshold>;

        $i8 = $i7 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int threshold> = $i8;

     label1:
        r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table> = r1;

        return;
    }

    com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object, int, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1;
        int i0;
        com.google.common.cache.LocalCache$ReferenceEntry r2, $r5;
        com.google.common.cache.LocalCache $r3;
        com.google.common.cache.LocalCache$EntryFactory $r4;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$ReferenceEntry;

        $r3 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r4 = $r3.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$EntryFactory entryFactory>;

        $r5 = virtualinvoke $r4.<com.google.common.cache.LocalCache$EntryFactory: com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)>(r0, r1, i0, r2);

        return $r5;
    }

    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, r2, r4;
        com.google.common.cache.LocalCache$ValueReference r3, $r8;
        com.google.common.cache.LocalCache $r5;
        com.google.common.cache.LocalCache$EntryFactory $r6;
        java.lang.ref.ReferenceQueue $r7;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        r3 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r6 = $r5.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$EntryFactory entryFactory>;

        r4 = virtualinvoke $r6.<com.google.common.cache.LocalCache$EntryFactory: com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>(r0, r1, r2);

        $r7 = r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue valueReferenceQueue>;

        $r8 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ValueReference: com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.cache.LocalCache$ReferenceEntry)>($r7, r4);

        interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>($r8);

        return r4;
    }

    void setValue(com.google.common.cache.LocalCache$ReferenceEntry, java.lang.Object, java.lang.Object, long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        java.lang.Object r2, r3;
        long l0;
        com.google.common.cache.LocalCache$ValueReference r4, r5;
        int i1;
        com.google.common.cache.LocalCache $r6, $r8;
        com.google.common.cache.Weigher $r7;
        com.google.common.cache.LocalCache$Strength $r9;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        l0 := @parameter3: long;

        r4 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $r6 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r7 = $r6.<com.google.common.cache.LocalCache: com.google.common.cache.Weigher weigher>;

        i1 = interfaceinvoke $r7.<com.google.common.cache.Weigher: int weigh(java.lang.Object,java.lang.Object)>(r2, r3);

        if i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Weights must be non-negative");

        $r8 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r9 = $r8.<com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$Strength valueStrength>;

        r5 = virtualinvoke $r9.<com.google.common.cache.LocalCache$Strength: com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int)>(r0, r1, r3, i1);

        interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>(r5);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordWrite(com.google.common.cache.LocalCache$ReferenceEntry,int,long)>(r1, i1, l0);

        interfaceinvoke r4.<com.google.common.cache.LocalCache$ValueReference: void notifyNewValue(java.lang.Object)>(r3);

        return;
    }

    java.lang.Object get(java.lang.Object, int, com.google.common.cache.CacheLoader) throws java.util.concurrent.ExecutionException
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r4, r5, r6, r17;
        int i0, $i2;
        com.google.common.cache.CacheLoader r2;
        com.google.common.cache.LocalCache$ReferenceEntry r3;
        long l1;
        java.lang.Throwable r7, $r11, r19;
        com.google.common.cache.LocalCache $r8;
        com.google.common.base.Ticker $r9;
        boolean $z0, $z1, $z2;
        com.google.common.cache.AbstractCache$StatsCounter $r10;
        java.util.concurrent.ExecutionException $r12, r18;
        com.google.common.util.concurrent.ExecutionError $r13;
        com.google.common.util.concurrent.UncheckedExecutionException $r14;
        java.lang.Error $r15;
        com.google.common.cache.LocalCache$ValueReference r16;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.CacheLoader;

     label01:
        $i2 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i2 == 0 goto label05;

        r3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object,int)>(r1, i0);

        if r3 == null goto label05;

        $r8 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r9 = $r8.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r9.<com.google.common.base.Ticker: long read()>();

        r4 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r3, l1);

        if r4 == null goto label03;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordRead(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r3, l1);

        $r10 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r10.<com.google.common.cache.AbstractCache$StatsCounter: void recordHits(int)>(1);

        r5 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object scheduleRefresh(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader)>(r3, r1, i0, r4, l1, r2);

     label02:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return r5;

     label03:
        r16 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $z0 = interfaceinvoke r16.<com.google.common.cache.LocalCache$ValueReference: boolean isLoading()>();

        if $z0 == 0 goto label05;

        r6 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object waitForLoadingValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference)>(r3, r1, r16);

     label04:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return r6;

     label05:
        r17 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object lockedGetOrLoad(java.lang.Object,int,com.google.common.cache.CacheLoader)>(r1, i0, r2);

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return r17;

     label07:
        $r12 := @caughtexception;

        r18 = $r12;

        r19 = virtualinvoke r18.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z2 = r19 instanceof java.lang.Error;

        if $z2 == 0 goto label08;

        $r13 = new com.google.common.util.concurrent.ExecutionError;

        $r15 = (java.lang.Error) r19;

        specialinvoke $r13.<com.google.common.util.concurrent.ExecutionError: void <init>(java.lang.Error)>($r15);

        throw $r13;

     label08:
        $z1 = r19 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label09;

        $r14 = new com.google.common.util.concurrent.UncheckedExecutionException;

        specialinvoke $r14.<com.google.common.util.concurrent.UncheckedExecutionException: void <init>(java.lang.Throwable)>(r19);

        throw $r14;

     label09:
        throw r18;

     label10:
        $r11 := @caughtexception;

        r7 = $r11;

     label11:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        throw r7;

        catch java.util.concurrent.ExecutionException from label01 to label02 with label07;
        catch java.util.concurrent.ExecutionException from label03 to label04 with label07;
        catch java.util.concurrent.ExecutionException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label11 with label10;
    }

    java.lang.Object lockedGetOrLoad(java.lang.Object, int, com.google.common.cache.CacheLoader) throws java.util.concurrent.ExecutionException
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r6, r9, r10, r12, $r17, $r18;
        int i0, i2, i3, $i4, $i5, $i6, $i7;
        com.google.common.cache.CacheLoader r2;
        com.google.common.cache.LocalCache$ReferenceEntry r3, r8, r34;
        com.google.common.cache.LocalCache$ValueReference r4;
        com.google.common.cache.LocalCache$LoadingValueReference r5, $r21;
        boolean z0, $z1, $z2, $z3;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r7;
        java.lang.Throwable r11, r13, r14, $r31, $r32, $r33;
        com.google.common.base.Ticker $r15;
        com.google.common.cache.LocalCache $r16, $r23, $r24;
        com.google.common.cache.AbstractCache$StatsCounter $r20, $r27, $r30;
        com.google.common.base.Equivalence $r22;
        com.google.common.cache.RemovalCause $r25, $r28;
        java.util.Queue $r26, $r29;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.CacheLoader;

        r4 = null;

        r5 = null;

        z0 = 1;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r16 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r15 = $r16.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r15.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        $i4 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i2 = $i4 - 1;

        r7 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i6 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i5 = $i6 - 1;

        i3 = i0 & $i5;

        $r18 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i3);

        r8 = (com.google.common.cache.LocalCache$ReferenceEntry) $r18;

        r3 = r8;

     label02:
        if r3 == null goto label09;

        r9 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i7 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i7 != i0 goto label08;

        if r9 == null goto label08;

        $r23 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r22 = $r23.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z1 = virtualinvoke $r22.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r9);

        if $z1 == 0 goto label08;

        r4 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $z2 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ValueReference: boolean isLoading()>();

        if $z2 == 0 goto label03;

        z0 = 0;

        goto label09;

     label03:
        r10 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r10 != null goto label04;

        $r28 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r9, i0, r4, $r28);

        goto label07;

     label04:
        $r24 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z3 = virtualinvoke $r24.<com.google.common.cache.LocalCache: boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r3, l1);

        if $z3 == 0 goto label05;

        $r25 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPIRED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r9, i0, r4, $r25);

        goto label07;

     label05:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r3, l1);

        $r27 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r27.<com.google.common.cache.AbstractCache$StatsCounter: void recordHits(int)>(1);

        r12 = r10;

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r12;

     label07:
        $r26 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue>;

        interfaceinvoke $r26.<java.util.Queue: boolean remove(java.lang.Object)>(r3);

        $r29 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r29.<java.util.Queue: boolean remove(java.lang.Object)>(r3);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i2;

        goto label09;

     label08:
        r3 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label09:
        if z0 == 0 goto label11;

        $r21 = new com.google.common.cache.LocalCache$LoadingValueReference;

        specialinvoke $r21.<com.google.common.cache.LocalCache$LoadingValueReference: void <init>()>();

        r5 = $r21;

        if r3 != null goto label10;

        r3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)>(r1, i0, r8);

        interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>(r5);

        virtualinvoke r7.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i3, r3);

        goto label11;

     label10:
        interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>(r5);

     label11:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        goto label14;

     label12:
        $r33 := @caughtexception;

        r11 = $r33;

     label13:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r11;

     label14:
        if z0 == 0 goto label22;

     label15:
        r34 = r3;

        entermonitor r3;

     label16:
        r6 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object loadSync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader)>(r1, i0, r5, r2);

        exitmonitor r34;

     label17:
        $r20 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r20.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>(1);

        return r6;

     label18:
        $r32 := @caughtexception;

        r14 = $r32;

        exitmonitor r34;

     label19:
        throw r14;

     label20:
        $r31 := @caughtexception;

        r13 = $r31;

     label21:
        $r30 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r30.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>(1);

        throw r13;

     label22:
        $r17 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object waitForLoadingValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference)>(r3, r1, r4);

        return $r17;

        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label07 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label15 to label17 with label20;
        catch java.lang.Throwable from label18 to label21 with label20;
    }

    java.lang.Object waitForLoadingValue(com.google.common.cache.LocalCache$ReferenceEntry, java.lang.Object, com.google.common.cache.LocalCache$ValueReference) throws java.util.concurrent.ExecutionException
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        java.lang.Object r2, r4, r5;
        com.google.common.cache.LocalCache$ValueReference r3;
        long l0;
        java.lang.Throwable r6, $r18;
        boolean $z0, $z1, $z2;
        com.google.common.cache.LocalCache $r7;
        com.google.common.base.Ticker $r8;
        com.google.common.cache.AbstractCache$StatsCounter $r9, $r17;
        java.lang.StringBuilder $r10, $r12, $r13, $r15;
        com.google.common.cache.CacheLoader$InvalidCacheLoadException $r11;
        java.lang.String $r14;
        java.lang.AssertionError $r16;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.google.common.cache.LocalCache$ValueReference;

        $z0 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ValueReference: boolean isLoading()>();

        if $z0 != 0 goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z2, "Recursive load");

     label4:
        r4 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object waitForValue()>();

        if r4 != null goto label5;

        $r11 = new com.google.common.cache.CacheLoader$InvalidCacheLoadException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CacheLoader returned null for key ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.google.common.cache.CacheLoader$InvalidCacheLoadException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label5:
        $r7 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r8 = $r7.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l0 = virtualinvoke $r8.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordRead(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r1, l0);

        r5 = r4;

     label6:
        $r9 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r9.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>(1);

        return r5;

     label7:
        $r18 := @caughtexception;

        r6 = $r18;

     label8:
        $r17 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r17.<com.google.common.cache.AbstractCache$StatsCounter: void recordMisses(int)>(1);

        throw r6;

        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    java.lang.Object loadSync(java.lang.Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.cache.CacheLoader) throws java.util.concurrent.ExecutionException
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, $r5;
        int i0;
        com.google.common.cache.LocalCache$LoadingValueReference r2;
        com.google.common.cache.CacheLoader r3;
        com.google.common.util.concurrent.ListenableFuture r4;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$LoadingValueReference;

        r3 := @parameter3: com.google.common.cache.CacheLoader;

        r4 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.ListenableFuture loadFuture(java.lang.Object,com.google.common.cache.CacheLoader)>(r1, r3);

        $r5 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object getAndRecordStats(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture)>(r1, i0, r2, r4);

        return $r5;
    }

    com.google.common.util.concurrent.ListenableFuture loadAsync(java.lang.Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.cache.CacheLoader)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1;
        int i0;
        com.google.common.cache.LocalCache$LoadingValueReference r2;
        com.google.common.cache.CacheLoader r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        com.google.common.cache.LocalCache$Segment$1 $r5;
        com.google.common.util.concurrent.ListeningExecutorService $r6;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$LoadingValueReference;

        r3 := @parameter3: com.google.common.cache.CacheLoader;

        r4 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.ListenableFuture loadFuture(java.lang.Object,com.google.common.cache.CacheLoader)>(r1, r3);

        $r5 = new com.google.common.cache.LocalCache$Segment$1;

        specialinvoke $r5.<com.google.common.cache.LocalCache$Segment$1: void <init>(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture)>(r0, r1, i0, r2, r4);

        $r6 = <com.google.common.cache.LocalCache: com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor>;

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r5, $r6);

        return r4;
    }

    java.lang.Object getAndRecordStats(java.lang.Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.util.concurrent.ListenableFuture) throws java.util.concurrent.ExecutionException
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r4, r5;
        int i0;
        com.google.common.cache.LocalCache$LoadingValueReference r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        java.lang.Throwable r6, $r14;
        com.google.common.cache.AbstractCache$StatsCounter $r7, $r8, $r16;
        long $l1, $l2, $l3;
        com.google.common.cache.CacheLoader$InvalidCacheLoadException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        java.lang.String $r15;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$LoadingValueReference;

        r3 := @parameter3: com.google.common.util.concurrent.ListenableFuture;

        r4 = null;

     label1:
        r4 = staticinvoke <com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>(r3);

        if r4 != null goto label2;

        $r9 = new com.google.common.cache.CacheLoader$InvalidCacheLoadException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CacheLoader returned null for key ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.google.common.cache.CacheLoader$InvalidCacheLoadException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        $r7 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        $l1 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: long elapsedNanos()>();

        interfaceinvoke $r7.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadSuccess(long)>($l1);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean storeLoadedValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,java.lang.Object)>(r1, i0, r2, r4);

        r5 = r4;

     label3:
        if r4 != null goto label4;

        $r8 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        $l2 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: long elapsedNanos()>();

        interfaceinvoke $r8.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadException(long)>($l2);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference)>(r1, i0, r2);

     label4:
        return r5;

     label5:
        $r14 := @caughtexception;

        r6 = $r14;

     label6:
        if r4 != null goto label7;

        $r16 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        $l3 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: long elapsedNanos()>();

        interfaceinvoke $r16.<com.google.common.cache.AbstractCache$StatsCounter: void recordLoadException(long)>($l3);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference)>(r1, i0, r2);

     label7:
        throw r6;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    java.lang.Object scheduleRefresh(com.google.common.cache.LocalCache$ReferenceEntry, java.lang.Object, int, java.lang.Object, long, com.google.common.cache.CacheLoader)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        java.lang.Object r2, r3, r5;
        int i0;
        long l1, $l2, $l3, $l4;
        com.google.common.cache.CacheLoader r4;
        com.google.common.cache.LocalCache $r6, $r7;
        boolean $z0;
        byte $b5;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.Object;

        l1 := @parameter4: long;

        r4 := @parameter5: com.google.common.cache.CacheLoader;

        $r6 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r6.<com.google.common.cache.LocalCache: boolean refreshes()>();

        if $z0 == 0 goto label1;

        $l2 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: long getWriteTime()>();

        $l4 = l1 - $l2;

        $r7 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $l3 = $r7.<com.google.common.cache.LocalCache: long refreshNanos>;

        $b5 = $l4 cmp $l3;

        if $b5 <= 0 goto label1;

        r5 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object refresh(java.lang.Object,int,com.google.common.cache.CacheLoader)>(r2, i0, r4);

        if r5 == null goto label1;

        return r5;

     label1:
        return r3;
    }

    java.lang.Object refresh(java.lang.Object, int, com.google.common.cache.CacheLoader)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, $r6;
        int i0;
        com.google.common.cache.CacheLoader r2;
        com.google.common.cache.LocalCache$LoadingValueReference r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        boolean $z0;
        java.lang.Throwable $r7;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.CacheLoader;

        r3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$LoadingValueReference insertLoadingValueReference(java.lang.Object,int)>(r1, i0);

        if r3 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.util.concurrent.ListenableFuture loadAsync(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.cache.CacheLoader)>(r1, i0, r3, r2);

        $z0 = interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z0 == 0 goto label5;

     label2:
        $r6 = interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

     label3:
        return $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        return null;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    com.google.common.cache.LocalCache$LoadingValueReference insertLoadingValueReference(java.lang.Object, int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r4, $r10;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r2;
        com.google.common.cache.LocalCache$ReferenceEntry r3, r16, r19;
        com.google.common.cache.LocalCache$ValueReference r5;
        com.google.common.cache.LocalCache$LoadingValueReference r6, $r11, $r14, r17, r18, r20;
        java.lang.Throwable r7, $r15;
        com.google.common.cache.LocalCache $r8, $r12;
        com.google.common.base.Ticker $r9;
        boolean $z0, $z1;
        com.google.common.base.Equivalence $r13;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r8 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r9 = $r8.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r9.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i3 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i4 = $i3 - 1;

        i2 = i0 & $i4;

        $r10 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r3 = (com.google.common.cache.LocalCache$ReferenceEntry) $r10;

        r16 = r3;

     label02:
        if r16 == null goto label07;

        r4 = interfaceinvoke r16.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i7 = interfaceinvoke r16.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i7 != i0 goto label06;

        if r4 == null goto label06;

        $r12 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r13 = $r12.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r13.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r4);

        if $z0 == 0 goto label06;

        r5 = interfaceinvoke r16.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $z1 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ValueReference: boolean isLoading()>();

        if $z1 == 0 goto label04;

     label03:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label04:
        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i9 = $i8 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i9;

        $r14 = new com.google.common.cache.LocalCache$LoadingValueReference;

        specialinvoke $r14.<com.google.common.cache.LocalCache$LoadingValueReference: void <init>(com.google.common.cache.LocalCache$ValueReference)>(r5);

        r17 = $r14;

        interfaceinvoke r16.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>(r17);

        r6 = r17;

     label05:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r6;

     label06:
        r16 = interfaceinvoke r16.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label07:
        $i6 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i5 = $i6 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i5;

        $r11 = new com.google.common.cache.LocalCache$LoadingValueReference;

        specialinvoke $r11.<com.google.common.cache.LocalCache$LoadingValueReference: void <init>()>();

        r18 = $r11;

        r19 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)>(r1, i0, r3);

        interfaceinvoke r19.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>(r18);

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r19);

        r20 = r18;

     label08:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r20;

     label09:
        $r15 := @caughtexception;

        r7 = $r15;

     label10:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r7;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void tryDrainReferenceQueues()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainReferenceQueues()>();

     label2:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void drainReferenceQueues()
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $r1 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r1.<com.google.common.cache.LocalCache: boolean usesKeyReferences()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainKeyReferenceQueue()>();

     label1:
        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z1 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean usesValueReferences()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainValueReferenceQueue()>();

     label2:
        return;
    }

    void drainKeyReferenceQueue()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.ref.Reference r1, $r4;
        int i0;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        java.lang.ref.ReferenceQueue $r3;
        com.google.common.cache.LocalCache $r5;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        i0 = 0;

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue keyReferenceQueue>;

        $r4 = virtualinvoke $r3.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        r1 = $r4;

        if $r4 == null goto label3;

        r2 = (com.google.common.cache.LocalCache$ReferenceEntry) r1;

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        virtualinvoke $r5.<com.google.common.cache.LocalCache: void reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry)>(r2);

        i0 = i0 + 1;

        if i0 != 16 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        return;
    }

    void drainValueReferenceQueue()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.ref.Reference r1, $r4;
        int i0;
        com.google.common.cache.LocalCache$ValueReference r2;
        java.lang.ref.ReferenceQueue $r3;
        com.google.common.cache.LocalCache $r5;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        i0 = 0;

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue valueReferenceQueue>;

        $r4 = virtualinvoke $r3.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        r1 = $r4;

        if $r4 == null goto label3;

        r2 = (com.google.common.cache.LocalCache$ValueReference) r1;

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        virtualinvoke $r5.<com.google.common.cache.LocalCache: void reclaimValue(com.google.common.cache.LocalCache$ValueReference)>(r2);

        i0 = i0 + 1;

        if i0 != 16 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        return;
    }

    void clearReferenceQueues()
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $r1 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r1.<com.google.common.cache.LocalCache: boolean usesKeyReferences()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void clearKeyReferenceQueue()>();

     label1:
        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z1 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean usesValueReferences()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void clearValueReferenceQueue()>();

     label2:
        return;
    }

    void clearKeyReferenceQueue()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.ref.ReferenceQueue $r1;
        java.lang.ref.Reference $r2;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

     label1:
        $r1 = r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue keyReferenceQueue>;

        $r2 = virtualinvoke $r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        if $r2 == null goto label2;

        goto label1;

     label2:
        return;
    }

    void clearValueReferenceQueue()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.ref.ReferenceQueue $r1;
        java.lang.ref.Reference $r2;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

     label1:
        $r1 = r0.<com.google.common.cache.LocalCache$Segment: java.lang.ref.ReferenceQueue valueReferenceQueue>;

        $r2 = virtualinvoke $r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        if $r2 == null goto label2;

        goto label1;

     label2:
        return;
    }

    void recordRead(com.google.common.cache.LocalCache$ReferenceEntry, long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        long l0;
        com.google.common.cache.LocalCache $r2;
        boolean $z0;
        java.util.Queue $r3;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        l0 := @parameter1: long;

        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean recordsAccess()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setAccessTime(long)>(l0);

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue recencyQueue>;

        interfaceinvoke $r3.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        return;
    }

    void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry, long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        long l0;
        com.google.common.cache.LocalCache $r2;
        boolean $z0;
        java.util.Queue $r3;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        l0 := @parameter1: long;

        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean recordsAccess()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setAccessTime(long)>(l0);

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r3.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        return;
    }

    void recordWrite(com.google.common.cache.LocalCache$ReferenceEntry, int, long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        int i0, $i2, $i3;
        long l1;
        com.google.common.cache.LocalCache $r2, $r3;
        boolean $z0, $z1;
        java.util.Queue $r4, $r5;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainRecencyQueue()>();

        $i2 = r0.<com.google.common.cache.LocalCache$Segment: int totalWeight>;

        $i3 = $i2 + i0;

        r0.<com.google.common.cache.LocalCache$Segment: int totalWeight> = $i3;

        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean recordsAccess()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setAccessTime(long)>(l1);

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z1 = virtualinvoke $r3.<com.google.common.cache.LocalCache: boolean recordsWrite()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: void setWriteTime(long)>(l1);

     label2:
        $r4 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r4.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue>;

        interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        return;
    }

    void drainRecencyQueue()
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, $r4;
        java.util.Queue $r2, $r5, $r6;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

     label1:
        $r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue recencyQueue>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        $r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r3;

        r1 = $r4;

        if $r4 == null goto label2;

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        $z0 = interfaceinvoke $r5.<java.util.Queue: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r6.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        goto label1;

     label2:
        return;
    }

    void tryExpireEntries(long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        long l0;
        java.lang.Throwable r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void expireEntries(long)>(l0);

     label2:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void expireEntries(long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        long l0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, $r4, $r7, r14;
        java.util.Queue $r2, $r5;
        java.lang.Object $r3, $r6;
        com.google.common.cache.LocalCache $r8, $r11;
        boolean $z0, $z1, $z2, $z3;
        int $i1, $i2;
        com.google.common.cache.RemovalCause $r9, $r12;
        java.lang.AssertionError $r10, $r13;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainRecencyQueue()>();

     label1:
        $r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object peek()>();

        $r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r3;

        r1 = $r4;

        if $r4 == null goto label2;

        $r11 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z2 = virtualinvoke $r11.<com.google.common.cache.LocalCache: boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r1, l0);

        if $z2 == 0 goto label2;

        $i2 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r12 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPIRED>;

        $z3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry,int,com.google.common.cache.RemovalCause)>(r1, $i2, $r12);

        if $z3 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label2:
        $r5 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object peek()>();

        $r7 = (com.google.common.cache.LocalCache$ReferenceEntry) $r6;

        r14 = $r7;

        if $r7 == null goto label3;

        $r8 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r8.<com.google.common.cache.LocalCache: boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r14, l0);

        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke r14.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r9 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPIRED>;

        $z1 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry,int,com.google.common.cache.RemovalCause)>(r14, $i1, $r9);

        if $z1 != 0 goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        return;
    }

    void enqueueNotification(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.RemovalCause)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        com.google.common.cache.RemovalCause r2;
        java.lang.Object $r3;
        int $i0;
        com.google.common.cache.LocalCache$ValueReference $r4;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: com.google.common.cache.RemovalCause;

        $r3 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i0 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r4 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>($r3, $i0, $r4, r2);

        return;
    }

    void enqueueNotification(java.lang.Object, int, com.google.common.cache.LocalCache$ValueReference, com.google.common.cache.RemovalCause)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r4;
        int i0, $i1, $i2, $i3;
        com.google.common.cache.LocalCache$ValueReference r2;
        com.google.common.cache.RemovalCause r3;
        com.google.common.cache.RemovalNotification r5, $r9;
        boolean $z0;
        com.google.common.cache.LocalCache $r6, $r11;
        java.util.Queue $r7, $r8, $r10;
        com.google.common.cache.AbstractCache$StatsCounter $r12;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$ValueReference;

        r3 := @parameter3: com.google.common.cache.RemovalCause;

        $i1 = r0.<com.google.common.cache.LocalCache$Segment: int totalWeight>;

        $i2 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ValueReference: int getWeight()>();

        $i3 = $i1 - $i2;

        r0.<com.google.common.cache.LocalCache$Segment: int totalWeight> = $i3;

        $z0 = virtualinvoke r3.<com.google.common.cache.RemovalCause: boolean wasEvicted()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.AbstractCache$StatsCounter statsCounter>;

        interfaceinvoke $r12.<com.google.common.cache.AbstractCache$StatsCounter: void recordEviction()>();

     label1:
        $r6 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r8 = $r6.<com.google.common.cache.LocalCache: java.util.Queue removalNotificationQueue>;

        $r7 = <com.google.common.cache.LocalCache: java.util.Queue DISCARDING_QUEUE>;

        if $r8 == $r7 goto label2;

        r4 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        $r9 = new com.google.common.cache.RemovalNotification;

        specialinvoke $r9.<com.google.common.cache.RemovalNotification: void <init>(java.lang.Object,java.lang.Object,com.google.common.cache.RemovalCause)>(r1, r4, r3);

        r5 = $r9;

        $r11 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r10 = $r11.<com.google.common.cache.LocalCache: java.util.Queue removalNotificationQueue>;

        interfaceinvoke $r10.<java.util.Queue: boolean offer(java.lang.Object)>(r5);

     label2:
        return;
    }

    void evictEntries()
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        com.google.common.cache.LocalCache $r2;
        boolean $z0, $z1;
        int $i0, $i4;
        long $l1, $l2;
        byte $b3;
        com.google.common.cache.RemovalCause $r3;
        java.lang.AssertionError $r4;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $r2 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r2.<com.google.common.cache.LocalCache: boolean evictsBySize()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainRecencyQueue()>();

     label2:
        $i0 = r0.<com.google.common.cache.LocalCache$Segment: int totalWeight>;

        $l2 = (long) $i0;

        $l1 = r0.<com.google.common.cache.LocalCache$Segment: long maxSegmentWeight>;

        $b3 = $l2 cmp $l1;

        if $b3 <= 0 goto label4;

        r1 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getNextEvictable()>();

        $i4 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        $r3 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause SIZE>;

        $z1 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry,int,com.google.common.cache.RemovalCause)>(r1, $i4, $r3);

        if $z1 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        goto label2;

     label4:
        return;
    }

    com.google.common.cache.LocalCache$ReferenceEntry getNextEvictable()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.util.Iterator r1;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        int i0;
        java.util.Queue $r3;
        boolean $z0;
        java.lang.AssertionError $r4;
        java.lang.Object $r5;
        com.google.common.cache.LocalCache$ValueReference $r6;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        r1 = interfaceinvoke $r3.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.google.common.cache.LocalCache$ReferenceEntry) $r5;

        $r6 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        i0 = interfaceinvoke $r6.<com.google.common.cache.LocalCache$ValueReference: int getWeight()>();

        if i0 <= 0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;
    }

    com.google.common.cache.LocalCache$ReferenceEntry getFirst(int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        int i0, $i1, $i2, $i3;
        java.util.concurrent.atomic.AtomicReferenceArray r1;
        java.lang.Object $r2;
        com.google.common.cache.LocalCache$ReferenceEntry $r3;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        i0 := @parameter0: int;

        r1 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i1 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i2 = $i1 - 1;

        $i3 = i0 & $i2;

        $r2 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>($i3);

        $r3 = (com.google.common.cache.LocalCache$ReferenceEntry) $r2;

        return $r3;
    }

    com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object, int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r3;
        int i0, $i1;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        com.google.common.cache.LocalCache $r4;
        com.google.common.base.Equivalence $r5;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getFirst(int)>(i0);

     label1:
        if r2 == null goto label5;

        $i1 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i1 == i0 goto label2;

        goto label4;

     label2:
        r3 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        if r3 != null goto label3;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void tryDrainReferenceQueues()>();

        goto label4;

     label3:
        $r4 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r5 = $r4.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r5.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r3);

        if $z0 == 0 goto label4;

        return r2;

     label4:
        r2 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label1;

     label5:
        return null;
    }

    com.google.common.cache.LocalCache$ReferenceEntry getLiveEntry(java.lang.Object, int, long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1;
        int i0;
        long l1;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        com.google.common.cache.LocalCache $r3;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object,int)>(r1, i0);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r3.<com.google.common.cache.LocalCache: boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r2, l1);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void tryExpireEntries(long)>(l1);

        return null;

     label2:
        return r2;
    }

    java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry, long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        long l0;
        java.lang.Object r2, $r3;
        com.google.common.cache.LocalCache$ValueReference $r4;
        com.google.common.cache.LocalCache $r5;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        l0 := @parameter1: long;

        $r3 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        if $r3 != null goto label1;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void tryDrainReferenceQueues()>();

        return null;

     label1:
        $r4 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r2 = interfaceinvoke $r4.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r2 != null goto label2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void tryDrainReferenceQueues()>();

        return null;

     label2:
        $r5 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $z0 = virtualinvoke $r5.<com.google.common.cache.LocalCache: boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r1, l0);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void tryExpireEntries(long)>(l0);

        return null;

     label3:
        return r2;
    }

    java.lang.Object get(java.lang.Object, int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r3, $r9, r12;
        int i0, $i2;
        long l1;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        java.lang.Throwable r4, $r11;
        com.google.common.cache.LocalCache $r5, $r8;
        com.google.common.base.Ticker $r6;
        com.google.common.cache.LocalCache$ValueReference $r7;
        com.google.common.cache.CacheLoader $r10;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

     label1:
        $i2 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i2 == 0 goto label6;

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r6 = $r5.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r6.<com.google.common.base.Ticker: long read()>();

        r2 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getLiveEntry(java.lang.Object,int,long)>(r1, i0, l1);

        if r2 != null goto label3;

     label2:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return null;

     label3:
        $r7 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r12 = interfaceinvoke $r7.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r12 == null goto label5;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordRead(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r2, l1);

        $r9 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $r8 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r10 = $r8.<com.google.common.cache.LocalCache: com.google.common.cache.CacheLoader defaultLoader>;

        r3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object scheduleRefresh(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader)>(r2, $r9, i0, r12, l1, $r10);

     label4:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return r3;

     label5:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void tryDrainReferenceQueues()>();

     label6:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return null;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

     label8:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    boolean containsKey(java.lang.Object, int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, $r7;
        int i0, $i2;
        long l1;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        boolean z0, $z1, z2, z3;
        java.lang.Throwable r3, $r8;
        com.google.common.cache.LocalCache $r4;
        com.google.common.base.Ticker $r5;
        com.google.common.cache.LocalCache$ValueReference $r6;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

     label01:
        $i2 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i2 == 0 goto label07;

        $r4 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r5 = $r4.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r5.<com.google.common.base.Ticker: long read()>();

        r2 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry getLiveEntry(java.lang.Object,int,long)>(r1, i0, l1);

        if r2 != null goto label03;

        z0 = 0;

     label02:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return z0;

     label03:
        $r6 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $r7 = interfaceinvoke $r6.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if $r7 == null goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        z2 = $z1;

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return z2;

     label07:
        z3 = 0;

     label08:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return z3;

     label09:
        $r8 := @caughtexception;

        r3 = $r8;

     label10:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    boolean containsValue(java.lang.Object)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r4, $r8;
        long l0;
        java.util.concurrent.atomic.AtomicReferenceArray r2;
        int i1, i2, $i3;
        com.google.common.cache.LocalCache$ReferenceEntry r3;
        boolean z0, $z1, z2;
        java.lang.Throwable r5, $r11;
        com.google.common.cache.LocalCache $r6, $r10;
        com.google.common.base.Ticker $r7;
        com.google.common.base.Equivalence $r9;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

     label01:
        $i3 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i3 == 0 goto label08;

        $r6 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r7 = $r6.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l0 = virtualinvoke $r7.<com.google.common.base.Ticker: long read()>();

        r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        i1 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        i2 = 0;

     label02:
        if i2 >= i1 goto label08;

        $r8 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r3 = (com.google.common.cache.LocalCache$ReferenceEntry) $r8;

     label03:
        if r3 == null goto label07;

        r4 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r3, l0);

        if r4 != null goto label04;

        goto label06;

     label04:
        $r10 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r9 = $r10.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence valueEquivalence>;

        $z1 = virtualinvoke $r9.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r4);

        if $z1 == 0 goto label06;

        z0 = 1;

     label05:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return z0;

     label06:
        r3 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label03;

     label07:
        i2 = i2 + 1;

        goto label02;

     label08:
        z2 = 0;

     label09:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        return z2;

     label10:
        $r11 := @caughtexception;

        r5 = $r11;

     label11:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postReadCleanup()>();

        throw r5;

        catch java.lang.Throwable from label01 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    java.lang.Object put(java.lang.Object, int, java.lang.Object, boolean)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r2, r6, r8, $r12, r18, r19;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        boolean z0, $z1, $z2;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        com.google.common.cache.LocalCache$ReferenceEntry r4, r5, r20;
        com.google.common.cache.LocalCache$ValueReference r7;
        com.google.common.cache.LocalCache $r9, $r13;
        java.lang.Throwable r10, $r16;
        com.google.common.base.Ticker $r11;
        com.google.common.base.Equivalence $r14;
        com.google.common.cache.RemovalCause $r15, $r17;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r9 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r11 = $r9.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r11.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        $i5 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i2 = $i5 + 1;

        $i4 = r0.<com.google.common.cache.LocalCache$Segment: int threshold>;

        if i2 <= $i4 goto label02;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void expand()>();

     label02:
        r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i7 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i6 = $i7 - 1;

        i3 = i0 & $i6;

        $r12 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i3);

        r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r12;

        r5 = r4;

     label03:
        if r5 == null goto label12;

        r6 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i11 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i11 != i0 goto label11;

        if r6 == null goto label11;

        $r13 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r14 = $r13.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z1 = virtualinvoke $r14.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r6);

        if $z1 == 0 goto label11;

        r7 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r8 = interfaceinvoke r7.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r8 != null goto label07;

        $i15 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i16 = $i15 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i16;

        $z2 = interfaceinvoke r7.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z2 == 0 goto label04;

        $r17 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r1, i0, r7, $r17);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r5, r1, r2, l1);

        i17 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        goto label05;

     label04:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r5, r1, r2, l1);

        $i14 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i17 = $i14 + 1;

     label05:
        r0.<com.google.common.cache.LocalCache$Segment: int count> = i17;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label07:
        if z0 == 0 goto label09;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r5, l1);

        r18 = r8;

     label08:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r18;

     label09:
        $i13 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i12 = $i13 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i12;

        $r15 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause REPLACED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r1, i0, r7, $r15);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r5, r1, r2, l1);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

        r19 = r8;

     label10:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r19;

     label11:
        r5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label03;

     label12:
        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i9 = $i8 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i9;

        r20 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)>(r1, i0, r4);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r20, r1, r2, l1);

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i3, r20);

        $i10 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i18 = $i10 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i18;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

     label13:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label14:
        $r16 := @caughtexception;

        r10 = $r16;

     label15:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r10;

        catch java.lang.Throwable from label01 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    void expand()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.util.concurrent.atomic.AtomicReferenceArray r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        com.google.common.cache.LocalCache$ReferenceEntry r3, r4, r5, r6, r7, r8, r11;
        java.lang.Object $r9, $r10;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        i0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        if i0 < 1073741824 goto label01;

        return;

     label01:
        i1 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        $i7 = i0 << 1;

        r2 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>($i7);

        $i8 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i10 = $i8 * 3;

        $i9 = $i10 / 4;

        r0.<com.google.common.cache.LocalCache$Segment: int threshold> = $i9;

        $i11 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        i2 = $i11 - 1;

        i3 = 0;

     label02:
        if i3 >= i0 goto label11;

        $r9 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i3);

        r3 = (com.google.common.cache.LocalCache$ReferenceEntry) $r9;

        if r3 == null goto label10;

        r4 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        $i12 = interfaceinvoke r3.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        i4 = $i12 & i2;

        if r4 != null goto label03;

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i4, r3);

        goto label10;

     label03:
        r5 = r3;

        i5 = i4;

        r6 = r4;

     label04:
        if r6 == null goto label06;

        $i14 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        i6 = $i14 & i2;

        if i6 == i5 goto label05;

        i5 = i6;

        r5 = r6;

     label05:
        r6 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label04;

     label06:
        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i5, r5);

        r11 = r3;

     label07:
        if r11 == r5 goto label10;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isCollected(com.google.common.cache.LocalCache$ReferenceEntry)>(r11);

        if $z0 == 0 goto label08;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry)>(r11);

        i1 = i1 + -1;

        goto label09;

     label08:
        $i13 = interfaceinvoke r11.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        i15 = $i13 & i2;

        $r10 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i15);

        r7 = (com.google.common.cache.LocalCache$ReferenceEntry) $r10;

        r8 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>(r11, r7);

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i15, r8);

     label09:
        r11 = interfaceinvoke r11.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label07;

     label10:
        i3 = i3 + 1;

        goto label02;

     label11:
        r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table> = r2;

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i1;

        return;
    }

    boolean replace(java.lang.Object, int, java.lang.Object, java.lang.Object)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r2, r3, r7, r9, $r14;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, i13;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r4;
        com.google.common.cache.LocalCache$ReferenceEntry r5, r6, r10;
        com.google.common.cache.LocalCache$ValueReference r8;
        com.google.common.cache.LocalCache $r11, $r16, $r17;
        java.lang.Throwable r12, $r21;
        com.google.common.base.Ticker $r13;
        com.google.common.base.Equivalence $r15, $r18;
        boolean $z0, $z1, $z2, z3, z4, z5, z6;
        com.google.common.cache.RemovalCause $r19, $r20;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r11 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r13 = $r11.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r13.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        r4 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i5 = virtualinvoke r4.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i4 = $i5 - 1;

        i2 = i0 & $i4;

        $r14 = virtualinvoke r4.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r5 = (com.google.common.cache.LocalCache$ReferenceEntry) $r14;

        r6 = r5;

     label02:
        if r6 == null goto label10;

        r7 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i6 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i6 != i0 goto label09;

        if r7 == null goto label09;

        $r16 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r15 = $r16.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r15.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r7);

        if $z0 == 0 goto label09;

        r8 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r9 = interfaceinvoke r8.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r9 != null goto label05;

        $z2 = interfaceinvoke r8.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z2 == 0 goto label03;

        $i10 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i12 = $i10 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i12;

        $r20 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        r10 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r5, r6, r7, i0, r8, $r20);

        $i11 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i13 = $i11 - 1;

        virtualinvoke r4.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r10);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i13;

     label03:
        z3 = 0;

     label04:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z3;

     label05:
        $r17 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r18 = $r17.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence valueEquivalence>;

        $z1 = virtualinvoke $r18.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r2, r9);

        if $z1 == 0 goto label07;

        $i7 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i8 = $i7 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i8;

        $r19 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause REPLACED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r1, i0, r8, $r19);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r6, r1, r3, l1);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

        z4 = 1;

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z4;

     label07:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry,long)>(r6, l1);

        z5 = 0;

     label08:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z5;

     label09:
        r6 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label10:
        z6 = 0;

     label11:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z6;

     label12:
        $r21 := @caughtexception;

        r12 = $r21;

     label13:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r12;

        catch java.lang.Throwable from label01 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    java.lang.Object replace(java.lang.Object, int, java.lang.Object)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r2, r6, r8, $r13, r19;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        com.google.common.cache.LocalCache$ReferenceEntry r4, r5, r9;
        com.google.common.cache.LocalCache$ValueReference r7;
        java.lang.Throwable r10, $r18;
        com.google.common.base.Ticker $r11;
        com.google.common.cache.LocalCache $r12, $r14;
        boolean $z0, $z1;
        com.google.common.base.Equivalence $r15;
        com.google.common.cache.RemovalCause $r16, $r17;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label1:
        $r12 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r11 = $r12.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r11.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i3 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i4 = $i3 - 1;

        i2 = i0 & $i4;

        $r13 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r13;

        r5 = r4;

     label2:
        if r5 == null goto label7;

        r6 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i5 != i0 goto label6;

        if r6 == null goto label6;

        $r14 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r15 = $r14.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r15.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r6);

        if $z0 == 0 goto label6;

        r7 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r8 = interfaceinvoke r7.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r8 != null goto label4;

        $z1 = interfaceinvoke r7.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z1 == 0 goto label3;

        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i10 = $i8 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i10;

        $r17 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        r9 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r4, r5, r6, i0, r7, $r17);

        $i9 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i11 = $i9 - 1;

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r9);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i11;

     label3:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label4:
        $i7 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i6 = $i7 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i6;

        $r16 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause REPLACED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r1, i0, r7, $r16);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r5, r1, r2, l1);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

        r19 = r8;

     label5:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r19;

     label6:
        r5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label2;

     label7:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label8:
        $r18 := @caughtexception;

        r10 = $r18;

     label9:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r10;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    java.lang.Object remove(java.lang.Object, int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r5, r7, r9, $r13;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r2;
        com.google.common.cache.LocalCache$ReferenceEntry r3, r4, r17;
        com.google.common.cache.LocalCache$ValueReference r6;
        com.google.common.cache.RemovalCause r8;
        com.google.common.cache.LocalCache $r10, $r14;
        java.lang.Throwable r11, $r16;
        com.google.common.base.Ticker $r12;
        boolean $z0, $z1;
        com.google.common.base.Equivalence $r15;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r10 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r12 = $r10.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r12.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i3 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i4 = $i3 - 1;

        i2 = i0 & $i4;

        $r13 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r3 = (com.google.common.cache.LocalCache$ReferenceEntry) $r13;

        r4 = r3;

     label02:
        if r4 == null goto label08;

        r5 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i5 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i5 != i0 goto label07;

        if r5 == null goto label07;

        $r14 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r15 = $r14.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r15.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r5);

        if $z0 == 0 goto label07;

        r6 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r7 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r7 == null goto label03;

        r8 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPLICIT>;

        goto label05;

     label03:
        $z1 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z1 == 0 goto label04;

        r8 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        goto label05;

     label04:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label05:
        $i7 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i6 = $i7 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i6;

        r17 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r3, r4, r5, i0, r6, r8);

        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i9 = $i8 - 1;

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r17);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i9;

        r9 = r7;

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return r9;

     label07:
        r4 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label08:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return null;

     label09:
        $r16 := @caughtexception;

        r11 = $r16;

     label10:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r11;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    boolean storeLoadedValue(java.lang.Object, int, com.google.common.cache.LocalCache$LoadingValueReference, java.lang.Object)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r3, r7, r9, $r14;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.google.common.cache.LocalCache$LoadingValueReference r2;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r4;
        com.google.common.cache.LocalCache$ReferenceEntry r5, r6, r22;
        com.google.common.cache.LocalCache$ValueReference r8;
        com.google.common.cache.RemovalCause r10, $r17, $r19;
        com.google.common.cache.LocalCache $r11, $r16;
        java.lang.Throwable r12, $r20;
        com.google.common.base.Ticker $r13;
        com.google.common.base.Equivalence $r15;
        boolean $z0, $z1, z2, z3, z4;
        com.google.common.cache.LocalCache$WeightedStrongValueReference $r18, r21;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$LoadingValueReference;

        r3 := @parameter3: java.lang.Object;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r11 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r13 = $r11.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r13.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        $i5 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i2 = $i5 + 1;

        r4 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i4 = virtualinvoke r4.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i6 = $i4 - 1;

        i3 = i0 & $i6;

        $r14 = virtualinvoke r4.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i3);

        r5 = (com.google.common.cache.LocalCache$ReferenceEntry) $r14;

        r6 = r5;

     label02:
        if r6 == null goto label11;

        r7 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i9 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i9 != i0 goto label10;

        if r7 == null goto label10;

        $r16 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r15 = $r16.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r15.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r7);

        if $z0 == 0 goto label10;

        r8 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r9 = interfaceinvoke r8.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if r9 == null goto label03;

        if r2 != r8 goto label08;

     label03:
        $i10 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i11 = $i10 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i11;

        $z1 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: boolean isActive()>();

        if $z1 == 0 goto label06;

        if r9 != null goto label04;

        $r17 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        goto label05;

     label04:
        $r17 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause REPLACED>;

     label05:
        r10 = $r17;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r1, i0, r2, r10);

        i2 = i2 + -1;

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r6, r1, r3, l1);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

        z2 = 1;

     label07:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z2;

     label08:
        $r18 = new com.google.common.cache.LocalCache$WeightedStrongValueReference;

        specialinvoke $r18.<com.google.common.cache.LocalCache$WeightedStrongValueReference: void <init>(java.lang.Object,int)>(r3, 0);

        r21 = $r18;

        $r19 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause REPLACED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r1, i0, r21, $r19);

        z3 = 0;

     label09:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z3;

     label10:
        r6 = interfaceinvoke r6.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label11:
        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i7 = $i8 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i7;

        r22 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)>(r1, i0, r5);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>(r22, r1, r3, l1);

        virtualinvoke r4.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i3, r22);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void evictEntries()>();

        z4 = 1;

     label12:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z4;

     label13:
        $r20 := @caughtexception;

        r12 = $r20;

     label14:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r12;

        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    boolean remove(java.lang.Object, int, java.lang.Object)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r2, r6, r8, $r13;
        int i0, i3, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        long l1;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        com.google.common.cache.LocalCache$ReferenceEntry r4, r5, r20;
        com.google.common.cache.LocalCache$ValueReference r7;
        com.google.common.cache.RemovalCause r9, $r19;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6;
        java.lang.Throwable r10, $r18;
        com.google.common.base.Ticker $r11;
        com.google.common.cache.LocalCache $r12, $r15, $r17;
        com.google.common.base.Equivalence $r14, $r16;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        $r12 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r11 = $r12.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l1 = virtualinvoke $r11.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void preWriteCleanup(long)>(l1);

        r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i6 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i5 = $i6 - 1;

        i3 = i0 & $i5;

        $r13 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i3);

        r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r13;

        r5 = r4;

     label02:
        if r5 == null goto label11;

        r6 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i7 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i7 != i0 goto label10;

        if r6 == null goto label10;

        $r15 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r14 = $r15.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z2 = virtualinvoke $r14.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r6);

        if $z2 == 0 goto label10;

        r7 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r8 = interfaceinvoke r7.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        $r17 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r16 = $r17.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence valueEquivalence>;

        $z3 = virtualinvoke $r16.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r2, r8);

        if $z3 == 0 goto label03;

        r9 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPLICIT>;

        goto label06;

     label03:
        if r8 != null goto label04;

        $z4 = interfaceinvoke r7.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z4 == 0 goto label04;

        r9 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        goto label06;

     label04:
        z0 = 0;

     label05:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z0;

     label06:
        $i9 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i8 = $i9 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i8;

        r20 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r4, r5, r6, i0, r7, r9);

        $i10 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i11 = $i10 - 1;

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i3, r20);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i11;

        $r19 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPLICIT>;

        if r9 != $r19 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z1 = $z5;

     label09:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z1;

     label10:
        r5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label11:
        z6 = 0;

     label12:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z6;

     label13:
        $r18 := @caughtexception;

        r10 = $r18;

     label14:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r10;

        catch java.lang.Throwable from label01 to label05 with label13;
        catch java.lang.Throwable from label06 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    void clear()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.util.concurrent.atomic.AtomicReferenceArray r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        com.google.common.cache.LocalCache$ReferenceEntry r2;
        java.lang.Throwable r3, $r10;
        java.util.Queue $r4, $r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.lang.Object $r7;
        com.google.common.cache.LocalCache$ValueReference $r8;
        boolean $z0;
        com.google.common.cache.RemovalCause $r9;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $i1 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        if $i1 == 0 goto label12;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        r1 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        i0 = 0;

     label02:
        $i2 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        if i0 >= $i2 goto label06;

        $r7 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i0);

        r2 = (com.google.common.cache.LocalCache$ReferenceEntry) $r7;

     label03:
        if r2 == null goto label05;

        $r8 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $z0 = interfaceinvoke $r8.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z0 == 0 goto label04;

        $r9 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause EXPLICIT>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.RemovalCause)>(r2, $r9);

     label04:
        r2 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label03;

     label05:
        i0 = i0 + 1;

        goto label02;

     label06:
        i6 = 0;

     label07:
        $i3 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        if i6 >= $i3 goto label08;

        virtualinvoke r1.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i6, null);

        i6 = i6 + 1;

        goto label07;

     label08:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void clearReferenceQueues()>();

        $r4 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue>;

        interfaceinvoke $r4.<java.util.Queue: void clear()>();

        $r5 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r5.<java.util.Queue: void clear()>();

        $r6 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicInteger readCount>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $i4 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i5 = $i4 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i5;

        r0.<com.google.common.cache.LocalCache$Segment: int count> = 0;

     label09:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        goto label12;

     label10:
        $r10 := @caughtexception;

        r3 = $r10;

     label11:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r3;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry, java.lang.Object, int, com.google.common.cache.LocalCache$ValueReference, com.google.common.cache.RemovalCause)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, r2, $r8;
        java.lang.Object r3;
        int i0;
        com.google.common.cache.LocalCache$ValueReference r4;
        com.google.common.cache.RemovalCause r5;
        java.util.Queue $r6, $r7;
        boolean $z2;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        r3 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        r4 := @parameter4: com.google.common.cache.LocalCache$ValueReference;

        r5 := @parameter5: com.google.common.cache.RemovalCause;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r3, i0, r4, r5);

        $r6 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue>;

        interfaceinvoke $r6.<java.util.Queue: boolean remove(java.lang.Object)>(r2);

        $r7 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r7.<java.util.Queue: boolean remove(java.lang.Object)>(r2);

        $z2 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ValueReference: boolean isLoading()>();

        if $z2 == 0 goto label1;

        interfaceinvoke r4.<com.google.common.cache.LocalCache$ValueReference: void notifyNewValue(java.lang.Object)>(null);

        return r1;

     label1:
        $r8 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>(r1, r2);

        return $r8;
    }

    com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, r2, r3, r4;
        int i0;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        r2 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        i0 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        r3 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        r4 = r1;

     label1:
        if r4 == r2 goto label4;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isCollected(com.google.common.cache.LocalCache$ReferenceEntry)>(r4);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry)>(r4);

        i0 = i0 + -1;

        goto label3;

     label2:
        r3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>(r4, r3);

     label3:
        r4 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label1;

     label4:
        r0.<com.google.common.cache.LocalCache$Segment: int count> = i0;

        return r3;
    }

    void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        com.google.common.cache.RemovalCause $r2;
        java.util.Queue $r3, $r4;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r2 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void enqueueNotification(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.RemovalCause)>(r1, $r2);

        $r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue writeQueue>;

        interfaceinvoke $r3.<java.util.Queue: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.google.common.cache.LocalCache$Segment: java.util.Queue accessQueue>;

        interfaceinvoke $r4.<java.util.Queue: boolean remove(java.lang.Object)>(r1);

        return;
    }

    boolean reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry, int)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, r3, r4, r5;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, i9;
        java.util.concurrent.atomic.AtomicReferenceArray r2;
        boolean z0, z1;
        java.lang.Throwable r6, $r11;
        java.lang.Object $r7, $r9;
        com.google.common.cache.LocalCache$ValueReference $r8;
        com.google.common.cache.RemovalCause $r10;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label1:
        r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i4 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i5 = $i4 - 1;

        i2 = i0 & $i5;

        $r7 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r3 = (com.google.common.cache.LocalCache$ReferenceEntry) $r7;

        r4 = r3;

     label2:
        if r4 == null goto label5;

        if r4 != r1 goto label4;

        $i7 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i6 = $i7 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i6;

        $r9 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $r10 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        r5 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r3, r4, $r9, i0, $r8, $r10);

        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i9 = $i8 - 1;

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r5);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i9;

        z0 = 1;

     label3:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z0;

     label4:
        r4 = interfaceinvoke r4.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label2;

     label5:
        z1 = 0;

     label6:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z1;

     label7:
        $r11 := @caughtexception;

        r6 = $r11;

     label8:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r6;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    boolean reclaimValue(java.lang.Object, int, com.google.common.cache.LocalCache$ValueReference)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r6, $r10;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        com.google.common.cache.LocalCache$ValueReference r2, r7;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        com.google.common.cache.LocalCache$ReferenceEntry r4, r5, r8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        java.lang.Throwable r9, $r14;
        com.google.common.base.Equivalence $r11;
        com.google.common.cache.LocalCache $r12;
        com.google.common.cache.RemovalCause $r13;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$ValueReference;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i4 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i5 = $i4 - 1;

        i2 = i0 & $i5;

        $r10 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r10;

        r5 = r4;

     label02:
        if r5 == null goto label09;

        r6 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i6 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i6 != i0 goto label08;

        if r6 == null goto label08;

        $r12 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r11 = $r12.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z2 = virtualinvoke $r11.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r6);

        if $z2 == 0 goto label08;

        r7 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        if r7 != r2 goto label05;

        $i7 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i8 = $i7 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i8;

        $r13 = <com.google.common.cache.RemovalCause: com.google.common.cache.RemovalCause COLLECTED>;

        r8 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r4, r5, r6, i0, r2, $r13);

        $i9 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i10 = $i9 - 1;

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r8);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i10;

        z0 = 1;

     label03:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        $z5 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isHeldByCurrentThread()>();

        if $z5 != 0 goto label04;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

     label04:
        return z0;

     label05:
        z6 = 0;

     label06:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        $z3 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isHeldByCurrentThread()>();

        if $z3 != 0 goto label07;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

     label07:
        return z6;

     label08:
        r5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label09:
        z7 = 0;

     label10:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        $z1 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isHeldByCurrentThread()>();

        if $z1 != 0 goto label11;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

     label11:
        return z7;

     label12:
        $r14 := @caughtexception;

        r9 = $r14;

     label13:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        $z4 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isHeldByCurrentThread()>();

        if $z4 != 0 goto label14;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

     label14:
        throw r9;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    boolean removeLoadingValue(java.lang.Object, int, com.google.common.cache.LocalCache$LoadingValueReference)
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.lang.Object r1, r6, $r10;
        int i0, i1, $i2, $i3, $i4;
        com.google.common.cache.LocalCache$LoadingValueReference r2;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        com.google.common.cache.LocalCache$ReferenceEntry r4, r5, r8;
        com.google.common.cache.LocalCache$ValueReference r7, $r14;
        java.lang.Throwable r9, $r13;
        com.google.common.base.Equivalence $r11;
        com.google.common.cache.LocalCache $r12;
        boolean $z0, $z1, z2, z3, z4;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.LocalCache$LoadingValueReference;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void lock()>();

     label01:
        r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i2 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i3 = $i2 - 1;

        i1 = i0 & $i3;

        $r10 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i1);

        r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r10;

        r5 = r4;

     label02:
        if r5 == null goto label09;

        r6 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $i4 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: int getHash()>();

        if $i4 != i0 goto label08;

        if r6 == null goto label08;

        $r12 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r11 = $r12.<com.google.common.cache.LocalCache: com.google.common.base.Equivalence keyEquivalence>;

        $z0 = virtualinvoke $r11.<com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r6);

        if $z0 == 0 goto label08;

        r7 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        if r7 != r2 goto label06;

        $z1 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: boolean isActive()>();

        if $z1 == 0 goto label03;

        $r14 = virtualinvoke r2.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference getOldValue()>();

        interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: void setValueReference(com.google.common.cache.LocalCache$ValueReference)>($r14);

        goto label04;

     label03:
        r8 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>(r4, r5);

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i1, r8);

     label04:
        z2 = 1;

     label05:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z2;

     label06:
        z3 = 0;

     label07:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z3;

     label08:
        r5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label02;

     label09:
        z4 = 0;

     label10:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        return z4;

     label11:
        $r13 := @caughtexception;

        r9 = $r13;

     label12:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void postWriteCleanup()>();

        throw r9;

        catch java.lang.Throwable from label01 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry, int, com.google.common.cache.RemovalCause)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1, r4, r5, r6;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, i9;
        com.google.common.cache.RemovalCause r2;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        java.lang.Object $r7, $r8;
        com.google.common.cache.LocalCache$ValueReference $r9;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.common.cache.RemovalCause;

        r3 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i4 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i5 = $i4 - 1;

        i2 = i0 & $i5;

        $r7 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i2);

        r4 = (com.google.common.cache.LocalCache$ReferenceEntry) $r7;

        r5 = r4;

     label1:
        if r5 == null goto label3;

        if r5 != r1 goto label2;

        $i6 = r0.<com.google.common.cache.LocalCache$Segment: int modCount>;

        $i7 = $i6 + 1;

        r0.<com.google.common.cache.LocalCache$Segment: int modCount> = $i7;

        $r8 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        r6 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>(r4, r5, $r8, i0, $r9, r2);

        $i8 = r0.<com.google.common.cache.LocalCache$Segment: int count>;

        i9 = $i8 - 1;

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i2, r6);

        r0.<com.google.common.cache.LocalCache$Segment: int count> = i9;

        return 1;

     label2:
        r5 = interfaceinvoke r5.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ReferenceEntry getNext()>();

        goto label1;

     label3:
        return 0;
    }

    boolean isCollected(com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$Segment r0;
        com.google.common.cache.LocalCache$ReferenceEntry r1;
        com.google.common.cache.LocalCache$ValueReference r2;
        java.lang.Object $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        r1 := @parameter0: com.google.common.cache.LocalCache$ReferenceEntry;

        $r3 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: java.lang.Object getKey()>();

        if $r3 != null goto label1;

        return 1;

     label1:
        r2 = interfaceinvoke r1.<com.google.common.cache.LocalCache$ReferenceEntry: com.google.common.cache.LocalCache$ValueReference getValueReference()>();

        $r4 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        if $r4 != null goto label2;

        $z0 = interfaceinvoke r2.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    void postReadCleanup()
    {
        com.google.common.cache.LocalCache$Segment r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $r1 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicInteger readCount>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $i1 = $i0 & 63;

        if $i1 != 0 goto label1;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void cleanUp()>();

     label1:
        return;
    }

    void preWriteCleanup(long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        long l0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void runLockedCleanup(long)>(l0);

        return;
    }

    void postWriteCleanup()
    {
        com.google.common.cache.LocalCache$Segment r0;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void runUnlockedCleanup()>();

        return;
    }

    void cleanUp()
    {
        com.google.common.cache.LocalCache$Segment r0;
        long l0;
        com.google.common.cache.LocalCache $r1;
        com.google.common.base.Ticker $r2;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $r1 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        $r2 = $r1.<com.google.common.cache.LocalCache: com.google.common.base.Ticker ticker>;

        l0 = virtualinvoke $r2.<com.google.common.base.Ticker: long read()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void runLockedCleanup(long)>(l0);

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void runUnlockedCleanup()>();

        return;
    }

    void runLockedCleanup(long)
    {
        com.google.common.cache.LocalCache$Segment r0;
        long l0;
        java.lang.Throwable r1, $r3;
        boolean $z0;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void drainReferenceQueues()>();

        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void expireEntries(long)>(l0);

        $r2 = r0.<com.google.common.cache.LocalCache$Segment: java.util.concurrent.atomic.AtomicInteger readCount>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

     label2:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: void unlock()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void runUnlockedCleanup()
    {
        com.google.common.cache.LocalCache$Segment r0;
        boolean $z0;
        com.google.common.cache.LocalCache $r1;

        r0 := @this: com.google.common.cache.LocalCache$Segment;

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$Segment: boolean isHeldByCurrentThread()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache map>;

        virtualinvoke $r1.<com.google.common.cache.LocalCache: void processPendingNotifications()>();

     label1:
        return;
    }
}
