public class org.javia.arity.Util extends java.lang.Object
{
    public static final int LEN_UNLIMITED;
    public static final int FLOAT_PRECISION;

    public void <init>()
    {
        org.javia.arity.Util r0;

        r0 := @this: org.javia.arity.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double shortApprox(double, double)
    {
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9;
        int $i0;
        byte $b1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d5 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $i0 = staticinvoke <org.javia.arity.MoreMath: int intLog10(double)>($d5);

        d3 = staticinvoke <org.javia.arity.MoreMath: double intExp10(int)>($i0);

        $d6 = d2 / d3;

        $d7 = $d6 + 0.5;

        $d8 = staticinvoke <java.lang.Math: double floor(double)>($d7);

        d4 = $d8 * d3;

        $b1 = d0 cmpg 0.0;

        if $b1 >= 0 goto label1;

        $d9 = neg d4;

        goto label2;

     label1:
        $d9 = d4;

     label2:
        return $d9;
    }

    static java.lang.String sizeTruncate(java.lang.String, int)
    {
        java.lang.String r0, r1, r2, $r5, $r6, $r9, $r12, $r16, $r17, $r18;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i12, $i13, $i14, $i15, $i18, $i19, i20;
        byte b8, $b16;
        java.lang.StringBuilder $r3, $r4, $r7, $r8, $r10, $r11, $r13, $r14, $r15;
        char $c11, $c17;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 100 goto label01;

        return r0;

     label01:
        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(69);

        if i1 == -1 goto label02;

        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);

        goto label03;

     label02:
        $r18 = "";

     label03:
        r1 = $r18;

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i9 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = $i9 - i2;

        i4 = i0 - i2;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4);

        if i5 < 1 goto label04;

        if i5 >= 2 goto label05;

        $i19 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i19 <= 0 goto label05;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c17 != 45 goto label05;

     label04:
        return r0;

     label05:
        i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if i6 != -1 goto label06;

        i6 = i3;

     label06:
        if i6 <= i5 goto label11;

        if i1 == -1 goto label07;

        $i15 = i1 + 1;

        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i15);

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        goto label08;

     label07:
        $i18 = 0;

     label08:
        i7 = $i18;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c11 != 45 goto label09;

        $b16 = 1;

        goto label10;

     label09:
        $b16 = 0;

     label10:
        b8 = $b16;

        $i10 = i6 - b8;

        $i12 = $i10 - 1;

        i20 = i7 + $i12;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i13 = b8 + 1;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i13);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i14 = b8 + 1;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i14, i3);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(69);

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <org.javia.arity.Util: java.lang.String sizeTruncate(java.lang.String,int)>(r2, i0);

        return $r17;

     label11:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String doubleToString(double, int)
    {
        double d0, d1;
        int i0, i1, i2, i3, i4, i5, i6, $i10, $i15, $i17, $i19, $i20, i21, i22, i23, i24, i25, i26, i27;
        java.lang.String r0, $r2, $r5, $r15;
        java.lang.StringBuffer r1, $r3, $r6;
        byte $b7;
        char $c8, $c9, $c11, $c12, $c13, $c14, $c16, $c18;
        float $f0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        if i0 != -1 goto label01;

        $f0 = (float) d1;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        goto label02;

     label01:
        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d1);

     label02:
        r0 = $r2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        r1 = $r3;

        if i0 <= 0 goto label03;

        if i0 <= 13 goto label04;

     label03:
        $i20 = 17;

        goto label05;

     label04:
        $i20 = 16 - i0;

     label05:
        i1 = $i20;

        i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(69);

        if i2 == -1 goto label06;

        $i17 = i2 + 1;

        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i17);

        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        goto label07;

     label06:
        $i19 = 0;

     label07:
        i3 = $i19;

        if i2 == -1 goto label08;

        virtualinvoke r1.<java.lang.StringBuffer: void setLength(int)>(i2);

     label08:
        i4 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i5 = 0;

     label09:
        if i5 >= i4 goto label10;

        $c18 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i5);

        if $c18 == 46 goto label10;

        i5 = i5 + 1;

        goto label09;

     label10:
        i21 = i3 + i5;

        if i5 >= i4 goto label11;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i5);

        i4 = i4 + -1;

     label11:
        i6 = 0;

     label12:
        if i6 >= i4 goto label13;

        $c14 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i6);

        if $c14 != 48 goto label13;

        i1 = i1 + 1;

        i6 = i6 + 1;

        goto label12;

     label13:
        if i1 >= i4 goto label18;

        $c12 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i1);

        if $c12 < 53 goto label17;

        i22 = i1 - 1;

     label14:
        if i22 < 0 goto label15;

        $c13 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i22);

        if $c13 != 57 goto label15;

        virtualinvoke r1.<java.lang.StringBuffer: void setCharAt(int,char)>(i22, 48);

        i22 = i22 + -1;

        goto label14;

     label15:
        if i22 < 0 goto label16;

        $c11 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i22);

        $i15 = $c11 + 1;

        $c16 = (char) $i15;

        virtualinvoke r1.<java.lang.StringBuffer: void setCharAt(int,char)>(i22, $c16);

        goto label17;

     label16:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 49);

        i1 = i1 + 1;

        i21 = i21 + 1;

     label17:
        virtualinvoke r1.<java.lang.StringBuffer: void setLength(int)>(i1);

     label18:
        if i21 < -5 goto label19;

        if i21 <= 10 goto label20;

     label19:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(1, 46);

        i23 = i21 + -1;

        goto label27;

     label20:
        i24 = i4;

     label21:
        if i24 >= i21 goto label22;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        i24 = i24 + 1;

        goto label21;

     label22:
        i25 = i21;

     label23:
        if i25 > 0 goto label24;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 48);

        i25 = i25 + 1;

        goto label23;

     label24:
        if i21 > 0 goto label25;

        $i10 = 1;

        goto label26;

     label25:
        $i10 = i21;

     label26:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>($i10, 46);

        i23 = 0;

     label27:
        i26 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i27 = i26 - 1;

     label28:
        if i27 < 0 goto label29;

        $c9 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i27);

        if $c9 != 48 goto label29;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i27);

        i27 = i27 + -1;

        goto label28;

     label29:
        if i27 < 0 goto label30;

        $c8 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i27);

        if $c8 != 46 goto label30;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i27);

     label30:
        if i23 == 0 goto label31;

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(69);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i23);

     label31:
        $b7 = d0 cmpg 0.0;

        if $b7 >= 0 goto label32;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 45);

     label32:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String doubleToString(double, int, int)
    {
        double d0;
        int i0, i1;
        java.lang.String $r0, $r1;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int)>(d0, i1);

        $r1 = staticinvoke <org.javia.arity.Util: java.lang.String sizeTruncate(java.lang.String,int)>($r0, i0);

        return $r1;
    }

    public static java.lang.String complexToString(org.javia.arity.Complex, int, int)
    {
        org.javia.arity.Complex r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i22, i23, i24, i25;
        double d0, d1, $d2, $d3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String r1, r2, r3, $r4, $r10, $r12, $r13, $r14, $r15;
        byte $b10, $b11, $b12, $b13, $b21;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r11;

        r0 := @parameter0: org.javia.arity.Complex;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $b10 = $d2 cmpl 0.0;

        if $b10 != 0 goto label01;

        $d3 = r0.<org.javia.arity.Complex: double re>;

        $r15 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int,int)>($d3, i0, i1);

        return $r15;

     label01:
        $z1 = virtualinvoke r0.<org.javia.arity.Complex: boolean isNaN()>();

        if $z1 == 0 goto label02;

        return "NaN";

     label02:
        d0 = r0.<org.javia.arity.Complex: double re>;

        d1 = r0.<org.javia.arity.Complex: double im>;

        $z2 = virtualinvoke r0.<org.javia.arity.Complex: boolean isInfinite()>();

        if $z2 == 0 goto label04;

        $z6 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z6 != 0 goto label03;

        d0 = 0.0;

        goto label04;

     label03:
        $z8 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);

        if $z8 != 0 goto label04;

        d1 = 0.0;

     label04:
        $b11 = d1 cmpl 0.0;

        if $b11 != 0 goto label05;

        $r14 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int,int)>(d0, i0, i1);

        return $r14;

     label05:
        $b13 = d0 cmpl 0.0;

        if $b13 == 0 goto label06;

        $b21 = d1 cmpg 0.0;

        if $b21 < 0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        z0 = $z7;

        $b12 = d0 cmpl 0.0;

        if $b12 != 0 goto label08;

        $r4 = "";

        goto label09;

     label08:
        $r4 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int)>(d0, i1);

     label09:
        r1 = $r4;

        r2 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int)>(d1, i1);

        $z4 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);

        if $z4 == 0 goto label10;

        $r13 = "*";

        goto label11;

     label10:
        $r13 = "";

     label11:
        r3 = $r13;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z3 == 0 goto label12;

        r2 = "";

     label12:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-1");

        if $z5 == 0 goto label13;

        r2 = "-";

     label13:
        if i0 == 100 goto label20;

        i22 = i0 + -1;

        if z0 == 0 goto label14;

        i22 = i22 + -1;

     label14:
        $i14 = virtualinvoke r3.<java.lang.String: int length()>();

        i23 = i22 - $i14;

        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i15 = i2 + i3;

        i4 = $i15 - i23;

        if i4 <= 0 goto label20;

        $i16 = i2 - i3;

        i5 = staticinvoke <java.lang.Math: int abs(int)>($i16);

        if i4 <= i5 goto label15;

        $i20 = i4 - i5;

        $i19 = $i20 / 2;

        goto label16;

     label15:
        $i19 = 0;

     label16:
        i6 = $i19;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i5);

        i8 = i6 + $i18;

        i7 = i2;

        i9 = i3;

        if i2 <= i3 goto label17;

        i24 = i7 - i8;

        i25 = i9 - i6;

        goto label18;

     label17:
        i24 = i7 - i6;

        i25 = i9 - i8;

     label18:
        $i17 = i24 + i25;

        if $i17 <= i23 goto label19;

        i25 = i25 + -1;

     label19:
        r1 = staticinvoke <org.javia.arity.Util: java.lang.String sizeTruncate(java.lang.String,int)>(r1, i24);

        r2 = staticinvoke <org.javia.arity.Util: java.lang.String sizeTruncate(java.lang.String,int)>(r2, i25);

     label20:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        if z0 == 0 goto label21;

        $r10 = "+";

        goto label22;

     label21:
        $r10 = "";

     label22:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(105);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static void <clinit>()
    {
        <org.javia.arity.Util: int FLOAT_PRECISION> = -1;

        <org.javia.arity.Util: int LEN_UNLIMITED> = 100;

        return;
    }
}
