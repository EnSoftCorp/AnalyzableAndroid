public class org.javia.arity.UnitTest extends java.lang.Object
{
    private static final java.lang.String[] profileCases;
    static boolean allOk;
    static int checkCounter;

    public void <init>()
    {
        org.javia.arity.UnitTest r0;

        r0 := @this: org.javia.arity.UnitTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws org.javia.arity.SyntaxException, org.javia.arity.ArityException
    {
        java.lang.String[] r0;
        int i0, i1, $i2, $i3, i4;
        org.javia.arity.Symbols r1, $r5, $r14, r17;
        org.javia.arity.FunctionAndName r2, r18;
        org.javia.arity.Function r3;
        java.lang.String $r4, $r6, $r9, $r12, $r15, $r16;
        boolean $z0;
        java.lang.StringBuilder $r7, $r10, $r11, $r13;
        java.io.PrintStream $r8;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        staticinvoke <org.javia.arity.UnitTest: void runUnitTests()>();

        goto label7;

     label1:
        $r4 = r0[0];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("-profile");

        if $z0 == 0 goto label5;

        if i0 != 1 goto label2;

        staticinvoke <org.javia.arity.UnitTest: void profile()>();

        goto label7;

     label2:
        $r14 = new org.javia.arity.Symbols;

        specialinvoke $r14.<org.javia.arity.Symbols: void <init>()>();

        r1 = $r14;

        i1 = 1;

     label3:
        $i2 = i0 - 1;

        if i1 >= $i2 goto label4;

        $r16 = r0[i1];

        r2 = virtualinvoke r1.<org.javia.arity.Symbols: org.javia.arity.FunctionAndName compileWithName(java.lang.String)>($r16);

        virtualinvoke r1.<org.javia.arity.Symbols: void define(org.javia.arity.FunctionAndName)>(r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        $i3 = i0 - 1;

        $r15 = r0[$i3];

        staticinvoke <org.javia.arity.UnitTest: void profile(org.javia.arity.Symbols,java.lang.String)>(r1, $r15);

        goto label7;

     label5:
        $r5 = new org.javia.arity.Symbols;

        specialinvoke $r5.<org.javia.arity.Symbols: void <init>()>();

        r17 = $r5;

        i4 = 0;

     label6:
        if i4 >= i0 goto label7;

        $r6 = r0[i4];

        r18 = virtualinvoke r17.<org.javia.arity.Symbols: org.javia.arity.FunctionAndName compileWithName(java.lang.String)>($r6);

        virtualinvoke r17.<org.javia.arity.Symbols: void define(org.javia.arity.FunctionAndName)>(r18);

        r3 = r18.<org.javia.arity.FunctionAndName: org.javia.arity.Function function>;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0[i4];

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        i4 = i4 + 1;

        goto label6;

     label7:
        return;
    }

    static void profile(org.javia.arity.Symbols, java.lang.String) throws org.javia.arity.SyntaxException, org.javia.arity.ArityException
    {
        org.javia.arity.Symbols r0;
        java.lang.String r1, $r11, $r17, $r25, $r27;
        org.javia.arity.Function r2;
        java.lang.Runtime r3;
        long l0, $l3, l6, l7, l8, l9;
        int i1, i2, $i4;
        double[] r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r28, $r29, $r30, $r32;
        java.io.PrintStream $r6, $r12, $r20;
        byte $b5;
        double $d0, $d1;

        r0 := @parameter0: org.javia.arity.Symbols;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<org.javia.arity.Symbols: org.javia.arity.Function compile(java.lang.String)>(r1);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

        r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke r3.<java.lang.Runtime: void gc()>();

        virtualinvoke r3.<java.lang.Runtime: void gc()>();

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i1 = 0;

     label1:
        if i1 >= 1000 goto label2;

        virtualinvoke r0.<org.javia.arity.Symbols: org.javia.arity.Function compile(java.lang.String)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compilation time: ");

        $l3 = l6 - l0;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" us");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $i4 = virtualinvoke r2.<org.javia.arity.Function: int arity()>();

        r4 = newarray (double)[$i4];

        virtualinvoke r3.<java.lang.Runtime: void gc()>();

        l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i2 = 0;

     label3:
        if i2 >= 100000 goto label4;

        virtualinvoke r2.<org.javia.arity.Function: double eval(double[])>(r4);

        i2 = i2 + 1;

        goto label3;

     label4:
        l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l9 = l8 - l7;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("execution time: ");

        $b5 = l9 cmp 100L;

        if $b5 <= 0 goto label5;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $d1 = (double) l9;

        $d0 = $d1 / 100.0;

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" us");

        $r27 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ns");

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r28 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r25);

        return;
    }

    private static void profile()
    {
        java.lang.String[] r0;
        org.javia.arity.Symbols r1, $r2;
        int i0, $i1;
        java.lang.String $r3, $r5, $r11;
        org.javia.arity.FunctionAndName $r4;
        org.javia.arity.SyntaxException $r6, r12;
        java.lang.Error $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 = <org.javia.arity.UnitTest: java.lang.String[] profileCases>;

        $r2 = new org.javia.arity.Symbols;

        specialinvoke $r2.<org.javia.arity.Symbols: void <init>()>();

        r1 = $r2;

     label1:
        i0 = 0;

     label2:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label3;

        $r3 = r0[i0];

        $r4 = virtualinvoke r1.<org.javia.arity.Symbols: org.javia.arity.FunctionAndName compileWithName(java.lang.String)>($r3);

        virtualinvoke r1.<org.javia.arity.Symbols: void define(org.javia.arity.FunctionAndName)>($r4);

        $r5 = r0[i0];

        staticinvoke <org.javia.arity.UnitTest: void profile(org.javia.arity.Symbols,java.lang.String)>(r1, $r5);

        i0 = i0 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r12 = $r6;

        $r7 = new java.lang.Error;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>($r11);

        throw $r7;

     label5:
        return;

        catch org.javia.arity.SyntaxException from label1 to label3 with label4;
    }

    static void runUnitTests()
    {
        org.javia.arity.Complex r0, r1, r2, $r5, $r6, $r7, $r8, $r10, $r13, $r14, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63;
        java.lang.String $r3, $r4, $r9, $r11, $r12, $r15, $r16, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        int $i0, $i1;
        java.io.PrintStream $r64, $r65;

        <org.javia.arity.UnitTest: int checkCounter> = 0;

        $r3 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int)>(#-Infinity, 5);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-Infinity");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z0);

        $r4 = staticinvoke <org.javia.arity.Util: java.lang.String doubleToString(double,int)>(#NaN, 5);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("NaN");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z1);

        $r5 = new org.javia.arity.Complex;

        specialinvoke $r5.<org.javia.arity.Complex: void <init>()>();

        r0 = $r5;

        $r6 = new org.javia.arity.Complex;

        specialinvoke $r6.<org.javia.arity.Complex: void <init>()>();

        r1 = $r6;

        $r7 = new org.javia.arity.Complex;

        specialinvoke $r7.<org.javia.arity.Complex: void <init>()>();

        r2 = $r7;

        $r8 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, -1.0);

        $r9 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r8, 10, 1);

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z2);

        $r10 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(2.123, 0.0);

        $r11 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r10, 3, 0);

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("2.1");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z3);

        $r13 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 1.0000000000001);

        $r12 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r13, 20, 3);

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("i");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z4);

        $r14 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, -1.0);

        $r15 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r14, 10, 1);

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("1-i");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z5);

        $r17 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 1.0);

        $r16 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r17, 10, 1);

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("1+i");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z6);

        $r18 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.12, 1.12);

        $r19 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r18, 9, 0);

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("1.12+1.1i");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z7);

        $r21 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.12345, -1.0);

        $r20 = staticinvoke <org.javia.arity.Util: java.lang.String complexToString(org.javia.arity.Complex,int,int)>($r21, 7, 0);

        $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("1.123-i");

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z8);

        $r22 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-1.0, 0.0);

        $r25 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 1.0);

        $r26 = virtualinvoke $r22.<org.javia.arity.Complex: org.javia.arity.Complex pow(org.javia.arity.Complex)>($r25);

        $r23 = virtualinvoke r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.04321391826377226, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r26, $r23);

        $r24 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-1.0, 0.0);

        $r29 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 1.0);

        $r30 = virtualinvoke $r24.<org.javia.arity.Complex: org.javia.arity.Complex pow(org.javia.arity.Complex)>($r29);

        $r27 = virtualinvoke r2.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-0.04321391826377226, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r30, $r27);

        $r28 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-1.0, 0.0);

        $d0 = virtualinvoke $r28.<org.javia.arity.Complex: double abs()>();

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d0, 1.0);

        $r33 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(7.3890560989306495, 0.0);

        $r31 = virtualinvoke $r33.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $r32 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(2.0, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r31, $r32);

        $r36 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-1.0, 0.0);

        $r37 = virtualinvoke $r36.<org.javia.arity.Complex: org.javia.arity.Complex log()>();

        $r34 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 3.141592653589793);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r37, $r34);

        $r35 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(2.0, 0.0);

        $r41 = virtualinvoke $r35.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

        $r40 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(7.3890560989306495, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r41, $r40);

        $r39 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 3.141592653589793);

        $r38 = virtualinvoke $r39.<org.javia.arity.Complex: org.javia.arity.Complex exp()>();

        $r44 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-1.0, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r38, $r44);

        $d1 = staticinvoke <org.javia.arity.MoreMath: double lgamma(double)>(1.0);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d1, 0.0);

        $r43 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 0.0);

        $r42 = virtualinvoke $r43.<org.javia.arity.Complex: org.javia.arity.Complex lgamma()>();

        $r48 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r42, $r48);

        $r47 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 0.0);

        $r46 = virtualinvoke $r47.<org.javia.arity.Complex: org.javia.arity.Complex factorial()>();

        $r45 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r46, $r45);

        $r52 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 0.0);

        $r51 = virtualinvoke $r52.<org.javia.arity.Complex: org.javia.arity.Complex factorial()>();

        $r50 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(1.0, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r51, $r50);

        $r49 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.0, 1.0);

        $r57 = virtualinvoke $r49.<org.javia.arity.Complex: org.javia.arity.Complex factorial()>();

        $r58 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.49801566811835596, -0.1549498283018106);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r57, $r58);

        $r59 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-2.0, 1.0);

        $r60 = virtualinvoke $r59.<org.javia.arity.Complex: org.javia.arity.Complex factorial()>();

        $r53 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(-0.17153291990834815, 0.32648274821006623);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r60, $r53);

        $r54 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(4.0, 0.0);

        $r55 = virtualinvoke $r54.<org.javia.arity.Complex: org.javia.arity.Complex factorial()>();

        $r56 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(24.0, 0.0);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r55, $r56);

        $r61 = virtualinvoke r0.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(4.0, 3.0);

        $r62 = virtualinvoke $r61.<org.javia.arity.Complex: org.javia.arity.Complex factorial()>();

        $r63 = virtualinvoke r1.<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)>(0.016041882741649555, -9.433293289755953);

        staticinvoke <org.javia.arity.UnitTest: void check(org.javia.arity.Complex,org.javia.arity.Complex)>($r62, $r63);

        $d4 = staticinvoke <java.lang.Math: double log(double)>(-1.0);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d4, #NaN);

        $d2 = staticinvoke <java.lang.Math: double log(double)>(-0.03);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d2, #NaN);

        $i0 = staticinvoke <org.javia.arity.MoreMath: int intLog10(double)>(-0.03);

        $d3 = (double) $i0;

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d3, 0.0);

        $i1 = staticinvoke <org.javia.arity.MoreMath: int intLog10(double)>(0.03);

        $d9 = (double) $i1;

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d9, -2.0);

        $d8 = staticinvoke <org.javia.arity.MoreMath: double intExp10(int)>(3);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d8, 1000.0);

        $d11 = staticinvoke <org.javia.arity.MoreMath: double intExp10(int)>(-1);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d11, 0.1);

        $d10 = staticinvoke <org.javia.arity.Util: double shortApprox(double,double)>(1.235, 0.02);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d10, 1.24);

        $d6 = staticinvoke <org.javia.arity.Util: double shortApprox(double,double)>(1.235, 0.4);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d6, 1.2000000000000002);

        $d5 = staticinvoke <org.javia.arity.Util: double shortApprox(double,double)>(-1.235, 0.02);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d5, -1.24);

        $d7 = staticinvoke <org.javia.arity.Util: double shortApprox(double,double)>(-1.235, 0.4);

        staticinvoke <org.javia.arity.UnitTest: void check(double,double)>($d7, -1.2000000000000002);

        $z9 = staticinvoke <org.javia.arity.TestFormat: boolean testFormat()>();

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z9);

        $z12 = staticinvoke <org.javia.arity.TestEval: boolean testEval()>();

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z12);

        $z11 = staticinvoke <org.javia.arity.UnitTest: boolean testRecursiveEval()>();

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z11);

        $z14 = staticinvoke <org.javia.arity.UnitTest: boolean testFrame()>();

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z14);

        $z13 = staticinvoke <org.javia.arity.TestFormat: boolean testSizeCases()>();

        staticinvoke <org.javia.arity.UnitTest: void check(boolean)>($z13);

        $z10 = <org.javia.arity.UnitTest: boolean allOk>;

        if $z10 != 0 goto label1;

        $r65 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("\n*** Some tests FAILED ***\n");

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label2;

     label1:
        $r64 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("\n*** All tests passed OK ***\n");

     label2:
        return;
    }

    static boolean testFrame()
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22;
        org.javia.arity.Symbols r0, $r1, $r2, r12;
        org.javia.arity.Symbol $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10;
        double $d0, $d1, $d2, $d3, $d4;
        org.javia.arity.SyntaxException $r11;

        z0 = 1;

     label01:
        $r1 = new org.javia.arity.Symbols;

        specialinvoke $r1.<org.javia.arity.Symbols: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<org.javia.arity.Symbols: void define(java.lang.String,double)>("a", 1.0);

        if z0 == 0 goto label02;

        $d4 = virtualinvoke r0.<org.javia.arity.Symbols: double eval(java.lang.String)>("a");

        $b10 = $d4 cmpl 1.0;

        if $b10 != 0 goto label02;

        $z11 = 1;

        goto label03;

     label02:
        $z11 = 0;

     label03:
        z12 = $z11;

        virtualinvoke r0.<org.javia.arity.Symbols: void pushFrame()>();

        if z12 == 0 goto label04;

        $d3 = virtualinvoke r0.<org.javia.arity.Symbols: double eval(java.lang.String)>("a");

        $b9 = $d3 cmpl 1.0;

        if $b9 != 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        z13 = $z9;

        virtualinvoke r0.<org.javia.arity.Symbols: void define(java.lang.String,double)>("a", 2.0);

        if z13 == 0 goto label06;

        $d2 = virtualinvoke r0.<org.javia.arity.Symbols: double eval(java.lang.String)>("a");

        $b8 = $d2 cmpl 2.0;

        if $b8 != 0 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        z14 = $z10;

        virtualinvoke r0.<org.javia.arity.Symbols: void define(java.lang.String,double)>("a", 3.0);

        if z14 == 0 goto label08;

        $d1 = virtualinvoke r0.<org.javia.arity.Symbols: double eval(java.lang.String)>("a");

        $b7 = $d1 cmpl 3.0;

        if $b7 != 0 goto label08;

        $z8 = 1;

        goto label09;

     label08:
        $z8 = 0;

     label09:
        z15 = $z8;

        virtualinvoke r0.<org.javia.arity.Symbols: void popFrame()>();

        if z15 == 0 goto label10;

        $d0 = virtualinvoke r0.<org.javia.arity.Symbols: double eval(java.lang.String)>("a");

        $b6 = $d0 cmpl 1.0;

        if $b6 != 0 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        z16 = $z7;

        $r2 = new org.javia.arity.Symbols;

        specialinvoke $r2.<org.javia.arity.Symbols: void <init>()>();

        r12 = $r2;

        virtualinvoke r12.<org.javia.arity.Symbols: void pushFrame()>();

        $r3 = staticinvoke <org.javia.arity.Symbol: org.javia.arity.Symbol makeArg(java.lang.String,int)>("base", 0);

        virtualinvoke r12.<org.javia.arity.Symbols: void add(org.javia.arity.Symbol)>($r3);

        $r4 = staticinvoke <org.javia.arity.Symbol: org.javia.arity.Symbol makeArg(java.lang.String,int)>("x", 1);

        virtualinvoke r12.<org.javia.arity.Symbols: void add(org.javia.arity.Symbol)>($r4);

        if z16 == 0 goto label12;

        $r10 = virtualinvoke r12.<org.javia.arity.Symbols: org.javia.arity.Symbol lookupConst(java.lang.String)>("x");

        $b5 = $r10.<org.javia.arity.Symbol: byte op>;

        if $b5 != 39 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        z17 = $z6;

        virtualinvoke r12.<org.javia.arity.Symbols: void pushFrame()>();

        if z17 == 0 goto label14;

        $r9 = virtualinvoke r12.<org.javia.arity.Symbols: org.javia.arity.Symbol lookupConst(java.lang.String)>("base");

        $b4 = $r9.<org.javia.arity.Symbol: byte op>;

        if $b4 != 38 goto label14;

        $z5 = 1;

        goto label15;

     label14:
        $z5 = 0;

     label15:
        z18 = $z5;

        if z18 == 0 goto label16;

        $r8 = virtualinvoke r12.<org.javia.arity.Symbols: org.javia.arity.Symbol lookupConst(java.lang.String)>("x");

        $b3 = $r8.<org.javia.arity.Symbol: byte op>;

        if $b3 != 39 goto label16;

        $z4 = 1;

        goto label17;

     label16:
        $z4 = 0;

     label17:
        z19 = $z4;

        virtualinvoke r12.<org.javia.arity.Symbols: void popFrame()>();

        if z19 == 0 goto label18;

        $r7 = virtualinvoke r12.<org.javia.arity.Symbols: org.javia.arity.Symbol lookupConst(java.lang.String)>("base");

        $b2 = $r7.<org.javia.arity.Symbol: byte op>;

        if $b2 != 38 goto label18;

        $z3 = 1;

        goto label19;

     label18:
        $z3 = 0;

     label19:
        z20 = $z3;

        if z20 == 0 goto label20;

        $r6 = virtualinvoke r12.<org.javia.arity.Symbols: org.javia.arity.Symbol lookupConst(java.lang.String)>("x");

        $b1 = $r6.<org.javia.arity.Symbol: byte op>;

        if $b1 != 39 goto label20;

        $z2 = 1;

        goto label21;

     label20:
        $z2 = 0;

     label21:
        z21 = $z2;

        virtualinvoke r12.<org.javia.arity.Symbols: void popFrame()>();

        if z21 == 0 goto label22;

        $r5 = virtualinvoke r12.<org.javia.arity.Symbols: org.javia.arity.Symbol lookupConst(java.lang.String)>("x");

        $b0 = $r5.<org.javia.arity.Symbol: byte op>;

        if $b0 != 38 goto label22;

        $z1 = 1;

        goto label23;

     label22:
        $z1 = 0;

     label23:
        z22 = $z1;

     label24:
        goto label26;

     label25:
        $r11 := @caughtexception;

        return 0;

     label26:
        return z22;

        catch org.javia.arity.SyntaxException from label01 to label24 with label25;
    }

    static boolean equal(org.javia.arity.Complex, org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.javia.arity.Complex;

        r1 := @parameter1: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r1.<org.javia.arity.Complex: double re>;

        $z0 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>($d1, $d0);

        if $z0 == 0 goto label1;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d2 = r1.<org.javia.arity.Complex: double im>;

        $z1 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>($d3, $d2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    static boolean equal(double, org.javia.arity.Complex)
    {
        double d0, $d1, $d2, $d3;
        org.javia.arity.Complex r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        d0 := @parameter0: double;

        r0 := @parameter1: org.javia.arity.Complex;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $z0 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>(d0, $d1);

        if $z0 == 0 goto label2;

        $d2 = r0.<org.javia.arity.Complex: double im>;

        $z1 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>(0.0, $d2);

        if $z1 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z3 == 0 goto label2;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        if $z4 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static boolean equal(double, double)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6;
        byte $b0, $b1, $b2;
        boolean $z0, $z1, $z2;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        if $b0 == 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z2 != 0 goto label2;

     label1:
        $d2 = d0 - d1;

        $d3 = $d2 / d1;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b1 = $d4 cmpg 1.0E-15;

        if $b1 < 0 goto label2;

        $d5 = d0 - d1;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b2 = $d6 cmpg 1.0E-15;

        if $b2 >= 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    static void check(double, double)
    {
        double d0, d1;
        java.lang.String $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        java.io.PrintStream $r2;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $i0 = <org.javia.arity.UnitTest: int checkCounter>;

        $i1 = $i0 + 1;

        <org.javia.arity.UnitTest: int checkCounter> = $i1;

        $z0 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>(d0, d1);

        if $z0 != 0 goto label1;

        <org.javia.arity.UnitTest: boolean allOk> = 0;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed check #");

        $i2 = <org.javia.arity.UnitTest: int checkCounter>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r0);

     label1:
        return;
    }

    static void check(org.javia.arity.Complex, org.javia.arity.Complex)
    {
        org.javia.arity.Complex r0, r1;
        int $i0, $i1, $i2;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        java.io.PrintStream $r3;
        java.lang.String $r10;

        r0 := @parameter0: org.javia.arity.Complex;

        r1 := @parameter1: org.javia.arity.Complex;

        $i0 = <org.javia.arity.UnitTest: int checkCounter>;

        $i1 = $i0 + 1;

        <org.javia.arity.UnitTest: int checkCounter> = $i1;

        $d1 = r0.<org.javia.arity.Complex: double re>;

        $d0 = r1.<org.javia.arity.Complex: double re>;

        $z0 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>($d1, $d0);

        if $z0 == 0 goto label1;

        $d3 = r0.<org.javia.arity.Complex: double im>;

        $d2 = r1.<org.javia.arity.Complex: double im>;

        $z1 = staticinvoke <org.javia.arity.UnitTest: boolean equal(double,double)>($d3, $d2);

        if $z1 != 0 goto label2;

     label1:
        <org.javia.arity.UnitTest: boolean allOk> = 0;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed check #");

        $i2 = <org.javia.arity.UnitTest: int checkCounter>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label2:
        return;
    }

    static void check(boolean)
    {
        boolean z0;
        int $i0, $i1;

        z0 := @parameter0: boolean;

        $i0 = <org.javia.arity.UnitTest: int checkCounter>;

        $i1 = $i0 + 1;

        <org.javia.arity.UnitTest: int checkCounter> = $i1;

        if z0 != 0 goto label1;

        <org.javia.arity.UnitTest: boolean allOk> = 0;

     label1:
        return;
    }

    static boolean testRecursiveEval()
    {
        org.javia.arity.Symbols r0, $r2;
        org.javia.arity.Function r1;
        org.javia.arity.MyFun $r3;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1, $b2, $b3;
        boolean $z0;
        org.javia.arity.SyntaxException $r4, r10;
        java.io.PrintStream $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        $r2 = new org.javia.arity.Symbols;

        specialinvoke $r2.<org.javia.arity.Symbols: void <init>()>();

        r0 = $r2;

        $r3 = new org.javia.arity.MyFun;

        specialinvoke $r3.<org.javia.arity.MyFun: void <init>()>();

        virtualinvoke r0.<org.javia.arity.Symbols: void define(java.lang.String,org.javia.arity.Function)>("myfun", $r3);

     label1:
        r1 = virtualinvoke r0.<org.javia.arity.Symbols: org.javia.arity.Function compile(java.lang.String)>("1+myfun(x)");

        $d0 = virtualinvoke r1.<org.javia.arity.Function: double eval(double)>(0.0);

        $b0 = $d0 cmpl 2.0;

        if $b0 != 0 goto label2;

        $d1 = virtualinvoke r1.<org.javia.arity.Function: double eval(double)>(1.0);

        $b1 = $d1 cmpl 1.0;

        if $b1 != 0 goto label2;

        $d2 = virtualinvoke r1.<org.javia.arity.Function: double eval(double)>(2.0);

        $b2 = $d2 cmpl 0.0;

        if $b2 != 0 goto label2;

        $d3 = virtualinvoke r1.<org.javia.arity.Function: double eval(double)>(3.0);

        $b3 = $d3 cmpl -1.0;

        if $b3 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        r10 = $r4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        <org.javia.arity.UnitTest: boolean allOk> = 0;

        return 0;

        catch org.javia.arity.SyntaxException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "(100.5 + 20009.999)*(7+4+3)/(5/2)^3!)*2";

        $r0[1] = "fun1(x)=(x+2)*(x+3)";

        $r0[2] = "otherFun(x)=(fun1(x-1)*x+1)*(fun1(2-x)+10)";

        $r0[3] = "log(x+30.5, 3)^.7*sin(x+.5)";

        <org.javia.arity.UnitTest: java.lang.String[] profileCases> = $r0;

        <org.javia.arity.UnitTest: boolean allOk> = 1;

        <org.javia.arity.UnitTest: int checkCounter> = 0;

        return;
    }
}
