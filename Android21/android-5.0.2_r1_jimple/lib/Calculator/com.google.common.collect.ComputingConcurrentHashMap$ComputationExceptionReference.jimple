final class com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference extends java.lang.Object implements com.google.common.collect.MapMakerInternalMap$ValueReference
{
    final java.lang.Throwable t;

    void <init>(java.lang.Throwable)
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;
        java.lang.Throwable r1;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: java.lang.Throwable t> = r1;

        return;
    }

    public java.lang.Object get()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        return null;
    }

    public com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        return null;
    }

    public com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue, com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;
        java.lang.ref.ReferenceQueue r1;
        com.google.common.collect.MapMakerInternalMap$ReferenceEntry r2;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        r1 := @parameter0: java.lang.ref.ReferenceQueue;

        r2 := @parameter1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry;

        return r0;
    }

    public boolean isComputingReference()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        return 0;
    }

    public java.lang.Object waitForValue() throws java.util.concurrent.ExecutionException
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;
        java.util.concurrent.ExecutionException $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        $r1 = new java.util.concurrent.ExecutionException;

        $r2 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: java.lang.Throwable t>;

        specialinvoke $r1.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r2);

        throw $r1;
    }

    public void clear(com.google.common.collect.MapMakerInternalMap$ValueReference)
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference r0;
        com.google.common.collect.MapMakerInternalMap$ValueReference r1;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        r1 := @parameter0: com.google.common.collect.MapMakerInternalMap$ValueReference;

        return;
    }
}
