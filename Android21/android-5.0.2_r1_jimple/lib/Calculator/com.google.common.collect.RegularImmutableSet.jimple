final class com.google.common.collect.RegularImmutableSet extends com.google.common.collect.ImmutableSet$ArrayImmutableSet
{
    final transient java.lang.Object[] table;
    private final transient int mask;
    private final transient int hashCode;

    void <init>(java.lang.Object[], int, java.lang.Object[], int)
    {
        com.google.common.collect.RegularImmutableSet r0;
        java.lang.Object[] r1, r2;
        int i0, i1;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        i1 := @parameter3: int;

        specialinvoke r0.<com.google.common.collect.ImmutableSet$ArrayImmutableSet: void <init>(java.lang.Object[])>(r1);

        r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] table> = r2;

        r0.<com.google.common.collect.RegularImmutableSet: int mask> = i1;

        r0.<com.google.common.collect.RegularImmutableSet: int hashCode> = i0;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableSet r0;
        java.lang.Object r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i0 = staticinvoke <com.google.common.collect.Hashing: int smear(int)>($i1);

     label2:
        $r3 = r0.<com.google.common.collect.RegularImmutableSet: java.lang.Object[] table>;

        $i2 = r0.<com.google.common.collect.RegularImmutableSet: int mask>;

        $i3 = i0 & $i2;

        r2 = $r3[$i3];

        if r2 != null goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i0 = i0 + 1;

        goto label2;
    }

    public int hashCode()
    {
        com.google.common.collect.RegularImmutableSet r0;
        int $i0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        $i0 = r0.<com.google.common.collect.RegularImmutableSet: int hashCode>;

        return $i0;
    }

    boolean isHashCodeFast()
    {
        com.google.common.collect.RegularImmutableSet r0;

        r0 := @this: com.google.common.collect.RegularImmutableSet;

        return 1;
    }
}
