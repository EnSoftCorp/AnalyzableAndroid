abstract class com.google.common.collect.Multisets$EntrySet extends java.util.AbstractSet
{

    void <init>()
    {
        com.google.common.collect.Multisets$EntrySet r0;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    abstract com.google.common.collect.Multiset multiset();

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Multisets$EntrySet r0;
        java.lang.Object r1, $r4;
        com.google.common.collect.Multiset$Entry r2;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.google.common.collect.Multiset $r3;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label4;

        r2 = (com.google.common.collect.Multiset$Entry) r1;

        $i1 = interfaceinvoke r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if $i1 > 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: com.google.common.collect.Multiset multiset()>();

        $r4 = interfaceinvoke r2.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        i0 = interfaceinvoke $r3.<com.google.common.collect.Multiset: int count(java.lang.Object)>($r4);

        $i2 = interfaceinvoke r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        if i0 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.Multisets$EntrySet r0;
        java.lang.Object r1, $r5;
        boolean $z0, $z1, $z2;
        com.google.common.collect.Multiset $r2;
        java.util.Set $r3;
        com.google.common.collect.Multiset$Entry $r4;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: com.google.common.collect.Multiset multiset()>();

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset: java.util.Set elementSet()>();

        $r4 = (com.google.common.collect.Multiset$Entry) r1;

        $r5 = interfaceinvoke $r4.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void clear()
    {
        com.google.common.collect.Multisets$EntrySet r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.Multisets$EntrySet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multisets$EntrySet: com.google.common.collect.Multiset multiset()>();

        interfaceinvoke $r1.<com.google.common.collect.Multiset: void clear()>();

        return;
    }
}
