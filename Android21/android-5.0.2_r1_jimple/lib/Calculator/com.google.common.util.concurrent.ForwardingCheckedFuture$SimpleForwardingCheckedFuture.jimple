public abstract class com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture extends com.google.common.util.concurrent.ForwardingCheckedFuture
{
    private final com.google.common.util.concurrent.CheckedFuture delegate;

    protected void <init>(com.google.common.util.concurrent.CheckedFuture)
    {
        com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture r0;
        com.google.common.util.concurrent.CheckedFuture r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture;

        r1 := @parameter0: com.google.common.util.concurrent.CheckedFuture;

        specialinvoke r0.<com.google.common.util.concurrent.ForwardingCheckedFuture: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.common.util.concurrent.CheckedFuture) $r2;

        r0.<com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture: com.google.common.util.concurrent.CheckedFuture delegate> = $r3;

        return;
    }

    protected final com.google.common.util.concurrent.CheckedFuture delegate()
    {
        com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture r0;
        com.google.common.util.concurrent.CheckedFuture $r1;

        r0 := @this: com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture;

        $r1 = r0.<com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture: com.google.common.util.concurrent.CheckedFuture delegate>;

        return $r1;
    }

    protected volatile com.google.common.util.concurrent.ListenableFuture delegate()
    {
        com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture r0;
        com.google.common.util.concurrent.CheckedFuture $r1;

        r0 := @this: com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture: com.google.common.util.concurrent.CheckedFuture delegate()>();

        return $r1;
    }

    protected volatile java.util.concurrent.Future delegate()
    {
        com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture r0;
        com.google.common.util.concurrent.CheckedFuture $r1;

        r0 := @this: com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture: com.google.common.util.concurrent.CheckedFuture delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture r0;
        com.google.common.util.concurrent.CheckedFuture $r1;

        r0 := @this: com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture: com.google.common.util.concurrent.CheckedFuture delegate()>();

        return $r1;
    }
}
