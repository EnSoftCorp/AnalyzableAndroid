final class com.google.common.collect.RegularImmutableTable$2 extends java.lang.Object implements java.util.Comparator
{
    final java.util.Comparator val$rowComparator;
    final java.util.Comparator val$columnComparator;

    void <init>(java.util.Comparator, java.util.Comparator)
    {
        com.google.common.collect.RegularImmutableTable$2 r0;
        java.util.Comparator r1, r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$2;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.util.Comparator;

        r0.<com.google.common.collect.RegularImmutableTable$2: java.util.Comparator val$rowComparator> = r1;

        r0.<com.google.common.collect.RegularImmutableTable$2: java.util.Comparator val$columnComparator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.google.common.collect.Table$Cell, com.google.common.collect.Table$Cell)
    {
        com.google.common.collect.RegularImmutableTable$2 r0;
        com.google.common.collect.Table$Cell r1, r2;
        int i0, $i1, $i2;
        java.util.Comparator $r3, $r4, $r7, $r8;
        java.lang.Object $r5, $r6, $r9, $r10;

        r0 := @this: com.google.common.collect.RegularImmutableTable$2;

        r1 := @parameter0: com.google.common.collect.Table$Cell;

        r2 := @parameter1: com.google.common.collect.Table$Cell;

        $r3 = r0.<com.google.common.collect.RegularImmutableTable$2: java.util.Comparator val$rowComparator>;

        if $r3 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r4 = r0.<com.google.common.collect.RegularImmutableTable$2: java.util.Comparator val$rowComparator>;

        $r5 = interfaceinvoke r1.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r6 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $i1 = interfaceinvoke $r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r5, $r6);

     label2:
        i0 = $i1;

        if i0 == 0 goto label3;

        return i0;

     label3:
        $r7 = r0.<com.google.common.collect.RegularImmutableTable$2: java.util.Comparator val$columnComparator>;

        if $r7 != null goto label4;

        $i2 = 0;

        goto label5;

     label4:
        $r8 = r0.<com.google.common.collect.RegularImmutableTable$2: java.util.Comparator val$columnComparator>;

        $r9 = interfaceinvoke r1.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r10 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $i2 = interfaceinvoke $r8.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r9, $r10);

     label5:
        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$2 r0;
        java.lang.Object r1, r2;
        com.google.common.collect.Table$Cell $r3, $r4;
        int $i0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.collect.Table$Cell) r1;

        $r3 = (com.google.common.collect.Table$Cell) r2;

        $i0 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$2: int compare(com.google.common.collect.Table$Cell,com.google.common.collect.Table$Cell)>($r4, $r3);

        return $i0;
    }
}
