public abstract class com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi extends java.security.KeyFactorySpi implements com.android.org.bouncycastle.jcajce.provider.util.AsymmetricKeyInfoConverter
{

    public void <init>()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi r0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi;

        specialinvoke r0.<java.security.KeyFactorySpi: void <init>()>();

        return;
    }

    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi r0;
        java.security.spec.KeySpec r1;
        boolean $z0;
        java.security.spec.InvalidKeySpecException $r3, $r9;
        java.security.spec.PKCS8EncodedKeySpec $r4;
        byte[] $r5;
        com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r6;
        java.security.PrivateKey $r7;
        java.lang.Exception $r8;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof java.security.spec.PKCS8EncodedKeySpec;

        if $z0 == 0 goto label4;

     label1:
        $r4 = (java.security.spec.PKCS8EncodedKeySpec) r1;

        $r5 = virtualinvoke $r4.<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()>();

        $r6 = staticinvoke <com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo: com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r5);

        $r7 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PrivateKey generatePrivate(com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>($r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r9.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("encoded key spec not recognised");

        throw $r9;

     label4:
        $r3 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key spec not recognised");

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi r0;
        java.security.spec.KeySpec r1;
        boolean $z0;
        java.security.spec.InvalidKeySpecException $r3, $r9;
        java.security.spec.X509EncodedKeySpec $r4;
        byte[] $r5;
        com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r6;
        java.security.PublicKey $r7;
        java.lang.Exception $r8;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof java.security.spec.X509EncodedKeySpec;

        if $z0 == 0 goto label4;

     label1:
        $r4 = (java.security.spec.X509EncodedKeySpec) r1;

        $r5 = virtualinvoke $r4.<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()>();

        $r6 = staticinvoke <com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

        $r7 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PublicKey generatePublic(com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r9.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("encoded key spec not recognised");

        throw $r9;

     label4:
        $r3 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key spec not recognised");

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi r0;
        java.security.Key r1;
        java.lang.Class r2;
        boolean $z0, $z1, $z2, $z3;
        java.security.spec.InvalidKeySpecException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9, $r10, $r13;
        java.security.spec.X509EncodedKeySpec $r11;
        byte[] $r12, $r14;
        java.security.spec.PKCS8EncodedKeySpec $r15;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/security/spec/PKCS8EncodedKeySpec");

        if $z0 == 0 goto label1;

        $r13 = interfaceinvoke r1.<java.security.Key: java.lang.String getFormat()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("PKCS#8");

        if $z3 == 0 goto label1;

        $r15 = new java.security.spec.PKCS8EncodedKeySpec;

        $r14 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r15.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r14);

        return $r15;

     label1:
        $z1 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/security/spec/X509EncodedKeySpec");

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r1.<java.security.Key: java.lang.String getFormat()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("X.509");

        if $z2 == 0 goto label2;

        $r11 = new java.security.spec.X509EncodedKeySpec;

        $r12 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r11.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r12);

        return $r11;

     label2:
        $r3 = new java.security.spec.InvalidKeySpecException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not implemented yet ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r9);

        throw $r3;
    }
}
