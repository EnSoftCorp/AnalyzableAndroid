public final class com.android.org.bouncycastle.util.Arrays extends java.lang.Object
{

    private void <init>()
    {
        com.android.org.bouncycastle.util.Arrays r0;

        r0 := @this: com.android.org.bouncycastle.util.Arrays;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean areEqual(boolean[], boolean[])
    {
        boolean[] r0, r1;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: boolean[];

        r1 := @parameter1: boolean[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $i3 = lengthof r0;

        if i0 == $i3 goto label7;

        $z1 = r0[i0];

        $z0 = r1[i0];

        if $z1 == $z0 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static boolean areEqual(char[], char[])
    {
        char[] r0, r1;
        int i0, $i1, $i2, $i3;
        char $c4, $c5;

        r0 := @parameter0: char[];

        r1 := @parameter1: char[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $i3 = lengthof r0;

        if i0 == $i3 goto label7;

        $c5 = r0[i0];

        $c4 = r1[i0];

        if $c5 == $c4 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static boolean areEqual(byte[], byte[])
    {
        byte[] r0, r1;
        int i0, $i1, $i2, $i3;
        byte $b4, $b5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $i3 = lengthof r0;

        if i0 == $i3 goto label7;

        $b5 = r0[i0];

        $b4 = r1[i0];

        if $b5 == $b4 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static boolean constantTimeAreEqual(byte[], byte[])
    {
        byte[] r0, r1;
        byte b0, $b5, $b6, $b7;
        int i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i3 = lengthof r0;

        $i2 = lengthof r1;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        b0 = 0;

        i1 = 0;

     label5:
        $i4 = lengthof r0;

        if i1 == $i4 goto label6;

        $b6 = r0[i1];

        $b5 = r1[i1];

        $b7 = $b6 ^ $b5;

        b0 = b0 | $b7;

        i1 = i1 + 1;

        goto label5;

     label6:
        if b0 != 0 goto label7;

        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;
    }

    public static boolean areEqual(int[], int[])
    {
        int[] r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $i3 = lengthof r0;

        if i0 == $i3 goto label7;

        $i5 = r0[i0];

        $i4 = r1[i0];

        if $i5 == $i4 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static boolean areEqual(long[], long[])
    {
        long[] r0, r1;
        int i0, $i1, $i2, $i3;
        long $l4, $l5;
        byte $b6;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $i3 = lengthof r0;

        if i0 == $i3 goto label7;

        $l5 = r0[i0];

        $l4 = r1[i0];

        $b6 = $l5 cmp $l4;

        if $b6 == 0 goto label6;

        return 0;

     label6:
        i0 = i0 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static boolean areEqual(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label4;

        return 0;

     label4:
        i0 = 0;

     label5:
        $i3 = lengthof r0;

        if i0 == $i3 goto label8;

        r2 = r0[i0];

        r3 = r1[i0];

        if r2 != null goto label6;

        if r3 == null goto label7;

        return 0;

     label6:
        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        i0 = i0 + 1;

        goto label5;

     label8:
        return 1;
    }

    public static boolean contains(short[], short)
    {
        short[] r0;
        short s0, $s3;
        int i1, $i2;

        r0 := @parameter0: short[];

        s0 := @parameter1: short;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label3;

        $s3 = r0[i1];

        if $s3 != s0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean contains(int[], int)
    {
        int[] r0;
        int i0, i1, $i2, $i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label3;

        $i3 = r0[i1];

        if $i3 != i0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static void fill(byte[], byte)
    {
        byte[] r0;
        byte b0;
        int i1, $i2;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label2;

        r0[i1] = b0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void fill(char[], char)
    {
        char[] r0;
        char c0;
        int i1, $i2;

        r0 := @parameter0: char[];

        c0 := @parameter1: char;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label2;

        r0[i1] = c0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void fill(long[], long)
    {
        long[] r0;
        long l0;
        int i1, $i2;

        r0 := @parameter0: long[];

        l0 := @parameter1: long;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label2;

        r0[i1] = l0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void fill(short[], short)
    {
        short[] r0;
        short s0;
        int i1, $i2;

        r0 := @parameter0: short[];

        s0 := @parameter1: short;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label2;

        r0[i1] = s0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void fill(int[], int)
    {
        int[] r0;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label2;

        r0[i1] = i0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static int hashCode(byte[])
    {
        byte[] r0;
        int i0, i1, i3;
        byte $b2;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = i0 + 1;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label3;

        i3 = i1 * 257;

        $b2 = r0[i0];

        i1 = i3 ^ $b2;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(char[])
    {
        char[] r0;
        int i0, i1, i3;
        char $c2;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = i0 + 1;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label3;

        i3 = i1 * 257;

        $c2 = r0[i0];

        i1 = i3 ^ $c2;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(int[][])
    {
        int[][] r0;
        int i0, i1, $i2, $i3, $i4;
        int[] $r1;

        r0 := @parameter0: int[][];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 == $i2 goto label2;

        $i3 = i0 * 257;

        $r1 = r0[i1];

        $i4 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int hashCode(int[])>($r1);

        i0 = $i3 + $i4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static int hashCode(int[])
    {
        int[] r0;
        int i0, i1, $i2, i3;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = i0 + 1;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label3;

        i3 = i1 * 257;

        $i2 = r0[i0];

        i1 = i3 ^ $i2;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(short[][][])
    {
        short[][][] r0;
        int i0, i1, $i2, $i3, $i4;
        short[][] $r1;

        r0 := @parameter0: short[][][];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 == $i2 goto label2;

        $i3 = i0 * 257;

        $r1 = r0[i1];

        $i4 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int hashCode(short[][])>($r1);

        i0 = $i3 + $i4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static int hashCode(short[][])
    {
        short[][] r0;
        int i0, i1, $i2, $i3, $i4;
        short[] $r1;

        r0 := @parameter0: short[][];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i1 == $i2 goto label2;

        $i3 = i0 * 257;

        $r1 = r0[i1];

        $i4 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int hashCode(short[])>($r1);

        i0 = $i3 + $i4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static int hashCode(short[])
    {
        short[] r0;
        int i0, i1, i4;
        short $s2, $s3;

        r0 := @parameter0: short[];

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = i0 + 1;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label3;

        i4 = i1 * 257;

        $s2 = r0[i0];

        $s3 = $s2 & 255;

        i1 = i4 ^ $s3;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(java.lang.Object[])
    {
        java.lang.Object[] r0;
        int i0, i1, $i2, i3;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return 0;

     label1:
        i0 = lengthof r0;

        i1 = i0 + 1;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label3;

        i3 = i1 * 257;

        $r1 = r0[i0];

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i1 = i3 ^ $i2;

        goto label2;

     label3:
        return i1;
    }

    public static byte[] clone(byte[])
    {
        byte[] r0, r1;
        int $i0, $i1;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static byte[] clone(byte[], byte[])
    {
        byte[] r0, r1, $r2;
        int $i0, $i1, $i2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        if r1 == null goto label2;

        $i1 = lengthof r1;

        $i0 = lengthof r0;

        if $i1 == $i0 goto label3;

     label2:
        $r2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>(r0);

        return $r2;

     label3:
        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 0, $i2);

        return r1;
    }

    public static byte[][] clone(byte[][])
    {
        byte[][] r0, r1, $r4;
        int i0, $i1, $i2;
        byte[] $r2, $r3;

        r0 := @parameter0: byte[][];

        if r0 != null goto label1;

        $r4 = (byte[][]) null;

        return $r4;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (byte[])[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 == $i2 goto label3;

        $r2 = r0[i0];

        $r3 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>($r2);

        r1[i0] = $r3;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static byte[][][] clone(byte[][][])
    {
        byte[][][] r0, r1, $r4;
        int i0, $i1, $i2;
        byte[][] $r2, $r3;

        r0 := @parameter0: byte[][][];

        if r0 != null goto label1;

        $r4 = (byte[][][]) null;

        return $r4;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (byte[][])[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 == $i2 goto label3;

        $r2 = r0[i0];

        $r3 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[][] clone(byte[][])>($r2);

        r1[i0] = $r3;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static int[] clone(int[])
    {
        int[] r0, r1;
        int $i0, $i1;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static long[] clone(long[])
    {
        long[] r0, r1;
        int $i0, $i1;

        r0 := @parameter0: long[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (long)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static long[] clone(long[], long[])
    {
        long[] r0, r1, $r2;
        int $i0, $i1, $i2;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        if r0 != null goto label1;

        return null;

     label1:
        if r1 == null goto label2;

        $i1 = lengthof r1;

        $i0 = lengthof r0;

        if $i1 == $i0 goto label3;

     label2:
        $r2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: long[] clone(long[])>(r0);

        return $r2;

     label3:
        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, 0, r1, 0, $i2);

        return r1;
    }

    public static short[] clone(short[])
    {
        short[] r0, r1;
        int $i0, $i1;

        r0 := @parameter0: short[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (short)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(short[],int,short[],int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static java.math.BigInteger[] clone(java.math.BigInteger[])
    {
        java.math.BigInteger[] r0, r1;
        int $i0, $i1;

        r0 := @parameter0: java.math.BigInteger[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (java.math.BigInteger)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static byte[] copyOf(byte[], int)
    {
        byte[] r0, r1;
        int i0, $i1, $i2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 = newarray (byte)[i0];

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 0, i0);

        goto label2;

     label1:
        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 0, $i2);

     label2:
        return r1;
    }

    public static char[] copyOf(char[], int)
    {
        char[] r0, r1;
        int i0, $i1, $i2;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        r1 = newarray (char)[i0];

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r0, 0, r1, 0, i0);

        goto label2;

     label1:
        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r0, 0, r1, 0, $i2);

     label2:
        return r1;
    }

    public static int[] copyOf(int[], int)
    {
        int[] r0, r1;
        int i0, $i1, $i2;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        r1 = newarray (int)[i0];

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, 0, r1, 0, i0);

        goto label2;

     label1:
        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, 0, r1, 0, $i2);

     label2:
        return r1;
    }

    public static long[] copyOf(long[], int)
    {
        long[] r0, r1;
        int i0, $i1, $i2;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        r1 = newarray (long)[i0];

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, 0, r1, 0, i0);

        goto label2;

     label1:
        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, 0, r1, 0, $i2);

     label2:
        return r1;
    }

    public static java.math.BigInteger[] copyOf(java.math.BigInteger[], int)
    {
        java.math.BigInteger[] r0, r1;
        int i0, $i1, $i2;

        r0 := @parameter0: java.math.BigInteger[];

        i0 := @parameter1: int;

        r1 = newarray (java.math.BigInteger)[i0];

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        goto label2;

     label1:
        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i2);

     label2:
        return r1;
    }

    public static byte[] copyOfRange(byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int getLength(int,int)>(i0, i1);

        r1 = newarray (byte)[i2];

        $i3 = lengthof r0;

        $i4 = $i3 - i0;

        if $i4 >= i2 goto label1;

        $i5 = lengthof r0;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, i0, r1, 0, $i6);

        goto label2;

     label1:
        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, i0, r1, 0, i2);

     label2:
        return r1;
    }

    public static int[] copyOfRange(int[], int, int)
    {
        int[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int getLength(int,int)>(i0, i1);

        r1 = newarray (int)[i2];

        $i3 = lengthof r0;

        $i4 = $i3 - i0;

        if $i4 >= i2 goto label1;

        $i5 = lengthof r0;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, i0, r1, 0, $i6);

        goto label2;

     label1:
        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, i0, r1, 0, i2);

     label2:
        return r1;
    }

    public static long[] copyOfRange(long[], int, int)
    {
        long[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int getLength(int,int)>(i0, i1);

        r1 = newarray (long)[i2];

        $i3 = lengthof r0;

        $i4 = $i3 - i0;

        if $i4 >= i2 goto label1;

        $i5 = lengthof r0;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, i0, r1, 0, $i6);

        goto label2;

     label1:
        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, i0, r1, 0, i2);

     label2:
        return r1;
    }

    public static java.math.BigInteger[] copyOfRange(java.math.BigInteger[], int, int)
    {
        java.math.BigInteger[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: java.math.BigInteger[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int getLength(int,int)>(i0, i1);

        r1 = newarray (java.math.BigInteger)[i2];

        $i3 = lengthof r0;

        $i4 = $i3 - i0;

        if $i4 >= i2 goto label1;

        $i5 = lengthof r0;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, r1, 0, $i6);

        goto label2;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, r1, 0, i2);

     label2:
        return r1;
    }

    private static int getLength(int, int)
    {
        int i0, i1, i2;
        java.lang.StringBuffer r0, $r1, $r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i1 - i0;

        if i2 >= 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(i0);

        r0 = $r1;

        $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" > ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        return i2;
    }

    public static byte[] append(byte[], byte)
    {
        byte[] r0, r1, $r2;
        byte b0;
        int i1, $i2;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        if r0 != null goto label1;

        $r2 = newarray (byte)[1];

        $r2[0] = b0;

        return $r2;

     label1:
        i1 = lengthof r0;

        $i2 = i1 + 1;

        r1 = newarray (byte)[$i2];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 0, i1);

        r1[i1] = b0;

        return r1;
    }

    public static int[] append(int[], int)
    {
        int[] r0, r1, $r2;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        return $r2;

     label1:
        i1 = lengthof r0;

        $i2 = i1 + 1;

        r1 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, 0, r1, 0, i1);

        r1[i1] = i0;

        return r1;
    }

    public static byte[] concatenate(byte[], byte[])
    {
        byte[] r0, r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 == null goto label1;

        if r1 == null goto label1;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        r2 = newarray (byte)[$i2];

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r2, 0, $i3);

        $i5 = lengthof r0;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r2, $i5, $i4);

        return r2;

     label1:
        if r1 == null goto label2;

        $r4 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>(r1);

        return $r4;

     label2:
        $r3 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>(r0);

        return $r3;
    }

    public static byte[] concatenate(byte[], byte[], byte[])
    {
        byte[] r0, r1, r2, r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        if r0 == null goto label1;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i3 = $i1 + $i0;

        $i2 = lengthof r2;

        $i4 = $i3 + $i2;

        r3 = newarray (byte)[$i4];

        $i5 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r3, 0, $i5);

        $i7 = lengthof r0;

        $i6 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r3, $i7, $i6);

        $i9 = lengthof r0;

        $i8 = lengthof r1;

        $i10 = $i9 + $i8;

        $i11 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, $i10, $i11);

        return r3;

     label1:
        if r1 != null goto label2;

        $r5 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] concatenate(byte[],byte[])>(r0, r2);

        return $r5;

     label2:
        $r4 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] concatenate(byte[],byte[])>(r0, r1);

        return $r4;
    }

    public static byte[] concatenate(byte[], byte[], byte[], byte[])
    {
        byte[] r0, r1, r2, r3, r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        r3 := @parameter3: byte[];

        if r0 == null goto label1;

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i3 = $i1 + $i0;

        $i2 = lengthof r2;

        $i5 = $i3 + $i2;

        $i4 = lengthof r3;

        $i6 = $i5 + $i4;

        r4 = newarray (byte)[$i6];

        $i8 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r4, 0, $i8);

        $i10 = lengthof r0;

        $i7 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r4, $i10, $i7);

        $i12 = lengthof r0;

        $i9 = lengthof r1;

        $i14 = $i12 + $i9;

        $i11 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r4, $i14, $i11);

        $i16 = lengthof r0;

        $i13 = lengthof r1;

        $i18 = $i16 + $i13;

        $i15 = lengthof r2;

        $i19 = $i18 + $i15;

        $i17 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r3, 0, r4, $i19, $i17);

        return r4;

     label1:
        if r3 != null goto label2;

        $r8 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] concatenate(byte[],byte[],byte[])>(r0, r1, r2);

        return $r8;

     label2:
        if r2 != null goto label3;

        $r7 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] concatenate(byte[],byte[],byte[])>(r0, r1, r3);

        return $r7;

     label3:
        if r1 != null goto label4;

        $r6 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] concatenate(byte[],byte[],byte[])>(r0, r2, r3);

        return $r6;

     label4:
        $r5 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] concatenate(byte[],byte[],byte[])>(r1, r2, r3);

        return $r5;
    }

    public static byte[] prepend(byte[], byte)
    {
        byte[] r0, r1, $r2;
        byte b0;
        int i1, $i2;

        r0 := @parameter0: byte[];

        b0 := @parameter1: byte;

        if r0 != null goto label1;

        $r2 = newarray (byte)[1];

        $r2[0] = b0;

        return $r2;

     label1:
        i1 = lengthof r0;

        $i2 = i1 + 1;

        r1 = newarray (byte)[$i2];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r1, 1, i1);

        r1[0] = b0;

        return r1;
    }
}
