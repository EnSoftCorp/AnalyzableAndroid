public class com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac extends java.lang.Object implements com.android.org.bouncycastle.crypto.Mac
{
    private byte[] mac;
    private byte[] buf;
    private int bufOff;
    private com.android.org.bouncycastle.crypto.BlockCipher cipher;
    private com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding;
    private int macSize;

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i1 = $i0 * 8;

        $i2 = $i1 / 2;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>(r1, $i2, null);

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher, com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        r2 := @parameter1: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i1 = $i0 * 8;

        $i2 = $i1 / 2;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>(r1, $i2, r2);

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher, int)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        int i0;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>(r1, i0, null);

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher, int, com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        int i0, $i1, $i2, $i3, $i4;
        com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding r2;
        com.android.org.bouncycastle.crypto.modes.CBCBlockCipher $r3;
        byte[] $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 % 8;

        if $i1 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MAC size must be multiple of 8");

        throw $r6;

     label1:
        $r3 = new com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        specialinvoke $r3.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher> = $r3;

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding> = r2;

        $i2 = i0 / 8;

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int macSize> = $i2;

        $i3 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r4 = newarray (byte)[$i3];

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac> = $r4;

        $i4 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r5 = newarray (byte)[$i4];

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf> = $r5;

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = 0;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;
        java.lang.String $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        $r1 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r2 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        return $r2;
    }

    public void init(com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        com.android.org.bouncycastle.crypto.CipherParameters r1;
        com.android.org.bouncycastle.crypto.BlockCipher $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.CipherParameters;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void reset()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r1);

        return;
    }

    public int getMacSize()
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        $i0 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int macSize>;

        return $i0;
    }

    public void update(byte)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        byte b0;
        byte[] $r1, $r2, $r3, $r4;
        int $i1, $i2, $i3, $i4;
        com.android.org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        b0 := @parameter0: byte;

        $i2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        $r1 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i1 = lengthof $r1;

        if $i2 != $i1 goto label1;

        $r5 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $r3 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = 0;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i3 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        $i4 = $i3 + 1;

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = $i4;

        $r2[$i3] = b0;

        return;
    }

    public void update(byte[], int, int)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        byte[] r1, $r3, $r4, $r5, $r7, $r8;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        com.android.org.bouncycastle.crypto.BlockCipher $r2, $r6, $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 >= 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r10;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        i2 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i4 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        i3 = i2 - $i4;

        if i1 <= i3 goto label3;

        $r4 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i8 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r4, $i8, i3);

        $r6 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r7 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac>;

        interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r7, 0, $r5, 0);

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = 0;

        i1 = i1 - i3;

        i0 = i0 + i3;

     label2:
        if i1 <= i2 goto label3;

        $r9 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r8 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac>;

        interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i0, $r8, 0);

        i1 = i1 - i2;

        i0 = i0 + i2;

        goto label2;

     label3:
        $r3 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i5 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r3, $i5, i1);

        $i6 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        $i7 = $i6 + i1;

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = $i7;

        return;
    }

    public int doFinal(byte[], int)
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        byte[] r1, $r4, $r6, $r7, $r9, $r10, $r12, $r13;
        int i0, i1, $i2, $i3, $i6, $i7, $i8, $i10, $i11, $i12;
        com.android.org.bouncycastle.crypto.BlockCipher $r2, $r8, $r11;
        com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding $r3, $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        i1 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r3 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        if $r3 != null goto label2;

     label1:
        $i8 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        if $i8 >= i1 goto label4;

        $r13 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i10 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        $r13[$i10] = 0;

        $i12 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        $i11 = $i12 + 1;

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = $i11;

        goto label1;

     label2:
        $i2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        if $i2 != i1 goto label3;

        $r11 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r12 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $r10 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac>;

        interfaceinvoke $r11.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r12, 0, $r10, 0);

        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = 0;

     label3:
        $r5 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        $r4 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i3 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding: int addPadding(byte[],int)>($r4, $i3);

     label4:
        $r8 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r7 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $r6 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac>;

        interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r7, 0, $r6, 0);

        $r9 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] mac>;

        $i6 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r9, 0, r1, i0, $i6);

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void reset()>();

        $i7 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int macSize>;

        return $i7;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r0;
        int i0, $i1;
        byte[] $r1, $r3;
        com.android.org.bouncycastle.crypto.BlockCipher $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        i0 = 0;

     label1:
        $r1 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r3 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: byte[] buf>;

        $r3[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: int bufOff> = 0;

        $r2 = r0.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }
}
