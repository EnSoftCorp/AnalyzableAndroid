public class com.android.org.bouncycastle.math.ec.ECAlgorithms extends java.lang.Object
{

    public void <init>()
    {
        com.android.org.bouncycastle.math.ec.ECAlgorithms r0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECAlgorithms;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECPoint r0, r2, $r6, $r7, $r8, $r9, r10;
        java.math.BigInteger r1, r3;
        com.android.org.bouncycastle.math.ec.ECCurve r4;
        com.android.org.bouncycastle.math.ec.ECCurve$F2m r5;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: com.android.org.bouncycastle.math.ec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        r10 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint importPoint(com.android.org.bouncycastle.math.ec.ECCurve,com.android.org.bouncycastle.math.ec.ECPoint)>(r4, r2);

        $z0 = r4 instanceof com.android.org.bouncycastle.math.ec.ECCurve$F2m;

        if $z0 == 0 goto label1;

        r5 = (com.android.org.bouncycastle.math.ec.ECCurve$F2m) r4;

        $z1 = virtualinvoke r5.<com.android.org.bouncycastle.math.ec.ECCurve$F2m: boolean isKoblitz()>();

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r1);

        $r8 = virtualinvoke r10.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r3);

        $r9 = virtualinvoke $r7.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>($r8);

        return $r9;

     label1:
        $r6 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint implShamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>(r0, r1, r10, r3);

        return $r6;
    }

    public static com.android.org.bouncycastle.math.ec.ECPoint shamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECPoint r0, r2, $r5, r6;
        java.math.BigInteger r1, r3;
        com.android.org.bouncycastle.math.ec.ECCurve r4;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: com.android.org.bouncycastle.math.ec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        r6 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint importPoint(com.android.org.bouncycastle.math.ec.ECCurve,com.android.org.bouncycastle.math.ec.ECPoint)>(r4, r2);

        $r5 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint implShamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>(r0, r1, r6, r3);

        return $r5;
    }

    public static com.android.org.bouncycastle.math.ec.ECPoint importPoint(com.android.org.bouncycastle.math.ec.ECCurve, com.android.org.bouncycastle.math.ec.ECPoint)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0, r2;
        com.android.org.bouncycastle.math.ec.ECPoint r1, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter1: com.android.org.bouncycastle.math.ec.ECPoint;

        r2 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Point must be on the same curve");

        throw $r4;

     label1:
        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint importPoint(com.android.org.bouncycastle.math.ec.ECPoint)>(r1);

        return $r3;
    }

    static void implMontgomeryTrick(com.android.org.bouncycastle.math.ec.ECFieldElement[], int, int)
    {
        com.android.org.bouncycastle.math.ec.ECFieldElement[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        com.android.org.bouncycastle.math.ec.ECFieldElement r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECFieldElement[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = newarray (com.android.org.bouncycastle.math.ec.ECFieldElement)[i1];

        $r4 = r0[i0];

        r1[0] = $r4;

        i2 = 0;

     label1:
        i2 = i2 + 1;

        if i2 >= i1 goto label2;

        $i5 = i2 - 1;

        $r10 = r1[$i5];

        $i6 = i0 + i2;

        $r8 = r0[$i6];

        $r9 = virtualinvoke $r10.<com.android.org.bouncycastle.math.ec.ECFieldElement: com.android.org.bouncycastle.math.ec.ECFieldElement multiply(com.android.org.bouncycastle.math.ec.ECFieldElement)>($r8);

        r1[i2] = $r9;

        goto label1;

     label2:
        i7 = i2 + -1;

        $r5 = r1[i7];

        r2 = virtualinvoke $r5.<com.android.org.bouncycastle.math.ec.ECFieldElement: com.android.org.bouncycastle.math.ec.ECFieldElement invert()>();

     label3:
        if i7 <= 0 goto label4;

        $i4 = i7;

        i7 = i7 + -1;

        i3 = i0 + $i4;

        r3 = r0[i3];

        $r6 = r1[i7];

        $r7 = virtualinvoke $r6.<com.android.org.bouncycastle.math.ec.ECFieldElement: com.android.org.bouncycastle.math.ec.ECFieldElement multiply(com.android.org.bouncycastle.math.ec.ECFieldElement)>(r2);

        r0[i3] = $r7;

        r2 = virtualinvoke r2.<com.android.org.bouncycastle.math.ec.ECFieldElement: com.android.org.bouncycastle.math.ec.ECFieldElement multiply(com.android.org.bouncycastle.math.ec.ECFieldElement)>(r3);

        goto label3;

     label4:
        r0[i0] = r2;

        return;
    }

    static com.android.org.bouncycastle.math.ec.ECPoint implShamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECPoint r0, r2, r5, r6, r7, r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        java.math.BigInteger r1, r3;
        com.android.org.bouncycastle.math.ec.ECCurve r4;
        com.android.org.bouncycastle.math.ec.ECPoint[] r8, r9, $r12, $r14;
        byte[] r10;
        int i0, i3, i4, $i5, $i6, $i7;
        byte b1, b2;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: com.android.org.bouncycastle.math.ec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        r5 = virtualinvoke r4.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        r6 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>(r2);

        r7 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint subtract(com.android.org.bouncycastle.math.ec.ECPoint)>(r2);

        $r12 = newarray (com.android.org.bouncycastle.math.ec.ECPoint)[4];

        $r12[0] = r2;

        $r12[1] = r7;

        $r12[2] = r0;

        $r12[3] = r6;

        r8 = $r12;

        virtualinvoke r4.<com.android.org.bouncycastle.math.ec.ECCurve: void normalizeAll(com.android.org.bouncycastle.math.ec.ECPoint[])>(r8);

        $r14 = newarray (com.android.org.bouncycastle.math.ec.ECPoint)[9];

        $r13 = r8[3];

        $r15 = virtualinvoke $r13.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint negate()>();

        $r14[0] = $r15;

        $r16 = r8[2];

        $r18 = virtualinvoke $r16.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint negate()>();

        $r14[1] = $r18;

        $r17 = r8[1];

        $r19 = virtualinvoke $r17.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint negate()>();

        $r14[2] = $r19;

        $r22 = r8[0];

        $r20 = virtualinvoke $r22.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint negate()>();

        $r14[3] = $r20;

        $r14[4] = r5;

        $r21 = r8[0];

        $r14[5] = $r21;

        $r24 = r8[1];

        $r14[6] = $r24;

        $r25 = r8[2];

        $r14[7] = $r25;

        $r23 = r8[3];

        $r14[8] = $r23;

        r9 = $r14;

        r10 = staticinvoke <com.android.org.bouncycastle.math.ec.WNafUtil: byte[] generateJSF(java.math.BigInteger,java.math.BigInteger)>(r1, r3);

        r11 = r5;

        i0 = lengthof r10;

     label1:
        i0 = i0 + -1;

        if i0 < 0 goto label2;

        b1 = r10[i0];

        b2 = b1 >> 4;

        $i6 = b1 << 28;

        i3 = $i6 >> 28;

        $i7 = b2 * 3;

        $i5 = 4 + $i7;

        i4 = $i5 + i3;

        $r26 = r9[i4];

        r11 = virtualinvoke r11.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint twicePlus(com.android.org.bouncycastle.math.ec.ECPoint)>($r26);

        goto label1;

     label2:
        return r11;
    }
}
