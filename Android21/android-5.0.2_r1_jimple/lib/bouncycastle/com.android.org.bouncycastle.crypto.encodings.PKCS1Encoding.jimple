public class com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding extends java.lang.Object implements com.android.org.bouncycastle.crypto.AsymmetricBlockCipher
{
    public static final java.lang.String STRICT_LENGTH_ENABLED_PROPERTY;
    private static final int HEADER_LENGTH;
    private java.security.SecureRandom random;
    private com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine;
    private boolean forEncryption;
    private boolean forPrivateKey;
    private boolean useStrictLength;

    public void <init>(com.android.org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine> = r1;

        $z0 = specialinvoke r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean useStrict()>();

        r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean useStrictLength> = $z0;

        return;
    }

    private boolean useStrict()
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        java.lang.String r1;
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding$1 $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r2 = new com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding$1;

        specialinvoke $r2.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding$1: void <init>(com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding)>(r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        r1 = (java.lang.String) $r3;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public com.android.org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher()
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r1 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        return $r1;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        boolean z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r7;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom r2;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter r3;
        java.security.SecureRandom $r4, $r6;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r2 = (com.android.org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random> = $r6;

        $r7 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        r3 = (com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r7;

        goto label2;

     label1:
        $r4 = new java.security.SecureRandom;

        specialinvoke $r4.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random> = $r4;

        r3 = (com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter) r1;

     label2:
        $r5 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        $z2 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey> = $z2;

        r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption> = z0;

        return;
    }

    public int getInputBlockSize()
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        int i0, $i1;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r1 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        i0 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $z0 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i1 = i0 - 10;

        return $i1;

     label1:
        return i0;
    }

    public int getOutputBlockSize()
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        int i0, $i1;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r1 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        i0 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

        $z0 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $i1 = i0 - 10;

        return $i1;
    }

    public byte[] processBlock(byte[], int, int) throws com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        byte[] r1, $r2, $r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>(r1, i0, i1);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] decodeBlock(byte[],int,int)>(r1, i0, i1);

        return $r2;
    }

    private byte[] encodeBlock(byte[], int, int) throws com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        byte[] r1, r2, $r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i19, i20;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r3, $r6;
        boolean $z0;
        java.security.SecureRandom $r4, $r7;
        byte $b14, $b15;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>();

        if i1 <= $i3 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("input data too large");

        throw $r8;

     label1:
        $r3 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i4 = interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        r2 = newarray (byte)[$i4];

        $z0 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey>;

        if $z0 == 0 goto label4;

        r2[0] = 1;

        i2 = 1;

     label2:
        $i18 = lengthof r2;

        $i17 = $i18 - i1;

        $i19 = $i17 - 1;

        if i2 == $i19 goto label3;

        r2[i2] = -1;

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label8;

     label4:
        $r4 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random>;

        virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>(r2);

        r2[0] = 2;

        i20 = 1;

     label5:
        $i5 = lengthof r2;

        $i6 = $i5 - i1;

        $i7 = $i6 - 1;

        if i20 == $i7 goto label8;

     label6:
        $b14 = r2[i20];

        if $b14 != 0 goto label7;

        $r7 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random>;

        $i16 = virtualinvoke $r7.<java.security.SecureRandom: int nextInt()>();

        $b15 = (byte) $i16;

        r2[i20] = $b15;

        goto label6;

     label7:
        i20 = i20 + 1;

        goto label5;

     label8:
        $i8 = lengthof r2;

        $i9 = $i8 - i1;

        $i11 = $i9 - 1;

        r2[$i11] = 0;

        $i10 = lengthof r2;

        $i13 = $i10 - i1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, r2, $i13, i1);

        $r6 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i12 = lengthof r2;

        $r5 = interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r2, 0, $i12);

        return $r5;
    }

    private byte[] decodeBlock(byte[], int, int) throws com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding r0;
        byte[] r1, r2, r16;
        int i0, i1, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        byte b2, b4;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException $r4, $r6, $r7, $r9, $r13, $r14, $r15;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        r2 = interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, i0, i1);

        $i5 = lengthof r2;

        $i6 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>();

        if $i5 >= $i6 goto label01;

        $r13 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r13.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("block truncated");

        throw $r13;

     label01:
        b2 = r2[0];

        $z0 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey>;

        if $z0 == 0 goto label02;

        if b2 == 2 goto label03;

        $r15 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("unknown block type");

        throw $r15;

     label02:
        if b2 == 1 goto label03;

        $r14 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r14.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("unknown block type");

        throw $r14;

     label03:
        if b2 != 1 goto label04;

        $z3 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey>;

        if $z3 != 0 goto label05;

     label04:
        if b2 != 2 goto label06;

        $z2 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean forPrivateKey>;

        if $z2 != 0 goto label06;

     label05:
        $r9 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid block type ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label06:
        $z1 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: boolean useStrictLength>;

        if $z1 == 0 goto label07;

        $i13 = lengthof r2;

        $r5 = r0.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher engine>;

        $i12 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

        if $i13 == $i12 goto label07;

        $r7 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r7.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("block incorrect size");

        throw $r7;

     label07:
        i3 = 1;

     label08:
        $i7 = lengthof r2;

        if i3 == $i7 goto label11;

        b4 = r2[i3];

        if b4 != 0 goto label09;

        goto label11;

     label09:
        if b2 != 1 goto label10;

        if b4 == -1 goto label10;

        $r6 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("block padding incorrect");

        throw $r6;

     label10:
        i3 = i3 + 1;

        goto label08;

     label11:
        i14 = i3 + 1;

        $i8 = lengthof r2;

        if i14 > $i8 goto label12;

        if i14 >= 10 goto label13;

     label12:
        $r4 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r4.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("no data in block");

        throw $r4;

     label13:
        $i9 = lengthof r2;

        $i11 = $i9 - i14;

        r16 = newarray (byte)[$i11];

        $i10 = lengthof r16;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, i14, r16, 0, $i10);

        return r16;
    }

    public static void <clinit>()
    {
        <com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: int HEADER_LENGTH> = 10;

        <com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: java.lang.String STRICT_LENGTH_ENABLED_PROPERTY> = "com.android.org.bouncycastle.pkcs1.strict";

        return;
    }
}
