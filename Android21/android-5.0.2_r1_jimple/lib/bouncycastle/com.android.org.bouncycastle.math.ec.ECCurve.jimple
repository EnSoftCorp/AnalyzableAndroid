public abstract class com.android.org.bouncycastle.math.ec.ECCurve extends java.lang.Object
{
    public static final int COORD_AFFINE;
    public static final int COORD_HOMOGENEOUS;
    public static final int COORD_JACOBIAN;
    public static final int COORD_JACOBIAN_CHUDNOVSKY;
    public static final int COORD_JACOBIAN_MODIFIED;
    public static final int COORD_LAMBDA_AFFINE;
    public static final int COORD_LAMBDA_PROJECTIVE;
    public static final int COORD_SKEWED;
    protected com.android.org.bouncycastle.math.ec.ECFieldElement a;
    protected com.android.org.bouncycastle.math.ec.ECFieldElement b;
    protected int coord;
    protected com.android.org.bouncycastle.math.ec.ECMultiplier multiplier;

    public void <init>()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.bouncycastle.math.ec.ECCurve: int coord> = 0;

        r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECMultiplier multiplier> = null;

        return;
    }

    public static int[] getAllCoordinateSystems()
    {
        int[] $r0;

        $r0 = newarray (int)[8];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 2;

        $r0[3] = 3;

        $r0[4] = 4;

        $r0[5] = 5;

        $r0[6] = 6;

        $r0[7] = 7;

        return $r0;
    }

    public abstract int getFieldSize();

    public abstract com.android.org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger);

    public com.android.org.bouncycastle.math.ec.ECCurve$Config configure()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECCurve$Config $r1;
        com.android.org.bouncycastle.math.ec.ECMultiplier $r2;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = new com.android.org.bouncycastle.math.ec.ECCurve$Config;

        $i0 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: int coord>;

        $r2 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECMultiplier multiplier>;

        specialinvoke $r1.<com.android.org.bouncycastle.math.ec.ECCurve$Config: void <init>(com.android.org.bouncycastle.math.ec.ECCurve,int,com.android.org.bouncycastle.math.ec.ECMultiplier)>(r0, $i0, $r2);

        return $r1;
    }

    public com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        java.math.BigInteger r1, r2;
        com.android.org.bouncycastle.math.ec.ECPoint $r3;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>(r1, r2, 0);

        return $r3;
    }

    public com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger, boolean)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        java.math.BigInteger r1, r2;
        boolean z0;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r3, $r4;
        com.android.org.bouncycastle.math.ec.ECPoint $r5;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>(r1);

        $r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>(r2);

        $r5 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint createRawPoint(com.android.org.bouncycastle.math.ec.ECFieldElement,com.android.org.bouncycastle.math.ec.ECFieldElement,boolean)>($r3, $r4, z0);

        return $r5;
    }

    protected abstract com.android.org.bouncycastle.math.ec.ECCurve cloneCurve();

    protected abstract com.android.org.bouncycastle.math.ec.ECPoint createRawPoint(com.android.org.bouncycastle.math.ec.ECFieldElement, com.android.org.bouncycastle.math.ec.ECFieldElement, boolean);

    protected com.android.org.bouncycastle.math.ec.ECMultiplier createDefaultMultiplier()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.WNafL2RMultiplier $r1;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = new com.android.org.bouncycastle.math.ec.WNafL2RMultiplier;

        specialinvoke $r1.<com.android.org.bouncycastle.math.ec.WNafL2RMultiplier: void <init>()>();

        return $r1;
    }

    public boolean supportsCoordinateSystem(int)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.android.org.bouncycastle.math.ec.PreCompInfo getPreCompInfo(com.android.org.bouncycastle.math.ec.ECPoint)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECPoint r1;
        com.android.org.bouncycastle.math.ec.PreCompInfo $r2;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: void checkPoint(com.android.org.bouncycastle.math.ec.ECPoint)>(r1);

        $r2 = r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.PreCompInfo preCompInfo>;

        return $r2;
    }

    public void setPreCompInfo(com.android.org.bouncycastle.math.ec.ECPoint, com.android.org.bouncycastle.math.ec.PreCompInfo)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECPoint r1;
        com.android.org.bouncycastle.math.ec.PreCompInfo r2;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r2 := @parameter1: com.android.org.bouncycastle.math.ec.PreCompInfo;

        virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: void checkPoint(com.android.org.bouncycastle.math.ec.ECPoint)>(r1);

        r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.PreCompInfo preCompInfo> = r2;

        return;
    }

    public com.android.org.bouncycastle.math.ec.ECPoint importPoint(com.android.org.bouncycastle.math.ec.ECPoint)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0, $r2;
        com.android.org.bouncycastle.math.ec.ECPoint r1, $r7, $r8, r9;
        boolean $z0, $z1;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r3, $r5;
        java.math.BigInteger $r4, $r6;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        $r2 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        if r0 != $r2 goto label1;

        return r1;

     label1:
        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        return $r8;

     label2:
        r9 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint normalize()>();

        $r3 = virtualinvoke r9.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getXCoord()>();

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r5 = virtualinvoke r9.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getYCoord()>();

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $z1 = r9.<com.android.org.bouncycastle.math.ec.ECPoint: boolean withCompression>;

        $r7 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>($r4, $r6, $z1);

        return $r7;
    }

    public void normalizeAll(com.android.org.bouncycastle.math.ec.ECPoint[])
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECPoint[] r1;
        com.android.org.bouncycastle.math.ec.ECFieldElement[] r2;
        int[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        com.android.org.bouncycastle.math.ec.ECPoint r4, $r6, $r7;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r5, $r8;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint[];

        virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: void checkPoints(com.android.org.bouncycastle.math.ec.ECPoint[])>(r1);

        $i2 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        if $i2 != 0 goto label1;

        return;

     label1:
        $i3 = lengthof r1;

        r2 = newarray (com.android.org.bouncycastle.math.ec.ECFieldElement)[$i3];

        $i4 = lengthof r1;

        r3 = newarray (int)[$i4];

        i0 = 0;

        i1 = 0;

     label2:
        $i5 = lengthof r1;

        if i1 >= $i5 goto label4;

        r4 = r1[i1];

        if null == r4 goto label3;

        $z0 = virtualinvoke r4.<com.android.org.bouncycastle.math.ec.ECPoint: boolean isNormalized()>();

        if $z0 != 0 goto label3;

        $r8 = virtualinvoke r4.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getZCoord(int)>(0);

        r2[i0] = $r8;

        $i6 = i0;

        i0 = i0 + 1;

        r3[$i6] = i1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if i0 != 0 goto label5;

        return;

     label5:
        staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: void implMontgomeryTrick(com.android.org.bouncycastle.math.ec.ECFieldElement[],int,int)>(r2, 0, i0);

        i7 = 0;

     label6:
        if i7 >= i0 goto label7;

        i8 = r3[i7];

        $r6 = r1[i8];

        $r5 = r2[i7];

        $r7 = virtualinvoke $r6.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint normalize(com.android.org.bouncycastle.math.ec.ECFieldElement)>($r5);

        r1[i8] = $r7;

        i7 = i7 + 1;

        goto label6;

     label7:
        return;
    }

    public abstract com.android.org.bouncycastle.math.ec.ECPoint getInfinity();

    public com.android.org.bouncycastle.math.ec.ECFieldElement getA()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r1;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECFieldElement a>;

        return $r1;
    }

    public com.android.org.bouncycastle.math.ec.ECFieldElement getB()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r1;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECFieldElement b>;

        return $r1;
    }

    public int getCoordinateSystem()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $i0 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: int coord>;

        return $i0;
    }

    protected abstract com.android.org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);

    public com.android.org.bouncycastle.math.ec.ECMultiplier getMultiplier()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECMultiplier $r1, $r2, $r3;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECMultiplier multiplier>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECMultiplier createDefaultMultiplier()>();

        r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECMultiplier multiplier> = $r3;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECMultiplier multiplier>;

        return $r2;
    }

    public com.android.org.bouncycastle.math.ec.ECPoint decodePoint(byte[])
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        byte[] r1;
        int i0, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        byte b1, $b4, $b12, $b13;
        java.math.BigInteger r2, r13, r14;
        java.lang.IllegalArgumentException $r3, $r4, $r5, $r7;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r10, $r11;
        com.android.org.bouncycastle.math.ec.ECPoint r12;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: byte[];

        $i2 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: int getFieldSize()>();

        $i3 = $i2 + 7;

        i0 = $i3 / 8;

        $b4 = r1[0];

        tableswitch($b4)
        {
            case 0: goto label1;
            case 1: goto label7;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label7;
            case 6: goto label5;
            case 7: goto label5;
            default: goto label7;
        };

     label1:
        $i5 = lengthof r1;

        if $i5 == 1 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect length for infinity encoding");

        throw $r3;

     label2:
        r12 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        goto label8;

     label3:
        $i10 = lengthof r1;

        $i11 = i0 + 1;

        if $i10 == $i11 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect length for compressed encoding");

        throw $r5;

     label4:
        $b12 = r1[0];

        b1 = $b12 & 1;

        r2 = staticinvoke <com.android.org.bouncycastle.util.BigIntegers: java.math.BigInteger fromUnsignedByteArray(byte[],int,int)>(r1, 1, i0);

        r12 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint decompressPoint(int,java.math.BigInteger)>(b1, r2);

        goto label8;

     label5:
        $i8 = lengthof r1;

        $i6 = 2 * i0;

        $i7 = $i6 + 1;

        if $i8 == $i7 goto label6;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect length for uncompressed/hybrid encoding");

        throw $r4;

     label6:
        r13 = staticinvoke <com.android.org.bouncycastle.util.BigIntegers: java.math.BigInteger fromUnsignedByteArray(byte[],int,int)>(r1, 1, i0);

        $i9 = 1 + i0;

        r14 = staticinvoke <com.android.org.bouncycastle.util.BigIntegers: java.math.BigInteger fromUnsignedByteArray(byte[],int,int)>(r1, $i9, i0);

        r12 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger)>(r13, r14);

        goto label8;

     label7:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid point encoding 0x");

        $b13 = r1[0];

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($b13, 16);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label8:
        return r12;
    }

    protected void checkPoint(com.android.org.bouncycastle.math.ec.ECPoint)
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0, $r3;
        com.android.org.bouncycastle.math.ec.ECPoint r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        if null == r1 goto label1;

        $r3 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        if r0 == $r3 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'point\' must be non-null and on this curve");

        throw $r2;

     label2:
        return;
    }

    protected void checkPoints(com.android.org.bouncycastle.math.ec.ECPoint[])
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0, $r3;
        com.android.org.bouncycastle.math.ec.ECPoint[] r1;
        int i0, $i1;
        com.android.org.bouncycastle.math.ec.ECPoint r2;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint[];

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'points\' cannot be null");

        throw $r5;

     label1:
        i0 = 0;

     label2:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label4;

        r2 = r1[i0];

        if null == r2 goto label3;

        $r3 = virtualinvoke r2.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        if r0 == $r3 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'points\' entries must be null or on this curve");

        throw $r4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_SKEWED> = 7;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_LAMBDA_PROJECTIVE> = 6;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_LAMBDA_AFFINE> = 5;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_JACOBIAN_MODIFIED> = 4;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_JACOBIAN_CHUDNOVSKY> = 3;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_JACOBIAN> = 2;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_HOMOGENEOUS> = 1;

        <com.android.org.bouncycastle.math.ec.ECCurve: int COORD_AFFINE> = 0;

        return;
    }
}
