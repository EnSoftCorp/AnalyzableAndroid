public class com.android.org.bouncycastle.asn1.ASN1InputStream extends java.io.FilterInputStream implements com.android.org.bouncycastle.asn1.BERTags
{
    private final int limit;
    private final boolean lazyEvaluate;
    private final byte[][] tmpBuffers;

    public void <init>(java.io.InputStream)
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        java.io.InputStream r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <com.android.org.bouncycastle.asn1.StreamUtil: int findLimit(java.io.InputStream)>(r1);

        specialinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int)>(r1, $i0);

        return;
    }

    public void <init>(byte[])
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $i0 = lengthof r1;

        specialinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int)>($r2, $i0);

        return;
    }

    public void <init>(byte[], boolean)
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        byte[] r1;
        boolean z0;
        java.io.ByteArrayInputStream $r2;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $i0 = lengthof r1;

        specialinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int,boolean)>($r2, $i0, z0);

        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        java.io.InputStream r1;
        int i0;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int,boolean)>(r1, i0, 0);

        return;
    }

    public void <init>(java.io.InputStream, boolean)
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        java.io.InputStream r1;
        boolean z0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $i0 = staticinvoke <com.android.org.bouncycastle.asn1.StreamUtil: int findLimit(java.io.InputStream)>(r1);

        specialinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,int,boolean)>(r1, $i0, z0);

        return;
    }

    public void <init>(java.io.InputStream, int, boolean)
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        java.io.InputStream r1;
        int i0;
        boolean z0;
        byte[][] $r2;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int limit> = i0;

        r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: boolean lazyEvaluate> = z0;

        $r2 = newarray (byte[])[11];

        r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: byte[][] tmpBuffers> = $r2;

        return;
    }

    int getLimit()
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        $i0 = r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int limit>;

        return $i0;
    }

    protected int readLength() throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        int $i0, $i1;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        $i0 = r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int limit>;

        $i1 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: int readLength(java.io.InputStream,int)>(r0, $i0);

        return $i1;
    }

    protected void readFully(byte[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        byte[] r1;
        int $i0, $i1;
        java.io.EOFException $r2;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: byte[];

        $i0 = staticinvoke <com.android.org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>(r0, r1);

        $i1 = lengthof r1;

        if $i0 == $i1 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>(java.lang.String)>("EOF encountered in middle of object");

        throw $r2;

     label1:
        return;
    }

    protected com.android.org.bouncycastle.asn1.ASN1Primitive buildObject(int, int, int) throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z1, $z2;
        com.android.org.bouncycastle.asn1.DefiniteLengthInputStream r1, $r4;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector r2, $r7, $r10, $r13;
        com.android.org.bouncycastle.asn1.ASN1OctetString[] r3;
        byte[][] $r5;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r6, $r27;
        com.android.org.bouncycastle.asn1.ASN1Set $r8;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r9;
        byte[] $r11, $r25;
        com.android.org.bouncycastle.asn1.LazyEncodedSequence $r12;
        com.android.org.bouncycastle.asn1.DERExternal $r14;
        com.android.org.bouncycastle.asn1.BEROctetString $r15;
        com.android.org.bouncycastle.asn1.ASN1OctetString $r16;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r17;
        java.lang.StringBuilder $r18, $r20, $r22, $r23;
        java.io.IOException $r19;
        java.lang.String $r21;
        com.android.org.bouncycastle.asn1.DERApplicationSpecific $r24;
        com.android.org.bouncycastle.asn1.ASN1StreamParser $r26;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = i0 & 32;

        if $i4 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $r4 = new com.android.org.bouncycastle.asn1.DefiniteLengthInputStream;

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: void <init>(java.io.InputStream,int)>(r0, i2);

        r1 = $r4;

        $i5 = i0 & 64;

        if $i5 == 0 goto label03;

        $r24 = new com.android.org.bouncycastle.asn1.DERApplicationSpecific;

        $r25 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r24.<com.android.org.bouncycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,byte[])>(z0, i1, $r25);

        return $r24;

     label03:
        $i6 = i0 & 128;

        if $i6 == 0 goto label04;

        $r26 = new com.android.org.bouncycastle.asn1.ASN1StreamParser;

        specialinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>(r1);

        $r27 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1StreamParser: com.android.org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)>(z0, i1);

        return $r27;

     label04:
        if z0 == 0 goto label13;

        lookupswitch(i1)
        {
            case 4: goto label05;
            case 8: goto label11;
            case 16: goto label08;
            case 17: goto label10;
            default: goto label12;
        };

     label05:
        r2 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream)>(r1);

        $i7 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: int size()>();

        r3 = newarray (com.android.org.bouncycastle.asn1.ASN1OctetString)[$i7];

        i3 = 0;

     label06:
        $i8 = lengthof r3;

        if i3 == $i8 goto label07;

        $r17 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: com.android.org.bouncycastle.asn1.ASN1Encodable get(int)>(i3);

        $r16 = (com.android.org.bouncycastle.asn1.ASN1OctetString) $r17;

        r3[i3] = $r16;

        i3 = i3 + 1;

        goto label06;

     label07:
        $r15 = new com.android.org.bouncycastle.asn1.BEROctetString;

        specialinvoke $r15.<com.android.org.bouncycastle.asn1.BEROctetString: void <init>(com.android.org.bouncycastle.asn1.ASN1OctetString[])>(r3);

        return $r15;

     label08:
        $z1 = r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: boolean lazyEvaluate>;

        if $z1 == 0 goto label09;

        $r12 = new com.android.org.bouncycastle.asn1.LazyEncodedSequence;

        $r11 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r12.<com.android.org.bouncycastle.asn1.LazyEncodedSequence: void <init>(byte[])>($r11);

        return $r12;

     label09:
        $r10 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream)>(r1);

        $r9 = staticinvoke <com.android.org.bouncycastle.asn1.DERFactory: com.android.org.bouncycastle.asn1.ASN1Sequence createSequence(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>($r10);

        return $r9;

     label10:
        $r7 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream)>(r1);

        $r8 = staticinvoke <com.android.org.bouncycastle.asn1.DERFactory: com.android.org.bouncycastle.asn1.ASN1Set createSet(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>($r7);

        return $r8;

     label11:
        $r14 = new com.android.org.bouncycastle.asn1.DERExternal;

        $r13 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream)>(r1);

        specialinvoke $r14.<com.android.org.bouncycastle.asn1.DERExternal: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>($r13);

        return $r14;

     label12:
        $r19 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown tag ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label13:
        $r5 = r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: byte[][] tmpBuffers>;

        $r6 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,com.android.org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>(i1, r1, $r5);

        return $r6;
    }

    com.android.org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector() throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector r1, $r3;
        com.android.org.bouncycastle.asn1.ASN1Primitive r2, $r4;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r3 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r1 = $r3;

     label1:
        $r4 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        r2 = $r4;

        if $r4 == null goto label2;

        virtualinvoke r1.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>(r2);

        goto label1;

     label2:
        return r1;
    }

    com.android.org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0, $r2;
        com.android.org.bouncycastle.asn1.DefiniteLengthInputStream r1;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector $r3;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.DefiniteLengthInputStream;

        $r2 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r2.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r1);

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector()>();

        return $r3;
    }

    public com.android.org.bouncycastle.asn1.ASN1Primitive readObject() throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.ASN1InputStream r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, $z1;
        com.android.org.bouncycastle.asn1.IndefiniteLengthInputStream r1, $r4;
        com.android.org.bouncycastle.asn1.ASN1StreamParser r2, $r5;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r3, $r6, $r8, $r10, $r12, $r17, $r19;
        com.android.org.bouncycastle.asn1.BERSetParser $r7;
        com.android.org.bouncycastle.asn1.BERSequenceParser $r9;
        com.android.org.bouncycastle.asn1.DERExternalParser $r11;
        com.android.org.bouncycastle.asn1.BEROctetStringParser $r13;
        com.android.org.bouncycastle.asn1.BERTaggedObjectParser $r14;
        java.io.IOException $r15, $r18, $r22;
        com.android.org.bouncycastle.asn1.BERApplicationSpecificParser $r16;
        java.lang.IllegalArgumentException $r20, r23;
        com.android.org.bouncycastle.asn1.ASN1Exception $r21;

        r0 := @this: com.android.org.bouncycastle.asn1.ASN1InputStream;

        i0 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int read()>();

        if i0 > 0 goto label02;

        if i0 != 0 goto label01;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("unexpected end-of-contents marker");

        throw $r22;

     label01:
        return null;

     label02:
        i1 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: int readTagNumber(java.io.InputStream,int)>(r0, i0);

        $i3 = i0 & 32;

        if $i3 == 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z0 = $z1;

        i2 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int readLength()>();

        if i2 >= 0 goto label13;

        if z0 != 0 goto label05;

        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("indefinite length primitive encoding encountered");

        throw $r18;

     label05:
        $r4 = new com.android.org.bouncycastle.asn1.IndefiniteLengthInputStream;

        $i4 = r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int limit>;

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.IndefiniteLengthInputStream: void <init>(java.io.InputStream,int)>(r0, $i4);

        r1 = $r4;

        $r5 = new com.android.org.bouncycastle.asn1.ASN1StreamParser;

        $i5 = r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: int limit>;

        specialinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream,int)>(r1, $i5);

        r2 = $r5;

        $i7 = i0 & 64;

        if $i7 == 0 goto label06;

        $r16 = new com.android.org.bouncycastle.asn1.BERApplicationSpecificParser;

        specialinvoke $r16.<com.android.org.bouncycastle.asn1.BERApplicationSpecificParser: void <init>(int,com.android.org.bouncycastle.asn1.ASN1StreamParser)>(i1, r2);

        $r19 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.BERApplicationSpecificParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>();

        return $r19;

     label06:
        $i6 = i0 & 128;

        if $i6 == 0 goto label07;

        $r14 = new com.android.org.bouncycastle.asn1.BERTaggedObjectParser;

        specialinvoke $r14.<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: void <init>(boolean,int,com.android.org.bouncycastle.asn1.ASN1StreamParser)>(1, i1, r2);

        $r17 = virtualinvoke $r14.<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>();

        return $r17;

     label07:
        lookupswitch(i1)
        {
            case 4: goto label08;
            case 8: goto label11;
            case 16: goto label09;
            case 17: goto label10;
            default: goto label12;
        };

     label08:
        $r13 = new com.android.org.bouncycastle.asn1.BEROctetStringParser;

        specialinvoke $r13.<com.android.org.bouncycastle.asn1.BEROctetStringParser: void <init>(com.android.org.bouncycastle.asn1.ASN1StreamParser)>(r2);

        $r12 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.BEROctetStringParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>();

        return $r12;

     label09:
        $r9 = new com.android.org.bouncycastle.asn1.BERSequenceParser;

        specialinvoke $r9.<com.android.org.bouncycastle.asn1.BERSequenceParser: void <init>(com.android.org.bouncycastle.asn1.ASN1StreamParser)>(r2);

        $r8 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.BERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>();

        return $r8;

     label10:
        $r7 = new com.android.org.bouncycastle.asn1.BERSetParser;

        specialinvoke $r7.<com.android.org.bouncycastle.asn1.BERSetParser: void <init>(com.android.org.bouncycastle.asn1.ASN1StreamParser)>(r2);

        $r6 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.BERSetParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>();

        return $r6;

     label11:
        $r11 = new com.android.org.bouncycastle.asn1.DERExternalParser;

        specialinvoke $r11.<com.android.org.bouncycastle.asn1.DERExternalParser: void <init>(com.android.org.bouncycastle.asn1.ASN1StreamParser)>(r2);

        $r10 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.DERExternalParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>();

        return $r10;

     label12:
        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("unknown BER object encountered");

        throw $r15;

     label13:
        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)>(i0, i1, i2);

     label14:
        return $r3;

     label15:
        $r20 := @caughtexception;

        r23 = $r20;

        $r21 = new com.android.org.bouncycastle.asn1.ASN1Exception;

        specialinvoke $r21.<com.android.org.bouncycastle.asn1.ASN1Exception: void <init>(java.lang.String,java.lang.Throwable)>("corrupted stream detected", r23);

        throw $r21;

        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
    }

    static int readTagNumber(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8;
        java.io.EOFException $r1;
        java.io.IOException $r2;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 = i0 & 31;

        if i1 != 31 goto label4;

        i7 = 0;

        i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = i2 & 127;

        if $i3 != 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("corrupted stream - invalid high tag number found");

        throw $r2;

     label1:
        if i2 < 0 goto label2;

        $i5 = i2 & 128;

        if $i5 == 0 goto label2;

        $i6 = i2 & 127;

        i8 = i7 | $i6;

        i7 = i8 << 7;

        i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        goto label1;

     label2:
        if i2 >= 0 goto label3;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>(java.lang.String)>("EOF found inside tag value.");

        throw $r1;

     label3:
        $i4 = i2 & 127;

        i1 = i7 | $i4;

     label4:
        return i1;
    }

    static int readLength(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, i2, i3, i4, $i5;
        java.io.IOException $r1, $r2, $r4;
        java.io.EOFException $r3, $r8;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r9;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if i1 >= 0 goto label1;

        $r8 = new java.io.EOFException;

        specialinvoke $r8.<java.io.EOFException: void <init>(java.lang.String)>("EOF found when length expected");

        throw $r8;

     label1:
        if i1 != 128 goto label2;

        return -1;

     label2:
        if i1 <= 127 goto label8;

        i2 = i1 & 127;

        if i2 <= 4 goto label3;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DER length more than 4 bytes: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        i1 = 0;

        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        i4 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if i4 >= 0 goto label5;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>("EOF found reading length");

        throw $r3;

     label5:
        $i5 = i1 << 8;

        i1 = $i5 + i4;

        i3 = i3 + 1;

        goto label4;

     label6:
        if i1 >= 0 goto label7;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("corrupted stream - negative length found");

        throw $r2;

     label7:
        if i1 < i0 goto label8;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("corrupted stream - out of bounds length found");

        throw $r1;

     label8:
        return i1;
    }

    private static byte[] getBuffer(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream, byte[][]) throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.DefiniteLengthInputStream r0;
        byte[][] r1;
        int i0, $i1, $i2;
        byte[] r2, $r3, $r4;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.DefiniteLengthInputStream;

        r1 := @parameter1: byte[][];

        i0 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int getRemaining()>();

        $i1 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int getRemaining()>();

        $i2 = lengthof r1;

        if $i1 >= $i2 goto label2;

        r2 = r1[i0];

        if r2 != null goto label1;

        $r4 = newarray (byte)[i0];

        r1[i0] = $r4;

        r2 = $r4;

     label1:
        staticinvoke <com.android.org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>(r0, r2);

        return r2;

     label2:
        $r3 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        return $r3;
    }

    private static char[] getBMPCharBuffer(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.asn1.DefiniteLengthInputStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        char[] r1;
        char $c9;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.DefiniteLengthInputStream;

        $i4 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int getRemaining()>();

        i0 = $i4 / 2;

        r1 = newarray (char)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        i2 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int read()>();

        if i2 >= 0 goto label2;

        goto label4;

     label2:
        i3 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int read()>();

        if i3 >= 0 goto label3;

        goto label4;

     label3:
        $i5 = i1;

        i1 = i1 + 1;

        $i7 = i2 << 8;

        $i6 = i3 & 255;

        $i8 = $i7 | $i6;

        $c9 = (char) $i8;

        r1[$i5] = $c9;

        goto label1;

     label4:
        return r1;
    }

    static com.android.org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int, com.android.org.bouncycastle.asn1.DefiniteLengthInputStream, byte[][]) throws java.io.IOException
    {
        int i0, $i1;
        com.android.org.bouncycastle.asn1.DefiniteLengthInputStream r0;
        byte[][] r1;
        com.android.org.bouncycastle.asn1.DERBitString $r2;
        com.android.org.bouncycastle.asn1.DERBMPString $r3;
        char[] $r4;
        com.android.org.bouncycastle.asn1.DERUniversalString $r5;
        byte[] $r6, $r8, $r10, $r12, $r15, $r17, $r19, $r21, $r23, $r24, $r25, $r26, $r31, $r33, $r36;
        com.android.org.bouncycastle.asn1.DERGeneralString $r7;
        com.android.org.bouncycastle.asn1.DERVisibleString $r9;
        com.android.org.bouncycastle.asn1.ASN1GeneralizedTime $r11;
        com.android.org.bouncycastle.asn1.ASN1UTCTime $r13;
        com.android.org.bouncycastle.asn1.DERIA5String $r14;
        com.android.org.bouncycastle.asn1.DERT61String $r16;
        com.android.org.bouncycastle.asn1.DERPrintableString $r18;
        com.android.org.bouncycastle.asn1.DERNumericString $r20;
        com.android.org.bouncycastle.asn1.DERUTF8String $r22;
        com.android.org.bouncycastle.asn1.ASN1Enumerated $r27;
        com.android.org.bouncycastle.asn1.DERNull $r28;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r29;
        com.android.org.bouncycastle.asn1.ASN1Integer $r30;
        com.android.org.bouncycastle.asn1.DEROctetString $r32;
        java.io.IOException $r34;
        java.lang.StringBuilder $r35, $r38, $r40, $r41;
        com.android.org.bouncycastle.asn1.ASN1Boolean $r37;
        java.lang.String $r39;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.org.bouncycastle.asn1.DefiniteLengthInputStream;

        r1 := @parameter2: byte[][];

        tableswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label01;
            case 4: goto label12;
            case 5: goto label09;
            case 6: goto label11;
            case 7: goto label19;
            case 8: goto label19;
            case 9: goto label19;
            case 10: goto label04;
            case 11: goto label19;
            case 12: goto label17;
            case 13: goto label19;
            case 14: goto label19;
            case 15: goto label19;
            case 16: goto label19;
            case 17: goto label19;
            case 18: goto label10;
            case 19: goto label13;
            case 20: goto label14;
            case 21: goto label19;
            case 22: goto label07;
            case 23: goto label16;
            case 24: goto label05;
            case 25: goto label19;
            case 26: goto label18;
            case 27: goto label06;
            case 28: goto label15;
            case 29: goto label19;
            case 30: goto label02;
            default: goto label19;
        };

     label01:
        $i1 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int getRemaining()>();

        $r2 = staticinvoke <com.android.org.bouncycastle.asn1.DERBitString: com.android.org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)>($i1, r0);

        return $r2;

     label02:
        $r3 = new com.android.org.bouncycastle.asn1.DERBMPString;

        $r4 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: char[] getBMPCharBuffer(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream)>(r0);

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.DERBMPString: void <init>(char[])>($r4);

        return $r3;

     label03:
        $r36 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: byte[] getBuffer(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>(r0, r1);

        $r37 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Boolean: com.android.org.bouncycastle.asn1.ASN1Boolean fromOctetString(byte[])>($r36);

        return $r37;

     label04:
        $r24 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: byte[] getBuffer(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>(r0, r1);

        $r27 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Enumerated: com.android.org.bouncycastle.asn1.ASN1Enumerated fromOctetString(byte[])>($r24);

        return $r27;

     label05:
        $r11 = new com.android.org.bouncycastle.asn1.ASN1GeneralizedTime;

        $r12 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r11.<com.android.org.bouncycastle.asn1.ASN1GeneralizedTime: void <init>(byte[])>($r12);

        return $r11;

     label06:
        $r7 = new com.android.org.bouncycastle.asn1.DERGeneralString;

        $r8 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r7.<com.android.org.bouncycastle.asn1.DERGeneralString: void <init>(byte[])>($r8);

        return $r7;

     label07:
        $r14 = new com.android.org.bouncycastle.asn1.DERIA5String;

        $r17 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r14.<com.android.org.bouncycastle.asn1.DERIA5String: void <init>(byte[])>($r17);

        return $r14;

     label08:
        $r30 = new com.android.org.bouncycastle.asn1.ASN1Integer;

        $r31 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r30.<com.android.org.bouncycastle.asn1.ASN1Integer: void <init>(byte[])>($r31);

        return $r30;

     label09:
        $r28 = <com.android.org.bouncycastle.asn1.DERNull: com.android.org.bouncycastle.asn1.DERNull INSTANCE>;

        return $r28;

     label10:
        $r20 = new com.android.org.bouncycastle.asn1.DERNumericString;

        $r23 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r20.<com.android.org.bouncycastle.asn1.DERNumericString: void <init>(byte[])>($r23);

        return $r20;

     label11:
        $r26 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1InputStream: byte[] getBuffer(com.android.org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])>(r0, r1);

        $r29 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier fromOctetString(byte[])>($r26);

        return $r29;

     label12:
        $r32 = new com.android.org.bouncycastle.asn1.DEROctetString;

        $r33 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r32.<com.android.org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r33);

        return $r32;

     label13:
        $r18 = new com.android.org.bouncycastle.asn1.DERPrintableString;

        $r21 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r18.<com.android.org.bouncycastle.asn1.DERPrintableString: void <init>(byte[])>($r21);

        return $r18;

     label14:
        $r16 = new com.android.org.bouncycastle.asn1.DERT61String;

        $r19 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r16.<com.android.org.bouncycastle.asn1.DERT61String: void <init>(byte[])>($r19);

        return $r16;

     label15:
        $r5 = new com.android.org.bouncycastle.asn1.DERUniversalString;

        $r6 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r5.<com.android.org.bouncycastle.asn1.DERUniversalString: void <init>(byte[])>($r6);

        return $r5;

     label16:
        $r13 = new com.android.org.bouncycastle.asn1.ASN1UTCTime;

        $r15 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1UTCTime: void <init>(byte[])>($r15);

        return $r13;

     label17:
        $r22 = new com.android.org.bouncycastle.asn1.DERUTF8String;

        $r25 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r22.<com.android.org.bouncycastle.asn1.DERUTF8String: void <init>(byte[])>($r25);

        return $r22;

     label18:
        $r9 = new com.android.org.bouncycastle.asn1.DERVisibleString;

        $r10 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>();

        specialinvoke $r9.<com.android.org.bouncycastle.asn1.DERVisibleString: void <init>(byte[])>($r10);

        return $r9;

     label19:
        $r34 = new java.io.IOException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown tag ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>($r39);

        throw $r34;
    }
}
