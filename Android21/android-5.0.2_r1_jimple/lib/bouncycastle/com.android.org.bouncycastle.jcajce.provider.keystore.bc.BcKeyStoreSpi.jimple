public class com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi extends java.security.KeyStoreSpi implements com.android.org.bouncycastle.jce.interfaces.BCKeyStore
{
    private static final int STORE_VERSION;
    private static final int STORE_SALT_SIZE;
    private static final java.lang.String STORE_CIPHER;
    private static final int KEY_SALT_SIZE;
    private static final int MIN_ITERATIONS;
    private static final java.lang.String KEY_CIPHER;
    static final int NULL;
    static final int CERTIFICATE;
    static final int KEY;
    static final int SECRET;
    static final int SEALED;
    static final int KEY_PRIVATE;
    static final int KEY_PUBLIC;
    static final int KEY_SECRET;
    protected java.util.Hashtable table;
    protected java.security.SecureRandom random;
    protected int version;

    public void <init>(int)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        int i0;
        java.util.Hashtable $r1;
        java.security.SecureRandom $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        i0 := @parameter0: int;

        specialinvoke r0.<java.security.KeyStoreSpi: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table> = $r1;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int version> = i0;

        return;
    }

    private void encodeCertificate(java.security.cert.Certificate, java.io.DataOutputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.security.cert.Certificate r1;
        java.io.DataOutputStream r2;
        byte[] r3;
        java.lang.String $r4, $r7;
        int $i0;
        java.security.cert.CertificateEncodingException $r5, r8;
        java.io.IOException $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.security.cert.Certificate;

        r2 := @parameter1: java.io.DataOutputStream;

     label1:
        r3 = virtualinvoke r1.<java.security.cert.Certificate: byte[] getEncoded()>();

        $r4 = virtualinvoke r1.<java.security.cert.Certificate: java.lang.String getType()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r4);

        $i0 = lengthof r3;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke r8.<java.security.cert.CertificateEncodingException: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        return;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }

    private java.security.cert.Certificate decodeCertificate(java.io.DataInputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.DataInputStream r1;
        java.lang.String r2, $r10, $r13;
        byte[] r3;
        java.security.cert.CertificateFactory r4;
        java.io.ByteArrayInputStream r5, $r6;
        int $i0;
        java.security.cert.Certificate $r7;
        java.security.NoSuchProviderException $r8, r14;
        java.io.IOException $r9, $r12;
        java.security.cert.CertificateException $r11, r15;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.io.DataInputStream;

        r2 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $i0 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        r3 = newarray (byte)[$i0];

        virtualinvoke r1.<java.io.DataInputStream: void readFully(byte[])>(r3);

     label1:
        r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>(r2, "BC");

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r3);

        r5 = $r6;

        $r7 = virtualinvoke r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r5);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r14 = $r8;

        $r9 = new java.io.IOException;

        $r10 = virtualinvoke r14.<java.security.NoSuchProviderException: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $r11 := @caughtexception;

        r15 = $r11;

        $r12 = new java.io.IOException;

        $r13 = virtualinvoke r15.<java.security.cert.CertificateException: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r12;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
        catch java.security.cert.CertificateException from label1 to label2 with label4;
    }

    private void encodeKey(java.security.Key, java.io.DataOutputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.security.Key r1;
        java.io.DataOutputStream r2;
        byte[] r3;
        boolean $z0, $z1;
        java.lang.String $r4, $r5;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.io.DataOutputStream;

        r3 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        $z0 = r1 instanceof java.security.PrivateKey;

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.io.DataOutputStream: void write(int)>(0);

        goto label3;

     label1:
        $z1 = r1 instanceof java.security.PublicKey;

        if $z1 == 0 goto label2;

        virtualinvoke r2.<java.io.DataOutputStream: void write(int)>(1);

        goto label3;

     label2:
        virtualinvoke r2.<java.io.DataOutputStream: void write(int)>(2);

     label3:
        $r4 = interfaceinvoke r1.<java.security.Key: java.lang.String getFormat()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<java.security.Key: java.lang.String getAlgorithm()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $i0 = lengthof r3;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>(r3);

        return;
    }

    private java.security.Key decodeKey(java.io.DataInputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.DataInputStream r1;
        int i0, $i1;
        java.lang.String r2, r3, $r18, $r28, $r30, $r34;
        byte[] r4;
        java.security.spec.EncodedKeySpec r5;
        java.lang.Exception r6, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.security.spec.PKCS8EncodedKeySpec $r7;
        java.security.KeyFactory $r8, $r13;
        java.security.PrivateKey $r9;
        javax.crypto.SecretKey $r10;
        javax.crypto.SecretKeyFactory $r11;
        java.security.PublicKey $r12;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r22, $r23, $r24, $r25, $r31, $r32, $r33;
        java.io.IOException $r15, $r21, $r27;
        java.security.spec.X509EncodedKeySpec $r20;
        javax.crypto.spec.SecretKeySpec $r29;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r1.<java.io.DataInputStream: int read()>();

        r2 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        r3 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        $i1 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        r4 = newarray (byte)[$i1];

        virtualinvoke r1.<java.io.DataInputStream: void readFully(byte[])>(r4);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS#8");

        if $z0 != 0 goto label01;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS8");

        if $z2 == 0 goto label02;

     label01:
        $r7 = new java.security.spec.PKCS8EncodedKeySpec;

        specialinvoke $r7.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>(r4);

        r5 = $r7;

        goto label06;

     label02:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("X.509");

        if $z1 != 0 goto label03;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("X509");

        if $z3 == 0 goto label04;

     label03:
        $r20 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke $r20.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>(r4);

        r5 = $r20;

        goto label06;

     label04:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("RAW");

        if $z4 == 0 goto label05;

        $r29 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, r3);

        return $r29;

     label05:
        $r21 = new java.io.IOException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key format ");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recognised!");

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r28);

        throw $r21;

     label06:
        tableswitch(i0)
        {
            case 0: goto label07;
            case 1: goto label09;
            case 2: goto label11;
            default: goto label13;
        };

     label07:
        $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(r3, "BC");

        $r9 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>(r5);

     label08:
        return $r9;

     label09:
        $r13 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(r3, "BC");

        $r12 = virtualinvoke $r13.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r5);

     label10:
        return $r12;

     label11:
        $r11 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(r3, "BC");

        $r10 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r5);

     label12:
        return $r10;

     label13:
        $r15 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key type ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recognised!");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label14:
        $r26 := @caughtexception;

        r6 = $r26;

        $r27 = new java.io.IOException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception creating key: ");

        $r30 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r34);

        throw $r27;

        catch java.lang.Exception from label06 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label14;
        catch java.lang.Exception from label13 to label14 with label14;
    }

    protected javax.crypto.Cipher makePBECipher(java.lang.String, int, char[], byte[], int) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1, $r16;
        int i0, i1;
        char[] r2;
        byte[] r3;
        javax.crypto.spec.PBEKeySpec r4, $r8;
        javax.crypto.SecretKeyFactory r5;
        javax.crypto.spec.PBEParameterSpec r6, $r9;
        javax.crypto.Cipher r7;
        javax.crypto.SecretKey $r10;
        java.lang.Exception $r11, r17;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.io.IOException $r13;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: char[];

        r3 := @parameter3: byte[];

        i1 := @parameter4: int;

     label1:
        $r8 = new javax.crypto.spec.PBEKeySpec;

        specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r2);

        r4 = $r8;

        r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(r1, "BC");

        $r9 = new javax.crypto.spec.PBEParameterSpec;

        specialinvoke $r9.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r3, i1);

        r6 = $r9;

        r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(r1, "BC");

        $r10 = virtualinvoke r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4);

        virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, $r10, r6);

     label2:
        return r7;

     label3:
        $r11 := @caughtexception;

        r17 = $r11;

        $r13 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error initialising store of key store: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r13;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setRandom(java.security.SecureRandom)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.security.SecureRandom r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random> = r1;

        return;
    }

    public java.util.Enumeration engineAliases()
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.util.Hashtable $r1;
        java.util.Enumeration $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r2;
    }

    public boolean engineContainsAlias(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void engineDeleteEntry(java.lang.String) throws java.security.KeyStoreException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Hashtable $r3, $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        r2 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.security.cert.Certificate engineGetCertificate(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r2;
        java.security.cert.Certificate[] r3;
        java.util.Hashtable $r4;
        java.lang.Object $r5, $r7;
        int $i0;
        java.security.cert.Certificate $r6, $r8;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r5;

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        if $i0 != 1 goto label1;

        $r7 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject()>();

        $r8 = (java.security.cert.Certificate) $r7;

        return $r8;

     label1:
        r3 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] getCertificateChain()>();

        if r3 == null goto label2;

        $r6 = r3[0];

        return $r6;

     label2:
        return null;
    }

    public java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.security.cert.Certificate r1, r4, $r8;
        java.util.Enumeration r2;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r3;
        java.util.Hashtable $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, $r7, $r10;
        java.lang.String $r9, $r11;
        java.security.cert.Certificate[] r12;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.security.cert.Certificate;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        r2 = virtualinvoke $r5.<java.util.Hashtable: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r6;

        $r7 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject()>();

        $z1 = $r7 instanceof java.security.cert.Certificate;

        if $z1 == 0 goto label3;

        $r10 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject()>();

        r4 = (java.security.cert.Certificate) $r10;

        $z3 = virtualinvoke r4.<java.security.cert.Certificate: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        $r11 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String getAlias()>();

        return $r11;

     label2:
        goto label4;

     label3:
        r12 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] getCertificateChain()>();

        if r12 == null goto label4;

        $r8 = r12[0];

        $z2 = virtualinvoke $r8.<java.security.cert.Certificate: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        $r9 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String getAlias()>();

        return $r9;

     label4:
        goto label1;

     label5:
        return null;
    }

    public java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        java.security.cert.Certificate[] $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] getCertificateChain()>();

        return $r5;

     label1:
        return null;
    }

    public java.util.Date engineGetCreationDate(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        java.util.Date $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date getDate()>();

        return $r5;

     label1:
        return null;
    }

    public java.security.Key engineGetKey(java.lang.String, char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        char[] r2;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r3;
        java.util.Hashtable $r4;
        java.lang.Object $r5, $r6;
        int $i0;
        java.security.Key $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r5;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        if $i0 != 1 goto label2;

     label1:
        return null;

     label2:
        $r6 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>(r2);

        $r7 = (java.security.Key) $r6;

        return $r7;
    }

    public boolean engineIsCertificateEntry(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r4;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean engineIsKeyEntry(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r4;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        if $i0 == 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1, $r13;
        java.security.cert.Certificate r2;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r3, $r6;
        java.util.Hashtable $r4, $r7;
        java.lang.Object $r5;
        int $i0;
        java.security.KeyStoreException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.cert.Certificate;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r5;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        if $i0 == 1 goto label1;

        $r9 = new java.security.KeyStoreException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key store already has a key entry with alias ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.KeyStoreException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r6 = new com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        specialinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.cert.Certificate)>(r0, r1, r2);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return;
    }

    public void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1;
        byte[] r2;
        java.security.cert.Certificate[] r3;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry $r4;
        java.util.Hashtable $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.security.cert.Certificate[];

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r4 = new com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        specialinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,byte[],java.security.cert.Certificate[])>(r0, r1, r2, r3);

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return;
    }

    public void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.lang.String r1, $r12;
        java.security.Key r2;
        char[] r3;
        java.security.cert.Certificate[] r4;
        java.lang.Exception r5, $r10;
        boolean $z0;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry $r6;
        java.util.Hashtable $r7;
        java.security.KeyStoreException $r9, $r11;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Key;

        r3 := @parameter2: char[];

        r4 := @parameter3: java.security.cert.Certificate[];

        $z0 = r2 instanceof java.security.PrivateKey;

        if $z0 == 0 goto label1;

        if r4 != null goto label1;

        $r9 = new java.security.KeyStoreException;

        specialinvoke $r9.<java.security.KeyStoreException: void <init>(java.lang.String)>("no certificate chain for private key");

        throw $r9;

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r6 = new com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        specialinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>(r0, r1, r2, r3, r4);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r5 = $r10;

        $r11 = new java.security.KeyStoreException;

        $r12 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r11.<java.security.KeyStoreException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int engineSize()
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.util.Hashtable $r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        return $i0;
    }

    protected void loadStore(java.io.InputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.InputStream r1;
        java.io.DataInputStream r2, $r8;
        int i0, i1, i2, $i4;
        java.lang.String r3;
        java.util.Date r4, $r9;
        java.security.cert.Certificate[] r5;
        java.security.Key r6;
        byte[] r7;
        long $l3;
        java.util.Hashtable $r10, $r15, $r18;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry $r11, $r13, $r16;
        java.security.cert.Certificate $r19, r21;
        java.lang.RuntimeException $r20;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.io.InputStream;

        $r8 = new java.io.DataInputStream;

        specialinvoke $r8.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = $r8;

        i0 = virtualinvoke r2.<java.io.DataInputStream: int read()>();

     label1:
        if i0 <= 0 goto label9;

        r3 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r9 = new java.util.Date;

        $l3 = virtualinvoke r2.<java.io.DataInputStream: long readLong()>();

        specialinvoke $r9.<java.util.Date: void <init>(long)>($l3);

        r4 = $r9;

        i1 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r5 = null;

        if i1 == 0 goto label3;

        r5 = newarray (java.security.cert.Certificate)[i1];

        i2 = 0;

     label2:
        if i2 == i1 goto label3;

        $r19 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.cert.Certificate decodeCertificate(java.io.DataInputStream)>(r2);

        r5[i2] = $r19;

        i2 = i2 + 1;

        goto label2;

     label3:
        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label6;
            default: goto label7;
        };

     label4:
        r21 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.cert.Certificate decodeCertificate(java.io.DataInputStream)>(r2);

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r11 = new com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        specialinvoke $r11.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.util.Date,int,java.lang.Object)>(r0, r3, r4, 1, r21);

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r11);

        goto label8;

     label5:
        r6 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.Key decodeKey(java.io.DataInputStream)>(r2);

        $r18 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r16 = new com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        specialinvoke $r16.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.util.Date,int,java.lang.Object,java.security.cert.Certificate[])>(r0, r3, r4, 2, r6, r5);

        virtualinvoke $r18.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r16);

        goto label8;

     label6:
        $i4 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r7 = newarray (byte)[$i4];

        virtualinvoke r2.<java.io.DataInputStream: void readFully(byte[])>(r7);

        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        $r13 = new com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        specialinvoke $r13.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.util.Date,int,java.lang.Object,java.security.cert.Certificate[])>(r0, r3, r4, i0, r7, r5);

        virtualinvoke $r15.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r13);

        goto label8;

     label7:
        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unknown object type in store.");

        throw $r20;

     label8:
        i0 = virtualinvoke r2.<java.io.DataInputStream: int read()>();

        goto label1;

     label9:
        return;
    }

    protected void saveStore(java.io.OutputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.OutputStream r1;
        java.util.Enumeration r2;
        java.io.DataOutputStream r3, $r7;
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r4;
        java.security.cert.Certificate[] r5;
        int i0, $i1, $i3, $i4, $i5, $i6;
        java.util.Hashtable $r6;
        boolean $z0;
        java.lang.Object $r8, $r12, $r14, $r15;
        java.lang.String $r9;
        java.util.Date $r10;
        long $l2;
        java.security.cert.Certificate $r11, $r18;
        byte[] $r13, r19;
        java.lang.RuntimeException $r16;
        java.security.Key $r17;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.io.OutputStream;

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        r2 = virtualinvoke $r6.<java.util.Hashtable: java.util.Enumeration elements()>();

        $r7 = new java.io.DataOutputStream;

        specialinvoke $r7.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        r3 = $r7;

     label01:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label10;

        $r8 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry) $r8;

        $i1 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        virtualinvoke r3.<java.io.DataOutputStream: void write(int)>($i1);

        $r9 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String getAlias()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r9);

        $r10 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date getDate()>();

        $l2 = virtualinvoke $r10.<java.util.Date: long getTime()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeLong(long)>($l2);

        r5 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] getCertificateChain()>();

        if r5 != null goto label02;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(0);

        goto label04;

     label02:
        $i3 = lengthof r5;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i3);

        i0 = 0;

     label03:
        $i5 = lengthof r5;

        if i0 == $i5 goto label04;

        $r18 = r5[i0];

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void encodeCertificate(java.security.cert.Certificate,java.io.DataOutputStream)>($r18, r3);

        i0 = i0 + 1;

        goto label03;

     label04:
        $i4 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int getType()>();

        tableswitch($i4)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label07;
            default: goto label08;
        };

     label05:
        $r12 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject()>();

        $r11 = (java.security.cert.Certificate) $r12;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void encodeCertificate(java.security.cert.Certificate,java.io.DataOutputStream)>($r11, r3);

        goto label09;

     label06:
        $r15 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject()>();

        $r17 = (java.security.Key) $r15;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void encodeKey(java.security.Key,java.io.DataOutputStream)>($r17, r3);

        goto label09;

     label07:
        $r14 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject()>();

        $r13 = (byte[]) $r14;

        r19 = (byte[]) $r13;

        $i6 = lengthof r19;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i6);

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r19);

        goto label09;

     label08:
        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unknown object type in store.");

        throw $r16;

     label09:
        goto label01;

     label10:
        virtualinvoke r3.<java.io.DataOutputStream: void write(int)>(0);

        return;
    }

    public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.InputStream r1;
        char[] r2;
        java.io.DataInputStream r3, $r13;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        byte[] r4, r6, r10, r11, r23;
        com.android.org.bouncycastle.crypto.macs.HMac r5, $r15;
        com.android.org.bouncycastle.crypto.generators.PKCS12ParametersGenerator r7, $r16;
        com.android.org.bouncycastle.crypto.CipherParameters r8;
        com.android.org.bouncycastle.crypto.io.MacInputStream r9, $r18;
        java.util.Hashtable $r12, $r19;
        com.android.org.bouncycastle.crypto.digests.SHA1Digest $r14, $r17;
        boolean $z0;
        java.io.IOException $r20, $r21, $r22;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: char[];

        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        virtualinvoke $r12.<java.util.Hashtable: void clear()>();

        if r1 != null goto label1;

        return;

     label1:
        $r13 = new java.io.DataInputStream;

        specialinvoke $r13.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r3 = $r13;

        i0 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if i0 == 2 goto label2;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("Wrong version of key store.");

        throw $r22;

     label2:
        i1 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if i1 > 0 goto label3;

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Invalid salt detected");

        throw $r20;

     label3:
        r4 = newarray (byte)[i1];

        virtualinvoke r3.<java.io.DataInputStream: void readFully(byte[])>(r4);

        i2 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        $r15 = new com.android.org.bouncycastle.crypto.macs.HMac;

        $r14 = new com.android.org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r14.<com.android.org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.macs.HMac: void <init>(com.android.org.bouncycastle.crypto.Digest)>($r14);

        r5 = $r15;

        if r2 == null goto label7;

        $i3 = lengthof r2;

        if $i3 == 0 goto label7;

        r6 = staticinvoke <com.android.org.bouncycastle.crypto.PBEParametersGenerator: byte[] PKCS12PasswordToBytes(char[])>(r2);

        $r16 = new com.android.org.bouncycastle.crypto.generators.PKCS12ParametersGenerator;

        $r17 = new com.android.org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r17.<com.android.org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r16.<com.android.org.bouncycastle.crypto.generators.PKCS12ParametersGenerator: void <init>(com.android.org.bouncycastle.crypto.Digest)>($r17);

        r7 = $r16;

        virtualinvoke r7.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: void init(byte[],byte[],int)>(r6, r4, i2);

        if i0 == 2 goto label4;

        $i10 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        r8 = virtualinvoke r7.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: com.android.org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)>($i10);

        goto label5;

     label4:
        $i5 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        $i6 = $i5 * 8;

        r8 = virtualinvoke r7.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: com.android.org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)>($i6);

     label5:
        staticinvoke <com.android.org.bouncycastle.util.Arrays: void fill(byte[],byte)>(r6, 0);

        virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: void init(com.android.org.bouncycastle.crypto.CipherParameters)>(r8);

        $r18 = new com.android.org.bouncycastle.crypto.io.MacInputStream;

        specialinvoke $r18.<com.android.org.bouncycastle.crypto.io.MacInputStream: void <init>(java.io.InputStream,com.android.org.bouncycastle.crypto.Mac)>(r3, r5);

        r9 = $r18;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void loadStore(java.io.InputStream)>(r9);

        $i7 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        r10 = newarray (byte)[$i7];

        virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int doFinal(byte[],int)>(r10, 0);

        $i9 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        r11 = newarray (byte)[$i9];

        virtualinvoke r3.<java.io.DataInputStream: void readFully(byte[])>(r11);

        $z0 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>(r10, r11);

        if $z0 != 0 goto label6;

        $r19 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.util.Hashtable table>;

        virtualinvoke $r19.<java.util.Hashtable: void clear()>();

        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("KeyStore integrity check failed.");

        throw $r21;

     label6:
        goto label8;

     label7:
        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void loadStore(java.io.InputStream)>(r3);

        $i4 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        r23 = newarray (byte)[$i4];

        virtualinvoke r3.<java.io.DataInputStream: void readFully(byte[])>(r23);

     label8:
        return;
    }

    public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.OutputStream r1;
        char[] r2;
        java.io.DataOutputStream r3, $r9;
        byte[] r4, r8, r20;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        com.android.org.bouncycastle.crypto.macs.HMac r5, $r12;
        com.android.org.bouncycastle.crypto.io.MacOutputStream r6, $r13;
        com.android.org.bouncycastle.crypto.generators.PKCS12ParametersGenerator r7, $r16;
        java.security.SecureRandom $r10, $r11;
        com.android.org.bouncycastle.crypto.digests.SHA1Digest $r14, $r15;
        com.android.org.bouncycastle.crypto.CipherParameters $r17, $r19;
        com.android.org.bouncycastle.util.io.TeeOutputStream $r18;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: char[];

        $r9 = new java.io.DataOutputStream;

        specialinvoke $r9.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        r3 = $r9;

        r4 = newarray (byte)[20];

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random>;

        $i2 = virtualinvoke $r10.<java.security.SecureRandom: int nextInt()>();

        $i3 = $i2 & 1023;

        i0 = 1024 + $i3;

        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random>;

        virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>(r4);

        $i4 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int version>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i4);

        $i5 = lengthof r4;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i5);

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r4);

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(i0);

        $r12 = new com.android.org.bouncycastle.crypto.macs.HMac;

        $r14 = new com.android.org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r14.<com.android.org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r12.<com.android.org.bouncycastle.crypto.macs.HMac: void <init>(com.android.org.bouncycastle.crypto.Digest)>($r14);

        r5 = $r12;

        $r13 = new com.android.org.bouncycastle.crypto.io.MacOutputStream;

        specialinvoke $r13.<com.android.org.bouncycastle.crypto.io.MacOutputStream: void <init>(com.android.org.bouncycastle.crypto.Mac)>(r5);

        r6 = $r13;

        $r16 = new com.android.org.bouncycastle.crypto.generators.PKCS12ParametersGenerator;

        $r15 = new com.android.org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r16.<com.android.org.bouncycastle.crypto.generators.PKCS12ParametersGenerator: void <init>(com.android.org.bouncycastle.crypto.Digest)>($r15);

        r7 = $r16;

        r8 = staticinvoke <com.android.org.bouncycastle.crypto.PBEParametersGenerator: byte[] PKCS12PasswordToBytes(char[])>(r2);

        virtualinvoke r7.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: void init(byte[],byte[],int)>(r8, r4, i0);

        $i6 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int version>;

        if $i6 >= 2 goto label1;

        $i12 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        $r19 = virtualinvoke r7.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: com.android.org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)>($i12);

        virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: void init(com.android.org.bouncycastle.crypto.CipherParameters)>($r19);

        goto label2;

     label1:
        $i8 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        $i7 = $i8 * 8;

        $r17 = virtualinvoke r7.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: com.android.org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)>($i7);

        virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: void init(com.android.org.bouncycastle.crypto.CipherParameters)>($r17);

     label2:
        i1 = 0;

     label3:
        $i9 = lengthof r8;

        if i1 == $i9 goto label4;

        r8[i1] = 0;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r18 = new com.android.org.bouncycastle.util.io.TeeOutputStream;

        specialinvoke $r18.<com.android.org.bouncycastle.util.io.TeeOutputStream: void <init>(java.io.OutputStream,java.io.OutputStream)>(r3, r6);

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void saveStore(java.io.OutputStream)>($r18);

        $i10 = virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int getMacSize()>();

        r20 = newarray (byte)[$i10];

        virtualinvoke r5.<com.android.org.bouncycastle.crypto.macs.HMac: int doFinal(byte[],int)>(r20, 0);

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r20);

        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

        return;
    }

    static void access$000(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.security.Key, java.io.DataOutputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.security.Key r1;
        java.io.DataOutputStream r2;

        r0 := @parameter0: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.io.DataOutputStream;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void encodeKey(java.security.Key,java.io.DataOutputStream)>(r1, r2);

        return;
    }

    static java.security.Key access$100(com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.io.DataInputStream) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi r0;
        java.io.DataInputStream r1;
        java.security.Key $r2;

        r0 := @parameter0: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        r1 := @parameter1: java.io.DataInputStream;

        $r2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.Key decodeKey(java.io.DataInputStream)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int KEY_SECRET> = 2;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int KEY_PUBLIC> = 1;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int KEY_PRIVATE> = 0;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int SEALED> = 4;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int SECRET> = 3;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int KEY> = 2;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int CERTIFICATE> = 1;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int NULL> = 0;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.lang.String KEY_CIPHER> = "PBEWithSHAAnd3-KeyTripleDES-CBC";

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int MIN_ITERATIONS> = 1024;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int KEY_SALT_SIZE> = 20;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.lang.String STORE_CIPHER> = "PBEWithSHAAndTwofish-CBC";

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int STORE_SALT_SIZE> = 20;

        <com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: int STORE_VERSION> = 2;

        return;
    }
}
