public class com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi extends java.security.KeyPairGenerator
{
    private static java.util.Hashtable params;
    private static java.lang.Object lock;
    com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param;
    com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine;
    int strength;
    int certainty;
    java.security.SecureRandom random;
    boolean initialised;

    public void <init>()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi r0;
        com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r1;
        java.security.SecureRandom $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi;

        specialinvoke r0.<java.security.KeyPairGenerator: void <init>(java.lang.String)>("DH");

        $r1 = new com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator;

        specialinvoke $r1.<com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine> = $r1;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int strength> = 1024;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int certainty> = 20;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.SecureRandom random> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: boolean initialised> = 0;

        return;
    }

    public void initialize(int, java.security.SecureRandom)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi r0;
        int i0;
        java.security.SecureRandom r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int strength> = i0;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.SecureRandom random> = r1;

        return;
    }

    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi r0;
        java.security.spec.AlgorithmParameterSpec r1;
        java.security.SecureRandom r2;
        javax.crypto.spec.DHParameterSpec r3;
        boolean $z0;
        com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters $r4, $r8;
        com.android.org.bouncycastle.crypto.params.DHParameters $r5;
        java.math.BigInteger $r6, $r7;
        int $i0;
        com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r9;
        java.security.InvalidAlgorithmParameterException $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi;

        r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r2 := @parameter1: java.security.SecureRandom;

        $z0 = r1 instanceof javax.crypto.spec.DHParameterSpec;

        if $z0 != 0 goto label1;

        $r10 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r10.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("parameter object not a DHParameterSpec");

        throw $r10;

     label1:
        r3 = (javax.crypto.spec.DHParameterSpec) r1;

        $r4 = new com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r5 = new com.android.org.bouncycastle.crypto.params.DHParameters;

        $r6 = virtualinvoke r3.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r7 = virtualinvoke r3.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $i0 = virtualinvoke r3.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r5.<com.android.org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r6, $r7, null, $i0);

        specialinvoke $r4.<com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,com.android.org.bouncycastle.crypto.params.DHParameters)>(r2, $r5);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r4;

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r9.<com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void init(com.android.org.bouncycastle.crypto.KeyGenerationParameters)>($r8);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: boolean initialised> = 1;

        return;
    }

    public java.security.KeyPair generateKeyPair()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi r0;
        java.lang.Integer r1;
        javax.crypto.spec.DHParameterSpec r2;
        java.lang.Object r3, $r14, $r25, $r37;
        com.android.org.bouncycastle.crypto.generators.DHParametersGenerator r4, $r17;
        java.lang.Throwable r5, $r35;
        boolean $z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator $r6, $r27;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter $r7, $r8;
        java.security.KeyPair $r9;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey $r10;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey $r11;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Hashtable $r12, $r15, $r23, $r28, $r33;
        com.android.org.bouncycastle.jcajce.provider.config.ProviderConfiguration $r13;
        java.security.SecureRandom $r16, $r18, $r29;
        com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters $r19, $r20, $r22, $r26, $r31, $r36;
        com.android.org.bouncycastle.crypto.params.DHParameters $r21, $r32;
        java.math.BigInteger $r30, $r34;
        com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair r38;
        com.android.org.bouncycastle.crypto.params.DHPublicKeyParameters r39;
        com.android.org.bouncycastle.crypto.params.DHPrivateKeyParameters r40;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi;

        $z0 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: boolean initialised>;

        if $z0 != 0 goto label10;

        $i0 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int strength>;

        r1 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>($i0);

        $r12 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.util.Hashtable params>;

        $z1 = virtualinvoke $r12.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label01;

        $r33 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.util.Hashtable params>;

        $r37 = virtualinvoke $r33.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r36 = (com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters) $r37;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r36;

        goto label09;

     label01:
        $r13 = <com.android.org.bouncycastle.jce.provider.BouncyCastleProvider: com.android.org.bouncycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        $i1 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int strength>;

        r2 = interfaceinvoke $r13.<com.android.org.bouncycastle.jcajce.provider.config.ProviderConfiguration: javax.crypto.spec.DHParameterSpec getDHDefaultParameters(int)>($i1);

        if r2 == null goto label02;

        $r31 = new com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r29 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.SecureRandom random>;

        $r32 = new com.android.org.bouncycastle.crypto.params.DHParameters;

        $r30 = virtualinvoke r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r34 = virtualinvoke r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $i4 = virtualinvoke r2.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r32.<com.android.org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r30, $r34, null, $i4);

        specialinvoke $r31.<com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,com.android.org.bouncycastle.crypto.params.DHParameters)>($r29, $r32);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r31;

        goto label09;

     label02:
        $r14 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.lang.Object lock>;

        r3 = $r14;

        entermonitor $r14;

     label03:
        $r15 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.util.Hashtable params>;

        $z2 = virtualinvoke $r15.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z2 == 0 goto label04;

        $r28 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.util.Hashtable params>;

        $r25 = virtualinvoke $r28.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r26 = (com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters) $r25;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r26;

        goto label05;

     label04:
        $r17 = new com.android.org.bouncycastle.crypto.generators.DHParametersGenerator;

        specialinvoke $r17.<com.android.org.bouncycastle.crypto.generators.DHParametersGenerator: void <init>()>();

        r4 = $r17;

        $i2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int strength>;

        $i3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: int certainty>;

        $r16 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.SecureRandom random>;

        virtualinvoke r4.<com.android.org.bouncycastle.crypto.generators.DHParametersGenerator: void init(int,int,java.security.SecureRandom)>($i2, $i3, $r16);

        $r19 = new com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters;

        $r18 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.SecureRandom random>;

        $r21 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.generators.DHParametersGenerator: com.android.org.bouncycastle.crypto.params.DHParameters generateParameters()>();

        specialinvoke $r19.<com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters: void <init>(java.security.SecureRandom,com.android.org.bouncycastle.crypto.params.DHParameters)>($r18, $r21);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param> = $r19;

        $r23 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.util.Hashtable params>;

        $r20 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r23.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r20);

     label05:
        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r35 := @caughtexception;

        r5 = $r35;

        exitmonitor r3;

     label08:
        throw r5;

     label09:
        $r27 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        $r22 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.params.DHKeyGenerationParameters param>;

        virtualinvoke $r27.<com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: void init(com.android.org.bouncycastle.crypto.KeyGenerationParameters)>($r22);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: boolean initialised> = 1;

     label10:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator engine>;

        r38 = virtualinvoke $r6.<com.android.org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator: com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r7 = virtualinvoke r38.<com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter getPublic()>();

        r39 = (com.android.org.bouncycastle.crypto.params.DHPublicKeyParameters) $r7;

        $r8 = virtualinvoke r38.<com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter getPrivate()>();

        r40 = (com.android.org.bouncycastle.crypto.params.DHPrivateKeyParameters) $r8;

        $r9 = new java.security.KeyPair;

        $r10 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey;

        specialinvoke $r10.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(com.android.org.bouncycastle.crypto.params.DHPublicKeyParameters)>(r39);

        $r11 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        specialinvoke $r11.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: void <init>(com.android.org.bouncycastle.crypto.params.DHPrivateKeyParameters)>(r40);

        specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r11);

        return $r9;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0;
        java.lang.Object $r1;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.util.Hashtable params> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.lang.Object lock> = $r1;

        return;
    }
}
