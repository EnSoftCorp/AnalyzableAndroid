public class com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory extends javax.crypto.SecretKeyFactorySpi implements com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE
{
    protected java.lang.String algName;
    protected com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier algOid;

    protected void <init>(java.lang.String, com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory r0;
        java.lang.String r1;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<javax.crypto.SecretKeyFactorySpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: java.lang.String algName> = r1;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier algOid> = r2;

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory r0;
        java.security.spec.KeySpec r1;
        boolean $z0;
        java.security.spec.InvalidKeySpecException $r2;
        javax.crypto.SecretKey $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof javax.crypto.spec.SecretKeySpec;

        if $z0 == 0 goto label1;

        $r3 = (javax.crypto.SecretKey) r1;

        return $r3;

     label1:
        $r2 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r2.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Invalid KeySpec");

        throw $r2;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory r0;
        javax.crypto.SecretKey r1;
        java.lang.Class r2, $r6;
        java.lang.Class[] r3, $r7;
        java.lang.reflect.Constructor r4;
        java.lang.Object[] r5;
        boolean $z0;
        byte[] $r8, $r12;
        java.lang.Object $r9;
        java.security.spec.KeySpec $r10;
        javax.crypto.spec.SecretKeySpec $r11;
        java.security.spec.InvalidKeySpecException $r13, $r16, $r18;
        java.lang.String $r14, $r17;
        java.lang.Exception $r15, r19;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory;

        r1 := @parameter0: javax.crypto.SecretKey;

        r2 := @parameter1: java.lang.Class;

        if r2 != null goto label1;

        $r16 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r16.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("keySpec parameter is null");

        throw $r16;

     label1:
        if r1 != null goto label2;

        $r13 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r13.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key parameter is null");

        throw $r13;

     label2:
        $r6 = class "javax/crypto/spec/SecretKeySpec";

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 == 0 goto label3;

        $r11 = new javax.crypto.spec.SecretKeySpec;

        $r12 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: java.lang.String algName>;

        specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14);

        return $r11;

     label3:
        $r7 = newarray (java.lang.Class)[1];

        $r7[0] = class "[B";

        r3 = $r7;

        r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r3);

        r5 = newarray (java.lang.Object)[1];

        $r8 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        r5[0] = $r8;

        $r9 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r5);

        $r10 = (java.security.spec.KeySpec) $r9;

     label4:
        return $r10;

     label5:
        $r15 := @caughtexception;

        r19 = $r15;

        $r18 = new java.security.spec.InvalidKeySpecException;

        $r17 = virtualinvoke r19.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r18.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r17);

        throw $r18;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory r0;
        javax.crypto.SecretKey r1;
        java.lang.String $r2, $r3, $r6, $r10, $r13;
        boolean $z0;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r5;
        java.security.InvalidKeyException $r7, $r14;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory;

        r1 := @parameter0: javax.crypto.SecretKey;

        if r1 != null goto label1;

        $r14 = new java.security.InvalidKeyException;

        specialinvoke $r14.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key parameter is null");

        throw $r14;

     label1:
        $r2 = interfaceinvoke r1.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: java.lang.String algName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label2;

        $r7 = new java.security.InvalidKeyException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key not of type ");

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: java.lang.String algName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label2:
        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: java.lang.String algName>;

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r6);

        return $r4;
    }
}
