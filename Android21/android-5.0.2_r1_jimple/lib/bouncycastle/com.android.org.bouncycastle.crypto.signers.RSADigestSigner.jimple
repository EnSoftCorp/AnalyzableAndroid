public class com.android.org.bouncycastle.crypto.signers.RSADigestSigner extends java.lang.Object implements com.android.org.bouncycastle.crypto.Signer
{
    private final com.android.org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine;
    private final com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier algId;
    private final com.android.org.bouncycastle.crypto.Digest digest;
    private boolean forSigning;
    private static final java.util.Hashtable oidMap;

    public void <init>(com.android.org.bouncycastle.crypto.Digest)
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        com.android.org.bouncycastle.crypto.Digest r1;
        java.util.Hashtable $r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        $r2 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r3 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier) $r4;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: void <init>(com.android.org.bouncycastle.crypto.Digest,com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>(r1, $r5);

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.Digest, com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        com.android.org.bouncycastle.crypto.Digest r1;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r2;
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding $r3;
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine $r4;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r5;
        com.android.org.bouncycastle.asn1.DERNull $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        r2 := @parameter1: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r4 = new com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r4.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        specialinvoke $r3.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: void <init>(com.android.org.bouncycastle.crypto.AsymmetricBlockCipher)>($r4);

        r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine> = $r3;

        r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest> = r1;

        $r5 = new com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r6 = <com.android.org.bouncycastle.asn1.DERNull: com.android.org.bouncycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r5.<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,com.android.org.bouncycastle.asn1.ASN1Encodable)>(r2, $r6);

        r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier algId> = $r5;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        com.android.org.bouncycastle.crypto.Digest $r2;
        java.lang.String $r3, $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        $r3 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("withRSA");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        boolean z0, $z1, $z2, $z3;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r7;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter r2;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r3;
        java.lang.IllegalArgumentException $r4, $r5;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: boolean forSigning> = z0;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        $r6 = (com.android.org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r7 = virtualinvoke $r6.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        r2 = (com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r7;

        goto label2;

     label1:
        r2 = (com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter) r1;

     label2:
        if z0 == 0 goto label3;

        $z3 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        if $z3 != 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("signing requires private key");

        throw $r5;

     label3:
        if z0 != 0 goto label4;

        $z2 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        if $z2 == 0 goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("verification requires public key");

        throw $r4;

     label4:
        virtualinvoke r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: void reset()>();

        $r3 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        return;
    }

    public void update(byte)
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        byte b0;
        com.android.org.bouncycastle.crypto.Digest $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        return;
    }

    public void update(byte[], int, int)
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        byte[] r1;
        int i0, i1;
        com.android.org.bouncycastle.crypto.Digest $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public byte[] generateSignature() throws com.android.org.bouncycastle.crypto.CryptoException, com.android.org.bouncycastle.crypto.DataLengthException
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        byte[] r1, r2, $r6;
        boolean $z0;
        com.android.org.bouncycastle.crypto.Digest $r3, $r4;
        int $i0, $i2;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        java.lang.IllegalStateException $r7;
        java.io.IOException $r8, r15;
        com.android.org.bouncycastle.crypto.CryptoException $r9;
        java.lang.StringBuilder $r10, $r12, $r14;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        $z0 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: boolean forSigning>;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSADigestSigner not initialised for signature generation.");

        throw $r7;

     label1:
        $r3 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r1 = newarray (byte)[$i0];

        $r4 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

     label2:
        r2 = specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: byte[] derEncode(byte[])>(r1);

        $r5 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine>;

        $i2 = lengthof r2;

        $r6 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r2, 0, $i2);

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        r15 = $r8;

        $r9 = new com.android.org.bouncycastle.crypto.CryptoException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to encode signature: ");

        $r11 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.android.org.bouncycastle.crypto.CryptoException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r15);

        throw $r9;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean verifySignature(byte[])
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        byte[] r1, r2, r3, r4;
        int i0, i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19, $i21, $i23, $i29, $i30, i32, i33;
        byte b1, $b16, $b18, $b20, $b22, $b24, $b25, $b26, $b27, $b28, $b31;
        boolean $z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.Digest $r6, $r7;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r8;
        java.lang.IllegalStateException $r9;
        java.lang.Exception $r10;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        r1 := @parameter0: byte[];

        $z0 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: boolean forSigning>;

        if $z0 == 0 goto label01;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSADigestSigner not initialised for verification");

        throw $r9;

     label01:
        $r6 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        $i3 = interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i3];

        $r7 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

     label02:
        $r8 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine>;

        $i5 = lengthof r1;

        r3 = interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r1, 0, $i5);

        r4 = specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: byte[] derEncode(byte[])>(r2);

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        return 0;

     label05:
        $i6 = lengthof r3;

        $i7 = lengthof r4;

        if $i6 != $i7 goto label06;

        $z2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>(r3, r4);

        return $z2;

     label06:
        $i11 = lengthof r3;

        $i9 = lengthof r4;

        $i8 = $i9 - 2;

        if $i11 != $i8 goto label13;

        $i13 = lengthof r3;

        $i10 = lengthof r2;

        $i12 = $i13 - $i10;

        i32 = $i12 - 2;

        $i14 = lengthof r4;

        $i15 = lengthof r2;

        $i17 = $i14 - $i15;

        i0 = $i17 - 2;

        $b16 = r4[1];

        $i19 = $b16 - 2;

        $b18 = (byte) $i19;

        r4[1] = $b18;

        $b22 = r4[3];

        $i23 = $b22 - 2;

        $b20 = (byte) $i23;

        r4[3] = $b20;

        b1 = 0;

        i2 = 0;

     label07:
        $i21 = lengthof r2;

        if i2 >= $i21 goto label08;

        $i29 = i32 + i2;

        $b28 = r3[$i29];

        $i30 = i0 + i2;

        $b27 = r4[$i30];

        $b31 = $b28 ^ $b27;

        b1 = b1 | $b31;

        i2 = i2 + 1;

        goto label07;

     label08:
        i33 = 0;

     label09:
        if i33 >= i32 goto label10;

        $b24 = r3[i33];

        $b26 = r4[i33];

        $b25 = $b24 ^ $b26;

        b1 = b1 | $b25;

        i33 = i33 + 1;

        goto label09;

     label10:
        if b1 != 0 goto label11;

        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        return $z1;

     label13:
        return 0;

        catch java.lang.Exception from label02 to label03 with label04;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        com.android.org.bouncycastle.crypto.Digest $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        $r1 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.Digest: void reset()>();

        return;
    }

    private byte[] derEncode(byte[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.crypto.signers.RSADigestSigner r0;
        byte[] r1, $r5;
        com.android.org.bouncycastle.asn1.x509.DigestInfo r2, $r3;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.RSADigestSigner;

        r1 := @parameter0: byte[];

        $r3 = new com.android.org.bouncycastle.asn1.x509.DigestInfo;

        $r4 = r0.<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier algId>;

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.x509.DigestInfo: void <init>(com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r4, r1);

        r2 = $r3;

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.x509.DigestInfo: byte[] getEncoded(java.lang.String)>("DER");

        return $r5;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r2, $r5, $r8, $r11, $r14, $r16;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r1, $r4, $r7, $r10, $r13, $r17;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap> = $r0;

        $r2 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r1 = <com.android.org.bouncycastle.asn1.x509.X509ObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_SHA1>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-1", $r1);

        $r5 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r4 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_sha224>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-224", $r4);

        $r8 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r7 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_sha256>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-256", $r7);

        $r11 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r10 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_sha384>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-384", $r10);

        $r14 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r13 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_sha512>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-512", $r13);

        $r16 = <com.android.org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r17 = <com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier md5>;

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("MD5", $r17);

        return;
    }
}
