public class com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher extends com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher implements com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE
{
    private static final java.lang.Class gcmSpecClass;
    private java.lang.Class[] availableSpecs;
    private com.android.org.bouncycastle.crypto.BlockCipher baseEngine;
    private com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider engineProvider;
    private com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher;
    private com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam;
    private com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams;
    private int ivLength;
    private boolean padded;
    private javax.crypto.spec.PBEParameterSpec pbeSpec;
    private java.lang.String pbeAlgorithm;
    private java.lang.String modeName;

    private static java.lang.Class lookup(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Class r1, $r2;
        java.lang.ClassLoader $r3;
        java.lang.Exception $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = class "com/android/org/bouncycastle/jcajce/provider/symmetric/util/BaseBlockCipher";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r1 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        $r3 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r2[2] = $r3;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = r1;

        $r4 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        specialinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r4;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider r1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        com.android.org.bouncycastle.crypto.BlockCipher $r4, $r6;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        $r3 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r2[2] = $r3;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        $r4 = interfaceinvoke r1.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider: com.android.org.bouncycastle.crypto.BlockCipher get()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = $r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider engineProvider> = r1;

        $r5 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r6 = interfaceinvoke r1.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BlockCipherProvider: com.android.org.bouncycastle.crypto.BlockCipher get()>();

        specialinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r6);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r5;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.modes.AEADBlockCipher)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.modes.AEADBlockCipher r1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        com.android.org.bouncycastle.crypto.BlockCipher $r4, $r5;
        int $i0;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.modes.AEADBlockCipher;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        $r3 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r2[2] = $r3;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        $r4 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.modes.AEADBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = $r4;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i0;

        $r6 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher;

        specialinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.modes.AEADBlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r6;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.BlockCipher, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        int i0, $i1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        $r3 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r2[2] = $r3;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = r1;

        $r4 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        specialinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r4;

        $i1 = i0 / 8;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i1;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BufferedBlockCipher r1;
        int i0, $i1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        com.android.org.bouncycastle.crypto.BlockCipher $r4;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher: void <init>()>();

        $r2 = newarray (java.lang.Class)[3];

        $r2[0] = class "javax/crypto/spec/IvParameterSpec";

        $r2[1] = class "javax/crypto/spec/PBEParameterSpec";

        $r3 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r2[2] = $r3;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = null;

        $r4 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine> = $r4;

        $r5 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        specialinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r5;

        $i1 = i0 / 8;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i1;

        return;
    }

    protected int engineGetBlockSize()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i0 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    protected byte[] engineGetIV()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        com.android.org.bouncycastle.crypto.params.AEADParameters $r1, $r5;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r2, $r3;
        byte[] $r4, $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams>;

        if $r1 == null goto label1;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams>;

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.crypto.params.AEADParameters: byte[] getNonce()>();

        return $r6;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.security.Key r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.security.Key;

        $r2 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        $i0 = lengthof $r2;

        $i1 = $i0 * 8;

        return $i1;
    }

    protected int engineGetOutputSize(int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0, $i1;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $i1 = interfaceinvoke $r1.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int getOutputSize(int)>(i0);

        return $i1;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.Exception r2, $r24, $r26, $r27, r33;
        java.security.AlgorithmParameters $r3, $r4, $r8, $r11, $r18, $r20, $r23, $r25;
        javax.crypto.spec.PBEParameterSpec $r5, $r22;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r6, $r17;
        com.android.org.bouncycastle.crypto.params.AEADParameters $r7, $r10, $r13;
        com.android.org.bouncycastle.asn1.cms.GCMParameters $r9;
        byte[] $r12, $r14, $r19;
        int $i0, $i1, $i2;
        com.android.org.bouncycastle.crypto.BlockCipher $r15;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r16;
        java.lang.String $r21, $r29, $r31, r32;
        java.lang.RuntimeException $r28, $r30;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        if $r3 != null goto label13;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        if $r5 == null goto label04;

     label01:
        $r21 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm>;

        $r23 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r21, "BC");

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = $r23;

        $r25 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        $r22 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec>;

        virtualinvoke $r25.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r22);

     label02:
        goto label13;

     label03:
        $r26 := @caughtexception;

        return null;

     label04:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r6 == null goto label09;

        $r16 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r15 = interfaceinvoke $r16.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        r32 = interfaceinvoke $r15.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i1 = virtualinvoke r32.<java.lang.String: int indexOf(int)>(47);

        if $i1 < 0 goto label05;

        $i2 = virtualinvoke r32.<java.lang.String: int indexOf(int)>(47);

        r32 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label05:
        $r18 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(r32, "BC");

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = $r18;

        $r20 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r19 = virtualinvoke $r17.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        virtualinvoke $r20.<java.security.AlgorithmParameters: void init(byte[])>($r19);

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

        r2 = $r27;

        $r30 = new java.lang.RuntimeException;

        $r31 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label08:
        goto label13;

     label09:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams>;

        if $r7 == null goto label13;

     label10:
        $r8 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("GCM", "BC");

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = $r8;

        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        $r9 = new com.android.org.bouncycastle.asn1.cms.GCMParameters;

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams>;

        $r12 = virtualinvoke $r10.<com.android.org.bouncycastle.crypto.params.AEADParameters: byte[] getNonce()>();

        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams>;

        $i0 = virtualinvoke $r13.<com.android.org.bouncycastle.crypto.params.AEADParameters: int getMacSize()>();

        specialinvoke $r9.<com.android.org.bouncycastle.asn1.cms.GCMParameters: void <init>(byte[],int)>($r12, $i0);

        $r14 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.cms.GCMParameters: byte[] getEncoded()>();

        virtualinvoke $r11.<java.security.AlgorithmParameters: void init(byte[])>($r14);

     label11:
        goto label13;

     label12:
        $r24 := @caughtexception;

        r33 = $r24;

        $r28 = new java.lang.RuntimeException;

        $r29 = virtualinvoke r33.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label13:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams>;

        return $r4;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    protected void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r16, $r32, $r40, $r41, $r47, $r54, $r55;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.security.NoSuchAlgorithmException $r12;
        com.android.org.bouncycastle.crypto.BlockCipher $r15, $r18, $r23, $r24, $r25, $r26, $r33, $r34, $r35, $r38, $r42, $r43, $r45, $r46, $r52, $r53, $r56, $r59;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher $r17, $r21;
        com.android.org.bouncycastle.crypto.modes.GCMBlockCipher $r19;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher $r20;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r22, $r31, $r37, $r39, $r48, $r50, $r57, $r58;
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher $r27;
        com.android.org.bouncycastle.crypto.modes.CBCBlockCipher $r28, $r60;
        com.android.org.bouncycastle.crypto.BufferedBlockCipher $r29;
        com.android.org.bouncycastle.crypto.modes.SICBlockCipher $r30;
        com.android.org.bouncycastle.crypto.modes.CFBBlockCipher $r36, $r44;
        com.android.org.bouncycastle.crypto.modes.OFBBlockCipher $r49, $r51;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName> = $r2;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z0 == 0 goto label01;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 0;

        $r57 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r56 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r57.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r56);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r57;

        goto label11;

     label01:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("CBC");

        if $z1 == 0 goto label02;

        $r53 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i12 = interfaceinvoke $r53.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i12;

        $r58 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r60 = new com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r59 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r60.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r59);

        specialinvoke $r58.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r60);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r58;

        goto label11;

     label02:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("OFB");

        if $z2 == 0 goto label04;

        $r42 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i8 = interfaceinvoke $r42.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i8;

        $r47 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $i10 = virtualinvoke $r47.<java.lang.String: int length()>();

        if $i10 == 3 goto label03;

        $r54 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $r55 = virtualinvoke $r54.<java.lang.String: java.lang.String substring(int)>(3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r55);

        $r50 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r51 = new com.android.org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r52 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r51.<com.android.org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r52, i0);

        specialinvoke $r50.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r51);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r50;

        goto label11;

     label03:
        $r48 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r49 = new com.android.org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r46 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r45 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i9 = interfaceinvoke $r45.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i11 = 8 * $i9;

        specialinvoke $r49.<com.android.org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r46, $i11);

        specialinvoke $r48.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r49);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r48;

        goto label11;

     label04:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("CFB");

        if $z3 == 0 goto label06;

        $r34 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i4 = interfaceinvoke $r34.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i4;

        $r32 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $i5 = virtualinvoke $r32.<java.lang.String: int length()>();

        if $i5 == 3 goto label05;

        $r41 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $r40 = virtualinvoke $r41.<java.lang.String: java.lang.String substring(int)>(3);

        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r40);

        $r39 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r44 = new com.android.org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r43 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r44.<com.android.org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r43, i13);

        specialinvoke $r39.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r44);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r39;

        goto label11;

     label05:
        $r37 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r36 = new com.android.org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r38 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r35 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i7 = interfaceinvoke $r35.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i6 = 8 * $i7;

        specialinvoke $r36.<com.android.org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r38, $i6);

        specialinvoke $r37.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r36);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r37;

        goto label11;

     label06:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z4 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("CTR");

        if $z4 == 0 goto label07;

        $r26 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i3 = interfaceinvoke $r26.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i3;

        $r31 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r29 = new com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        $r30 = new com.android.org.bouncycastle.crypto.modes.SICBlockCipher;

        $r33 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r30.<com.android.org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r33);

        specialinvoke $r29.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r30);

        specialinvoke $r31.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r29);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r31;

        goto label11;

     label07:
        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z5 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("CTS");

        if $z5 == 0 goto label08;

        $r24 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i2 = interfaceinvoke $r24.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i2;

        $r22 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r27 = new com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r28 = new com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r25 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r28.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r25);

        specialinvoke $r27.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r28);

        specialinvoke $r22.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r27);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r22;

        goto label11;

     label08:
        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z6 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("CCM");

        if $z6 == 0 goto label09;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = 13;

        $r21 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher;

        $r20 = new com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r20.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r23);

        specialinvoke $r21.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.modes.AEADBlockCipher)>($r20);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r21;

        goto label11;

     label09:
        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z7 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("GCM");

        if $z7 == 0 goto label10;

        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $i1 = interfaceinvoke $r15.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength> = $i1;

        $r17 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher;

        $r19 = new com.android.org.bouncycastle.crypto.modes.GCMBlockCipher;

        $r18 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        specialinvoke $r19.<com.android.org.bouncycastle.crypto.modes.GCMBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r18);

        specialinvoke $r17.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.modes.AEADBlockCipher)>($r19);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r17;

        goto label11;

     label10:
        $r12 = new java.security.NoSuchAlgorithmException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label11:
        return;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, r2, $r3, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher $r4, $r7, $r11, $r15, $r23, $r27, $r37, $r39;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r5, $r9, $r13, $r17, $r28, $r32, $r35, $r40, $r42;
        com.android.org.bouncycastle.crypto.BlockCipher $r6, $r8, $r12, $r16, $r29, $r33, $r34, $r41;
        com.android.org.bouncycastle.crypto.paddings.ISO10126d2Padding $r10;
        com.android.org.bouncycastle.crypto.paddings.X923Padding $r14;
        com.android.org.bouncycastle.crypto.paddings.ISO7816d4Padding $r18;
        java.lang.StringBuilder $r19, $r20, $r24, $r25;
        javax.crypto.NoSuchPaddingException $r21, $r31;
        com.android.org.bouncycastle.crypto.paddings.TBCPadding $r26;
        com.android.org.bouncycastle.crypto.paddings.ZeroBytePadding $r30;
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher $r36;
        com.android.org.bouncycastle.crypto.BufferedBlockCipher $r38;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label01;

        $r40 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $z13 = interfaceinvoke $r40.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: boolean wrapOnNoPadding()>();

        if $z13 == 0 goto label14;

        $r39 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r38 = new com.android.org.bouncycastle.crypto.BufferedBlockCipher;

        $r42 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r41 = interfaceinvoke $r42.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r38.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r41);

        specialinvoke $r39.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r38);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r39;

        goto label14;

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("WITHCTS");

        if $z1 == 0 goto label02;

        $r37 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r36 = new com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r35 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r34 = interfaceinvoke $r35.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r36.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r34);

        specialinvoke $r37.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BufferedBlockCipher)>($r36);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r37;

        goto label14;

     label02:
        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean padded> = 1;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean isAEADModeName(java.lang.String)>($r3);

        if $z2 == 0 goto label03;

        $r31 = new javax.crypto.NoSuchPaddingException;

        specialinvoke $r31.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>("Only NoPadding can be used with AEAD modes.");

        throw $r31;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS5PADDING");

        if $z3 != 0 goto label04;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS7PADDING");

        if $z4 == 0 goto label05;

     label04:
        $r4 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r6 = interfaceinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r6);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r4;

        goto label14;

     label05:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ZEROBYTEPADDING");

        if $z5 == 0 goto label06;

        $r27 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r32 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r33 = interfaceinvoke $r32.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r30 = new com.android.org.bouncycastle.crypto.paddings.ZeroBytePadding;

        specialinvoke $r30.<com.android.org.bouncycastle.crypto.paddings.ZeroBytePadding: void <init>()>();

        specialinvoke $r27.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r33, $r30);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r27;

        goto label14;

     label06:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126PADDING");

        if $z6 != 0 goto label07;

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126-2PADDING");

        if $z7 == 0 goto label08;

     label07:
        $r7 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r8 = interfaceinvoke $r9.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r10 = new com.android.org.bouncycastle.crypto.paddings.ISO10126d2Padding;

        specialinvoke $r10.<com.android.org.bouncycastle.crypto.paddings.ISO10126d2Padding: void <init>()>();

        specialinvoke $r7.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r8, $r10);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r7;

        goto label14;

     label08:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("X9.23PADDING");

        if $z8 != 0 goto label09;

        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("X923PADDING");

        if $z9 == 0 goto label10;

     label09:
        $r11 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r12 = interfaceinvoke $r13.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r14 = new com.android.org.bouncycastle.crypto.paddings.X923Padding;

        specialinvoke $r14.<com.android.org.bouncycastle.crypto.paddings.X923Padding: void <init>()>();

        specialinvoke $r11.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r12, $r14);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r11;

        goto label14;

     label10:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO7816-4PADDING");

        if $z10 != 0 goto label11;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO9797-1PADDING");

        if $z11 == 0 goto label12;

     label11:
        $r15 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r16 = interfaceinvoke $r17.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r18 = new com.android.org.bouncycastle.crypto.paddings.ISO7816d4Padding;

        specialinvoke $r18.<com.android.org.bouncycastle.crypto.paddings.ISO7816d4Padding: void <init>()>();

        specialinvoke $r15.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r16, $r18);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r15;

        goto label14;

     label12:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("TBCPADDING");

        if $z12 == 0 goto label13;

        $r23 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher;

        $r28 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r29 = interfaceinvoke $r28.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r26 = new com.android.org.bouncycastle.crypto.paddings.TBCPadding;

        specialinvoke $r26.<com.android.org.bouncycastle.crypto.paddings.TBCPadding: void <init>()>();

        specialinvoke $r23.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>($r29, $r26);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher> = $r23;

        goto label14;

     label13:
        $r21 = new javax.crypto.NoSuchPaddingException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Padding ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown.");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label14:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3, $r38, r95;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey r4;
        com.android.org.bouncycastle.crypto.CipherParameters r5, $r60;
        javax.crypto.spec.IvParameterSpec r6, r91;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.Class $r7, $r9, $r12, $r13;
        java.security.InvalidAlgorithmParameterException $r8, $r39, $r41, $r50, $r52, $r68, $r81, $r87;
        java.lang.String $r10, $r30, $r40, $r43, $r46, $r57, $r61, $r65, $r66, $r71, $r77, $r83, $r84, $r89;
        java.lang.Class[] $r11, $r14;
        com.android.org.bouncycastle.crypto.params.AEADParameters $r15;
        byte[] $r16, $r24, $r25, $r44, $r49, $r51, $r55, $r59, $r73, r96;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r17, $r45, $r48, $r64;
        java.lang.Object $r18, $r21;
        java.lang.Object[] $r19, $r22;
        java.lang.Integer $r20;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r23, $r28, $r35, $r42, $r69;
        java.lang.StringBuilder $r26, $r27, $r31, $r32, $r53, $r54, $r62, $r63, $r78, $r79, $r80, $r90;
        java.security.InvalidParameterException $r29;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom $r33;
        com.android.org.bouncycastle.crypto.BlockCipher $r34, $r67, $r72;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r36, $r37, $r47, $r56, $r75, $r76;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r58, $r74;
        javax.crypto.spec.PBEParameterSpec $r70;
        java.security.InvalidKeyException $r82, $r85;
        java.lang.Exception $r86, $r88, r97;
        java.lang.reflect.Method r92, r93;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter3: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = null;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams> = null;

        $z0 = r1 instanceof javax.crypto.SecretKey;

        if $z0 != 0 goto label01;

        $r82 = new java.security.InvalidKeyException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key for algorithm ");

        $r77 = interfaceinvoke r1.<java.security.Key: java.lang.String getAlgorithm()>();

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r90 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not suitable for symmetric enryption.");

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r82.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r89);

        throw $r82;

     label01:
        if r2 != null goto label02;

        $r72 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher baseEngine>;

        $r83 = interfaceinvoke $r72.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $z14 = virtualinvoke $r83.<java.lang.String: boolean startsWith(java.lang.String)>("RC5-64");

        if $z14 == 0 goto label02;

        $r81 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r81.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("RC5 requires an RC5ParametersSpec to be passed in.");

        throw $r81;

     label02:
        $z1 = r1 instanceof com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey;

        if $z1 == 0 goto label09;

        r4 = (com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey) r1;

        $r58 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()>();

        if $r58 == null goto label03;

        $r74 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getOID()>();

        $r71 = virtualinvoke $r74.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = $r71;

        goto label04;

     label03:
        $r61 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: java.lang.String getAlgorithm()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String pbeAlgorithm> = $r61;

     label04:
        $r60 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        if $r60 == null goto label05;

        r5 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        $z13 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z13 == 0 goto label07;

        r6 = (javax.crypto.spec.IvParameterSpec) r2;

        $r75 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r73 = virtualinvoke r6.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r75.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>(r5, $r73);

        r5 = $r75;

        goto label07;

     label05:
        $z12 = r2 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z12 == 0 goto label06;

        $r70 = (javax.crypto.spec.PBEParameterSpec) r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: javax.crypto.spec.PBEParameterSpec pbeSpec> = $r70;

        $r69 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r67 = interfaceinvoke $r69.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r66 = interfaceinvoke $r67.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        r5 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util: com.android.org.bouncycastle.crypto.CipherParameters makePBEParameters(com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)>(r4, r2, $r66);

        goto label07;

     label06:
        $r68 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r68.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("PBE requires PBE parameters to be set.");

        throw $r68;

     label07:
        $z11 = r5 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z11 == 0 goto label08;

        $r76 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r5;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r76;

     label08:
        goto label19;

     label09:
        if r2 != null goto label10;

        $r64 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r59 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r64.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r59);

        r5 = $r64;

        goto label19;

     label10:
        $z2 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z2 == 0 goto label14;

        $i5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i5 == 0 goto label12;

        r91 = (javax.crypto.spec.IvParameterSpec) r2;

        $r51 = virtualinvoke r91.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        $i6 = lengthof $r51;

        $i7 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i6 == $i7 goto label11;

        $r57 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z10 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean isAEADModeName(java.lang.String)>($r57);

        if $z10 != 0 goto label11;

        $r52 = new java.security.InvalidAlgorithmParameterException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV must be ");

        $i8 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        $r63 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes long.");

        $r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r65);

        throw $r52;

     label11:
        $r47 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r48 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r49 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r48.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r49);

        $r55 = virtualinvoke r91.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r47.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>($r48, $r55);

        r5 = $r47;

        $r56 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r5;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r56;

        goto label19;

     label12:
        $r46 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        if $r46 == null goto label13;

        $r43 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z9 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z9 == 0 goto label13;

        $r50 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r50.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ECB mode does not use an IV");

        throw $r50;

     label13:
        $r45 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r44 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r45.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r44);

        r5 = $r45;

        goto label19;

     label14:
        $r7 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        if $r7 == null goto label18;

        $r9 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $z3 = virtualinvoke $r9.<java.lang.Class: boolean isInstance(java.lang.Object)>(r2);

        if $z3 == 0 goto label18;

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.String modeName>;

        $z4 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean isAEADModeName(java.lang.String)>($r10);

        if $z4 != 0 goto label15;

        $r42 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $z8 = $r42 instanceof com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher;

        if $z8 != 0 goto label15;

        $r41 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r41.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("GCMParameterSpec can only be used with AEAD modes.");

        throw $r41;

     label15:
        $r12 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r11 = newarray (java.lang.Class)[0];

        r92 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getTLen", $r11);

        $r13 = <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass>;

        $r14 = newarray (java.lang.Class)[0];

        r93 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getIV", $r14);

        $r15 = new com.android.org.bouncycastle.crypto.params.AEADParameters;

        $r17 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r16 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r17.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r16);

        $r19 = newarray (java.lang.Object)[0];

        $r18 = virtualinvoke r92.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r19);

        $r20 = (java.lang.Integer) $r18;

        $i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $r22 = newarray (java.lang.Object)[0];

        $r21 = virtualinvoke r93.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r22);

        $r24 = (byte[]) $r21;

        $r25 = (byte[]) $r24;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.params.AEADParameters: void <init>(com.android.org.bouncycastle.crypto.params.KeyParameter,int,byte[])>($r17, $i1, $r25);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.AEADParameters aeadParams> = $r15;

        r5 = $r15;

     label16:
        goto label19;

     label17:
        $r88 := @caughtexception;

        $r87 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r87.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Cannot process GCMParameterSpec.");

        throw $r87;

     label18:
        $r8 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r8.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r8;

     label19:
        $i2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        if $i2 == 0 goto label23;

        $z7 = r5 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z7 != 0 goto label23;

        $z6 = r5 instanceof com.android.org.bouncycastle.crypto.params.AEADParameters;

        if $z6 != 0 goto label23;

        r95 = r3;

        if r95 != null goto label20;

        $r38 = new java.security.SecureRandom;

        specialinvoke $r38.<java.security.SecureRandom: void <init>()>();

        r95 = $r38;

     label20:
        if i0 == 1 goto label21;

        if i0 != 3 goto label22;

     label21:
        $i3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int ivLength>;

        r96 = newarray (byte)[$i3];

        virtualinvoke r95.<java.security.SecureRandom: void nextBytes(byte[])>(r96);

        $r37 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        specialinvoke $r37.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>(r5, r96);

        r5 = $r37;

        $r36 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r5;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r36;

        goto label23;

     label22:
        $r35 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $r34 = interfaceinvoke $r35.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r40 = interfaceinvoke $r34.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i4 = virtualinvoke $r40.<java.lang.String: int indexOf(java.lang.String)>("PGPCFB");

        if $i4 >= 0 goto label23;

        $r39 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r39.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("no IV set when one expected");

        throw $r39;

     label23:
        if r3 == null goto label24;

        $z5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: boolean padded>;

        if $z5 == 0 goto label24;

        $r33 = new com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        specialinvoke $r33.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r5, r3);

        r5 = $r33;

     label24:
        tableswitch(i0)
        {
            case 1: goto label25;
            case 2: goto label26;
            case 3: goto label25;
            case 4: goto label26;
            default: goto label27;
        };

     label25:
        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r23.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r5);

        goto label28;

     label26:
        $r28 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r28.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(0, r5);

        goto label28;

     label27:
        $r29 = new java.security.InvalidParameterException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown opmode ");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" passed");

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label28:
        goto label30;

     label29:
        $r86 := @caughtexception;

        r97 = $r86;

        $r85 = new java.security.InvalidKeyException;

        $r84 = virtualinvoke r97.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r85.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r84);

        throw $r85;

     label30:
        return;

        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label24 to label28 with label29;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0, i1, $i2;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.security.SecureRandom r3;
        java.security.spec.AlgorithmParameterSpec r4;
        java.lang.Class[] $r6, $r14, $r16;
        java.security.InvalidAlgorithmParameterException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        java.lang.Class $r13, $r15;
        java.lang.Exception $r17;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        r4 = null;

        if r2 == null goto label7;

        i1 = 0;

     label1:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs>;

        $i2 = lengthof $r6;

        if i1 == $i2 goto label6;

        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs>;

        $r13 = $r14[i1];

        if $r13 != null goto label2;

        goto label5;

     label2:
        $r16 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class[] availableSpecs>;

        $r15 = $r16[i1];

        r4 = virtualinvoke r2.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>($r15);

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        if r4 != null goto label7;

        $r7 = new java.security.InvalidAlgorithmParameterException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t handle parameter ");

        $r10 = virtualinvoke r2.<java.security.AlgorithmParameters: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label7:
        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, r4, r3);

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.security.AlgorithmParameters engineParams> = r2;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        int i0;
        java.security.Key r1;
        java.security.SecureRandom r2;
        java.security.InvalidAlgorithmParameterException r3, $r5;
        java.security.spec.AlgorithmParameterSpec $r4;
        java.security.InvalidKeyException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

     label1:
        $r4 = (java.security.spec.AlgorithmParameterSpec) null;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, $r4, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.security.InvalidKeyException;

        $r7 = virtualinvoke r3.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected void engineUpdateAAD(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1;
        int i0, i1;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: void updateAAD(byte[],int,int)>(r1, i0, i1);

        return;
    }

    protected void engineUpdateAAD(java.nio.ByteBuffer)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.nio.ByteBuffer r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        byte[] $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.nio.ByteBuffer;

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        i0 = $i2 + $i3;

        $i4 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i5 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        i1 = $i4 - $i5;

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: void engineUpdateAAD(byte[],int,int)>($r2, i0, i1);

        return;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2, r3;
        int i0, i1, i2, i3, $i5;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r4, $r5, $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i2 = interfaceinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int getUpdateOutputSize(int)>(i1);

        if i2 <= 0 goto label3;

        r2 = newarray (byte)[i2];

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i3 = interfaceinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, 0);

        if i3 != 0 goto label1;

        return null;

     label1:
        $i5 = lengthof r2;

        if i3 == $i5 goto label2;

        r3 = newarray (byte)[i3];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, 0, i3);

        return r3;

     label2:
        return r2;

     label3:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, null, 0);

        return null;
    }

    protected int engineUpdate(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2, $i3;
        com.android.org.bouncycastle.crypto.DataLengthException r3, $r5;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r4;
        javax.crypto.ShortBufferException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $i3 = interfaceinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

     label2:
        return $i3;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new javax.crypto.ShortBufferException;

        $r7 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke $r6.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2, r13;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        com.android.org.bouncycastle.crypto.DataLengthException r3, $r6;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r4, $r5;
        javax.crypto.IllegalBlockSizeException $r7;
        java.lang.String $r8, $r11;
        javax.crypto.BadPaddingException $r9;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException $r10, r12;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        $i3 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: int engineGetOutputSize(int)>(i1);

        r2 = newarray (byte)[$i3];

        if i1 == 0 goto label1;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i2 = interfaceinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, 0);

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $i4 = interfaceinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int doFinal(byte[],int)>(r2, i2);

        i6 = i2 + $i4;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new javax.crypto.IllegalBlockSizeException;

        $r8 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke $r7.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r10 := @caughtexception;

        r12 = $r10;

        $r9 = new javax.crypto.BadPaddingException;

        $r11 = virtualinvoke r12.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r9.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label5:
        $i5 = lengthof r2;

        if i6 != $i5 goto label6;

        return r2;

     label6:
        r13 = newarray (byte)[i6];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r13, 0, i6);

        return r13;

        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label4;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException, javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher $r3, $r4;
        com.android.org.bouncycastle.crypto.OutputLengthException $r5, r14;
        javax.crypto.ShortBufferException $r6;
        java.lang.String $r7, $r11, $r12;
        javax.crypto.IllegalBlockSizeException $r8;
        com.android.org.bouncycastle.crypto.DataLengthException $r9, r15;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException $r10, r16;
        javax.crypto.BadPaddingException $r13;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

     label1:
        i3 = 0;

        if i1 == 0 goto label2;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        i3 = interfaceinvoke $r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

     label2:
        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher cipher>;

        $i4 = i2 + i3;

        $i5 = interfaceinvoke $r3.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$GenericBlockCipher: int doFinal(byte[],int)>(r2, $i4);

        $i6 = i3 + $i5;

     label3:
        return $i6;

     label4:
        $r5 := @caughtexception;

        r14 = $r5;

        $r6 = new javax.crypto.ShortBufferException;

        $r7 = virtualinvoke r14.<com.android.org.bouncycastle.crypto.OutputLengthException: java.lang.String getMessage()>();

        specialinvoke $r6.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label5:
        $r9 := @caughtexception;

        r15 = $r9;

        $r8 = new javax.crypto.IllegalBlockSizeException;

        $r11 = virtualinvoke r15.<com.android.org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke $r8.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label6:
        $r10 := @caughtexception;

        r16 = $r10;

        $r13 = new javax.crypto.BadPaddingException;

        $r12 = virtualinvoke r16.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r13.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r12);

        throw $r13;

        catch com.android.org.bouncycastle.crypto.OutputLengthException from label1 to label3 with label4;
        catch com.android.org.bouncycastle.crypto.DataLengthException from label1 to label3 with label5;
        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label1 to label3 with label6;
    }

    private boolean isAEADModeName(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        r1 := @parameter0: java.lang.String;

        $r2 = "CCM";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = "GCM";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class lookup(java.lang.String)>("javax.crypto.spec.GCMParameterSpec");

        <com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher: java.lang.Class gcmSpecClass> = $r0;

        return;
    }
}
