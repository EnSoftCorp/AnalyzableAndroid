public class com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement extends java.lang.Object implements com.android.org.bouncycastle.crypto.BasicAgreement
{
    private com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters key;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement r0;

        r0 := @this: com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement r0;
        com.android.org.bouncycastle.crypto.CipherParameters r1;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.CipherParameters;

        $r2 = (com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement: com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters key> = $r2;

        return;
    }

    public int getFieldSize()
    {
        com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement r0;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r1;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r2;
        com.android.org.bouncycastle.math.ec.ECCurve $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement;

        $r1 = r0.<com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement: com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters key>;

        $r2 = virtualinvoke $r1.<com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        $i0 = virtualinvoke $r3.<com.android.org.bouncycastle.math.ec.ECCurve: int getFieldSize()>();

        $i1 = $i0 + 7;

        $i2 = $i1 / 8;

        return $i2;
    }

    public java.math.BigInteger calculateAgreement(com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement r0;
        com.android.org.bouncycastle.crypto.CipherParameters r1;
        com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters r2;
        com.android.org.bouncycastle.math.ec.ECPoint r3, $r4, $r7;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r5;
        java.math.BigInteger $r6, $r9;
        boolean $z0;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.CipherParameters;

        r2 = (com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters) r1;

        $r4 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters: com.android.org.bouncycastle.math.ec.ECPoint getQ()>();

        $r5 = r0.<com.android.org.bouncycastle.crypto.agreement.ECDHBasicAgreement: com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters key>;

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        $r7 = virtualinvoke $r4.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>($r6);

        r3 = virtualinvoke $r7.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint normalize()>();

        $z0 = virtualinvoke r3.<com.android.org.bouncycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Infinity is not a valid agreement value for ECDH");

        throw $r10;

     label1:
        $r8 = virtualinvoke r3.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r9 = virtualinvoke $r8.<com.android.org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        return $r9;
    }
}
