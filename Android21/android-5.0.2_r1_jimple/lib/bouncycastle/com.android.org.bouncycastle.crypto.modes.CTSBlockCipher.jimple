public class com.android.org.bouncycastle.crypto.modes.CTSBlockCipher extends com.android.org.bouncycastle.crypto.BufferedBlockCipher
{
    private int blockSize;

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1, $i2;
        byte[] $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>()>();

        $z0 = r1 instanceof com.android.org.bouncycastle.crypto.modes.OFBBlockCipher;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.modes.CFBBlockCipher;

        if $z1 != 0 goto label1;

        $z2 = r1 instanceof com.android.org.bouncycastle.crypto.modes.SICBlockCipher;

        if $z2 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CTSBlockCipher can only accept ECB, or CBC ciphers");

        throw $r2;

     label2:
        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int blockSize> = $i0;

        $i1 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int blockSize>;

        $i2 = $i1 * 2;

        $r3 = newarray (byte)[$i2];

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf> = $r3;

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff> = 0;

        return;
    }

    public int getUpdateOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        i1 = i0 + $i3;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i4 = lengthof $r1;

        i2 = i1 % $i4;

        if i2 != 0 goto label1;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i6 = lengthof $r2;

        $i7 = i1 - $i6;

        return $i7;

     label1:
        $i5 = i1 - i2;

        return $i5;
    }

    public int getOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        $i2 = i0 + $i1;

        return $i2;
    }

    public int processByte(byte, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r0;
        byte b0;
        byte[] r1, $r2, $r3, $r4, $r6, $r7;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 = 0;

        $i4 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i3 = lengthof $r2;

        if $i4 != $i3 goto label1;

        $r5 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        i2 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, r1, i1);

        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i8 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int blockSize>;

        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i7 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r7, $i8, $r6, 0, $i7);

        $i9 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int blockSize>;

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff> = $i9;

     label1:
        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i5 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        $i6 = $i5 + 1;

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff> = $i6;

        $r3[$i5] = b0;

        return i2;
    }

    public int processBytes(byte[], int, int, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r0;
        byte[] r1, r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        com.android.org.bouncycastle.crypto.BlockCipher $r7, $r12;
        com.android.org.bouncycastle.crypto.DataLengthException $r15;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        if i1 >= 0 goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r16;

     label1:
        i3 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int getBlockSize()>();

        i4 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int getUpdateOutputSize(int)>(i1);

        if i4 <= 0 goto label2;

        $i18 = i2 + i4;

        $i17 = lengthof r2;

        if $i18 <= $i17 goto label2;

        $r15 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r15;

     label2:
        i5 = 0;

        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i8 = lengthof $r3;

        $i7 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        i6 = $i8 - $i7;

        if i1 <= i6 goto label4;

        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i11 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r6, $i11, i6);

        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i13 = interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, r2, i2);

        i5 = i5 + $i13;

        $r8 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r8, i3, $r9, 0, i3);

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff> = i3;

        i1 = i1 - i6;

        i0 = i0 + i6;

     label3:
        if i1 <= i3 goto label4;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i14 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r10, $i14, i3);

        $r12 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r11 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i15 = i2 + i5;

        $i16 = interfaceinvoke $r12.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r11, 0, r2, $i15);

        i5 = i5 + $i16;

        $r14 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $r13 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r14, i3, $r13, 0, i3);

        i1 = i1 - i3;

        i0 = i0 + i3;

        goto label3;

     label4:
        $r4 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i9 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r4, $i9, i1);

        $i10 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        $i12 = $i10 + i1;

        r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff> = $i12;

        return i5;
    }

    public int doFinal(byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.modes.CTSBlockCipher r0;
        byte[] r1, r2, $r5, $r9, $r11, $r12, $r16, $r17, $r20, $r22, $r25, $r26, $r27, r31;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15, $i20, $i21, $i24, $i25, $i26, $i28, $i29, $i31, i37, i38, i39;
        com.android.org.bouncycastle.crypto.BlockCipher r3, $r4, $r6, $r7, $r8, $r10, $r14, $r18, $r19, $r21, $r24, r30;
        boolean $z0, $z1, $z2;
        byte $b16, $b17, $b18, $b19, $b32, $b33, $b34, $b35, $b36;
        com.android.org.bouncycastle.crypto.modes.CBCBlockCipher $r13, $r23;
        com.android.org.bouncycastle.crypto.DataLengthException $r15, $r28, $r29;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CTSBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i4 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        $i6 = $i4 + i0;

        $i5 = lengthof r1;

        if $i6 <= $i5 goto label01;

        $r29 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r29.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer to small in doFinal");

        throw $r29;

     label01:
        $r4 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        i1 = interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i7 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        i2 = $i7 - i1;

        r2 = newarray (byte)[i1];

        $z0 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label10;

        $i21 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        if $i21 >= i1 goto label02;

        $r28 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r28.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("need at least one block of input for CTS");

        throw $r28;

     label02:
        $r18 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r17 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        interfaceinvoke $r18.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r17, 0, r2, 0);

        $i24 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        if $i24 <= i1 goto label09;

        i3 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

     label03:
        $r20 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i26 = lengthof $r20;

        if i3 == $i26 goto label04;

        $r27 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $i31 = i3 - i1;

        $b32 = r2[$i31];

        $r27[i3] = $b32;

        i3 = i3 + 1;

        goto label03;

     label04:
        i37 = i1;

     label05:
        $i25 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        if i37 == $i25 goto label06;

        $r25 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $b34 = $r25[i37];

        $i29 = i37 - i1;

        $b33 = r2[$i29];

        $b35 = $b34 ^ $b33;

        $b36 = (byte) $b35;

        $r25[i37] = $b36;

        i37 = i37 + 1;

        goto label05;

     label06:
        $r19 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $z2 = $r19 instanceof com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        if $z2 == 0 goto label07;

        $r24 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r23 = (com.android.org.bouncycastle.crypto.modes.CBCBlockCipher) $r24;

        r30 = virtualinvoke $r23.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r26 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        interfaceinvoke r30.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r26, i1, r1, i0);

        goto label08;

     label07:
        $r21 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r22 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        interfaceinvoke $r21.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r22, i1, r1, i0);

     label08:
        $i28 = i0 + i1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r1, $i28, i2);

        goto label17;

     label09:
        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r1, i0, i1);

        goto label17;

     label10:
        $i8 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        if $i8 >= i1 goto label11;

        $r15 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("need at least one block of input for CTS");

        throw $r15;

     label11:
        r31 = newarray (byte)[i1];

        $i9 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        if $i9 <= i1 goto label16;

        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $z1 = $r7 instanceof com.android.org.bouncycastle.crypto.modes.CBCBlockCipher;

        if $z1 == 0 goto label12;

        $r14 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r13 = (com.android.org.bouncycastle.crypto.modes.CBCBlockCipher) $r14;

        r3 = virtualinvoke $r13.<com.android.org.bouncycastle.crypto.modes.CBCBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r16 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r16, 0, r2, 0);

        goto label13;

     label12:
        $r8 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r9, 0, r2, 0);

     label13:
        i38 = i1;

     label14:
        $i11 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        if i38 == $i11 goto label15;

        $i20 = i38 - i1;

        $i15 = i38 - i1;

        $b19 = r2[$i15];

        $r12 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        $b18 = $r12[i38];

        $b16 = $b19 ^ $b18;

        $b17 = (byte) $b16;

        r31[$i20] = $b17;

        i38 = i38 + 1;

        goto label14;

     label15:
        $r11 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r11, i1, r2, 0, i2);

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r10.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r2, 0, r1, i0);

        $i13 = i0 + i1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r31, 0, r1, $i13, i2);

        goto label17;

     label16:
        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: byte[] buf>;

        interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, r2, 0);

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r1, i0, i1);

     label17:
        i39 = r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: int bufOff>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CTSBlockCipher: void reset()>();

        return i39;
    }
}
