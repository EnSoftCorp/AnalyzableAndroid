public class com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi extends com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi
{

    public void <init>()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: void <init>()>();

        return;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;
        java.security.Key r1;
        java.lang.Class r2;
        java.security.interfaces.DSAPublicKey r3;
        boolean $z0, $z1, $z2, $z3;
        java.security.spec.KeySpec $r4;
        java.security.spec.DSAPrivateKeySpec $r5;
        java.math.BigInteger $r6, $r8, $r10, $r12, $r15, $r17, $r19, $r20;
        java.security.interfaces.DSAParams $r7, $r9, $r11, $r14, $r16, $r18;
        java.security.spec.DSAPublicKeySpec $r13;
        java.security.interfaces.DSAPrivateKey r21;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/security/spec/DSAPublicKeySpec");

        if $z0 == 0 goto label1;

        $z3 = r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z3 == 0 goto label1;

        r3 = (java.security.interfaces.DSAPublicKey) r1;

        $r13 = new java.security.spec.DSAPublicKeySpec;

        $r15 = interfaceinvoke r3.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $r14 = interfaceinvoke r3.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r17 = interfaceinvoke $r14.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r16 = interfaceinvoke r3.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r19 = interfaceinvoke $r16.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r18 = interfaceinvoke r3.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r20 = interfaceinvoke $r18.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r13.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r15, $r17, $r19, $r20);

        return $r13;

     label1:
        $z1 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "java/security/spec/DSAPrivateKeySpec");

        if $z1 == 0 goto label2;

        $z2 = r1 instanceof java.security.interfaces.DSAPrivateKey;

        if $z2 == 0 goto label2;

        r21 = (java.security.interfaces.DSAPrivateKey) r1;

        $r5 = new java.security.spec.DSAPrivateKeySpec;

        $r6 = interfaceinvoke r21.<java.security.interfaces.DSAPrivateKey: java.math.BigInteger getX()>();

        $r7 = interfaceinvoke r21.<java.security.interfaces.DSAPrivateKey: java.security.interfaces.DSAParams getParams()>();

        $r8 = interfaceinvoke $r7.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r9 = interfaceinvoke r21.<java.security.interfaces.DSAPrivateKey: java.security.interfaces.DSAParams getParams()>();

        $r10 = interfaceinvoke $r9.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r11 = interfaceinvoke r21.<java.security.interfaces.DSAPrivateKey: java.security.interfaces.DSAParams getParams()>();

        $r12 = interfaceinvoke $r11.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r5.<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r8, $r10, $r12);

        return $r5;

     label2:
        $r4 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)>(r1, r2);

        return $r4;
    }

    protected java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;
        java.security.Key r1;
        boolean $z0, $z1;
        java.security.InvalidKeyException $r2;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey $r3;
        java.security.interfaces.DSAPrivateKey $r4;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey $r5;
        java.security.interfaces.DSAPublicKey $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        r1 := @parameter0: java.security.Key;

        $z0 = r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 == 0 goto label1;

        $r5 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey;

        $r6 = (java.security.interfaces.DSAPublicKey) r1;

        specialinvoke $r5.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(java.security.interfaces.DSAPublicKey)>($r6);

        return $r5;

     label1:
        $z1 = r1 instanceof java.security.interfaces.DSAPrivateKey;

        if $z1 == 0 goto label2;

        $r3 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey;

        $r4 = (java.security.interfaces.DSAPrivateKey) r1;

        specialinvoke $r3.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(java.security.interfaces.DSAPrivateKey)>($r4);

        return $r3;

     label2:
        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key type unknown");

        throw $r2;
    }

    public java.security.PrivateKey generatePrivate(com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;
        com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo r1;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r2;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo;

        $r3 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        r2 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil: boolean isDsaOid(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>(r2);

        if $z0 == 0 goto label1;

        $r10 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey;

        specialinvoke $r10.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>(r1);

        return $r10;

     label1:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algorithm identifier ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in key not recognised");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    public java.security.PublicKey generatePublic(com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;
        com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo r1;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r2;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        r1 := @parameter0: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r3 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        r2 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil: boolean isDsaOid(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>(r2);

        if $z0 == 0 goto label1;

        $r10 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey;

        specialinvoke $r10.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>(r1);

        return $r10;

     label1:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algorithm identifier ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in key not recognised");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;
        java.security.spec.KeySpec r1;
        boolean $z0;
        java.security.PrivateKey $r2;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey $r3;
        java.security.spec.DSAPrivateKeySpec $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof java.security.spec.DSAPrivateKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey;

        $r4 = (java.security.spec.DSAPrivateKeySpec) r1;

        specialinvoke $r3.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(java.security.spec.DSAPrivateKeySpec)>($r4);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>(r1);

        return $r2;
    }

    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r0;
        java.security.spec.KeySpec r1;
        boolean $z0;
        java.security.PublicKey $r2;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey $r3;
        java.security.spec.DSAPublicKeySpec $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof java.security.spec.DSAPublicKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey;

        $r4 = (java.security.spec.DSAPublicKeySpec) r1;

        specialinvoke $r3.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(java.security.spec.DSAPublicKeySpec)>($r4);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>(r1);

        return $r2;
    }
}
