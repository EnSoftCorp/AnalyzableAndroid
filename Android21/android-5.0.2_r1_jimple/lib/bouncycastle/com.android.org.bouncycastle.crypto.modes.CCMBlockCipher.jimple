public class com.android.org.bouncycastle.crypto.modes.CCMBlockCipher extends java.lang.Object implements com.android.org.bouncycastle.crypto.modes.AEADBlockCipher
{
    private com.android.org.bouncycastle.crypto.BlockCipher cipher;
    private int blockSize;
    private boolean forEncryption;
    private byte[] nonce;
    private byte[] initialAssociatedText;
    private int macSize;
    private com.android.org.bouncycastle.crypto.CipherParameters keyParam;
    private byte[] macBlock;
    private com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText;
    private com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data;

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r2, $r3;
        int $i0, $i1, $i2;
        byte[] $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream;

        specialinvoke $r2.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void <init>(com.android.org.bouncycastle.crypto.modes.CCMBlockCipher)>(r0);

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText> = $r2;

        $r3 = new com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream;

        specialinvoke $r3.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void <init>(com.android.org.bouncycastle.crypto.modes.CCMBlockCipher)>(r0);

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data> = $r3;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize> = $i0;

        $i1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        $r4 = newarray (byte)[$i1];

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock> = $r4;

        $i2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        if $i2 == 16 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cipher required with a block size of 16.");

        throw $r5;

     label1:
        return;
    }

    public com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        boolean z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.CipherParameters r1, r3;
        com.android.org.bouncycastle.crypto.params.AEADParameters r2;
        java.lang.IllegalArgumentException $r4, $r8;
        byte[] $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV r13;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption> = z0;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.AEADParameters;

        if $z1 == 0 goto label1;

        r2 = (com.android.org.bouncycastle.crypto.params.AEADParameters) r1;

        $r11 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.AEADParameters: byte[] getNonce()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce> = $r11;

        $r12 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.AEADParameters: byte[] getAssociatedText()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText> = $r12;

        $i4 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.AEADParameters: int getMacSize()>();

        $i5 = $i4 / 8;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize> = $i5;

        r3 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.AEADParameters: com.android.org.bouncycastle.crypto.params.KeyParameter getKey()>();

        goto label3;

     label1:
        $z2 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z2 == 0 goto label2;

        r13 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r1;

        $r5 = virtualinvoke r13.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce> = $r5;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText> = null;

        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i0 = lengthof $r6;

        $i1 = $i0 / 2;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize> = $i1;

        r3 = virtualinvoke r13.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameters passed to CCM");

        throw $r4;

     label3:
        if r3 == null goto label4;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam> = r3;

     label4:
        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        if $r7 == null goto label5;

        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i2 = lengthof $r9;

        if $i2 < 7 goto label5;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i3 = lengthof $r10;

        if $i3 <= 13 goto label6;

     label5:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("nonce must have length from 7 to 13 octets");

        throw $r8;

     label6:
        virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: void reset()>();

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        com.android.org.bouncycastle.crypto.BlockCipher $r2;
        java.lang.String $r3, $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/CCM");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void processAADByte(byte)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte b0;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        virtualinvoke $r1.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void write(int)>(b0);

        return;
    }

    public void processAADBytes(byte[], int, int)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1;
        int i0, i1;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        virtualinvoke $r2.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public int processByte(byte, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte b0;
        byte[] r1;
        int i1;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        virtualinvoke $r2.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void write(int)>(b0);

        return 0;
    }

    public int processBytes(byte[], int, int, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        virtualinvoke $r3.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return 0;
    }

    public int doFinal(byte[], int) throws java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, $r3;
        int i0, i1, $i2;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r2, $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: byte[] getBuffer()>();

        $r4 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        $i2 = virtualinvoke $r4.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: int size()>();

        i1 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int processPacket(byte[],int,int,byte[],int)>($r3, 0, $i2, r1, i0);

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: void reset()>();

        return i1;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r2, $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: void reset()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        virtualinvoke $r2.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void reset()>();

        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        virtualinvoke $r3.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: void reset()>();

        return;
    }

    public byte[] getMac()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $i0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        r1 = newarray (byte)[$i0];

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public int getUpdateOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int i0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        i0 := @parameter0: int;

        return 0;
    }

    public int getOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r1;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream data>;

        $i2 = virtualinvoke $r1.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: int size()>();

        i1 = i0 + $i2;

        $z0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i7 = i1 + $i6;

        return $i7;

     label1:
        $i3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        if i1 >= $i3 goto label2;

        $i5 = 0;

        goto label3;

     label2:
        $i4 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i5 = i1 - $i4;

     label3:
        return $i5;
    }

    public byte[] processPacket(byte[], int, int) throws java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i6, $i7;
        boolean $z0;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i7 = i1 + $i6;

        r2 = newarray (byte)[$i7];

        goto label3;

     label1:
        $i2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        if i1 >= $i2 goto label2;

        $r3 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r3.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("data too short");

        throw $r3;

     label2:
        $i3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i4 = i1 - $i3;

        r2 = newarray (byte)[$i4];

     label3:
        virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int processPacket(byte[],int,int,byte[],int)>(r1, i0, i1, r2, 0);

        return r2;
    }

    public int processPacket(byte[], int, int, byte[], int) throws java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException, com.android.org.bouncycastle.crypto.DataLengthException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2, r4, r5, $r7, $r8, $r9, $r14, $r15, $r16, $r17, $r19, $r20, $r23, $r24, $r25, $r28, r30, r31;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i33, $i34, $i36, $i37, $i39, $i40, $i41, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, i56;
        com.android.org.bouncycastle.crypto.modes.SICBlockCipher r3, $r11;
        com.android.org.bouncycastle.crypto.CipherParameters $r6, $r12;
        byte $b12;
        com.android.org.bouncycastle.crypto.BlockCipher $r10;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r13;
        boolean $z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException $r18, $r21;
        com.android.org.bouncycastle.crypto.DataLengthException $r22, $r26;
        java.lang.IllegalStateException $r27, $r29;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam>;

        if $r6 != null goto label01;

        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CCM cipher unitialized.");

        throw $r29;

     label01:
        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        i3 = lengthof $r7;

        i4 = 15 - i3;

        if i4 >= 4 goto label02;

        $i52 = 8 * i4;

        i5 = 1 << $i52;

        if i1 < i5 goto label02;

        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CCM packet too large for choice of q.");

        throw $r27;

     label02:
        $i9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r30 = newarray (byte)[$i9];

        $i11 = i4 - 1;

        $i10 = $i11 & 7;

        $b12 = (byte) $i10;

        r30[0] = $b12;

        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $r8 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i13 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r9, 0, r30, 1, $i13);

        $r11 = new com.android.org.bouncycastle.crypto.modes.SICBlockCipher;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        specialinvoke $r11.<com.android.org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r10);

        r3 = $r11;

        $z1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        $r13 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r12 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam>;

        specialinvoke $r13.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>($r12, r30);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>($z1, $r13);

        i6 = i0;

        i7 = i2;

        $z0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label06;

        $i37 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        i8 = i1 + $i37;

        $i41 = lengthof r2;

        $i36 = i8 + i2;

        if $i41 >= $i36 goto label03;

        $r26 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r26.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("Output buffer too short.");

        throw $r26;

     label03:
        $r24 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int calculateMac(byte[],int,int,byte[])>(r1, i0, i1, $r24);

        $r23 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $r25 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r23, 0, $r25, 0);

     label04:
        $i40 = i0 + i1;

        $i39 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        $i47 = $i40 - $i39;

        if i6 >= $i47 goto label05;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i6, r2, i7);

        $i54 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i7 = i7 + $i54;

        $i51 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i6 = i6 + $i51;

        goto label04;

     label05:
        $i48 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r4 = newarray (byte)[$i48];

        $i49 = i1 + i0;

        $i50 = $i49 - i6;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i6, r4, 0, $i50);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r4, 0, r4, 0);

        $i44 = i1 + i0;

        $i45 = $i44 - i6;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r4, 0, r2, i7, $i45);

        $r28 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i53 = i2 + i1;

        $i46 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r28, 0, r2, $i53, $i46);

        goto label12;

     label06:
        $i15 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        if i1 >= $i15 goto label07;

        $r21 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r21.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("data too short");

        throw $r21;

     label07:
        $i14 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        i8 = i1 - $i14;

        $i18 = lengthof r2;

        $i17 = i8 + i2;

        if $i18 >= $i17 goto label08;

        $r22 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r22.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("Output buffer too short.");

        throw $r22;

     label08:
        $i20 = i0 + i8;

        $r14 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i16 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, $i20, $r14, 0, $i16);

        $r15 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $r16 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r15, 0, $r16, 0);

        i56 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

     label09:
        $r17 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i23 = lengthof $r17;

        if i56 == $i23 goto label10;

        $r20 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $r20[i56] = 0;

        i56 = i56 + 1;

        goto label09;

     label10:
        $i22 = i0 + i8;

        $i21 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        $i26 = $i22 - $i21;

        if i6 >= $i26 goto label11;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i6, r2, i7);

        $i34 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i7 = i7 + $i34;

        $i33 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i6 = i6 + $i33;

        goto label10;

     label11:
        $i27 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r31 = newarray (byte)[$i27];

        $i24 = i6 - i0;

        $i25 = i8 - $i24;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i6, r31, 0, $i25);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r31, 0, r31, 0);

        $i30 = i6 - i0;

        $i29 = i8 - $i30;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r31, 0, r2, i7, $i29);

        $i28 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r5 = newarray (byte)[$i28];

        specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int calculateMac(byte[],int,int,byte[])>(r2, i2, i8, r5);

        $r19 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $z2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r19, r5);

        if $z2 != 0 goto label12;

        $r18 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r18.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("mac check in CCM failed");

        throw $r18;

     label12:
        return i8;
    }

    private int calculateMac(byte[], int, int, byte[])
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2, r4, $r8, $r9, $r10, $r12, $r14, $r16, $r17;
        int i0, i1, i2, i3, i4, i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i29, $i30, $i32, $i34, $i36, $i37, $i38, $i41, $i45, $i46, $i48, i49;
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r3, $r5;
        byte b5, $b9, $b17, $b22, $b23, $b28, $b31, $b33, $b35, $b39, $b40, $b42, $b43, $b44, $b47;
        com.android.org.bouncycastle.crypto.BlockCipher $r6;
        boolean $z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters $r7;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r11, $r13, $r15;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r5 = new com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $i7 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i8 = $i7 * 8;

        specialinvoke $r5.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r6, $i8);

        r3 = $r5;

        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void init(com.android.org.bouncycastle.crypto.CipherParameters)>($r7);

        r4 = newarray (byte)[16];

        $z0 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean hasAssociatedText()>();

        if $z0 == 0 goto label1;

        $b42 = r4[0];

        $b43 = $b42 | 64;

        $b44 = (byte) $b43;

        r4[0] = $b44;

     label1:
        $b9 = r4[0];

        $i12 = interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: int getMacSize()>();

        $i11 = $i12 - 2;

        $i14 = $i11 / 2;

        $i13 = $i14 & 7;

        $i16 = $i13 << 3;

        $i15 = $b9 | $i16;

        $b17 = (byte) $i15;

        r4[0] = $b17;

        $b23 = r4[0];

        $r8 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i19 = lengthof $r8;

        $i18 = 15 - $i19;

        $i21 = $i18 - 1;

        $i20 = $i21 & 7;

        $i24 = $b23 | $i20;

        $b22 = (byte) $i24;

        r4[0] = $b22;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i26 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r10, 0, r4, 1, $i26);

        i2 = i1;

        i3 = 1;

     label2:
        if i2 <= 0 goto label3;

        $i45 = lengthof r4;

        $i48 = $i45 - i3;

        $i46 = i2 & 255;

        $b47 = (byte) $i46;

        r4[$i48] = $b47;

        i2 = i2 >>> 8;

        i3 = i3 + 1;

        goto label2;

     label3:
        $i25 = lengthof r4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r4, 0, $i25);

        $z1 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean hasAssociatedText()>();

        if $z1 == 0 goto label9;

        i4 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int getAssociatedTextLength()>();

        if i4 >= 65280 goto label4;

        $i41 = i4 >> 8;

        $b40 = (byte) $i41;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b40);

        $b39 = (byte) i4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b39);

        b5 = 2;

        goto label5;

     label4:
        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(-1);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(-2);

        $i27 = i4 >> 24;

        $b28 = (byte) $i27;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b28);

        $i32 = i4 >> 16;

        $b33 = (byte) $i32;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b33);

        $i30 = i4 >> 8;

        $b31 = (byte) $i30;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b31);

        $b35 = (byte) i4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b35);

        b5 = 6;

     label5:
        $r12 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        if $r12 == null goto label6;

        $r17 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        $r16 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        $i37 = lengthof $r16;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>($r17, 0, $i37);

     label6:
        $r11 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        $i34 = virtualinvoke $r11.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: int size()>();

        if $i34 <= 0 goto label7;

        $r15 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        $r14 = virtualinvoke $r15.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: byte[] getBuffer()>();

        $r13 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        $i38 = virtualinvoke $r13.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: int size()>();

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>($r14, 0, $i38);

     label7:
        $i36 = b5 + i4;

        i49 = $i36 % 16;

        if i49 == 0 goto label9;

        i6 = i49;

     label8:
        if i6 == 16 goto label9;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(0);

        i6 = i6 + 1;

        goto label8;

     label9:
        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1);

        $i29 = interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>(r2, 0);

        return $i29;
    }

    private int getAssociatedTextLength()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream $r1;
        int $i0, $i1, $i2;
        byte[] $r2, $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream associatedText>;

        $i0 = virtualinvoke $r1.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher$ExposedByteArrayOutputStream: int size()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        if $r2 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        $i1 = lengthof $r3;

     label2:
        $i2 = $i0 + $i1;

        return $i2;
    }

    private boolean hasAssociatedText()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $i0 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int getAssociatedTextLength()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
