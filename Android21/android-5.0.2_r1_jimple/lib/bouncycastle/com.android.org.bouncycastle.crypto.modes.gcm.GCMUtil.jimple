abstract class com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil extends java.lang.Object
{
    private static final int E1;
    private static final byte E1B;
    private static final long E1L;
    private static final int[] LOOKUP;

    void <init>()
    {
        com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil r0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int[] generateLookup()
    {
        int[] r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 = newarray (int)[256];

        i0 = 0;

     label1:
        if i0 >= 256 goto label5;

        i1 = 0;

        i2 = 7;

     label2:
        if i2 < 0 goto label4;

        $i3 = 1 << i2;

        $i4 = i0 & $i3;

        if $i4 == 0 goto label3;

        $i5 = 7 - i2;

        $i6 = -520093696 >>> $i5;

        i1 = i1 ^ $i6;

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        r0[i0] = i1;

        i0 = i0 + 1;

        goto label1;

     label5:
        return r0;
    }

    static byte[] oneAsBytes()
    {
        byte[] r0;

        r0 = newarray (byte)[16];

        r0[0] = -128;

        return r0;
    }

    static int[] oneAsInts()
    {
        int[] r0;

        r0 = newarray (int)[4];

        r0[0] = -2147483648;

        return r0;
    }

    static long[] oneAsLongs()
    {
        long[] r0;

        r0 = newarray (long)[2];

        r0[0] = -9223372036854775808L;

        return r0;
    }

    static byte[] asBytes(int[])
    {
        int[] r0;
        byte[] r1;

        r0 := @parameter0: int[];

        r1 = newarray (byte)[16];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void intToBigEndian(int[],byte[],int)>(r0, r1, 0);

        return r1;
    }

    static void asBytes(int[], byte[])
    {
        int[] r0;
        byte[] r1;

        r0 := @parameter0: int[];

        r1 := @parameter1: byte[];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void intToBigEndian(int[],byte[],int)>(r0, r1, 0);

        return;
    }

    static byte[] asBytes(long[])
    {
        long[] r0;
        byte[] r1;

        r0 := @parameter0: long[];

        r1 = newarray (byte)[16];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void longToBigEndian(long[],byte[],int)>(r0, r1, 0);

        return r1;
    }

    static void asBytes(long[], byte[])
    {
        long[] r0;
        byte[] r1;

        r0 := @parameter0: long[];

        r1 := @parameter1: byte[];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void longToBigEndian(long[],byte[],int)>(r0, r1, 0);

        return;
    }

    static int[] asInts(byte[])
    {
        byte[] r0;
        int[] r1;

        r0 := @parameter0: byte[];

        r1 = newarray (int)[4];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void bigEndianToInt(byte[],int,int[])>(r0, 0, r1);

        return r1;
    }

    static void asInts(byte[], int[])
    {
        byte[] r0;
        int[] r1;

        r0 := @parameter0: byte[];

        r1 := @parameter1: int[];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void bigEndianToInt(byte[],int,int[])>(r0, 0, r1);

        return;
    }

    static long[] asLongs(byte[])
    {
        byte[] r0;
        long[] r1;

        r0 := @parameter0: byte[];

        r1 = newarray (long)[2];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void bigEndianToLong(byte[],int,long[])>(r0, 0, r1);

        return r1;
    }

    static void asLongs(byte[], long[])
    {
        byte[] r0;
        long[] r1;

        r0 := @parameter0: byte[];

        r1 := @parameter1: long[];

        staticinvoke <com.android.org.bouncycastle.crypto.util.Pack: void bigEndianToLong(byte[],int,long[])>(r0, 0, r1);

        return;
    }

    static void multiply(byte[], byte[])
    {
        byte[] r0, r1, r2, r3;
        int i0, i2, $i3, $i4;
        byte b1, $b5, $b6, $b7, $b8;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>(r0);

        r3 = newarray (byte)[16];

        i0 = 0;

     label1:
        if i0 >= 16 goto label6;

        b1 = r1[i0];

        i2 = 7;

     label2:
        if i2 < 0 goto label5;

        $i3 = 1 << i2;

        $i4 = b1 & $i3;

        if $i4 == 0 goto label3;

        staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: void xor(byte[],byte[])>(r3, r2);

     label3:
        $b5 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: byte shiftRight(byte[])>(r2);

        if $b5 == 0 goto label4;

        $b6 = r2[0];

        $b7 = $b6 ^ -31;

        $b8 = (byte) $b7;

        r2[0] = $b8;

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r3, 0, r0, 0, 16);

        return;
    }

    static void multiply(int[], int[])
    {
        int[] r0, r1, r2, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: int[] clone(int[])>(r0);

        r3 = newarray (int)[4];

        i0 = 0;

     label1:
        if i0 >= 4 goto label6;

        i1 = r1[i0];

        i2 = 31;

     label2:
        if i2 < 0 goto label5;

        $i3 = 1 << i2;

        $i4 = i1 & $i3;

        if $i4 == 0 goto label3;

        staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: void xor(int[],int[])>(r3, r2);

     label3:
        $i5 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int shiftRight(int[])>(r2);

        if $i5 == 0 goto label4;

        $i6 = r2[0];

        $i7 = $i6 ^ -520093696;

        r2[0] = $i7;

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r3, 0, r0, 0, 4);

        return;
    }

    static void multiply(long[], long[])
    {
        long[] r0, r1, r2, r3, $r4;
        int i0, i2;
        long l1, $l3, $l4, $l5, $l6, $l7, $l8, $l11, $l12, $l13;
        byte $b9, $b10;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        $r4 = newarray (long)[2];

        $l3 = r0[0];

        $r4[0] = $l3;

        $l4 = r0[1];

        $r4[1] = $l4;

        r2 = $r4;

        r3 = newarray (long)[2];

        i0 = 0;

     label1:
        if i0 >= 2 goto label6;

        l1 = r1[i0];

        i2 = 63;

     label2:
        if i2 < 0 goto label5;

        $l7 = 1L << i2;

        $l8 = l1 & $l7;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label3;

        staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: void xor(long[],long[])>(r3, r2);

     label3:
        $l11 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: long shiftRight(long[])>(r2);

        $b10 = $l11 cmp 0L;

        if $b10 == 0 goto label4;

        $l13 = r2[0];

        $l12 = $l13 ^ 63331869759897600L;

        r2[0] = $l12;

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $l5 = r3[0];

        r0[0] = $l5;

        $l6 = r3[1];

        r0[1] = $l6;

        return;
    }

    static void multiplyP(int[])
    {
        int[] r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: int[];

        $i0 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int shiftRight(int[])>(r0);

        if $i0 == 0 goto label1;

        $i1 = r0[0];

        $i2 = $i1 ^ -520093696;

        r0[0] = $i2;

     label1:
        return;
    }

    static void multiplyP(int[], int[])
    {
        int[] r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        $i0 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int shiftRight(int[],int[])>(r0, r1);

        if $i0 == 0 goto label1;

        $i1 = r1[0];

        $i2 = $i1 ^ -520093696;

        r1[0] = $i2;

     label1:
        return;
    }

    static void multiplyP8(int[])
    {
        int[] r0, $r1;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: int[];

        i0 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int shiftRightN(int[],int)>(r0, 8);

        $i3 = r0[0];

        $r1 = <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int[] LOOKUP>;

        $i1 = i0 >>> 24;

        $i2 = $r1[$i1];

        $i4 = $i3 ^ $i2;

        r0[0] = $i4;

        return;
    }

    static void multiplyP8(int[], int[])
    {
        int[] r0, r1, $r2;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int shiftRightN(int[],int,int[])>(r0, 8, r1);

        $i3 = r1[0];

        $r2 = <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int[] LOOKUP>;

        $i1 = i0 >>> 24;

        $i2 = $r2[$i1];

        $i4 = $i3 ^ $i2;

        r1[0] = $i4;

        return;
    }

    static byte shiftRight(byte[])
    {
        byte[] r0;
        int i0, i1, $i5, $i10, $i14, $i19, i24, i25, i27, i28, i30, i31;
        short s2, $s4, $s7, $s9, $s12, $s15, $s16, $s20, $s21, s26, s29, s32;
        byte $b3, $b6, $b8, $b11, $b13, $b17, $b18, $b22, $b23;

        r0 := @parameter0: byte[];

        i0 = 0;

        i1 = 0;

     label1:
        $b3 = r0[i0];

        s2 = $b3 & 255;

        i24 = i0 + 1;

        $s4 = s2 >>> 1;

        $i5 = $s4 | i1;

        $b6 = (byte) $i5;

        r0[i0] = $b6;

        $s7 = s2 & 1;

        i25 = $s7 << 7;

        $b8 = r0[i24];

        s26 = $b8 & 255;

        i27 = i24 + 1;

        $s9 = s26 >>> 1;

        $i10 = $s9 | i25;

        $b11 = (byte) $i10;

        r0[i24] = $b11;

        $s12 = s26 & 1;

        i28 = $s12 << 7;

        $b13 = r0[i27];

        s29 = $b13 & 255;

        i30 = i27 + 1;

        $s15 = s29 >>> 1;

        $i14 = $s15 | i28;

        $b17 = (byte) $i14;

        r0[i27] = $b17;

        $s16 = s29 & 1;

        i31 = $s16 << 7;

        $b18 = r0[i30];

        s32 = $b18 & 255;

        i0 = i30 + 1;

        $s20 = s32 >>> 1;

        $i19 = $s20 | i31;

        $b22 = (byte) $i19;

        r0[i30] = $b22;

        $s21 = s32 & 1;

        i1 = $s21 << 7;

        if i0 < 16 goto label1;

        $b23 = (byte) i1;

        return $b23;
    }

    static byte shiftRight(byte[], byte[])
    {
        byte[] r0, r1;
        int i0, i1, $i5, $i10, $i16, $i21, i24, i25, i27, i28, i30, i31;
        short s2, $s4, $s7, $s9, $s13, $s14, $s18, $s19, $s23, s26, s29, s32;
        byte $b3, $b6, $b8, $b11, $b12, $b15, $b17, $b20, $b22;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 = 0;

        i1 = 0;

     label1:
        $b3 = r0[i0];

        s2 = $b3 & 255;

        i24 = i0 + 1;

        $s4 = s2 >>> 1;

        $i5 = $s4 | i1;

        $b6 = (byte) $i5;

        r1[i0] = $b6;

        $s7 = s2 & 1;

        i25 = $s7 << 7;

        $b8 = r0[i24];

        s26 = $b8 & 255;

        i27 = i24 + 1;

        $s9 = s26 >>> 1;

        $i10 = $s9 | i25;

        $b11 = (byte) $i10;

        r1[i24] = $b11;

        $s13 = s26 & 1;

        i28 = $s13 << 7;

        $b12 = r0[i27];

        s29 = $b12 & 255;

        i30 = i27 + 1;

        $s14 = s29 >>> 1;

        $i16 = $s14 | i28;

        $b15 = (byte) $i16;

        r1[i27] = $b15;

        $s18 = s29 & 1;

        i31 = $s18 << 7;

        $b17 = r0[i30];

        s32 = $b17 & 255;

        i0 = i30 + 1;

        $s19 = s32 >>> 1;

        $i21 = $s19 | i31;

        $b20 = (byte) $i21;

        r1[i30] = $b20;

        $s23 = s32 & 1;

        i1 = $s23 << 7;

        if i0 < 16 goto label1;

        $b22 = (byte) i1;

        return $b22;
    }

    static int shiftRight(int[])
    {
        int[] r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14;

        r0 := @parameter0: int[];

        i0 = r0[0];

        $i2 = i0 >>> 1;

        r0[0] = $i2;

        i1 = i0 << 31;

        i10 = r0[1];

        $i3 = i10 >>> 1;

        $i4 = $i3 | i1;

        r0[1] = $i4;

        i11 = i10 << 31;

        i12 = r0[2];

        $i5 = i12 >>> 1;

        $i6 = $i5 | i11;

        r0[2] = $i6;

        i13 = i12 << 31;

        i14 = r0[3];

        $i7 = i14 >>> 1;

        $i8 = $i7 | i13;

        r0[3] = $i8;

        $i9 = i14 << 31;

        return $i9;
    }

    static int shiftRight(int[], int[])
    {
        int[] r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 = r0[0];

        $i2 = i0 >>> 1;

        r1[0] = $i2;

        i1 = i0 << 31;

        i10 = r0[1];

        $i3 = i10 >>> 1;

        $i4 = $i3 | i1;

        r1[1] = $i4;

        i11 = i10 << 31;

        i12 = r0[2];

        $i5 = i12 >>> 1;

        $i6 = $i5 | i11;

        r1[2] = $i6;

        i13 = i12 << 31;

        i14 = r0[3];

        $i7 = i14 >>> 1;

        $i8 = $i7 | i13;

        r1[3] = $i8;

        $i9 = i14 << 31;

        return $i9;
    }

    static long shiftRight(long[])
    {
        long[] r0;
        long l0, l1, $l2, $l3, $l4, $l5, l6;

        r0 := @parameter0: long[];

        l0 = r0[0];

        $l2 = l0 >>> 1;

        r0[0] = $l2;

        l1 = l0 << 63;

        l6 = r0[1];

        $l3 = l6 >>> 1;

        $l4 = $l3 | l1;

        r0[1] = $l4;

        $l5 = l6 << 63;

        return $l5;
    }

    static long shiftRight(long[], long[])
    {
        long[] r0, r1;
        long l0, l1, $l2, $l3, $l4, $l5, l6;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        l0 = r0[0];

        $l2 = l0 >>> 1;

        r1[0] = $l2;

        l1 = l0 << 63;

        l6 = r0[1];

        $l3 = l6 >>> 1;

        $l4 = $l3 | l1;

        r1[1] = $l4;

        $l5 = l6 << 63;

        return $l5;
    }

    static int shiftRightN(int[], int)
    {
        int[] r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 = r0[0];

        i2 = 32 - i0;

        $i4 = i1 >>> i0;

        r0[0] = $i4;

        i3 = i1 << i2;

        i12 = r0[1];

        $i5 = i12 >>> i0;

        $i6 = $i5 | i3;

        r0[1] = $i6;

        i13 = i12 << i2;

        i14 = r0[2];

        $i7 = i14 >>> i0;

        $i8 = $i7 | i13;

        r0[2] = $i8;

        i15 = i14 << i2;

        i16 = r0[3];

        $i9 = i16 >>> i0;

        $i10 = $i9 | i15;

        r0[3] = $i10;

        $i11 = i16 << i2;

        return $i11;
    }

    static int shiftRightN(int[], int, int[])
    {
        int[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i1 = r0[0];

        i2 = 32 - i0;

        $i4 = i1 >>> i0;

        r1[0] = $i4;

        i3 = i1 << i2;

        i12 = r0[1];

        $i5 = i12 >>> i0;

        $i6 = $i5 | i3;

        r1[1] = $i6;

        i13 = i12 << i2;

        i14 = r0[2];

        $i7 = i14 >>> i0;

        $i8 = $i7 | i13;

        r1[2] = $i8;

        i15 = i14 << i2;

        i16 = r0[3];

        $i9 = i16 >>> i0;

        $i10 = $i9 | i15;

        r1[3] = $i10;

        $i11 = i16 << i2;

        return $i11;
    }

    static void xor(byte[], byte[])
    {
        byte[] r0, r1;
        int i0, i17, i18, i19;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 = 0;

     label1:
        $b2 = r0[i0];

        $b1 = r1[i0];

        $b3 = $b2 ^ $b1;

        $b4 = (byte) $b3;

        r0[i0] = $b4;

        i17 = i0 + 1;

        $b6 = r0[i17];

        $b5 = r1[i17];

        $b7 = $b6 ^ $b5;

        $b8 = (byte) $b7;

        r0[i17] = $b8;

        i18 = i17 + 1;

        $b10 = r0[i18];

        $b9 = r1[i18];

        $b11 = $b10 ^ $b9;

        $b12 = (byte) $b11;

        r0[i18] = $b12;

        i19 = i18 + 1;

        $b15 = r0[i19];

        $b13 = r1[i19];

        $b14 = $b15 ^ $b13;

        $b16 = (byte) $b14;

        r0[i19] = $b16;

        i0 = i19 + 1;

        if i0 < 16 goto label1;

        return;
    }

    static void xor(byte[], byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1, $i2, $i3;
        byte $b4, $b5, $b6, $b7;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label1:
        $i2 = i1;

        i1 = i1 + -1;

        if $i2 <= 0 goto label2;

        $b5 = r0[i1];

        $i3 = i0 + i1;

        $b4 = r1[$i3];

        $b6 = $b5 ^ $b4;

        $b7 = (byte) $b6;

        r0[i1] = $b7;

        goto label1;

     label2:
        return;
    }

    static void xor(byte[], byte[], byte[])
    {
        byte[] r0, r1, r2;
        int i0, i17, i18, i19;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        i0 = 0;

     label1:
        $b2 = r0[i0];

        $b1 = r1[i0];

        $b3 = $b2 ^ $b1;

        $b4 = (byte) $b3;

        r2[i0] = $b4;

        i17 = i0 + 1;

        $b6 = r0[i17];

        $b5 = r1[i17];

        $b7 = $b6 ^ $b5;

        $b8 = (byte) $b7;

        r2[i17] = $b8;

        i18 = i17 + 1;

        $b10 = r0[i18];

        $b9 = r1[i18];

        $b11 = $b10 ^ $b9;

        $b12 = (byte) $b11;

        r2[i18] = $b12;

        i19 = i18 + 1;

        $b13 = r0[i19];

        $b14 = r1[i19];

        $b16 = $b13 ^ $b14;

        $b15 = (byte) $b16;

        r2[i19] = $b15;

        i0 = i19 + 1;

        if i0 < 16 goto label1;

        return;
    }

    static void xor(int[], int[])
    {
        int[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        $i1 = r0[0];

        $i0 = r1[0];

        $i2 = $i1 ^ $i0;

        r0[0] = $i2;

        $i4 = r0[1];

        $i3 = r1[1];

        $i5 = $i4 ^ $i3;

        r0[1] = $i5;

        $i7 = r0[2];

        $i6 = r1[2];

        $i8 = $i7 ^ $i6;

        r0[2] = $i8;

        $i10 = r0[3];

        $i9 = r1[3];

        $i11 = $i10 ^ $i9;

        r0[3] = $i11;

        return;
    }

    static void xor(int[], int[], int[])
    {
        int[] r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        $i1 = r0[0];

        $i0 = r1[0];

        $i2 = $i1 ^ $i0;

        r2[0] = $i2;

        $i4 = r0[1];

        $i3 = r1[1];

        $i5 = $i4 ^ $i3;

        r2[1] = $i5;

        $i7 = r0[2];

        $i6 = r1[2];

        $i8 = $i7 ^ $i6;

        r2[2] = $i8;

        $i10 = r0[3];

        $i9 = r1[3];

        $i11 = $i10 ^ $i9;

        r2[3] = $i11;

        return;
    }

    static void xor(long[], long[])
    {
        long[] r0, r1;
        long $l0, $l1, $l2, $l3, $l4, $l5;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        $l1 = r0[0];

        $l0 = r1[0];

        $l2 = $l1 ^ $l0;

        r0[0] = $l2;

        $l4 = r0[1];

        $l3 = r1[1];

        $l5 = $l4 ^ $l3;

        r0[1] = $l5;

        return;
    }

    static void xor(long[], long[], long[])
    {
        long[] r0, r1, r2;
        long $l0, $l1, $l2, $l3, $l4, $l5;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        r2 := @parameter2: long[];

        $l1 = r0[0];

        $l0 = r1[0];

        $l2 = $l1 ^ $l0;

        r2[0] = $l2;

        $l4 = r0[1];

        $l3 = r1[1];

        $l5 = $l4 ^ $l3;

        r2[1] = $l5;

        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: long E1L> = 63331869759897600L;

        <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: byte E1B> = -31;

        <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int E1> = -520093696;

        $r0 = staticinvoke <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int[] generateLookup()>();

        <com.android.org.bouncycastle.crypto.modes.gcm.GCMUtil: int[] LOOKUP> = $r0;

        return;
    }
}
