public class com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator extends java.lang.Object
{
    private com.android.org.bouncycastle.crypto.Digest digest;
    private int L;
    private int N;
    private int certainty;
    private java.security.SecureRandom random;
    private static final java.math.BigInteger ZERO;
    private static final java.math.BigInteger ONE;
    private static final java.math.BigInteger TWO;
    private boolean use186_3;
    private int usageIndex;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        com.android.org.bouncycastle.crypto.Digest $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        $r1 = staticinvoke <com.android.org.bouncycastle.crypto.digests.AndroidDigestFactory: com.android.org.bouncycastle.crypto.Digest getSHA1()>();

        specialinvoke r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void <init>(com.android.org.bouncycastle.crypto.Digest)>($r1);

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.Digest)
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        com.android.org.bouncycastle.crypto.Digest r1;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest> = r1;

        return;
    }

    public void init(int, int, java.security.SecureRandom)
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        int i0, i1, $i2;
        java.security.SecureRandom r1;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: boolean use186_3> = 0;

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L> = i0;

        $i2 = staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int getDefaultN(int)>(i0);

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N> = $i2;

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int certainty> = i1;

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.security.SecureRandom random> = r1;

        return;
    }

    public void init(com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters)
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.security.SecureRandom $r2;
        java.lang.IllegalArgumentException $r3, $r6, $r7, $r8;
        com.android.org.bouncycastle.crypto.Digest $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters;

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: boolean use186_3> = 1;

        $i0 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters: int getL()>();

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L> = $i0;

        $i1 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters: int getN()>();

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N> = $i1;

        $i2 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters: int getCertainty()>();

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int certainty> = $i2;

        $r2 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.security.SecureRandom random> = $r2;

        $i3 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DSAParameterGenerationParameters: int getUsageIndex()>();

        r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int usageIndex> = $i3;

        $i4 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i4 < 1024 goto label1;

        $i5 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i5 > 3072 goto label1;

        $i6 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        $i7 = $i6 % 1024;

        if $i7 == 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("L values must be between 1024 and 3072 and a multiple of 1024");

        throw $r3;

     label2:
        $i8 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i8 != 1024 goto label3;

        $i17 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        if $i17 == 160 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("N must be 160 for L = 1024");

        throw $r8;

     label3:
        $i9 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i9 != 2048 goto label4;

        $i16 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        if $i16 == 224 goto label4;

        $i15 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        if $i15 == 256 goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("N must be 224 or 256 for L = 2048");

        throw $r7;

     label4:
        $i10 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i10 != 3072 goto label5;

        $i14 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        if $i14 == 256 goto label5;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("N must be 256 for L = 3072");

        throw $r6;

     label5:
        $r4 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $i12 = interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i13 = $i12 * 8;

        $i11 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        if $i13 >= $i11 goto label6;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Digest output size too small for value of N");

        throw $r5;

     label6:
        return;
    }

    public com.android.org.bouncycastle.crypto.params.DSAParameters generateParameters()
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        boolean $z0;
        com.android.org.bouncycastle.crypto.params.DSAParameters $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        $z0 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: boolean use186_3>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()>();

        goto label2;

     label1:
        $r1 = specialinvoke r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_2()>();

     label2:
        return $r1;
    }

    private com.android.org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_2()
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        byte[] r1, r2, r3, r4, r5, r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39;
        java.math.BigInteger r7, r8, r9, $r15, $r17, $r18, $r19, $r20, r26, r27;
        java.lang.String $r10;
        com.android.org.bouncycastle.crypto.Digest $r11, $r13, $r14, $r16, $r24;
        java.security.SecureRandom $r12, $r23;
        boolean $z0, $z1, $z2;
        byte $b10, $b11, $b12, $b13, $b14, $b15, $b25, $b28, $b29, $b36, $b40, $b41, $b42;
        com.android.org.bouncycastle.crypto.params.DSAValidationParameters $r21;
        com.android.org.bouncycastle.crypto.params.DSAParameters $r22;
        java.lang.IllegalStateException $r25;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        r1 = newarray (byte)[20];

        r2 = newarray (byte)[20];

        r3 = newarray (byte)[20];

        r4 = newarray (byte)[20];

        $i4 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        $i5 = $i4 - 1;

        i0 = $i5 / 160;

        $i7 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        $i6 = $i7 / 8;

        r5 = newarray (byte)[$i6];

        $r11 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $r10 = interfaceinvoke $r11.<com.android.org.bouncycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("SHA-1");

        if $z0 != 0 goto label01;

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can only use SHA-1 for generating FIPS 186-2 parameters");

        throw $r25;

     label01:
        $r12 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.security.SecureRandom random>;

        virtualinvoke $r12.<java.security.SecureRandom: void nextBytes(byte[])>(r1);

        $r13 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>($r13, r1, r2);

        $i8 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r3, 0, $i8);

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void inc(byte[])>(r3);

        $r14 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>($r14, r3, r3);

        i1 = 0;

     label02:
        $i9 = lengthof r4;

        if i1 == $i9 goto label03;

        $b40 = r2[i1];

        $b36 = r3[i1];

        $b41 = $b40 ^ $b36;

        $b42 = (byte) $b41;

        r4[i1] = $b42;

        i1 = i1 + 1;

        goto label02;

     label03:
        $b11 = r4[0];

        $b10 = $b11 | -128;

        $b13 = (byte) $b10;

        r4[0] = $b13;

        $b12 = r4[19];

        $b15 = $b12 | 1;

        $b14 = (byte) $b15;

        r4[19] = $b14;

        $r15 = new java.math.BigInteger;

        specialinvoke $r15.<java.math.BigInteger: void <init>(int,byte[])>(1, r4);

        r26 = $r15;

        $i16 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int certainty>;

        $z1 = virtualinvoke r26.<java.math.BigInteger: boolean isProbablePrime(int)>($i16);

        if $z1 != 0 goto label04;

        goto label01;

     label04:
        r6 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>(r1);

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void inc(byte[])>(r6);

        i2 = 0;

     label05:
        if i2 >= 4096 goto label10;

        i3 = 0;

     label06:
        if i3 >= i0 goto label07;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void inc(byte[])>(r6);

        $r24 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>($r24, r6, r2);

        $i33 = lengthof r5;

        $i38 = i3 + 1;

        $i37 = lengthof r2;

        $i39 = $i38 * $i37;

        $i35 = $i33 - $i39;

        $i34 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r5, $i35, $i34);

        i3 = i3 + 1;

        goto label06;

     label07:
        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void inc(byte[])>(r6);

        $r16 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>($r16, r6, r2);

        $i23 = lengthof r2;

        $i18 = lengthof r5;

        $i19 = lengthof r2;

        $i17 = i0 * $i19;

        $i22 = $i18 - $i17;

        $i24 = $i23 - $i22;

        $i26 = lengthof r5;

        $i20 = lengthof r2;

        $i21 = i0 * $i20;

        $i27 = $i26 - $i21;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, $i24, r5, 0, $i27);

        $b25 = r5[0];

        $b29 = $b25 | -128;

        $b28 = (byte) $b29;

        r5[0] = $b28;

        $r18 = new java.math.BigInteger;

        specialinvoke $r18.<java.math.BigInteger: void <init>(int,byte[])>(1, r5);

        r27 = $r18;

        $r17 = virtualinvoke r26.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        r7 = virtualinvoke r27.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r17);

        $r20 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $r19 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r20);

        r8 = virtualinvoke r27.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r19);

        $i32 = virtualinvoke r8.<java.math.BigInteger: int bitLength()>();

        $i31 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i32 == $i31 goto label08;

        goto label09;

     label08:
        $i30 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int certainty>;

        $z2 = virtualinvoke r8.<java.math.BigInteger: boolean isProbablePrime(int)>($i30);

        if $z2 == 0 goto label09;

        $r23 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.security.SecureRandom random>;

        r9 = staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger calculateGenerator_FIPS186_2(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>(r8, r26, $r23);

        $r22 = new com.android.org.bouncycastle.crypto.params.DSAParameters;

        $r21 = new com.android.org.bouncycastle.crypto.params.DSAValidationParameters;

        specialinvoke $r21.<com.android.org.bouncycastle.crypto.params.DSAValidationParameters: void <init>(byte[],int)>(r1, i2);

        specialinvoke $r22.<com.android.org.bouncycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,com.android.org.bouncycastle.crypto.params.DSAValidationParameters)>(r8, r26, r9, $r21);

        return $r22;

     label09:
        i2 = i2 + 1;

        goto label05;

     label10:
        goto label01;
    }

    private static java.math.BigInteger calculateGenerator_FIPS186_2(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom)
    {
        java.math.BigInteger r0, r1, r3, r4, r5, r6, $r7, $r8, $r9, $r10;
        java.security.SecureRandom r2;
        int $i0;

        r0 := @parameter0: java.math.BigInteger;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: java.security.SecureRandom;

        $r7 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $r8 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r7);

        r3 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r1);

        $r9 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger TWO>;

        r4 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r9);

     label1:
        $r10 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger TWO>;

        r5 = staticinvoke <com.android.org.bouncycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r10, r4, r2);

        r6 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r3, r0);

        $i0 = virtualinvoke r6.<java.math.BigInteger: int bitLength()>();

        if $i0 <= 1 goto label2;

        return r6;

     label2:
        goto label1;
    }

    private com.android.org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()
    {
        com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator r0;
        com.android.org.bouncycastle.crypto.Digest r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        byte[] r2, r3, r6;
        java.math.BigInteger r4, r5, r7, r8, r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r30, $r33, $r34, r35, r36, r37, r38;
        java.security.SecureRandom $r10, $r27;
        boolean $z0, $z1;
        com.android.org.bouncycastle.crypto.params.DSAParameters $r26, $r32;
        com.android.org.bouncycastle.crypto.params.DSAValidationParameters $r28, $r31;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator;

        r1 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $i9 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        i0 = $i9 * 8;

        i1 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        $i8 = i1 / 8;

        r2 = newarray (byte)[$i8];

        $i11 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        $i10 = $i11 - 1;

        i2 = $i10 / i0;

        $i13 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        $i12 = $i13 - 1;

        i3 = $i12 % i0;

        $i14 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r3 = newarray (byte)[$i14];

     label01:
        $r10 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.security.SecureRandom random>;

        virtualinvoke $r10.<java.security.SecureRandom: void nextBytes(byte[])>(r2);

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>(r1, r2, r3);

        $r11 = new java.math.BigInteger;

        specialinvoke $r11.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        $r12 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $i15 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        $i16 = $i15 - 1;

        $r13 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i16);

        r4 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r13);

        $r14 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $i17 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int N>;

        $i18 = $i17 - 1;

        $r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i18);

        $r18 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r4);

        $r19 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $r16 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r19);

        $r17 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger TWO>;

        $r20 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r17);

        r5 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r20);

        $i19 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int certainty>;

        $z0 = virtualinvoke r5.<java.math.BigInteger: boolean isProbablePrime(int)>($i19);

        if $z0 != 0 goto label02;

        goto label01;

     label02:
        r6 = staticinvoke <com.android.org.bouncycastle.util.Arrays: byte[] clone(byte[])>(r2);

        $i22 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        i4 = 4 * $i22;

        i5 = 0;

     label03:
        if i5 >= i4 goto label10;

        r7 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ZERO>;

        i6 = 0;

        i7 = 0;

     label04:
        if i6 > i2 goto label06;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void inc(byte[])>(r6);

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>(r1, r6, r3);

        $r29 = new java.math.BigInteger;

        specialinvoke $r29.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        r9 = $r29;

        if i6 != i2 goto label05;

        $r33 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $r34 = virtualinvoke $r33.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i3);

        r9 = virtualinvoke r9.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r34);

     label05:
        $r30 = virtualinvoke r9.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i7);

        r7 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r30);

        i6 = i6 + 1;

        i7 = i7 + i0;

        goto label04;

     label06:
        $r23 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $i20 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        $i21 = $i20 - 1;

        $r22 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i21);

        r35 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r22);

        $r21 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(1);

        r36 = virtualinvoke r35.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r21);

        $r25 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $r24 = virtualinvoke r36.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r25);

        r37 = virtualinvoke r35.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r24);

        $i25 = virtualinvoke r37.<java.math.BigInteger: int bitLength()>();

        $i24 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int L>;

        if $i25 == $i24 goto label07;

        goto label09;

     label07:
        $i23 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int certainty>;

        $z1 = virtualinvoke r37.<java.math.BigInteger: boolean isProbablePrime(int)>($i23);

        if $z1 == 0 goto label09;

        $i26 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int usageIndex>;

        if $i26 < 0 goto label08;

        $i28 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int usageIndex>;

        r8 = staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger calculateGenerator_FIPS186_3_Verifiable(com.android.org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,byte[],int)>(r1, r37, r5, r2, $i28);

        if r8 == null goto label08;

        $r32 = new com.android.org.bouncycastle.crypto.params.DSAParameters;

        $r28 = new com.android.org.bouncycastle.crypto.params.DSAValidationParameters;

        $i27 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: int usageIndex>;

        specialinvoke $r28.<com.android.org.bouncycastle.crypto.params.DSAValidationParameters: void <init>(byte[],int,int)>(r2, i5, $i27);

        specialinvoke $r32.<com.android.org.bouncycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,com.android.org.bouncycastle.crypto.params.DSAValidationParameters)>(r37, r5, r8, $r28);

        return $r32;

     label08:
        $r27 = r0.<com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.security.SecureRandom random>;

        r38 = staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger calculateGenerator_FIPS186_3_Unverifiable(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>(r37, r5, $r27);

        $r26 = new com.android.org.bouncycastle.crypto.params.DSAParameters;

        $r31 = new com.android.org.bouncycastle.crypto.params.DSAValidationParameters;

        specialinvoke $r31.<com.android.org.bouncycastle.crypto.params.DSAValidationParameters: void <init>(byte[],int)>(r2, i5);

        specialinvoke $r26.<com.android.org.bouncycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,com.android.org.bouncycastle.crypto.params.DSAValidationParameters)>(r37, r5, r38, $r31);

        return $r26;

     label09:
        i5 = i5 + 1;

        goto label03;

     label10:
        goto label01;
    }

    private static java.math.BigInteger calculateGenerator_FIPS186_3_Unverifiable(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom)
    {
        java.math.BigInteger r0, r1, $r3;
        java.security.SecureRandom r2;

        r0 := @parameter0: java.math.BigInteger;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: java.security.SecureRandom;

        $r3 = staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger calculateGenerator_FIPS186_2(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>(r0, r1, r2);

        return $r3;
    }

    private static java.math.BigInteger calculateGenerator_FIPS186_3_Verifiable(com.android.org.bouncycastle.crypto.Digest, java.math.BigInteger, java.math.BigInteger, byte[], int)
    {
        com.android.org.bouncycastle.crypto.Digest r0;
        java.math.BigInteger r1, r2, r4, r8, r9, $r10, $r11, $r12, $r13;
        byte[] r3, r5, r6, r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14;
        byte $b10;

        r0 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: java.math.BigInteger;

        r3 := @parameter3: byte[];

        i0 := @parameter4: int;

        $r10 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE>;

        $r11 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r10);

        r4 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r2);

        r5 = staticinvoke <com.android.org.bouncycastle.util.encoders.Hex: byte[] decode(java.lang.String)>("6767656E");

        $i2 = lengthof r3;

        $i3 = lengthof r5;

        $i5 = $i2 + $i3;

        $i4 = $i5 + 1;

        $i7 = $i4 + 2;

        r6 = newarray (byte)[$i7];

        $i6 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r3, 0, r6, 0, $i6);

        $i8 = lengthof r3;

        $i9 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r5, 0, r6, $i8, $i9);

        $i11 = lengthof r6;

        $i13 = $i11 - 3;

        $b10 = (byte) i0;

        r6[$i13] = $b10;

        $i12 = interfaceinvoke r0.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r7 = newarray (byte)[$i12];

        i1 = 1;

     label1:
        if i1 >= 65536 goto label3;

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void inc(byte[])>(r6);

        staticinvoke <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: void hash(com.android.org.bouncycastle.crypto.Digest,byte[],byte[])>(r0, r6, r7);

        $r12 = new java.math.BigInteger;

        specialinvoke $r12.<java.math.BigInteger: void <init>(int,byte[])>(1, r7);

        r8 = $r12;

        r9 = virtualinvoke r8.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r4, r1);

        $r13 = <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger TWO>;

        $i14 = virtualinvoke r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r13);

        if $i14 < 0 goto label2;

        return r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static void hash(com.android.org.bouncycastle.crypto.Digest, byte[], byte[])
    {
        com.android.org.bouncycastle.crypto.Digest r0;
        byte[] r1, r2;
        int $i0;

        r0 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        $i0 = lengthof r1;

        interfaceinvoke r0.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, 0, $i0);

        interfaceinvoke r0.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        return;
    }

    private static int getDefaultN(int)
    {
        int i0;
        short $s1;

        i0 := @parameter0: int;

        if i0 <= 1024 goto label1;

        $s1 = 256;

        goto label2;

     label1:
        $s1 = 160;

     label2:
        return $s1;
    }

    private static void inc(byte[])
    {
        byte[] r0;
        int i0, $i2, $i4, $i5;
        byte b1, $b3;

        r0 := @parameter0: byte[];

        $i2 = lengthof r0;

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label3;

        $b3 = r0[i0];

        $i4 = $b3 + 1;

        $i5 = $i4 & 255;

        b1 = (byte) $i5;

        r0[i0] = b1;

        if b1 == 0 goto label2;

        goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0, $r1, $r2;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ZERO> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger ONE> = $r1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        <com.android.org.bouncycastle.crypto.generators.DSAParametersGenerator: java.math.BigInteger TWO> = $r2;

        return;
    }
}
