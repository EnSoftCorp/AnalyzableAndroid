public class com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore extends com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi
{

    public void <init>()
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore r0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void <init>(int)>(1);

        return;
    }

    public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore r0;
        java.io.InputStream r1;
        char[] r2;
        java.io.DataInputStream r3, $r13;
        int i0, i1, $i2, $i3, $i4, $i5;
        byte[] r4, r10, r11;
        java.lang.String r5;
        javax.crypto.Cipher r6;
        javax.crypto.CipherInputStream r7, $r16;
        com.android.org.bouncycastle.crypto.digests.SHA1Digest r8, $r15;
        com.android.org.bouncycastle.crypto.io.DigestInputStream r9, $r17;
        java.util.Hashtable $r12, $r19;
        java.io.IOException $r14, $r18, $r20, $r21;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: char[];

        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: java.util.Hashtable table>;

        virtualinvoke $r12.<java.util.Hashtable: void clear()>();

        if r1 != null goto label1;

        return;

     label1:
        $r13 = new java.io.DataInputStream;

        specialinvoke $r13.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r3 = $r13;

        i0 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if i0 == 2 goto label2;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("Wrong version of key store.");

        throw $r21;

     label2:
        $i2 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        r4 = newarray (byte)[$i2];

        $i3 = lengthof r4;

        if $i3 == 20 goto label3;

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Key store corrupted.");

        throw $r20;

     label3:
        virtualinvoke r3.<java.io.DataInputStream: void readFully(byte[])>(r4);

        i1 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if i1 < 0 goto label4;

        if i1 <= 4096 goto label5;

     label4:
        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Key store corrupted.");

        throw $r14;

     label5:
        if i0 != 0 goto label6;

        r5 = "OldPBEWithSHAAndTwofish-CBC";

        goto label7;

     label6:
        r5 = "PBEWithSHAAndTwofish-CBC";

     label7:
        r6 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>(r5, 2, r2, r4, i1);

        $r16 = new javax.crypto.CipherInputStream;

        specialinvoke $r16.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r3, r6);

        r7 = $r16;

        $r15 = new com.android.org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        r8 = $r15;

        $r17 = new com.android.org.bouncycastle.crypto.io.DigestInputStream;

        specialinvoke $r17.<com.android.org.bouncycastle.crypto.io.DigestInputStream: void <init>(java.io.InputStream,com.android.org.bouncycastle.crypto.Digest)>(r7, r8);

        r9 = $r17;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: void loadStore(java.io.InputStream)>(r9);

        $i4 = interfaceinvoke r8.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r10 = newarray (byte)[$i4];

        interfaceinvoke r8.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r10, 0);

        $i5 = interfaceinvoke r8.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r11 = newarray (byte)[$i5];

        staticinvoke <com.android.org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>(r7, r11);

        $z0 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>(r10, r11);

        if $z0 != 0 goto label8;

        $r19 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: java.util.Hashtable table>;

        virtualinvoke $r19.<java.util.Hashtable: void clear()>();

        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("KeyStore integrity check failed.");

        throw $r18;

     label8:
        return;
    }

    public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore r0;
        java.io.OutputStream r1;
        char[] r2;
        java.io.DataOutputStream r3, $r9;
        byte[] r4, r8;
        int i0, $i1, $i2, $i3, $i4;
        javax.crypto.Cipher r5;
        javax.crypto.CipherOutputStream r6, $r12;
        com.android.org.bouncycastle.crypto.io.DigestOutputStream r7, $r14;
        java.security.SecureRandom $r10, $r11;
        com.android.org.bouncycastle.crypto.digests.SHA1Digest $r13;
        com.android.org.bouncycastle.util.io.TeeOutputStream $r15;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: char[];

        $r9 = new java.io.DataOutputStream;

        specialinvoke $r9.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        r3 = $r9;

        r4 = newarray (byte)[20];

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: java.security.SecureRandom random>;

        $i1 = virtualinvoke $r10.<java.security.SecureRandom: int nextInt()>();

        $i2 = $i1 & 1023;

        i0 = 1024 + $i2;

        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: java.security.SecureRandom random>;

        virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>(r4);

        $i4 = r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: int version>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i4);

        $i3 = lengthof r4;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i3);

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r4);

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(i0);

        r5 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>("PBEWithSHAAndTwofish-CBC", 1, r2, r4, i0);

        $r12 = new javax.crypto.CipherOutputStream;

        specialinvoke $r12.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r3, r5);

        r6 = $r12;

        $r14 = new com.android.org.bouncycastle.crypto.io.DigestOutputStream;

        $r13 = new com.android.org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r13.<com.android.org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r14.<com.android.org.bouncycastle.crypto.io.DigestOutputStream: void <init>(com.android.org.bouncycastle.crypto.Digest)>($r13);

        r7 = $r14;

        $r15 = new com.android.org.bouncycastle.util.io.TeeOutputStream;

        specialinvoke $r15.<com.android.org.bouncycastle.util.io.TeeOutputStream: void <init>(java.io.OutputStream,java.io.OutputStream)>(r6, r7);

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore: void saveStore(java.io.OutputStream)>($r15);

        r8 = virtualinvoke r7.<com.android.org.bouncycastle.crypto.io.DigestOutputStream: byte[] getDigest()>();

        virtualinvoke r6.<javax.crypto.CipherOutputStream: void write(byte[])>(r8);

        virtualinvoke r6.<javax.crypto.CipherOutputStream: void close()>();

        return;
    }
}
