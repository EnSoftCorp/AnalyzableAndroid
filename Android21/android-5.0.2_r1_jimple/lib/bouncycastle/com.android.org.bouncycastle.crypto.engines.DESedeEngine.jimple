public class com.android.org.bouncycastle.crypto.engines.DESedeEngine extends com.android.org.bouncycastle.crypto.engines.DESEngine
{
    protected static final int BLOCK_SIZE;
    private int[] workingKey1;
    private int[] workingKey2;
    private int[] workingKey3;
    private boolean forEncryption;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.engines.DESedeEngine r0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.DESedeEngine;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESEngine: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey1> = null;

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey2> = null;

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey3> = null;

        return;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.engines.DESedeEngine r0;
        boolean z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.CipherParameters r1;
        byte[] r2, r3, r4, r5;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r7, $r8, $r9, $r10;
        java.lang.IllegalArgumentException $r11, $r13;
        java.lang.StringBuilder $r12, $r15, $r16;
        java.lang.Class $r14;
        java.lang.String $r17, $r18;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.DESedeEngine;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.KeyParameter;

        if $z1 != 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to DESede init - ");

        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label1:
        $r6 = (com.android.org.bouncycastle.crypto.params.KeyParameter) r1;

        r2 = virtualinvoke $r6.<com.android.org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $i0 = lengthof r2;

        if $i0 == 24 goto label2;

        $i5 = lengthof r2;

        if $i5 == 16 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key size must be 16 or 24 bytes.");

        throw $r11;

     label2:
        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: boolean forEncryption> = z0;

        r3 = newarray (byte)[8];

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, 0, $i1);

        $r7 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] generateWorkingKey(boolean,byte[])>(z0, r3);

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey1> = $r7;

        r4 = newarray (byte)[8];

        $i2 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 8, r4, 0, $i2);

        if z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $r8 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] generateWorkingKey(boolean,byte[])>($z2, r4);

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey2> = $r8;

        $i3 = lengthof r2;

        if $i3 != 24 goto label5;

        r5 = newarray (byte)[8];

        $i4 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 16, r5, 0, $i4);

        $r10 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] generateWorkingKey(boolean,byte[])>(z0, r5);

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey3> = $r10;

        goto label6;

     label5:
        $r9 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey1>;

        r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey3> = $r9;

     label6:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.engines.DESedeEngine r0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.DESedeEngine;

        return "DESede";
    }

    public int getBlockSize()
    {
        com.android.org.bouncycastle.crypto.engines.DESedeEngine r0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.DESedeEngine;

        return 8;
    }

    public int processBlock(byte[], int, byte[], int)
    {
        com.android.org.bouncycastle.crypto.engines.DESedeEngine r0;
        byte[] r1, r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        com.android.org.bouncycastle.crypto.DataLengthException $r11;
        com.android.org.bouncycastle.crypto.OutputLengthException $r12;
        java.lang.IllegalStateException $r13;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.DESedeEngine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $r4 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey1>;

        if $r4 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DESede engine not initialised");

        throw $r13;

     label1:
        $i3 = i0 + 8;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label2;

        $r11 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r11.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r11;

     label2:
        $i5 = i1 + 8;

        $i4 = lengthof r2;

        if $i5 <= $i4 goto label3;

        $r12 = new com.android.org.bouncycastle.crypto.OutputLengthException;

        specialinvoke $r12.<com.android.org.bouncycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r12;

     label3:
        r3 = newarray (byte)[8];

        $z0 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: boolean forEncryption>;

        if $z0 == 0 goto label4;

        $r8 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey1>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: void desFunc(int[],byte[],int,byte[],int)>($r8, r1, i0, r3, 0);

        $r10 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey2>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: void desFunc(int[],byte[],int,byte[],int)>($r10, r3, 0, r3, 0);

        $r9 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey3>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: void desFunc(int[],byte[],int,byte[],int)>($r9, r3, 0, r2, i1);

        goto label5;

     label4:
        $r5 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey3>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: void desFunc(int[],byte[],int,byte[],int)>($r5, r1, i0, r3, 0);

        $r6 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey2>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: void desFunc(int[],byte[],int,byte[],int)>($r6, r3, 0, r3, 0);

        $r7 = r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: int[] workingKey1>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.engines.DESedeEngine: void desFunc(int[],byte[],int,byte[],int)>($r7, r3, 0, r2, i1);

     label5:
        return 8;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.engines.DESedeEngine r0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.DESedeEngine;

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.bouncycastle.crypto.engines.DESedeEngine: int BLOCK_SIZE> = 8;

        return;
    }
}
