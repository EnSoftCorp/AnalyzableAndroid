public class com.android.org.bouncycastle.jce.provider.CertBlacklist extends java.lang.Object
{
    private static final java.lang.String ANDROID_DATA;
    private static final java.lang.String BLACKLIST_ROOT;
    public static final java.lang.String DEFAULT_PUBKEY_BLACKLIST_PATH;
    public static final java.lang.String DEFAULT_SERIAL_BLACKLIST_PATH;
    private static final java.util.logging.Logger logger;
    public final java.util.Set serialBlacklist;
    public final java.util.Set pubkeyBlacklist;

    public void <init>()
    {
        com.android.org.bouncycastle.jce.provider.CertBlacklist r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.org.bouncycastle.jce.provider.CertBlacklist;

        $r2 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String DEFAULT_PUBKEY_BLACKLIST_PATH>;

        $r1 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String DEFAULT_SERIAL_BLACKLIST_PATH>;

        specialinvoke r0.<com.android.org.bouncycastle.jce.provider.CertBlacklist: void <init>(java.lang.String,java.lang.String)>($r2, $r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        com.android.org.bouncycastle.jce.provider.CertBlacklist r0;
        java.lang.String r1, r2;
        java.util.Set $r3, $r4;

        r0 := @this: com.android.org.bouncycastle.jce.provider.CertBlacklist;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.Set readSerialBlackList(java.lang.String)>(r2);

        r0.<com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.Set serialBlacklist> = $r3;

        $r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.Set readPublicKeyBlackList(java.lang.String)>(r1);

        r0.<com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.Set pubkeyBlacklist> = $r4;

        return;
    }

    private static boolean isHex(java.lang.String)
    {
        java.lang.String r0, $r9;
        java.lang.NumberFormatException r1, $r3;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.util.logging.Logger $r5;
        java.util.logging.Level $r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String,int)>(r0, 16);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r5 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.logging.Logger logger>;

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse hex value ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r6, $r9, r1);

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static boolean isPubkeyHash(java.lang.String)
    {
        java.lang.String r0, $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 40 goto label1;

        $r2 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.logging.Logger logger>;

        $r3 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pubkey hash length: ");

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r3, $r6);

        return 0;

     label1:
        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: boolean isHex(java.lang.String)>(r0);

        return $z0;
    }

    private static java.lang.String readBlacklist(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.IOException $r3, r7;
        java.util.logging.Level $r4;
        java.util.logging.Logger $r5;
        java.io.FileNotFoundException $r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String readFileAsString(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r3 := @caughtexception;

        r7 = $r3;

        $r5 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.logging.Logger logger>;

        $r4 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r4, "Could not read blacklist", r7);

     label5:
        return "";

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static java.lang.String readFileAsString(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r2;
        java.io.ByteArrayOutputStream $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.io.ByteArrayOutputStream readFileAsBytes(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8");

        return $r2;
    }

    private static java.io.ByteArrayOutputStream readFileAsBytes(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.RandomAccessFile r1, $r6;
        java.io.ByteArrayOutputStream r2, r4, $r7;
        byte[] r3;
        int i0, $i2;
        java.lang.Throwable r5, $r8;
        long $l1;

        r0 := @parameter0: java.lang.String;

        r1 = null;

     label1:
        $r6 = new java.io.RandomAccessFile;

        specialinvoke $r6.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r0, "r");

        r1 = $r6;

        $r7 = new java.io.ByteArrayOutputStream;

        $l1 = virtualinvoke r1.<java.io.RandomAccessFile: long length()>();

        $i2 = (int) $l1;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>(int)>($i2);

        r2 = $r7;

        r3 = newarray (byte)[8192];

     label2:
        i0 = virtualinvoke r1.<java.io.RandomAccessFile: int read(byte[])>(r3);

        if i0 != -1 goto label4;

        r4 = r2;

     label3:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: void closeQuietly(java.io.Closeable)>(r1);

        return r4;

     label4:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, i0);

        goto label2;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: void closeQuietly(java.io.Closeable)>(r1);

        throw r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    private static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.RuntimeException r1, $r2;
        java.lang.Exception $r3;

        r0 := @parameter0: java.io.Closeable;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        throw r1;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private static final java.util.Set readSerialBlackList(java.lang.String)
    {
        java.lang.String r0, r2, r4, $r29;
        java.util.HashSet r1, $r6;
        java.lang.String[] r3;
        int i0, i1;
        java.lang.NumberFormatException r5, $r23;
        java.math.BigInteger[] $r7;
        java.math.BigInteger $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r24;
        boolean $z0;
        java.util.Set $r21;
        java.util.List $r22;
        java.util.logging.Level $r25;
        java.lang.StringBuilder $r26, $r27, $r30;
        java.util.logging.Logger $r28;

        r0 := @parameter0: java.lang.String;

        $r6 = new java.util.HashSet;

        $r7 = newarray (java.math.BigInteger)[13];

        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String,int)>("077a59bcd53459601ca6907267a6dd1c", 16);

        $r7[0] = $r8;

        $r9 = new java.math.BigInteger;

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String,int)>("047ecbe9fca55f7bd09eae36e10cae1e", 16);

        $r7[1] = $r9;

        $r10 = new java.math.BigInteger;

        specialinvoke $r10.<java.math.BigInteger: void <init>(java.lang.String,int)>("d8f35f4eb7872b2dab0692e315382fb0", 16);

        $r7[2] = $r10;

        $r11 = new java.math.BigInteger;

        specialinvoke $r11.<java.math.BigInteger: void <init>(java.lang.String,int)>("b0b7133ed096f9b56fae91c874bd3ac0", 16);

        $r7[3] = $r11;

        $r12 = new java.math.BigInteger;

        specialinvoke $r12.<java.math.BigInteger: void <init>(java.lang.String,int)>("9239d5348f40d1695a745470e1f23f43", 16);

        $r7[4] = $r12;

        $r13 = new java.math.BigInteger;

        specialinvoke $r13.<java.math.BigInteger: void <init>(java.lang.String,int)>("e9028b9578e415dc1a710a2b88154447", 16);

        $r7[5] = $r13;

        $r14 = new java.math.BigInteger;

        specialinvoke $r14.<java.math.BigInteger: void <init>(java.lang.String,int)>("d7558fdaf5f1105bb213282b707729a3", 16);

        $r7[6] = $r14;

        $r15 = new java.math.BigInteger;

        specialinvoke $r15.<java.math.BigInteger: void <init>(java.lang.String,int)>("f5c86af36162f13a64f54f6dc9587c06", 16);

        $r7[7] = $r15;

        $r16 = new java.math.BigInteger;

        specialinvoke $r16.<java.math.BigInteger: void <init>(java.lang.String,int)>("392a434f0e07df1f8aa305de34e0c229", 16);

        $r7[8] = $r16;

        $r17 = new java.math.BigInteger;

        specialinvoke $r17.<java.math.BigInteger: void <init>(java.lang.String,int)>("3e75ced46b693021218830ae86a82a71", 16);

        $r7[9] = $r17;

        $r18 = new java.math.BigInteger;

        specialinvoke $r18.<java.math.BigInteger: void <init>(java.lang.String,int)>("864", 16);

        $r7[10] = $r18;

        $r20 = new java.math.BigInteger;

        specialinvoke $r20.<java.math.BigInteger: void <init>(java.lang.String,int)>("827", 16);

        $r7[11] = $r20;

        $r19 = new java.math.BigInteger;

        specialinvoke $r19.<java.math.BigInteger: void <init>(java.lang.String,int)>("31da7", 16);

        $r7[12] = $r19;

        $r22 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>($r22);

        r1 = $r6;

        r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String readBlacklist(java.lang.String)>(r0);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label6;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r4 = r3[i1];

     label2:
        $r24 = new java.math.BigInteger;

        specialinvoke $r24.<java.math.BigInteger: void <init>(java.lang.String,int)>(r4, 16);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r24);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        r5 = $r23;

        $r28 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.logging.Logger logger>;

        $r25 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to blacklist invalid serial number ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r25, $r29, r5);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        $r21 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        return $r21;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private static final java.util.Set readPublicKeyBlackList(java.lang.String)
    {
        java.lang.String r0, r2, r4, $r7, $r9, $r11, $r13, $r14, $r17, $r18, $r21, $r24, $r29, r33;
        java.util.HashSet r1, $r5;
        java.lang.String[] r3;
        int i0, i1;
        byte[][] $r6;
        byte[] $r8, $r10, $r12, $r15, $r16, $r19, $r20, $r22, $r23, $r32;
        boolean $z0, $z1;
        java.util.List $r25;
        java.lang.StringBuilder $r26, $r28, $r31;
        java.util.logging.Logger $r27;
        java.util.logging.Level $r30;

        r0 := @parameter0: java.lang.String;

        $r5 = new java.util.HashSet;

        $r6 = newarray (byte[])[9];

        $r7 = "410f36363258f30b347d12ce4863e433437806a8";

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        $r6[0] = $r8;

        $r9 = "ba3e7bd38cd7e1e6b9cd4c219962e59d7a2f4e37";

        $r10 = virtualinvoke $r9.<java.lang.String: byte[] getBytes()>();

        $r6[1] = $r10;

        $r11 = "e23b8d105f87710a68d9248050ebefc627be4ca6";

        $r12 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        $r6[2] = $r12;

        $r13 = "7b2e16bc39bcd72b456e9f055d1de615b74945db";

        $r15 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        $r6[3] = $r15;

        $r14 = "e8f91200c65cee16e039b9f883841661635f81c5";

        $r16 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();

        $r6[4] = $r16;

        $r17 = "0129bcd5b448ae8d2496d1c3e19723919088e152";

        $r19 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();

        $r6[5] = $r19;

        $r18 = "5f3ab33d55007054bc5e3e5553cd8d8465d77c61";

        $r20 = virtualinvoke $r18.<java.lang.String: byte[] getBytes()>();

        $r6[6] = $r20;

        $r21 = "783333c9687df63377efceddd82efa9101913e8e";

        $r23 = virtualinvoke $r21.<java.lang.String: byte[] getBytes()>();

        $r6[7] = $r23;

        $r24 = "3ecf4bbbe46096d514bb539bb913d77aa4ef31bf";

        $r22 = virtualinvoke $r24.<java.lang.String: byte[] getBytes()>();

        $r6[8] = $r22;

        $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>($r25);

        r1 = $r5;

        r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String readBlacklist(java.lang.String)>(r0);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label4;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        r33 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $z1 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertBlacklist: boolean isPubkeyHash(java.lang.String)>(r33);

        if $z1 == 0 goto label2;

        $r32 = virtualinvoke r33.<java.lang.String: byte[] getBytes()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r32);

        goto label3;

     label2:
        $r27 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.logging.Logger logger>;

        $r30 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to blacklist invalid pubkey ");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r30, $r29);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r1;
    }

    public boolean isPublicKeyBlackListed(java.security.PublicKey)
    {
        com.android.org.bouncycastle.jce.provider.CertBlacklist r0;
        java.security.PublicKey r1;
        byte[] r2, r4, r6, $r9;
        com.android.org.bouncycastle.crypto.Digest r3;
        java.util.Iterator r5;
        int $i0, $i1;
        java.util.Set $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;

        r0 := @this: com.android.org.bouncycastle.jce.provider.CertBlacklist;

        r1 := @parameter0: java.security.PublicKey;

        r2 = interfaceinvoke r1.<java.security.PublicKey: byte[] getEncoded()>();

        r3 = staticinvoke <com.android.org.bouncycastle.crypto.digests.AndroidDigestFactory: com.android.org.bouncycastle.crypto.Digest getSHA1()>();

        $i0 = lengthof r2;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r2, 0, $i0);

        $i1 = interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r4 = newarray (byte)[$i1];

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r4, 0);

        $r7 = r0.<com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.Set pubkeyBlacklist>;

        r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (byte[]) $r8;

        $r9 = staticinvoke <com.android.org.bouncycastle.util.encoders.Hex: byte[] encode(byte[])>(r4);

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r6, $r9);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean isSerialNumberBlackListed(java.math.BigInteger)
    {
        com.android.org.bouncycastle.jce.provider.CertBlacklist r0;
        java.math.BigInteger r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.jce.provider.CertBlacklist;

        r1 := @parameter0: java.math.BigInteger;

        $r2 = r0.<com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.Set serialBlacklist>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r2, $r5, $r7, $r10, $r12, $r15, $r16;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14;
        java.lang.Class $r17;
        java.util.logging.Logger $r18;

        $r0 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ANDROID_DATA");

        <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String ANDROID_DATA> = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String ANDROID_DATA>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/keychain/");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String BLACKLIST_ROOT> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String BLACKLIST_ROOT>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pubkey_blacklist.txt");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String DEFAULT_PUBKEY_BLACKLIST_PATH> = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String BLACKLIST_ROOT>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serial_blacklist.txt");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.lang.String DEFAULT_SERIAL_BLACKLIST_PATH> = $r15;

        $r17 = class "com/android/org/bouncycastle/jce/provider/CertBlacklist";

        $r16 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r18 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r16);

        <com.android.org.bouncycastle.jce.provider.CertBlacklist: java.util.logging.Logger logger> = $r18;

        return;
    }
}
