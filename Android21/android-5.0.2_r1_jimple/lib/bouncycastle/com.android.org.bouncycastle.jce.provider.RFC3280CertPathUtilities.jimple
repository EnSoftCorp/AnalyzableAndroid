public class com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities extends java.lang.Object
{
    private static final com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL;
    public static final java.lang.String CERTIFICATE_POLICIES;
    public static final java.lang.String POLICY_MAPPINGS;
    public static final java.lang.String INHIBIT_ANY_POLICY;
    public static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    public static final java.lang.String FRESHEST_CRL;
    public static final java.lang.String DELTA_CRL_INDICATOR;
    public static final java.lang.String POLICY_CONSTRAINTS;
    public static final java.lang.String BASIC_CONSTRAINTS;
    public static final java.lang.String CRL_DISTRIBUTION_POINTS;
    public static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    public static final java.lang.String NAME_CONSTRAINTS;
    public static final java.lang.String AUTHORITY_KEY_IDENTIFIER;
    public static final java.lang.String KEY_USAGE;
    public static final java.lang.String CRL_NUMBER;
    public static final java.lang.String ANY_POLICY;
    protected static final int KEY_CERT_SIGN;
    protected static final int CRL_SIGN;
    protected static final java.lang.String[] crlReasons;

    public void <init>()
    {
        com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities r0;

        r0 := @this: com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void processCRLB2(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.lang.Object r1, $r41, $r60;
        java.security.cert.X509CRL r2;
        java.lang.Exception r3, $r67, $r69, r80;
        java.util.ArrayList r4, $r19;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r5, r77, r78;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.io.IOException r6, $r63, $r65, r75;
        java.util.Enumeration r7, r74;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector r8, $r37, $r47, r73;
        java.lang.String $r9, $r12;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r10, $r13, $r31, $r39, $r50;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName $r11, $r22, r72, r76;
        java.security.cert.X509Extension $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r15, $r16, $r17, $r23, $r25, $r27, $r64, $r66, $r68, $r70;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint $r18, r71;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r20, $r21, $r30, $r43, $r52, $r61;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r24, $r26, $r29, $r35, $r45, $r54, $r58;
        com.android.org.bouncycastle.asn1.x509.X509Name $r28, $r46, $r55;
        byte[] $r32, $r49;
        javax.security.auth.x500.X500Principal $r33, $r48;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r34, $r42, $r44, $r51, $r57, $r59, $r62;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r36, $r38, $r56;
        com.android.org.bouncycastle.asn1.DERSequence $r40, $r53;
        com.android.org.bouncycastle.asn1.x509.BasicConstraints r79;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.security.cert.X509CRL;

     label01:
        $r9 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r9);

        r71 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r10);

     label02:
        goto label04;

     label03:
        $r69 := @caughtexception;

        r3 = $r69;

        $r70 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r70.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension could not be decoded.", r3);

        throw $r70;

     label04:
        if r71 == null goto label39;

        $r11 = virtualinvoke r71.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r11 == null goto label32;

        $r18 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>(r71);

        r72 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r4 = $r19;

        $i1 = virtualinvoke r72.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i1 != 0 goto label06;

        $r62 = virtualinvoke r72.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r61 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r62);

        r5 = virtualinvoke $r61.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label05:
        $i8 = lengthof r5;

        if i0 >= $i8 goto label06;

        $r58 = r5[i0];

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r58);

        i0 = i0 + 1;

        goto label05;

     label06:
        $i2 = virtualinvoke r72.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i2 != 1 goto label12;

        $r47 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r47.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r73 = $r47;

     label07:
        $r48 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $r49 = virtualinvoke $r48.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        $r50 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r49);

        $r56 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r50);

        r74 = virtualinvoke $r56.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label08:
        $z9 = interfaceinvoke r74.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z9 == 0 goto label09;

        $r60 = interfaceinvoke r74.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r59 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r60;

        virtualinvoke r73.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r59);

        goto label08;

     label09:
        goto label11;

     label10:
        $r63 := @caughtexception;

        r75 = $r63;

        $r64 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r64.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read CRL issuer.", r75);

        throw $r64;

     label11:
        $r57 = virtualinvoke r72.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        virtualinvoke r73.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r57);

        $r54 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r53 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r53.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r73);

        $r55 = staticinvoke <com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)>($r53);

        specialinvoke $r54.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(com.android.org.bouncycastle.asn1.x509.X509Name)>($r55);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r54);

     label12:
        z10 = 0;

        $r22 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r22 == null goto label27;

        r76 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        r77 = null;

        $i4 = virtualinvoke r76.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i4 != 0 goto label13;

        $r51 = virtualinvoke r76.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r52 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r51);

        r77 = virtualinvoke $r52.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

     label13:
        $i6 = virtualinvoke r76.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i6 != 1 goto label22;

        $r30 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r30 == null goto label14;

        $r43 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r77 = virtualinvoke $r43.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        goto label18;

     label14:
        r77 = newarray (com.android.org.bouncycastle.asn1.x509.GeneralName)[1];

     label15:
        $r29 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r28 = new com.android.org.bouncycastle.asn1.x509.X509Name;

        $r33 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r33.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        $r31 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r32);

        $r36 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r31;

        specialinvoke $r28.<com.android.org.bouncycastle.asn1.x509.X509Name: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r36);

        specialinvoke $r29.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(com.android.org.bouncycastle.asn1.x509.X509Name)>($r28);

        r77[0] = $r29;

     label16:
        goto label18;

     label17:
        $r65 := @caughtexception;

        r6 = $r65;

        $r66 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r66.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read certificate issuer.", r6);

        throw $r66;

     label18:
        i9 = 0;

     label19:
        $i7 = lengthof r77;

        if i9 >= $i7 goto label22;

        $r35 = r77[i9];

        $r34 = virtualinvoke $r35.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r39 = interfaceinvoke $r34.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r38 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r39);

        r7 = virtualinvoke $r38.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r37 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r37.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r8 = $r37;

     label20:
        $z8 = interfaceinvoke r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z8 == 0 goto label21;

        $r41 = interfaceinvoke r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r42 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r41;

        virtualinvoke r8.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r42);

        goto label20;

     label21:
        $r44 = virtualinvoke r76.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        virtualinvoke r8.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r44);

        $r45 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r46 = new com.android.org.bouncycastle.asn1.x509.X509Name;

        $r40 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r40.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r8);

        specialinvoke $r46.<com.android.org.bouncycastle.asn1.x509.X509Name: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r40);

        specialinvoke $r45.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(com.android.org.bouncycastle.asn1.x509.X509Name)>($r46);

        r77[i9] = $r45;

        i9 = i9 + 1;

        goto label19;

     label22:
        if r77 == null goto label25;

        i10 = 0;

     label23:
        $i5 = lengthof r77;

        if i10 >= $i5 goto label25;

        $r26 = r77[i10];

        $z7 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>($r26);

        if $z7 == 0 goto label24;

        z10 = 1;

        goto label25;

     label24:
        i10 = i10 + 1;

        goto label23;

     label25:
        if z10 != 0 goto label26;

        $r27 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r27.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No match for certificate CRL issuing distribution point name to cRLIssuer CRL distribution point.");

        throw $r27;

     label26:
        goto label32;

     label27:
        $r20 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r20 != null goto label28;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Either the cRLIssuer or the distributionPoint field must be contained in DistributionPoint.");

        throw $r25;

     label28:
        $r21 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r78 = virtualinvoke $r21.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i11 = 0;

     label29:
        $i3 = lengthof r78;

        if i11 >= $i3 goto label31;

        $r24 = r78[i11];

        $z6 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>($r24);

        if $z6 == 0 goto label30;

        z10 = 1;

        goto label31;

     label30:
        i11 = i11 + 1;

        goto label29;

     label31:
        if z10 != 0 goto label32;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No match for certificate CRL issuing distribution point name to cRLIssuer CRL distribution point.");

        throw $r23;

     label32:
        $r14 = (java.security.cert.X509Extension) r1;

        $r12 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $r13 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r14, $r12);

        r79 = staticinvoke <com.android.org.bouncycastle.asn1.x509.BasicConstraints: com.android.org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r13);

     label33:
        goto label35;

     label34:
        $r67 := @caughtexception;

        r80 = $r67;

        $r68 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r68.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Basic constraints extension could not be decoded.", r80);

        throw $r68;

     label35:
        $z0 = r1 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label38;

        $z3 = virtualinvoke r71.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts()>();

        if $z3 == 0 goto label36;

        if r79 == null goto label36;

        $z5 = virtualinvoke r79.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z5 == 0 goto label36;

        $r17 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CA Cert CRL only contains user certificates.");

        throw $r17;

     label36:
        $z2 = virtualinvoke r71.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsCACerts()>();

        if $z2 == 0 goto label38;

        if r79 == null goto label37;

        $z4 = virtualinvoke r79.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z4 != 0 goto label38;

     label37:
        $r16 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("End CRL only contains CA certificates.");

        throw $r16;

     label38:
        $z1 = virtualinvoke r71.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts()>();

        if $z1 == 0 goto label39;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("onlyContainsAttributeCerts boolean is asserted.");

        throw $r15;

     label39:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.io.IOException from label07 to label09 with label10;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Exception from label32 to label33 with label34;
    }

    protected static void processCRLB1(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.lang.Object r1;
        java.security.cert.X509CRL r2;
        com.android.org.bouncycastle.asn1.ASN1Primitive r3, $r20;
        boolean z0, z1, $z2, $z3, $z4;
        byte[] r4, $r19;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r5;
        int i0, $i1, $i2;
        java.io.IOException r6, $r23;
        java.lang.String $r7;
        javax.security.auth.x500.X500Principal $r8, $r10, $r11;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r9, $r12;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r13, $r14, $r15, $r22;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r16, $r18;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r17;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint $r21;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.security.cert.X509CRL;

        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        r3 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        z0 = 0;

        if r3 == null goto label01;

        $r21 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>(r3);

        $z4 = virtualinvoke $r21.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean isIndirectCRL()>();

        if $z4 == 0 goto label01;

        z0 = 1;

     label01:
        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        r4 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        z1 = 0;

        $r9 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r9 == null goto label10;

        $r12 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r5 = virtualinvoke $r12.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label02:
        $i1 = lengthof r5;

        if i0 >= $i1 goto label07;

        $r16 = r5[i0];

        $i2 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i2 != 4 goto label06;

     label03:
        $r18 = r5[i0];

        $r17 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r20 = interfaceinvoke $r17.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r19 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        $z3 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r19, r4);

        if $z3 == 0 goto label04;

        z1 = 1;

     label04:
        goto label06;

     label05:
        $r23 := @caughtexception;

        r6 = $r23;

        $r22 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r22.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL issuer information from distribution point cannot be decoded.", r6);

        throw $r22;

     label06:
        i0 = i0 + 1;

        goto label02;

     label07:
        if z1 == 0 goto label08;

        if z0 != 0 goto label08;

        $r14 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Distribution point contains cRLIssuer field but CRL is not indirect.");

        throw $r14;

     label08:
        if z1 != 0 goto label09;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL issuer of CRL does not match CRL issuer of distribution point.");

        throw $r15;

     label09:
        goto label11;

     label10:
        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        $z2 = virtualinvoke $r10.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label11;

        z1 = 1;

     label11:
        if z1 != 0 goto label12;

        $r13 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r13.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Cannot find matching CRL issuer for certificate.");

        throw $r13;

     label12:
        return;

        catch java.io.IOException from label03 to label04 with label05;
    }

    protected static com.android.org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL, com.android.org.bouncycastle.asn1.x509.DistributionPoint) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r1;
        java.lang.Exception r2, $r22;
        java.lang.String $r3;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r4;
        com.android.org.bouncycastle.asn1.x509.ReasonFlags $r5, $r6, $r8, $r10, $r13, $r14, $r16, $r18, $r20;
        com.android.org.bouncycastle.jce.provider.ReasonsMask $r7, $r9, $r11, $r12, $r15, $r17, $r19;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r21;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint r23;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

     label01:
        $r3 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r3);

        r23 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r4);

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        r2 = $r22;

        $r21 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r21.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension could not be decoded.", r2);

        throw $r21;

     label04:
        if r23 == null goto label05;

        $r13 = virtualinvoke r23.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        if $r13 == null goto label05;

        $r16 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        if $r16 == null goto label05;

        $r15 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r18 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r18);

        $r17 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r20 = virtualinvoke r23.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        specialinvoke $r17.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r20);

        $r19 = virtualinvoke $r15.<com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask intersect(com.android.org.bouncycastle.jce.provider.ReasonsMask)>($r17);

        return $r19;

     label05:
        if r23 == null goto label06;

        $r14 = virtualinvoke r23.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        if $r14 != null goto label07;

     label06:
        $r5 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        if $r5 != null goto label07;

        $r12 = <com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask allReasons>;

        return $r12;

     label07:
        $r6 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        if $r6 != null goto label08;

        $r7 = <com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask allReasons>;

        goto label09;

     label08:
        $r7 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r8 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        specialinvoke $r7.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r8);

     label09:
        if r23 != null goto label10;

        $r9 = <com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask allReasons>;

        goto label11;

     label10:
        $r9 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r10 = virtualinvoke r23.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        specialinvoke $r9.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r10);

     label11:
        $r11 = virtualinvoke $r7.<com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask intersect(com.android.org.bouncycastle.jce.provider.ReasonsMask)>($r9);

        return $r11;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    protected static java.util.Set processCRLF(java.security.cert.X509CRL, java.lang.Object, java.security.cert.X509Certificate, java.security.PublicKey, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0;
        java.lang.Object r1, $r26, $r28, $r31, $r34;
        java.security.cert.X509Certificate r2, r11, r57;
        java.security.PublicKey r3, $r35;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r4, r13, $r33;
        java.util.List r5, r15, $r18, $r19, $r22;
        com.android.org.bouncycastle.x509.X509CertStoreSelector r6, $r17, $r30, r51;
        byte[] r7;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r8, $r27, $r29, $r41, $r42, $r43, $r45, $r47, r56;
        java.util.ArrayList r9, r10, $r23, $r24;
        java.security.cert.CertPathBuilder r12;
        com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters r14;
        javax.security.auth.x500.X500Principal $r16;
        java.util.Collection $r20, $r21, r49;
        boolean $z3, $z4, $z5, $z6, $z8, $z9;
        java.util.HashSet $r25, r55;
        int $i0, $i1, i2;
        java.security.cert.CertPathBuilderResult $r32;
        java.security.cert.CertPath $r36;
        java.security.cert.CertPathBuilderException $r37, r52;
        java.lang.String $r38;
        java.lang.RuntimeException $r39;
        java.lang.Exception $r40, r54;
        java.security.cert.CertPathValidatorException $r44, r53;
        java.io.IOException $r46, r48;
        java.util.Iterator r50;
        boolean[] r58;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.security.PublicKey;

        r4 := @parameter4: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r5 := @parameter5: java.util.List;

        $r17 = new com.android.org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r17.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        r6 = $r17;

     label01:
        $r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r0);

        r7 = virtualinvoke $r16.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r6.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void setSubject(byte[])>(r7);

     label02:
        goto label04;

     label03:
        $r46 := @caughtexception;

        r48 = $r46;

        $r47 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r47.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Subject criteria for certificate selector to find issuer certificate for CRL could not be set.", r48);

        throw $r47;

     label04:
        $r18 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getStores()>();

        r49 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r6, $r18);

        $r19 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getAdditionalStores()>();

        $r20 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r6, $r19);

        interfaceinvoke r49.<java.util.Collection: boolean addAll(java.util.Collection)>($r20);

        $r22 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getCertStores()>();

        $r21 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r6, $r22);

        interfaceinvoke r49.<java.util.Collection: boolean addAll(java.util.Collection)>($r21);

     label05:
        goto label07;

     label06:
        $r42 := @caughtexception;

        r8 = $r42;

        $r43 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r43.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer certificate for CRL cannot be searched.", r8);

        throw $r43;

     label07:
        interfaceinvoke r49.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        r50 = interfaceinvoke r49.<java.util.Collection: java.util.Iterator iterator()>();

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r9 = $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r10 = $r24;

     label08:
        $z3 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r31 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.security.cert.X509Certificate) $r31;

        $z8 = virtualinvoke r11.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label09;

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r11);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label08;

     label09:
        r12 = staticinvoke <java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)>("PKIX", "BC");

        $r30 = new com.android.org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r30.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        r51 = $r30;

        virtualinvoke r51.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void setCertificate(java.security.cert.X509Certificate)>(r11);

        $r34 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r13 = (com.android.org.bouncycastle.x509.ExtendedPKIXParameters) $r34;

        virtualinvoke r13.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: void setTargetCertConstraints(java.security.cert.CertSelector)>(r51);

        $r33 = staticinvoke <com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: com.android.org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>(r13);

        r14 = (com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters) $r33;

        $z9 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r11);

        if $z9 == 0 goto label10;

        virtualinvoke r14.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: void setRevocationEnabled(boolean)>(0);

        goto label11;

     label10:
        virtualinvoke r14.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: void setRevocationEnabled(boolean)>(1);

     label11:
        $r32 = virtualinvoke r12.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters)>(r14);

        $r36 = interfaceinvoke $r32.<java.security.cert.CertPathBuilderResult: java.security.cert.CertPath getCertPath()>();

        r15 = virtualinvoke $r36.<java.security.cert.CertPath: java.util.List getCertificates()>();

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r11);

        $r35 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.PublicKey getNextWorkingKey(java.util.List,int)>(r15, 0);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r35);

     label12:
        goto label16;

     label13:
        $r37 := @caughtexception;

        r52 = $r37;

        $r41 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r41.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Internal error.", r52);

        throw $r41;

     label14:
        $r44 := @caughtexception;

        r53 = $r44;

        $r45 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r45.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Public key of issuer certificate of CRL could not be retrieved.", r53);

        throw $r45;

     label15:
        $r40 := @caughtexception;

        r54 = $r40;

        $r39 = new java.lang.RuntimeException;

        $r38 = virtualinvoke r54.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>($r38);

        throw $r39;

     label16:
        goto label08;

     label17:
        $r25 = new java.util.HashSet;

        specialinvoke $r25.<java.util.HashSet: void <init>()>();

        r55 = $r25;

        r56 = null;

        i2 = 0;

     label18:
        $i0 = interfaceinvoke r9.<java.util.List: int size()>();

        if i2 >= $i0 goto label22;

        $r28 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i2);

        r57 = (java.security.cert.X509Certificate) $r28;

        r58 = virtualinvoke r57.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if r58 == null goto label20;

        $i1 = lengthof r58;

        if $i1 < 7 goto label19;

        $z6 = r58[6];

        if $z6 != 0 goto label20;

     label19:
        $r29 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Issuer certificate key usage extension does not permit CRL signing.");

        r56 = $r29;

        goto label21;

     label20:
        $r26 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i2);

        interfaceinvoke r55.<java.util.Set: boolean add(java.lang.Object)>($r26);

     label21:
        i2 = i2 + 1;

        goto label18;

     label22:
        $z4 = interfaceinvoke r55.<java.util.Set: boolean isEmpty()>();

        if $z4 == 0 goto label23;

        if r56 != null goto label23;

        $r27 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r27.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Cannot find a valid issuer certificate.");

        throw $r27;

     label23:
        $z5 = interfaceinvoke r55.<java.util.Set: boolean isEmpty()>();

        if $z5 == 0 goto label24;

        if r56 == null goto label24;

        throw r56;

     label24:
        return r55;

        catch java.io.IOException from label01 to label02 with label03;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label06;
        catch java.security.cert.CertPathBuilderException from label09 to label12 with label13;
        catch java.security.cert.CertPathValidatorException from label09 to label12 with label14;
        catch java.lang.Exception from label09 to label12 with label15;
    }

    protected static java.security.PublicKey processCRLG(java.security.cert.X509CRL, java.util.Set) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0;
        java.util.Set r1;
        java.lang.Exception r2, r5, $r8;
        java.util.Iterator r3;
        java.security.PublicKey r4;
        boolean $z0;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: java.util.Set;

        r2 = null;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.PublicKey) $r7;

     label2:
        virtualinvoke r0.<java.security.cert.X509CRL: void verify(java.security.PublicKey)>(r4);

     label3:
        return r4;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        r2 = r5;

        goto label1;

     label5:
        $r6 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r6.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot verify CRL.", r2);

        throw $r6;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected static java.security.cert.X509CRL processCRLH(java.util.Set, java.security.PublicKey) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Set r0;
        java.security.PublicKey r1;
        java.lang.Exception r2, r5, $r8;
        java.util.Iterator r3;
        java.security.cert.X509CRL r4;
        boolean $z0;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.security.PublicKey;

        r2 = null;

        r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.X509CRL) $r7;

     label2:
        virtualinvoke r4.<java.security.cert.X509CRL: void verify(java.security.PublicKey)>(r1);

     label3:
        return r4;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        r2 = r5;

        goto label1;

     label5:
        if r2 == null goto label6;

        $r6 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r6.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot verify delta CRL.", r2);

        throw $r6;

     label6:
        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected static java.util.Set processCRLA1i(java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509Certificate r2;
        java.security.cert.X509CRL r3;
        java.util.HashSet r4, $r6;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r5, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, r21, r22, r23;
        boolean $z0;
        java.lang.String $r7, $r10;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8, $r11;
        java.util.Set $r9;
        com.android.org.bouncycastle.asn1.x509.CRLDistPoint r20;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.security.cert.X509CRL;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r4 = $r6;

        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label15;

     label01:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String FRESHEST_CRL>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        r20 = staticinvoke <com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r8);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

        r5 = $r12;

        $r14 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Freshest CRL extension could not be decoded from certificate.", r5);

        throw $r14;

     label04:
        if r20 != null goto label08;

     label05:
        $r10 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String FRESHEST_CRL>;

        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r10);

        r20 = staticinvoke <com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r11);

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

        r21 = $r17;

        $r19 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r19.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Freshest CRL extension could not be decoded from CRL.", r21);

        throw $r19;

     label08:
        if r20 == null goto label15;

     label09:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromCRLDistributionPoint(com.android.org.bouncycastle.asn1.x509.CRLDistPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r20, r1);

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

        r22 = $r13;

        $r16 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No new delta CRL locations could be added from Freshest CRL extension.", r22);

        throw $r16;

     label12:
        $r9 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>(r0, r1, r3);

        interfaceinvoke r4.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

     label13:
        goto label15;

     label14:
        $r15 := @caughtexception;

        r23 = $r15;

        $r18 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r18.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Exception obtaining delta CRLs.", r23);

        throw $r18;

     label15:
        return r4;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label03;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label05 to label06 with label07;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label09 to label10 with label11;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label12 to label13 with label14;
    }

    protected static java.util.Set[] processCRLA1ii(java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509Certificate r2;
        java.security.cert.X509CRL r3;
        java.util.HashSet r4, $r8;
        com.android.org.bouncycastle.x509.X509CRLStoreSelector r5, $r9;
        java.io.IOException r6, $r16;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r7, $r15, $r21, $r22;
        javax.security.auth.x500.X500Principal $r10;
        byte[] $r11;
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r12;
        boolean $z0;
        java.util.Set[] $r13;
        java.util.Set $r14, r23;
        java.lang.StringBuilder $r17, $r18, $r20;
        java.lang.String $r19;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.security.cert.X509CRL;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r4 = $r8;

        $r9 = new com.android.org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r9.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        r5 = $r9;

        virtualinvoke r5.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>(r2);

     label1:
        $r10 = virtualinvoke r3.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r11 = virtualinvoke $r10.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r5.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r11);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r6 = $r16;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot extract issuer from CRL.");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>($r19, r6);

        throw $r15;

     label4:
        virtualinvoke r5.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCompleteCRLEnabled(boolean)>(1);

        $r12 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL>;

        r23 = virtualinvoke $r12.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: java.util.Set findCRLs(com.android.org.bouncycastle.x509.X509CRLStoreSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)>(r5, r1, r0);

        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label8;

     label5:
        $r14 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>(r0, r1, r3);

        interfaceinvoke r4.<java.util.Set: boolean addAll(java.util.Collection)>($r14);

     label6:
        goto label8;

     label7:
        $r22 := @caughtexception;

        r7 = $r22;

        $r21 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r21.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Exception obtaining delta CRLs.", r7);

        throw $r21;

     label8:
        $r13 = newarray (java.util.Set)[2];

        $r13[0] = r23;

        $r13[1] = r4;

        return $r13;

        catch java.io.IOException from label1 to label2 with label3;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label5 to label6 with label7;
    }

    protected static void processCRLC(java.security.cert.X509CRL, java.security.cert.X509CRL, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0, r1;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r2;
        java.lang.Exception r3, r4, $r21, $r26;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r5, r6, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27;
        java.lang.String $r7, $r12, $r13, $r14;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8, $r11, r30, r31;
        boolean $z0, $z1, $z2, $z3, z4;
        javax.security.auth.x500.X500Principal $r9, $r10;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint r28, r29;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        if r0 != null goto label01;

        return;

     label01:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r7);

        r28 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r8);

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r3 = $r21;

        $r20 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension could not be decoded.", r3);

        throw $r20;

     label04:
        $z0 = virtualinvoke r2.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label20;

        $r9 = virtualinvoke r0.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r10 = virtualinvoke r1.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z1 = virtualinvoke $r9.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label05;

        $r18 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r18.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Complete CRL issuer does not match delta CRL issuer.");

        throw $r18;

     label05:
        $r12 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r12);

        r29 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r11);

     label06:
        goto label08;

     label07:
        $r26 := @caughtexception;

        r4 = $r26;

        $r27 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r27.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension from delta CRL could not be decoded.", r4);

        throw $r27;

     label08:
        z4 = 0;

        if r28 != null goto label09;

        if r29 != null goto label10;

        z4 = 1;

        goto label10;

     label09:
        $z2 = virtualinvoke r28.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean equals(java.lang.Object)>(r29);

        if $z2 == 0 goto label10;

        z4 = 1;

     label10:
        if z4 != 0 goto label11;

        $r19 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r19.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Issuing distribution point extension from delta CRL and complete CRL does not match.");

        throw $r19;

     label11:
        $r13 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER>;

        r30 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r13);

     label12:
        goto label14;

     label13:
        $r22 := @caughtexception;

        r5 = $r22;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Authority key identifier extension could not be extracted from complete CRL.", r5);

        throw $r23;

     label14:
        $r14 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER>;

        r31 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r14);

     label15:
        goto label17;

     label16:
        $r24 := @caughtexception;

        r6 = $r24;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Authority key identifier extension could not be extracted from delta CRL.", r6);

        throw $r25;

     label17:
        if r30 != null goto label18;

        $r16 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL authority key identifier is null.");

        throw $r16;

     label18:
        if r31 != null goto label19;

        $r17 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r17.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Delta CRL authority key identifier is null.");

        throw $r17;

     label19:
        $z3 = virtualinvoke r30.<com.android.org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>(r31);

        if $z3 != 0 goto label20;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Delta CRL authority key identifier does not match complete CRL authority key identifier.");

        throw $r15;

     label20:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label11 to label12 with label13;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label14 to label15 with label16;
    }

    protected static void processCRLI(java.util.Date, java.security.cert.X509CRL, java.lang.Object, com.android.org.bouncycastle.jce.provider.CertStatus, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        java.security.cert.X509CRL r1;
        java.lang.Object r2;
        com.android.org.bouncycastle.jce.provider.CertStatus r3;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r4;
        boolean $z0;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.android.org.bouncycastle.jce.provider.CertStatus;

        r4 := @parameter4: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $z0 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus)>(r0, r1, r2, r3);

     label1:
        return;
    }

    protected static void processCRLJ(java.util.Date, java.security.cert.X509CRL, java.lang.Object, com.android.org.bouncycastle.jce.provider.CertStatus) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        java.security.cert.X509CRL r1;
        java.lang.Object r2;
        com.android.org.bouncycastle.jce.provider.CertStatus r3;
        int $i0;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.android.org.bouncycastle.jce.provider.CertStatus;

        $i0 = virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i0 != 11 goto label1;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus)>(r0, r1, r2, r3);

     label1:
        return;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath, int, java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, i8;
        java.util.List[] r1;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r2, r16, $r43, r71, r76, r78, r83, r85, r86, r88;
        java.util.List r3, $r23, $r28, $r29, $r40, r87;
        java.security.cert.X509Certificate r4;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r5, r14, $r60, $r67;
        com.android.org.bouncycastle.asn1.ASN1Sequence r6, r9, $r53, r70, r79;
        java.util.HashMap r7, $r20;
        java.util.HashSet r8, r13, $r21, $r61;
        java.lang.String r10, r11, $r19, $r26, $r30, $r33, $r34, $r41, $r42, $r45, $r48, $r49, $r52, r74;
        java.util.Set r12, $r36, $r39, $r47, $r57, r72;
        java.lang.Exception r15, $r65;
        java.lang.Object $r17, $r22, $r25, $r27, $r31, $r38, $r44, $r50, $r51, $r62;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r18, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13;
        java.security.cert.PolicyNode $r24, $r35;
        java.util.ArrayList $r37;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r46;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r54, $r56, $r59;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r55, $r58;
        java.security.cert.CertPathValidatorException $r63, $r69, r82;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r64, $r66, $r68;
        java.util.Iterator r73, r75, r77, r84;
        java.util.Enumeration r80;
        com.android.org.bouncycastle.asn1.x509.PolicyInformation r81;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List[];

        r2 := @parameter3: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        i1 := @parameter4: int;

        r3 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r17 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.security.cert.X509Certificate) $r17;

        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        i3 = i2 - i0;

     label01:
        $r19 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        $r18 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r4, $r19);

        r70 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r18);

     label02:
        goto label04;

     label03:
        $r60 := @caughtexception;

        r5 = $r60;

        $r68 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r68.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy mappings extension could not be decoded.", r5, r0, i0);

        throw $r68;

     label04:
        r71 = r2;

        if r70 == null goto label39;

        r6 = r70;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r7 = $r20;

        $r21 = new java.util.HashSet;

        specialinvoke $r21.<java.util.HashSet: void <init>()>();

        r8 = $r21;

        i4 = 0;

     label05:
        $i5 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i4 >= $i5 goto label08;

        $r56 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(i4);

        r9 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r56;

        $r59 = virtualinvoke r9.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r58 = (com.android.org.bouncycastle.asn1.DERObjectIdentifier) $r59;

        r11 = virtualinvoke $r58.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r54 = virtualinvoke r9.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r55 = (com.android.org.bouncycastle.asn1.DERObjectIdentifier) $r54;

        r10 = virtualinvoke $r55.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z11 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z11 != 0 goto label06;

        $r61 = new java.util.HashSet;

        specialinvoke $r61.<java.util.HashSet: void <init>()>();

        r13 = $r61;

        interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>(r10);

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13);

        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r11);

        goto label07;

     label06:
        $r62 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r72 = (java.util.Set) $r62;

        interfaceinvoke r72.<java.util.Set: boolean add(java.lang.Object)>(r10);

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        r73 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label39;

        $r22 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        r74 = (java.lang.String) $r22;

        if i1 <= 0 goto label31;

        z12 = 0;

        $r29 = r1[i3];

        r75 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r50 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        r76 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r50;

        $r49 = virtualinvoke r76.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z9 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z9 == 0 goto label11;

        z12 = 1;

        $r51 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r74);

        $r57 = (java.util.Set) $r51;

        r76.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r57;

        goto label12;

     label11:
        goto label10;

     label12:
        if z12 != 0 goto label30;

        $r28 = r1[i3];

        r77 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label30;

        $r31 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        r78 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r31;

        $r30 = "2.5.29.32.0";

        $r34 = virtualinvoke r78.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z6 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z6 == 0 goto label29;

        r12 = null;

     label14:
        $r33 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r32 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r4, $r33);

        r79 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r32;

     label15:
        goto label17;

     label16:
        $r67 := @caughtexception;

        r14 = $r67;

        $r64 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r64.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certificate policies extension could not be decoded.", r14, r0, i0);

        throw $r64;

     label17:
        r80 = virtualinvoke r79.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label18:
        $z7 = interfaceinvoke r80.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z7 == 0 goto label27;

     label19:
        $r44 = interfaceinvoke r80.<java.util.Enumeration: java.lang.Object nextElement()>();

        r81 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r44);

     label20:
        goto label22;

     label21:
        $r65 := @caughtexception;

        r15 = $r65;

        $r63 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r63.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy information could not be decoded.", r15, r0, i0);

        throw $r63;

     label22:
        $r45 = "2.5.29.32.0";

        $r46 = virtualinvoke r81.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r52 = virtualinvoke $r46.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z10 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z10 == 0 goto label26;

     label23:
        $r53 = virtualinvoke r81.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r12 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r53);

     label24:
        goto label27;

     label25:
        $r69 := @caughtexception;

        r82 = $r69;

        $r66 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r66.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy qualifier info set could not be decoded.", r82, r0, i0);

        throw $r66;

     label26:
        goto label18;

     label27:
        z13 = 0;

        $r36 = virtualinvoke r4.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r36 == null goto label28;

        $r47 = virtualinvoke r4.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r48 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z13 = interfaceinvoke $r47.<java.util.Set: boolean contains(java.lang.Object)>($r48);

     label28:
        $r35 = virtualinvoke r78.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r83 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r35;

        $r41 = "2.5.29.32.0";

        $r42 = virtualinvoke r83.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z8 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z8 == 0 goto label30;

        $r43 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        $r38 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r74);

        $r39 = (java.util.Set) $r38;

        specialinvoke $r43.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r37, i3, $r39, r83, r12, r74, z13);

        r16 = $r43;

        virtualinvoke r83.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r16);

        $r40 = r1[i3];

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r16);

        goto label30;

     label29:
        goto label13;

     label30:
        goto label38;

     label31:
        if i1 > 0 goto label38;

        $r23 = r1[i3];

        r84 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label32:
        $z1 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label38;

        $r25 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        r85 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r25;

        $r26 = virtualinvoke r85.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z2 == 0 goto label37;

        $r24 = virtualinvoke r85.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r86 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r24;

        virtualinvoke r86.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r85);

        interfaceinvoke r84.<java.util.Iterator: void remove()>();

        i7 = i3 - 1;

     label33:
        if i7 < 0 goto label37;

        r87 = r1[i7];

        i8 = 0;

     label34:
        $i6 = interfaceinvoke r87.<java.util.List: int size()>();

        if i8 >= $i6 goto label36;

        $r27 = interfaceinvoke r87.<java.util.List: java.lang.Object get(int)>(i8);

        r88 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r27;

        $z3 = virtualinvoke r88.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z3 != 0 goto label35;

        r71 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r71, r1, r88);

        if r71 != null goto label35;

        goto label36;

     label35:
        i8 = i8 + 1;

        goto label34;

     label36:
        i7 = i7 + -1;

        goto label33;

     label37:
        goto label32;

     label38:
        goto label09;

     label39:
        return r71;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label03;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label14 to label15 with label16;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.security.cert.CertPathValidatorException from label23 to label24 with label25;
    }

    protected static void prepareNextCertA(java.security.cert.CertPath, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r3, $r19;
        com.android.org.bouncycastle.asn1.ASN1Sequence r4, r21, r22;
        java.lang.Object $r5;
        java.lang.String $r6, $r11, $r12, $r13, $r14;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r7;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r8, $r9, $r10;
        boolean $z0, $z1;
        java.security.cert.CertPathValidatorException $r15, $r16;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r17, $r20;
        java.lang.Exception $r18, r25;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r23, r24;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r5;

     label01:
        $r6 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        $r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r6);

        r21 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r7);

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

        r3 = $r19;

        $r20 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy mappings extension could not be decoded.", r3, r0, i0);

        throw $r20;

     label04:
        if r21 == null goto label12;

        r22 = r21;

        i1 = 0;

     label05:
        $i2 = virtualinvoke r22.<com.android.org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i1 >= $i2 goto label12;

     label06:
        $r8 = virtualinvoke r22.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(i1);

        r4 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r8);

        $r9 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        r23 = staticinvoke <com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r9);

        $r10 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        r24 = staticinvoke <com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r10);

     label07:
        goto label09;

     label08:
        $r18 := @caughtexception;

        r25 = $r18;

        $r17 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy mappings extension contents could not be decoded.", r25, r0, i0);

        throw $r17;

     label09:
        $r12 = "2.5.29.32.0";

        $r11 = virtualinvoke r23.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label10;

        $r15 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r15.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("IssuerDomainPolicy is anyPolicy", null, r0, i0);

        throw $r15;

     label10:
        $r13 = "2.5.29.32.0";

        $r14 = virtualinvoke r24.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label11;

        $r16 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r16.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("SubjectDomainPolicy is anyPolicy,", null, r0, i0);

        throw $r16;

     label11:
        i1 = i1 + 1;

        goto label05;

     label12:
        return;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    protected static void processCertF(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r1;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r2;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        i1 := @parameter3: int;

        if i1 > 0 goto label1;

        if r1 != null goto label1;

        $r2 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r2.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("No valid policy tree found when one expected.", null, r0, i0);

        throw $r2;

     label1:
        return;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r1;
        java.util.List r2;
        java.security.cert.X509Certificate r3;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r4, $r8;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r7;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r9;
        com.android.org.bouncycastle.asn1.ASN1Sequence r10;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r2 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r5;

     label1:
        $r6 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r6);

        r10 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r9.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not read certificate policies extension from certificate.", r4, r0, i0);

        throw $r9;

     label4:
        if r10 != null goto label5;

        r1 = null;

     label5:
        return r1;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label1 to label2 with label3;
    }

    protected static void processCertBC(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, $i3, i4;
        com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator r1;
        java.util.List r2;
        java.security.cert.X509Certificate r3;
        javax.security.auth.x500.X500Principal r4;
        com.android.org.bouncycastle.asn1.ASN1InputStream r5, $r14;
        com.android.org.bouncycastle.asn1.ASN1Sequence r6;
        java.lang.Exception r7, r8, $r29, $r31, $r35, r41;
        java.util.Enumeration r9;
        java.lang.String r10, $r17;
        com.android.org.bouncycastle.asn1.x509.GeneralName r11, $r21, $r22, $r24;
        com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException r12, $r23, $r27, $r33, r37, r42;
        java.lang.Object $r13, $r25;
        boolean $z0, $z1;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r15, $r18;
        byte[] $r16;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r19;
        com.android.org.bouncycastle.asn1.x509.X509Name $r20;
        java.security.cert.CertPathValidatorException $r26, $r28, $r30, $r32, $r34, $r36;
        com.android.org.bouncycastle.asn1.x509.GeneralNames r38;
        java.util.Vector r39;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r40;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator;

        r2 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r13;

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = i1 - i0;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r3);

        if $z0 == 0 goto label01;

        if i2 < i1 goto label27;

     label01:
        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>(r3);

        $r14 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r16 = virtualinvoke r4.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r14.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r16);

        r5 = $r14;

     label02:
        $r15 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r15);

     label03:
        goto label05;

     label04:
        $r29 := @caughtexception;

        r7 = $r29;

        $r26 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r26.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Exception extracting subject name when checking subtrees.", r7, r0, i0);

        throw $r26;

     label05:
        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkPermittedDN(com.android.org.bouncycastle.asn1.ASN1Sequence)>(r6);

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkExcludedDN(com.android.org.bouncycastle.asn1.ASN1Sequence)>(r6);

     label06:
        goto label08;

     label07:
        $r33 := @caughtexception;

        r37 = $r33;

        $r30 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r30.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subtree check for certificate subject failed.", r37, r0, i0);

        throw $r30;

     label08:
        $r17 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        $r18 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r17);

        r38 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r18);

     label09:
        goto label11;

     label10:
        $r31 := @caughtexception;

        r8 = $r31;

        $r36 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r36.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subject alternative name extension could not be decoded.", r8, r0, i0);

        throw $r36;

     label11:
        $r20 = new com.android.org.bouncycastle.asn1.x509.X509Name;

        specialinvoke $r20.<com.android.org.bouncycastle.asn1.x509.X509Name: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>(r6);

        $r19 = <com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier EmailAddress>;

        r39 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>($r19);

        r9 = virtualinvoke r39.<java.util.Vector: java.util.Enumeration elements()>();

     label12:
        $z1 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label17;

        $r25 = interfaceinvoke r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        r10 = (java.lang.String) $r25;

        $r22 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        specialinvoke $r22.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(int,java.lang.String)>(1, r10);

        r11 = $r22;

     label13:
        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkPermitted(com.android.org.bouncycastle.asn1.x509.GeneralName)>(r11);

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkExcluded(com.android.org.bouncycastle.asn1.x509.GeneralName)>(r11);

     label14:
        goto label16;

     label15:
        $r27 := @caughtexception;

        r12 = $r27;

        $r32 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r32.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subtree check for certificate subject alternative email failed.", r12, r0, i0);

        throw $r32;

     label16:
        goto label12;

     label17:
        if r38 == null goto label27;

     label18:
        r40 = virtualinvoke r38.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

     label19:
        goto label21;

     label20:
        $r35 := @caughtexception;

        r41 = $r35;

        $r34 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r34.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subject alternative name contents could not be decoded.", r41, r0, i0);

        throw $r34;

     label21:
        i4 = 0;

     label22:
        $i3 = lengthof r40;

        if i4 >= $i3 goto label27;

     label23:
        $r21 = r40[i4];

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkPermitted(com.android.org.bouncycastle.asn1.x509.GeneralName)>($r21);

        $r24 = r40[i4];

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkExcluded(com.android.org.bouncycastle.asn1.x509.GeneralName)>($r24);

     label24:
        goto label26;

     label25:
        $r23 := @caughtexception;

        r42 = $r23;

        $r28 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r28.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subtree check for certificate subject alternative name failed.", r42, r0, i0);

        throw $r28;

     label26:
        i4 = i4 + 1;

        goto label22;

     label27:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
        catch com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException from label13 to label14 with label15;
        catch java.lang.Exception from label18 to label19 with label20;
        catch com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException from label23 to label24 with label25;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath, int, java.util.Set, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.List[], int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        java.util.Set r1, $r30, r51, r57, r63;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r2, r10, r15, r17, $r33, r60, r62, r65;
        java.util.List[] r3;
        java.util.List r4, $r36, r58, r61, r64;
        java.security.cert.X509Certificate r5;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r6, $r48;
        java.util.HashSet r7, $r21, $r32, $r40, r53, r59;
        com.android.org.bouncycastle.asn1.x509.PolicyInformation r8, r56;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r9, $r27;
        java.security.cert.CertPathValidatorException r11, $r47;
        java.lang.Object r12, $r18, $r23, $r24, $r25, $r31, $r37, $r39, r54;
        java.util.Iterator r13, r16, r52;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, z17;
        java.lang.String r14, $r20, $r22, $r26, $r28, $r38, $r41, $r43, $r44;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r19;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r29, $r42, r49;
        java.util.ArrayList $r34;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r35;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r45, $r46;
        java.util.Enumeration r50, r55;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.Set;

        r2 := @parameter3: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r3 := @parameter4: java.util.List[];

        i1 := @parameter5: int;

        r4 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r18 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (java.security.cert.X509Certificate) $r18;

        i2 = interfaceinvoke r4.<java.util.List: int size()>();

        i3 = i2 - i0;

     label01:
        $r20 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r19 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r5, $r20);

        r49 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r19);

     label02:
        goto label04;

     label03:
        $r48 := @caughtexception;

        r6 = $r48;

        $r46 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r46.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not read certificate policies extension from certificate.", r6, r0, i0);

        throw $r46;

     label04:
        if r49 == null goto label39;

        if r2 == null goto label39;

        r50 = virtualinvoke r49.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r21 = new java.util.HashSet;

        specialinvoke $r21.<java.util.HashSet: void <init>()>();

        r7 = $r21;

     label05:
        $z2 = interfaceinvoke r50.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label11;

        $r39 = interfaceinvoke r50.<java.util.Enumeration: java.lang.Object nextElement()>();

        r8 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r39);

        r9 = virtualinvoke r8.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r43 = virtualinvoke r9.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r43);

        $r44 = "2.5.29.32.0";

        $r41 = virtualinvoke r9.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z15 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>($r41);

        if $z15 != 0 goto label10;

     label06:
        $r42 = virtualinvoke r8.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r51 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r42);

     label07:
        goto label09;

     label08:
        $r47 := @caughtexception;

        r11 = $r47;

        $r45 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r45.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy qualifier info set could not be build.", r11, r0, i0);

        throw $r45;

     label09:
        z16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean processCertD1i(int,java.util.List[],com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.util.Set)>(i3, r3, r9, r51);

        if z16 != 0 goto label10;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void processCertD1ii(int,java.util.List[],com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.util.Set)>(i3, r3, r9, r51);

     label10:
        goto label05;

     label11:
        $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label12;

        $z12 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z12 == 0 goto label13;

     label12:
        interfaceinvoke r1.<java.util.Set: void clear()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>(r7);

        goto label17;

     label13:
        r52 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        $r40 = new java.util.HashSet;

        specialinvoke $r40.<java.util.HashSet: void <init>()>();

        r53 = $r40;

     label14:
        $z14 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label16;

        r54 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        $z13 = interfaceinvoke r7.<java.util.Set: boolean contains(java.lang.Object)>(r54);

        if $z13 == 0 goto label15;

        interfaceinvoke r53.<java.util.Set: boolean add(java.lang.Object)>(r54);

     label15:
        goto label14;

     label16:
        interfaceinvoke r1.<java.util.Set: void clear()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>(r53);

     label17:
        if i1 > 0 goto label18;

        if i3 >= i2 goto label31;

        $z11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r5);

        if $z11 == 0 goto label31;

     label18:
        r55 = virtualinvoke r49.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label19:
        $z3 = interfaceinvoke r55.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label31;

        $r24 = interfaceinvoke r55.<java.util.Enumeration: java.lang.Object nextElement()>();

        r56 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r24);

        $r28 = "2.5.29.32.0";

        $r27 = virtualinvoke r56.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r26 = virtualinvoke $r27.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z5 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label30;

        $r29 = virtualinvoke r56.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r57 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r29);

        $i6 = i3 - 1;

        r58 = r3[$i6];

        i8 = 0;

     label20:
        $i7 = interfaceinvoke r58.<java.util.List: int size()>();

        if i8 >= $i7 goto label29;

        $r31 = interfaceinvoke r58.<java.util.List: java.lang.Object get(int)>(i8);

        r10 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r31;

        $r30 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        r13 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z8 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label28;

        r12 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $z7 = r12 instanceof java.lang.String;

        if $z7 == 0 goto label22;

        r14 = (java.lang.String) r12;

        goto label23;

     label22:
        $z6 = r12 instanceof com.android.org.bouncycastle.asn1.DERObjectIdentifier;

        if $z6 == 0 goto label21;

        $r35 = (com.android.org.bouncycastle.asn1.DERObjectIdentifier) r12;

        r14 = virtualinvoke $r35.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

     label23:
        z0 = 0;

        r16 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label24:
        $z9 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label26;

        $r37 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r37;

        $r38 = virtualinvoke r15.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z10 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z10 == 0 goto label25;

        z0 = 1;

     label25:
        goto label24;

     label26:
        if z0 != 0 goto label27;

        $r32 = new java.util.HashSet;

        specialinvoke $r32.<java.util.HashSet: void <init>()>();

        r59 = $r32;

        interfaceinvoke r59.<java.util.Set: boolean add(java.lang.Object)>(r14);

        $r33 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        specialinvoke $r33.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r34, i3, r59, r10, r57, r14, 0);

        r17 = $r33;

        virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r17);

        $r36 = r3[i3];

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r17);

     label27:
        goto label21;

     label28:
        i8 = i8 + 1;

        goto label20;

     label29:
        goto label31;

     label30:
        goto label19;

     label31:
        r60 = r2;

        i9 = i3 - 1;

     label32:
        if i9 < 0 goto label36;

        r61 = r3[i9];

        i10 = 0;

     label33:
        $i4 = interfaceinvoke r61.<java.util.List: int size()>();

        if i10 >= $i4 goto label35;

        $r25 = interfaceinvoke r61.<java.util.List: java.lang.Object get(int)>(i10);

        r62 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r25;

        $z4 = virtualinvoke r62.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z4 != 0 goto label34;

        r60 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r60, r3, r62);

        if r60 != null goto label34;

        goto label35;

     label34:
        i10 = i10 + 1;

        goto label33;

     label35:
        i9 = i9 + -1;

        goto label32;

     label36:
        r63 = virtualinvoke r5.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if r63 == null goto label38;

        $r22 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z17 = interfaceinvoke r63.<java.util.Set: boolean contains(java.lang.Object)>($r22);

        r64 = r3[i3];

        i11 = 0;

     label37:
        $i5 = interfaceinvoke r64.<java.util.List: int size()>();

        if i11 >= $i5 goto label38;

        $r23 = interfaceinvoke r64.<java.util.List: java.lang.Object get(int)>(i11);

        r65 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r23;

        virtualinvoke r65.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void setCritical(boolean)>(z17);

        i11 = i11 + 1;

        goto label37;

     label38:
        return r60;

     label39:
        return null;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label03;
        catch java.security.cert.CertPathValidatorException from label06 to label07 with label08;
    }

    protected static void processCertA(java.security.cert.CertPath, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, int, java.security.PublicKey, boolean, javax.security.auth.x500.X500Principal, java.security.cert.X509Certificate) throws com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException
    {
        java.security.cert.CertPath r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        int i0;
        java.security.PublicKey r2;
        boolean z0, $z1, $z2;
        javax.security.auth.x500.X500Principal r3, $r11, $r16;
        java.security.cert.X509Certificate r4, r6;
        java.util.List r5;
        java.security.GeneralSecurityException r7, $r36;
        java.lang.Throwable r8, $r33;
        java.lang.Object $r9;
        java.util.Date $r10, $r22;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r12, $r23, $r31, $r34, $r39, $r41;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r20, $r25, $r26, $r30, $r37, $r40, $r44;
        java.lang.String $r19, $r21, $r27, $r29, $r32, $r38, $r43;
        java.security.cert.CertificateNotYetValidException $r24, r46;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r28, $r42, r47, r48;
        java.security.cert.CertificateExpiredException $r35, r45;

        r0 := @parameter0: java.security.cert.CertPath;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        i0 := @parameter2: int;

        r2 := @parameter3: java.security.PublicKey;

        z0 := @parameter4: boolean;

        r3 := @parameter5: javax.security.auth.x500.X500Principal;

        r4 := @parameter6: java.security.cert.X509Certificate;

        r5 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r9 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i0);

        r6 = (java.security.cert.X509Certificate) $r9;

        if z0 != 0 goto label04;

     label01:
        $r21 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.String getSigProvider()>();

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>(r6, r2, $r21);

     label02:
        goto label04;

     label03:
        $r36 := @caughtexception;

        r7 = $r36;

        $r34 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r34.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not validate certificate signature.", r7, r0, i0);

        throw $r34;

     label04:
        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidCertDateFromValidityModel(com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)>(r1, r0, i0);

        virtualinvoke r6.<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>($r10);

     label05:
        goto label09;

     label06:
        $r35 := @caughtexception;

        r45 = $r35;

        $r39 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not validate certificate: ");

        $r38 = virtualinvoke r45.<java.security.cert.CertificateExpiredException: java.lang.String getMessage()>();

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r43, r45, r0, i0);

        throw $r39;

     label07:
        $r24 := @caughtexception;

        r46 = $r24;

        $r23 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not validate certificate: ");

        $r29 = virtualinvoke r46.<java.security.cert.CertificateNotYetValidException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r27, r46, r0, i0);

        throw $r23;

     label08:
        $r42 := @caughtexception;

        r47 = $r42;

        $r41 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r41.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not validate time of certificate.", r47, r0, i0);

        throw $r41;

     label09:
        $z1 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isRevocationEnabled()>();

        if $z1 == 0 goto label14;

     label10:
        $r22 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidCertDateFromValidityModel(com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)>(r1, r0, i0);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void checkCRLs(com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)>(r1, r6, $r22, r4, r2, r5);

     label11:
        goto label14;

     label12:
        $r28 := @caughtexception;

        r48 = $r28;

        r8 = r48;

        $r33 = virtualinvoke r48.<com.android.org.bouncycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

        if null == $r33 goto label13;

        r8 = virtualinvoke r48.<com.android.org.bouncycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

     label13:
        $r31 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r32 = virtualinvoke r48.<com.android.org.bouncycastle.jce.provider.AnnotatedException: java.lang.String getMessage()>();

        specialinvoke $r31.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r32, r8, r0, i0);

        throw $r31;

     label14:
        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r6);

        $z2 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label15;

        $r12 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IssuerName(");

        $r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r6);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not match SubjectName(");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") of signing certificate.");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r19, null, r0, i0);

        throw $r12;

     label15:
        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label03;
        catch java.security.cert.CertificateExpiredException from label04 to label05 with label06;
        catch java.security.cert.CertificateNotYetValidException from label04 to label05 with label07;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label08;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label10 to label11 with label12;
    }

    protected static int prepareNextCertI1(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2, i3;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Exception r3, $r13;
        java.util.Enumeration r4;
        com.android.org.bouncycastle.asn1.ASN1TaggedObject r5;
        java.lang.Object $r6, $r9;
        java.lang.String $r7;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8;
        boolean $z0;
        com.android.org.bouncycastle.asn1.ASN1Integer $r10;
        java.math.BigInteger $r11;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r12, $r14;
        java.lang.IllegalArgumentException $r15, r17;
        com.android.org.bouncycastle.asn1.ASN1Sequence r16;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r6;

     label01:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        r16 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r8);

     label02:
        goto label04;

     label03:
        $r13 := @caughtexception;

        r3 = $r13;

        $r12 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension cannot be decoded.", r3, r0, i0);

        throw $r12;

     label04:
        if r16 == null goto label11;

        r4 = virtualinvoke r16.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label05:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

     label06:
        $r9 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r9);

        $i2 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i2 != 0 goto label09;

        $r10 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r5, 0);

        $r11 = virtualinvoke $r10.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i3 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

        if i3 >= i1 goto label08;

     label07:
        return i3;

     label08:
        goto label11;

     label09:
        goto label05;

     label10:
        $r15 := @caughtexception;

        r17 = $r15;

        $r14 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension contents cannot be decoded.", r17, r0, i0);

        throw $r14;

     label11:
        return i1;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label10;
    }

    protected static int prepareNextCertI2(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2, i3;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Exception r3, $r15;
        java.util.Enumeration r4;
        com.android.org.bouncycastle.asn1.ASN1TaggedObject r5;
        java.lang.Object $r6, $r9;
        java.lang.String $r7;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8;
        boolean $z0;
        com.android.org.bouncycastle.asn1.ASN1Integer $r10;
        java.math.BigInteger $r11;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r12, $r14;
        java.lang.IllegalArgumentException $r13, r17;
        com.android.org.bouncycastle.asn1.ASN1Sequence r16;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r6;

     label01:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        r16 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r8);

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        r3 = $r15;

        $r14 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension cannot be decoded.", r3, r0, i0);

        throw $r14;

     label04:
        if r16 == null goto label11;

        r4 = virtualinvoke r16.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label05:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

     label06:
        $r9 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r9);

        $i2 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i2 != 1 goto label09;

        $r10 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r5, 0);

        $r11 = virtualinvoke $r10.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i3 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

        if i3 >= i1 goto label08;

     label07:
        return i3;

     label08:
        goto label11;

     label09:
        goto label05;

     label10:
        $r13 := @caughtexception;

        r17 = $r13;

        $r12 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension contents cannot be decoded.", r17, r0, i0);

        throw $r12;

     label11:
        return i1;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label10;
    }

    protected static void prepareNextCertG(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator r1;
        java.util.List r2;
        java.security.cert.X509Certificate r3;
        com.android.org.bouncycastle.asn1.x509.NameConstraints r4;
        com.android.org.bouncycastle.asn1.ASN1Sequence r5;
        java.lang.Exception r6, r7, $r13, $r15, $r17, r18;
        java.lang.Object $r8;
        java.lang.String $r9;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r10;
        com.android.org.bouncycastle.asn1.x509.GeneralSubtree $r11;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r12, $r14, $r16;
        com.android.org.bouncycastle.asn1.x509.GeneralSubtree[] r19, r20;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator;

        r2 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r8;

        r4 = null;

     label01:
        $r9 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r9);

        r5 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r10);

        if r5 == null goto label02;

        r4 = staticinvoke <com.android.org.bouncycastle.asn1.x509.NameConstraints: com.android.org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)>(r5);

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        r18 = $r15;

        $r14 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Name constraints extension could not be decoded.", r18, r0, i0);

        throw $r14;

     label04:
        if r4 == null goto label14;

        r19 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.NameConstraints: com.android.org.bouncycastle.asn1.x509.GeneralSubtree[] getPermittedSubtrees()>();

        if r19 == null goto label08;

     label05:
        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void intersectPermittedSubtree(com.android.org.bouncycastle.asn1.x509.GeneralSubtree[])>(r19);

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

        r6 = $r17;

        $r16 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Permitted subtrees cannot be build from name constraints extension.", r6, r0, i0);

        throw $r16;

     label08:
        r20 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.NameConstraints: com.android.org.bouncycastle.asn1.x509.GeneralSubtree[] getExcludedSubtrees()>();

        if r20 == null goto label14;

        i1 = 0;

     label09:
        $i2 = lengthof r20;

        if i1 == $i2 goto label14;

     label10:
        $r11 = r20[i1];

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void addExcludedSubtree(com.android.org.bouncycastle.asn1.x509.GeneralSubtree)>($r11);

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        r7 = $r13;

        $r12 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Excluded subtrees cannot be build from name constraints extension.", r7, r0, i0);

        throw $r12;

     label13:
        i1 = i1 + 1;

        goto label09;

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private static void checkCRL(com.android.org.bouncycastle.asn1.x509.DistributionPoint, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey, com.android.org.bouncycastle.jce.provider.CertStatus, com.android.org.bouncycastle.jce.provider.ReasonsMask, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509Certificate r2, r4;
        java.util.Date r3, r9, $r19, $r32, $r35;
        java.security.PublicKey r5, r15;
        com.android.org.bouncycastle.jce.provider.CertStatus r6;
        com.android.org.bouncycastle.jce.provider.ReasonsMask r7, r14;
        java.util.List r8;
        java.util.Set r10, r16, r17, r38, r40;
        boolean z0, $z1, $z2, $z3, $z4, $z7, $z10;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r11, $r29, $r33, $r34, $r36, $r37, r42;
        java.util.Iterator r12;
        java.security.cert.X509CRL r13, r18;
        long $l0, $l1, $l2, $l7, $l9;
        byte $b3, $b8;
        int $i4, $i5, $i6;
        java.lang.Object $r20;
        java.lang.String $r21, $r25, $r26, $r30;
        java.util.HashSet $r22, $r28, r39, r41;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r23, $r24, $r27, $r31;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.util.Date;

        r4 := @parameter4: java.security.cert.X509Certificate;

        r5 := @parameter5: java.security.PublicKey;

        r6 := @parameter6: com.android.org.bouncycastle.jce.provider.CertStatus;

        r7 := @parameter7: com.android.org.bouncycastle.jce.provider.ReasonsMask;

        r8 := @parameter8: java.util.List;

        $r19 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r19.<java.util.Date: void <init>(long)>($l0);

        r9 = $r19;

        $l2 = virtualinvoke r3.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r9.<java.util.Date: long getTime()>();

        $b3 = $l2 cmp $l1;

        if $b3 <= 0 goto label01;

        $r36 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r36.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Validation time is in future.");

        throw $r36;

     label01:
        r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getCompleteCRLs(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r0, r2, r9, r1);

        z0 = 0;

        r11 = null;

        r12 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $i4 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i4 != 11 goto label13;

        $z2 = virtualinvoke r7.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z2 != 0 goto label13;

     label03:
        $r20 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.security.cert.X509CRL) $r20;

        r14 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: com.android.org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,com.android.org.bouncycastle.asn1.x509.DistributionPoint)>(r13, r0);

        $z4 = virtualinvoke r14.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean hasNewReasons(com.android.org.bouncycastle.jce.provider.ReasonsMask)>(r7);

        if $z4 != 0 goto label05;

     label04:
        goto label02;

     label05:
        r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)>(r13, r2, r4, r5, r1, r8);

        r15 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)>(r13, r16);

        r18 = null;

        $z3 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z3 == 0 goto label06;

        r17 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>(r9, r1, r13);

        r18 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)>(r17, r15);

     label06:
        $i5 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        if $i5 == 1 goto label07;

        $r32 = virtualinvoke r2.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        $l7 = virtualinvoke $r32.<java.util.Date: long getTime()>();

        $r35 = virtualinvoke r13.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        $l9 = virtualinvoke $r35.<java.util.Date: long getTime()>();

        $b8 = $l7 cmp $l9;

        if $b8 >= 0 goto label07;

        $r34 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r34.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No valid CRL for current time found.");

        throw $r34;

     label07:
        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB1(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>(r0, r2, r13);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB2(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>(r0, r2, r13);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r18, r13, r1);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r3, r18, r2, r6, r1);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLJ(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus)>(r3, r13, r2, r6);

        $i6 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i6 != 8 goto label08;

        virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(11);

     label08:
        virtualinvoke r7.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void addReasons(com.android.org.bouncycastle.jce.provider.ReasonsMask)>(r14);

        r38 = virtualinvoke r13.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

        if r38 == null goto label09;

        $r28 = new java.util.HashSet;

        specialinvoke $r28.<java.util.HashSet: void <init>(java.util.Collection)>(r38);

        r39 = $r28;

        $r27 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r26 = virtualinvoke $r27.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r39.<java.util.Set: boolean remove(java.lang.Object)>($r26);

        $r31 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

        $r30 = virtualinvoke $r31.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r39.<java.util.Set: boolean remove(java.lang.Object)>($r30);

        $z10 = interfaceinvoke r39.<java.util.Set: boolean isEmpty()>();

        if $z10 != 0 goto label09;

        $r33 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r33.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL contains unsupported critical extensions.");

        throw $r33;

     label09:
        if r18 == null goto label10;

        r40 = virtualinvoke r18.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

        if r40 == null goto label10;

        $r22 = new java.util.HashSet;

        specialinvoke $r22.<java.util.HashSet: void <init>(java.util.Collection)>(r40);

        r41 = $r22;

        $r23 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r21 = virtualinvoke $r23.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r41.<java.util.Set: boolean remove(java.lang.Object)>($r21);

        $r24 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

        $r25 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r41.<java.util.Set: boolean remove(java.lang.Object)>($r25);

        $z7 = interfaceinvoke r41.<java.util.Set: boolean isEmpty()>();

        if $z7 != 0 goto label10;

        $r29 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Delta CRL contains unsupported critical extension.");

        throw $r29;

     label10:
        z0 = 1;

     label11:
        goto label02;

     label12:
        $r37 := @caughtexception;

        r42 = $r37;

        r11 = r42;

        goto label02;

     label13:
        if z0 != 0 goto label14;

        throw r11;

     label14:
        return;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label03 to label04 with label12;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label05 to label11 with label12;
    }

    protected static void checkCRLs(com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r0, r10, r56;
        java.security.cert.X509Certificate r1, r3;
        java.util.Date r2, $r20;
        java.security.PublicKey r4;
        java.util.List r5;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r6, r11, $r16, $r25, $r29, $r37, $r40, $r42, $r44, $r45, $r46, $r48, r50, r57;
        java.lang.Exception r7, r9, $r41, $r43, $r47, r54;
        com.android.org.bouncycastle.jce.provider.ReasonsMask r8, $r14;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r12, $r26, r58, r59;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r13, r53;
        com.android.org.bouncycastle.jce.provider.CertStatus $r15, r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r23, $r24, $r27;
        java.lang.String[] $r22;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r28;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint $r30, $r38, r55;
        javax.security.auth.x500.X500Principal $r31;
        byte[] $r32;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r33;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r34;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName $r35;
        java.lang.Object $r36, $r39;
        com.android.org.bouncycastle.asn1.x509.CRLDistPoint r49;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint[] r52;

        r0 := @parameter0: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r1 := @parameter1: java.security.cert.X509Certificate;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: java.security.cert.X509Certificate;

        r4 := @parameter4: java.security.PublicKey;

        r5 := @parameter5: java.util.List;

        r6 = null;

     label01:
        $r12 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $r13 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r12);

        r49 = staticinvoke <com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r13);

     label02:
        goto label04;

     label03:
        $r41 := @caughtexception;

        r7 = $r41;

        $r40 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r40.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL distribution point extension could not be read.", r7);

        throw $r40;

     label04:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromCRLDistributionPoint(com.android.org.bouncycastle.asn1.x509.CRLDistPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r49, r0);

     label05:
        goto label07;

     label06:
        $r45 := @caughtexception;

        r50 = $r45;

        $r46 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r46.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No additional CRL locations could be decoded from CRL distribution point extension.", r50);

        throw $r46;

     label07:
        $r15 = new com.android.org.bouncycastle.jce.provider.CertStatus;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.CertStatus: void <init>()>();

        r51 = $r15;

        $r14 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>()>();

        r8 = $r14;

        z0 = 0;

        if r49 == null goto label17;

     label08:
        r52 = virtualinvoke r49.<com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label09:
        goto label11;

     label10:
        $r43 := @caughtexception;

        r9 = $r43;

        $r42 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r42.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", r9);

        throw $r42;

     label11:
        if r52 == null goto label17;

        i7 = 0;

     label12:
        $i6 = lengthof r52;

        if i7 >= $i6 goto label17;

        $i5 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i5 != 11 goto label17;

        $z4 = virtualinvoke r8.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z4 != 0 goto label17;

        $r39 = virtualinvoke r0.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r10 = (com.android.org.bouncycastle.x509.ExtendedPKIXParameters) $r39;

     label13:
        $r38 = r52[i7];

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void checkCRL(com.android.org.bouncycastle.asn1.x509.DistributionPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,com.android.org.bouncycastle.jce.provider.CertStatus,com.android.org.bouncycastle.jce.provider.ReasonsMask,java.util.List)>($r38, r10, r1, r2, r3, r4, r51, r8, r5);

        z0 = 1;

     label14:
        goto label16;

     label15:
        $r44 := @caughtexception;

        r11 = $r44;

        r6 = r11;

     label16:
        i7 = i7 + 1;

        goto label12;

     label17:
        $i1 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i1 != 11 goto label24;

        $z2 = virtualinvoke r8.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z2 != 0 goto label24;

     label18:
        $r28 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r31 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r31.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r28.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r32);

        r53 = virtualinvoke $r28.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

     label19:
        goto label21;

     label20:
        $r47 := @caughtexception;

        r54 = $r47;

        $r48 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r48.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer from certificate for CRL could not be reencoded.", r54);

        throw $r48;

     label21:
        $r30 = new com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        $r35 = new com.android.org.bouncycastle.asn1.x509.DistributionPointName;

        $r34 = new com.android.org.bouncycastle.asn1.x509.GeneralNames;

        $r33 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        specialinvoke $r33.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(int,com.android.org.bouncycastle.asn1.ASN1Encodable)>(4, r53);

        specialinvoke $r34.<com.android.org.bouncycastle.asn1.x509.GeneralNames: void <init>(com.android.org.bouncycastle.asn1.x509.GeneralName)>($r33);

        specialinvoke $r35.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: void <init>(int,com.android.org.bouncycastle.asn1.ASN1Encodable)>(0, $r34);

        specialinvoke $r30.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: void <init>(com.android.org.bouncycastle.asn1.x509.DistributionPointName,com.android.org.bouncycastle.asn1.x509.ReasonFlags,com.android.org.bouncycastle.asn1.x509.GeneralNames)>($r35, null, null);

        r55 = $r30;

        $r36 = virtualinvoke r0.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r56 = (com.android.org.bouncycastle.x509.ExtendedPKIXParameters) $r36;

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void checkCRL(com.android.org.bouncycastle.asn1.x509.DistributionPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,com.android.org.bouncycastle.jce.provider.CertStatus,com.android.org.bouncycastle.jce.provider.ReasonsMask,java.util.List)>(r55, r56, r1, r2, r3, r4, r51, r8, r5);

        z0 = 1;

     label22:
        goto label24;

     label23:
        $r37 := @caughtexception;

        r57 = $r37;

        r6 = r57;

     label24:
        if z0 != 0 goto label26;

        $z3 = r6 instanceof com.android.org.bouncycastle.jce.provider.AnnotatedException;

        if $z3 == 0 goto label25;

        throw r6;

     label25:
        $r29 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL found.", r6);

        throw $r29;

     label26:
        $i0 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i0 == 11 goto label27;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate revocation after ");

        $r20 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: java.util.Date getRevocationDate()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        r58 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        $r22 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String[] crlReasons>;

        $i4 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        $r26 = $r22[$i4];

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        r59 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>(r59);

        throw $r25;

     label27:
        $z1 = virtualinvoke r8.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z1 != 0 goto label28;

        $i3 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i3 != 11 goto label28;

        virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(12);

     label28:
        $i2 = virtualinvoke r51.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i2 != 12 goto label29;

        $r16 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Certificate status could not be determined.");

        throw $r16;

     label29:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label13 to label14 with label15;
        catch java.lang.Exception from label18 to label19 with label20;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label18 to label22 with label23;
    }

    protected static int prepareNextCertJ(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Exception r3, $r8;
        java.lang.Object $r4;
        java.lang.String $r5;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r6;
        java.math.BigInteger $r7;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r9;
        com.android.org.bouncycastle.asn1.ASN1Integer r10;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r4;

     label1:
        $r5 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        $r6 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r5);

        r10 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r9.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Inhibit any-policy extension cannot be decoded.", r3, r0, i0);

        throw $r9;

     label4:
        if r10 == null goto label5;

        $r7 = virtualinvoke r10.<com.android.org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        if i2 >= i1 goto label5;

        return i2;

     label5:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void prepareNextCertK(java.security.cert.CertPath, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Exception r3, $r9;
        java.lang.Object $r4;
        java.lang.String $r5;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r6;
        java.security.cert.CertPathValidatorException $r7, $r8;
        boolean $z0;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r10;
        com.android.org.bouncycastle.asn1.x509.BasicConstraints r11;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r4;

     label1:
        $r5 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $r6 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r5);

        r11 = staticinvoke <com.android.org.bouncycastle.asn1.x509.BasicConstraints: com.android.org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r10.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Basic constraints extension cannot be decoded.", r3, r0, i0);

        throw $r10;

     label4:
        if r11 == null goto label5;

        $z0 = virtualinvoke r11.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z0 != 0 goto label6;

        $r8 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r8.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Not a CA certificate");

        throw $r8;

     label5:
        $r7 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r7.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Intermediate certificate lacks BasicConstraints");

        throw $r7;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static int prepareNextCertL(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Object $r3;
        boolean $z0;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r4;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r3;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r2);

        if $z0 != 0 goto label2;

        if i1 > 0 goto label1;

        $r4 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r4.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Max path length not greater than zero", null, r0, i0);

        throw $r4;

     label1:
        $i2 = i1 - 1;

        return $i2;

     label2:
        return i1;
    }

    protected static int prepareNextCertM(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Exception r3, $r7;
        java.lang.Object $r4;
        java.lang.String $r5;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r6;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8;
        com.android.org.bouncycastle.asn1.x509.BasicConstraints r9;
        java.math.BigInteger r10;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r4;

     label1:
        $r5 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $r6 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r5);

        r9 = staticinvoke <com.android.org.bouncycastle.asn1.x509.BasicConstraints: com.android.org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Basic constraints extension cannot be decoded.", r3, r0, i0);

        throw $r8;

     label4:
        if r9 == null goto label5;

        r10 = virtualinvoke r9.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        if r10 == null goto label5;

        i2 = virtualinvoke r10.<java.math.BigInteger: int intValue()>();

        if i2 >= i1 goto label5;

        return i2;

     label5:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void prepareNextCertN(java.security.cert.CertPath, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        boolean[] r3;
        java.lang.Object $r4;
        boolean $z0;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r5;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r4;

        r3 = virtualinvoke r2.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if r3 == null goto label1;

        $z0 = r3[5];

        if $z0 != 0 goto label1;

        $r5 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r5.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Issuer certificate keyusage extension is critical and does not permit key signing.", null, r0, i0);

        throw $r5;

     label1:
        return;
    }

    protected static void prepareNextCertO(java.security.cert.CertPath, int, java.util.Set, java.util.List) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.util.Set r1;
        java.util.List r2, r3;
        java.security.cert.X509Certificate r4;
        java.util.Iterator r5;
        java.security.cert.CertPathValidatorException r6, $r15, $r16;
        java.lang.Object $r7, $r14;
        boolean $z0, $z1;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r18;
        java.security.cert.PKIXCertPathChecker $r13;
        java.lang.Throwable $r17;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.Set;

        r2 := @parameter3: java.util.List;

        r3 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.security.cert.X509Certificate) $r7;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

     label2:
        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.security.cert.PKIXCertPathChecker) $r14;

        virtualinvoke $r13.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>(r4, r1);

     label3:
        goto label1;

     label4:
        $r16 := @caughtexception;

        r6 = $r16;

        $r15 = new java.security.cert.CertPathValidatorException;

        $r18 = virtualinvoke r6.<java.security.cert.CertPathValidatorException: java.lang.String getMessage()>();

        $r17 = virtualinvoke r6.<java.security.cert.CertPathValidatorException: java.lang.Throwable getCause()>();

        specialinvoke $r15.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r18, $r17, r0, i0);

        throw $r15;

     label5:
        $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate has unsupported critical extension: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r11, null, r0, i0);

        throw $r8;

     label6:
        return;

        catch java.security.cert.CertPathValidatorException from label2 to label3 with label4;
    }

    protected static int prepareNextCertH1(java.security.cert.CertPath, int, int)
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r3;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r2);

        if $z0 != 0 goto label1;

        if i1 == 0 goto label1;

        $i2 = i1 - 1;

        return $i2;

     label1:
        return i1;
    }

    protected static int prepareNextCertH2(java.security.cert.CertPath, int, int)
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r3;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r2);

        if $z0 != 0 goto label1;

        if i1 == 0 goto label1;

        $i2 = i1 - 1;

        return $i2;

     label1:
        return i1;
    }

    protected static int prepareNextCertH3(java.security.cert.CertPath, int, int)
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r3;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r2);

        if $z0 != 0 goto label1;

        if i1 == 0 goto label1;

        $i2 = i1 - 1;

        return $i2;

     label1:
        return i1;
    }

    protected static int wrapupCertA(int, java.security.cert.X509Certificate)
    {
        int i0;
        java.security.cert.X509Certificate r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.security.cert.X509Certificate;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r0);

        if $z0 != 0 goto label1;

        if i0 == 0 goto label1;

        i0 = i0 + -1;

     label1:
        return i0;
    }

    protected static int wrapupCertB(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, $i3;
        java.util.List r1;
        java.security.cert.X509Certificate r2;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r3, $r13;
        com.android.org.bouncycastle.asn1.ASN1TaggedObject r4;
        java.lang.Exception r5, $r15;
        java.lang.Object $r6, $r9;
        java.lang.String $r7;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8;
        boolean $z0;
        com.android.org.bouncycastle.asn1.ASN1Integer $r10;
        java.math.BigInteger $r11;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r12, $r14;
        com.android.org.bouncycastle.asn1.ASN1Sequence r16;
        java.util.Enumeration r17;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r6;

     label01:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        r16 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r8);

     label02:
        goto label04;

     label03:
        $r13 := @caughtexception;

        r3 = $r13;

        $r12 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints could not be decoded.", r3, r0, i0);

        throw $r12;

     label04:
        if r16 == null goto label11;

        r17 = virtualinvoke r16.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label05:
        $z0 = interfaceinvoke r17.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke r17.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (com.android.org.bouncycastle.asn1.ASN1TaggedObject) $r9;

        $i3 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i3)
        {
            case 0: goto label06;
            default: goto label10;
        };

     label06:
        $r10 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        $r11 = virtualinvoke $r10.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

     label07:
        goto label09;

     label08:
        $r15 := @caughtexception;

        r5 = $r15;

        $r14 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints requireExplicitPolicy field could not be decoded.", r5, r0, i0);

        throw $r14;

     label09:
        if i2 != 0 goto label10;

        return 0;

     label10:
        goto label05;

     label11:
        return i1;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    protected static void wrapupCertF(java.security.cert.CertPath, int, java.util.List, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.util.List r1, r3;
        java.util.Set r2;
        java.security.cert.X509Certificate r4;
        java.util.Iterator r5;
        java.security.cert.CertPathValidatorException r6, $r16;
        java.lang.Object $r7, $r14;
        boolean $z0, $z1;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8, $r15;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11;
        java.security.cert.PKIXCertPathChecker $r13;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.Set;

        r3 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.security.cert.X509Certificate) $r7;

        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

     label2:
        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.security.cert.PKIXCertPathChecker) $r14;

        virtualinvoke $r13.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>(r4, r2);

     label3:
        goto label1;

     label4:
        $r16 := @caughtexception;

        r6 = $r16;

        $r15 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Additional certificate path checker failed.", r6, r0, i0);

        throw $r15;

     label5:
        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate has unsupported critical extension: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r11, null, r0, i0);

        throw $r8;

     label6:
        return;

        catch java.security.cert.CertPathValidatorException from label2 to label3 with label4;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode wrapupCertG(java.security.cert.CertPath, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.util.Set, int, java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.util.Set r2, r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15;
        java.util.List[] r3;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r4, r6, r9, r11, r32, r35, r38, r41, r44;
        java.util.HashSet r7, $r13, $r22, r36;
        java.util.List r8, $r12, r34, r37, r43;
        java.util.Iterator r10, r31, r39, r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16;
        java.lang.Object $r14, $r15, $r17, $r19, $r23, $r24, $r27, $r28;
        java.lang.String $r16, $r18, $r20, $r21, $r25, $r26, r33, r42;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r29, $r30;

        r0 := @parameter0: java.security.cert.CertPath;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.util.Set;

        i0 := @parameter3: int;

        r3 := @parameter4: java.util.List[];

        r4 := @parameter5: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r5 := @parameter6: java.util.Set;

        $r12 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        if r4 != null goto label02;

        $z16 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z16 == 0 goto label01;

        $r30 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r30.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Explicit policy requested but none available.", null, r0, i0);

        throw $r30;

     label01:
        r6 = null;

        goto label34;

     label02:
        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isAnyPolicy(java.util.Set)>(r2);

        if $z0 == 0 goto label18;

        $z7 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z7 == 0 goto label17;

        $z9 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>();

        if $z9 == 0 goto label03;

        $r29 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Explicit policy requested but none available.", null, r0, i0);

        throw $r29;

     label03:
        $r22 = new java.util.HashSet;

        specialinvoke $r22.<java.util.HashSet: void <init>()>();

        r7 = $r22;

        i2 = 0;

     label04:
        $i7 = lengthof r3;

        if i2 >= $i7 goto label09;

        r8 = r3[i2];

        i3 = 0;

     label05:
        $i9 = interfaceinvoke r8.<java.util.List: int size()>();

        if i3 >= $i9 goto label08;

        $r27 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i3);

        r9 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r27;

        $r26 = "2.5.29.32.0";

        $r25 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z14 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z14 == 0 goto label07;

        r10 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label06:
        $z13 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label07;

        $r28 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r28);

        goto label06;

     label07:
        i3 = i3 + 1;

        goto label05;

     label08:
        i2 = i2 + 1;

        goto label04;

     label09:
        r31 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z11 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label12;

        $r24 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r24;

        r33 = virtualinvoke r32.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z12 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r33);

        if $z12 != 0 goto label11;

     label11:
        goto label10;

     label12:
        if r4 == null goto label17;

        i10 = i1 - 1;

     label13:
        if i10 < 0 goto label17;

        r34 = r3[i10];

        i11 = 0;

     label14:
        $i8 = interfaceinvoke r34.<java.util.List: int size()>();

        if i11 >= $i8 goto label16;

        $r23 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(i11);

        r35 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r23;

        $z10 = virtualinvoke r35.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z10 != 0 goto label15;

        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r3, r35);

     label15:
        i11 = i11 + 1;

        goto label14;

     label16:
        i10 = i10 + -1;

        goto label13;

     label17:
        r6 = r4;

        goto label34;

     label18:
        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        r36 = $r13;

        i12 = 0;

     label19:
        $i4 = lengthof r3;

        if i12 >= $i4 goto label25;

        r37 = r3[i12];

        i13 = 0;

     label20:
        $i6 = interfaceinvoke r37.<java.util.List: int size()>();

        if i13 >= $i6 goto label24;

        $r17 = interfaceinvoke r37.<java.util.List: java.lang.Object get(int)>(i13);

        r38 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r17;

        $r18 = "2.5.29.32.0";

        $r16 = virtualinvoke r38.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z4 == 0 goto label23;

        r39 = virtualinvoke r38.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label21:
        $z5 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label23;

        $r19 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r19;

        $r20 = "2.5.29.32.0";

        $r21 = virtualinvoke r11.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z8 != 0 goto label22;

        interfaceinvoke r36.<java.util.Set: boolean add(java.lang.Object)>(r11);

     label22:
        goto label21;

     label23:
        i13 = i13 + 1;

        goto label20;

     label24:
        i12 = i12 + 1;

        goto label19;

     label25:
        r40 = interfaceinvoke r36.<java.util.Set: java.util.Iterator iterator()>();

     label26:
        $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label28;

        $r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r15;

        r42 = virtualinvoke r41.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r42);

        if $z3 != 0 goto label27;

        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r3, r41);

     label27:
        goto label26;

     label28:
        if r4 == null goto label33;

        i14 = i1 - 1;

     label29:
        if i14 < 0 goto label33;

        r43 = r3[i14];

        i15 = 0;

     label30:
        $i5 = interfaceinvoke r43.<java.util.List: int size()>();

        if i15 >= $i5 goto label32;

        $r14 = interfaceinvoke r43.<java.util.List: java.lang.Object get(int)>(i15);

        r44 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r14;

        $z2 = virtualinvoke r44.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z2 != 0 goto label31;

        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r3, r44);

     label31:
        i15 = i15 + 1;

        goto label30;

     label32:
        i14 = i14 + -1;

        goto label29;

     label33:
        r6 = r4;

     label34:
        return r6;
    }

    static void <clinit>()
    {
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r0;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24, $r26;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.String[] $r28;

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int CRL_SIGN> = 6;

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int KEY_CERT_SIGN> = 5;

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = new com.android.org.bouncycastle.jce.provider.PKIXCRLUtil;

        specialinvoke $r0.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: void <init>()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL> = $r0;

        $r1 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier CertificatePolicies>;

        $r2 = virtualinvoke $r1.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES> = $r2;

        $r3 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier PolicyMappings>;

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS> = $r4;

        $r5 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier InhibitAnyPolicy>;

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY> = $r6;

        $r7 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r8 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r8;

        $r9 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier FreshestCRL>;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String FRESHEST_CRL> = $r10;

        $r11 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

        $r12 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR> = $r12;

        $r13 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier PolicyConstraints>;

        $r14 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS> = $r14;

        $r15 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier BasicConstraints>;

        $r17 = virtualinvoke $r15.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS> = $r17;

        $r16 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier CRLDistributionPoints>;

        $r19 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r19;

        $r18 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier SubjectAlternativeName>;

        $r21 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r21;

        $r20 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier NameConstraints>;

        $r23 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS> = $r23;

        $r22 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier AuthorityKeyIdentifier>;

        $r25 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER> = $r25;

        $r24 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier KeyUsage>;

        $r27 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE> = $r27;

        $r26 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier CRLNumber>;

        $r29 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_NUMBER> = $r29;

        $r28 = newarray (java.lang.String)[11];

        $r28[0] = "unspecified";

        $r28[1] = "keyCompromise";

        $r28[2] = "cACompromise";

        $r28[3] = "affiliationChanged";

        $r28[4] = "superseded";

        $r28[5] = "cessationOfOperation";

        $r28[6] = "certificateHold";

        $r28[7] = "unknown";

        $r28[8] = "removeFromCRL";

        $r28[9] = "privilegeWithdrawn";

        $r28[10] = "aACompromise";

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String[] crlReasons> = $r28;

        return;
    }
}
