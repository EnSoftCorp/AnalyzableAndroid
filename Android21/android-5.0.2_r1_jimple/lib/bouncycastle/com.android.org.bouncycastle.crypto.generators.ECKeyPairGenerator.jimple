public class com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator extends java.lang.Object implements com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator, com.android.org.bouncycastle.math.ec.ECConstants
{
    com.android.org.bouncycastle.crypto.params.ECDomainParameters params;
    java.security.SecureRandom random;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator r0;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(com.android.org.bouncycastle.crypto.KeyGenerationParameters)
    {
        com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator r0;
        com.android.org.bouncycastle.crypto.KeyGenerationParameters r1;
        com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters r2;
        java.security.SecureRandom $r3, $r5, $r6;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.KeyGenerationParameters;

        r2 = (com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters) r1;

        $r3 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.security.SecureRandom random> = $r3;

        $r4 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters()>();

        r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params> = $r4;

        $r5 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.security.SecureRandom random>;

        if $r5 != null goto label1;

        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.security.SecureRandom random> = $r6;

     label1:
        return;
    }

    public com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator r0;
        java.math.BigInteger r1, r2, $r5, $r7;
        int i0, $i1;
        com.android.org.bouncycastle.math.ec.ECPoint r3, $r9;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r4, $r8, $r13, $r14;
        java.security.SecureRandom $r6;
        boolean $z0;
        com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters $r10;
        com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair $r11;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r12;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        $r4 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        r1 = virtualinvoke $r4.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        i0 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

     label1:
        $r5 = new java.math.BigInteger;

        $r6 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.security.SecureRandom random>;

        specialinvoke $r5.<java.math.BigInteger: void <init>(int,java.util.Random)>(i0, $r6);

        r2 = $r5;

        $r7 = <com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r1);

        if $i1 >= 0 goto label1;

        $r8 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        $r9 = virtualinvoke $r8.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: com.android.org.bouncycastle.math.ec.ECPoint getG()>();

        r3 = virtualinvoke $r9.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r2);

        $r11 = new com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r10 = new com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters;

        $r13 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        specialinvoke $r10.<com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters: void <init>(com.android.org.bouncycastle.math.ec.ECPoint,com.android.org.bouncycastle.crypto.params.ECDomainParameters)>(r3, $r13);

        $r12 = new com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters;

        $r14 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        specialinvoke $r12.<com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters: void <init>(java.math.BigInteger,com.android.org.bouncycastle.crypto.params.ECDomainParameters)>(r2, $r14);

        specialinvoke $r11.<com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter,com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter)>($r10, $r12);

        return $r11;
    }
}
