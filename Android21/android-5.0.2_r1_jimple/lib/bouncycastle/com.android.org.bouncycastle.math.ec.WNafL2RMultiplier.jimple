public class com.android.org.bouncycastle.math.ec.WNafL2RMultiplier extends com.android.org.bouncycastle.math.ec.AbstractECMultiplier
{

    public void <init>()
    {
        com.android.org.bouncycastle.math.ec.WNafL2RMultiplier r0;

        r0 := @this: com.android.org.bouncycastle.math.ec.WNafL2RMultiplier;

        specialinvoke r0.<com.android.org.bouncycastle.math.ec.AbstractECMultiplier: void <init>()>();

        return;
    }

    protected com.android.org.bouncycastle.math.ec.ECPoint multiplyPositive(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.WNafL2RMultiplier r0;
        com.android.org.bouncycastle.math.ec.ECPoint r1, r7, $r12, $r13, r15, r17, r18;
        java.math.BigInteger r2;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28;
        com.android.org.bouncycastle.math.ec.WNafPreCompInfo r3;
        com.android.org.bouncycastle.math.ec.ECPoint[] r4, r5, r8, $r10, $r14, r16;
        int[] r6;
        byte b6;
        com.android.org.bouncycastle.math.ec.ECCurve $r9;
        byte[] $r11;

        r0 := @this: com.android.org.bouncycastle.math.ec.WNafL2RMultiplier;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r2 := @parameter1: java.math.BigInteger;

        $i12 = virtualinvoke r2.<java.math.BigInteger: int bitLength()>();

        $i11 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.WNafL2RMultiplier: int getWindowSize(int)>($i12);

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>(16, $i11);

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(2, $i13);

        r3 = staticinvoke <com.android.org.bouncycastle.math.ec.WNafUtil: com.android.org.bouncycastle.math.ec.WNafPreCompInfo precompute(com.android.org.bouncycastle.math.ec.ECPoint,int,boolean)>(r1, i0, 1);

        r4 = virtualinvoke r3.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: com.android.org.bouncycastle.math.ec.ECPoint[] getPreComp()>();

        r5 = virtualinvoke r3.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: com.android.org.bouncycastle.math.ec.ECPoint[] getPreCompNeg()>();

        r6 = staticinvoke <com.android.org.bouncycastle.math.ec.WNafUtil: int[] generateCompactWindowNaf(int,java.math.BigInteger)>(i0, r2);

        $r9 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        r7 = virtualinvoke $r9.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        i1 = lengthof r6;

        if i1 <= 1 goto label5;

        i1 = i1 + -1;

        i2 = r6[i1];

        i3 = i2 >> 16;

        i4 = i2 & 65535;

        i5 = staticinvoke <java.lang.Math: int abs(int)>(i3);

        if i3 >= 0 goto label1;

        $r14 = r5;

        goto label2;

     label1:
        $r14 = r4;

     label2:
        r8 = $r14;

        $i16 = i5 << 3;

        $i15 = 1 << i0;

        if $i16 >= $i15 goto label3;

        $r11 = <com.android.org.bouncycastle.math.ec.LongArray: byte[] bitLengths>;

        b6 = $r11[i5];

        $i17 = b6 - 1;

        $i21 = 1 << $i17;

        i8 = i5 ^ $i21;

        i7 = i0 - b6;

        $i22 = i0 - 1;

        $i19 = 1 << $i22;

        i10 = $i19 - 1;

        $i20 = i8 << i7;

        i9 = $i20 + 1;

        $i24 = i10 >>> 1;

        $r12 = r8[$i24];

        $i23 = i9 >>> 1;

        $r13 = r8[$i23];

        r15 = virtualinvoke $r12.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>($r13);

        i4 = i4 - i7;

        goto label4;

     label3:
        $i18 = i5 >>> 1;

        r15 = r8[$i18];

     label4:
        r7 = virtualinvoke r15.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint timesPow2(int)>(i4);

     label5:
        if i1 <= 0 goto label8;

        i1 = i1 + -1;

        i25 = r6[i1];

        i26 = i25 >> 16;

        i27 = i25 & 65535;

        i28 = staticinvoke <java.lang.Math: int abs(int)>(i26);

        if i26 >= 0 goto label6;

        $r10 = r5;

        goto label7;

     label6:
        $r10 = r4;

     label7:
        r16 = $r10;

        $i14 = i28 >>> 1;

        r17 = r16[$i14];

        r18 = virtualinvoke r7.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint twicePlus(com.android.org.bouncycastle.math.ec.ECPoint)>(r17);

        r7 = virtualinvoke r18.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint timesPow2(int)>(i27);

        goto label5;

     label8:
        return r7;
    }

    protected int getWindowSize(int)
    {
        com.android.org.bouncycastle.math.ec.WNafL2RMultiplier r0;
        int i0, $i1;

        r0 := @this: com.android.org.bouncycastle.math.ec.WNafL2RMultiplier;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.org.bouncycastle.math.ec.WNafUtil: int getWindowSize(int)>(i0);

        return $i1;
    }
}
