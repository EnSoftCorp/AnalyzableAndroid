public class com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities extends java.lang.Object
{
    protected static final com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL;
    protected static final java.lang.String CERTIFICATE_POLICIES;
    protected static final java.lang.String BASIC_CONSTRAINTS;
    protected static final java.lang.String POLICY_MAPPINGS;
    protected static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    protected static final java.lang.String NAME_CONSTRAINTS;
    protected static final java.lang.String KEY_USAGE;
    protected static final java.lang.String INHIBIT_ANY_POLICY;
    protected static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    protected static final java.lang.String DELTA_CRL_INDICATOR;
    protected static final java.lang.String POLICY_CONSTRAINTS;
    protected static final java.lang.String FRESHEST_CRL;
    protected static final java.lang.String CRL_DISTRIBUTION_POINTS;
    protected static final java.lang.String AUTHORITY_KEY_IDENTIFIER;
    protected static final java.lang.String ANY_POLICY;
    protected static final java.lang.String CRL_NUMBER;
    protected static final int KEY_CERT_SIGN;
    protected static final int CRL_SIGN;
    protected static final java.lang.String[] crlReasons;

    public void <init>()
    {
        com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities r0;

        r0 := @this: com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.util.Set) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0;
        java.util.Set r1;
        java.security.cert.TrustAnchor $r2;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Set;

        $r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    protected static java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.util.Set, java.lang.String) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0, $r13, $r19, $r20;
        java.util.Set r1;
        java.lang.String r2, $r16, $r17;
        java.security.cert.TrustAnchor r3;
        java.security.PublicKey r4, $r15;
        java.lang.Exception r5, $r23, r27;
        java.security.cert.X509CertSelector r6, $r10;
        javax.security.auth.x500.X500Principal r7, r9, $r18;
        java.io.IOException r8, $r21;
        byte[] $r11;
        boolean $z0, $z1, $z2;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r12, $r24;
        java.lang.Object $r14;
        java.lang.IllegalArgumentException $r22;
        java.util.Iterator r25;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Set;

        r2 := @parameter2: java.lang.String;

        r3 = null;

        r4 = null;

        r5 = null;

        $r10 = new java.security.cert.X509CertSelector;

        specialinvoke $r10.<java.security.cert.X509CertSelector: void <init>()>();

        r6 = $r10;

        r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r0);

     label01:
        $r11 = virtualinvoke r7.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r6.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r11);

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r8 = $r21;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot set subject search criteria for trust anchor.", r8);

        throw $r24;

     label04:
        r25 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        if r3 != null goto label17;

        $r14 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.TrustAnchor) $r14;

        $r13 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if $r13 == null goto label07;

        $r19 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z2 = virtualinvoke r6.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>($r19);

        if $z2 == 0 goto label06;

        $r20 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        r4 = virtualinvoke $r20.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        goto label13;

     label06:
        r3 = null;

        goto label13;

     label07:
        $r16 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        if $r16 == null goto label12;

        $r15 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        if $r15 == null goto label12;

     label08:
        $r18 = new javax.security.auth.x500.X500Principal;

        $r17 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r18.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r17);

        r9 = $r18;

        $z1 = virtualinvoke r7.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label09;

        r4 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        goto label10;

     label09:
        r3 = null;

     label10:
        goto label13;

     label11:
        $r22 := @caughtexception;

        r3 = null;

        goto label13;

     label12:
        r3 = null;

     label13:
        if r4 == null goto label05;

     label14:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>(r0, r4, r2);

     label15:
        goto label05;

     label16:
        $r23 := @caughtexception;

        r27 = $r23;

        r5 = r27;

        r3 = null;

        r4 = null;

        goto label05;

     label17:
        if r3 != null goto label18;

        if r5 == null goto label18;

        $r12 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("TrustAnchor found but certificate validation failed.", r5);

        throw $r12;

     label18:
        return r3;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label08 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    protected static void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.util.Iterator r2;
        java.util.List r3;
        java.lang.String r4;
        java.util.Collection $r5, $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r10;
        java.lang.Integer $r9;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $r5 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.List) $r7;

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(6);

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        r4 = (java.lang.String) $r10;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoreFromLocation(java.lang.String,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r4, r1);

     label2:
        goto label1;

     label3:
        return;
    }

    protected static javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        com.android.org.bouncycastle.x509.X509AttributeCertificate $r1;
        com.android.org.bouncycastle.x509.AttributeCertificateIssuer $r2;
        java.security.Principal[] $r3;
        java.security.Principal $r4;
        javax.security.auth.x500.X500Principal $r5, $r7;
        java.security.cert.X509Certificate $r6;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label1;

        $r6 = (java.security.cert.X509Certificate) r0;

        $r7 = virtualinvoke $r6.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r7;

     label1:
        $r1 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r0;

        $r2 = interfaceinvoke $r1.<com.android.org.bouncycastle.x509.X509AttributeCertificate: com.android.org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r4 = $r3[0];

        $r5 = (javax.security.auth.x500.X500Principal) $r4;

        return $r5;
    }

    protected static java.util.Date getValidDate(java.security.cert.PKIXParameters)
    {
        java.security.cert.PKIXParameters r0;
        java.util.Date r1, $r2;

        r0 := @parameter0: java.security.cert.PKIXParameters;

        r1 = virtualinvoke r0.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        if r1 != null goto label1;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        r1 = $r2;

     label1:
        return r1;
    }

    protected static javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r1;
    }

    protected static boolean isSelfIssued(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.security.Principal $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = interfaceinvoke $r1.<java.security.Principal: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    protected static com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension, java.lang.String) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Extension r0;
        java.lang.String r1;
        byte[] r2;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r3;

        r0 := @parameter0: java.security.cert.X509Extension;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<java.security.cert.X509Extension: byte[] getExtensionValue(java.lang.String)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getObject(java.lang.String,byte[])>(r1, r2);

        return $r3;
    }

    private static com.android.org.bouncycastle.asn1.ASN1Primitive getObject(java.lang.String, byte[]) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.lang.String r0, $r14;
        byte[] r1, $r7;
        com.android.org.bouncycastle.asn1.ASN1InputStream r2, $r4, $r6, r15;
        com.android.org.bouncycastle.asn1.ASN1OctetString r3;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r5, $r8;
        java.lang.Exception $r9, r16;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

     label1:
        $r4 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>(r1);

        r2 = $r4;

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        r3 = (com.android.org.bouncycastle.asn1.ASN1OctetString) $r5;

        $r6 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r7 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r6.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r7);

        r15 = $r6;

        $r8 = virtualinvoke r15.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r16 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing extension ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>($r14, r16);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @parameter0: java.security.cert.X509CRL;

        $r1 = virtualinvoke r0.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r1;
    }

    protected static com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey) throws java.security.cert.CertPathValidatorException
    {
        java.security.PublicKey r0;
        com.android.org.bouncycastle.asn1.ASN1InputStream r1, $r3;
        com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo r2;
        byte[] $r4;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r5;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier $r6;
        java.lang.Exception $r7, r9;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8;

        r0 := @parameter0: java.security.PublicKey;

     label1:
        $r3 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r4 = interfaceinvoke r0.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r4);

        r1 = $r3;

        $r5 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        r2 = staticinvoke <com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

        $r6 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Subject public key cannot be decoded.", r9);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static final java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence) throws java.security.cert.CertPathValidatorException
    {
        com.android.org.bouncycastle.asn1.ASN1Sequence r0;
        java.util.HashSet r1, $r6;
        java.io.ByteArrayOutputStream r2, $r7;
        com.android.org.bouncycastle.asn1.ASN1OutputStream r3, $r8;
        java.util.Enumeration r4;
        java.io.IOException r5, $r14;
        boolean $z0;
        java.lang.Object $r9;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r10;
        java.security.cert.PolicyQualifierInfo $r11;
        byte[] $r12;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r13;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.ASN1Sequence;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r1 = $r6;

        if r0 != null goto label1;

        return r1;

     label1:
        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r7;

        $r8 = new com.android.org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r8.<com.android.org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>(r2);

        r3 = $r8;

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

     label3:
        $r9 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r10 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r9;

        virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeObject(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r10);

        $r11 = new java.security.cert.PolicyQualifierInfo;

        $r12 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r11.<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>($r12);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        r5 = $r14;

        $r13 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r13.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Policy qualifier info cannot be decoded.", r5);

        throw $r13;

     label6:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void reset()>();

        goto label2;

     label7:
        return r1;

        catch java.io.IOException from label3 to label4 with label5;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r0, r2, r3;
        java.util.List[] r1;
        int i0, $i1;
        java.security.cert.PolicyNode $r4;
        java.util.ArrayList $r5;

        r0 := @parameter0: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r1 := @parameter1: java.util.List[];

        r2 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r4 = virtualinvoke r2.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r3 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r4;

        if r0 != null goto label1;

        return null;

     label1:
        if r3 != null goto label4;

        i0 = 0;

     label2:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1[i0] = $r5;

        i0 = i0 + 1;

        goto label2;

     label3:
        return null;

     label4:
        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r2);

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r1, r2);

        return r0;
    }

    private static void removePolicyNodeRecurse(java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        java.util.List[] r0;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r1, r3;
        java.util.Iterator r2;
        int $i0;
        java.util.List $r4;
        boolean $z1, $z2;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List[];

        r1 := @parameter1: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $i0 = virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: int getDepth()>();

        $r4 = r0[$i0];

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z1 == 0 goto label2;

        r2 = virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r5;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r0, r3);

        goto label1;

     label2:
        return;
    }

    protected static boolean processCertD1i(int, java.util.List[], com.android.org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        int i0, i1, $i2, $i3;
        java.util.List[] r0;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier r1;
        java.util.Set r2, r5;
        java.util.List r3, $r15;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r4, r7, $r12;
        java.util.HashSet r6, $r11;
        java.lang.Object $r8;
        java.lang.String $r9, $r10, $r13;
        boolean $z0;
        java.util.ArrayList $r14;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: com.android.org.bouncycastle.asn1.DERObjectIdentifier;

        r2 := @parameter3: java.util.Set;

        $i2 = i0 - 1;

        r3 = r0[$i2];

        i1 = 0;

     label1:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i3 goto label3;

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r8;

        r5 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r9 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r6 = $r11;

        $r10 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r10);

        $r12 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r13 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r14, i0, r6, r4, r2, $r13, 0);

        r7 = $r12;

        virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r7);

        $r15 = r0[i0];

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r7);

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected static void processCertD1ii(int, java.util.List[], com.android.org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        int i0, i1, $i2, $i3;
        java.util.List[] r0;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier r1;
        java.util.Set r2;
        java.util.List r3, $r14;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r4, r6, $r13;
        java.util.HashSet r5, $r10;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r11, $r15;
        boolean $z0;
        java.util.ArrayList $r12;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: com.android.org.bouncycastle.asn1.DERObjectIdentifier;

        r2 := @parameter3: java.util.Set;

        $i2 = i0 - 1;

        r3 = r0[$i2];

        i1 = 0;

     label1:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i3 goto label3;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r7;

        $r8 = "2.5.29.32.0";

        $r9 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r5 = $r10;

        $r11 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r11);

        $r13 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r15 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r13.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r12, i0, r5, r4, r2, $r15, 0);

        r6 = $r13;

        virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r6);

        $r14 = r0[i0];

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r6);

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected static void prepareNextCertB1(int, java.util.List[], java.lang.String, java.util.Map, java.security.cert.X509Certificate) throws com.android.org.bouncycastle.jce.provider.AnnotatedException, java.security.cert.CertPathValidatorException
    {
        int i0;
        java.util.List[] r0;
        java.lang.String r1, $r12, $r14, $r16, $r18, $r22, $r28, $r30, $r31, $r36;
        java.util.Map r2;
        java.security.cert.X509Certificate r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.util.Iterator r4, r43;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r5, r9, $r20, r44, r49;
        java.util.Set r6, $r17, $r25, $r27, $r34;
        java.lang.Exception r7, r8, $r40, $r42;
        java.util.List $r10, $r11, $r23;
        java.lang.Object $r13, $r24, $r26, $r32, $r35;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r15;
        java.security.cert.PolicyNode $r19;
        java.util.ArrayList $r21;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r29;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r33, r45;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r37;
        java.security.cert.CertPathValidatorException $r38, r48;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r39, $r41;
        java.util.Enumeration r46;
        com.android.org.bouncycastle.asn1.x509.PolicyInformation r47;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.Map;

        r3 := @parameter4: java.security.cert.X509Certificate;

        z0 = 0;

        $r10 = r0[i0];

        r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r32 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r32;

        $r36 = virtualinvoke r5.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z7 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label02;

        z0 = 1;

        $r35 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r34 = (java.util.Set) $r35;

        r5.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r34;

        goto label03;

     label02:
        goto label01;

     label03:
        if z0 != 0 goto label21;

        $r11 = r0[i0];

        r43 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label21;

        $r13 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r13;

        $r12 = "2.5.29.32.0";

        $r14 = virtualinvoke r44.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label20;

        r6 = null;

     label05:
        $r16 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r15 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r16);

        r45 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r15);

     label06:
        goto label08;

     label07:
        $r42 := @caughtexception;

        r7 = $r42;

        $r41 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r41.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certificate policies cannot be decoded.", r7);

        throw $r41;

     label08:
        r46 = virtualinvoke r45.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label09:
        $z4 = interfaceinvoke r46.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label18;

     label10:
        $r26 = interfaceinvoke r46.<java.util.Enumeration: java.lang.Object nextElement()>();

        r47 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r26);

     label11:
        goto label13;

     label12:
        $r40 := @caughtexception;

        r8 = $r40;

        $r39 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r39.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Policy information cannot be decoded.", r8);

        throw $r39;

     label13:
        $r31 = "2.5.29.32.0";

        $r29 = virtualinvoke r47.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r30 = virtualinvoke $r29.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z6 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z6 == 0 goto label17;

     label14:
        $r33 = virtualinvoke r47.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r6 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r33);

     label15:
        goto label18;

     label16:
        $r38 := @caughtexception;

        r48 = $r38;

        $r37 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r37.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Policy qualifier info set could not be built.", r48);

        throw $r37;

     label17:
        goto label09;

     label18:
        z8 = 0;

        $r17 = virtualinvoke r3.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r17 == null goto label19;

        $r27 = virtualinvoke r3.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r28 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z8 = interfaceinvoke $r27.<java.util.Set: boolean contains(java.lang.Object)>($r28);

     label19:
        $r19 = virtualinvoke r44.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r49 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r19;

        $r18 = "2.5.29.32.0";

        $r22 = virtualinvoke r49.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z5 == 0 goto label21;

        $r20 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        $r24 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r25 = (java.util.Set) $r24;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r21, i0, $r25, r49, r6, r1, z8);

        r9 = $r20;

        virtualinvoke r49.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r9);

        $r23 = r0[i0];

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label21;

     label20:
        goto label04;

     label21:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.security.cert.CertPathValidatorException from label14 to label15 with label16;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode prepareNextCertB2(int, java.util.List[], java.lang.String, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        int i0, i1, i2, $i3;
        java.util.List[] r0;
        java.lang.String r1, $r10;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r2, r4, r5, r7;
        java.util.Iterator r3;
        java.util.List r6, $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r12;
        java.security.cert.PolicyNode $r11;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r8 = r0[i0];

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r9;

        $r10 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        $r11 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r5 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r11;

        virtualinvoke r5.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label6;

        r6 = r0[i1];

        i2 = 0;

     label3:
        $i3 = interfaceinvoke r6.<java.util.List: int size()>();

        if i2 >= $i3 goto label5;

        $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i2);

        r7 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r12;

        $z2 = virtualinvoke r7.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z2 != 0 goto label4;

        r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r2, r0, r7);

        if r2 != null goto label4;

        goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        i1 = i1 + -1;

        goto label2;

     label6:
        goto label1;

     label7:
        return r2;
    }

    protected static boolean isAnyPolicy(java.util.Set)
    {
        java.util.Set r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.Set;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected static void addAdditionalStoreFromLocation(java.lang.String, com.android.org.bouncycastle.x509.ExtendedPKIXParameters)
    {
        java.lang.String r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isAdditionalLocationsEnabled()>();

        if $z0 == 0 goto label1;

        goto label1;

     label1:
        return;
    }

    protected static java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.x509.X509CertStoreSelector r0;
        java.util.List r1;
        java.util.HashSet r2, $r7;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.security.cert.CertStore r5;
        java.security.cert.CertStoreException r6, $r9;
        boolean $z0;
        java.util.Collection $r8;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r10;

        r0 := @parameter0: com.android.org.bouncycastle.x509.X509CertStoreSelector;

        r1 := @parameter1: java.util.List;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r2 = $r7;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.security.cert.CertStore) r4;

     label2:
        $r8 = virtualinvoke r5.<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>(r0);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r6 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r10.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from certificate store.", r6);

        throw $r10;

     label5:
        goto label1;

     label6:
        return r2;

        catch java.security.cert.CertStoreException from label2 to label3 with label4;
    }

    protected static void addAdditionalStoresFromCRLDistributionPoint(com.android.org.bouncycastle.asn1.x509.CRLDistPoint, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.CRLDistPoint r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.lang.Exception r2, $r13;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName r3;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r4;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r5;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint $r6;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r7, $r12;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r8;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r9, $r10;
        com.android.org.bouncycastle.asn1.DERIA5String $r11;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r14;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint[] r15;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.CRLDistPoint;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        if r0 == null goto label9;

     label1:
        r15 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r2 = $r13;

        $r14 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", r2);

        throw $r14;

     label4:
        i5 = 0;

     label5:
        $i1 = lengthof r15;

        if i5 >= $i1 goto label9;

        $r6 = r15[i5];

        r3 = virtualinvoke $r6.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if r3 == null goto label8;

        $i2 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i2 != 0 goto label8;

        $r7 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r8 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r7);

        r4 = virtualinvoke $r8.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label6:
        $i3 = lengthof r4;

        if i0 >= $i3 goto label8;

        $r9 = r4[i0];

        $i4 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i4 != 6 goto label7;

        $r10 = r4[i0];

        $r12 = virtualinvoke $r10.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r11 = staticinvoke <com.android.org.bouncycastle.asn1.DERIA5String: com.android.org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r12);

        r5 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoreFromLocation(java.lang.String,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r5, r1);

     label7:
        i0 = i0 + 1;

        goto label6;

     label8:
        i5 = i5 + 1;

        goto label5;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void getCRLIssuersFromDistributionPoint(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.util.Collection, java.security.cert.X509CRLSelector, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.util.Collection r1;
        java.security.cert.X509CRLSelector r2;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r3;
        java.util.ArrayList r4, $r7;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r5;
        int i0, $i1, $i2;
        java.io.IOException r6, $r24, $r25, r29;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r8, $r16;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName $r9;
        boolean $z0, $z1;
        java.lang.Object $r10, $r14;
        byte[] $r11, $r21;
        javax.security.auth.x500.X500Principal $r12, $r13, $r18;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r15, $r23, $r26;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r17, $r20;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r19;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r22;
        java.util.Iterator r27, r28;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: java.security.cert.X509CRLSelector;

        r3 := @parameter3: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        $r8 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r8 == null goto label07;

        $r16 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r5 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label01:
        $i1 = lengthof r5;

        if i0 >= $i1 goto label06;

        $r17 = r5[i0];

        $i2 = virtualinvoke $r17.<com.android.org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i2 != 4 goto label05;

     label02:
        $r18 = new javax.security.auth.x500.X500Principal;

        $r20 = r5[i0];

        $r19 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r22 = interfaceinvoke $r19.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r21 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        specialinvoke $r18.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r21);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r18);

     label03:
        goto label05;

     label04:
        $r24 := @caughtexception;

        r6 = $r24;

        $r26 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r26.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL issuer information from distribution point cannot be decoded.", r6);

        throw $r26;

     label05:
        i0 = i0 + 1;

        goto label01;

     label06:
        goto label10;

     label07:
        $r9 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r9 != null goto label08;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL issuer is omitted from distribution point but no distributionPoint field present.");

        throw $r15;

     label08:
        r27 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r14 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (javax.security.auth.x500.X500Principal) $r14;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label09;

     label10:
        r28 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

     label12:
        $r10 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (javax.security.auth.x500.X500Principal) $r10;

        $r11 = virtualinvoke $r12.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r2.<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>($r11);

     label13:
        goto label11;

     label14:
        $r25 := @caughtexception;

        r29 = $r25;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot decode CRL issuer information.", r29);

        throw $r23;

     label15:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label12 to label13 with label14;
    }

    private static java.math.BigInteger getSerialNumber(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        com.android.org.bouncycastle.x509.X509AttributeCertificate $r1;
        java.math.BigInteger $r2, $r4;
        java.security.cert.X509Certificate $r3;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label1;

        $r3 = (java.security.cert.X509Certificate) r0;

        $r4 = virtualinvoke $r3.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        return $r4;

     label1:
        $r1 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r0;

        $r2 = interfaceinvoke $r1.<com.android.org.bouncycastle.x509.X509AttributeCertificate: java.math.BigInteger getSerialNumber()>();

        return $r2;
    }

    protected static void getCertStatus(java.util.Date, java.security.cert.X509CRL, java.lang.Object, com.android.org.bouncycastle.jce.provider.CertStatus) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0, $r9, $r10;
        java.security.cert.X509CRL r1;
        java.lang.Object r2;
        com.android.org.bouncycastle.jce.provider.CertStatus r3;
        boolean z0, $z1, $z2, $z3;
        java.security.cert.CRLException r4, $r21;
        java.lang.Exception r5, $r23;
        javax.security.auth.x500.X500Principal $r6, $r7, $r20, r26;
        java.math.BigInteger $r8, $r11, $r12, $r13, $r14, $r15, $r18;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r16;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r17;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r19;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r22, $r24;
        java.security.cert.X509CRLEntry r25;
        com.android.org.bouncycastle.asn1.ASN1Enumerated r27;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.android.org.bouncycastle.jce.provider.CertStatus;

     label01:
        z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.X509CRLObject: boolean isIndirectCRL(java.security.cert.X509CRL)>(r1);

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r4 = $r21;

        $r22 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r22.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Failed check for indirect CRL.", r4);

        throw $r22;

     label04:
        if z0 == 0 goto label08;

        $r18 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.math.BigInteger getSerialNumber(java.lang.Object)>(r2);

        r25 = virtualinvoke r1.<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r18);

        if r25 != null goto label05;

        return;

     label05:
        r26 = virtualinvoke r25.<java.security.cert.X509CRLEntry: javax.security.auth.x500.X500Principal getCertificateIssuer()>();

        if r26 != null goto label06;

        r26 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r1);

     label06:
        $r20 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r2);

        $z3 = virtualinvoke $r20.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r26);

        if $z3 != 0 goto label07;

        return;

     label07:
        goto label10;

     label08:
        $r6 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r2);

        $r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r1);

        $z1 = virtualinvoke $r6.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label09;

        return;

     label09:
        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.math.BigInteger getSerialNumber(java.lang.Object)>(r2);

        r25 = virtualinvoke r1.<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r8);

        if r25 != null goto label10;

        return;

     label10:
        r27 = null;

        $z2 = virtualinvoke r25.<java.security.cert.X509CRLEntry: boolean hasExtensions()>();

        if $z2 == 0 goto label14;

     label11:
        $r17 = <com.android.org.bouncycastle.asn1.x509.X509Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier reasonCode>;

        $r16 = virtualinvoke $r17.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r19 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r25, $r16);

        r27 = staticinvoke <com.android.org.bouncycastle.asn1.DEREnumerated: com.android.org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)>($r19);

     label12:
        goto label14;

     label13:
        $r23 := @caughtexception;

        r5 = $r23;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Reason code CRL entry extension could not be decoded.", r5);

        throw $r24;

     label14:
        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $r9 = virtualinvoke r25.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        $l1 = virtualinvoke $r9.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label15;

        if r27 == null goto label15;

        $r12 = virtualinvoke r27.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

        if $i4 == 0 goto label15;

        $r13 = virtualinvoke r27.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i5 = virtualinvoke $r13.<java.math.BigInteger: int intValue()>();

        if $i5 == 1 goto label15;

        $r14 = virtualinvoke r27.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i6 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        if $i6 == 2 goto label15;

        $r15 = virtualinvoke r27.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i7 = virtualinvoke $r15.<java.math.BigInteger: int intValue()>();

        if $i7 != 8 goto label18;

     label15:
        if r27 == null goto label16;

        $r11 = virtualinvoke r27.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i3 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>($i3);

        goto label17;

     label16:
        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(0);

     label17:
        $r10 = virtualinvoke r25.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: void setRevocationDate(java.util.Date)>($r10);

     label18:
        return;

        catch java.security.cert.CRLException from label01 to label02 with label03;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    protected static java.util.Set getDeltaCRLs(java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509CRL r2, r9;
        com.android.org.bouncycastle.x509.X509CRLStoreSelector r3, $r10;
        java.io.IOException r4, $r26;
        com.android.org.bouncycastle.asn1.ASN1Primitive r5;
        java.lang.Exception r6, $r21, $r22, r28;
        java.util.HashSet r7, $r18;
        java.util.Iterator r8;
        javax.security.auth.x500.X500Principal $r11;
        byte[] $r12, r29;
        java.lang.String $r13, $r14;
        java.math.BigInteger $r15, $r17, r27;
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r16;
        boolean $z0, $z1;
        java.lang.Object $r19;
        com.android.org.bouncycastle.asn1.ASN1Integer $r20;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r23, $r24, $r25;
        java.util.Set r30;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509CRL;

        $r10 = new com.android.org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r10.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        r3 = $r10;

     label01:
        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $r12 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r12);

     label02:
        goto label04;

     label03:
        $r26 := @caughtexception;

        r4 = $r26;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot extract issuer from CRL.", r4);

        throw $r24;

     label04:
        r27 = null;

     label05:
        $r13 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER>;

        r5 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r13);

        if r5 == null goto label06;

        $r20 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Integer: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)>(r5);

        r27 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

     label06:
        goto label08;

     label07:
        $r22 := @caughtexception;

        r28 = $r22;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL number extension could not be extracted from CRL.", r28);

        throw $r25;

     label08:
        $r14 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        r29 = virtualinvoke r2.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>($r14);

     label09:
        goto label11;

     label10:
        $r21 := @caughtexception;

        r6 = $r21;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension value could not be read.", r6);

        throw $r23;

     label11:
        if r27 != null goto label12;

        $r17 = null;

        goto label13;

     label12:
        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r17 = virtualinvoke r27.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

     label13:
        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setMinCRLNumber(java.math.BigInteger)>($r17);

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setIssuingDistributionPoint(byte[])>(r29);

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setIssuingDistributionPointEnabled(boolean)>(1);

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setMaxBaseCRLNumber(java.math.BigInteger)>(r27);

        $r16 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL>;

        r30 = virtualinvoke $r16.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: java.util.Set findCRLs(com.android.org.bouncycastle.x509.X509CRLStoreSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)>(r3, r1, r0);

        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        r7 = $r18;

        r8 = interfaceinvoke r30.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r19 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.security.cert.X509CRL) $r19;

        $z1 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isDeltaCRL(java.security.cert.X509CRL)>(r9);

        if $z1 == 0 goto label15;

        interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r9);

     label15:
        goto label14;

     label16:
        return r7;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private static boolean isDeltaCRL(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL r0;
        java.util.Set r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 = virtualinvoke r0.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    protected static java.util.Set getCompleteCRLs(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.lang.Object r1;
        java.util.Date r2;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r3;
        com.android.org.bouncycastle.x509.X509CRLStoreSelector r4, $r7;
        java.util.HashSet r5, $r8;
        com.android.org.bouncycastle.x509.X509AttributeCertificate r6, $r25, $r31;
        boolean $z0, $z2, $z3, $z4, $z5;
        javax.security.auth.x500.X500Principal $r9, $r13;
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r10;
        java.lang.StringBuilder $r11, $r14, $r15, $r16, $r19, $r20, $r23, $r27;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r12, $r17, $r33, $r34, r35;
        java.lang.String $r18, $r28;
        java.security.Principal[] $r21, $r29;
        com.android.org.bouncycastle.x509.AttributeCertificateIssuer $r22, $r32;
        java.security.Principal $r24, $r30;
        java.security.cert.X509Certificate $r26, r37;
        java.util.Set r36;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $r7 = new com.android.org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r7.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        r4 = $r7;

     label01:
        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r5 = $r8;

        $z0 = r1 instanceof com.android.org.bouncycastle.x509.X509AttributeCertificate;

        if $z0 == 0 goto label02;

        $r31 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r1;

        $r32 = interfaceinvoke $r31.<com.android.org.bouncycastle.x509.X509AttributeCertificate: com.android.org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r29 = virtualinvoke $r32.<com.android.org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r30 = $r29[0];

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r30);

        goto label03;

     label02:
        $r9 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label03:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCRLIssuersFromDistributionPoint(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r0, r5, r4, r3);

     label04:
        goto label06;

     label05:
        $r34 := @caughtexception;

        r35 = $r34;

        $r33 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r33.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get issuer information from distribution point.", r35);

        throw $r33;

     label06:
        $z2 = r1 instanceof java.security.cert.X509Certificate;

        if $z2 == 0 goto label07;

        $r26 = (java.security.cert.X509Certificate) r1;

        virtualinvoke r4.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>($r26);

        goto label08;

     label07:
        $z3 = r1 instanceof com.android.org.bouncycastle.x509.X509AttributeCertificate;

        if $z3 == 0 goto label08;

        $r25 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r1;

        virtualinvoke r4.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setAttrCertificateChecking(com.android.org.bouncycastle.x509.X509AttributeCertificate)>($r25);

     label08:
        virtualinvoke r4.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCompleteCRLEnabled(boolean)>(1);

        $r10 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL>;

        r36 = virtualinvoke $r10.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: java.util.Set findCRLs(com.android.org.bouncycastle.x509.X509CRLStoreSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)>(r4, r3, r2);

        $z5 = interfaceinvoke r36.<java.util.Set: boolean isEmpty()>();

        if $z5 == 0 goto label10;

        $z4 = r1 instanceof com.android.org.bouncycastle.x509.X509AttributeCertificate;

        if $z4 == 0 goto label09;

        r6 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r1;

        $r17 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CRLs found for issuer \"");

        $r22 = interfaceinvoke r6.<com.android.org.bouncycastle.x509.X509AttributeCertificate: com.android.org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r21 = virtualinvoke $r22.<com.android.org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r24 = $r21[0];

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r28);

        throw $r17;

     label09:
        r37 = (java.security.cert.X509Certificate) r1;

        $r12 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CRLs found for issuer \"");

        $r13 = virtualinvoke r37.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label10:
        return r36;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label04 with label05;
    }

    protected static java.util.Date getValidCertDateFromValidityModel(com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.CertPath, int) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r0;
        java.security.cert.CertPath r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.org.bouncycastle.asn1.ASN1GeneralizedTime r2;
        byte[] r3;
        java.util.Date $r4, $r8, $r17, $r18, $r21;
        java.util.List $r5, $r9, $r14;
        java.lang.Object $r6, $r10, $r16;
        java.security.cert.X509Certificate $r7, $r11, $r15;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r12;
        java.lang.String $r13;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r19;
        java.text.ParseException $r20, r29;
        java.io.IOException $r22;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r23, $r24, $r25;
        java.lang.IllegalArgumentException $r26;

        r0 := @parameter0: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r1 := @parameter1: java.security.cert.CertPath;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        if $i1 != 1 goto label12;

        if i0 > 0 goto label01;

        $r21 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r0);

        return $r21;

     label01:
        $i2 = i0 - 1;

        if $i2 != 0 goto label11;

        r2 = null;

     label02:
        $r9 = virtualinvoke r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i4 = i0 - 1;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i4);

        $r11 = (java.security.cert.X509Certificate) $r10;

        $r12 = <com.android.org.bouncycastle.asn1.isismtt.ISISMTTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_isismtt_at_dateOfCertGen>;

        $r13 = virtualinvoke $r12.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r3 = virtualinvoke $r11.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r13);

        if r3 == null goto label03;

        $r19 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r3);

        r2 = staticinvoke <com.android.org.bouncycastle.asn1.DERGeneralizedTime: com.android.org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)>($r19);

     label03:
        goto label06;

     label04:
        $r22 := @caughtexception;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Date of cert gen extension could not be read.");

        throw $r25;

     label05:
        $r26 := @caughtexception;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Date of cert gen extension could not be read.");

        throw $r24;

     label06:
        if r2 == null goto label10;

     label07:
        $r17 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()>();

     label08:
        return $r17;

     label09:
        $r20 := @caughtexception;

        r29 = $r20;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Date from date of cert gen extension could not be parsed.", r29);

        throw $r23;

     label10:
        $r14 = virtualinvoke r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i5 = i0 - 1;

        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i5);

        $r15 = (java.security.cert.X509Certificate) $r16;

        $r18 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        return $r18;

     label11:
        $r5 = virtualinvoke r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i3 = i0 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i3);

        $r7 = (java.security.cert.X509Certificate) $r6;

        $r8 = virtualinvoke $r7.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        return $r8;

     label12:
        $r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r0);

        return $r4;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.IllegalArgumentException from label02 to label03 with label05;
        catch java.text.ParseException from label07 to label08 with label09;
    }

    protected static java.security.PublicKey getNextWorkingKey(java.util.List, int) throws java.security.cert.CertPathValidatorException
    {
        java.util.List r0;
        int i0, i1, $i2;
        java.security.cert.Certificate r1;
        java.security.PublicKey r2, $r20, r24;
        java.security.interfaces.DSAPublicKey r3, r5;
        java.security.cert.X509Certificate r4;
        java.security.interfaces.DSAParams r6, $r10, $r13;
        java.security.spec.DSAPublicKeySpec r7, $r15;
        java.security.KeyFactory r8;
        java.lang.Object $r9, $r11;
        boolean $z0, $z1;
        java.security.cert.CertPathValidatorException $r12, $r19;
        java.math.BigInteger $r14, $r16, $r17, $r18;
        java.lang.RuntimeException $r21;
        java.lang.Exception $r22, r25;
        java.lang.String $r23;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.Certificate) $r9;

        r2 = virtualinvoke r1.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $z0 = r2 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 != 0 goto label01;

        return r2;

     label01:
        r3 = (java.security.interfaces.DSAPublicKey) r2;

        $r10 = interfaceinvoke r3.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        if $r10 == null goto label02;

        return r3;

     label02:
        i1 = i0 + 1;

     label03:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i2 goto label10;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (java.security.cert.X509Certificate) $r11;

        r24 = virtualinvoke r4.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $z1 = r24 instanceof java.security.interfaces.DSAPublicKey;

        if $z1 != 0 goto label04;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("DSA parameters cannot be inherited from previous certificate.");

        throw $r19;

     label04:
        r5 = (java.security.interfaces.DSAPublicKey) r24;

        $r13 = interfaceinvoke r5.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        if $r13 != null goto label05;

        goto label09;

     label05:
        r6 = interfaceinvoke r5.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r15 = new java.security.spec.DSAPublicKeySpec;

        $r14 = interfaceinvoke r3.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $r17 = interfaceinvoke r6.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r16 = interfaceinvoke r6.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r18 = interfaceinvoke r6.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r15.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r14, $r17, $r16, $r18);

        r7 = $r15;

     label06:
        r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>("DSA", "BC");

        $r20 = virtualinvoke r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r7);

     label07:
        return $r20;

     label08:
        $r22 := @caughtexception;

        r25 = $r22;

        $r21 = new java.lang.RuntimeException;

        $r23 = virtualinvoke r25.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r21;

     label09:
        i1 = i1 + 1;

        goto label03;

     label10:
        $r12 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r12.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("DSA parameters cannot be inherited from previous certificate.");

        throw $r12;

        catch java.lang.Exception from label06 to label07 with label08;
    }

    protected static java.util.Collection findIssuerCerts(java.security.cert.X509Certificate, com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0, r24;
        com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters r1;
        com.android.org.bouncycastle.x509.X509CertStoreSelector r2, $r6;
        java.util.HashSet r3, $r7;
        java.io.IOException r4, $r21;
        java.util.ArrayList r5, $r10;
        javax.security.auth.x500.X500Principal $r8;
        byte[] $r9;
        java.util.List $r11, $r13, $r15;
        java.util.Collection $r12, $r14, $r16;
        boolean $z0;
        java.lang.Object $r17;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r18, $r19, $r20, r23;
        java.util.Iterator r22;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        $r6 = new com.android.org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r6.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        r2 = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r3 = $r7;

     label1:
        $r8 = virtualinvoke r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r9 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r2.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void setSubject(byte[])>($r9);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        r4 = $r21;

        $r20 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Subject criteria for certificate selector to find issuer certificate could not be set.", r4);

        throw $r20;

     label4:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r5 = $r10;

        $r11 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getCertStores()>();

        $r12 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r2, $r11);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r12);

        $r13 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

        $r14 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r2, $r13);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r14);

        $r15 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getAdditionalStores()>();

        $r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r2, $r15);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r16);

        r22 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        r23 = $r19;

        $r18 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r18.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer certificate cannot be searched.", r23);

        throw $r18;

     label7:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r17 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.security.cert.X509Certificate) $r17;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r24);

        goto label7;

     label8:
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label4 to label5 with label6;
    }

    protected static void verifyX509Certificate(java.security.cert.X509Certificate, java.security.PublicKey, java.lang.String) throws java.security.GeneralSecurityException
    {
        java.security.cert.X509Certificate r0;
        java.security.PublicKey r1;
        java.lang.String r2;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.security.PublicKey;

        r2 := @parameter2: java.lang.String;

        if r2 != null goto label1;

        virtualinvoke r0.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>(r1, r2);

     label2:
        return;
    }

    static void <clinit>()
    {
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r0;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24, $r26;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.String[] $r28;

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: int CRL_SIGN> = 6;

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: int KEY_CERT_SIGN> = 5;

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = new com.android.org.bouncycastle.jce.provider.PKIXCRLUtil;

        specialinvoke $r0.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: void <init>()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL> = $r0;

        $r1 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier certificatePolicies>;

        $r2 = virtualinvoke $r1.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES> = $r2;

        $r3 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier basicConstraints>;

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String BASIC_CONSTRAINTS> = $r4;

        $r5 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier policyMappings>;

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_MAPPINGS> = $r6;

        $r7 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier subjectAlternativeName>;

        $r8 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r8;

        $r9 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier nameConstraints>;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String NAME_CONSTRAINTS> = $r10;

        $r11 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier keyUsage>;

        $r12 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String KEY_USAGE> = $r12;

        $r13 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier inhibitAnyPolicy>;

        $r14 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String INHIBIT_ANY_POLICY> = $r14;

        $r15 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier issuingDistributionPoint>;

        $r17 = virtualinvoke $r15.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r17;

        $r16 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier deltaCRLIndicator>;

        $r19 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String DELTA_CRL_INDICATOR> = $r19;

        $r18 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier policyConstraints>;

        $r21 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_CONSTRAINTS> = $r21;

        $r20 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier freshestCRL>;

        $r23 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String FRESHEST_CRL> = $r23;

        $r22 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier cRLDistributionPoints>;

        $r25 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r25;

        $r24 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier authorityKeyIdentifier>;

        $r27 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER> = $r27;

        $r26 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier cRLNumber>;

        $r29 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER> = $r29;

        $r28 = newarray (java.lang.String)[11];

        $r28[0] = "unspecified";

        $r28[1] = "keyCompromise";

        $r28[2] = "cACompromise";

        $r28[3] = "affiliationChanged";

        $r28[4] = "superseded";

        $r28[5] = "cessationOfOperation";

        $r28[6] = "certificateHold";

        $r28[7] = "unknown";

        $r28[8] = "removeFromCRL";

        $r28[9] = "privilegeWithdrawn";

        $r28[10] = "aACompromise";

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String[] crlReasons> = $r28;

        return;
    }
}
