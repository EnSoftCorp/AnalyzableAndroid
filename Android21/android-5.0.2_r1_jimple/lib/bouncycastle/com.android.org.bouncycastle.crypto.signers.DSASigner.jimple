public class com.android.org.bouncycastle.crypto.signers.DSASigner extends java.lang.Object implements com.android.org.bouncycastle.crypto.DSA
{
    private final com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator;
    private com.android.org.bouncycastle.crypto.params.DSAKeyParameters key;
    private java.security.SecureRandom random;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.signers.DSASigner r0;
        com.android.org.bouncycastle.crypto.signers.RandomDSAKCalculator $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.DSASigner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.org.bouncycastle.crypto.signers.RandomDSAKCalculator;

        specialinvoke $r1.<com.android.org.bouncycastle.crypto.signers.RandomDSAKCalculator: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator> = $r1;

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.signers.DSAKCalculator)
    {
        com.android.org.bouncycastle.crypto.signers.DSASigner r0;
        com.android.org.bouncycastle.crypto.signers.DSAKCalculator r1;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.DSASigner;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.signers.DSAKCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator> = r1;

        return;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.signers.DSASigner r0;
        boolean z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r7;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom r2;
        com.android.org.bouncycastle.crypto.params.DSAPublicKeyParameters $r3;
        java.security.SecureRandom $r4, $r6;
        com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters $r5, $r8;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.DSASigner;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        if z0 == 0 goto label2;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r2 = (com.android.org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: java.security.SecureRandom random> = $r6;

        $r7 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r8 = (com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters) $r7;

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key> = $r8;

        goto label3;

     label1:
        $r4 = new java.security.SecureRandom;

        specialinvoke $r4.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: java.security.SecureRandom random> = $r4;

        $r5 = (com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key> = $r5;

        goto label3;

     label2:
        $r3 = (com.android.org.bouncycastle.crypto.params.DSAPublicKeyParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key> = $r3;

     label3:
        return;
    }

    public java.math.BigInteger[] generateSignature(byte[])
    {
        com.android.org.bouncycastle.crypto.signers.DSASigner r0;
        byte[] r1;
        com.android.org.bouncycastle.crypto.params.DSAParameters r2;
        java.math.BigInteger r3, r4, r5, r6, $r9, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r27, $r28, $r29, r32;
        java.math.BigInteger[] r7;
        com.android.org.bouncycastle.crypto.params.DSAKeyParameters $r8, $r22, $r30;
        com.android.org.bouncycastle.crypto.signers.DSAKCalculator $r10, $r11, $r13, $r26;
        boolean $z0;
        java.security.SecureRandom $r14;
        com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters $r21, $r31;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.DSASigner;

        r1 := @parameter0: byte[];

        $r8 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key>;

        r2 = virtualinvoke $r8.<com.android.org.bouncycastle.crypto.params.DSAKeyParameters: com.android.org.bouncycastle.crypto.params.DSAParameters getParameters()>();

        $r9 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r3 = specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: java.math.BigInteger calculateE(java.math.BigInteger,byte[])>($r9, r1);

        $r10 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator>;

        $z0 = interfaceinvoke $r10.<com.android.org.bouncycastle.crypto.signers.DSAKCalculator: boolean isDeterministic()>();

        if $z0 == 0 goto label1;

        $r26 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator>;

        $r27 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r30 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key>;

        $r31 = (com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters) $r30;

        $r29 = virtualinvoke $r31.<com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters: java.math.BigInteger getX()>();

        interfaceinvoke $r26.<com.android.org.bouncycastle.crypto.signers.DSAKCalculator: void init(java.math.BigInteger,java.math.BigInteger,byte[])>($r27, $r29, r1);

        goto label2;

     label1:
        $r11 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator>;

        $r12 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r14 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: java.security.SecureRandom random>;

        interfaceinvoke $r11.<com.android.org.bouncycastle.crypto.signers.DSAKCalculator: void init(java.math.BigInteger,java.security.SecureRandom)>($r12, $r14);

     label2:
        $r13 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.signers.DSAKCalculator kCalculator>;

        r4 = interfaceinvoke $r13.<com.android.org.bouncycastle.crypto.signers.DSAKCalculator: java.math.BigInteger nextK()>();

        $r15 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getG()>();

        $r17 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $r16 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r4, $r17);

        $r18 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r5 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r18);

        $r20 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r19 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r20);

        $r22 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key>;

        $r21 = (com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters) $r22;

        $r24 = virtualinvoke $r21.<com.android.org.bouncycastle.crypto.params.DSAPrivateKeyParameters: java.math.BigInteger getX()>();

        $r23 = virtualinvoke $r24.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r5);

        $r25 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r23);

        r32 = virtualinvoke $r19.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r25);

        $r28 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r6 = virtualinvoke r32.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r28);

        r7 = newarray (java.math.BigInteger)[2];

        r7[0] = r5;

        r7[1] = r6;

        return r7;
    }

    public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)
    {
        com.android.org.bouncycastle.crypto.signers.DSASigner r0;
        byte[] r1;
        java.math.BigInteger r2, r3, r5, r6, r7, r8, r9, r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28, $r29, r30, r31;
        com.android.org.bouncycastle.crypto.params.DSAParameters r4;
        com.android.org.bouncycastle.crypto.params.DSAKeyParameters $r11, $r24;
        int $i0, $i1, $i2, $i3;
        com.android.org.bouncycastle.crypto.params.DSAPublicKeyParameters $r22;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.DSASigner;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        $r11 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key>;

        r4 = virtualinvoke $r11.<com.android.org.bouncycastle.crypto.params.DSAKeyParameters: com.android.org.bouncycastle.crypto.params.DSAParameters getParameters()>();

        $r12 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r5 = specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: java.math.BigInteger calculateE(java.math.BigInteger,byte[])>($r12, r1);

        r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        $i0 = virtualinvoke r6.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2);

        if $i0 >= 0 goto label1;

        $r13 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $i2 = virtualinvoke $r13.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2);

        if $i2 > 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke r6.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r3);

        if $i1 >= 0 goto label3;

        $r14 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $i3 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r3);

        if $i3 > 0 goto label4;

     label3:
        return 0;

     label4:
        $r15 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r7 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r15);

        $r17 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r7);

        $r16 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r8 = virtualinvoke $r17.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r16);

        $r18 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r7);

        $r19 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r9 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r19);

        $r21 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getG()>();

        $r20 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        r30 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r8, $r20);

        $r24 = r0.<com.android.org.bouncycastle.crypto.signers.DSASigner: com.android.org.bouncycastle.crypto.params.DSAKeyParameters key>;

        $r22 = (com.android.org.bouncycastle.crypto.params.DSAPublicKeyParameters) $r24;

        $r23 = virtualinvoke $r22.<com.android.org.bouncycastle.crypto.params.DSAPublicKeyParameters: java.math.BigInteger getY()>();

        $r27 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        r31 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r9, $r27);

        $r25 = virtualinvoke r30.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r31);

        $r26 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $r28 = virtualinvoke $r25.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r26);

        $r29 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        r10 = virtualinvoke $r28.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r29);

        $z0 = virtualinvoke r10.<java.math.BigInteger: boolean equals(java.lang.Object)>(r2);

        return $z0;
    }

    private java.math.BigInteger calculateE(java.math.BigInteger, byte[])
    {
        com.android.org.bouncycastle.crypto.signers.DSASigner r0;
        java.math.BigInteger r1, $r4, $r5;
        byte[] r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.DSASigner;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: byte[];

        $i0 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

        $i1 = lengthof r2;

        $i2 = $i1 * 8;

        if $i0 < $i2 goto label1;

        $r5 = new java.math.BigInteger;

        specialinvoke $r5.<java.math.BigInteger: void <init>(int,byte[])>(1, r2);

        return $r5;

     label1:
        $i3 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

        $i4 = $i3 / 8;

        r3 = newarray (byte)[$i4];

        $i5 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, 0, $i5);

        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        return $r4;
    }
}
