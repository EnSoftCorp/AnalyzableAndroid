public class com.android.soundrecorder.SoundRecorder extends android.app.Activity implements android.view.View$OnClickListener, com.android.soundrecorder.Recorder$OnStateChangedListener
{
    static final java.lang.String TAG;
    static final java.lang.String STATE_FILE_NAME;
    static final java.lang.String RECORDER_STATE_KEY;
    static final java.lang.String SAMPLE_INTERRUPTED_KEY;
    static final java.lang.String MAX_FILE_SIZE_KEY;
    static final java.lang.String AUDIO_3GPP;
    static final java.lang.String AUDIO_AMR;
    static final java.lang.String AUDIO_ANY;
    static final java.lang.String ANY_ANY;
    static final int BITRATE_AMR;
    static final int BITRATE_3GPP;
    android.os.PowerManager$WakeLock mWakeLock;
    java.lang.String mRequestedType;
    com.android.soundrecorder.Recorder mRecorder;
    boolean mSampleInterrupted;
    java.lang.String mErrorUiMessage;
    long mMaxFileSize;
    com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator;
    java.lang.String mTimerFormat;
    final android.os.Handler mHandler;
    java.lang.Runnable mUpdateTimer;
    android.widget.ImageButton mRecordButton;
    android.widget.ImageButton mPlayButton;
    android.widget.ImageButton mStopButton;
    android.widget.ImageView mStateLED;
    android.widget.TextView mStateMessage1;
    android.widget.TextView mStateMessage2;
    android.widget.ProgressBar mStateProgressBar;
    android.widget.TextView mTimerView;
    android.widget.LinearLayout mExitButtons;
    android.widget.Button mAcceptButton;
    android.widget.Button mDiscardButton;
    com.android.soundrecorder.VUMeter mVUMeter;
    private android.content.BroadcastReceiver mSDCardMountEventReceiver;

    public void <init>()
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.os.Handler $r1;
        com.android.soundrecorder.SoundRecorder$1 $r2;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType> = "audio/*";

        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = 0;

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = null;

        r0.<com.android.soundrecorder.SoundRecorder: long mMaxFileSize> = -1L;

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        r0.<com.android.soundrecorder.SoundRecorder: android.os.Handler mHandler> = $r1;

        $r2 = new com.android.soundrecorder.SoundRecorder$1;

        specialinvoke $r2.<com.android.soundrecorder.SoundRecorder$1: void <init>(com.android.soundrecorder.SoundRecorder)>(r0);

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.Runnable mUpdateTimer> = $r2;

        r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver> = null;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.os.Bundle r1, r20;
        android.content.Intent r2;
        java.lang.String r3, $r5, $r6, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.soundrecorder.Recorder $r7, $r8, $r12;
        com.android.soundrecorder.RemainingTimeCalculator $r9;
        java.lang.Object $r10;
        android.os.PowerManager$WakeLock $r11;
        long $l0, $l1;
        android.os.PowerManager r19;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.Intent getIntent()>();

        if r2 == null goto label4;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getType()>();

        $r15 = "audio/amr";

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 != 0 goto label1;

        $r16 = "audio/3gpp";

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 != 0 goto label1;

        $r17 = "audio/*";

        $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 != 0 goto label1;

        $r18 = "*/*";

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z6 == 0 goto label2;

     label1:
        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType> = r3;

        goto label3;

     label2:
        if r3 == null goto label3;

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setResult(int)>(0);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void finish()>();

        return;

     label3:
        $l1 = virtualinvoke r2.<android.content.Intent: long getLongExtra(java.lang.String,long)>("android.provider.MediaStore.extra.MAX_BYTES", -1L);

        r0.<com.android.soundrecorder.SoundRecorder: long mMaxFileSize> = $l1;

     label4:
        $r6 = "audio/*";

        $r5 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

        $r13 = "*/*";

        $r14 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label6;

     label5:
        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType> = "audio/3gpp";

     label6:
        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setContentView(int)>(2130903040);

        $r7 = new com.android.soundrecorder.Recorder;

        specialinvoke $r7.<com.android.soundrecorder.Recorder: void <init>()>();

        r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder> = $r7;

        $r8 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r8.<com.android.soundrecorder.Recorder: void setOnStateChangedListener(com.android.soundrecorder.Recorder$OnStateChangedListener)>(r0);

        $r9 = new com.android.soundrecorder.RemainingTimeCalculator;

        specialinvoke $r9.<com.android.soundrecorder.RemainingTimeCalculator: void <init>()>();

        r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator> = $r9;

        $r10 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: java.lang.Object getSystemService(java.lang.String)>("power");

        r19 = (android.os.PowerManager) $r10;

        $r11 = virtualinvoke r19.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(6, "SoundRecorder");

        r0.<com.android.soundrecorder.SoundRecorder: android.os.PowerManager$WakeLock mWakeLock> = $r11;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void initResourceRefs()>();

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setResult(int)>(0);

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void registerExternalStorageListener()>();

        if r1 == null goto label7;

        r20 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("recorder_state");

        if r20 == null goto label7;

        $r12 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r12.<com.android.soundrecorder.Recorder: void restoreState(android.os.Bundle)>(r20);

        $z1 = virtualinvoke r20.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("sample_interrupted", 0);

        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = $z1;

        $l0 = virtualinvoke r20.<android.os.Bundle: long getLong(java.lang.String,long)>("max_file_size", -1L);

        r0.<com.android.soundrecorder.SoundRecorder: long mMaxFileSize> = $l0;

     label7:
        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateUi()>();

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setContentView(int)>(2130903040);

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void initResourceRefs()>();

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateUi()>();

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.os.Bundle r1, r2, $r4;
        com.android.soundrecorder.Recorder $r3, $r5;
        int $i0;
        boolean $z0;
        long $l1;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r3 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i0 = virtualinvoke $r3.<com.android.soundrecorder.Recorder: int sampleLength()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r2 = $r4;

        $r5 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r5.<com.android.soundrecorder.Recorder: void saveState(android.os.Bundle)>(r2);

        $z0 = r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted>;

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("sample_interrupted", $z0);

        $l1 = r0.<com.android.soundrecorder.SoundRecorder: long mMaxFileSize>;

        virtualinvoke r2.<android.os.Bundle: void putLong(java.lang.String,long)>("max_file_size", $l1);

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("recorder_state", r2);

        return;
    }

    private void initResourceRefs()
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.view.View $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22;
        android.widget.ImageButton $r2, $r4, $r6, $r24, $r26, $r27;
        android.widget.ImageView $r8;
        android.widget.TextView $r10, $r12, $r17;
        android.widget.ProgressBar $r14;
        android.widget.LinearLayout $r19;
        android.widget.Button $r21, $r23, $r28, $r29;
        com.android.soundrecorder.VUMeter $r25, $r33;
        java.lang.String $r30;
        android.content.res.Resources $r31;
        com.android.soundrecorder.Recorder $r32;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r1 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099659);

        $r2 = (android.widget.ImageButton) $r1;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton> = $r2;

        $r3 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099660);

        $r4 = (android.widget.ImageButton) $r3;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton> = $r4;

        $r5 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099661);

        $r6 = (android.widget.ImageButton) $r5;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton> = $r6;

        $r7 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099651);

        $r8 = (android.widget.ImageView) $r7;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED> = $r8;

        $r9 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099653);

        $r10 = (android.widget.TextView) $r9;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1> = $r10;

        $r11 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099652);

        $r12 = (android.widget.TextView) $r11;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2> = $r12;

        $r13 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099654);

        $r14 = (android.widget.ProgressBar) $r13;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.ProgressBar mStateProgressBar> = $r14;

        $r15 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099649);

        $r17 = (android.widget.TextView) $r15;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mTimerView> = $r17;

        $r16 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099655);

        $r19 = (android.widget.LinearLayout) $r16;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.LinearLayout mExitButtons> = $r19;

        $r18 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099657);

        $r21 = (android.widget.Button) $r18;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.Button mAcceptButton> = $r21;

        $r20 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099656);

        $r23 = (android.widget.Button) $r20;

        r0.<com.android.soundrecorder.SoundRecorder: android.widget.Button mDiscardButton> = $r23;

        $r22 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.view.View findViewById(int)>(2131099658);

        $r25 = (com.android.soundrecorder.VUMeter) $r22;

        r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter> = $r25;

        $r24 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r24.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r27 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r27.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r26 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r26.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r29 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.Button mAcceptButton>;

        virtualinvoke $r29.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r28 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.Button mDiscardButton>;

        virtualinvoke $r28.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r31 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r30 = virtualinvoke $r31.<android.content.res.Resources: java.lang.String getString(int)>(2130968590);

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mTimerFormat> = $r30;

        $r33 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter>;

        $r32 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r33.<com.android.soundrecorder.VUMeter: void setRecorder(com.android.soundrecorder.Recorder)>($r32);

        return;
    }

    private void stopAudioPlayback()
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.media.AudioManager r1;
        java.lang.Object $r2;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r2 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: java.lang.Object getSystemService(java.lang.String)>("audio");

        r1 = (android.media.AudioManager) $r2;

        virtualinvoke r1.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>(null, 3, 1);

        return;
    }

    public void onClick(android.view.View)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.view.View r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        com.android.soundrecorder.RemainingTimeCalculator $r2, $r4, $r11, $r12, $r16;
        java.lang.String $r3, $r5, $r6, $r7, $r8, $r17, $r19;
        java.lang.IllegalArgumentException $r9;
        com.android.soundrecorder.Recorder $r10, $r13, $r15, $r21, $r22, $r23, $r24;
        byte $b1;
        long $l2, $l3;
        java.io.File $r14;
        android.content.res.Resources $r18, $r20;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r1.<android.view.View: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<android.view.View: int getId()>();

        tableswitch($i0)
        {
            case 2131099656: goto label11;
            case 2131099657: goto label10;
            case 2131099658: goto label12;
            case 2131099659: goto label02;
            case 2131099660: goto label08;
            case 2131099661: goto label09;
            default: goto label12;
        };

     label02:
        $r2 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        virtualinvoke $r2.<com.android.soundrecorder.RemainingTimeCalculator: void reset()>();

        $r3 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z1 != 0 goto label03;

        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = 1;

        $r20 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r19 = virtualinvoke $r20.<android.content.res.Resources: java.lang.String getString(int)>(2130968584);

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = $r19;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateUi()>();

        goto label12;

     label03:
        $r4 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        $z2 = virtualinvoke $r4.<com.android.soundrecorder.RemainingTimeCalculator: boolean diskSpaceAvailable()>();

        if $z2 != 0 goto label04;

        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = 1;

        $r18 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r18.<android.content.res.Resources: java.lang.String getString(int)>(2130968582);

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = $r17;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateUi()>();

        goto label12;

     label04:
        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void stopAudioPlayback()>();

        $r6 = "audio/amr";

        $r5 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType>;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label05;

        $r16 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        virtualinvoke $r16.<com.android.soundrecorder.RemainingTimeCalculator: void setBitRate(int)>(5900);

        $r15 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r15.<com.android.soundrecorder.Recorder: void startRecording(int,java.lang.String,android.content.Context)>(3, ".amr", r0);

        goto label07;

     label05:
        $r8 = "audio/3gpp";

        $r7 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType>;

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label06;

        $r11 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        virtualinvoke $r11.<com.android.soundrecorder.RemainingTimeCalculator: void setBitRate(int)>(5900);

        $r10 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r10.<com.android.soundrecorder.Recorder: void startRecording(int,java.lang.String,android.content.Context)>(1, ".3gpp", r0);

        goto label07;

     label06:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid output file type requested");

        throw $r9;

     label07:
        $l2 = r0.<com.android.soundrecorder.SoundRecorder: long mMaxFileSize>;

        $b1 = $l2 cmp -1L;

        if $b1 == 0 goto label12;

        $r12 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        $r13 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $r14 = virtualinvoke $r13.<com.android.soundrecorder.Recorder: java.io.File sampleFile()>();

        $l3 = r0.<com.android.soundrecorder.SoundRecorder: long mMaxFileSize>;

        virtualinvoke $r12.<com.android.soundrecorder.RemainingTimeCalculator: void setFileSizeLimit(java.io.File,long)>($r14, $l3);

        goto label12;

     label08:
        $r21 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r21.<com.android.soundrecorder.Recorder: void startPlayback()>();

        goto label12;

     label09:
        $r22 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r22.<com.android.soundrecorder.Recorder: void stop()>();

        goto label12;

     label10:
        $r23 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r23.<com.android.soundrecorder.Recorder: void stop()>();

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void saveSample()>();

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void finish()>();

        goto label12;

     label11:
        $r24 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r24.<com.android.soundrecorder.Recorder: void delete()>();

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void finish()>();

     label12:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.soundrecorder.SoundRecorder r0;
        int i0, $i1, $i2;
        android.view.KeyEvent r1;
        boolean $z0;
        com.android.soundrecorder.Recorder $r2, $r3, $r4, $r5;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label6;

        $r2 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i1 = virtualinvoke $r2.<com.android.soundrecorder.Recorder: int state()>();

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            default: goto label5;
        };

     label1:
        $r3 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i2 = virtualinvoke $r3.<com.android.soundrecorder.Recorder: int sampleLength()>();

        if $i2 <= 0 goto label2;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void saveSample()>();

     label2:
        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void finish()>();

        goto label5;

     label3:
        $r4 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r4.<com.android.soundrecorder.Recorder: void stop()>();

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void saveSample()>();

        goto label5;

     label4:
        $r5 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r5.<com.android.soundrecorder.Recorder: void clear()>();

     label5:
        return 1;

     label6:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public void onStop()
    {
        com.android.soundrecorder.SoundRecorder r0;
        com.android.soundrecorder.Recorder $r1;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r1 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r1.<com.android.soundrecorder.Recorder: void stop()>();

        specialinvoke r0.<android.app.Activity: void onStop()>();

        return;
    }

    protected void onPause()
    {
        com.android.soundrecorder.SoundRecorder r0;
        com.android.soundrecorder.Recorder $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r1 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i0 = virtualinvoke $r1.<com.android.soundrecorder.Recorder: int state()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = $z0;

        $r2 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r2.<com.android.soundrecorder.Recorder: void stop()>();

        specialinvoke r0.<android.app.Activity: void onPause()>();

        return;
    }

    private void saveSample()
    {
        com.android.soundrecorder.SoundRecorder r0;
        com.android.soundrecorder.Recorder $r1, $r2;
        int $i0;
        java.io.File $r3;
        android.content.Intent $r4, $r5;
        java.lang.UnsupportedOperationException $r6;
        android.net.Uri r7;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r1 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i0 = virtualinvoke $r1.<com.android.soundrecorder.Recorder: int sampleLength()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $r3 = virtualinvoke $r2.<com.android.soundrecorder.Recorder: java.io.File sampleFile()>();

        r7 = specialinvoke r0.<com.android.soundrecorder.SoundRecorder: android.net.Uri addToMediaDB(java.io.File)>($r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        return;

     label4:
        if r7 != null goto label5;

        return;

     label5:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>()>();

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent setData(android.net.Uri)>(r7);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setResult(int,android.content.Intent)>(-1, $r5);

        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public void onDestroy()
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.BroadcastReceiver $r1, $r2;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r1 = r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver>;

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver> = null;

     label1:
        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;
    }

    private void registerExternalStorageListener()
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.IntentFilter r1, $r4;
        android.content.BroadcastReceiver $r2, $r5;
        com.android.soundrecorder.SoundRecorder$2 $r3;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r2 = r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver>;

        if $r2 != null goto label1;

        $r3 = new com.android.soundrecorder.SoundRecorder$2;

        specialinvoke $r3.<com.android.soundrecorder.SoundRecorder$2: void <init>(com.android.soundrecorder.SoundRecorder)>(r0);

        r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver> = $r3;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MEDIA_EJECT");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.MEDIA_MOUNTED");

        virtualinvoke r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("file");

        $r5 = r0.<com.android.soundrecorder.SoundRecorder: android.content.BroadcastReceiver mSDCardMountEventReceiver>;

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r5, r1);

     label1:
        return;
    }

    private android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.content.ContentResolver r6;
        android.database.Cursor $r7;
        java.lang.UnsupportedOperationException $r8;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

     label1:
        r6 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.ContentResolver getContentResolver()>();

        if r6 != null goto label3;

     label2:
        return null;

     label3:
        $r7 = virtualinvoke r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        return null;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label5;
        catch java.lang.UnsupportedOperationException from label3 to label4 with label5;
    }

    private void addToPlaylist(android.content.ContentResolver, int, long)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.ContentResolver r1;
        int i0, i2, $i3;
        long l1;
        java.lang.String[] r2, $r6;
        android.net.Uri r3;
        android.database.Cursor r4;
        android.content.ContentValues r5, $r7;
        java.lang.Integer $r8, $r10;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "count(*)";

        r2 = $r6;

        r3 = staticinvoke <android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>("external", l1);

        r4 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r3, r2, null, null, null);

        interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        i2 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(0);

        interfaceinvoke r4.<android.database.Cursor: void close()>();

        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        r5 = $r7;

        $i3 = i2 + i0;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("play_order", $r8);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("audio_id", $r10);

        virtualinvoke r1.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r3, r5);

        return;
    }

    private int getPlaylistId(android.content.res.Resources)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.res.Resources r1;
        android.net.Uri r2;
        java.lang.String[] r3, r5, $r7, $r8;
        android.database.Cursor r6;
        int i0;
        java.lang.String $r9;
        boolean $z1;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.content.res.Resources;

        r2 = staticinvoke <android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>("external");

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "_id";

        r3 = $r7;

        $r8 = newarray (java.lang.String)[1];

        $r9 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968594);

        $r8[0] = $r9;

        r5 = $r8;

        r6 = specialinvoke r0.<com.android.soundrecorder.SoundRecorder: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, r3, "name=?", r5, null);

        if r6 != null goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SoundRecorder", "query returns null");

     label1:
        i0 = -1;

        if r6 == null goto label2;

        interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        $z1 = interfaceinvoke r6.<android.database.Cursor: boolean isAfterLast()>();

        if $z1 != 0 goto label2;

        i0 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(0);

     label2:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

        return i0;
    }

    private android.net.Uri createPlaylist(android.content.res.Resources, android.content.ContentResolver)
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.res.Resources r1;
        android.content.ContentResolver r2;
        android.content.ContentValues r3, $r5;
        android.net.Uri r4, $r7;
        java.lang.String $r6;
        android.app.AlertDialog$Builder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.ContentResolver;

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r3 = $r5;

        $r6 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968594);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r6);

        $r7 = staticinvoke <android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>("external");

        r4 = virtualinvoke r2.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r7, r3);

        if r4 != null goto label1;

        $r8 = new android.app.AlertDialog$Builder;

        specialinvoke $r8.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r9 = virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2130968576);

        $r10 = virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2130968597);

        $r11 = virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2130968589, null);

        $r12 = virtualinvoke $r11.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

        virtualinvoke $r12.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

     label1:
        return r4;
    }

    private android.net.Uri addToMediaDB(java.io.File)
    {
        com.android.soundrecorder.SoundRecorder r0;
        java.io.File r1;
        android.content.res.Resources r2;
        android.content.ContentValues r3, $r10;
        long l0, l1, l2, $l4, $l7, $l8, $l14;
        java.util.Date r4, $r11;
        java.text.SimpleDateFormat r5, $r13;
        java.lang.String r6, $r12, $r15, $r19, $r20, $r22, $r24, $r26, $r29, $r32;
        android.content.ContentResolver r7;
        android.net.Uri r8, r9;
        int i3, $i5, $i6, $i9, $i12, $i13;
        com.android.soundrecorder.Recorder $r14;
        java.lang.Integer $r16, $r18, $r31;
        java.lang.Long $r17;
        java.lang.StringBuilder $r21, $r23, $r25, $r27, $r28, $r30;
        android.app.AlertDialog$Builder $r33, $r34, $r35, $r36, $r39;
        android.content.Intent $r37;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        r3 = $r10;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = virtualinvoke r1.<java.io.File: long lastModified()>();

        $r11 = new java.util.Date;

        specialinvoke $r11.<java.util.Date: void <init>(long)>(l0);

        r4 = $r11;

        $r13 = new java.text.SimpleDateFormat;

        $r12 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(2130968591);

        specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r12);

        r5 = $r13;

        r6 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4);

        $r14 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i5 = virtualinvoke $r14.<com.android.soundrecorder.Recorder: int sampleLength()>();

        $l4 = (long) $i5;

        l2 = $l4 * 1000L;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("is_music", "0");

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", r6);

        $r15 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_data", $r15);

        $l7 = l0 / 1000L;

        $i6 = (int) $l7;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("date_added", $r16);

        $l8 = l1 / 1000L;

        $i9 = (int) $l8;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("date_modified", $r18);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("duration", $r17);

        $r20 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mRequestedType>;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", $r20);

        $r19 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(2130968592);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("artist", $r19);

        $r22 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(2130968593);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("album", $r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inserting audio record: ");

        $r26 = virtualinvoke r3.<android.content.ContentValues: java.lang.String toString()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SoundRecorder", $r24);

        r7 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.ContentResolver getContentResolver()>();

        r8 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentURI: ");

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SoundRecorder", $r29);

        r9 = virtualinvoke r7.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r8, r3);

        if r9 != null goto label1;

        $r33 = new android.app.AlertDialog$Builder;

        specialinvoke $r33.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r34 = virtualinvoke $r33.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2130968576);

        $r35 = virtualinvoke $r34.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2130968597);

        $r36 = virtualinvoke $r35.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2130968589, null);

        $r39 = virtualinvoke $r36.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

        virtualinvoke $r39.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

        return null;

     label1:
        $i12 = specialinvoke r0.<com.android.soundrecorder.SoundRecorder: int getPlaylistId(android.content.res.Resources)>(r2);

        if $i12 != -1 goto label2;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: android.net.Uri createPlaylist(android.content.res.Resources,android.content.ContentResolver)>(r2, r7);

     label2:
        $r32 = virtualinvoke r9.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r32);

        i3 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $i13 = specialinvoke r0.<com.android.soundrecorder.SoundRecorder: int getPlaylistId(android.content.res.Resources)>(r2);

        $l14 = (long) $i13;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void addToPlaylist(android.content.ContentResolver,int,long)>(r7, i3, $l14);

        $r37 = new android.content.Intent;

        specialinvoke $r37.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.MEDIA_SCANNER_SCAN_FILE", r9);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void sendBroadcast(android.content.Intent)>($r37);

        return r9;
    }

    private void updateTimerView()
    {
        com.android.soundrecorder.SoundRecorder r0;
        int i0, $i2, $i7, $i8, $i11;
        boolean z0, $z2;
        long l1, $l3, $l4, $l5, $l6, $l9, $l10;
        java.lang.String r2, $r6;
        com.android.soundrecorder.Recorder $r3, $r4, $r12, $r14;
        java.lang.Object[] $r5;
        java.lang.Long $r7, $r8;
        android.widget.TextView $r9;
        android.os.Handler $r10;
        java.lang.Runnable $r11;
        android.widget.ProgressBar $r13;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r3 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        i0 = virtualinvoke $r3.<com.android.soundrecorder.Recorder: int state()>();

        if i0 == 1 goto label1;

        if i0 != 2 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        if z0 == 0 goto label4;

        $r14 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i11 = virtualinvoke $r14.<com.android.soundrecorder.Recorder: int progress()>();

        $l10 = (long) $i11;

        goto label5;

     label4:
        $r4 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i2 = virtualinvoke $r4.<com.android.soundrecorder.Recorder: int sampleLength()>();

        $l10 = (long) $i2;

     label5:
        l1 = $l10;

        $r6 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mTimerFormat>;

        $r5 = newarray (java.lang.Object)[2];

        $l3 = l1 / 60L;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r5[0] = $r7;

        $l4 = l1 % 60L;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r5[1] = $r8;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r6, $r5);

        $r9 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mTimerView>;

        virtualinvoke $r9.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        if i0 != 2 goto label6;

        $r13 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ProgressBar mStateProgressBar>;

        $l5 = 100L * l1;

        $r12 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i7 = virtualinvoke $r12.<com.android.soundrecorder.Recorder: int sampleLength()>();

        $l6 = (long) $i7;

        $l9 = $l5 / $l6;

        $i8 = (int) $l9;

        virtualinvoke $r13.<android.widget.ProgressBar: void setProgress(int)>($i8);

        goto label7;

     label6:
        if i0 != 1 goto label7;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateTimeRemaining()>();

     label7:
        if z0 == 0 goto label8;

        $r10 = r0.<com.android.soundrecorder.SoundRecorder: android.os.Handler mHandler>;

        $r11 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.Runnable mUpdateTimer>;

        virtualinvoke $r10.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r11, 1000L);

     label8:
        return;
    }

    private void updateTimeRemaining()
    {
        com.android.soundrecorder.SoundRecorder r0;
        long l0, $l5, $l6;
        int i1;
        java.lang.String r1, $r4, $r7, $r11, $r15;
        com.android.soundrecorder.RemainingTimeCalculator $r2, $r10;
        byte $b2, $b3, $b4;
        android.widget.TextView $r3;
        java.lang.Object[] $r5, $r8;
        java.lang.Long $r6, $r9;
        android.content.res.Resources $r12, $r13, r16;
        com.android.soundrecorder.Recorder $r14;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        $r2 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        l0 = virtualinvoke $r2.<com.android.soundrecorder.RemainingTimeCalculator: long timeRemaining()>();

        $b2 = l0 cmp 0L;

        if $b2 > 0 goto label5;

        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = 1;

        $r10 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.RemainingTimeCalculator mRemainingTimeCalculator>;

        i1 = virtualinvoke $r10.<com.android.soundrecorder.RemainingTimeCalculator: int currentLowerLimit()>();

        lookupswitch(i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $r12 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2130968582);

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = $r11;

        goto label4;

     label2:
        $r13 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r15 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getString(int)>(2130968583);

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = $r15;

        goto label4;

     label3:
        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = null;

     label4:
        $r14 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        virtualinvoke $r14.<com.android.soundrecorder.Recorder: void stop()>();

        return;

     label5:
        r16 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        r1 = "";

        $b3 = l0 cmp 60L;

        if $b3 >= 0 goto label6;

        $r7 = virtualinvoke r16.<android.content.res.Resources: java.lang.String getString(int)>(2130968586);

        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[0] = $r9;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);

        goto label7;

     label6:
        $b4 = l0 cmp 540L;

        if $b4 >= 0 goto label7;

        $r4 = virtualinvoke r16.<android.content.res.Resources: java.lang.String getString(int)>(2130968585);

        $r5 = newarray (java.lang.Object)[1];

        $l5 = l0 / 60L;

        $l6 = $l5 + 1L;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r5[0] = $r6;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

     label7:
        $r3 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    private void updateUi()
    {
        com.android.soundrecorder.SoundRecorder r0;
        android.content.res.Resources r1;
        com.android.soundrecorder.Recorder $r2, $r3;
        int $i0, $i1;
        android.widget.ImageButton $r4, $r5, $r6, $r7, $r8, $r9, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r39, $r40, $r42, $r44, $r45, $r46, $r51, $r52, $r55, $r56, $r57, $r58;
        android.widget.TextView $r10, $r12, $r20, $r21, $r22, $r23, $r32, $r37, $r43, $r49, $r59, $r63, $r66;
        android.widget.ImageView $r11, $r24, $r33, $r50, $r64, $r65;
        com.android.soundrecorder.VUMeter $r13, $r19, $r35, $r47, $r62;
        android.widget.LinearLayout $r14, $r38, $r48, $r61;
        java.lang.String $r15, $r17, $r18, $r25, $r41, $r53, $r60, $r68;
        android.widget.ProgressBar $r16, $r36, $r54, $r67;
        boolean $z0;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        r1 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        $r2 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i0 = virtualinvoke $r2.<com.android.soundrecorder.Recorder: int state()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label7;
        };

     label1:
        $r3 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.Recorder mRecorder>;

        $i1 = virtualinvoke $r3.<com.android.soundrecorder.Recorder: int sampleLength()>();

        if $i1 != 0 goto label2;

        $r27 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r27.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r26 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r26.<android.widget.ImageButton: void setFocusable(boolean)>(1);

        $r30 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r30.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r31 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r31.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $r28 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r28.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r29 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r29.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $r34 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r34.<android.widget.ImageButton: boolean requestFocus()>();

        $r32 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        virtualinvoke $r32.<android.widget.TextView: void setVisibility(int)>(4);

        $r33 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED>;

        virtualinvoke $r33.<android.widget.ImageView: void setVisibility(int)>(4);

        $r37 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        virtualinvoke $r37.<android.widget.TextView: void setVisibility(int)>(4);

        $r38 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.LinearLayout mExitButtons>;

        virtualinvoke $r38.<android.widget.LinearLayout: void setVisibility(int)>(4);

        $r35 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter>;

        virtualinvoke $r35.<com.android.soundrecorder.VUMeter: void setVisibility(int)>(0);

        $r36 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ProgressBar mStateProgressBar>;

        virtualinvoke $r36.<android.widget.ProgressBar: void setVisibility(int)>(4);

        $r41 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968577);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setTitle(java.lang.CharSequence)>($r41);

        goto label3;

     label2:
        $r4 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r4.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r5 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r5.<android.widget.ImageButton: void setFocusable(boolean)>(1);

        $r6 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r6.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r7 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r7.<android.widget.ImageButton: void setFocusable(boolean)>(1);

        $r8 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r8.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r9 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r9.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $r10 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(4);

        $r11 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED>;

        virtualinvoke $r11.<android.widget.ImageView: void setVisibility(int)>(4);

        $r12 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        virtualinvoke $r12.<android.widget.TextView: void setVisibility(int)>(4);

        $r14 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.LinearLayout mExitButtons>;

        virtualinvoke $r14.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r13 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter>;

        virtualinvoke $r13.<com.android.soundrecorder.VUMeter: void setVisibility(int)>(4);

        $r16 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ProgressBar mStateProgressBar>;

        virtualinvoke $r16.<android.widget.ProgressBar: void setVisibility(int)>(4);

        $r15 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968578);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setTitle(java.lang.CharSequence)>($r15);

     label3:
        $z0 = r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted>;

        if $z0 == 0 goto label4;

        $r23 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        virtualinvoke $r23.<android.widget.TextView: void setVisibility(int)>(0);

        $r22 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        $r25 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968581);

        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r25);

        $r24 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED>;

        virtualinvoke $r24.<android.widget.ImageView: void setVisibility(int)>(4);

     label4:
        $r17 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage>;

        if $r17 == null goto label7;

        $r21 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        $r18 = r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage>;

        virtualinvoke $r21.<android.widget.TextView: void setText(java.lang.CharSequence)>($r18);

        $r20 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        virtualinvoke $r20.<android.widget.TextView: void setVisibility(int)>(0);

        goto label7;

     label5:
        $r52 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r52.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r51 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r51.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $r58 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r58.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r57 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r57.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $r56 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r56.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r55 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r55.<android.widget.ImageButton: void setFocusable(boolean)>(1);

        $r63 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        virtualinvoke $r63.<android.widget.TextView: void setVisibility(int)>(0);

        $r64 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED>;

        virtualinvoke $r64.<android.widget.ImageView: void setVisibility(int)>(0);

        $r65 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED>;

        virtualinvoke $r65.<android.widget.ImageView: void setImageResource(int)>(2130837508);

        $r66 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        virtualinvoke $r66.<android.widget.TextView: void setVisibility(int)>(0);

        $r59 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        $r60 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968580);

        virtualinvoke $r59.<android.widget.TextView: void setText(java.lang.CharSequence)>($r60);

        $r61 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.LinearLayout mExitButtons>;

        virtualinvoke $r61.<android.widget.LinearLayout: void setVisibility(int)>(4);

        $r62 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter>;

        virtualinvoke $r62.<com.android.soundrecorder.VUMeter: void setVisibility(int)>(0);

        $r67 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ProgressBar mStateProgressBar>;

        virtualinvoke $r67.<android.widget.ProgressBar: void setVisibility(int)>(4);

        $r68 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968577);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setTitle(java.lang.CharSequence)>($r68);

        goto label7;

     label6:
        $r42 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r42.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r39 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mRecordButton>;

        virtualinvoke $r39.<android.widget.ImageButton: void setFocusable(boolean)>(1);

        $r40 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r40.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r46 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mPlayButton>;

        virtualinvoke $r46.<android.widget.ImageButton: void setFocusable(boolean)>(0);

        $r45 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r45.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r44 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageButton mStopButton>;

        virtualinvoke $r44.<android.widget.ImageButton: void setFocusable(boolean)>(1);

        $r43 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage1>;

        virtualinvoke $r43.<android.widget.TextView: void setVisibility(int)>(4);

        $r50 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ImageView mStateLED>;

        virtualinvoke $r50.<android.widget.ImageView: void setVisibility(int)>(4);

        $r49 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.TextView mStateMessage2>;

        virtualinvoke $r49.<android.widget.TextView: void setVisibility(int)>(4);

        $r48 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.LinearLayout mExitButtons>;

        virtualinvoke $r48.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r47 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter>;

        virtualinvoke $r47.<com.android.soundrecorder.VUMeter: void setVisibility(int)>(4);

        $r54 = r0.<com.android.soundrecorder.SoundRecorder: android.widget.ProgressBar mStateProgressBar>;

        virtualinvoke $r54.<android.widget.ProgressBar: void setVisibility(int)>(0);

        $r53 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968579);

        virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: void setTitle(java.lang.CharSequence)>($r53);

     label7:
        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateTimerView()>();

        $r19 = r0.<com.android.soundrecorder.SoundRecorder: com.android.soundrecorder.VUMeter mVUMeter>;

        virtualinvoke $r19.<com.android.soundrecorder.VUMeter: void invalidate()>();

        return;
    }

    public void onStateChanged(int)
    {
        com.android.soundrecorder.SoundRecorder r0;
        int i0;
        android.os.PowerManager$WakeLock $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 != 1 goto label2;

     label1:
        r0.<com.android.soundrecorder.SoundRecorder: boolean mSampleInterrupted> = 0;

        r0.<com.android.soundrecorder.SoundRecorder: java.lang.String mErrorUiMessage> = null;

        $r1 = r0.<com.android.soundrecorder.SoundRecorder: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        goto label3;

     label2:
        $r2 = r0.<com.android.soundrecorder.SoundRecorder: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.soundrecorder.SoundRecorder: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

     label3:
        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateUi()>();

        return;
    }

    public void onError(int)
    {
        com.android.soundrecorder.SoundRecorder r0;
        int i0;
        android.content.res.Resources r1;
        java.lang.String r2;
        android.app.AlertDialog$Builder $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.soundrecorder.SoundRecorder;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.soundrecorder.SoundRecorder: android.content.res.Resources getResources()>();

        r2 = null;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            default: goto label3;
        };

     label1:
        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968595);

        goto label3;

     label2:
        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(2130968596);

     label3:
        if r2 == null goto label4;

        $r3 = new android.app.AlertDialog$Builder;

        specialinvoke $r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r4 = virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2130968576);

        $r5 = virtualinvoke $r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r2);

        $r6 = virtualinvoke $r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2130968589, null);

        $r7 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

        virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

     label4:
        return;
    }

    static void access$000(com.android.soundrecorder.SoundRecorder)
    {
        com.android.soundrecorder.SoundRecorder r0;

        r0 := @parameter0: com.android.soundrecorder.SoundRecorder;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateTimerView()>();

        return;
    }

    static void access$100(com.android.soundrecorder.SoundRecorder)
    {
        com.android.soundrecorder.SoundRecorder r0;

        r0 := @parameter0: com.android.soundrecorder.SoundRecorder;

        specialinvoke r0.<com.android.soundrecorder.SoundRecorder: void updateUi()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.soundrecorder.SoundRecorder: int BITRATE_3GPP> = 5900;

        <com.android.soundrecorder.SoundRecorder: int BITRATE_AMR> = 5900;

        <com.android.soundrecorder.SoundRecorder: java.lang.String ANY_ANY> = "*/*";

        <com.android.soundrecorder.SoundRecorder: java.lang.String AUDIO_ANY> = "audio/*";

        <com.android.soundrecorder.SoundRecorder: java.lang.String AUDIO_AMR> = "audio/amr";

        <com.android.soundrecorder.SoundRecorder: java.lang.String AUDIO_3GPP> = "audio/3gpp";

        <com.android.soundrecorder.SoundRecorder: java.lang.String MAX_FILE_SIZE_KEY> = "max_file_size";

        <com.android.soundrecorder.SoundRecorder: java.lang.String SAMPLE_INTERRUPTED_KEY> = "sample_interrupted";

        <com.android.soundrecorder.SoundRecorder: java.lang.String RECORDER_STATE_KEY> = "recorder_state";

        <com.android.soundrecorder.SoundRecorder: java.lang.String STATE_FILE_NAME> = "soundrecorder.state";

        <com.android.soundrecorder.SoundRecorder: java.lang.String TAG> = "SoundRecorder";

        return;
    }
}
