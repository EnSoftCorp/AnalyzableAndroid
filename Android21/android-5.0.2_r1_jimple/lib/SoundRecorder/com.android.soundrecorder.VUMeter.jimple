public class com.android.soundrecorder.VUMeter extends android.view.View
{
    static final float PIVOT_RADIUS;
    static final float PIVOT_Y_OFFSET;
    static final float SHADOW_OFFSET;
    static final float DROPOFF_STEP;
    static final float SURGE_STEP;
    static final long ANIMATION_INTERVAL;
    android.graphics.Paint mPaint;
    android.graphics.Paint mShadow;
    float mCurrentAngle;
    com.android.soundrecorder.Recorder mRecorder;

    public void <init>(android.content.Context)
    {
        com.android.soundrecorder.VUMeter r0;
        android.content.Context r1;

        r0 := @this: com.android.soundrecorder.VUMeter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        virtualinvoke r0.<com.android.soundrecorder.VUMeter: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.soundrecorder.VUMeter r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.soundrecorder.VUMeter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        virtualinvoke r0.<com.android.soundrecorder.VUMeter: void init(android.content.Context)>(r1);

        return;
    }

    void init(android.content.Context)
    {
        com.android.soundrecorder.VUMeter r0;
        android.content.Context r1;
        android.graphics.drawable.Drawable r2;
        android.content.res.Resources $r3;
        android.graphics.Paint $r4, $r5, $r6, $r7;
        int $i0;

        r0 := @this: com.android.soundrecorder.VUMeter;

        r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837510);

        virtualinvoke r0.<com.android.soundrecorder.VUMeter: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r2);

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mPaint> = $r4;

        $r5 = r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(-1);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mShadow> = $r6;

        $r7 = r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mShadow>;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(60, 0, 0, 0);

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        r0.<com.android.soundrecorder.VUMeter: com.android.soundrecorder.Recorder mRecorder> = null;

        r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle> = 0.0F;

        return;
    }

    public void setRecorder(com.android.soundrecorder.Recorder)
    {
        com.android.soundrecorder.VUMeter r0;
        com.android.soundrecorder.Recorder r1;

        r0 := @this: com.android.soundrecorder.VUMeter;

        r1 := @parameter0: com.android.soundrecorder.Recorder;

        r0.<com.android.soundrecorder.VUMeter: com.android.soundrecorder.Recorder mRecorder> = r1;

        virtualinvoke r0.<com.android.soundrecorder.VUMeter: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.soundrecorder.VUMeter r0;
        android.graphics.Canvas r1;
        float f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        com.android.soundrecorder.Recorder $r2, $r7, $r8, $r9;
        byte $b0;
        int $i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3;
        android.graphics.Paint $r3, $r4, $r5, $r6;

        r0 := @this: com.android.soundrecorder.VUMeter;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        f2 = 0.3926991F;

        $r2 = r0.<com.android.soundrecorder.VUMeter: com.android.soundrecorder.Recorder mRecorder>;

        if $r2 == null goto label1;

        $r7 = r0.<com.android.soundrecorder.VUMeter: com.android.soundrecorder.Recorder mRecorder>;

        $i4 = virtualinvoke $r7.<com.android.soundrecorder.Recorder: int getMaxAmplitude()>();

        $f31 = (float) $i4;

        $f30 = 2.3561947F * $f31;

        $f32 = $f30 / 32768.0F;

        f2 = f2 + $f32;

     label1:
        $f12 = r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle>;

        $b0 = f2 cmpl $f12;

        if $b0 <= 0 goto label2;

        r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle> = f2;

        goto label3;

     label2:
        $f13 = r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle>;

        $f15 = $f13 - 0.18F;

        $f14 = staticinvoke <java.lang.Math: float max(float,float)>(f2, $f15);

        r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle> = $f14;

     label3:
        $f17 = r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle>;

        $f16 = staticinvoke <java.lang.Math: float min(float,float)>(2.7488937F, $f17);

        r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle> = $f16;

        $i2 = virtualinvoke r0.<com.android.soundrecorder.VUMeter: int getWidth()>();

        f3 = (float) $i2;

        $i1 = virtualinvoke r0.<com.android.soundrecorder.VUMeter: int getHeight()>();

        f4 = (float) $i1;

        f5 = f3 / 2.0F;

        $f19 = f4 - 3.5F;

        f6 = $f19 - 10.0F;

        $f18 = f4 * 4.0F;

        f7 = $f18 / 5.0F;

        $f20 = r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle>;

        $d0 = (double) $f20;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        f8 = (float) $d1;

        $f21 = r0.<com.android.soundrecorder.VUMeter: float mCurrentAngle>;

        $d3 = (double) $f21;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        f9 = (float) $d2;

        $f23 = f7 * f9;

        f10 = f5 - $f23;

        $f24 = f7 * f8;

        f11 = f6 - $f24;

        $f25 = f10 + 2.0F;

        $f27 = f11 + 2.0F;

        $f26 = f5 + 2.0F;

        $f22 = f6 + 2.0F;

        $r3 = r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mShadow>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f25, $f27, $f26, $f22, $r3);

        $f29 = f5 + 2.0F;

        $f28 = f6 + 2.0F;

        $r4 = r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mShadow>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f29, $f28, 3.5F, $r4);

        $r5 = r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f10, f11, f5, f6, $r5);

        $r6 = r0.<com.android.soundrecorder.VUMeter: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f5, f6, 3.5F, $r6);

        $r8 = r0.<com.android.soundrecorder.VUMeter: com.android.soundrecorder.Recorder mRecorder>;

        if $r8 == null goto label4;

        $r9 = r0.<com.android.soundrecorder.VUMeter: com.android.soundrecorder.Recorder mRecorder>;

        $i3 = virtualinvoke $r9.<com.android.soundrecorder.Recorder: int state()>();

        if $i3 != 1 goto label4;

        virtualinvoke r0.<com.android.soundrecorder.VUMeter: void postInvalidateDelayed(long)>(70L);

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.soundrecorder.VUMeter: long ANIMATION_INTERVAL> = 70L;

        <com.android.soundrecorder.VUMeter: float SURGE_STEP> = 0.35F;

        <com.android.soundrecorder.VUMeter: float DROPOFF_STEP> = 0.18F;

        <com.android.soundrecorder.VUMeter: float SHADOW_OFFSET> = 2.0F;

        <com.android.soundrecorder.VUMeter: float PIVOT_Y_OFFSET> = 10.0F;

        <com.android.soundrecorder.VUMeter: float PIVOT_RADIUS> = 3.5F;

        return;
    }
}
