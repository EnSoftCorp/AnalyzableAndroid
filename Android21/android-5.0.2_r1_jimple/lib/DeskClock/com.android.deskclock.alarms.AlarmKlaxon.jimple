public class com.android.deskclock.alarms.AlarmKlaxon extends java.lang.Object
{
    private static final long[] sVibratePattern;
    private static final float IN_CALL_VOLUME;
    private static final android.media.AudioAttributes VIBRATION_ATTRIBUTES;
    private static boolean sStarted;
    private static android.media.MediaPlayer sMediaPlayer;

    public void <init>()
    {
        com.android.deskclock.alarms.AlarmKlaxon r0;

        r0 := @this: com.android.deskclock.alarms.AlarmKlaxon;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void stop(android.content.Context)
    {
        android.content.Context r0;
        android.media.AudioManager r1;
        java.lang.Object[] $r2;
        boolean $z0;
        android.media.MediaPlayer $r3, $r6, $r8;
        java.lang.Object $r4, $r7;
        android.os.Vibrator $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("AlarmKlaxon.stop()", $r2);

        $z0 = <com.android.deskclock.alarms.AlarmKlaxon: boolean sStarted>;

        if $z0 == 0 goto label2;

        <com.android.deskclock.alarms.AlarmKlaxon: boolean sStarted> = 0;

        $r3 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        if $r3 == null goto label1;

        $r6 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        virtualinvoke $r6.<android.media.MediaPlayer: void stop()>();

        $r7 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r1 = (android.media.AudioManager) $r7;

        virtualinvoke r1.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>(null);

        $r8 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        virtualinvoke $r8.<android.media.MediaPlayer: void release()>();

        <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer> = null;

     label1:
        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r5 = (android.os.Vibrator) $r4;

        virtualinvoke $r5.<android.os.Vibrator: void cancel()>();

     label2:
        return;
    }

    public static void start(android.content.Context, com.android.deskclock.provider.AlarmInstance, boolean)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        boolean z0, $z1, $z2;
        android.net.Uri r2, $r6, $r7;
        java.lang.Exception r4, $r24, $r27;
        java.lang.Object[] $r5, $r15, $r25, $r26;
        java.lang.Object $r8;
        android.media.AudioAttributes $r9;
        long[] $r10;
        android.media.MediaPlayer $r11, $r13, $r14, $r16, $r17, $r18, $r28, $r29, $r30;
        com.android.deskclock.alarms.AlarmKlaxon$1 $r12;
        java.lang.StringBuilder $r19, $r21, $r23;
        java.lang.String $r20, $r22;
        android.os.Vibrator r31;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        z0 := @parameter2: boolean;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("AlarmKlaxon.start()", $r5);

        staticinvoke <com.android.deskclock.alarms.AlarmKlaxon: void stop(android.content.Context)>(r0);

        $r7 = <com.android.deskclock.provider.AlarmInstance: android.net.Uri NO_RINGTONE_URI>;

        $r6 = r1.<com.android.deskclock.provider.AlarmInstance: android.net.Uri mRingtone>;

        $z1 = virtualinvoke $r7.<android.net.Uri: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label10;

        r2 = r1.<com.android.deskclock.provider.AlarmInstance: android.net.Uri mRingtone>;

        if r2 != null goto label01;

        r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>(4);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using default alarm: ");

        $r20 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r22, $r25);

     label01:
        $r11 = new android.media.MediaPlayer;

        specialinvoke $r11.<android.media.MediaPlayer: void <init>()>();

        <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer> = $r11;

        $r14 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        $r12 = new com.android.deskclock.alarms.AlarmKlaxon$1;

        specialinvoke $r12.<com.android.deskclock.alarms.AlarmKlaxon$1: void <init>(android.content.Context)>(r0);

        virtualinvoke $r14.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>($r12);

     label02:
        if z0 == 0 goto label03;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("Using the in-call alarm", $r15);

        $r18 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        virtualinvoke $r18.<android.media.MediaPlayer: void setVolume(float,float)>(0.125F, 0.125F);

        $r17 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        staticinvoke <com.android.deskclock.alarms.AlarmKlaxon: void setDataSourceFromResource(android.content.Context,android.media.MediaPlayer,int)>(r0, $r17, 2131165185);

        goto label04;

     label03:
        $r13 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        virtualinvoke $r13.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>(r0, r2);

     label04:
        $r16 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        staticinvoke <com.android.deskclock.alarms.AlarmKlaxon: void startAlarm(android.content.Context,android.media.MediaPlayer)>(r0, $r16);

     label05:
        goto label10;

     label06:
        $r27 := @caughtexception;

        $r26 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("Using the fallback ringtone", $r26);

     label07:
        $r29 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        virtualinvoke $r29.<android.media.MediaPlayer: void reset()>();

        $r30 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        staticinvoke <com.android.deskclock.alarms.AlarmKlaxon: void setDataSourceFromResource(android.content.Context,android.media.MediaPlayer,int)>(r0, $r30, 2131165184);

        $r28 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer>;

        staticinvoke <com.android.deskclock.alarms.AlarmKlaxon: void startAlarm(android.content.Context,android.media.MediaPlayer)>(r0, $r28);

     label08:
        goto label10;

     label09:
        $r24 := @caughtexception;

        r4 = $r24;

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Exception)>("Failed to play fallback ringtone", r4);

     label10:
        $z2 = r1.<com.android.deskclock.provider.AlarmInstance: boolean mVibrate>;

        if $z2 == 0 goto label11;

        $r8 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        r31 = (android.os.Vibrator) $r8;

        $r10 = <com.android.deskclock.alarms.AlarmKlaxon: long[] sVibratePattern>;

        $r9 = <com.android.deskclock.alarms.AlarmKlaxon: android.media.AudioAttributes VIBRATION_ATTRIBUTES>;

        virtualinvoke r31.<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>($r10, 0, $r9);

     label11:
        <com.android.deskclock.alarms.AlarmKlaxon: boolean sStarted> = 1;

        return;

        catch java.lang.Exception from label02 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private static void startAlarm(android.content.Context, android.media.MediaPlayer) throws java.io.IOException
    {
        android.content.Context r0;
        android.media.MediaPlayer r1;
        android.media.AudioManager r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.media.MediaPlayer;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r2 = (android.media.AudioManager) $r3;

        $i0 = virtualinvoke r2.<android.media.AudioManager: int getStreamVolume(int)>(4);

        if $i0 == 0 goto label1;

        virtualinvoke r1.<android.media.MediaPlayer: void setAudioStreamType(int)>(4);

        virtualinvoke r1.<android.media.MediaPlayer: void setLooping(boolean)>(1);

        virtualinvoke r1.<android.media.MediaPlayer: void prepare()>();

        virtualinvoke r2.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>(null, 4, 2);

        virtualinvoke r1.<android.media.MediaPlayer: void start()>();

     label1:
        return;
    }

    private static void setDataSourceFromResource(android.content.Context, android.media.MediaPlayer, int) throws java.io.IOException
    {
        android.content.Context r0;
        android.media.MediaPlayer r1;
        int i0;
        android.content.res.AssetFileDescriptor r2;
        android.content.res.Resources $r3;
        java.io.FileDescriptor $r4;
        long $l1, $l2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.media.MediaPlayer;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(i0);

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l1 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l2 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: long getLength()>();

        virtualinvoke r1.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r4, $l1, $l2);

        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        long[] $r0;
        android.media.AudioAttributes$Builder $r1, $r2, $r3;
        android.media.AudioAttributes $r4;

        <com.android.deskclock.alarms.AlarmKlaxon: float IN_CALL_VOLUME> = 0.125F;

        $r0 = newarray (long)[2];

        $r0[0] = 500L;

        $r0[1] = 500L;

        <com.android.deskclock.alarms.AlarmKlaxon: long[] sVibratePattern> = $r0;

        $r1 = new android.media.AudioAttributes$Builder;

        specialinvoke $r1.<android.media.AudioAttributes$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r3 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(4);

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        <com.android.deskclock.alarms.AlarmKlaxon: android.media.AudioAttributes VIBRATION_ATTRIBUTES> = $r4;

        <com.android.deskclock.alarms.AlarmKlaxon: boolean sStarted> = 0;

        <com.android.deskclock.alarms.AlarmKlaxon: android.media.MediaPlayer sMediaPlayer> = null;

        return;
    }
}
