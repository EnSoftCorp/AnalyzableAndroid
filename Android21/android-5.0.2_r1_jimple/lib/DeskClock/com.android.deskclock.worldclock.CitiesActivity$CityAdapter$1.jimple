class com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1 extends android.widget.Filter
{
    final com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1;

    void <init>(com.android.deskclock.worldclock.CitiesActivity$CityAdapter)
    {
        com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1 r0;
        com.android.deskclock.worldclock.CitiesActivity$CityAdapter r1;

        r0 := @this: com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1;

        r1 := @parameter0: com.android.deskclock.worldclock.CitiesActivity$CityAdapter;

        r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1> = r1;

        specialinvoke r0.<android.widget.Filter: void <init>()>();

        return;
    }

    protected synchronized android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
    {
        com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1 r0;
        java.lang.CharSequence r1;
        android.widget.Filter$FilterResults r2, $r16;
        java.lang.String r3, r14, $r15, $r17, $r43, $r44, $r45, $r47, $r48, $r49, $r54, $r55, $r57, $r58, $r64, $r69, $r72, r75, r76;
        java.util.ArrayList r4, r5, r6, $r18, $r19, $r21;
        java.util.Collection r7;
        com.android.deskclock.worldclock.CityObj[] r8, r11, $r26, $r27, $r61, $r63, r74;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i19;
        com.android.deskclock.worldclock.CityObj r9, r10, r13, $r67;
        java.util.TimeZone r12;
        com.android.deskclock.worldclock.CitiesActivity$CityAdapter $r20, $r24, $r29, $r31, $r32, $r33, $r38, $r46, $r51, $r59, $r60, $r62, $r65, $r71;
        java.util.HashMap $r22;
        com.android.deskclock.worldclock.CitiesActivity $r23, $r50, $r52, $r66, $r70;
        java.lang.Object[] $r25, $r35, $r42;
        java.util.HashSet $r28, r73;
        boolean $z0, $z1, $z2, $z4, $z5, $z11;
        java.lang.String[] $r34, $r36;
        java.lang.Integer[] $r37, $r41;
        java.lang.Integer $r53, $r56, $r68;
        long l18;

        r0 := @this: com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1;

        r1 := @parameter0: java.lang.CharSequence;

        $r16 = new android.widget.Filter$FilterResults;

        specialinvoke $r16.<android.widget.Filter$FilterResults: void <init>()>();

        r2 = $r16;

        $r15 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        r3 = virtualinvoke $r17.<java.lang.String: java.lang.String toUpperCase()>();

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r4 = $r19;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r5 = $r18;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r6 = $r21;

        $r20 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r23 = $r20.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $r22 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: java.util.HashMap access$000(com.android.deskclock.worldclock.CitiesActivity)>($r23);

        r7 = virtualinvoke $r22.<java.util.HashMap: java.util.Collection values()>();

        $r24 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $i5 = interfaceinvoke r7.<java.util.Collection: int size()>();

        $r27 = newarray (com.android.deskclock.worldclock.CityObj)[$i5];

        $r25 = interfaceinvoke r7.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r27);

        $r26 = (com.android.deskclock.worldclock.CityObj[]) $r25;

        staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CityObj[] access$102(com.android.deskclock.worldclock.CitiesActivity$CityAdapter,com.android.deskclock.worldclock.CityObj[])>($r24, $r26);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label03;

        $r62 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r63 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CityObj[] access$100(com.android.deskclock.worldclock.CitiesActivity$CityAdapter)>($r62);

        if $r63 == null goto label03;

        $r60 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r61 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CityObj[] access$100(com.android.deskclock.worldclock.CitiesActivity$CityAdapter)>($r60);

        $i15 = lengthof $r61;

        if $i15 <= 0 goto label01;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("+");

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r68);

        $r67 = new com.android.deskclock.worldclock.CityObj;

        $r65 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r66 = $r65.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $r72 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: java.lang.String access$200(com.android.deskclock.worldclock.CitiesActivity)>($r66);

        $r71 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r70 = $r71.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $r69 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: java.lang.String access$200(com.android.deskclock.worldclock.CitiesActivity)>($r70);

        specialinvoke $r67.<com.android.deskclock.worldclock.CityObj: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r72, $r69, null);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r67);

     label01:
        $r59 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        r8 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CityObj[] access$100(com.android.deskclock.worldclock.CitiesActivity$CityAdapter)>($r59);

        i0 = lengthof r8;

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        r9 = r8[i1];

        r9.<com.android.deskclock.worldclock.CityObj: boolean isHeader> = 0;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        i1 = i1 + 1;

        goto label02;

     label03:
        $r28 = new java.util.HashSet;

        specialinvoke $r28.<java.util.HashSet: void <init>()>();

        r73 = $r28;

        $r29 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        r74 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CityObj[] access$100(com.android.deskclock.worldclock.CitiesActivity$CityAdapter)>($r29);

        i16 = lengthof r74;

        i17 = 0;

     label04:
        if i17 >= i16 goto label05;

        r10 = r74[i17];

        $r64 = r10.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityId>;

        virtualinvoke r73.<java.util.HashSet: boolean add(java.lang.Object)>($r64);

        i17 = i17 + 1;

        goto label04;

     label05:
        $r31 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $i6 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: int access$302(com.android.deskclock.worldclock.CitiesActivity$CityAdapter,int)>($r31, $i6);

        l18 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r75 = null;

        i19 = -100000;

        $r33 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        r11 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CityObj[] access$400(com.android.deskclock.worldclock.CitiesActivity$CityAdapter)>($r33);

        i2 = lengthof r11;

        i3 = 0;

     label06:
        if i3 >= i2 goto label14;

        r13 = r11[i3];

        $r44 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityId>;

        $z2 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>("C0");

        if $z2 == 0 goto label07;

        goto label13;

     label07:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label12;

        $r45 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityId>;

        $z4 = virtualinvoke r73.<java.util.HashSet: boolean contains(java.lang.Object)>($r45);

        if $z4 != 0 goto label13;

        $r46 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r50 = $r46.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $i12 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: int access$500(com.android.deskclock.worldclock.CitiesActivity)>($r50);

        if $i12 != 0 goto label08;

        $r55 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityName>;

        $r54 = virtualinvoke $r55.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $z11 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>(r75);

        if $z11 != 0 goto label08;

        $r57 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityName>;

        $r58 = virtualinvoke $r57.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        r75 = virtualinvoke $r58.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r75);

        $i14 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);

        r13.<com.android.deskclock.worldclock.CityObj: boolean isHeader> = 1;

        goto label09;

     label08:
        r13.<com.android.deskclock.worldclock.CityObj: boolean isHeader> = 0;

     label09:
        $r51 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r52 = $r51.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $i11 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: int access$500(com.android.deskclock.worldclock.CitiesActivity)>($r52);

        if $i11 != 1 goto label11;

        $r49 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mTimeZone>;

        r12 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r49);

        i4 = virtualinvoke r12.<java.util.TimeZone: int getOffset(long)>(l18);

        if i19 == i4 goto label10;

        i19 = i4;

        r14 = staticinvoke <com.android.deskclock.Utils: java.lang.String getGMTHourOffset(java.util.TimeZone,boolean)>(r12, 1);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        $i13 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r53);

        r13.<com.android.deskclock.worldclock.CityObj: boolean isHeader> = 1;

        goto label11;

     label10:
        r13.<com.android.deskclock.worldclock.CityObj: boolean isHeader> = 0;

     label11:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        goto label13;

     label12:
        $r43 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityName>;

        $r47 = virtualinvoke $r43.<java.lang.String: java.lang.String trim()>();

        r76 = virtualinvoke $r47.<java.lang.String: java.lang.String toUpperCase()>();

        $r48 = r13.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityId>;

        if $r48 == null goto label13;

        $z5 = virtualinvoke r76.<java.lang.String: boolean startsWith(java.lang.String)>(r3);

        if $z5 == 0 goto label13;

        r13.<com.android.deskclock.worldclock.CityObj: boolean isHeader> = 0;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label13:
        i3 = i3 + 1;

        goto label06;

     label14:
        $r32 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $i8 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $r36 = newarray (java.lang.String)[$i8];

        $r35 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r36);

        $r34 = (java.lang.String[]) $r35;

        staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: java.lang.String[] access$602(com.android.deskclock.worldclock.CitiesActivity$CityAdapter,java.lang.String[])>($r32, $r34);

        $r38 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $i9 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        $r37 = newarray (java.lang.Integer)[$i9];

        $r42 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r37);

        $r41 = (java.lang.Integer[]) $r42;

        staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: java.lang.Integer[] access$702(com.android.deskclock.worldclock.CitiesActivity$CityAdapter,java.lang.Integer[])>($r38, $r41);

        r2.<android.widget.Filter$FilterResults: java.lang.Object values> = r4;

        $i10 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        r2.<android.widget.Filter$FilterResults: int count> = $i10;

        return r2;
    }

    protected void publishResults(java.lang.CharSequence, android.widget.Filter$FilterResults)
    {
        com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1 r0;
        java.lang.CharSequence r1;
        android.widget.Filter$FilterResults r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;
        com.android.deskclock.worldclock.CitiesActivity$CityAdapter $r5, $r7, $r9, $r10, $r13, $r15;
        com.android.deskclock.worldclock.CitiesActivity $r8, $r11, $r14, $r16;
        int $i0, $i1;
        android.widget.ListView $r12;

        r0 := @this: com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.Filter$FilterResults;

        $r5 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r3 = r2.<android.widget.Filter$FilterResults: java.lang.Object values>;

        $r4 = (java.util.ArrayList) $r3;

        staticinvoke <com.android.deskclock.worldclock.CitiesActivity$CityAdapter: java.util.List access$802(com.android.deskclock.worldclock.CitiesActivity$CityAdapter,java.util.List)>($r5, $r4);

        $r7 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r8 = $r7.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $i0 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: int access$900(com.android.deskclock.worldclock.CitiesActivity)>($r8);

        if $i0 < 0 goto label1;

        $r10 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r11 = $r10.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $r12 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: android.widget.ListView access$1000(com.android.deskclock.worldclock.CitiesActivity)>($r11);

        $r13 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r14 = $r13.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        $i1 = staticinvoke <com.android.deskclock.worldclock.CitiesActivity: int access$900(com.android.deskclock.worldclock.CitiesActivity)>($r14);

        virtualinvoke $r12.<android.widget.ListView: void setSelectionFromTop(int,int)>($i1, 0);

        $r15 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        $r16 = $r15.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: com.android.deskclock.worldclock.CitiesActivity this$0>;

        staticinvoke <com.android.deskclock.worldclock.CitiesActivity: int access$902(com.android.deskclock.worldclock.CitiesActivity,int)>($r16, -1);

     label1:
        $r9 = r0.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter$1: com.android.deskclock.worldclock.CitiesActivity$CityAdapter this$1>;

        virtualinvoke $r9.<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: void notifyDataSetChanged()>();

        return;
    }
}
