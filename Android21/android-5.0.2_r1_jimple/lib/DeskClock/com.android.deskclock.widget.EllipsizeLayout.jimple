public class com.android.deskclock.widget.EllipsizeLayout extends android.widget.LinearLayout
{

    public void <init>(android.content.Context)
    {
        com.android.deskclock.widget.EllipsizeLayout r0;
        android.content.Context r1;

        r0 := @this: com.android.deskclock.widget.EllipsizeLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.deskclock.widget.EllipsizeLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.deskclock.widget.EllipsizeLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.deskclock.widget.EllipsizeLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.deskclock.widget.EllipsizeLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, i19;
        boolean z0, $z1, $z2, $z3, z4;
        android.widget.TextView r1, r3;
        android.view.View r2;
        float $f0;
        android.view.ViewGroup$LayoutParams $r4;
        byte $b14;
        android.text.TextUtils$TruncateAt $r5;
        android.widget.LinearLayout$LayoutParams r6;

        r0 := @this: com.android.deskclock.widget.EllipsizeLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i7 = virtualinvoke r0.<com.android.deskclock.widget.EllipsizeLayout: int getOrientation()>();

        if $i7 != 0 goto label13;

        $i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        if $i8 != 1073741824 goto label13;

        i2 = 0;

        z0 = 0;

        r1 = null;

        i3 = virtualinvoke r0.<com.android.deskclock.widget.EllipsizeLayout: int getChildCount()>();

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i9 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i9, 0);

        i6 = 0;

     label01:
        if i6 >= i3 goto label08;

        if z0 != 0 goto label08;

        r2 = virtualinvoke r0.<com.android.deskclock.widget.EllipsizeLayout: android.view.View getChildAt(int)>(i6);

        if r2 == null goto label07;

        $i12 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i12 == 8 goto label07;

        $z2 = r2 instanceof android.widget.TextView;

        if $z2 == 0 goto label03;

        r3 = (android.widget.TextView) r2;

        $r5 = virtualinvoke r3.<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()>();

        if $r5 == null goto label03;

        if r1 != null goto label02;

        r1 = r3;

        virtualinvoke r1.<android.widget.TextView: void setMaxWidth(int)>(2147483647);

        goto label03;

     label02:
        z0 = 1;

     label03:
        virtualinvoke r0.<com.android.deskclock.widget.EllipsizeLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r2, i5, 0, i1, 0);

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.widget.LinearLayout$LayoutParams) $r4;

        if r6 == null goto label06;

        $f0 = r6.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b14 = $f0 cmpl 0.0F;

        if $b14 <= 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z0 = z0 | $z3;

        $i13 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        $i16 = r6.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i18 = $i13 + $i16;

        $i15 = r6.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i17 = $i18 + $i15;

        i2 = i2 + $i17;

        goto label07;

     label06:
        z0 = 1;

     label07:
        i6 = i6 + 1;

        goto label01;

     label08:
        if r1 == null goto label09;

        if i2 != 0 goto label10;

     label09:
        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        z4 = z0 | $z1;

        if z4 != 0 goto label13;

        if i2 <= i4 goto label13;

        $i11 = virtualinvoke r1.<android.widget.TextView: int getMeasuredWidth()>();

        $i10 = i2 - i4;

        i19 = $i11 - $i10;

        if i19 >= 0 goto label12;

        i19 = 0;

     label12:
        virtualinvoke r1.<android.widget.TextView: void setMaxWidth(int)>(i19);

     label13:
        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i0, i1);

        return;
    }
}
