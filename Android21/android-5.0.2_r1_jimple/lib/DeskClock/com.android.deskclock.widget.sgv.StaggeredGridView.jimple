public class com.android.deskclock.widget.sgv.StaggeredGridView extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private com.android.deskclock.widget.sgv.GridAdapter mAdapter;
    public static final int COLUMN_COUNT_AUTO;
    private final int SCROLL_RESTORE_WINDOW_SIZE;
    private static final int CHILD_TO_REORDER_AREA_RATIO;
    private static final int SINGLE_COL_REORDERING_AREA_SIZE;
    private static final int SCROLL_HANDLER_DELAY;
    private static final int DRAG_SCROLL_RATE;
    public static final int ANIMATION_DELAY_IN_MS;
    private com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode;
    private com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode;
    private android.animation.AnimatorSet mCurrentRunningAnimatorSet;
    boolean mIsCurrentAnimationCanceled;
    private int mColCountSetting;
    private int mColCount;
    private int mMinColWidth;
    private int mItemMargin;
    private int[] mItemTops;
    private int[] mItemBottoms;
    private final android.graphics.Rect mTempRect;
    private boolean mFastChildLayout;
    private boolean mPopulating;
    private boolean mInLayout;
    private boolean mIsRtlLayout;
    private final com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler;
    private final com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver mObserver;
    private boolean mDataChanged;
    private int mItemCount;
    private int mFirstChangedPosition;
    private boolean mGuardAgainstJaggedEdges;
    private boolean mHasStableIds;
    private final java.util.List mViewsToAnimateOut;
    private int mFirstPosition;
    private long mFocusedChildIdToScrollIntoView;
    private com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState;
    private final int mTouchSlop;
    private final int mMaximumVelocity;
    private final int mFlingVelocity;
    private float mLastTouchY;
    private float mTouchRemainderY;
    private int mActivePointerId;
    private static final int TOUCH_MODE_IDLE;
    private static final int TOUCH_MODE_DRAGGING;
    private static final int TOUCH_MODE_FLINGING;
    private static final int TOUCH_MODE_OVERFLING;
    static final int SCROLLING_ESTIMATED_ITEM_HEIGHT;
    private int mTouchMode;
    private final android.view.VelocityTracker mVelocityTracker;
    private final com.android.deskclock.widget.sgv.OverScrollerSGV mScroller;
    private final android.support.v4.widget.EdgeEffectCompat mTopEdge;
    private final android.support.v4.widget.EdgeEffectCompat mBottomEdge;
    private boolean mIsDragReorderingEnabled;
    private com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener mScrollListener;
    private com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener mOnSizeChangedListener;
    private android.view.View mEmptyView;
    private int mHorizontalReorderingAreaSize;
    private android.widget.ImageView mDragView;
    private int mTouchDownForDragStartX;
    private int mTouchDownForDragStartY;
    private int mTouchOffsetToChildLeft;
    private int mTouchOffsetToChildTop;
    private int mOffsetToAbsoluteX;
    private int mOffsetToAbsoluteY;
    private android.graphics.Rect mCachedDragViewRect;
    private int mDragState;
    private int mHeight;
    private int mUpperScrollBound;
    private int mLowerScrollBound;
    private android.graphics.Bitmap mDragBitmap;
    private final int mOverscrollDistance;
    private final android.view.WindowManager mWindowManager;
    private android.view.WindowManager$LayoutParams mWindowParams;
    private static final int mWindowManagerLayoutFlags;
    private com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper;
    private boolean mSmoothScrollbarEnabled;
    private final java.util.Map mChildRectsForAnimation;
    private final android.support.v4.util.SparseArrayCompat mLayoutRecords;
    private android.os.Handler mScrollHandler;
    private boolean mIsDragScrollerRunning;
    private final java.lang.Runnable mDragScroller;

    public void <init>(android.content.Context)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.content.Context r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4;
        android.view.ViewConfiguration r3, r4;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn $r5;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut $r6;
        android.graphics.Rect $r7;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r8;
        com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver $r9;
        java.util.ArrayList $r10;
        android.view.VelocityTracker $r11;
        java.util.HashMap $r12;
        android.support.v4.util.SparseArrayCompat $r13;
        com.android.deskclock.widget.sgv.StaggeredGridView$1 $r14;
        android.support.v4.widget.EdgeEffectCompat $r15, $r18;
        com.android.deskclock.widget.sgv.OverScrollerSGV $r16;
        java.lang.Object $r17;
        android.view.WindowManager $r19;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int SCROLL_RESTORE_WINDOW_SIZE> = 10;

        $r5 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn NONE>;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode> = $r5;

        $r6 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut NONE>;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode> = $r6;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.animation.AnimatorSet mCurrentRunningAnimatorSet> = null;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsCurrentAnimationCanceled> = 0;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCountSetting> = 2;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount> = 2;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mMinColWidth> = 0;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin> = 0;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect> = $r7;

        $r8 = new com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin;

        specialinvoke $r8.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView,com.android.deskclock.widget.sgv.StaggeredGridView$1)>(r0, null);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler> = $r8;

        $r9 = new com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver;

        specialinvoke $r9.<com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView,com.android.deskclock.widget.sgv.StaggeredGridView$1)>(r0, null);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver mObserver> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List mViewsToAnimateOut> = $r10;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = 0.0F;

        $r11 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker> = $r11;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mSmoothScrollbarEnabled> = 0;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation> = $r12;

        $r13 = new android.support.v4.util.SparseArrayCompat;

        specialinvoke $r13.<android.support.v4.util.SparseArrayCompat: void <init>()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords> = $r13;

        $r14 = new com.android.deskclock.widget.sgv.StaggeredGridView$1;

        specialinvoke $r14.<com.android.deskclock.widget.sgv.StaggeredGridView$1: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView)>(r0);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.Runnable mDragScroller> = $r14;

        r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i1 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop> = $i1;

        $i3 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mMaximumVelocity> = $i3;

        $i2 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFlingVelocity> = $i2;

        $r16 = new com.android.deskclock.widget.sgv.OverScrollerSGV;

        specialinvoke $r16.<com.android.deskclock.widget.sgv.OverScrollerSGV: void <init>(android.content.Context)>(r1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller> = $r16;

        $r15 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r15.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>(r1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge> = $r15;

        $r18 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r18.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>(r1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge> = $r18;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setClipToPadding(boolean)>(0);

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void initialize(android.content.Context)>(r1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState> = 0;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragReorderingEnabled> = 1;

        $r17 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r19 = (android.view.WindowManager) $r17;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager mWindowManager> = $r19;

        r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i4 = virtualinvoke r4.<android.view.ViewConfiguration: int getScaledOverflingDistance()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOverscrollDistance> = $i4;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setMotionEventSplittingEnabled(boolean)>(0);

        return;
    }

    private boolean isLayoutRtl()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label3;

        $i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getLayoutDirection()>();

        if 1 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public void setColumnCount(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        if i0 == -1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Column count must be at least 1 - received ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        $i1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i0 == $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCountSetting> = i0;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount> = i0;

        if z0 == 0 goto label4;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void clearAllState()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHorizontalReorderingAreaSize> = 0;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void populate()>();

     label4:
        return;
    }

    public int getColumnCount()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        return $i0;
    }

    public void setGuardAgainstJaggedEdges(boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        z0 := @parameter0: boolean;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mGuardAgainstJaggedEdges> = z0;

        return;
    }

    public void setMinColumnWidth(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mMinColWidth> = i0;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setColumnCount(int)>(-1);

        return;
    }

    public void setItemMargin(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        if i0 == $i1 goto label1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin> = i0;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void populate()>();

     label1:
        return;
    }

    public int getItemMargin()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        return $i0;
    }

    public void setSmoothScrollbarEnabled(boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        z0 := @parameter0: boolean;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mSmoothScrollbarEnabled> = z0;

        return;
    }

    public boolean isSmoothScrollbarEnabled()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mSmoothScrollbarEnabled>;

        return $z0;
    }

    private android.view.View getChildAtCoordinate(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3;
        android.graphics.Rect r1, $r3;
        android.view.View r2, $r4;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r1 = $r3;

        i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        r2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i3);

        virtualinvoke r2.<android.view.View: void getHitRect(android.graphics.Rect)>(r1);

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i3);

        return $r4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return null;
    }

    public float getLastTouchY()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        float $f0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $f0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY>;

        return $f0;
    }

    public void enableDragReordering()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragReorderingEnabled> = 1;

        return;
    }

    public void disableDragReordering()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragReorderingEnabled> = 0;

        return;
    }

    private boolean isDragReorderingSupported()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean $z0, $z1, $z2;
        com.android.deskclock.widget.sgv.ReorderHelper $r1, $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragReorderingEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $z1 = virtualinvoke $r2.<com.android.deskclock.widget.sgv.ReorderHelper: boolean hasReorderListener()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private void initializeDragScrollParameters(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHeight> = $i1;

        $i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop>;

        $i5 = i0 - $i2;

        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHeight>;

        $i4 = $i3 / 5;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mUpperScrollBound> = $i6;

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop>;

        $i11 = i0 + $i7;

        $i8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHeight>;

        $i9 = $i8 * 4;

        $i10 = $i9 / 5;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i10);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mLowerScrollBound> = $i12;

        return;
    }

    private void startDragging(android.view.View, int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        android.content.Context r3;
        boolean $z0;
        android.graphics.Bitmap $r4, $r5, $r11;
        android.view.ViewGroup$LayoutParams $r6;
        android.graphics.Point $r7;
        com.android.deskclock.widget.sgv.ReorderHelper $r8, $r20;
        long $l8;
        android.widget.ImageView $r9, $r10, $r13, $r21;
        android.view.WindowManager$LayoutParams $r12, $r14, $r15, $r16, $r17, $r18, $r19;
        android.view.WindowManager $r22;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap createDraggedChildBitmap(android.view.View)>(r1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap> = $r4;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap>;

        if $r5 != null goto label2;

        $r20 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r20.<com.android.deskclock.widget.sgv.ReorderHelper: void handleDragCancelled(android.view.View)>(r1);

        return;

     label2:
        $i2 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i3 = i0 - $i2;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchOffsetToChildLeft> = $i3;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i5 = i1 - $i4;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchOffsetToChildTop> = $i5;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateReorderStates(int)>(1);

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void initializeDragScrollParameters(int)>(i1);

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r6;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $i9 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position>;

        $l8 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $r7 = new android.graphics.Point;

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartX>;

        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartY>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i7, $i6);

        virtualinvoke $r8.<com.android.deskclock.widget.sgv.ReorderHelper: void handleDragStart(android.view.View,int,long,android.graphics.Point)>(r1, $i9, $l8, $r7);

        r3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.content.Context getContext()>();

        $r9 = new android.widget.ImageView;

        specialinvoke $r9.<android.widget.ImageView: void <init>(android.content.Context)>(r3);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView> = $r9;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap>;

        virtualinvoke $r10.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r11);

        $r13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        virtualinvoke $r13.<android.widget.ImageView: void setAlpha(int)>(160);

        $r12 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r12.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams> = $r12;

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $r15.<android.view.WindowManager$LayoutParams: int gravity> = 8388659;

        $r14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $r14.<android.view.WindowManager$LayoutParams: int height> = -2;

        $r17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $r17.<android.view.WindowManager$LayoutParams: int width> = -2;

        $r16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $r16.<android.view.WindowManager$LayoutParams: int flags> = 920;

        $r19 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $r19.<android.view.WindowManager$LayoutParams: int format> = -3;

        $r22 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager mWindowManager>;

        $r21 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        $r18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r22.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r21, $r18);

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateDraggedBitmapLocation(int,int)>(i0, i1);

        return;
    }

    private android.graphics.Bitmap createDraggedChildBitmap(android.view.View)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        android.graphics.Bitmap r2, r3;
        java.lang.OutOfMemoryError r4, $r6;
        android.graphics.Bitmap$Config $r5;
        java.lang.String $r7;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

        r2 = virtualinvoke r1.<android.view.View: android.graphics.Bitmap getDrawingCache()>();

        r3 = null;

        if r2 == null goto label4;

     label1:
        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3 = virtualinvoke r2.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r5, 0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Failed to copy bitmap from Drawing cache", r4);

        r3 = null;

     label4:
        virtualinvoke r1.<android.view.View: void destroyDrawingCache()>();

        virtualinvoke r1.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

        return r3;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
    }

    private void updateReorderStates(int) throws java.lang.IllegalStateException
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1;
        boolean z0, z1;
        android.widget.ImageView $r1, $r4, $r5, $r7;
        com.android.deskclock.widget.sgv.ReorderHelper $r2, $r3, $r10, $r12;
        android.view.WindowManager $r6;
        android.graphics.Bitmap $r8, $r9;
        android.view.View $r11;
        java.lang.StringBuilder $r13, $r15, $r17;
        java.lang.IllegalStateException $r14;
        java.lang.String $r16;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        z0 = 0;

        z1 = 0;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState> = i0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        z0 = 1;

        z1 = 1;

        goto label5;

     label2:
        goto label5;

     label3:
        z1 = 1;

        goto label5;

     label4:
        $r14 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal drag state: ");

        $i1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label5:
        if z0 == 0 goto label6;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $r11 = virtualinvoke $r10.<com.android.deskclock.widget.sgv.ReorderHelper: android.view.View getDraggedChild()>();

        if $r11 == null goto label6;

        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r12.<com.android.deskclock.widget.sgv.ReorderHelper: void clearDraggedChildId()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mCachedDragViewRect> = null;

     label6:
        if z1 == 0 goto label8;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        if $r1 == null goto label7;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        virtualinvoke $r4.<android.widget.ImageView: void setVisibility(int)>(4);

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager mWindowManager>;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        interfaceinvoke $r6.<android.view.WindowManager: void removeView(android.view.View)>($r5);

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        virtualinvoke $r7.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView> = null;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap>;

        if $r8 == null goto label7;

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap>;

        virtualinvoke $r9.<android.graphics.Bitmap: void recycle()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap> = null;

     label7:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r2.<com.android.deskclock.widget.sgv.ReorderHelper: void clearDraggedChild()>();

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r3.<com.android.deskclock.widget.sgv.ReorderHelper: void clearDraggedOverChild()>();

     label8:
        return;
    }

    private void updateDraggedBitmapLocation(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        com.android.deskclock.widget.sgv.GridAdapter $r1;
        android.view.WindowManager$LayoutParams $r2, $r3, $r4, $r7, $r9, $r11;
        android.widget.ImageView $r5;
        android.view.WindowManager $r6;
        android.graphics.Bitmap $r8, $r10;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        i2 = virtualinvoke $r1.<com.android.deskclock.widget.sgv.GridAdapter: int getReorderingDirection()>();

        $i3 = i2 & 1;

        if $i3 != 1 goto label2;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap>;

        if $r8 == null goto label1;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Bitmap mDragBitmap>;

        $i15 = virtualinvoke $r10.<android.graphics.Bitmap: int getWidth()>();

        $i17 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        if $i15 <= $i17 goto label1;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteX>;

        $r11.<android.view.WindowManager$LayoutParams: int x> = $i16;

        goto label3;

     label1:
        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchOffsetToChildLeft>;

        $i12 = i0 - $i11;

        $i13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteX>;

        $i14 = $i12 + $i13;

        $r9.<android.view.WindowManager$LayoutParams: int x> = $i14;

        goto label3;

     label2:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteX>;

        $r2.<android.view.WindowManager$LayoutParams: int x> = $i4;

     label3:
        $i5 = i2 & 2;

        if $i5 != 2 goto label4;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchOffsetToChildTop>;

        $i8 = i1 - $i7;

        $i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteY>;

        $i10 = $i8 + $i9;

        $r7.<android.view.WindowManager$LayoutParams: int y> = $i10;

        goto label5;

     label4:
        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteY>;

        $r3.<android.view.WindowManager$LayoutParams: int y> = $i6;

     label5:
        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager mWindowManager>;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r6.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r5, $r4);

        return;
    }

    private void handleDrag(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2;
        android.animation.AnimatorSet $r1;
        android.graphics.Point $r2;
        com.android.deskclock.widget.sgv.ReorderHelper $r3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        if $i2 == 1 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateDraggedBitmapLocation(int,int)>(i0, i1);

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.animation.AnimatorSet mCurrentRunningAnimatorSet>;

        if $r1 != null goto label2;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $r2 = new android.graphics.Point;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>(i0, i1);

        virtualinvoke $r3.<com.android.deskclock.widget.sgv.ReorderHelper: void handleDrag(android.graphics.Point)>($r2);

     label2:
        return;
    }

    public boolean isChildReorderable(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1, $i2;
        com.android.deskclock.widget.sgv.GridAdapter $r1;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i2 = $i1 + i0;

        $z0 = virtualinvoke $r1.<com.android.deskclock.widget.sgv.GridAdapter: boolean isDraggable(int)>($i2);

        return $z0;
    }

    private void handleDrop(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        com.android.deskclock.widget.sgv.ReorderHelper $r3, $r4, $r6, $r13;
        boolean $z0, $z1, z2;
        android.graphics.Point $r5;
        android.view.WindowManager$LayoutParams $r7, $r8;
        android.widget.ImageView $r9, $r11;
        android.graphics.Rect $r10;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState $r12;
        android.view.ViewGroup$LayoutParams $r14;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $z0 = virtualinvoke $r3.<com.android.deskclock.widget.sgv.ReorderHelper: boolean hasReorderListener()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateReorderStates(int)>(0);

        return;

     label1:
        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $z1 = virtualinvoke $r4.<com.android.deskclock.widget.sgv.ReorderHelper: boolean isOverReorderingArea()>();

        if $z1 == 0 goto label3;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i5 = $r7.<android.view.WindowManager$LayoutParams: int x>;

        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteX>;

        i2 = $i5 - $i4;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.WindowManager$LayoutParams mWindowParams>;

        $i6 = $r8.<android.view.WindowManager$LayoutParams: int y>;

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteY>;

        i3 = $i6 - $i7;

        $r10 = new android.graphics.Rect;

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        $i8 = virtualinvoke $r9.<android.widget.ImageView: int getWidth()>();

        $i10 = i2 + $i8;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        $i9 = virtualinvoke $r11.<android.widget.ImageView: int getHeight()>();

        $i12 = i3 + $i9;

        specialinvoke $r10.<android.graphics.Rect: void <init>(int,int,int,int)>(i2, i3, $i10, $i12);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mCachedDragViewRect> = $r10;

        $i11 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if $i11 <= 0 goto label2;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        $r14 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r14;

        $i15 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position>;

        $r13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $i16 = virtualinvoke $r13.<com.android.deskclock.widget.sgv.ReorderHelper: int getDraggedChildPosition()>();

        if $i15 <= $i16 goto label2;

        $i13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i14 = $i13 - 1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition> = $i14;

     label2:
        $r12 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState getScrollState()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = $r12;

     label3:
        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>(int,int)>(i0, i1);

        z2 = virtualinvoke $r6.<com.android.deskclock.widget.sgv.ReorderHelper: boolean handleDrop(android.graphics.Point)>($r5);

        if z2 == 0 goto label4;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateReorderStates(int)>(2);

        goto label5;

     label4:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateReorderStates(int)>(0);

     label5:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        android.view.VelocityTracker $r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        byte $b6;
        java.lang.String $r5, $r9;
        com.android.deskclock.widget.sgv.OverScrollerSGV $r11;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        i0 = $i3 & 255;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 2: goto label2;
            default: goto label4;
        };

     label1:
        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f9 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f13 = $f10 - $f9;

        $i9 = (int) $f13;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteX> = $i9;

        $f11 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f12 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f15 = $f11 - $f12;

        $i11 = (int) $f15;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOffsetToAbsoluteY> = $i11;

        $f14 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i10 = (int) $f14;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartX> = $i10;

        $f16 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i12 = (int) $f16;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartY> = $i12;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r10.<android.view.VelocityTracker: void clear()>();

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        virtualinvoke $r11.<com.android.deskclock.widget.sgv.OverScrollerSGV: void abortAnimation()>();

        $f17 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = $f17;

        $i14 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, 0);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId> = $i14;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mTouchRemainderY> = 0.0F;

        $i13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode>;

        if $i13 != 2 goto label4;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 1;

        return 1;

     label2:
        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId>;

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i4);

        if i1 >= 0 goto label3;

        $r5 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onInterceptTouchEvent could not find pointer with id ");

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - did StaggeredGridView receive an inconsistent ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("event stream?");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r9);

        return 0;

     label3:
        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i1);

        $f2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY>;

        $f4 = f0 - $f2;

        $f3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mTouchRemainderY>;

        f1 = $f4 + $f3;

        i2 = (int) f1;

        $f5 = (float) i2;

        $f7 = f1 - $f5;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mTouchRemainderY> = $f7;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop>;

        $f8 = (float) $i5;

        $b6 = $f6 cmpl $f8;

        if $b6 <= 0 goto label4;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 1;

        return 1;

     label4:
        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i14, $i15;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13;
        android.view.VelocityTracker $r2, $r3, $r5, $r13, $r14;
        com.android.deskclock.widget.sgv.OverScrollerSGV $r4, $r15;
        byte $b8, $b13;
        boolean $z0;
        java.lang.String $r6, $r10;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        i0 = $i3 & 255;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label2;
            case 3: goto label5;
            default: goto label8;
        };

     label1:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void resetScroller()>();

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        virtualinvoke $r4.<com.android.deskclock.widget.sgv.OverScrollerSGV: void abortAnimation()>();

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = $f2;

        $i4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, 0);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId> = $i4;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mTouchRemainderY> = 0.0F;

        goto label8;

     label2:
        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId>;

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i5);

        if i1 >= 0 goto label3;

        $r6 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onInterceptTouchEvent could not find pointer with id ");

        $i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId>;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - did StaggeredGridView receive an inconsistent ");

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("event stream?");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r10);

        return 0;

     label3:
        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i1);

        $f4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY>;

        $f6 = f0 - $f4;

        $f3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mTouchRemainderY>;

        f1 = $f6 + $f3;

        i2 = (int) f1;

        $f5 = (float) i2;

        $f8 = f1 - $f5;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mTouchRemainderY> = $f8;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop>;

        $f9 = (float) $i6;

        $b8 = $f7 cmpl $f9;

        if $b8 <= 0 goto label4;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 1;

     label4:
        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode>;

        if $i7 != 1 goto label8;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = f0;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean trackMotionScroll(int,boolean)>(i2, 1);

        if $z0 != 0 goto label8;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void clear()>();

        goto label8;

     label5:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

        goto label8;

     label6:
        $r13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        $i11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mMaximumVelocity>;

        $f10 = (float) $i11;

        virtualinvoke $r13.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f10);

        $r14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.VelocityTracker mVelocityTracker>;

        $i12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mActivePointerId>;

        f13 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r14, $i12);

        $f11 = staticinvoke <java.lang.Math: float abs(float)>(f13);

        $i15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFlingVelocity>;

        $f12 = (float) $i15;

        $b13 = $f11 cmpl $f12;

        if $b13 <= 0 goto label7;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 2;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void resetScroller()>();

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $i14 = (int) f13;

        virtualinvoke $r15.<com.android.deskclock.widget.sgv.OverScrollerSGV: void fling(int,int,int,int,int,int,int,int)>(0, 0, 0, $i14, 0, 0, -2147483648, 2147483647);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = 0.0F;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        goto label8;

     label7:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

     label8:
        return 1;
    }

    private void resetScroller()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.support.v4.widget.EdgeEffectCompat $r1, $r2;
        com.android.deskclock.widget.sgv.OverScrollerSGV $r3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        virtualinvoke $r3.<com.android.deskclock.widget.sgv.OverScrollerSGV: void abortAnimation()>();

        return;
    }

    public boolean dispatchDragEvent(android.view.DragEvent)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.DragEvent r1;
        android.view.View r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.deskclock.widget.sgv.ReorderHelper $r3;
        float $f0, $f1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.DragEvent;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 != 0 goto label1;

        $z5 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>(r1);

        return $z5;

     label1:
        $i0 = virtualinvoke r1.<android.view.DragEvent: int getAction()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label6;
        };

     label2:
        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $z1 = virtualinvoke $r3.<com.android.deskclock.widget.sgv.ReorderHelper: boolean hasReorderListener()>();

        if $z1 == 0 goto label3;

        $z2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragReorderingEnabled>;

        if $z2 == 0 goto label3;

        $i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartX>;

        $i1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartY>;

        r2 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAtCoordinate(int,int)>($i2, $i1);

        if r2 == null goto label3;

        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartX>;

        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartY>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void startDragging(android.view.View,int,int)>(r2, $i4, $i3);

        return 1;

     label3:
        return 0;

     label4:
        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        if $i5 != 1 goto label5;

        $f0 = virtualinvoke r1.<android.view.DragEvent: float getX()>();

        $i6 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.DragEvent: float getY()>();

        $i7 = (int) $f1;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void handleDrop(int,int)>($i6, $i7);

     label5:
        $z3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean onDragEvent(android.view.DragEvent)>(r1);

        return $z3;

     label6:
        $z4 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>(r1);

        return $z4;
    }

    public boolean onDragEvent(android.view.DragEvent)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.DragEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0, $z1;
        float $f0, $f1, $f2;
        android.os.Handler $r2, $r3, $r5, $r7, $r8;
        java.lang.Runnable $r4, $r6;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.DragEvent;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $f0 = virtualinvoke r1.<android.view.DragEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.DragEvent: float getY()>();

        i1 = (int) $f1;

        $i2 = virtualinvoke r1.<android.view.DragEvent: int getAction()>();

        tableswitch($i2)
        {
            case 2: goto label2;
            case 3: goto label7;
            case 4: goto label7;
            default: goto label9;
        };

     label2:
        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        if $i3 != 1 goto label3;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void handleDrag(int,int)>(i0, i1);

        $f2 = (float) i1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = $f2;

     label3:
        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragScrollerRunning>;

        if $z1 != 0 goto label6;

        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartX>;

        $i5 = i0 - $i4;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop>;

        $i8 = 4 * $i7;

        if $i6 >= $i8 goto label4;

        $i10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchDownForDragStartY>;

        $i9 = i1 - $i10;

        $i12 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        $i11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchSlop>;

        $i13 = 4 * $i11;

        if $i12 < $i13 goto label6;

     label4:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragScrollerRunning> = 1;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler mScrollHandler>;

        if $r2 != null goto label5;

        $r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler getHandler()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler mScrollHandler> = $r5;

     label5:
        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler mScrollHandler>;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.Runnable mDragScroller>;

        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 5L);

     label6:
        return 1;

     label7:
        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler mScrollHandler>;

        if $r7 == null goto label8;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler mScrollHandler>;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.Runnable mDragScroller>;

        virtualinvoke $r8.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsDragScrollerRunning> = 0;

     label8:
        return 1;

     label9:
        return 0;
    }

    private boolean trackMotionScroll(int, boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        boolean z0, z1, z2, $z4;
        float $f0, $f1, $f2;
        android.support.v4.widget.EdgeEffectCompat $r1, r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean contentFits()>();

        i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        if z1 != 0 goto label06;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mPopulating> = 1;

        if i0 <= 0 goto label01;

        $i10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i12 = $i10 - 1;

        i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int fillUp(int,int)>($i12, i1);

        z2 = 1;

        goto label03;

     label01:
        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i9 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        $i8 = $i7 + $i9;

        i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int fillDown(int,int)>($i8, i1);

        if i4 >= 0 goto label02;

        i4 = 0;

     label02:
        z2 = 0;

     label03:
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i1);

        if z2 == 0 goto label04;

        $i11 = i3;

        goto label05;

     label04:
        $i11 = neg i3;

     label05:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void offsetChildren(int)>($i11);

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void recycleOffscreenViews()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mPopulating> = 0;

        i2 = i1 - i4;

        goto label07;

     label06:
        i2 = i1;

        i3 = 0;

     label07:
        if z0 == 0 goto label11;

        i13 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>(r0);

        if i13 == 0 goto label08;

        if i13 != 1 goto label11;

        if z1 != 0 goto label11;

     label08:
        if i2 <= 0 goto label11;

        if i0 <= 0 goto label09;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        goto label10;

     label09:
        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

     label10:
        r2 = $r1;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $f0 = (float) $i5;

        $i6 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $f1 = (float) $i6;

        $f2 = $f0 / $f1;

        virtualinvoke r2.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>($f2);

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label11:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean awakenScrollBars(int,boolean)>(0, 1);

        if i0 == 0 goto label12;

        if i3 == 0 goto label13;

     label12:
        $z4 = 1;

        goto label14;

     label13:
        $z4 = 0;

     label14:
        return $z4;
    }

    public final boolean contentFits()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        if $i3 != 0 goto label1;

        $i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        if $i4 == $i5 goto label2;

     label1:
        return 0;

     label2:
        i0 = 2147483647;

        i1 = -2147483648;

        i2 = 0;

     label3:
        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i2 >= $i6 goto label6;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i11 = $r1[i2];

        if $i11 >= i0 goto label4;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        i0 = $r4[i2];

     label4:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i12 = $r2[i2];

        if $i12 <= i1 goto label5;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i1 = $r3[i2];

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        $i7 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        if i0 < $i7 goto label7;

        $i8 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $i9 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingBottom()>();

        $i10 = $i8 - $i9;

        if i1 > $i10 goto label7;

        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;
    }

    private void recycleViewsInRange(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2;
        android.view.View r1;
        boolean $z0;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i1;

     label1:
        if i2 < i0 goto label4;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i2);

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewsInLayout(int,int)>(i2, 1);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewAt(int)>(i2);

     label3:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r2.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r1);

        i2 = i2 + -1;

        goto label1;

     label4:
        return;
    }

    private void recycleView(android.view.View)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        boolean $z0;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewInLayout(android.view.View)>(r1);

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void invalidate()>();

        goto label3;

     label2:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeView(android.view.View)>(r1);

     label3:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r2.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r1);

        return;
    }

    private void recycleOffscreenViews()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i39, i40;
        android.view.View r1, r2, r20;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r3;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r4;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState $r5;
        int[] $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17;
        android.view.ViewGroup$LayoutParams $r11;
        android.support.v4.util.SparseArrayCompat $r12;
        java.lang.Object $r13;
        boolean $z0, $z1, $z2;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r18, $r19;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i11 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if $i11 != 0 goto label01;

        return;

     label01:
        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $i13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i1 = neg $i13;

        $i12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i2 = i0 + $i12;

        $i15 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        i3 = $i15 - 1;

     label02:
        if i3 < 0 goto label06;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i3);

        $i36 = virtualinvoke r1.<android.view.View: int getTop()>();

        if $i36 > i2 goto label03;

        goto label06;

     label03:
        virtualinvoke r1.<android.view.View: void clearFocus()>();

        $z2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z2 == 0 goto label04;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewsInLayout(int,int)>(i3, 1);

        goto label05;

     label04:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewAt(int)>(i3);

     label05:
        $r19 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r19.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r1);

        i3 = i3 + -1;

        goto label02;

     label06:
        $i14 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if $i14 <= 0 goto label10;

        r20 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        $i34 = virtualinvoke r20.<android.view.View: int getBottom()>();

        if $i34 < i1 goto label07;

        goto label10;

     label07:
        virtualinvoke r20.<android.view.View: void clearFocus()>();

        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewsInLayout(int,int)>(0, 1);

        goto label09;

     label08:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewAt(int)>(0);

     label09:
        $r18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r18.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r20);

        $i33 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i35 = $i33 + 1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition> = $i35;

        goto label06;

     label10:
        i37 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if i37 <= 0 goto label22;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r7, 2147483647);

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r6, -2147483648);

        i38 = 0;

     label11:
        if i38 >= i37 goto label19;

        r2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i38);

        $r11 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r11;

        $i18 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i19 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i4 = $i18 - $i19;

        i5 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i21 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i20 = $i21 + i38;

        $r13 = virtualinvoke $r12.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>($i20);

        r4 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r13;

        if r4 != null goto label12;

        $i32 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i31 = $i32 + i38;

        r4 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord recreateLayoutRecord(int,android.view.View,com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)>($i31, r2, r3);

     label12:
        $i22 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i23 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span>;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>($i22, $i23);

        i7 = 0;

     label13:
        if i7 >= i6 goto label18;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z0 == 0 goto label14;

        $i30 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        $i29 = $i30 - i7;

        goto label15;

     label14:
        $i26 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        $i29 = $i26 + i7;

     label15:
        i8 = $i29;

        $i24 = virtualinvoke r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int getMarginAbove(int)>(i7);

        i9 = i4 - $i24;

        $i25 = virtualinvoke r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int getMarginBelow(int)>(i7);

        i10 = i5 + $i25;

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i28 = $r15[i8];

        if i9 >= $i28 goto label16;

        $r16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $r16[i8] = i9;

     label16:
        $r14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i27 = $r14[i8];

        if i10 <= $i27 goto label17;

        $r17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $r17[i8] = i10;

     label17:
        i7 = i7 + 1;

        goto label13;

     label18:
        i38 = i38 + 1;

        goto label11;

     label19:
        i39 = 0;

     label20:
        $i16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i39 >= $i16 goto label22;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i17 = $r8[i39];

        if $i17 != 2147483647 goto label21;

        i40 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $r10[i39] = i40;

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $r9[i39] = i40;

     label21:
        i39 = i39 + 1;

        goto label20;

     label22:
        $r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState getScrollState()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = $r5;

        return;
    }

    private com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord recreateLayoutRecord(int, android.view.View, com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1, $i2, $i4, $i5, $i6;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r3, $r4;
        android.support.v4.util.SparseArrayCompat $r5;
        long $l3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        $r4 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r3 = $r4;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r5.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i0, r3);

        $i1 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = $i1;

        $i2 = virtualinvoke r1.<android.view.View: int getHeight()>();

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height> = $i2;

        $l3 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: long id> = $l3;

        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i4 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = $i6;

        return r3;
    }

    public void computeScroll()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, z1, $z2, $z3, $z5, $z6, $z7, $z9;
        android.view.View r1, $r10;
        com.android.deskclock.widget.sgv.OverScrollerSGV $r2, $r3, $r5, $r6, $r7, $r9;
        float $f0, $f1, $f2, $f3, $f4;
        android.support.v4.widget.EdgeEffectCompat $r4, $r8, r11;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode>;

        if $i6 != 3 goto label01;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void handleOverfling()>();

        goto label16;

     label01:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $z2 = virtualinvoke $r2.<com.android.deskclock.widget.sgv.OverScrollerSGV: boolean computeScrollOffset()>();

        if $z2 == 0 goto label16;

        i0 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>(r0);

        if i0 == 2 goto label02;

        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z0 = $z9;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        i1 = virtualinvoke $r3.<com.android.deskclock.widget.sgv.OverScrollerSGV: int getCurrY()>();

        $f0 = (float) i1;

        $f1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY>;

        $f3 = $f0 - $f1;

        i2 = (int) $f3;

        $f2 = (float) i1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = $f2;

        if z0 == 0 goto label04;

        $i16 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if $i16 <= 0 goto label04;

        $r10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        goto label05;

     label04:
        $r10 = null;

     label05:
        r1 = $r10;

        if r1 == null goto label06;

        $i15 = virtualinvoke r1.<android.view.View: int getTop()>();

        goto label07;

     label06:
        $i15 = 0;

     label07:
        i3 = $i15;

        $z3 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean trackMotionScroll(int,boolean)>(i2, 0);

        if $z3 != 0 goto label08;

        $z7 = 1;

        goto label09;

     label08:
        $z7 = 0;

     label09:
        z1 = $z7;

        if z1 != 0 goto label10;

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $z6 = virtualinvoke $r9.<com.android.deskclock.widget.sgv.OverScrollerSGV: boolean isFinished()>();

        if $z6 != 0 goto label10;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        goto label16;

     label10:
        if z1 == 0 goto label15;

        if i2 == 0 goto label15;

        if z0 == 0 goto label15;

        if r1 == null goto label11;

        i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i12 = neg i2;

        $i11 = i4 - i3;

        i5 = $i12 - $i11;

        $i13 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        $i14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOverscrollDistance>;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i5, 0, $i13, 0, 0, 0, $i14, 1);

     label11:
        if i2 <= 0 goto label12;

        r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

        virtualinvoke $r8.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

        goto label13;

     label12:
        r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        virtualinvoke $r4.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

     label13:
        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $f4 = virtualinvoke $r5.<com.android.deskclock.widget.sgv.OverScrollerSGV: float getCurrVelocity()>();

        $i8 = (int) $f4;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i8);

        virtualinvoke r11.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i7);

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $z5 = virtualinvoke $r6.<com.android.deskclock.widget.sgv.OverScrollerSGV: boolean computeScrollOffset()>();

        if $z5 == 0 goto label14;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        $i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOverscrollDistance>;

        virtualinvoke $r7.<com.android.deskclock.widget.sgv.OverScrollerSGV: void notifyVerticalEdgeReached(int,int,int)>($i10, 0, $i9);

     label14:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 3;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        goto label16;

     label15:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

     label16:
        return;
    }

    private void handleOverfling()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, $i4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        com.android.deskclock.widget.sgv.OverScrollerSGV $r1, $r2, $r3, $r4, $r5, $r6;
        float $f0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $z2 = virtualinvoke $r1.<com.android.deskclock.widget.sgv.OverScrollerSGV: boolean computeScrollOffset()>();

        if $z2 == 0 goto label12;

        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        i1 = virtualinvoke $r3.<com.android.deskclock.widget.sgv.OverScrollerSGV: int getCurrY()>();

        i2 = i1 - i0;

        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mOverscrollDistance>;

        $z3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i2, 0, i0, 0, 0, 0, $i4, 0);

        if $z3 == 0 goto label10;

        if i0 > 0 goto label01;

        if i1 <= 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        if i0 < 0 goto label03;

        if i1 >= 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z1 = $z6;

        if z0 != 0 goto label05;

        if z1 == 0 goto label07;

     label05:
        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $f0 = virtualinvoke $r4.<com.android.deskclock.widget.sgv.OverScrollerSGV: float getCurrVelocity()>();

        i3 = (int) $f0;

        if z1 == 0 goto label06;

     label06:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        virtualinvoke $r5.<com.android.deskclock.widget.sgv.OverScrollerSGV: void abortAnimation()>();

        goto label09;

     label07:
        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        $z4 = virtualinvoke $r6.<com.android.deskclock.widget.sgv.OverScrollerSGV: boolean springBack(int,int,int,int,int,int)>(0, i0, 0, 0, 0, 0);

        if $z4 == 0 goto label08;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 3;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        goto label09;

     label08:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

     label09:
        goto label11;

     label10:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label11:
        goto label13;

     label12:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mTouchMode> = 0;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.OverScrollerSGV mScroller>;

        virtualinvoke $r2.<com.android.deskclock.widget.sgv.OverScrollerSGV: void abortAnimation()>();

     label13:
        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2;
        boolean z0, z1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        if $i2 == i1 goto label1;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void scrollTo(int,int)>(0, i1);

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.graphics.Canvas r1;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, i4;
        android.support.v4.widget.EdgeEffectCompat $r2, $r3, $r4, $r5, $r6;
        float $f0, $f1, $f2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        if $r2 == null goto label3;

        z0 = 0;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        $z1 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label1;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, 0.0F);

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        z0 = 1;

     label1:
        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

        $z2 = virtualinvoke $r4.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z2 != 0 goto label2;

        i4 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i2 = neg i1;

        $f0 = (float) $i2;

        $i3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $f1 = (float) $i3;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $f2 = (float) i1;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f2, 0.0F);

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

        virtualinvoke $r5.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i4);

        z0 = 1;

     label2:
        if z0 == 0 goto label3;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label3:
        return;
    }

    public void beginFastChildLayout()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mFastChildLayout> = 1;

        return;
    }

    public void endFastChildLayout()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mFastChildLayout> = 0;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void populate()>();

        return;
    }

    public void requestLayout()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean $z0, $z1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mPopulating>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mFastChildLayout>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void setEmptyView(android.view.View)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View mEmptyView> = r1;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateEmptyStatus()>();

        return;
    }

    public android.view.View getEmptyView()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View mEmptyView>;

        return $r1;
    }

    private void updateEmptyStatus()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.GridAdapter $r1, $r4;
        android.view.View $r2, $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $z0 = virtualinvoke $r4.<com.android.deskclock.widget.sgv.GridAdapter: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label1:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View mEmptyView>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View mEmptyView>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setVisibility(int)>(8);

        goto label5;

     label2:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setVisibility(int)>(0);

        goto label5;

     label3:
        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View mEmptyView>;

        if $r5 == null goto label4;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View mEmptyView>;

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(8);

     label4:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setVisibility(int)>(0);

     label5:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i23;
        java.lang.String $r1, $r5, $r6, $r8;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r9, $r10;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i2 == 1073741824 goto label1;

        $r6 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMeasure: must have an exact width or match_parent! Using fallback spec of EXACTLY ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, $r8);

     label1:
        if i3 == 1073741824 goto label2;

        $r1 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMeasure: must have an exact height or match_parent! Using fallback spec of EXACTLY ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r5);

     label2:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setMeasuredDimension(int,int)>(i4, i5);

        $i8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCountSetting>;

        if $i8 != -1 goto label3;

        $i18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mMinColWidth>;

        i6 = i4 / $i18;

        $i17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i6 == $i17 goto label3;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount> = i6;

     label3:
        $i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHorizontalReorderingAreaSize>;

        if $i9 != 0 goto label5;

        $i10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if $i10 <= 1 goto label4;

        $i14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i11 = $i12 + 1;

        i23 = $i14 * $i11;

        $i16 = i4 - i23;

        $i13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i7 = $i16 / $i13;

        $i15 = i7 / 4;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHorizontalReorderingAreaSize> = $i15;

        goto label5;

     label4:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mHorizontalReorderingAreaSize> = 30;

     label5:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5;
        android.support.v4.widget.EdgeEffectCompat $r1, $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $z1 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isLayoutRtl()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout> = $z1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout> = 1;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void populate()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout> = 0;

        i4 = i2 - i0;

        i5 = i3 - i1;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mTopEdge>;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>(i4, i5);

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.widget.EdgeEffectCompat mBottomEdge>;

        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>(i4, i5);

        return;
    }

    private void populate()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, i20;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        com.android.deskclock.widget.sgv.GridAdapter $r3;
        int[] $r4, $r5, $r6, $r14, $r15, $r16;
        android.support.v4.util.SparseArrayCompat $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState $r8, $r13;
        com.android.deskclock.widget.sgv.ReorderHelper $r9;
        android.view.ViewGroup$LayoutParams $r10;
        android.animation.AnimatorSet $r11, $r12;
        long $l14;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        if $i1 == 0 goto label01;

        $i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        if $i2 == 0 goto label01;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        if $r3 != null goto label02;

     label01:
        return;

     label02:
        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if $i3 != -1 goto label03;

        $i19 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mMinColWidth>;

        i0 = $i19 / $i16;

        $i17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i0 == $i17 goto label03;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount> = i0;

     label03:
        i20 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        if $r4 == null goto label04;

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        if $r15 == null goto label04;

        $r16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i15 = lengthof $r16;

        if $i15 != i20 goto label04;

        $r14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i18 = lengthof $r14;

        if $i18 == i20 goto label06;

     label04:
        $r5 = newarray (int)[i20];

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops> = $r5;

        $r6 = newarray (int)[i20];

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms> = $r6;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r7.<android.support.v4.util.SparseArrayCompat: void clear()>();

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z0 == 0 goto label05;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeAllViewsInLayout()>();

        goto label06;

     label05:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeAllViews()>();

     label06:
        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged>;

        if $z1 == 0 goto label07;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.animation.AnimatorSet mCurrentRunningAnimatorSet>;

        if $r11 == null goto label07;

        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.animation.AnimatorSet mCurrentRunningAnimatorSet>;

        virtualinvoke $r12.<android.animation.AnimatorSet: void cancel()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.animation.AnimatorSet mCurrentRunningAnimatorSet> = null;

     label07:
        $z2 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isSelectionAtTop()>();

        if $z2 == 0 goto label08;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = null;

     label08:
        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState>;

        if $r8 == null goto label09;

        $r13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void restoreScrollPosition(com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState)>($r13);

        goto label10;

     label09:
        $i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void calculateLayoutStartOffsets(int)>($i4);

     label10:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mPopulating> = 1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: long mFocusedChildIdToScrollIntoView> = -1L;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getFocusedChild()>();

        if r1 == null goto label11;

        $r10 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r10;

        $l14 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: long mFocusedChildIdToScrollIntoView> = $l14;

     label11:
        $z3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged>;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void layoutChildren(boolean)>($z3);

        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i7 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        $i6 = $i5 + $i7;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int fillDown(int,int)>($i6, 0);

        $i8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i11 = $i8 - 1;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int fillUp(int,int)>($i11, 0);

        $z4 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z4 == 0 goto label12;

        $i13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        if $i13 == 2 goto label13;

     label12:
        $i12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        if $i12 != 3 goto label14;

     label13:
        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r9.<com.android.deskclock.widget.sgv.ReorderHelper: void clearDraggedChildId()>();

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateReorderStates(int)>(0);

     label14:
        $z5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged>;

        if $z5 == 0 goto label15;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void handleLayoutAnimation()>();

     label15:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void recycleOffscreenViews()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mPopulating> = 0;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged> = 0;

        return;
    }

    public void scrollBy(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 == 0 goto label1;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean trackMotionScroll(int,boolean)>(i1, 0);

     label1:
        return;
    }

    private void offsetChildren(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener $r3, $r4;
        int[] $r5, $r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i2);

        virtualinvoke r1.<android.view.View: void offsetTopAndBottom(int)>(i0);

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r7;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setReorderingArea(com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)>(r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i10 = 0;

     label3:
        if i10 >= i9 goto label4;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i5 = $r5[i10];

        $i6 = $i5 + i0;

        $r5[i10] = $i6;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i7 = $r6[i10];

        $i8 = $i7 + i0;

        $r6[i10] = $i8;

        i10 = i10 + 1;

        goto label3;

     label4:
        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener mScrollListener>;

        if $r3 == null goto label5;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener mScrollListener>;

        $i3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int computeVerticalScrollOffset()>();

        $i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int computeVerticalScrollRange()>();

        interfaceinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener: void onScrollChanged(int,int,int)>(i0, $i3, $i4);

     label5:
        return;
    }

    private void handleLayoutAnimation() throws java.lang.IllegalStateException
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        java.util.ArrayList r1, $r4;
        android.animation.ValueAnimator r2;
        int i0, $i1, $i2, $i4, $i5;
        android.animation.AnimatorSet r3, $r12;
        float[] $r5;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut $r7;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn $r8;
        java.util.List $r9;
        java.util.Map $r10;
        com.android.deskclock.widget.sgv.StaggeredGridView$2 $r11;
        java.lang.String $r13;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = newarray (float)[2];

        $r5[0] = 0.0F;

        $r5[1] = 1.0F;

        r2 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r5);

        virtualinvoke r2.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(0L);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void addOutAnimatorsForStaleViews(java.util.List,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut)>(r1, $r7);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 <= 0 goto label1;

        $i5 = staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: int getDefaultAnimationDuration()>();

        $i4 = $i5 / 2;

        goto label2;

     label1:
        $i4 = 0;

     label2:
        i0 = $i4;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void addInAnimators(java.util.List,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn,int)>(r1, $r8, i0);

        if r1 == null goto label3;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 <= 0 goto label3;

        $r12 = new android.animation.AnimatorSet;

        specialinvoke $r12.<android.animation.AnimatorSet: void <init>()>();

        r3 = $r12;

        virtualinvoke r3.<android.animation.AnimatorSet: void playTogether(java.util.Collection)>(r1);

        $r11 = new com.android.deskclock.widget.sgv.StaggeredGridView$2;

        specialinvoke $r11.<com.android.deskclock.widget.sgv.StaggeredGridView$2: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView,android.animation.AnimatorSet)>(r0, r3);

        virtualinvoke r3.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r11);

        $r13 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r13, "starting");

        virtualinvoke r3.<android.animation.AnimatorSet: void start()>();

        goto label4;

     label3:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void resetAnimationMode()>();

     label4:
        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List mViewsToAnimateOut>;

        interfaceinvoke $r9.<java.util.List: void clear()>();

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        interfaceinvoke $r10.<java.util.Map: void clear()>();

        return;
    }

    private void resetAnimationMode()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn $r1;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn NONE>;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode> = $r1;

        $r2 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut NONE>;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode> = $r2;

        return;
    }

    private void addInAnimators(java.util.List, com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        java.util.List r1;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn r2, $r3, $r6, $r8, $r10, $r12, $r13, $r20;
        int i0, $i1, $i2;
        int[] $r4;
        java.lang.IllegalStateException $r15;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.String $r21;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn;

        i0 := @parameter2: int;

        $r3 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn NONE>;

        if r2 != $r3 goto label1;

        return;

     label1:
        $r4 = <com.android.deskclock.widget.sgv.StaggeredGridView$4: int[] $SwitchMap$com$android$deskclock$widget$sgv$SgvAnimationHelper$AnimationIn>;

        $i1 = virtualinvoke r2.<com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label2:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List addFlyInAllViewsAnimators(java.util.List)>(r1);

        goto label9;

     label3:
        $r13 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn EXPAND_NEW_VIEWS>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List addUpdateViewPositionsAnimators(java.util.List,boolean,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn,int)>(r1, 1, $r13, i0);

        goto label9;

     label4:
        $r12 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn EXPAND_NEW_VIEWS_NO_CASCADE>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List addUpdateViewPositionsAnimators(java.util.List,boolean,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn,int)>(r1, 0, $r12, i0);

        goto label9;

     label5:
        $r10 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn SLIDE_IN_NEW_VIEWS>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List addUpdateViewPositionsAnimators(java.util.List,boolean,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn,int)>(r1, 1, $r10, i0);

        goto label9;

     label6:
        $r8 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn FLY_IN_NEW_VIEWS>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List addUpdateViewPositionsAnimators(java.util.List,boolean,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn,int)>(r1, 1, $r8, i0);

        goto label9;

     label7:
        $r6 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn FADE>;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List addUpdateViewPositionsAnimators(java.util.List,boolean,com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn,int)>(r1, 1, $r6, i0);

        goto label9;

     label8:
        $r15 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animationInMode: ");

        $r20 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label9:
        return;
    }

    private void addOutAnimatorsForStaleViews(java.util.List, com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        java.util.List r1, $r8;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut r2, $r7;
        java.util.Iterator r3;
        android.view.View r4;
        java.util.ArrayList r5, $r10;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;
        java.lang.Object $r9;
        int[] $r11;
        android.view.ViewGroup$LayoutParams $r12;
        double $d0, $d1;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.IllegalStateException $r15;
        java.lang.String $r17;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut;

        $r7 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut NONE>;

        if r2 != $r7 goto label01;

        return;

     label01:
        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List mViewsToAnimateOut>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.View) $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r5 = $r10;

        $r11 = <com.android.deskclock.widget.sgv.StaggeredGridView$4: int[] $SwitchMap$com$android$deskclock$widget$sgv$SgvAnimationHelper$AnimationOut>;

        $i1 = virtualinvoke r2.<com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut: int ordinal()>();

        $i2 = $r11[$i1];

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            default: goto label08;
        };

     label03:
        $r12 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r12;

        $i3 = virtualinvoke r4.<android.view.View: int getWidth()>();

        $d0 = (double) $i3;

        $d1 = $d0 * 1.5;

        i0 = (int) $d1;

        $i5 = r6.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        $i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i6 = $i4 / 2;

        if $i5 >= $i6 goto label04;

        i0 = neg i0;

     label04:
        $f0 = virtualinvoke r4.<android.view.View: float getTranslationX()>();

        $i7 = (int) $f0;

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addSlideOutAnimators(java.util.List,android.view.View,int,int)>(r5, r4, $i7, i0);

        goto label09;

     label05:
        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addCollapseOutAnimators(java.util.List,android.view.View)>(r5, r4);

        goto label09;

     label06:
        $f1 = virtualinvoke r4.<android.view.View: float getTranslationY()>();

        $i10 = (int) $f1;

        $i9 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addFlyOutAnimators(java.util.List,android.view.View,int,int)>(r5, r4, $i10, $i9);

        goto label09;

     label07:
        $f2 = virtualinvoke r4.<android.view.View: float getAlpha()>();

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addFadeAnimators(java.util.List,android.view.View,float,float)>(r5, r4, $f2, 0.0F);

        goto label09;

     label08:
        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animationOutMode: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r15;

     label09:
        $i8 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i8 <= 0 goto label10;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void addStaleViewAnimationEndListener(android.view.View,java.util.List)>(r4, r5);

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>(r5);

     label10:
        goto label02;

     label11:
        return;
    }

    private java.util.List addFlyInAllViewsAnimators(java.util.List)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        java.util.List r1;
        int i0, i1, i2, $i3, $i4;
        android.view.View r2;
        float f0, f1;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: java.util.List;

        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if i0 != 0 goto label1;

        return null;

     label1:
        if r1 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        i2 = i1 * 50;

        r2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i1);

        $i3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        f0 = (float) $i3;

        f1 = 25.0F;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsCurrentAnimationCanceled>;

        if $z0 == 0 goto label4;

        f0 = virtualinvoke r2.<android.view.View: float getTranslationY()>();

        f1 = virtualinvoke r2.<android.view.View: float getRotation()>();

     label4:
        $i4 = (int) f0;

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addTranslationRotationAnimators(java.util.List,android.view.View,int,int,float,int)>(r1, r2, 0, $i4, f1, i2);

        i1 = i1 + 1;

        goto label3;

     label5:
        return r1;
    }

    private java.util.List addUpdateViewPositionsAnimators(java.util.List, boolean, com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        java.util.List r1, $r7;
        boolean z0, $z1;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn r2, $r11, $r14;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i24, i25, i26, i27;
        android.view.View r3;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r4;
        com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair r5;
        android.graphics.Rect r6, $r15;
        float f0, $f1, $f2, $f3, $f4;
        long $l7;
        android.view.ViewGroup$LayoutParams $r8;
        java.lang.Long $r9;
        java.util.Map $r10;
        java.lang.Object $r12;
        int[] $r13;
        double $d0, $d1;
        byte $b22, b23;
        java.util.ArrayList $r16;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn;

        i0 := @parameter3: int;

        i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if i1 != 0 goto label01;

        return null;

     label01:
        if r1 != null goto label02;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r1 = $r16;

     label02:
        i2 = 0;

        i3 = 0;

     label03:
        if i3 >= i1 goto label21;

        r3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i3);

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List mViewsToAnimateOut>;

        $z1 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z1 == 0 goto label04;

        goto label20;

     label04:
        if z0 == 0 goto label05;

        $i21 = i2 * 50;

        goto label06;

     label05:
        $i21 = 0;

     label06:
        i4 = i0 + $i21;

        $r8 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r8;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        $l7 = r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r5 = (com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair) $r12;

        if r5 == null goto label09;

        $r15 = r5.<com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair: android.graphics.Rect rect>;

        if $r15 == null goto label09;

        $r14 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn FADE>;

        if r2 != $r14 goto label07;

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addFadeAnimators(java.util.List,android.view.View,float,float,int)>(r1, r3, 0.0F, 1.0F, i4);

        goto label20;

     label07:
        r6 = r5.<com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair: android.graphics.Rect rect>;

        $i16 = r6.<android.graphics.Rect: int left>;

        $i19 = virtualinvoke r3.<android.view.View: int getLeft()>();

        i5 = $i16 - $i19;

        $i20 = r6.<android.graphics.Rect: int top>;

        $i18 = virtualinvoke r3.<android.view.View: int getTop()>();

        i6 = $i20 - $i18;

        f0 = virtualinvoke r3.<android.view.View: float getRotation()>();

        $f4 = (float) i5;

        virtualinvoke r3.<android.view.View: void setTranslationX(float)>($f4);

        $f3 = (float) i6;

        virtualinvoke r3.<android.view.View: void setTranslationY(float)>($f3);

        if i5 != 0 goto label08;

        if i6 != 0 goto label08;

        $b22 = f0 cmpl 0.0F;

        if $b22 != 0 goto label08;

        goto label20;

     label08:
        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addTranslationRotationAnimators(java.util.List,android.view.View,int,int,float,int)>(r1, r3, i5, i6, f0, i4);

        goto label19;

     label09:
        b23 = 0;

        $r11 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn FLY_IN_NEW_VIEWS>;

        if r2 != $r11 goto label10;

        $i17 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        goto label11;

     label10:
        $i17 = 0;

     label11:
        i24 = $i17;

        $i8 = staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: int getDefaultAnimationDuration()>();

        i25 = i4 + $i8;

        $f1 = (float) b23;

        virtualinvoke r3.<android.view.View: void setTranslationX(float)>($f1);

        $f2 = (float) i24;

        virtualinvoke r3.<android.view.View: void setTranslationY(float)>($f2);

        $r13 = <com.android.deskclock.widget.sgv.StaggeredGridView$4: int[] $SwitchMap$com$android$deskclock$widget$sgv$SgvAnimationHelper$AnimationIn>;

        $i10 = virtualinvoke r2.<com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn: int ordinal()>();

        $i9 = $r13[$i10];

        tableswitch($i9)
        {
            case 2: goto label15;
            case 3: goto label15;
            case 4: goto label13;
            case 5: goto label12;
            case 6: goto label17;
            default: goto label18;
        };

     label12:
        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addTranslationRotationAnimators(java.util.List,android.view.View,int,int,float,int)>(r1, r3, b23, i24, 25.0F, i25);

        goto label19;

     label13:
        $i12 = virtualinvoke r3.<android.view.View: int getWidth()>();

        $d1 = (double) $i12;

        $d0 = $d1 * 1.5;

        i26 = (int) $d0;

        $i15 = r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        $i11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i14 = $i11 / 2;

        if $i15 >= $i14 goto label14;

        i26 = neg i26;

     label14:
        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addSlideInFromRightAnimators(java.util.List,android.view.View,int,int)>(r1, r3, i26, i25);

        goto label19;

     label15:
        if i3 != 0 goto label16;

        virtualinvoke r3.<android.view.View: void setAlpha(float)>(0.0F);

        $i13 = virtualinvoke r3.<android.view.View: int getHeight()>();

        i27 = -1 * $i13;

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addXYTranslationAnimators(java.util.List,android.view.View,int,int,int)>(r1, r3, 0, i27, i25);

        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addFadeAnimators(java.util.List,android.view.View,float,float,int)>(r1, r3, 0.0F, 1.0F, i25);

        goto label19;

     label16:
        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addExpandInAnimators(java.util.List,android.view.View,int)>(r1, r3, i25);

        goto label19;

     label17:
        staticinvoke <com.android.deskclock.widget.sgv.SgvAnimationHelper: void addFadeAnimators(java.util.List,android.view.View,float,float,int)>(r1, r3, 0.0F, 1.0F, i25);

        goto label19;

     label18:
        goto label20;

     label19:
        i2 = i2 + 1;

     label20:
        i3 = i3 + 1;

        goto label03;

     label21:
        return r1;
    }

    private void addStaleViewAnimationEndListener(android.view.View, java.util.List)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        java.util.List r2;
        java.util.Iterator r3;
        android.animation.Animator r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.deskclock.widget.sgv.StaggeredGridView$3 $r6;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        if r2 != null goto label1;

        return;

     label1:
        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.animation.Animator) $r5;

        $r6 = new com.android.deskclock.widget.sgv.StaggeredGridView$3;

        specialinvoke $r6.<com.android.deskclock.widget.sgv.StaggeredGridView$3: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView,android.view.View)>(r0, r1);

        virtualinvoke r4.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        goto label2;

     label3:
        return;
    }

    private void calculateLayoutStartOffsets(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r1, $r36;
        android.view.View r2;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r3;
        int[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r16, $r21, $r30, $r33, $r37, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.support.v4.util.SparseArrayCompat $r11, $r34, $r35;
        android.view.ViewGroup$LayoutParams $r13;
        java.lang.Object $r14;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r15;
        long $l39;
        java.lang.String $r17, $r22, $r25, $r28, $r31;
        java.lang.StringBuilder $r18, $r19, $r20, $r23, $r24, $r26, $r27, $r29, $r32;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $i8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        if $i8 == 0 goto label02;

        $z6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mGuardAgainstJaggedEdges>;

        if $z6 == 0 goto label01;

        $i61 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i62 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstChangedPosition>;

        if $i61 >= $i62 goto label02;

     label01:
        $r37 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $r38 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i63 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r37, 0, $r38, 0, $i63);

        return;

     label02:
        $i9 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingLeft()>();

        $i11 = $i9 - $i10;

        $i13 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingRight()>();

        $i16 = $i11 - $i13;

        $i14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i15 = $i12 - 1;

        $i17 = $i14 * $i15;

        $i18 = $i16 - $i17;

        $i19 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i1 = $i18 / $i19;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i20 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r4, $i20);

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i21 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r5, $i21);

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged>;

        if $z0 == 0 goto label03;

        $r34 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r34.<android.support.v4.util.SparseArrayCompat: void clear()>();

     label03:
        i2 = 0;

     label04:
        $i22 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        if i2 >= $i22 goto label23;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $r14 = virtualinvoke $r11.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i2);

        r1 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r14;

        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged>;

        if $z1 != 0 goto label05;

        if r1 != null goto label09;

     label05:
        r2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View obtainView(int,android.view.View)>(i2, null);

        $r13 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r13;

        $i32 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        if $i32 != -2 goto label06;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label07;

     label06:
        $i31 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i31, 1073741824);

     label07:
        $i35 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i30 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span>;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i35, $i30);

        $i36 = i1 * i4;

        $i33 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i34 = i4 - 1;

        $i37 = $i33 * $i34;

        i5 = $i36 + $i37;

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>(i6, i3);

        i7 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        if r1 != null goto label08;

        $r36 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r36.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r1 = $r36;

        $r35 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r35.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i2, r1);

     label08:
        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height> = i7;

        $l39 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: long id> = $l39;

        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i4;

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r15.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r2);

     label09:
        i64 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnDown()>();

        $i38 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if $i38 <= 1 goto label11;

        $z5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z5 == 0 goto label10;

        $i60 = i64 + 1;

        $i59 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if $i60 >= $i59 goto label11;

        $i58 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i64 = $i58 - 1;

        goto label11;

     label10:
        $i54 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i53 = $i54 - i64;

        $i52 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if $i53 >= $i52 goto label11;

        i64 = 0;

     label11:
        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i64;

        $r16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i44 = $r16[i64];

        $i43 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i65 = $i44 + $i43;

        $i45 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if $i45 <= 1 goto label16;

        i66 = 0;

     label12:
        $i50 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if i66 >= $i50 goto label16;

        $z4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z4 == 0 goto label13;

        $i56 = i64 - i66;

        goto label14;

     label13:
        $i56 = i64 + i66;

     label14:
        i67 = $i56;

        $r33 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i55 = $r33[i67];

        $i57 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i68 = $i55 + $i57;

        if i68 <= i65 goto label15;

        i65 = i68;

     label15:
        i66 = i66 + 1;

        goto label12;

     label16:
        i69 = 0;

     label17:
        $i40 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if i69 >= $i40 goto label22;

        $z2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z2 == 0 goto label18;

        $i48 = i64 - i69;

        goto label19;

     label18:
        $i48 = i64 + i69;

     label19:
        i70 = $i48;

        $r21 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i41 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height>;

        $i42 = i65 + $i41;

        $r21[i70] = $i42;

        $r22 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r22, 2);

        if $z3 == 0 goto label21;

        $r17 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" position: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bottoms: ");

        $r28 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r17, $r28);

        i71 = 0;

     label20:
        $i47 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i71 >= $i47 goto label21;

        $r25 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mItemBottoms[");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i71);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r30 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i51 = $r30[i71];

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r25, $r31);

        i71 = i71 + 1;

        goto label20;

     label21:
        i69 = i69 + 1;

        goto label17;

     label22:
        i2 = i2 + 1;

        goto label04;

     label23:
        i72 = 2147483647;

        i73 = 0;

     label24:
        $i24 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i73 >= $i24 goto label26;

        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i29 = $r12[i73];

        if $i29 >= i72 goto label25;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i72 = $r10[i73];

     label25:
        i73 = i73 + 1;

        goto label24;

     label26:
        i74 = 0;

     label27:
        $i23 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i74 >= $i23 goto label28;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i27 = $r6[i74];

        $i25 = $i27 - i72;

        $i26 = $i25 + i0;

        $r8[i74] = $i26;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i28 = $r9[i74];

        $r7[i74] = $i28;

        i74 = i74 + 1;

        goto label27;

     label28:
        return;
    }

    final void layoutChildren(boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, i74, i75, i76, i77, i78, i79, i80, i81, i82;
        android.view.View r1, r19;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        java.util.List $r3, $r16;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut $r4, $r5;
        int[] $r6, $r7, $r10, $r13;
        android.support.v4.util.SparseArrayCompat $r8, $r9;
        byte $b39;
        long $l40, $l41, $l44;
        java.lang.Object $r11;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord $r12, r20;
        android.view.ViewParent $r14;
        android.view.ViewGroup$LayoutParams $r15, $r17;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r18;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingLeft()>();

        i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingRight()>();

        i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i19 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i18 = $i19 - i0;

        $i25 = $i18 - i1;

        $i21 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i20 = $i21 - 1;

        $i24 = i2 * $i20;

        i3 = $i25 - $i24;

        $i22 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i4 = i3 / $i22;

        $i23 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i5 = i3 % $i23;

        z1 = 0;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode>;

        $r4 = <com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut NONE>;

        if $r5 == $r4 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        z2 = $z12;

        if z2 != 0 goto label06;

        i6 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        $i71 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        $i72 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        if $i71 > $i72 goto label03;

        $i67 = 0;

        goto label04;

     label03:
        $i69 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        $i70 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        $i67 = $i69 - $i70;

     label04:
        i7 = $i67;

        if i6 <= i7 goto label05;

        $i68 = i6 - 1;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void recycleViewsInRange(int,int)>(i7, $i68);

        z1 = 1;

     label05:
        goto label07;

     label06:
        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List mViewsToAnimateOut>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

     label07:
        i74 = 0;

     label08:
        $i26 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if i74 >= $i26 goto label45;

        $i28 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        i75 = $i28 + i74;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i74);

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i27 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnDown()>();

        i8 = $r6[$i27];

        if z2 == 0 goto label10;

        $i66 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        if i75 >= $i66 goto label09;

        $i73 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        if i8 < $i73 goto label10;

     label09:
        $r16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.List mViewsToAnimateOut>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label44;

     label10:
        r2 = null;

        i9 = -1;

        if r1 == null goto label11;

        $r17 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r17;

        i9 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

     label11:
        if z0 != 0 goto label12;

        if r1 == null goto label12;

        $z10 = virtualinvoke r1.<android.view.View: boolean isLayoutRequested()>();

        if $z10 == 0 goto label13;

     label12:
        $z11 = 1;

        goto label14;

     label13:
        $z11 = 0;

     label14:
        z3 = $z11;

        if z0 == 0 goto label20;

        if z2 == 0 goto label15;

        r19 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View obtainView(int)>(i75);

        goto label16;

     label15:
        r19 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View obtainView(int,android.view.View)>(i75, r1);

     label16:
        $r15 = virtualinvoke r19.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r15;

        if r19 == r1 goto label19;

        if r1 == null goto label17;

        if z2 != 0 goto label17;

        $r18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r18.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r1);

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeViewInLayout(android.view.View)>(r1);

        z1 = 1;

     label17:
        $r14 = virtualinvoke r19.<android.view.View: android.view.ViewParent getParent()>();

        if $r14 != r0 goto label18;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void detachViewFromParent(android.view.View)>(r19);

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r19, i74, r2);

        goto label19;

     label18:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r19, i74, r2);

     label19:
        r1 = r19;

        $i62 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnDown()>();

        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column> = $i62;

        i9 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

     label20:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setReorderingArea(com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)>(r2);

        $i31 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i30 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span>;

        i76 = staticinvoke <java.lang.Math: int min(int,int)>($i31, $i30);

        if i76 <= 1 goto label23;

        $z9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z9 == 0 goto label21;

        $i65 = i9 + 1;

        if $i65 >= i76 goto label22;

        $i63 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i9 = $i63 - 1;

        goto label22;

     label21:
        $i59 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i64 = $i59 - i9;

        if $i64 >= i76 goto label22;

        i9 = 0;

     label22:
        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column> = i9;

     label23:
        $i32 = i4 * i76;

        $i29 = i76 - 1;

        $i33 = i2 * $i29;

        i11 = $i32 + $i33;

        $z5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z5 == 0 goto label24;

        $i57 = i9 + 1;

        if i76 == $i57 goto label25;

     label24:
        $z4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z4 != 0 goto label26;

        $i58 = i76 + i9;

        $i61 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if $i58 != $i61 goto label26;

     label25:
        i11 = i11 + i5;

     label26:
        if z3 == 0 goto label29;

        i10 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i11, 1073741824);

        $i54 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        if $i54 != -2 goto label27;

        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label28;

     label27:
        $i60 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i60, 1073741824);

     label28:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i10, i13);

     label29:
        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i34 = $r7[i9];

        $i35 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i77 = $i34 + $i35;

        if i76 <= 1 goto label35;

        i78 = i77;

        i12 = 0;

     label30:
        if i12 >= i76 goto label34;

        $z8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z8 == 0 goto label31;

        $i52 = i9 - i12;

        goto label32;

     label31:
        $i52 = i9 + i12;

     label32:
        i15 = $i52;

        $r13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i53 = $r13[i15];

        $i56 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i14 = $i53 + $i56;

        if i14 <= i78 goto label33;

        i78 = i14;

     label33:
        i12 = i12 + 1;

        goto label30;

     label34:
        i77 = i78;

     label35:
        i79 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i80 = i77 + i79;

        $z6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z6 == 0 goto label36;

        $i49 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i48 = $i49 - i1;

        $i50 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i51 = $i50 - i9;

        $i46 = $i51 - 1;

        $i45 = i4 + i2;

        $i47 = $i46 * $i45;

        i81 = $i48 - $i47;

        $i55 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i82 = i81 - $i55;

        goto label37;

     label36:
        $i38 = i4 + i2;

        $i37 = i9 * $i38;

        i82 = i0 + $i37;

        $i36 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i81 = i82 + $i36;

     label37:
        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i82, i77, i81, i80);

        $l40 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $l41 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: long mFocusedChildIdToScrollIntoView>;

        $b39 = $l40 cmp $l41;

        if $b39 != 0 goto label38;

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

     label38:
        i17 = 0;

     label39:
        if i17 >= i76 goto label42;

        $z7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z7 == 0 goto label40;

        $i42 = i9 - i17;

        goto label41;

     label40:
        $i42 = i9 + i17;

     label41:
        i16 = $i42;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $r10[i16] = i80;

        i17 = i17 + 1;

        goto label39;

     label42:
        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $r11 = virtualinvoke $r8.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i75);

        r20 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r11;

        if r20 != null goto label43;

        $r12 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r12.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r20 = $r12;

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r9.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i75, r20);

     label43:
        $i43 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        r20.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = $i43;

        r20.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height> = i79;

        $l44 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        r20.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: long id> = $l44;

        r20.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i76;

     label44:
        i74 = i74 + 1;

        goto label08;

     label45:
        if z1 != 0 goto label46;

        if z2 == 0 goto label47;

     label46:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void invalidate()>();

     label47:
        return;
    }

    private void setReorderingArea(com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r1;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.deskclock.widget.sgv.GridAdapter $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        $i2 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column>;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i1 = $i0 - 1;

        if $i2 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i3 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position>;

        $i4 = virtualinvoke $r2.<com.android.deskclock.widget.sgv.GridAdapter: int getReorderingArea(int,boolean)>($i3, z0);

        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int reorderingArea> = $i4;

        return;
    }

    final void invalidateLayoutRecordsBeforePosition(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2, $i3;
        android.support.v4.util.SparseArrayCompat $r1, $r2, $r3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i2 = virtualinvoke $r1.<android.support.v4.util.SparseArrayCompat: int size()>();

        if i1 >= $i2 goto label2;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i3 = virtualinvoke $r3.<android.support.v4.util.SparseArrayCompat: int keyAt(int)>(i1);

        if $i3 >= i0 goto label2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r2.<android.support.v4.util.SparseArrayCompat: void removeAtRange(int,int)>(0, i1);

        return;
    }

    final void invalidateLayoutRecordsAfterPosition(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.support.v4.util.SparseArrayCompat $r1, $r2, $r3, $r4;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i2 = virtualinvoke $r1.<android.support.v4.util.SparseArrayCompat: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i6 = virtualinvoke $r4.<android.support.v4.util.SparseArrayCompat: int keyAt(int)>(i1);

        if $i6 <= i0 goto label2;

        i1 = i1 + -1;

        goto label1;

     label2:
        i7 = i1 + 1;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i3 = i7 + 1;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $i4 = virtualinvoke $r2.<android.support.v4.util.SparseArrayCompat: int size()>();

        $i5 = $i4 - i7;

        virtualinvoke $r3.<android.support.v4.util.SparseArrayCompat: void removeAtRange(int,int)>($i3, $i5);

        return;
    }

    private void cacheChildRects()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i2, i3, i4, i5, i6, $i9, $i10;
        long l1, $l7, $l11;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        android.graphics.Rect r3, $r6, $r12, $r17;
        java.util.Map $r4, $r7, $r15;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r5;
        float $f0, $f1;
        byte $b8, $b12;
        com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair $r8, $r14;
        java.lang.Long $r9, $r13;
        com.android.deskclock.widget.sgv.ReorderHelper $r10;
        android.widget.ImageView $r18;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        l1 = -1L;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        l1 = virtualinvoke $r10.<com.android.deskclock.widget.sgv.ReorderHelper: long getDraggedChildId()>();

        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mCachedDragViewRect>;

        if $r12 == null goto label1;

        $b12 = l1 cmp -1L;

        if $b12 == 0 goto label1;

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r14 = new com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair;

        $r18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.widget.ImageView mDragView>;

        $r17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mCachedDragViewRect>;

        specialinvoke $r14.<com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair: void <init>(android.view.View,android.graphics.Rect)>($r18, $r17);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mCachedDragViewRect> = null;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(i2);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r5;

        $l7 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $b8 = $l7 cmp l1;

        if $b8 == 0 goto label3;

        $f0 = virtualinvoke r1.<android.view.View: float getY()>();

        i3 = (int) $f0;

        $i9 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i4 = i3 + $i9;

        $f1 = virtualinvoke r1.<android.view.View: float getX()>();

        i5 = (int) $f1;

        $i10 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i6 = i5 + $i10;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(i5, i3, i6, i4);

        r3 = $r6;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        $l11 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        $r8 = new com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair;

        specialinvoke $r8.<com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair: void <init>(android.view.View,android.graphics.Rect)>(r1, r3);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    final int fillUp(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i71, $i72, $i73, i74, i75, i76, i77, i78, i79;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        boolean z0, $z3, $z4, $z5, $z6, $z7, $z9, $z11;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r3, $r30;
        int[] $r4, $r5, $r6, $r11, $r27, $r28;
        android.view.ViewParent $r7;
        android.view.ViewGroup$LayoutParams $r8;
        android.support.v4.util.SparseArrayCompat $r9, $r29;
        java.lang.Object $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        long $l43, $l47, $l48, $l70;
        java.lang.String $r16, $r26;
        byte $b49;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingLeft()>();

        i3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingRight()>();

        i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i22 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i25 = $i22 - i2;

        $i28 = $i25 - i3;

        $i26 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i23 = $i26 - 1;

        $i24 = i4 * $i23;

        i5 = $i28 - $i24;

        $i29 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i6 = i5 / $i29;

        $i27 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i7 = i5 % $i27;

        i8 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        i9 = neg i1;

        i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnUp()>();

        i11 = i0;

     label01:
        if i10 < 0 goto label28;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i33 = $r5[i10];

        if $i33 <= i9 goto label28;

        if i11 < 0 goto label28;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View obtainView(int,android.view.View)>(i11, null);

        $r8 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r8;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r7 == r0 goto label03;

        $z11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z11 == 0 goto label02;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, 0, r2);

        goto label03;

     label02:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void addView(android.view.View,int)>(r1, 0);

     label03:
        $i34 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i35 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span>;

        i12 = staticinvoke <java.lang.Math: int min(int,int)>($i34, $i35);

        if i12 <= 1 goto label04;

        r3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord getNextRecordUp(int,int)>(i11, i12);

        i10 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column>;

        goto label05;

     label04:
        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $r10 = virtualinvoke $r9.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i11);

        r3 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r10;

     label05:
        z0 = 0;

        if r3 != null goto label06;

        $r30 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r30.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r3 = $r30;

        $r29 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r29.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i11, r3);

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i10;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i12;

        goto label08;

     label06:
        $i37 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if i12 == $i37 goto label07;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i12;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i10;

        z0 = 1;

        goto label08;

     label07:
        i10 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column>;

     label08:
        $z3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mHasStableIds>;

        if $z3 == 0 goto label09;

        $l70 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: long id> = $l70;

     label09:
        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column> = i10;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setReorderingArea(com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)>(r2);

        $i38 = i6 * i12;

        $i36 = i12 - 1;

        $i39 = i4 * $i36;

        i14 = $i38 + $i39;

        $z5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z5 == 0 goto label10;

        $i71 = i10 + 1;

        if i12 == $i71 goto label11;

     label10:
        $z4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z4 != 0 goto label12;

        $i72 = i12 + i10;

        $i73 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if $i72 != $i73 goto label12;

     label11:
        i14 = i14 + i7;

     label12:
        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i14, 1073741824);

        $i41 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        if $i41 != -2 goto label13;

        i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label14;

     label13:
        $i42 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i42, 1073741824);

     label14:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i13, i16);

        i15 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if z0 != 0 goto label15;

        $i65 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height>;

        if i15 == $i65 goto label16;

        $i64 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height>;

        if $i64 <= 0 goto label16;

     label15:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void invalidateLayoutRecordsBeforePosition(int)>(i11);

     label16:
        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height> = i15;

        i18 = 0;

     label17:
        if i18 >= i12 goto label20;

        $z9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z9 == 0 goto label18;

        $i66 = i10 - i18;

        goto label19;

     label18:
        $i66 = i10 + i18;

     label19:
        i17 = $i66;

        $r28 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i69 = $r28[i17];

        $i68 = virtualinvoke r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int getMarginBelow(int)>(i18);

        $i67 = $i69 + $i68;

        $r28[i17] = $i67;

        i18 = i18 + 1;

        goto label17;

     label20:
        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        i74 = $r11[i10];

        i75 = i74;

        i19 = i75 - i15;

        $z6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z6 == 0 goto label21;

        $i62 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i56 = $i62 - i3;

        $i63 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i60 = $i63 - i10;

        $i58 = $i60 - 1;

        $i61 = i6 + i4;

        $i59 = $i58 * $i61;

        i76 = $i56 - $i59;

        $i57 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i77 = i76 - $i57;

        goto label22;

     label21:
        $i40 = i6 + i4;

        $i44 = i10 * $i40;

        i77 = i2 + $i44;

        $i45 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i76 = i77 + $i45;

     label22:
        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i77, i19, i76, i75);

        $r16 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[fillUp] position: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        $l43 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l43);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" childLeft: ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i77);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" childTop: ");

        $r18 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column: ");

        $i46 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" childHeight:");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r16, $r26);

        i20 = 0;

     label23:
        if i20 >= i12 goto label26;

        $z7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z7 == 0 goto label24;

        $i52 = i10 - i20;

        goto label25;

     label24:
        $i52 = i10 + i20;

     label25:
        i21 = $i52;

        $r27 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i53 = virtualinvoke r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int getMarginAbove(int)>(i20);

        $i54 = i19 - $i53;

        $i51 = $i54 - i4;

        $r27[i21] = $i51;

        i20 = i20 + 1;

        goto label23;

     label26:
        $l47 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $l48 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: long mFocusedChildIdToScrollIntoView>;

        $b49 = $l47 cmp $l48;

        if $b49 != 0 goto label27;

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

     label27:
        i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnUp()>();

        $i55 = i11;

        i11 = i11 + -1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition> = $i55;

        goto label01;

     label28:
        i78 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        i79 = 0;

     label29:
        $i30 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i79 >= $i30 goto label31;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i32 = $r6[i79];

        if $i32 >= i78 goto label30;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        i78 = $r4[i79];

     label30:
        i79 = i79 + 1;

        goto label29;

     label31:
        $i31 = i8 - i78;

        return $i31;
    }

    final int fillDown(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i52, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i72, $i73, $i74, $i75, $i76, $i77, i78, i79, i80, i81, i82, i83, i84;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        boolean z0, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r3, $r30;
        int[] $r4, $r5, $r6, $r12, $r27, $r28;
        android.view.ViewGroup$LayoutParams $r7;
        android.view.ViewParent $r8;
        java.lang.Object $r9;
        android.support.v4.util.SparseArrayCompat $r10, $r29;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26;
        long $l51, $l53, $l56, $l71;
        java.lang.String $r17, $r22;
        byte $b54;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingLeft()>();

        i3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingRight()>();

        i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i22 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i25 = $i22 - i2;

        $i29 = $i25 - i3;

        $i26 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i23 = $i26 - 1;

        $i24 = i4 * $i23;

        i5 = $i29 - $i24;

        $i30 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i6 = i5 / $i30;

        $i27 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i7 = i5 % $i27;

        $i28 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $i33 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingBottom()>();

        i8 = $i28 - $i33;

        i9 = i8 + i1;

        i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnDown()>();

        i11 = i0;

     label01:
        if i10 < 0 goto label28;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i39 = $r6[i10];

        if $i39 >= i9 goto label28;

        $i38 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        if i11 >= $i38 goto label28;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View obtainView(int,android.view.View)>(i11, null);

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r7;

        $r8 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r8 == r0 goto label03;

        $z11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mInLayout>;

        if $z11 == 0 goto label02;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, -1, r2);

        goto label03;

     label02:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void addView(android.view.View)>(r1);

     label03:
        $i40 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i41 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span>;

        i12 = staticinvoke <java.lang.Math: int min(int,int)>($i40, $i41);

        if i12 <= 1 goto label04;

        r3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord getNextRecordDown(int,int)>(i11, i12);

        i10 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column>;

        goto label05;

     label04:
        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $r9 = virtualinvoke $r10.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i11);

        r3 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r9;

     label05:
        z0 = 0;

        if r3 != null goto label06;

        $r30 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r30.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r3 = $r30;

        $r29 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r29.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i11, r3);

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i10;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i12;

        goto label08;

     label06:
        $i42 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if i12 == $i42 goto label07;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i12;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i10;

        z0 = 1;

        goto label08;

     label07:
        i10 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column>;

     label08:
        $z4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mHasStableIds>;

        if $z4 == 0 goto label09;

        $l71 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: long id> = $l71;

     label09:
        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int column> = i10;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setReorderingArea(com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams)>(r2);

        $i47 = i6 * i12;

        $i45 = i12 - 1;

        $i46 = i4 * $i45;

        i14 = $i47 + $i46;

        $z6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z6 == 0 goto label10;

        $i72 = i10 + 1;

        if i12 == $i72 goto label11;

     label10:
        $z5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z5 != 0 goto label12;

        $i73 = i12 + i10;

        $i74 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if $i73 != $i74 goto label12;

     label11:
        i14 = i14 + i7;

     label12:
        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i14, 1073741824);

        $i43 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        if $i43 != -2 goto label13;

        i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label14;

     label13:
        $i44 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int height>;

        i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i44, 1073741824);

     label14:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i13, i16);

        i15 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if z0 != 0 goto label15;

        $i76 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height>;

        if i15 == $i76 goto label16;

        $i75 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height>;

        if $i75 <= 0 goto label16;

     label15:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void invalidateLayoutRecordsAfterPosition(int)>(i11);

     label16:
        r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int height> = i15;

        i18 = 0;

     label17:
        if i18 >= i12 goto label20;

        $z10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z10 == 0 goto label18;

        $i77 = i10 - i18;

        goto label19;

     label18:
        $i77 = i10 + i18;

     label19:
        i17 = $i77;

        $r28 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i67 = $r28[i17];

        $i66 = virtualinvoke r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int getMarginAbove(int)>(i18);

        $i65 = $i67 + $i66;

        $r28[i17] = $i65;

        i18 = i18 + 1;

        goto label17;

     label20:
        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i78 = $r12[i10];

        i79 = i78 + i4;

        i19 = i79 + i15;

        $z7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z7 == 0 goto label21;

        $i62 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i69 = $i62 - i3;

        $i59 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i60 = $i59 - i10;

        $i58 = $i60 - 1;

        $i57 = i6 + i4;

        $i70 = $i58 * $i57;

        i80 = $i69 - $i70;

        $i68 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i81 = i80 - $i68;

        goto label22;

     label21:
        $i48 = i6 + i4;

        $i49 = i10 * $i48;

        i81 = i2 + $i49;

        $i50 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i80 = i81 + $i50;

     label22:
        $r17 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[fillDown] position: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id: ");

        $l51 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l51);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" childLeft: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i81);

        $r25 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" childTop: ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i79);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column: ");

        $i52 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column>;

        $r21 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" childHeight:");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r17, $r22);

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i81, i79, i80, i19);

        i20 = 0;

     label23:
        if i20 >= i12 goto label26;

        $z8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z8 == 0 goto label24;

        $i61 = i10 - i20;

        goto label25;

     label24:
        $i61 = i10 + i20;

     label25:
        i21 = $i61;

        $r27 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i63 = virtualinvoke r3.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int getMarginBelow(int)>(i20);

        $i64 = i19 + $i63;

        $r27[i21] = $i64;

        i20 = i20 + 1;

        goto label23;

     label26:
        $l53 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $l56 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: long mFocusedChildIdToScrollIntoView>;

        $b54 = $l53 cmp $l56;

        if $b54 != 0 goto label27;

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

     label27:
        i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getNextColumnDown()>();

        i11 = i11 + 1;

        goto label01;

     label28:
        i82 = 0;

        i83 = 0;

     label29:
        $i31 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i83 >= $i31 goto label33;

        $z3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z3 == 0 goto label30;

        $i36 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i37 = i83 + 1;

        $i35 = $i36 - $i37;

        goto label31;

     label30:
        $i35 = i83;

     label31:
        i84 = $i35;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i34 = $r5[i84];

        if $i34 <= i82 goto label32;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i82 = $r4[i84];

     label32:
        i83 = i83 + 1;

        goto label29;

     label33:
        $i32 = i82 - i8;

        return $i32;
    }

    final int getNextColumnUp()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        boolean $z0;
        int[] $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 = -1;

        i1 = -2147483648;

        i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i3 = i2 - 1;

     label1:
        if i3 < 0 goto label5;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z0 == 0 goto label2;

        $i6 = i3 + 1;

        $i7 = i2 - $i6;

        goto label3;

     label2:
        $i7 = i3;

     label3:
        i4 = $i7;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        i5 = $r1[i4];

        if i5 <= i1 goto label4;

        i1 = i5;

        i0 = i4;

     label4:
        i3 = i3 + -1;

        goto label1;

     label5:
        return i0;
    }

    final com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord getNextRecordUp(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r1, $r4;
        android.support.v4.util.SparseArrayCompat $r2, $r5;
        java.lang.Object $r3;
        boolean $z0, $z1;
        int[] $r6, $r7, $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r10;
        java.lang.String $r15;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $r3 = virtualinvoke $r2.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r1 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r3;

        if r1 == null goto label01;

        $i16 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if $i16 == i1 goto label03;

     label01:
        $i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i1 <= $i9 goto label02;

        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span larger than column count! Span:");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ColumnCount:");

        $i15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label02:
        $r4 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r1 = $r4;

        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i1;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r5.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i0, r1);

     label03:
        i2 = -1;

        i3 = -2147483648;

        i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z1 == 0 goto label10;

        i5 = i1 - 1;

     label04:
        if i5 >= i4 goto label09;

        i6 = 2147483647;

        i7 = i5;

     label05:
        $i14 = i5 - i1;

        if i7 <= $i14 goto label07;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        i8 = $r8[i7];

        if i8 >= i6 goto label06;

        i6 = i8;

     label06:
        i7 = i7 + -1;

        goto label05;

     label07:
        if i6 <= i3 goto label08;

        i3 = i6;

        i2 = i5;

     label08:
        i5 = i5 + 1;

        goto label04;

     label09:
        goto label16;

     label10:
        i17 = i4 - i1;

     label11:
        if i17 < 0 goto label16;

        i18 = 2147483647;

        i19 = i17;

     label12:
        $i13 = i17 + i1;

        if i19 >= $i13 goto label14;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        i20 = $r7[i19];

        if i20 >= i18 goto label13;

        i18 = i20;

     label13:
        i19 = i19 + 1;

        goto label12;

     label14:
        if i18 <= i3 goto label15;

        i3 = i18;

        i2 = i17;

     label15:
        i17 = i17 + -1;

        goto label11;

     label16:
        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i2;

        i21 = 0;

     label17:
        if i21 >= i1 goto label20;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z0 == 0 goto label18;

        $i11 = i2 - i21;

        goto label19;

     label18:
        $i11 = i2 + i21;

     label19:
        i22 = $i11;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        $i10 = $r6[i22];

        $i12 = $i10 - i3;

        virtualinvoke r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void setMarginBelow(int,int)>(i21, $i12);

        i21 = i21 + 1;

        goto label17;

     label20:
        return r1;
    }

    final int getNextColumnDown()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        boolean $z0;
        int[] $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 = 2147483647;

        i1 = 0;

        i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i3 = 0;

     label1:
        if i3 >= i2 goto label5;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z0 == 0 goto label2;

        $i6 = i3 + 1;

        $i7 = i2 - $i6;

        goto label3;

     label2:
        $i7 = i3;

     label3:
        i4 = $i7;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i5 = $r1[i4];

        if i5 >= i0 goto label4;

        i0 = i5;

        i1 = i4;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return i1;
    }

    final com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord getNextRecordDown(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord r1, $r4;
        android.support.v4.util.SparseArrayCompat $r2, $r5;
        java.lang.Object $r3;
        boolean $z0, $z1;
        int[] $r6, $r7, $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15;
        java.lang.IllegalStateException $r10;
        java.lang.String $r14;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        $r3 = virtualinvoke $r2.<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r1 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord) $r3;

        if r1 == null goto label01;

        $i18 = r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span>;

        if $i18 == i1 goto label03;

     label01:
        $i9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        if i1 <= $i9 goto label02;

        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span larger than column count! Span:");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ColumnCount:");

        $i17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label02:
        $r4 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord;

        specialinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$1)>(null);

        r1 = $r4;

        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int span> = i1;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r5.<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>(i0, r1);

     label03:
        i2 = -1;

        i3 = 2147483647;

        i4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z0 == 0 goto label10;

        i5 = i4 - 1;

     label04:
        $i15 = i1 - 1;

        if i5 < $i15 goto label09;

        i6 = -2147483648;

        i7 = i5;

     label05:
        $i16 = i5 - i1;

        if i7 <= $i16 goto label07;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i8 = $r8[i7];

        if i8 <= i6 goto label06;

        i6 = i8;

     label06:
        i7 = i7 + -1;

        goto label05;

     label07:
        if i6 >= i3 goto label08;

        i3 = i6;

        i2 = i5;

     label08:
        i5 = i5 + -1;

        goto label04;

     label09:
        goto label16;

     label10:
        i19 = 0;

     label11:
        $i10 = i4 - i1;

        if i19 > $i10 goto label16;

        i20 = -2147483648;

        i21 = i19;

     label12:
        $i13 = i19 + i1;

        if i21 >= $i13 goto label14;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        i22 = $r7[i21];

        if i22 <= i20 goto label13;

        i20 = i22;

     label13:
        i21 = i21 + 1;

        goto label12;

     label14:
        if i20 >= i3 goto label15;

        i3 = i20;

        i2 = i19;

     label15:
        i19 = i19 + 1;

        goto label11;

     label16:
        r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: int column> = i2;

        i23 = 0;

     label17:
        if i23 >= i1 goto label20;

        $z1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mIsRtlLayout>;

        if $z1 == 0 goto label18;

        $i14 = i2 - i23;

        goto label19;

     label18:
        $i14 = i2 + i23;

     label19:
        i24 = $i14;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        $i12 = $r6[i24];

        $i11 = i3 - $i12;

        virtualinvoke r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutRecord: void setMarginAbove(int,int)>(i23, $i11);

        i23 = i23 + 1;

        goto label17;

     label20:
        return r1;
    }

    private int getItemWidth(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getWidth()>();

        $i3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingRight()>();

        $i10 = $i4 - $i5;

        $i8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i7 = $i6 - 1;

        $i9 = $i8 * $i7;

        $i12 = $i10 - $i9;

        $i11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i1 = $i12 / $i11;

        $i15 = i1 * i0;

        $i14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i13 = i0 - 1;

        $i16 = $i14 * $i13;

        $i17 = $i15 + $i16;

        return $i17;
    }

    final android.view.View obtainView(int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i3, i4, i5, $i8;
        java.lang.Object r1, $r13;
        android.view.View r2, r4;
        long l2, $l6;
        com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair r3;
        android.view.ViewGroup$LayoutParams r5, $r18, $r21, $r22;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r6, $r23;
        com.android.deskclock.widget.sgv.GridAdapter $r7, $r8, $r9, $r14, $r15;
        java.lang.Long $r10;
        java.util.Map $r11;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r12;
        android.view.ViewParent $r16;
        com.android.deskclock.widget.sgv.ReorderHelper $r17, $r19, $r20;
        boolean $z0, $z1, $z2;
        byte $b7;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        r1 = virtualinvoke $r7.<com.android.deskclock.widget.sgv.GridAdapter: java.lang.Object getItem(int)>(i0);

        r2 = null;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        i1 = virtualinvoke $r8.<com.android.deskclock.widget.sgv.GridAdapter: int getItemViewType(java.lang.Object,int)>(r1, i0);

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        l2 = virtualinvoke $r9.<com.android.deskclock.widget.sgv.GridAdapter: long getItemId(java.lang.Object,int)>(r1, i0);

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r3 = (com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair) $r13;

        if r3 == null goto label01;

        r2 = r3.<com.android.deskclock.widget.sgv.StaggeredGridView$ViewRectPair: android.view.View view>;

     label01:
        if r2 == null goto label02;

        $r21 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z2 = $r21 instanceof com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        if $z2 == 0 goto label02;

        $r22 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r23 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r22;

        $i8 = $r23.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int viewType>;

        goto label03;

     label02:
        $i8 = -1;

     label03:
        i3 = $i8;

        if r2 == null goto label04;

        if i3 == i1 goto label06;

     label04:
        if r2 == null goto label05;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void recycleView(android.view.View)>(r2);

     label05:
        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        r2 = virtualinvoke $r12.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: android.view.View getScrapView(int)>(i1);

     label06:
        $r14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        i4 = virtualinvoke $r14.<com.android.deskclock.widget.sgv.GridAdapter: int getItemColumnSpan(java.lang.Object,int)>(r1, i0);

        i5 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getItemWidth(int)>(i4);

        $r15 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        r4 = virtualinvoke $r15.<com.android.deskclock.widget.sgv.GridAdapter: android.view.View getView(java.lang.Object,int,android.view.View,android.view.ViewGroup,int)>(r1, i0, r2, r0, i5);

        r5 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r16 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        if $r16 == r0 goto label09;

        if r5 != null goto label07;

        r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateDefaultLayoutParams()>();

        goto label08;

     label07:
        $z1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        if $z1 != 0 goto label08;

        r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

     label08:
        virtualinvoke r4.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

     label09:
        $r18 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r18;

        r6.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position> = i0;

        r6.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int viewType> = i1;

        r6.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id> = l2;

        r6.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span> = i4;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 == 0 goto label10;

        $r17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $l6 = virtualinvoke $r17.<com.android.deskclock.widget.sgv.ReorderHelper: long getDraggedChildId()>();

        $b7 = $l6 cmp l2;

        if $b7 != 0 goto label10;

        $r20 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r20.<com.android.deskclock.widget.sgv.ReorderHelper: void updateDraggedChildView(android.view.View)>(r4);

        $r19 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r19.<com.android.deskclock.widget.sgv.ReorderHelper: void updateDraggedOverChildView(android.view.View)>(r4);

     label10:
        return r4;
    }

    final android.view.View obtainView(int, android.view.View)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, $i5, $i8;
        android.view.View r1, r2, r4, $r15;
        java.lang.Object r3;
        android.view.ViewGroup$LayoutParams r5, $r9, $r22;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r6, $r16, $r21;
        com.android.deskclock.widget.sgv.GridAdapter $r7, $r8, $r10, $r11, $r17, $r18;
        com.android.deskclock.widget.sgv.ReorderHelper $r12, $r13, $r14;
        boolean $z0, $z1;
        byte $b6;
        long $l7, l9;
        android.view.ViewParent $r19;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams $r20, r23;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        r2 = virtualinvoke $r6.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: android.view.View getTransientStateView(int)>(i0);

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        r3 = virtualinvoke $r7.<com.android.deskclock.widget.sgv.GridAdapter: java.lang.Object getItem(int)>(i0);

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        i1 = virtualinvoke $r8.<com.android.deskclock.widget.sgv.GridAdapter: int getItemViewType(java.lang.Object,int)>(r3, i0);

        if r2 != null goto label8;

        if r1 == null goto label1;

        $r22 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r20 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r22;

        $i8 = $r20.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int viewType>;

        goto label2;

     label1:
        $i8 = -1;

     label2:
        i2 = $i8;

        if i2 != i1 goto label3;

        $r15 = r1;

        goto label4;

     label3:
        $r16 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        $r15 = virtualinvoke $r16.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: android.view.View getScrapView(int)>(i1);

     label4:
        r4 = $r15;

        $r17 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        i3 = virtualinvoke $r17.<com.android.deskclock.widget.sgv.GridAdapter: int getItemColumnSpan(java.lang.Object,int)>(r3, i0);

        i4 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getItemWidth(int)>(i3);

        $r18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        r2 = virtualinvoke $r18.<com.android.deskclock.widget.sgv.GridAdapter: android.view.View getView(java.lang.Object,int,android.view.View,android.view.ViewGroup,int)>(r3, i0, r4, r0, i4);

        if r2 == r4 goto label5;

        if r4 == null goto label5;

        $r21 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r21.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void addScrap(android.view.View)>(r4);

     label5:
        r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r19 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r19 == r0 goto label8;

        if r5 != null goto label6;

        r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateDefaultLayoutParams()>();

        goto label7;

     label6:
        $z1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        if $z1 != 0 goto label7;

        r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

     label7:
        virtualinvoke r2.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

     label8:
        $r9 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r23 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r9;

        r23.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position> = i0;

        r23.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int viewType> = i1;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        l9 = virtualinvoke $r10.<com.android.deskclock.widget.sgv.GridAdapter: long getItemIdFromView(android.view.View,int)>(r2, i0);

        r23.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id> = l9;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i5 = virtualinvoke $r11.<com.android.deskclock.widget.sgv.GridAdapter: int getItemColumnSpan(java.lang.Object,int)>(r3, i0);

        r23.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int span> = $i5;

        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 == 0 goto label9;

        $r12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        $l7 = virtualinvoke $r12.<com.android.deskclock.widget.sgv.ReorderHelper: long getDraggedChildId()>();

        $b6 = $l7 cmp l9;

        if $b6 != 0 goto label9;

        $r14 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r14.<com.android.deskclock.widget.sgv.ReorderHelper: void updateDraggedChildView(android.view.View)>(r2);

        $r13 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        virtualinvoke $r13.<com.android.deskclock.widget.sgv.ReorderHelper: void updateDraggedOverChildView(android.view.View)>(r2);

     label9:
        return r2;
    }

    public void setAnimationMode(com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn, com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn r1;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn;

        r2 := @parameter1: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode> = r1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode> = r2;

        return;
    }

    public com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn getAnimationInMode()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationIn mAnimationInMode>;

        return $r1;
    }

    public com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut getAnimationOutMode()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.SgvAnimationHelper$AnimationOut mAnimationOutMode>;

        return $r1;
    }

    public com.android.deskclock.widget.sgv.GridAdapter getAdapter()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.GridAdapter $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        return $r1;
    }

    public void setAdapter(com.android.deskclock.widget.sgv.GridAdapter)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.GridAdapter r1, $r2, $r6;
        boolean $z0, $z1;
        com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver $r3, $r5;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r4;
        int $i0, $i1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.GridAdapter;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        if $r2 == null goto label1;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver mObserver>;

        virtualinvoke $r6.<com.android.deskclock.widget.sgv.GridAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r5);

     label1:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void clearAllState()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter> = r1;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged> = 1;

        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<com.android.deskclock.widget.sgv.GridAdapter: int getCount()>();

        goto label3;

     label2:
        $i1 = 0;

     label3:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount> = $i1;

        if r1 == null goto label4;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$AdapterDataSetObserver mObserver>;

        virtualinvoke r1.<com.android.deskclock.widget.sgv.GridAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r3);

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        $i0 = virtualinvoke r1.<com.android.deskclock.widget.sgv.GridAdapter: int getViewTypeCount()>();

        virtualinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void setViewTypeCount(int)>($i0);

        $z1 = virtualinvoke r1.<com.android.deskclock.widget.sgv.GridAdapter: boolean hasStableIds()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mHasStableIds> = $z1;

        goto label5;

     label4:
        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mHasStableIds> = 0;

     label5:
        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isDragReorderingSupported()>();

        if $z0 == 0 goto label6;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateReorderStates(int)>(0);

     label6:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateEmptyStatus()>();

        return;
    }

    public void setAdapter(com.android.deskclock.widget.sgv.GridAdapter, com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.GridAdapter r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.GridAdapter;

        r2 := @parameter1: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setAdapter(com.android.deskclock.widget.sgv.GridAdapter)>(r1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = r2;

        return;
    }

    private void clearAllState()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.support.v4.util.SparseArrayCompat $r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        virtualinvoke $r1.<android.support.v4.util.SparseArrayCompat: void clear()>();

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void removeAllViews()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops> = null;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms> = null;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setSelectionToTop()>();

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        virtualinvoke $r2.<com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin: void clear()>();

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY> = 0.0F;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstChangedPosition> = 0;

        return;
    }

    public void setSelectionToTop()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = null;

        $i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setFirstPositionAndOffsets(int,int)>(0, $i0);

        return;
    }

    public int getCurrentFirstPosition()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        return $i0;
    }

    private boolean isSelectionAtTop()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState $r1, $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState>;

        $i0 = virtualinvoke $r2.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: int getAdapterPosition()>();

        if $i0 != 0 goto label3;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState>;

        $i1 = virtualinvoke $r3.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: int getVerticalOffset()>();

        $i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        if $i1 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public void setFirstPositionAndOffsets(int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition> = i0;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        if $r4 != null goto label2;

     label1:
        $i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $r2 = newarray (int)[$i2];

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops> = $r2;

        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $r3 = newarray (int)[$i3];

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms> = $r3;

     label2:
        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void calculateLayoutStartOffsets(int)>(i1);

        return;
    }

    private void restoreScrollPosition(com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState r1;
        int i0, i2, i3, i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i18, i23;
        com.android.deskclock.widget.sgv.GridAdapter $r2, $r3, $r9, $r10, $r11;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r5, $r8;
        byte $b14, $b15, $b17, $b20;
        long $l16, $l19, l21, l22;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i5 = virtualinvoke $r3.<com.android.deskclock.widget.sgv.GridAdapter: int getCount()>();

        if $i5 != 0 goto label2;

     label1:
        return;

     label2:
        $r5 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[restoreScrollPosition] ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r5, $r8);

        i0 = 0;

        i2 = virtualinvoke r1.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: int getAdapterPosition()>();

        $r9 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        i3 = virtualinvoke $r9.<com.android.deskclock.widget.sgv.GridAdapter: int getCount()>();

        i4 = 0;

     label3:
        if i4 >= 10 goto label6;

        $i9 = i2 + i4;

        if $i9 >= i3 goto label4;

        $r11 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i18 = i2 + i4;

        l21 = virtualinvoke $r11.<com.android.deskclock.widget.sgv.GridAdapter: long getItemId(int)>($i18);

        $b17 = l21 cmp -1L;

        if $b17 == 0 goto label4;

        $l19 = virtualinvoke r1.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: long getItemId()>();

        $b20 = l21 cmp $l19;

        if $b20 != 0 goto label4;

        i0 = i2 + i4;

        goto label6;

     label4:
        $i12 = i2 - i4;

        if $i12 < 0 goto label5;

        $i11 = i2 - i4;

        if $i11 >= i3 goto label5;

        $r10 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i13 = i2 - i4;

        l22 = virtualinvoke $r10.<com.android.deskclock.widget.sgv.GridAdapter: long getItemId(int)>($i13);

        $b14 = l22 cmp -1L;

        if $b14 == 0 goto label5;

        $l16 = virtualinvoke r1.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: long getItemId()>();

        $b15 = l22 cmp $l16;

        if $b15 != 0 goto label5;

        i0 = i2 - i4;

        goto label6;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        $i8 = virtualinvoke r1.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: int getVerticalOffset()>();

        $i7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        i23 = $i8 - $i7;

        if i0 != 0 goto label7;

        $i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        i23 = i23 + $i10;

     label7:
        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void setFirstPositionAndOffsets(int,int)>(i0, i23);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = null;

        return;
    }

    public com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState getScrollState()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams r2;
        int i0, $i1, $i2, $i3, $i5, $i6;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState $r4;
        long $l4;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams) $r3;

        $i1 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position>;

        if $i1 != 0 goto label2;

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i6 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        $i2 = $i5 - $i6;

        goto label3;

     label2:
        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

     label3:
        i0 = $i2;

        $r4 = new com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState;

        $l4 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: long id>;

        $i3 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: int position>;

        specialinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: void <init>(long,int,int)>($l4, $i3, i0);

        return $r4;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        $i5 = $i3 - $i4;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i2, $i5);

        $z1 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean scrollToChildRect(android.graphics.Rect,boolean)>(r2, z0);

        return $z1;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.graphics.Rect r1;
        boolean z0, z1, $z2;
        int i0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>(r1);

        if i0 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z1 = $z2;

        if z1 == 0 goto label3;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void scrollBy(int,int)>(0, i0);

     label3:
        return z1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, $i4;
        android.view.View r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener $r2, $r6;
        boolean $z0;
        android.graphics.Rect $r3, $r4, $r5;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener mOnSizeChangedListener>;

        if $r2 == null goto label1;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener mOnSizeChangedListener>;

        interfaceinvoke $r6.<com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

     label1:
        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View findFocus()>();

        if null == r1 goto label2;

        if r0 != r1 goto label3;

     label2:
        return;

     label3:
        $z0 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>(r1, 0, i3);

        if $z0 == 0 goto label4;

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r3);

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r4);

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        $i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r5);

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void scrollBy(int,int)>(0, $i4);

     label4:
        return;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        $i3 = $i2 + i0;

        $i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        if $i3 < $i4 goto label1;

        $r5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.graphics.Rect mTempRect>;

        $i5 = $r5.<android.graphics.Rect: int top>;

        $i6 = $i5 - i0;

        $i7 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        $i8 = $i7 + i1;

        if $i6 > $i8 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int computeVerticalScrollExtent()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        android.view.View r1, r2;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if i0 <= 0 goto label4;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label3;

        $i6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i7 = i0 + $i6;

        $i9 = $i7 - 1;

        $i8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i1 = $i9 / $i8;

        i2 = i1 * 100;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        i4 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if i4 <= 0 goto label1;

        $i14 = i3 * 100;

        $i16 = $i14 / i4;

        i2 = i2 + $i16;

     label1:
        $i10 = i0 - 1;

        r2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>($i10);

        i5 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i17 = virtualinvoke r2.<android.view.View: int getHeight()>();

        if i17 <= 0 goto label2;

        $i11 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $i13 = i5 - $i11;

        $i12 = $i13 * 100;

        $i15 = $i12 / i17;

        i2 = i2 - $i15;

     label2:
        return i2;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29;
        android.view.View r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        if i0 < 0 goto label7;

        if i1 <= 0 goto label7;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label3;

        r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        i4 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if i4 <= 0 goto label2;

        $i14 = i0 * 100;

        $i12 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i15 = $i14 / $i12;

        $i13 = i3 * 100;

        $i16 = $i13 / i4;

        i5 = $i15 - $i16;

        $i20 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        $i19 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i17 = $i20 + $i19;

        $i22 = $i17 - 1;

        $i18 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i6 = $i22 / $i18;

        $i23 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        $f7 = (float) $i23;

        $i21 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $f10 = (float) $i21;

        $f8 = $f7 / $f10;

        $f11 = (float) i6;

        $f9 = $f8 * $f11;

        $f12 = $f9 * 100.0F;

        i7 = (int) $f12;

        $i25 = i5 + i7;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>($i25, 0);

        if i0 != 0 goto label1;

        if i2 <= 0 goto label1;

        $i27 = i2 - i3;

        $i24 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemMargin>;

        $i26 = $i27 + $i24;

        i8 = i8 + $i26;

     label1:
        return i8;

     label2:
        goto label7;

     label3:
        i28 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        if i0 != 0 goto label4;

        i29 = 0;

        goto label6;

     label4:
        $i9 = i0 + i1;

        if $i9 != i28 goto label5;

        i29 = i28;

        goto label6;

     label5:
        $i10 = i1 / 2;

        i29 = i0 + $i10;

     label6:
        $f4 = (float) i0;

        $f2 = (float) i1;

        $f0 = (float) i29;

        $f1 = (float) i28;

        $f3 = $f0 / $f1;

        $f5 = $f2 * $f3;

        $f6 = $f4 + $f5;

        $i11 = (int) $f6;

        return $i11;

     label7:
        return i2;
    }

    protected int computeVerticalScrollRange()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i3 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        $i2 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        $i4 = $i3 + $i2;

        $i6 = $i4 - 1;

        $i5 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        i0 = $i6 / $i5;

        $i7 = i0 * 100;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 0);

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label1;

        $i8 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        if $i8 == 0 goto label2;

        $i9 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        $f0 = (float) $i9;

        $i10 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        $f1 = (float) $i10;

        $f2 = $f0 / $f1;

        $f3 = (float) i0;

        $f5 = $f2 * $f3;

        $f4 = $f5 * 100.0F;

        $i12 = (int) $f4;

        $i11 = staticinvoke <java.lang.Math: int abs(int)>($i12);

        i1 = i1 + $i11;

        goto label2;

     label1:
        i1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

     label2:
        return i1;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.graphics.Rect;

        $i5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if $i5 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getVerticalFadingEdgeLength()>();

        i2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getScrollY()>();

        i3 = i2 + i0;

        $i6 = r1.<android.graphics.Rect: int top>;

        if $i6 <= 0 goto label2;

        i2 = i2 + i1;

     label2:
        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i8 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getHeight()>();

        if $i7 >= $i8 goto label3;

        i3 = i3 - i1;

     label3:
        i4 = 0;

        $i9 = r1.<android.graphics.Rect: int bottom>;

        if $i9 <= i3 goto label5;

        $i16 = r1.<android.graphics.Rect: int top>;

        if $i16 <= i2 goto label5;

        $i15 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i15 <= i0 goto label4;

        $i17 = r1.<android.graphics.Rect: int top>;

        i4 = i2 - $i17;

        goto label7;

     label4:
        $i18 = r1.<android.graphics.Rect: int bottom>;

        i4 = i3 - $i18;

        goto label7;

     label5:
        $i10 = r1.<android.graphics.Rect: int top>;

        if $i10 >= i2 goto label7;

        $i12 = r1.<android.graphics.Rect: int bottom>;

        if $i12 >= i3 goto label7;

        $i11 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i11 <= i0 goto label6;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        i4 = i3 - $i13;

        goto label7;

     label6:
        $i14 = r1.<android.graphics.Rect: int top>;

        i4 = i2 - $i14;

     label7:
        return i4;
    }

    protected com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateDefaultLayoutParams()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        specialinvoke $r1.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: void <init>(int)>(-2);

        return $r1;
    }

    protected com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        specialinvoke $r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        return $z0;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.util.AttributeSet r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams;

        $r3 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.os.Parcelable r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$SavedState r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r4, $r5;
        com.android.deskclock.widget.sgv.GridAdapter $r6, $r7, $r8;
        long $l6;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        $r3 = new com.android.deskclock.widget.sgv.StaggeredGridView$SavedState;

        specialinvoke $r3.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r3;

        i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: int position> = i0;

        if i0 < 0 goto label1;

        $r6 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        if $r6 == null goto label1;

        $r7 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $i5 = virtualinvoke $r7.<com.android.deskclock.widget.sgv.GridAdapter: int getCount()>();

        if i0 >= $i5 goto label1;

        $r8 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        $l6 = virtualinvoke $r8.<com.android.deskclock.widget.sgv.GridAdapter: long getItemId(int)>(i0);

        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: long firstId> = $l6;

     label1:
        $i1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getChildCount()>();

        if $i1 <= 0 goto label4;

        if i0 != 0 goto label2;

        $r5 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r5.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int getPaddingTop()>();

        $i2 = $i3 - $i4;

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r4.<android.view.View: int getTop()>();

     label3:
        r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: int topOffset> = $i2;

     label4:
        return r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.os.Parcelable r1, $r3;
        com.android.deskclock.widget.sgv.StaggeredGridView$SavedState r2;
        int $i0, $i1, $i2;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState $r4;
        long $l3;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (com.android.deskclock.widget.sgv.StaggeredGridView$SavedState) r1;

        $r3 = virtualinvoke r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged> = 1;

        $i0 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: int position>;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition> = $i0;

        $r4 = new com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState;

        $l3 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: long firstId>;

        $i2 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: int position>;

        $i1 = r2.<com.android.deskclock.widget.sgv.StaggeredGridView$SavedState: int topOffset>;

        specialinvoke $r4.<com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState: void <init>(long,int,int)>($l3, $i2, $i1);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = $r4;

        virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void requestLayout()>();

        return;
    }

    public void setDropListener(com.android.deskclock.widget.sgv.StaggeredGridView$ReorderListener)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$ReorderListener r1;
        com.android.deskclock.widget.sgv.ReorderHelper $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView$ReorderListener;

        $r2 = new com.android.deskclock.widget.sgv.ReorderHelper;

        specialinvoke $r2.<com.android.deskclock.widget.sgv.ReorderHelper: void <init>(com.android.deskclock.widget.sgv.StaggeredGridView$ReorderListener,com.android.deskclock.widget.sgv.StaggeredGridView)>(r1, r0);

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper> = $r2;

        return;
    }

    public void setScrollListener(com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollListener mScrollListener> = r1;

        return;
    }

    public void setOnSizeChangedListener(com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$OnSizeChangedListener mOnSizeChangedListener> = r1;

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams $r1;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams $r2;

        r0 := @this: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    static int access$200(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mDragState>;

        return $i0;
    }

    static float access$300(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        float $f0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $f0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: float mLastTouchY>;

        return $f0;
    }

    static int access$400(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mLowerScrollBound>;

        return $i0;
    }

    static boolean access$500(com.android.deskclock.widget.sgv.StaggeredGridView, int, boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0;
        boolean z0, $z1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean trackMotionScroll(int,boolean)>(i0, z0);

        return $z1;
    }

    static int access$600(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mUpperScrollBound>;

        return $i0;
    }

    static com.android.deskclock.widget.sgv.ReorderHelper access$700(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.ReorderHelper $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.ReorderHelper mReorderHelper>;

        return $r1;
    }

    static android.os.Handler access$800(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.os.Handler mScrollHandler>;

        return $r1;
    }

    static android.animation.AnimatorSet access$1002(com.android.deskclock.widget.sgv.StaggeredGridView, android.animation.AnimatorSet)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.animation.AnimatorSet r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter1: android.animation.AnimatorSet;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.animation.AnimatorSet mCurrentRunningAnimatorSet> = r1;

        return r1;
    }

    static void access$1100(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void resetAnimationMode()>();

        return;
    }

    static java.util.Map access$1200(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: java.util.Map mChildRectsForAnimation>;

        return $r1;
    }

    static void access$1300(com.android.deskclock.widget.sgv.StaggeredGridView, android.view.View)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.view.View r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void recycleView(android.view.View)>(r1);

        return;
    }

    static java.lang.String access$1400()
    {
        java.lang.String $r0;

        $r0 = <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG>;

        return $r0;
    }

    static boolean access$1502(com.android.deskclock.widget.sgv.StaggeredGridView, boolean)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean z0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        z0 := @parameter1: boolean;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mDataChanged> = z0;

        return z0;
    }

    static int access$1602(com.android.deskclock.widget.sgv.StaggeredGridView, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter1: int;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount> = i0;

        return i0;
    }

    static com.android.deskclock.widget.sgv.GridAdapter access$1700(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.GridAdapter $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.GridAdapter mAdapter>;

        return $r1;
    }

    static int access$1802(com.android.deskclock.widget.sgv.StaggeredGridView, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter1: int;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstChangedPosition> = i0;

        return i0;
    }

    static int access$1900(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition>;

        return $i0;
    }

    static int access$1600(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mItemCount>;

        return $i0;
    }

    static int access$1902(com.android.deskclock.widget.sgv.StaggeredGridView, int)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        i0 := @parameter1: int;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mFirstPosition> = i0;

        return i0;
    }

    static com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState access$2002(com.android.deskclock.widget.sgv.StaggeredGridView, com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        r1 := @parameter1: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState;

        r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$ScrollState mCurrentScrollState> = r1;

        return r1;
    }

    static com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin access$2100(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: com.android.deskclock.widget.sgv.StaggeredGridView$RecycleBin mRecycler>;

        return $r1;
    }

    static boolean access$2200(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        boolean $z0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $z0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: boolean mHasStableIds>;

        return $z0;
    }

    static void access$2300(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void cacheChildRects()>();

        return;
    }

    static android.support.v4.util.SparseArrayCompat access$2400(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        android.support.v4.util.SparseArrayCompat $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: android.support.v4.util.SparseArrayCompat mLayoutRecords>;

        return $r1;
    }

    static int access$2500(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $i0 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int mColCount>;

        return $i0;
    }

    static int[] access$2600(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int[] $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemBottoms>;

        return $r1;
    }

    static int[] access$2700(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;
        int[] $r1;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        $r1 = r0.<com.android.deskclock.widget.sgv.StaggeredGridView: int[] mItemTops>;

        return $r1;
    }

    static void access$2800(com.android.deskclock.widget.sgv.StaggeredGridView)
    {
        com.android.deskclock.widget.sgv.StaggeredGridView r0;

        r0 := @parameter0: com.android.deskclock.widget.sgv.StaggeredGridView;

        specialinvoke r0.<com.android.deskclock.widget.sgv.StaggeredGridView: void updateEmptyStatus()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int mWindowManagerLayoutFlags> = 920;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int SCROLLING_ESTIMATED_ITEM_HEIGHT> = 100;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int TOUCH_MODE_OVERFLING> = 3;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int TOUCH_MODE_FLINGING> = 2;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int TOUCH_MODE_DRAGGING> = 1;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int TOUCH_MODE_IDLE> = 0;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int ANIMATION_DELAY_IN_MS> = 50;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int DRAG_SCROLL_RATE> = 10;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int SCROLL_HANDLER_DELAY> = 5;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int SINGLE_COL_REORDERING_AREA_SIZE> = 30;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int CHILD_TO_REORDER_AREA_RATIO> = 4;

        <com.android.deskclock.widget.sgv.StaggeredGridView: int COLUMN_COUNT_AUTO> = -1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clock-");

        $r2 = class "com/android/deskclock/widget/sgv/StaggeredGridView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.deskclock.widget.sgv.StaggeredGridView: java.lang.String TAG> = $r5;

        return;
    }
}
