class com.android.deskclock.provider.ClockDatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private static final int VERSION_5;
    private static final int VERSION_6;
    private static final int VERSION_7;
    private static final java.lang.String DEFAULT_ALARM_1;
    private static final java.lang.String DEFAULT_ALARM_2;
    static final java.lang.String DATABASE_NAME;
    static final java.lang.String OLD_ALARMS_TABLE_NAME;
    static final java.lang.String ALARMS_TABLE_NAME;
    static final java.lang.String INSTANCES_TABLE_NAME;
    static final java.lang.String CITIES_TABLE_NAME;
    private android.content.Context mContext;

    private static void createAlarmsTable(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE alarm_templates (_id INTEGER PRIMARY KEY,hour INTEGER NOT NULL, minutes INTEGER NOT NULL, daysofweek INTEGER NOT NULL, enabled INTEGER NOT NULL, vibrate INTEGER NOT NULL, label TEXT NOT NULL, ringtone TEXT, delete_after_use INTEGER NOT NULL DEFAULT 0);");

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>("Alarms Table created", $r1);

        return;
    }

    private static void createInstanceTable(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE alarm_instances (_id INTEGER PRIMARY KEY,year INTEGER NOT NULL, month INTEGER NOT NULL, day INTEGER NOT NULL, hour INTEGER NOT NULL, minutes INTEGER NOT NULL, vibrate INTEGER NOT NULL, label TEXT NOT NULL, ringtone TEXT, alarm_state INTEGER NOT NULL, alarm_id INTEGER REFERENCES alarm_templates(_id) ON UPDATE CASCADE ON DELETE CASCADE);");

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>("Instance table created", $r1);

        return;
    }

    private static void createCitiesTable(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE selected_cities (city_id TEXT PRIMARY KEY,city_name TEXT NOT NULL, timezone_name TEXT NOT NULL, timezone_offset INTEGER NOT NULL);");

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>("Cities table created", $r1);

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.deskclock.provider.ClockDatabaseHelper r0;
        android.content.Context r1;

        r0 := @this: com.android.deskclock.provider.ClockDatabaseHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, "alarms.db", null, 7);

        r0.<com.android.deskclock.provider.ClockDatabaseHelper: android.content.Context mContext> = r1;

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.deskclock.provider.ClockDatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, r3, $r26, $r29;
        java.lang.Object[] $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28;

        r0 := @this: com.android.deskclock.provider.ClockDatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        staticinvoke <com.android.deskclock.provider.ClockDatabaseHelper: void createAlarmsTable(android.database.sqlite.SQLiteDatabase)>(r1);

        staticinvoke <com.android.deskclock.provider.ClockDatabaseHelper: void createInstanceTable(android.database.sqlite.SQLiteDatabase)>(r1);

        staticinvoke <com.android.deskclock.provider.ClockDatabaseHelper: void createCitiesTable(android.database.sqlite.SQLiteDatabase)>(r1);

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>("Inserting default alarms", $r4);

        r2 = ", ";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT INTO alarm_templates (hour");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minutes");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("daysofweek");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enabled");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vibrate");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("label");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ringtone");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete_after_use");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") VALUES ");

        r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(8, 30, 31, 0, 0, \'\', NULL, 0);");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r26);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(9, 00, 96, 0, 0, \'\', NULL, 0);");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r29);

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.deskclock.provider.ClockDatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1, $i2, $i4, $i5, $i6, $i7;
        java.lang.String[] r2, $r16;
        android.database.Cursor r3;
        java.util.Calendar r4;
        com.android.deskclock.provider.Alarm r5, $r17;
        java.lang.String r6, $r13, $r20, $r21;
        com.android.deskclock.provider.AlarmInstance r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.lang.Object[] $r14, $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        long $l3;
        com.android.deskclock.provider.DaysOfWeek $r19;
        android.content.ContentValues $r22, $r25;
        android.net.Uri $r23, $r24;

        r0 := @this: com.android.deskclock.provider.ClockDatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading alarms database from version ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r13, $r15);

        if i0 > 6 goto label12;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS alarm_instances;");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS selected_cities;");

        staticinvoke <com.android.deskclock.provider.ClockDatabaseHelper: void createAlarmsTable(android.database.sqlite.SQLiteDatabase)>(r1);

        staticinvoke <com.android.deskclock.provider.ClockDatabaseHelper: void createInstanceTable(android.database.sqlite.SQLiteDatabase)>(r1);

        staticinvoke <com.android.deskclock.provider.ClockDatabaseHelper: void createCitiesTable(android.database.sqlite.SQLiteDatabase)>(r1);

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>("Copying old alarms to new table", $r14);

        $r16 = newarray (java.lang.String)[8];

        $r16[0] = "_id";

        $r16[1] = "hour";

        $r16[2] = "minutes";

        $r16[3] = "daysofweek";

        $r16[4] = "enabled";

        $r16[5] = "vibrate";

        $r16[6] = "message";

        $r16[7] = "alert";

        r2 = $r16;

        r3 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("alarms", r2, null, null, null, null, null);

        r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

     label01:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label11;

        $r17 = new com.android.deskclock.provider.Alarm;

        specialinvoke $r17.<com.android.deskclock.provider.Alarm: void <init>()>();

        r5 = $r17;

        $l3 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(0);

        r5.<com.android.deskclock.provider.Alarm: long id> = $l3;

        $i2 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(1);

        r5.<com.android.deskclock.provider.Alarm: int hour> = $i2;

        $i4 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(2);

        r5.<com.android.deskclock.provider.Alarm: int minutes> = $i4;

        $r19 = new com.android.deskclock.provider.DaysOfWeek;

        $i6 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(3);

        specialinvoke $r19.<com.android.deskclock.provider.DaysOfWeek: void <init>(int)>($i6);

        r5.<com.android.deskclock.provider.Alarm: com.android.deskclock.provider.DaysOfWeek daysOfWeek> = $r19;

        $i5 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(4);

        if $i5 != 1 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        r5.<com.android.deskclock.provider.Alarm: boolean enabled> = $z4;

        $i7 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(5);

        if $i7 != 1 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        r5.<com.android.deskclock.provider.Alarm: boolean vibrate> = $z5;

        $r20 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(6);

        r5.<com.android.deskclock.provider.Alarm: java.lang.String label> = $r20;

        r6 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(7);

        $r21 = "silent";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label06;

        $r24 = <com.android.deskclock.provider.Alarm: android.net.Uri NO_RINGTONE_URI>;

        r5.<com.android.deskclock.provider.Alarm: android.net.Uri alert> = $r24;

        goto label09;

     label06:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 == 0 goto label07;

        $r23 = null;

        goto label08;

     label07:
        $r23 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r6);

     label08:
        r5.<com.android.deskclock.provider.Alarm: android.net.Uri alert> = $r23;

     label09:
        $r22 = staticinvoke <com.android.deskclock.provider.Alarm: android.content.ContentValues createContentValues(com.android.deskclock.provider.Alarm)>(r5);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("alarm_templates", null, $r22);

        $z3 = r5.<com.android.deskclock.provider.Alarm: boolean enabled>;

        if $z3 == 0 goto label10;

        r7 = virtualinvoke r5.<com.android.deskclock.provider.Alarm: com.android.deskclock.provider.AlarmInstance createInstanceAfter(java.util.Calendar)>(r4);

        $r25 = staticinvoke <com.android.deskclock.provider.AlarmInstance: android.content.ContentValues createContentValues(com.android.deskclock.provider.AlarmInstance)>(r7);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("alarm_instances", null, $r25);

     label10:
        goto label01;

     label11:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>("Dropping old alarm table", $r18);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS alarms;");

     label12:
        return;
    }

    long fixAlarmInsert(android.content.ContentValues)
    {
        com.android.deskclock.provider.ClockDatabaseHelper r0;
        android.content.ContentValues r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.Object r3;
        long l1, l4;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r19;
        byte $b2, $b3;
        java.lang.StringBuilder $r6, $r7, $r9, $r14, $r16, $r18;
        java.lang.String $r8, $r17;
        android.database.SQLException $r10;
        java.lang.Object[] $r11;
        java.lang.Long $r12;
        java.lang.String[] $r13, $r15;
        boolean $z0;

        r0 := @this: com.android.deskclock.provider.ClockDatabaseHelper;

        r1 := @parameter0: android.content.ContentValues;

        r2 = virtualinvoke r0.<com.android.deskclock.provider.ClockDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label1:
        r3 = virtualinvoke r1.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("_id");

        if r3 == null goto label2;

        $r12 = (java.lang.Long) r3;

        l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b3 = l1 cmp -1L;

        if $b3 <= 0 goto label2;

        $r13 = newarray (java.lang.String)[1];

        $r13[0] = "_id";

        $r15 = newarray (java.lang.String)[1];

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15[0] = $r17;

        r4 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("alarm_templates", $r13, "_id = ?", $r15, null, null, null);

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<android.content.ContentValues: void putNull(java.lang.String)>("_id");

     label2:
        l4 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("alarm_templates", "ringtone", r1);

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label6;

     label4:
        $r19 := @caughtexception;

        r5 = $r19;

     label5:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r5;

     label6:
        $b2 = l4 cmp 0L;

        if $b2 >= 0 goto label7;

        $r10 = new android.database.SQLException;

        specialinvoke $r10.<android.database.SQLException: void <init>(java.lang.String)>("Failed to insert row");

        throw $r10;

     label7:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added alarm rowId = ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r8, $r11);

        return l4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void <clinit>()
    {
        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String CITIES_TABLE_NAME> = "selected_cities";

        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String INSTANCES_TABLE_NAME> = "alarm_instances";

        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String ALARMS_TABLE_NAME> = "alarm_templates";

        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String OLD_ALARMS_TABLE_NAME> = "alarms";

        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String DATABASE_NAME> = "alarms.db";

        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String DEFAULT_ALARM_2> = "(9, 00, 96, 0, 0, \'\', NULL, 0);";

        <com.android.deskclock.provider.ClockDatabaseHelper: java.lang.String DEFAULT_ALARM_1> = "(8, 30, 31, 0, 0, \'\', NULL, 0);";

        <com.android.deskclock.provider.ClockDatabaseHelper: int VERSION_7> = 7;

        <com.android.deskclock.provider.ClockDatabaseHelper: int VERSION_6> = 6;

        <com.android.deskclock.provider.ClockDatabaseHelper: int VERSION_5> = 5;

        return;
    }
}
