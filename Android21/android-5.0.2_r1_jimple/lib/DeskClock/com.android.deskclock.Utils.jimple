public class com.android.deskclock.Utils extends java.lang.Object
{
    private static final java.lang.String PARAM_LANGUAGE_CODE;
    private static final java.lang.String PARAM_VERSION;
    private static java.lang.String sCachedVersionCode;
    private static java.lang.String[] sShortWeekdays;
    public static final java.lang.String CLOCK_TYPE_DIGITAL;
    public static final java.lang.String CLOCK_TYPE_ANALOG;
    public static final java.lang.String[] BACKGROUND_SPECTRUM;

    public void <init>()
    {
        com.android.deskclock.Utils r0;

        r0 := @this: com.android.deskclock.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isKitKatOrLater()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 18 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void prepareHelpMenuItem(android.content.Context, android.view.MenuItem)
    {
        android.content.Context r0;
        android.view.MenuItem r1;
        java.lang.String r2;
        android.net.Uri r3, $r6;
        android.content.Intent r4, $r7;
        android.content.res.Resources $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.MenuItem;

        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131558535);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);

        return;

     label1:
        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        r3 = staticinvoke <com.android.deskclock.Utils: android.net.Uri uriWithAddedParameters(android.content.Context,android.net.Uri)>(r0, $r6);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", r3);

        r4 = $r7;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setFlags(int)>(276824064);

        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>(r4);

        interfaceinvoke r1.<android.view.MenuItem: void setShowAsAction(int)>(0);

        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);

        return;
    }

    private static android.net.Uri uriWithAddedParameters(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1, $r10;
        android.net.Uri$Builder r2;
        android.content.pm.PackageInfo r3;
        java.util.Locale $r4;
        java.lang.String $r5, $r7, $r8, $r12, $r13, $r15, $r21;
        android.content.pm.PackageManager $r11;
        int $i0;
        java.lang.StringBuilder $r16, $r18, $r19;
        android.content.pm.PackageManager$NameNotFoundException $r17, r22;
        java.lang.Object[] $r20;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = virtualinvoke $r4.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("hl", $r5);

        $r7 = <com.android.deskclock.Utils: java.lang.String sCachedVersionCode>;

        if $r7 != null goto label4;

     label1:
        $r11 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r12 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        r3 = virtualinvoke $r11.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r12, 0);

        $i0 = r3.<android.content.pm.PackageInfo: int versionCode>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        <com.android.deskclock.Utils: java.lang.String sCachedVersionCode> = $r13;

        $r15 = <com.android.deskclock.Utils: java.lang.String sCachedVersionCode>;

        virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("version", $r15);

     label2:
        goto label5;

     label3:
        $r17 := @caughtexception;

        r22 = $r17;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid package name for context ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void wtf(java.lang.String,java.lang.Object[])>($r21, $r20);

        goto label5;

     label4:
        $r8 = <com.android.deskclock.Utils: java.lang.String sCachedVersionCode>;

        virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("version", $r8);

     label5:
        $r10 = virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r10;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static long getTimeNow()
    {
        long $l0;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        return $l0;
    }

    public static float calculateRadiusOffset(float, float, float)
    {
        float f0, f1, f2, $f3, $f4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f2);

        $f4 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f3);

        return $f4;
    }

    public static float calculateRadiusOffset(android.content.res.Resources)
    {
        android.content.res.Resources r0;
        float f0, f1, f2, $f3;

        r0 := @parameter0: android.content.res.Resources;

        if r0 == null goto label1;

        f0 = virtualinvoke r0.<android.content.res.Resources: float getDimension(int)>(2131296291);

        f1 = virtualinvoke r0.<android.content.res.Resources: float getDimension(int)>(2131296290);

        f2 = virtualinvoke r0.<android.content.res.Resources: float getDimension(int)>(2131296292);

        $f3 = staticinvoke <com.android.deskclock.Utils: float calculateRadiusOffset(float,float,float)>(f0, f1, f2);

        return $f3;

     label1:
        return 0.0F;
    }

    public static int getPressedColorId()
    {
        return 2131427345;
    }

    public static int getGrayColorId()
    {
        return 2131427349;
    }

    public static void clearSwSharedPref(android.content.SharedPreferences)
    {
        android.content.SharedPreferences r0;
        android.content.SharedPreferences$Editor r1;
        int i0, i1;
        java.lang.String r2, $r9;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @parameter0: android.content.SharedPreferences;

        r1 = interfaceinvoke r0.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_start_time");

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_accum_time");

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_state");

        i0 = interfaceinvoke r0.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("sw_lap_num", 0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sw_lap_time_");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_lap_num");

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static void showInUseNotifications(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("notif_in_use_show");

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }

    public static void showTimesUpNotifications(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("notif_times_up_show");

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }

    public static void cancelTimesUpNotifications(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("notif_times_up_cancel");

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }

    public static long getAlarmOnQuarterHour()
    {
        java.util.Calendar r0;
        int i0, $i4, $i5;
        long l1, l2, l3;
        byte $b6, $b7;

        r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 1);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 0);

        i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(12);

        $i4 = i0 % 15;

        $i5 = 15 - $i4;

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(12, $i5);

        l1 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = l1 - l2;

        $b6 = 0L cmp l3;

        if $b6 >= 0 goto label1;

        $b7 = l3 cmp 901000L;

        if $b7 <= 0 goto label2;

     label1:
        l1 = l2 + 901000L;

     label2:
        return l1;
    }

    public static void setMidnightUpdater(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;
        java.lang.String r2;
        long l0, l1;
        android.text.format.Time r3, $r5;
        java.util.TimeZone $r4;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r2 = virtualinvoke $r4.<java.util.TimeZone: java.lang.String getID()>();

        if r0 == null goto label1;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = new android.text.format.Time;

        specialinvoke $r5.<android.text.format.Time: void <init>(java.lang.String)>(r2);

        r3 = $r5;

        virtualinvoke r3.<android.text.format.Time: void set(long)>(l0);

        $i2 = r3.<android.text.format.Time: int hour>;

        $i3 = 24 - $i2;

        $i7 = $i3 * 3600;

        $i4 = r3.<android.text.format.Time: int minute>;

        $i5 = $i4 * 60;

        $i9 = $i7 - $i5;

        $i6 = r3.<android.text.format.Time: int second>;

        $i8 = $i9 - $i6;

        $i11 = $i8 + 1;

        $i10 = $i11 * 1000;

        l1 = (long) $i10;

        virtualinvoke r0.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        virtualinvoke r0.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r1, l1);

        return;
    }

    public static void cancelMidnightUpdater(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        return;
    }

    public static void setQuarterHourUpdater(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;
        java.lang.String r2;
        long l0, $l1, $l2;
        java.util.TimeZone $r3;
        byte $b3;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r2 = virtualinvoke $r3.<java.util.TimeZone: java.lang.String getID()>();

        if r0 == null goto label1;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $l1 = staticinvoke <com.android.deskclock.Utils: long getAlarmOnQuarterHour()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = $l1 - $l2;

        $b3 = l0 cmp 1000L;

        if $b3 >= 0 goto label3;

        l0 = 1000L;

     label3:
        virtualinvoke r0.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        virtualinvoke r0.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r1, l0);

        return;
    }

    public static void cancelQuarterHourUpdater(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        return;
    }

    public static android.view.View setClockStyle(android.content.Context, android.view.View, android.view.View, java.lang.String)
    {
        android.content.Context r0;
        android.view.View r1, r2, r7;
        java.lang.String r3, r5, r6;
        android.content.SharedPreferences r4;
        android.content.res.Resources $r8;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.View;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131558402);

        r6 = interfaceinvoke r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r3, r5);

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("analog");

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(8);

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(0);

        r7 = r2;

        goto label2;

     label1:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(8);

        r7 = r1;

     label2:
        return r7;
    }

    public static void dimClockView(boolean, android.view.View)
    {
        boolean z0;
        android.view.View r0;
        android.graphics.Paint r1, $r2;
        android.graphics.PorterDuffColorFilter $r3;
        android.graphics.PorterDuff$Mode $r4;
        int $i0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: android.view.View;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>(-1);

        $r3 = new android.graphics.PorterDuffColorFilter;

        if z0 == 0 goto label1;

        $i0 = 1090519039;

        goto label2;

     label1:
        $i0 = -1056964609;

     label2:
        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        specialinvoke $r3.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r4);

        virtualinvoke r1.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r3);

        virtualinvoke r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, r1);

        return;
    }

    public static java.lang.String getNextAlarm(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.app.AlarmManager$AlarmClockInfo r2;
        long l0;
        java.util.Calendar r3;
        java.lang.Object $r4;
        android.app.AlarmManager $r5;

        r0 := @parameter0: android.content.Context;

        r1 = null;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r5 = (android.app.AlarmManager) $r4;

        r2 = virtualinvoke $r5.<android.app.AlarmManager: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock()>();

        if r2 == null goto label1;

        l0 = virtualinvoke r2.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r3.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        r1 = staticinvoke <com.android.deskclock.AlarmUtils: java.lang.String getFormattedTime(android.content.Context,java.util.Calendar)>(r0, r3);

     label1:
        return r1;
    }

    public static void refreshAlarm(android.content.Context, android.view.View)
    {
        android.content.Context r0;
        android.view.View r1, $r4;
        java.lang.String r2, $r6, $r9;
        android.widget.TextView r3;
        boolean $z0;
        java.lang.Object[] $r5, $r8;
        android.content.res.Resources $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.View;

        r2 = staticinvoke <com.android.deskclock.Utils: java.lang.String getNextAlarm(android.content.Context)>(r0);

        $r4 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131623994);

        r3 = (android.widget.TextView) $r4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        if r3 == null goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        $r6 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131558478, $r5);

        virtualinvoke r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        $r7 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r2;

        $r9 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131558554, $r8);

        virtualinvoke r3.<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>($r9);

        virtualinvoke r3.<android.widget.TextView: void setVisibility(int)>(0);

        goto label2;

     label1:
        virtualinvoke r3.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        return;
    }

    public static void updateDate(java.lang.String, java.lang.String, android.view.View)
    {
        java.lang.String r0, r1, r6, $r11, $r13, r14;
        android.view.View r2, $r9;
        java.util.Date r3, $r8;
        android.widget.TextView r4;
        java.util.Locale r5;
        java.text.SimpleDateFormat r7, $r10, $r12, r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.view.View;

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>()>();

        r3 = $r8;

        $r9 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131623993);

        r4 = (android.widget.TextView) $r9;

        if r4 == null goto label1;

        r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r6 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r5, r0);

        $r10 = new java.text.SimpleDateFormat;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r6, r5);

        r7 = $r10;

        $r11 = virtualinvoke r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        virtualinvoke r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

        virtualinvoke r4.<android.widget.TextView: void setVisibility(int)>(0);

        r14 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r5, r1);

        $r12 = new java.text.SimpleDateFormat;

        specialinvoke $r12.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r14, r5);

        r15 = $r12;

        $r13 = virtualinvoke r15.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        virtualinvoke r4.<android.widget.TextView: void setContentDescription(java.lang.CharSequence)>($r13);

     label1:
        return;
    }

    public static void setTimeFormat(android.widget.TextClock, int)
    {
        android.widget.TextClock r0;
        int i0;
        java.lang.CharSequence $r1, $r2;

        r0 := @parameter0: android.widget.TextClock;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r1 = staticinvoke <com.android.deskclock.Utils: java.lang.CharSequence get12ModeFormat(int)>(i0);

        virtualinvoke r0.<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)>($r1);

        $r2 = staticinvoke <com.android.deskclock.Utils: java.lang.CharSequence get24ModeFormat()>();

        virtualinvoke r0.<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)>($r2);

     label1:
        return;
    }

    public static java.lang.CharSequence get12ModeFormat(int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r0, r1, $r9, r10;
        android.text.SpannableString r2, $r4;
        java.util.Locale $r3;
        android.text.style.StyleSpan $r5;
        android.text.style.AbsoluteSizeSpan $r6;
        android.text.style.TypefaceSpan $r7;

        i0 := @parameter0: int;

        r0 = "hma";

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r3, r0);

        if i0 > 0 goto label1;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("a", "");

        virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

     label1:
        r10 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "\u200a");

        i1 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(97);

        if i1 != -1 goto label2;

        return r10;

     label2:
        $r4 = new android.text.SpannableString;

        specialinvoke $r4.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r10);

        r2 = $r4;

        $r5 = new android.text.style.StyleSpan;

        specialinvoke $r5.<android.text.style.StyleSpan: void <init>(int)>(0);

        $i2 = i1 + 1;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r5, i1, $i2, 33);

        $r6 = new android.text.style.AbsoluteSizeSpan;

        specialinvoke $r6.<android.text.style.AbsoluteSizeSpan: void <init>(int)>(i0);

        $i3 = i1 + 1;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, i1, $i3, 33);

        $r7 = new android.text.style.TypefaceSpan;

        specialinvoke $r7.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>("sans-serif");

        $i4 = i1 + 1;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r7, i1, $i4, 33);

        return r2;
    }

    public static java.lang.CharSequence get24ModeFormat()
    {
        java.lang.String r0, $r2;
        java.util.Locale $r1;

        r0 = "Hm";

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r1, r0);

        return $r2;
    }

    public static com.android.deskclock.worldclock.CityObj[] loadCitiesFromXml(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources r1;
        java.lang.String[] r2, r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.android.deskclock.worldclock.CityObj[] r5;
        java.lang.Object[] $r6;
        com.android.deskclock.worldclock.CityObj $r7;
        java.lang.String $r8, $r9, $r10;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131361792);

        r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131361793);

        r4 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131361794);

        i0 = lengthof r2;

        $i3 = lengthof r2;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label1;

        $i10 = lengthof r4;

        $i9 = lengthof r2;

        if $i10 == $i9 goto label2;

     label1:
        $i7 = lengthof r2;

        $i5 = lengthof r3;

        $i4 = lengthof r4;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Object[])>("City lists sizes are not the same, truncating", $r6);

     label2:
        r5 = newarray (com.android.deskclock.worldclock.CityObj)[i0];

        i1 = 0;

     label3:
        $i8 = lengthof r2;

        if i1 >= $i8 goto label4;

        $r7 = new com.android.deskclock.worldclock.CityObj;

        $r10 = r2[i1];

        $r8 = r3[i1];

        $r9 = r4[i1];

        specialinvoke $r7.<com.android.deskclock.worldclock.CityObj: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r10, $r8, $r9);

        r5[i1] = $r7;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r5;
    }

    public static java.lang.String getGMTHourOffset(java.util.TimeZone, boolean)
    {
        java.util.TimeZone r0;
        boolean z0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, $i2, $i5, $i6;
        long $l3, $l4;
        java.lang.String $r6;

        r0 := @parameter0: java.util.TimeZone;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT  ");

        i0 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>();

        if i0 >= 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label2:
        $i2 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $l3 = (long) $i2;

        $l4 = $l3 / 3600000L;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        if z0 == 0 goto label4;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i6 = $i5 / 60000;

        i1 = $i6 % 60;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        if i1 >= 10 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label4:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String getCityName(com.android.deskclock.worldclock.CityObj, com.android.deskclock.worldclock.CityObj)
    {
        com.android.deskclock.worldclock.CityObj r0, r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: com.android.deskclock.worldclock.CityObj;

        r1 := @parameter1: com.android.deskclock.worldclock.CityObj;

        $r2 = r0.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityId>;

        if $r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r3 = r0.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityName>;

        goto label3;

     label2:
        $r3 = r1.<com.android.deskclock.worldclock.CityObj: java.lang.String mCityName>;

     label3:
        return $r3;
    }

    public static int getCurrentHourColor()
    {
        int i0, $i1;
        java.util.Calendar $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(11);

        $r1 = <com.android.deskclock.Utils: java.lang.String[] BACKGROUND_SPECTRUM>;

        $r2 = $r1[i0];

        $i1 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r2);

        return $i1;
    }

    public static int getNextHourColor()
    {
        int i0, $i1, $i2;
        java.util.Calendar $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(11);

        $r1 = <com.android.deskclock.Utils: java.lang.String[] BACKGROUND_SPECTRUM>;

        if i0 >= 24 goto label1;

        $i2 = i0 + 1;

        goto label2;

     label1:
        $i2 = 1;

     label2:
        $r2 = $r1[$i2];

        $i1 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r2);

        return $i1;
    }

    public static java.lang.String[] getShortWeekdays()
    {
        java.lang.String[] r0, $r2, $r3;
        java.text.SimpleDateFormat r1, $r4;
        long l0, $l2, $l3, $l4;
        int i1;
        java.util.GregorianCalendar $r5;
        java.util.Date $r6;
        java.lang.String $r7;

        $r2 = <com.android.deskclock.Utils: java.lang.String[] sShortWeekdays>;

        if $r2 != null goto label3;

        r0 = newarray (java.lang.String)[7];

        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("EEEEE");

        r1 = $r4;

        $r5 = new java.util.GregorianCalendar;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>(int,int,int)>(2014, 6, 20);

        l0 = virtualinvoke $r5.<java.util.GregorianCalendar: long getTimeInMillis()>();

        i1 = 0;

     label1:
        if i1 >= 7 goto label2;

        $r6 = new java.util.Date;

        $l2 = (long) i1;

        $l3 = $l2 * 86400000L;

        $l4 = l0 + $l3;

        specialinvoke $r6.<java.util.Date: void <init>(long)>($l4);

        $r7 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r6);

        r0[i1] = $r7;

        i1 = i1 + 1;

        goto label1;

     label2:
        <com.android.deskclock.Utils: java.lang.String[] sShortWeekdays> = r0;

     label3:
        $r3 = <com.android.deskclock.Utils: java.lang.String[] sShortWeekdays>;

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.deskclock.Utils: java.lang.String CLOCK_TYPE_ANALOG> = "analog";

        <com.android.deskclock.Utils: java.lang.String CLOCK_TYPE_DIGITAL> = "digital";

        <com.android.deskclock.Utils: java.lang.String PARAM_VERSION> = "version";

        <com.android.deskclock.Utils: java.lang.String PARAM_LANGUAGE_CODE> = "hl";

        <com.android.deskclock.Utils: java.lang.String sCachedVersionCode> = null;

        <com.android.deskclock.Utils: java.lang.String[] sShortWeekdays> = null;

        $r0 = newarray (java.lang.String)[24];

        $r0[0] = "#212121";

        $r0[1] = "#27232e";

        $r0[2] = "#2d253a";

        $r0[3] = "#332847";

        $r0[4] = "#382a53";

        $r0[5] = "#3e2c5f";

        $r0[6] = "#442e6c";

        $r0[7] = "#393a7a";

        $r0[8] = "#2e4687";

        $r0[9] = "#235395";

        $r0[10] = "#185fa2";

        $r0[11] = "#0d6baf";

        $r0[12] = "#0277bd";

        $r0[13] = "#0d6cb1";

        $r0[14] = "#1861a6";

        $r0[15] = "#23569b";

        $r0[16] = "#2d4a8f";

        $r0[17] = "#383f84";

        $r0[18] = "#433478";

        $r0[19] = "#3d3169";

        $r0[20] = "#382e5b";

        $r0[21] = "#322b4d";

        $r0[22] = "#2c273e";

        $r0[23] = "#272430";

        <com.android.deskclock.Utils: java.lang.String[] BACKGROUND_SPECTRUM> = $r0;

        return;
    }
}
