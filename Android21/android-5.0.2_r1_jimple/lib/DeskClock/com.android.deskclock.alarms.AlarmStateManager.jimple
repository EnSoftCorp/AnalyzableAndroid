public final class com.android.deskclock.alarms.AlarmStateManager extends android.content.BroadcastReceiver
{
    private static final java.lang.String DEFAULT_SNOOZE_MINUTES;
    public static final java.lang.String CHANGE_STATE_ACTION;
    public static final java.lang.String SHOW_AND_DISMISS_ALARM_ACTION;
    private static final java.lang.String INDICATOR_ACTION;
    public static final java.lang.String ALARM_STATE_EXTRA;
    private static final java.lang.String ALARM_GLOBAL_ID_EXTRA;
    public static final java.lang.String ALARM_MANAGER_TAG;
    public static final int ALARM_FIRE_BUFFER;

    public void <init>()
    {
        com.android.deskclock.alarms.AlarmStateManager r0;

        r0 := @this: com.android.deskclock.alarms.AlarmStateManager;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public static int getGlobalIntentId(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $i0 = interfaceinvoke r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("intent.extra.alarm.global.id", -1);

        return $i0;
    }

    public static void updateGloablIntentId(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        int i0, $i1;
        android.content.SharedPreferences$Editor $r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $i1 = interfaceinvoke r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("intent.extra.alarm.global.id", -1);

        i0 = $i1 + 1;

        $r2 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("intent.extra.alarm.global.id", i0);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void updateNextAlarm(android.content.Context)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1, r5;
        android.content.ContentResolver r2;
        java.lang.String r3;
        java.util.Iterator r4;
        java.lang.String[] $r6;
        java.util.List $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.util.Calendar $r9, $r10;

        r0 := @parameter0: android.content.Context;

        r1 = null;

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r3 = "alarm_state<5";

        $r6 = newarray (java.lang.String)[0];

        $r7 = staticinvoke <com.android.deskclock.provider.AlarmInstance: java.util.List getInstances(android.content.ContentResolver,java.lang.String,java.lang.String[])>(r2, r3, $r6);

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.deskclock.provider.AlarmInstance) $r8;

        if r1 == null goto label2;

        $r9 = virtualinvoke r5.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        $r10 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        $z1 = virtualinvoke $r9.<java.util.Calendar: boolean before(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

     label2:
        r1 = r5;

     label3:
        goto label1;

     label4:
        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void registerNextAlarmWithAlarmManager(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        return;
    }

    private static void updateParentAlarm(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1, r6;
        android.content.ContentResolver r2;
        com.android.deskclock.provider.Alarm r3;
        java.util.Calendar r4, r5, $r14;
        java.lang.Long $r7;
        long $l0, $l1, $l2, $l3, $l4;
        com.android.deskclock.provider.DaysOfWeek $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r16, $r19, $r20, $r22, $r24, $r25, $r26, $r30, $r31, $r32;
        java.lang.String $r13, $r15, $r23, $r27, $r29, $r34;
        java.lang.Object[] $r18, $r21, $r28, $r33;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = r1.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        r3 = staticinvoke <com.android.deskclock.provider.Alarm: com.android.deskclock.provider.Alarm getAlarm(android.content.ContentResolver,long)>(r2, $l0);

        if r3 != null goto label1;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent has been deleted with instance: ");

        $r29 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.lang.String toString()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Object[])>($r34, $r33);

        return;

     label1:
        $r8 = r3.<com.android.deskclock.provider.Alarm: com.android.deskclock.provider.DaysOfWeek daysOfWeek>;

        $z0 = virtualinvoke $r8.<com.android.deskclock.provider.DaysOfWeek: boolean isRepeating()>();

        if $z0 != 0 goto label3;

        $z2 = r3.<com.android.deskclock.provider.Alarm: boolean deleteAfterUse>;

        if $z2 == 0 goto label2;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting parent alarm: ");

        $l3 = r3.<com.android.deskclock.provider.Alarm: long id>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>($r27, $r28);

        $l4 = r3.<com.android.deskclock.provider.Alarm: long id>;

        staticinvoke <com.android.deskclock.provider.Alarm: boolean deleteAlarm(android.content.ContentResolver,long)>(r2, $l4);

        goto label5;

     label2:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabling parent alarm: ");

        $l2 = r3.<com.android.deskclock.provider.Alarm: long id>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>($r23, $r21);

        r3.<com.android.deskclock.provider.Alarm: boolean enabled> = 0;

        staticinvoke <com.android.deskclock.provider.Alarm: boolean updateAlarm(android.content.ContentResolver,com.android.deskclock.provider.Alarm)>(r2, r3);

        goto label5;

     label3:
        r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r5 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        $z1 = virtualinvoke r4.<java.util.Calendar: boolean after(java.lang.Object)>(r5);

        if $z1 == 0 goto label4;

        r5 = r4;

     label4:
        r6 = virtualinvoke r3.<com.android.deskclock.provider.Alarm: com.android.deskclock.provider.AlarmInstance createInstanceAfter(java.util.Calendar)>(r5);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new instance for repeating alarm ");

        $l1 = r3.<com.android.deskclock.provider.Alarm: long id>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r14 = virtualinvoke r6.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        $r13 = staticinvoke <com.android.deskclock.AlarmUtils: java.lang.String getFormattedTime(android.content.Context,java.util.Calendar)>(r0, $r14);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>($r15, $r18);

        staticinvoke <com.android.deskclock.provider.AlarmInstance: com.android.deskclock.provider.AlarmInstance addInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r6);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void registerInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance,boolean)>(r0, r6, 1);

     label5:
        return;
    }

    public static android.content.Intent createStateChangeIntent(android.content.Context, java.lang.String, com.android.deskclock.provider.AlarmInstance, java.lang.Integer)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.deskclock.provider.AlarmInstance r2;
        java.lang.Integer r3;
        android.content.Intent r4;
        long $l0;
        int $i1, $i2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.deskclock.provider.AlarmInstance;

        r3 := @parameter3: java.lang.Integer;

        $l0 = r2.<com.android.deskclock.provider.AlarmInstance: long mId>;

        r4 = staticinvoke <com.android.deskclock.provider.AlarmInstance: android.content.Intent createIntent(android.content.Context,java.lang.Class,long)>(r0, class "com/android/deskclock/alarms/AlarmStateManager", $l0);

        virtualinvoke r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("change_state");

        virtualinvoke r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r1);

        $i1 = staticinvoke <com.android.deskclock.alarms.AlarmStateManager: int getGlobalIntentId(android.content.Context)>(r0);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("intent.extra.alarm.global.id", $i1);

        if r3 == null goto label1;

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("intent.extra.alarm.state", $i2);

     label1:
        return r4;
    }

    private static void scheduleInstanceStateChange(android.content.Context, java.util.Calendar, com.android.deskclock.provider.AlarmInstance, int)
    {
        android.content.Context r0;
        java.util.Calendar r1;
        com.android.deskclock.provider.AlarmInstance r2;
        int i0, $i3;
        long l1, $l2;
        android.content.Intent r3;
        android.app.PendingIntent r4;
        android.app.AlarmManager r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r11, $r18;
        java.lang.Object[] $r17;
        java.lang.Integer $r19;
        java.lang.Object $r20;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Calendar;

        r2 := @parameter2: com.android.deskclock.provider.AlarmInstance;

        i0 := @parameter3: int;

        l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling state change ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to instance ");

        $l2 = r2.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r11 = staticinvoke <com.android.deskclock.AlarmUtils: java.lang.String getFormattedTime(android.content.Context,java.util.Calendar)>(r0, r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r18, $r17);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3 = staticinvoke <com.android.deskclock.alarms.AlarmStateManager: android.content.Intent createStateChangeIntent(android.content.Context,java.lang.String,com.android.deskclock.provider.AlarmInstance,java.lang.Integer)>(r0, "ALARM_MANAGER", r2, $r19);

        $i3 = virtualinvoke r2.<com.android.deskclock.provider.AlarmInstance: int hashCode()>();

        r4 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, $i3, r3, 134217728);

        $r20 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r5 = (android.app.AlarmManager) $r20;

        $z0 = staticinvoke <com.android.deskclock.Utils: boolean isKitKatOrLater()>();

        if $z0 == 0 goto label1;

        virtualinvoke r5.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, l1, r4);

        goto label2;

     label1:
        virtualinvoke r5.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(0, l1, r4);

     label2:
        return;
    }

    private static void cancelScheduledInstance(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.app.PendingIntent r2;
        android.app.AlarmManager r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        long $l0;
        java.lang.String $r8;
        java.lang.Object[] $r9;
        int $i1;
        android.content.Intent $r10;
        java.lang.Object $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timers");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r8, $r9);

        $i1 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: int hashCode()>();

        $r10 = staticinvoke <com.android.deskclock.alarms.AlarmStateManager: android.content.Intent createStateChangeIntent(android.content.Context,java.lang.String,com.android.deskclock.provider.AlarmInstance,java.lang.Integer)>(r0, "ALARM_MANAGER", r1, null);

        r2 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, $i1, $r10, 134217728);

        $r11 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r3 = (android.app.AlarmManager) $r11;

        virtualinvoke r3.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r2);

        return;
    }

    public static void setSilentState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        long $l0;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        java.util.Calendar $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting silent state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r6, $r7);

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 0;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void clearNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r8 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getLowNotificationTime()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r8, r1, 1);

        return;
    }

    public static void setLowNotificationState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        long $l0;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        java.util.Calendar $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting low notification state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r6, $r7);

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 1;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void showLowPriorityNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r8 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getHighNotificationTime()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r8, r1, 3);

        return;
    }

    public static void setHideNotificationState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        long $l0;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        java.util.Calendar $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting hide notification state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r6, $r7);

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 2;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void clearNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r8 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getHighNotificationTime()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r8, r1, 3);

        return;
    }

    public static void setHighNotificationState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        long $l0;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        java.util.Calendar $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting high notification state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r6, $r7);

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 3;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void showHighPriorityNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r8 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r8, r1, 5);

        return;
    }

    public static void setFiredState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.ContentResolver r2;
        java.util.Calendar r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        long $l0;
        java.lang.String $r7;
        java.lang.Object[] $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting fire state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r7, $r8);

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 5;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmService: void startAlarm(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        r3 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getTimeout(android.content.Context)>(r0);

        if r3 == null goto label1;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, r3, r1, 6);

     label1:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

        return;
    }

    public static void setSnoozeState(android.content.Context, com.android.deskclock.provider.AlarmInstance, boolean)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        boolean z0;
        java.lang.String r2, r4, $r11, $r13, $r17;
        int i0;
        java.util.Calendar r3, $r16;
        android.content.SharedPreferences $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        long $l1;
        java.lang.Object[] $r12, $r19;
        android.content.ContentResolver $r14;
        android.content.res.Resources $r15;
        java.lang.CharSequence $r18;
        java.lang.Integer $r20;
        android.widget.Toast $r21;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        z0 := @parameter2: boolean;

        staticinvoke <com.android.deskclock.alarms.AlarmService: void stopAlarm(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        r2 = interfaceinvoke $r5.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("snooze_duration", "10");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r3.<java.util.Calendar: void add(int,int)>(12, i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting snoozed state to instance ");

        $l1 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r11 = staticinvoke <com.android.deskclock.AlarmUtils: java.lang.String getFormattedTime(android.content.Context,java.util.Calendar)>(r0, r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r13, $r12);

        virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: void setAlarmTime(java.util.Calendar)>(r3);

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 4;

        $r14 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>($r14, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void showSnoozeNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r16 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r16, r1, 5);

        if z0 == 0 goto label1;

        $r15 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r18 = virtualinvoke $r15.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689473, i0);

        $r17 = interfaceinvoke $r18.<java.lang.CharSequence: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19[0] = $r20;

        r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r17, $r19);

        $r21 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, r4, 1);

        virtualinvoke $r21.<android.widget.Toast: void show()>();

     label1:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

        return;
    }

    public static java.lang.String getSnoozedMinutes(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r6;
        int i0;
        android.content.SharedPreferences $r2;
        android.content.res.Resources $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("snooze_duration", "10");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131689472, i0, $r4);

        return $r6;
    }

    public static void setMissedState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        long $l0;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        java.lang.Long $r8;
        java.util.Calendar $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting missed state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r6, $r7);

        staticinvoke <com.android.deskclock.alarms.AlarmService: void stopAlarm(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r8 = r1.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        if $r8 == null goto label1;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateParentAlarm(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

     label1:
        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState> = 6;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean updateInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void showMissedNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r9 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getMissedTimeToLive()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r9, r1, 7);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

        return;
    }

    public static void setDismissState(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        long $l0, $l1;
        java.lang.String $r5;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        android.content.ContentResolver $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting dismissed state to instance ");

        $l0 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r5, $r6);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void unregisterInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r7 = r1.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        if $r7 == null goto label1;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateParentAlarm(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

     label1:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l1 = r1.<com.android.deskclock.provider.AlarmInstance: long mId>;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean deleteInstance(android.content.ContentResolver,long)>($r8, $l1);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

        return;
    }

    public static void unregisterInstance(android.content.Context, com.android.deskclock.provider.AlarmInstance)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        staticinvoke <com.android.deskclock.alarms.AlarmService: void stopAlarm(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void clearNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void cancelScheduledInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        return;
    }

    public static void registerInstance(android.content.Context, com.android.deskclock.provider.AlarmInstance, boolean)
    {
        android.content.Context r0;
        com.android.deskclock.provider.AlarmInstance r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10;
        java.util.Calendar r2, r3, r4, r5, r6, r7, $r9, r15;
        com.android.deskclock.provider.Alarm r8;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Date $r10;
        java.lang.Long $r11, $r12;
        long $l5;
        java.lang.Object[] $r13;
        android.content.ContentResolver r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r3 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        r4 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getTimeout(android.content.Context)>(r0);

        r5 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getLowNotificationTime()>();

        r6 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getHighNotificationTime()>();

        r7 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getMissedTimeToLive()>();

        $i0 = r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState>;

        if $i0 != 7 goto label01;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Object[])>("Alarm Instance is dismissed, but never deleted", $r13);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setDismissState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        return;

     label01:
        $i2 = r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState>;

        if $i2 != 5 goto label05;

        if r4 == null goto label02;

        $z10 = virtualinvoke r2.<java.util.Calendar: boolean after(java.lang.Object)>(r4);

        if $z10 == 0 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z1 = $z8;

        if z1 != 0 goto label04;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setFiredState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        return;

     label04:
        goto label07;

     label05:
        $i1 = r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState>;

        if $i1 != 6 goto label07;

        $z7 = virtualinvoke r2.<java.util.Calendar: boolean before(java.lang.Object)>(r3);

        if $z7 == 0 goto label07;

        $r11 = r1.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        if $r11 != null goto label06;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setDismissState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        return;

     label06:
        r14 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = r1.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        $l5 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        r8 = staticinvoke <com.android.deskclock.provider.Alarm: com.android.deskclock.provider.Alarm getAlarm(android.content.ContentResolver,long)>(r14, $l5);

        r8.<com.android.deskclock.provider.Alarm: boolean enabled> = 1;

        staticinvoke <com.android.deskclock.provider.Alarm: boolean updateAlarm(android.content.ContentResolver,com.android.deskclock.provider.Alarm)>(r14, r8);

     label07:
        $z3 = virtualinvoke r2.<java.util.Calendar: boolean after(java.lang.Object)>(r7);

        if $z3 == 0 goto label08;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setDismissState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        goto label16;

     label08:
        $z2 = virtualinvoke r2.<java.util.Calendar: boolean after(java.lang.Object)>(r3);

        if $z2 == 0 goto label11;

        r15 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke r15.<java.util.Calendar: void setTime(java.util.Date)>($r10);

        virtualinvoke r15.<java.util.Calendar: void add(int,int)>(13, 15);

        $z6 = virtualinvoke r2.<java.util.Calendar: boolean before(java.lang.Object)>(r15);

        if $z6 == 0 goto label09;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setFiredState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        goto label10;

     label09:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setMissedState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

     label10:
        goto label16;

     label11:
        $i3 = r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState>;

        if $i3 != 4 goto label12;

        staticinvoke <com.android.deskclock.alarms.AlarmNotifications: void showSnoozeNotification(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        $r9 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void scheduleInstanceStateChange(android.content.Context,java.util.Calendar,com.android.deskclock.provider.AlarmInstance,int)>(r0, $r9, r1, 5);

        goto label16;

     label12:
        $z4 = virtualinvoke r2.<java.util.Calendar: boolean after(java.lang.Object)>(r6);

        if $z4 == 0 goto label13;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setHighNotificationState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        goto label16;

     label13:
        $z5 = virtualinvoke r2.<java.util.Calendar: boolean after(java.lang.Object)>(r5);

        if $z5 == 0 goto label15;

        $i4 = r1.<com.android.deskclock.provider.AlarmInstance: int mAlarmState>;

        if $i4 != 2 goto label14;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setHideNotificationState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        goto label16;

     label14:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setLowNotificationState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

        goto label16;

     label15:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setSilentState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r1);

     label16:
        if z0 == 0 goto label17;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

     label17:
        return;
    }

    public static void deleteAllInstances(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l1;
        android.content.ContentResolver r1, $r6;
        java.util.List r2;
        java.util.Iterator r3;
        com.android.deskclock.provider.AlarmInstance r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <com.android.deskclock.provider.AlarmInstance: java.util.List getInstancesByAlarmId(android.content.ContentResolver,long)>(r1, l0);

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.deskclock.provider.AlarmInstance) $r5;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void unregisterInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r0, r4);

        $r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l1 = r4.<com.android.deskclock.provider.AlarmInstance: long mId>;

        staticinvoke <com.android.deskclock.provider.AlarmInstance: boolean deleteInstance(android.content.ContentResolver,long)>($r6, $l1);

        goto label1;

     label2:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

        return;
    }

    public static void fixAlarmInstances(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        java.util.Iterator r2;
        com.android.deskclock.provider.AlarmInstance r3;
        java.lang.String[] $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = newarray (java.lang.String)[0];

        $r5 = staticinvoke <com.android.deskclock.provider.AlarmInstance: java.util.List getInstances(android.content.ContentResolver,java.lang.String,java.lang.String[])>(r1, null, $r4);

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.deskclock.provider.AlarmInstance) $r6;

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void registerInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance,boolean)>(r0, r3, 0);

        goto label1;

     label2:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void updateNextAlarm(android.content.Context)>(r0);

        return;
    }

    public void setAlarmState(android.content.Context, com.android.deskclock.provider.AlarmInstance, int)
    {
        com.android.deskclock.alarms.AlarmStateManager r0;
        android.content.Context r1;
        com.android.deskclock.provider.AlarmInstance r2;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object[] $r7;

        r0 := @this: com.android.deskclock.alarms.AlarmStateManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.deskclock.provider.AlarmInstance;

        i0 := @parameter2: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label06;
            case 5: goto label05;
            case 6: goto label07;
            case 7: goto label08;
            default: goto label09;
        };

     label01:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setSilentState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label02:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setLowNotificationState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label03:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setHideNotificationState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label04:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setHighNotificationState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label05:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setFiredState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label06:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setSnoozeState(android.content.Context,com.android.deskclock.provider.AlarmInstance,boolean)>(r1, r2, 1);

        goto label10;

     label07:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setMissedState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label08:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setDismissState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r2);

        goto label10;

     label09:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to change to unknown alarm state: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Object[])>($r6, $r7);

     label10:
        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.deskclock.alarms.AlarmStateManager r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.content.BroadcastReceiver$PendingResult r3;
        android.os.PowerManager$WakeLock r4;
        java.lang.String $r5, $r6;
        boolean $z0;
        com.android.deskclock.alarms.AlarmStateManager$1 $r7;

        r0 := @this: com.android.deskclock.alarms.AlarmStateManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r5 = "indicator";

        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = virtualinvoke r0.<com.android.deskclock.alarms.AlarmStateManager: android.content.BroadcastReceiver$PendingResult goAsync()>();

        r4 = staticinvoke <com.android.deskclock.AlarmAlertWakeLock: android.os.PowerManager$WakeLock createPartialWakeLock(android.content.Context)>(r1);

        virtualinvoke r4.<android.os.PowerManager$WakeLock: void acquire()>();

        $r7 = new com.android.deskclock.alarms.AlarmStateManager$1;

        specialinvoke $r7.<com.android.deskclock.alarms.AlarmStateManager$1: void <init>(com.android.deskclock.alarms.AlarmStateManager,android.content.Context,android.content.Intent,android.content.BroadcastReceiver$PendingResult,android.os.PowerManager$WakeLock)>(r0, r1, r2, r3, r4);

        staticinvoke <com.android.deskclock.AsyncHandler: void post(java.lang.Runnable)>($r7);

        return;
    }

    private void handleIntent(android.content.Context, android.content.Intent)
    {
        com.android.deskclock.alarms.AlarmStateManager r0;
        android.content.Context r1;
        android.content.Intent r2, r36;
        java.lang.String r3, $r9, $r11, $r12, $r29, $r32;
        android.net.Uri r4, r34;
        com.android.deskclock.provider.AlarmInstance r5, r35;
        int i0, i1, i2;
        java.lang.StringBuilder $r6, $r7, $r8, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r33;
        java.lang.Object[] $r10, $r30, $r31;
        boolean $z0, $z1;
        long $l3, $l4, $l5, l6;
        android.content.ContentResolver $r13, $r19;
        java.lang.Long $r14, $r15;

        r0 := @this: com.android.deskclock.alarms.AlarmStateManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AlarmStateManager received intent ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>($r9, $r10);

        $r11 = "change_state";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label5;

        r4 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        $r19 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l5 = staticinvoke <com.android.deskclock.provider.AlarmInstance: long getId(android.net.Uri)>(r4);

        r5 = staticinvoke <com.android.deskclock.provider.AlarmInstance: com.android.deskclock.provider.AlarmInstance getInstance(android.content.ContentResolver,long)>($r19, $l5);

        if r5 != null goto label1;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not change state for unknown instance: ");

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Object[])>($r32, $r31);

        return;

     label1:
        i0 = staticinvoke <com.android.deskclock.alarms.AlarmStateManager: int getGlobalIntentId(android.content.Context)>(r1);

        i1 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("intent.extra.alarm.global.id", -1);

        i2 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("intent.extra.alarm.state", -1);

        if i1 == i0 goto label2;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring old Intent. IntentId: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" GlobalId: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AlarmState: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void i(java.lang.String,java.lang.Object[])>($r29, $r30);

        return;

     label2:
        if i2 < 0 goto label3;

        virtualinvoke r0.<com.android.deskclock.alarms.AlarmStateManager: void setAlarmState(android.content.Context,com.android.deskclock.provider.AlarmInstance,int)>(r1, r5, i2);

        goto label4;

     label3:
        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void registerInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance,boolean)>(r1, r5, 1);

     label4:
        goto label8;

     label5:
        $r12 = "show_and_dismiss_alarm";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label8;

        r34 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        $r13 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l3 = staticinvoke <com.android.deskclock.provider.AlarmInstance: long getId(android.net.Uri)>(r34);

        r35 = staticinvoke <com.android.deskclock.provider.AlarmInstance: com.android.deskclock.provider.AlarmInstance getInstance(android.content.ContentResolver,long)>($r13, $l3);

        $r14 = r35.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        if $r14 != null goto label6;

        $l4 = -1L;

        goto label7;

     label6:
        $r15 = r35.<com.android.deskclock.provider.AlarmInstance: java.lang.Long mAlarmId>;

        $l4 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

     label7:
        l6 = $l4;

        r36 = staticinvoke <com.android.deskclock.provider.Alarm: android.content.Intent createIntent(android.content.Context,java.lang.Class,long)>(r1, class "com/android/deskclock/DeskClock", l6);

        virtualinvoke r36.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("deskclock.select.tab", 0);

        virtualinvoke r36.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("deskclock.scroll.to.alarm", l6);

        virtualinvoke r36.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r36);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void setDismissState(android.content.Context,com.android.deskclock.provider.AlarmInstance)>(r1, r35);

     label8:
        return;
    }

    public static android.content.Intent createIndicatorIntent(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent $r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/deskclock/alarms/AlarmStateManager");

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("indicator");

        return $r2;
    }

    static void access$000(com.android.deskclock.alarms.AlarmStateManager, android.content.Context, android.content.Intent)
    {
        com.android.deskclock.alarms.AlarmStateManager r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @parameter0: com.android.deskclock.alarms.AlarmStateManager;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.content.Intent;

        specialinvoke r0.<com.android.deskclock.alarms.AlarmStateManager: void handleIntent(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.deskclock.alarms.AlarmStateManager: int ALARM_FIRE_BUFFER> = 15;

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String ALARM_MANAGER_TAG> = "ALARM_MANAGER";

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String ALARM_GLOBAL_ID_EXTRA> = "intent.extra.alarm.global.id";

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String ALARM_STATE_EXTRA> = "intent.extra.alarm.state";

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String INDICATOR_ACTION> = "indicator";

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String SHOW_AND_DISMISS_ALARM_ACTION> = "show_and_dismiss_alarm";

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String CHANGE_STATE_ACTION> = "change_state";

        <com.android.deskclock.alarms.AlarmStateManager: java.lang.String DEFAULT_SNOOZE_MINUTES> = "10";

        return;
    }
}
