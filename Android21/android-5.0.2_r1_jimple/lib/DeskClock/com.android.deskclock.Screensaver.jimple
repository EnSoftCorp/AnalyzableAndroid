public class com.android.deskclock.Screensaver extends android.service.dreams.DreamService
{
    static final boolean DEBUG;
    static final java.lang.String TAG;
    private android.view.View mContentView;
    private android.view.View mSaverView;
    private android.view.View mAnalogClock;
    private android.view.View mDigitalClock;
    private java.lang.String mDateFormat;
    private java.lang.String mDateFormatForAccessibility;
    private final android.os.Handler mHandler;
    private final com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable;
    private final java.lang.Runnable mMidnightUpdater;
    private final android.content.BroadcastReceiver mIntentReceiver;

    public void <init>()
    {
        com.android.deskclock.Screensaver r0;
        android.os.Handler $r1, $r5;
        com.android.deskclock.Screensaver$1 $r2;
        com.android.deskclock.Screensaver$2 $r3;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable $r4;

        r0 := @this: com.android.deskclock.Screensaver;

        specialinvoke r0.<android.service.dreams.DreamService: void <init>()>();

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler> = $r1;

        $r2 = new com.android.deskclock.Screensaver$1;

        specialinvoke $r2.<com.android.deskclock.Screensaver$1: void <init>(com.android.deskclock.Screensaver)>(r0);

        r0.<com.android.deskclock.Screensaver: java.lang.Runnable mMidnightUpdater> = $r2;

        $r3 = new com.android.deskclock.Screensaver$2;

        specialinvoke $r3.<com.android.deskclock.Screensaver$2: void <init>(com.android.deskclock.Screensaver)>(r0);

        r0.<com.android.deskclock.Screensaver: android.content.BroadcastReceiver mIntentReceiver> = $r3;

        $r4 = new com.android.deskclock.Utils$ScreensaverMoveSaverRunnable;

        $r5 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        specialinvoke $r4.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: void <init>(android.os.Handler)>($r5);

        r0.<com.android.deskclock.Screensaver: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable> = $r4;

        return;
    }

    public void onCreate()
    {
        com.android.deskclock.Screensaver r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.deskclock.Screensaver;

        specialinvoke r0.<android.service.dreams.DreamService: void onCreate()>();

        virtualinvoke r0.<com.android.deskclock.Screensaver: void setTheme(int)>(2131755009);

        $r1 = virtualinvoke r0.<com.android.deskclock.Screensaver: java.lang.String getString(int)>(2131558400);

        r0.<com.android.deskclock.Screensaver: java.lang.String mDateFormat> = $r1;

        $r2 = virtualinvoke r0.<com.android.deskclock.Screensaver: java.lang.String getString(int)>(2131558401);

        r0.<com.android.deskclock.Screensaver: java.lang.String mDateFormatForAccessibility> = $r2;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.deskclock.Screensaver r0;
        android.content.res.Configuration r1;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable $r2, $r4;
        android.os.Handler $r3, $r5;

        r0 := @this: com.android.deskclock.Screensaver;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.service.dreams.DreamService: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r3 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        $r2 = r0.<com.android.deskclock.Screensaver: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        specialinvoke r0.<com.android.deskclock.Screensaver: void layoutClockSaver()>();

        $r5 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        $r4 = r0.<com.android.deskclock.Screensaver: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable>;

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void onAttachedToWindow()
    {
        com.android.deskclock.Screensaver r0;
        android.content.IntentFilter r1, $r2;
        android.content.BroadcastReceiver $r3;
        java.lang.Runnable $r5;
        android.os.Handler $r6, $r8;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable $r7;

        r0 := @this: com.android.deskclock.Screensaver;

        specialinvoke r0.<android.service.dreams.DreamService: void onAttachedToWindow()>();

        virtualinvoke r0.<com.android.deskclock.Screensaver: void setInteractive(boolean)>(0);

        virtualinvoke r0.<com.android.deskclock.Screensaver: void setFullscreen(boolean)>(1);

        specialinvoke r0.<com.android.deskclock.Screensaver: void layoutClockSaver()>();

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r3 = r0.<com.android.deskclock.Screensaver: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke r0.<com.android.deskclock.Screensaver: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        $r6 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        $r5 = r0.<com.android.deskclock.Screensaver: java.lang.Runnable mMidnightUpdater>;

        staticinvoke <com.android.deskclock.Utils: void setMidnightUpdater(android.os.Handler,java.lang.Runnable)>($r6, $r5);

        $r8 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        $r7 = r0.<com.android.deskclock.Screensaver: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable>;

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        return;
    }

    public void onDetachedFromWindow()
    {
        com.android.deskclock.Screensaver r0;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable $r1;
        android.os.Handler $r2, $r4;
        java.lang.Runnable $r3;
        android.content.BroadcastReceiver $r5;

        r0 := @this: com.android.deskclock.Screensaver;

        specialinvoke r0.<android.service.dreams.DreamService: void onDetachedFromWindow()>();

        $r2 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        $r1 = r0.<com.android.deskclock.Screensaver: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        $r3 = r0.<com.android.deskclock.Screensaver: java.lang.Runnable mMidnightUpdater>;

        staticinvoke <com.android.deskclock.Utils: void cancelMidnightUpdater(android.os.Handler,java.lang.Runnable)>($r4, $r3);

        $r5 = r0.<com.android.deskclock.Screensaver: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke r0.<com.android.deskclock.Screensaver: void unregisterReceiver(android.content.BroadcastReceiver)>($r5);

        return;
    }

    private void setClockStyle()
    {
        com.android.deskclock.Screensaver r0;
        boolean z0, $z1;
        android.view.View $r1, $r2, $r4, $r6;
        android.content.SharedPreferences $r5;

        r0 := @this: com.android.deskclock.Screensaver;

        $r2 = r0.<com.android.deskclock.Screensaver: android.view.View mDigitalClock>;

        $r1 = r0.<com.android.deskclock.Screensaver: android.view.View mAnalogClock>;

        staticinvoke <com.android.deskclock.Utils: android.view.View setClockStyle(android.content.Context,android.view.View,android.view.View,java.lang.String)>(r0, $r2, $r1, "screensaver_clock_style");

        $r4 = virtualinvoke r0.<com.android.deskclock.Screensaver: android.view.View findViewById(int)>(2131623991);

        r0.<com.android.deskclock.Screensaver: android.view.View mSaverView> = $r4;

        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        z0 = interfaceinvoke $r5.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("screensaver_night_mode", 0);

        $r6 = r0.<com.android.deskclock.Screensaver: android.view.View mSaverView>;

        staticinvoke <com.android.deskclock.Utils: void dimClockView(boolean,android.view.View)>(z0, $r6);

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<com.android.deskclock.Screensaver: void setScreenBright(boolean)>($z1);

        return;
    }

    private void layoutClockSaver()
    {
        com.android.deskclock.Screensaver r0;
        android.view.View $r1, $r2, $r3, $r6, $r8, $r9, $r10, $r11, $r13, $r16;
        android.widget.TextClock $r4;
        android.content.res.Resources $r5;
        float $f0;
        int $i0;
        android.view.ViewParent $r7;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable $r12;
        java.lang.String $r14, $r15;

        r0 := @this: com.android.deskclock.Screensaver;

        virtualinvoke r0.<com.android.deskclock.Screensaver: void setContentView(int)>(2130968588);

        $r1 = virtualinvoke r0.<com.android.deskclock.Screensaver: android.view.View findViewById(int)>(2131623945);

        r0.<com.android.deskclock.Screensaver: android.view.View mDigitalClock> = $r1;

        $r2 = virtualinvoke r0.<com.android.deskclock.Screensaver: android.view.View findViewById(int)>(2131623992);

        r0.<com.android.deskclock.Screensaver: android.view.View mAnalogClock> = $r2;

        specialinvoke r0.<com.android.deskclock.Screensaver: void setClockStyle()>();

        $r3 = r0.<com.android.deskclock.Screensaver: android.view.View mDigitalClock>;

        $r4 = (android.widget.TextClock) $r3;

        $r5 = virtualinvoke r0.<com.android.deskclock.Screensaver: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r5.<android.content.res.Resources: float getDimension(int)>(2131296302);

        $i0 = (int) $f0;

        staticinvoke <com.android.deskclock.Utils: void setTimeFormat(android.widget.TextClock,int)>($r4, $i0);

        $r6 = r0.<com.android.deskclock.Screensaver: android.view.View mSaverView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        $r8 = (android.view.View) $r7;

        r0.<com.android.deskclock.Screensaver: android.view.View mContentView> = $r8;

        $r9 = r0.<com.android.deskclock.Screensaver: android.view.View mSaverView>;

        virtualinvoke $r9.<android.view.View: void setAlpha(float)>(0.0F);

        $r12 = r0.<com.android.deskclock.Screensaver: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable mMoveSaverRunnable>;

        $r11 = r0.<com.android.deskclock.Screensaver: android.view.View mContentView>;

        $r10 = r0.<com.android.deskclock.Screensaver: android.view.View mSaverView>;

        virtualinvoke $r12.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: void registerViews(android.view.View,android.view.View)>($r11, $r10);

        $r14 = r0.<com.android.deskclock.Screensaver: java.lang.String mDateFormat>;

        $r15 = r0.<com.android.deskclock.Screensaver: java.lang.String mDateFormatForAccessibility>;

        $r13 = r0.<com.android.deskclock.Screensaver: android.view.View mContentView>;

        staticinvoke <com.android.deskclock.Utils: void updateDate(java.lang.String,java.lang.String,android.view.View)>($r14, $r15, $r13);

        $r16 = r0.<com.android.deskclock.Screensaver: android.view.View mContentView>;

        staticinvoke <com.android.deskclock.Utils: void refreshAlarm(android.content.Context,android.view.View)>(r0, $r16);

        return;
    }

    static java.lang.String access$000(com.android.deskclock.Screensaver)
    {
        com.android.deskclock.Screensaver r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.deskclock.Screensaver;

        $r1 = r0.<com.android.deskclock.Screensaver: java.lang.String mDateFormat>;

        return $r1;
    }

    static java.lang.String access$100(com.android.deskclock.Screensaver)
    {
        com.android.deskclock.Screensaver r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.deskclock.Screensaver;

        $r1 = r0.<com.android.deskclock.Screensaver: java.lang.String mDateFormatForAccessibility>;

        return $r1;
    }

    static android.view.View access$200(com.android.deskclock.Screensaver)
    {
        com.android.deskclock.Screensaver r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.deskclock.Screensaver;

        $r1 = r0.<com.android.deskclock.Screensaver: android.view.View mContentView>;

        return $r1;
    }

    static android.os.Handler access$300(com.android.deskclock.Screensaver)
    {
        com.android.deskclock.Screensaver r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.deskclock.Screensaver;

        $r1 = r0.<com.android.deskclock.Screensaver: android.os.Handler mHandler>;

        return $r1;
    }

    static java.lang.Runnable access$400(com.android.deskclock.Screensaver)
    {
        com.android.deskclock.Screensaver r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.deskclock.Screensaver;

        $r1 = r0.<com.android.deskclock.Screensaver: java.lang.Runnable mMidnightUpdater>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.deskclock.Screensaver: java.lang.String TAG> = "DeskClock/Screensaver";

        <com.android.deskclock.Screensaver: boolean DEBUG> = 0;

        return;
    }
}
