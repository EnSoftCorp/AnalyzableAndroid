public class com.android.deskclock.timer.CountingTimerView extends android.view.View
{
    private static final java.lang.String TWO_DIGITS;
    private static final java.lang.String ONE_DIGIT;
    private static final java.lang.String NEG_TWO_DIGITS;
    private static final java.lang.String NEG_ONE_DIGIT;
    private static final float TEXT_SIZE_TO_WIDTH_RATIO;
    private static final float FONT_VERTICAL_OFFSET;
    private static final float HOURS_MINUTES_SPACING;
    private static final float HUNDREDTHS_SPACING;
    private final float mRadiusOffset;
    private java.lang.String mHours;
    private java.lang.String mMinutes;
    private java.lang.String mSeconds;
    private java.lang.String mHundredths;
    private boolean mShowTimeStr;
    private final android.graphics.Paint mPaintBigThin;
    private final android.graphics.Paint mPaintMed;
    private final float mBigFontSize;
    private final float mSmallFontSize;
    private final com.android.deskclock.timer.CountingTimerView$SignedTime mBigHours;
    private final com.android.deskclock.timer.CountingTimerView$SignedTime mBigMinutes;
    private final com.android.deskclock.timer.CountingTimerView$UnsignedTime mBigSeconds;
    private final com.android.deskclock.timer.CountingTimerView$Hundredths mMedHundredths;
    private float mTextHeight;
    private float mTotalTextWidth;
    private boolean mRemeasureText;
    private int mDefaultColor;
    private final int mPressedColor;
    private final int mWhiteColor;
    private final int mAccentColor;
    private android.widget.TextView mStopStartTextView;
    private final android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private boolean mVirtualButtonEnabled;
    private boolean mVirtualButtonPressedOn;
    java.lang.Runnable mBlinkThread;

    public void <init>(android.content.Context)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        android.content.Context r1;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.Resources r3;
        android.graphics.Typeface r4, r5;
        java.lang.String r6;
        android.graphics.Paint $r7, $r8, $r13, $r14, $r16, $r19, $r22, $r23, $r24, $r25, $r33, $r35;
        com.android.deskclock.timer.CountingTimerView$1 $r9;
        java.lang.Object $r10;
        android.view.accessibility.AccessibilityManager $r11;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2;
        android.content.res.AssetManager $r12, $r20;
        android.graphics.Paint$Style $r15, $r21;
        android.graphics.Paint$Align $r17, $r26;
        java.lang.Object[] $r27;
        com.android.deskclock.timer.CountingTimerView$UnsignedTime $r29, $r31, $r37;
        java.lang.Integer $r30;
        com.android.deskclock.timer.CountingTimerView$SignedTime $r32, $r34;
        com.android.deskclock.timer.CountingTimerView$Hundredths $r36;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mShowTimeStr> = 1;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>()>();

        r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin> = $r7;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed> = $r8;

        r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight> = 0.0F;

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mRemeasureText> = 1;

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonEnabled> = 0;

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonPressedOn> = 0;

        $r9 = new com.android.deskclock.timer.CountingTimerView$1;

        specialinvoke $r9.<com.android.deskclock.timer.CountingTimerView$1: void <init>(com.android.deskclock.timer.CountingTimerView)>(r0);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.Runnable mBlinkThread> = $r9;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r11 = (android.view.accessibility.AccessibilityManager) $r10;

        r0.<com.android.deskclock.timer.CountingTimerView: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r11;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>(2131427348);

        r0.<com.android.deskclock.timer.CountingTimerView: int mWhiteColor> = $i0;

        $i1 = r0.<com.android.deskclock.timer.CountingTimerView: int mWhiteColor>;

        r0.<com.android.deskclock.timer.CountingTimerView: int mDefaultColor> = $i1;

        $i2 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>(2131427345);

        r0.<com.android.deskclock.timer.CountingTimerView: int mPressedColor> = $i2;

        $i3 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>(2131427345);

        r0.<com.android.deskclock.timer.CountingTimerView: int mAccentColor> = $i3;

        $f0 = virtualinvoke r3.<android.content.res.Resources: float getDimension(int)>(2131296297);

        r0.<com.android.deskclock.timer.CountingTimerView: float mBigFontSize> = $f0;

        $f1 = virtualinvoke r3.<android.content.res.Resources: float getDimension(int)>(2131296299);

        r0.<com.android.deskclock.timer.CountingTimerView: float mSmallFontSize> = $f1;

        $r12 = virtualinvoke r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r12, "fonts/AndroidClockMono-Thin.ttf");

        $r13 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        virtualinvoke $r13.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r14 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r14.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r15);

        $r16 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        $r17 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r16.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r17);

        $r19 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        virtualinvoke $r19.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r4);

        $r20 = virtualinvoke r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r5 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r20, "fonts/AndroidClockMono-Light.ttf");

        $r22 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        virtualinvoke $r22.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r25 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        $r21 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r25.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r21);

        $r23 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        $r26 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r23.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r26);

        $r24 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        virtualinvoke $r24.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r5);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void resetTextSize()>();

        $i4 = r0.<com.android.deskclock.timer.CountingTimerView: int mDefaultColor>;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void setTextColor(int)>($i4);

        $r27 = newarray (java.lang.Object)[1];

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(123456789);

        $r27[0] = $r30;

        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%010d", $r27);

        $r29 = new com.android.deskclock.timer.CountingTimerView$UnsignedTime;

        $r33 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        specialinvoke $r29.<com.android.deskclock.timer.CountingTimerView$UnsignedTime: void <init>(android.graphics.Paint,float,java.lang.String)>($r33, 0.0F, r6);

        r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$UnsignedTime mBigSeconds> = $r29;

        $r34 = new com.android.deskclock.timer.CountingTimerView$SignedTime;

        $r31 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$UnsignedTime mBigSeconds>;

        specialinvoke $r34.<com.android.deskclock.timer.CountingTimerView$SignedTime: void <init>(com.android.deskclock.timer.CountingTimerView$UnsignedTime,float)>($r31, 0.4F);

        r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$SignedTime mBigHours> = $r34;

        $r32 = new com.android.deskclock.timer.CountingTimerView$SignedTime;

        $r37 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$UnsignedTime mBigSeconds>;

        specialinvoke $r32.<com.android.deskclock.timer.CountingTimerView$SignedTime: void <init>(com.android.deskclock.timer.CountingTimerView$UnsignedTime,float)>($r37, 0.4F);

        r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$SignedTime mBigMinutes> = $r32;

        $r36 = new com.android.deskclock.timer.CountingTimerView$Hundredths;

        $r35 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        specialinvoke $r36.<com.android.deskclock.timer.CountingTimerView$Hundredths: void <init>(android.graphics.Paint,float,java.lang.String)>($r35, 0.5F, r6);

        r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$Hundredths mMedHundredths> = $r36;

        $f2 = staticinvoke <com.android.deskclock.Utils: float calculateRadiusOffset(android.content.res.Resources)>(r3);

        r0.<com.android.deskclock.timer.CountingTimerView: float mRadiusOffset> = $f2;

        return;
    }

    protected void resetTextSize()
    {
        com.android.deskclock.timer.CountingTimerView r0;
        float $f0, $f1, $f2;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        $f0 = r0.<com.android.deskclock.timer.CountingTimerView: float mBigFontSize>;

        r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight> = $f0;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        $f1 = r0.<com.android.deskclock.timer.CountingTimerView: float mBigFontSize>;

        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f1);

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        $f2 = r0.<com.android.deskclock.timer.CountingTimerView: float mSmallFontSize>;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>($f2);

        return;
    }

    protected void setTextColor(int)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        int i0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>(i0);

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        return;
    }

    public void setTime(long, boolean, boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        long l0, l2, l3, l4, l5, $l8, $l9, $l10, $l11, l30, l31;
        boolean z0, z1, z2, z3;
        int i1, i6, $i17, $i18, $i19;
        java.lang.String r1, $r4, $r7, $r9, $r12, $r13, $r14, $r18, $r20, $r21, $r24, $r25, r26, r27, r28;
        byte $b7, $b12, $b13, $b14, $b15, $b16, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29;
        java.lang.Object[] $r2, $r5, $r11, $r16, $r17, $r19;
        java.lang.Long $r3, $r6, $r10, $r15, $r22, $r23;
        android.content.res.Resources $r8;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i1 = specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getDigitsLength()>();

        z2 = 0;

        z3 = 0;

        $b7 = l0 cmp 0L;

        if $b7 >= 0 goto label01;

        l0 = neg l0;

        z3 = 1;

        z2 = 1;

     label01:
        l3 = l0 / 1000L;

        $l9 = l3 * 1000L;

        $l8 = l0 - $l9;

        l2 = $l8 / 10L;

        l4 = l3 / 60L;

        $l11 = l4 * 60L;

        l30 = l3 - $l11;

        l5 = l4 / 60L;

        $l10 = l5 * 60L;

        l31 = l4 - $l10;

        $b13 = l5 cmp 999L;

        if $b13 <= 0 goto label02;

        l5 = 0L;

     label02:
        $b12 = l5 cmp 0L;

        if $b12 != 0 goto label03;

        $b28 = l31 cmp 0L;

        if $b28 != 0 goto label03;

        $b29 = l30 cmp 0L;

        if $b29 != 0 goto label03;

        z3 = 0;

     label03:
        if z0 != 0 goto label06;

        if z2 != 0 goto label04;

        $b25 = l2 cmp 0L;

        if $b25 == 0 goto label04;

        l30 = l30 + 1L;

        $b26 = l30 cmp 60L;

        if $b26 != 0 goto label04;

        l30 = 0L;

        l31 = l31 + 1L;

        $b27 = l31 cmp 60L;

        if $b27 != 0 goto label04;

        l31 = 0L;

        l5 = l5 + 1L;

     label04:
        $b23 = l2 cmp 10L;

        if $b23 < 0 goto label05;

        $b24 = l2 cmp 90L;

        if $b24 <= 0 goto label06;

     label05:
        z1 = 1;

     label06:
        $b15 = l5 cmp 10L;

        if $b15 < 0 goto label09;

        if z3 == 0 goto label07;

        $r25 = "-%02d";

        goto label08;

     label07:
        $r25 = "%02d";

     label08:
        r1 = $r25;

        $r19 = newarray (java.lang.Object)[1];

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r19[0] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r19);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours> = $r24;

        goto label13;

     label09:
        $b14 = l5 cmp 0L;

        if $b14 <= 0 goto label12;

        if z3 == 0 goto label10;

        $r20 = "-%01d";

        goto label11;

     label10:
        $r20 = "%01d";

     label11:
        r26 = $r20;

        $r17 = newarray (java.lang.Object)[1];

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r17[0] = $r22;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r26, $r17);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours> = $r21;

        goto label13;

     label12:
        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours> = null;

     label13:
        $b16 = l31 cmp 10L;

        if $b16 >= 0 goto label14;

        $b20 = l5 cmp 0L;

        if $b20 <= 0 goto label17;

     label14:
        if z3 == 0 goto label15;

        $b21 = l5 cmp 0L;

        if $b21 != 0 goto label15;

        $r12 = "-%02d";

        goto label16;

     label15:
        $r12 = "%02d";

     label16:
        r27 = $r12;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l31);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r27, $r2);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes> = $r4;

        goto label20;

     label17:
        if z3 == 0 goto label18;

        $b22 = l5 cmp 0L;

        if $b22 != 0 goto label18;

        $r18 = "-%01d";

        goto label19;

     label18:
        $r18 = "%01d";

     label19:
        r28 = $r18;

        $r16 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l31);

        $r16[0] = $r15;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r28, $r16);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes> = $r14;

     label20:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l30);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r5);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds> = $r7;

        if z0 == 0 goto label21;

        $r11 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r11[0] = $r10;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r11);

        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths> = $r13;

        goto label22;

     label21:
        r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths> = null;

     label22:
        i6 = specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getDigitsLength()>();

        if i1 == i6 goto label24;

        if i1 <= i6 goto label23;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void resetTextSize()>();

     label23:
        r0.<com.android.deskclock.timer.CountingTimerView: boolean mRemeasureText> = 1;

     label24:
        if z1 == 0 goto label25;

        $i17 = (int) l5;

        $i18 = (int) l31;

        $i19 = (int) l30;

        $r8 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: android.content.res.Resources getResources()>();

        $r9 = staticinvoke <com.android.deskclock.timer.CountingTimerView: java.lang.String getTimeStringForAccessibility(int,int,int,boolean,android.content.res.Resources)>($i17, $i18, $i19, z3, $r8);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void setContentDescription(java.lang.CharSequence)>($r9);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void invalidate()>();

     label25:
        return;
    }

    private int getDigitsLength()
    {
        com.android.deskclock.timer.CountingTimerView r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label2:
        $r3 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        if $r3 != null goto label3;

        $i1 = 0;

        goto label4;

     label3:
        $r4 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

     label4:
        $i2 = $i0 + $i1;

        $r5 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        if $r5 != null goto label5;

        $i3 = 0;

        goto label6;

     label5:
        $r6 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

     label6:
        $i4 = $i2 + $i3;

        $r7 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        if $r7 != null goto label7;

        $i5 = 0;

        goto label8;

     label7:
        $r8 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        $i5 = virtualinvoke $r8.<java.lang.String: int length()>();

     label8:
        $i6 = $i4 + $i5;

        return $i6;
    }

    private void calcTotalTextWidth()
    {
        com.android.deskclock.timer.CountingTimerView r0;
        java.lang.String $r1, $r3, $r5, $r7;
        com.android.deskclock.timer.CountingTimerView$SignedTime $r2, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        com.android.deskclock.timer.CountingTimerView$UnsignedTime $r6;
        com.android.deskclock.timer.CountingTimerView$Hundredths $r8;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$SignedTime mBigHours>;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        $f0 = virtualinvoke $r2.<com.android.deskclock.timer.CountingTimerView$SignedTime: float calcTotalWidth(java.lang.String)>($r1);

        $r4 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$SignedTime mBigMinutes>;

        $r3 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        $f1 = virtualinvoke $r4.<com.android.deskclock.timer.CountingTimerView$SignedTime: float calcTotalWidth(java.lang.String)>($r3);

        $f2 = $f0 + $f1;

        $r6 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$UnsignedTime mBigSeconds>;

        $r5 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        $f3 = virtualinvoke $r6.<com.android.deskclock.timer.CountingTimerView$UnsignedTime: float calcTotalWidth(java.lang.String)>($r5);

        $f4 = $f2 + $f3;

        $r8 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$Hundredths mMedHundredths>;

        $r7 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        $f5 = virtualinvoke $r8.<com.android.deskclock.timer.CountingTimerView$Hundredths: float calcTotalWidth(java.lang.String)>($r7);

        $f6 = $f4 + $f5;

        r0.<com.android.deskclock.timer.CountingTimerView: float mTotalTextWidth> = $f6;

        return;
    }

    private void setTotalTextWidth()
    {
        com.android.deskclock.timer.CountingTimerView r0;
        int i0, $i1, $i2, $i3, i5;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        byte $b4;
        double $d0, $d1;
        android.graphics.Paint $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: void calcTotalTextWidth()>();

        $i1 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getWidth()>();

        $i2 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getHeight()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        if i0 == 0 goto label2;

        $f3 = r0.<com.android.deskclock.timer.CountingTimerView: float mRadiusOffset>;

        $f4 = 4.0F * $f3;

        $f5 = $f4 + 0.5F;

        $i3 = (int) $f5;

        i5 = i0 - $i3;

        $f6 = (float) i5;

        $f8 = 0.85F * $f6;

        $f7 = (float) i5;

        f0 = $f8 * $f7;

        f1 = specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: float getHypotenuseSquared()>();

     label1:
        $b4 = f1 cmpl f0;

        if $b4 <= 0 goto label2;

        $f9 = f0 / f1;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f10 = (float) $d1;

        f2 = 0.99F * $f10;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        $f12 = virtualinvoke $r2.<android.graphics.Paint: float getTextSize()>();

        $f11 = $f12 * f2;

        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f11);

        $r3 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        $r4 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        $f14 = virtualinvoke $r4.<android.graphics.Paint: float getTextSize()>();

        $f13 = $f14 * f2;

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f13);

        $r5 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        $f15 = virtualinvoke $r5.<android.graphics.Paint: float getTextSize()>();

        r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight> = $f15;

        specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: void calcTotalTextWidth()>();

        f1 = specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: float getHypotenuseSquared()>();

        goto label1;

     label2:
        return;
    }

    private float getHypotenuseSquared()
    {
        com.android.deskclock.timer.CountingTimerView r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        $f1 = r0.<com.android.deskclock.timer.CountingTimerView: float mTotalTextWidth>;

        $f0 = r0.<com.android.deskclock.timer.CountingTimerView: float mTotalTextWidth>;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight>;

        $f2 = r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight>;

        $f4 = $f3 * $f2;

        $f6 = $f5 + $f4;

        return $f6;
    }

    public void blinkTimeStr(boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean z0;
        java.lang.Runnable $r1, $r2, $r3;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.Runnable mBlinkThread>;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r3 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.Runnable mBlinkThread>;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: boolean post(java.lang.Runnable)>($r3);

        goto label2;

     label1:
        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.Runnable mBlinkThread>;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: boolean removeCallbacks(java.lang.Runnable)>($r1);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void showTime(boolean)>(1);

     label2:
        return;
    }

    public void showTime(boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean z0;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        z0 := @parameter0: boolean;

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mShowTimeStr> = z0;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void invalidate()>();

        return;
    }

    public void setTimeStrTextColor(boolean, boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i0 = r0.<com.android.deskclock.timer.CountingTimerView: int mAccentColor>;

        goto label2;

     label1:
        $i0 = r0.<com.android.deskclock.timer.CountingTimerView: int mWhiteColor>;

     label2:
        r0.<com.android.deskclock.timer.CountingTimerView: int mDefaultColor> = $i0;

        $i1 = r0.<com.android.deskclock.timer.CountingTimerView: int mDefaultColor>;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void setTextColor(int)>($i1);

        if z1 == 0 goto label3;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void invalidate()>();

     label3:
        return;
    }

    public java.lang.String getTimeString()
    {
        com.android.deskclock.timer.CountingTimerView r0;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r22, $r23;
        java.lang.Object[] $r3, $r9, $r15, $r21;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        if $r1 != null goto label2;

        $r14 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        if $r14 != null goto label1;

        $r21 = newarray (java.lang.Object)[2];

        $r20 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        $r21[0] = $r20;

        $r23 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        $r21[1] = $r23;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r21);

        return $r22;

     label1:
        $r15 = newarray (java.lang.Object)[3];

        $r17 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        $r15[0] = $r17;

        $r16 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        $r15[1] = $r16;

        $r19 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        $r15[2] = $r19;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s:%s", $r15);

        return $r18;

     label2:
        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        if $r2 != null goto label3;

        $r9 = newarray (java.lang.Object)[3];

        $r10 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        $r9[0] = $r10;

        $r11 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        $r9[1] = $r11;

        $r12 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        $r9[2] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s.%s", $r9);

        return $r13;

     label3:
        $r3 = newarray (java.lang.Object)[4];

        $r4 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        $r3[0] = $r4;

        $r5 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        $r3[1] = $r5;

        $r6 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        $r3[2] = $r6;

        $r7 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        $r3[3] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s:%s.%s", $r3);

        return $r8;
    }

    private static java.lang.String getTimeStringForAccessibility(int, int, int, boolean, android.content.res.Resources)
    {
        int i0, i1, i2;
        boolean z0;
        android.content.res.Resources r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.CharSequence $r3, $r10, $r16, $r23, $r29, $r35;
        java.lang.String $r4, $r7, $r12, $r15, $r19, $r22, $r24, $r26, $r30, $r33, $r36, $r37, $r39;
        java.lang.Object[] $r5, $r11, $r18, $r27, $r34, $r41;
        java.lang.Integer $r6, $r13, $r20, $r25, $r32, $r40;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0 := @parameter4: android.content.res.Resources;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        if z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

     label1:
        if z0 == 0 goto label2;

        if i0 != 0 goto label2;

        if i1 != 0 goto label2;

        $r35 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689478, i2);

        $r36 = interfaceinvoke $r35.<java.lang.CharSequence: java.lang.String toString()>();

        $r41 = newarray (java.lang.Object)[1];

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r41[0] = $r40;

        $r39 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r36, $r41);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        goto label4;

     label2:
        if i0 != 0 goto label3;

        $r23 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689477, i1);

        $r26 = interfaceinvoke $r23.<java.lang.CharSequence: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[1];

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r27[0] = $r25;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r26, $r27);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689478, i2);

        $r33 = interfaceinvoke $r29.<java.lang.CharSequence: java.lang.String toString()>();

        $r34 = newarray (java.lang.Object)[1];

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r34[0] = $r32;

        $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r33, $r34);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        goto label4;

     label3:
        $r3 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689476, i0);

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689477, i1);

        $r12 = interfaceinvoke $r10.<java.lang.CharSequence: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11[0] = $r13;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r12, $r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131689478, i2);

        $r19 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();

        $r18 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r18[0] = $r20;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r19, $r18);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label4:
        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    public void setVirtualButtonEnabled(boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean z0;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        z0 := @parameter0: boolean;

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonEnabled> = z0;

        return;
    }

    private void virtualButtonPressed(boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean z0;
        int $i0;
        android.widget.TextView $r1;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        z0 := @parameter0: boolean;

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonPressedOn> = z0;

        $r1 = r0.<com.android.deskclock.timer.CountingTimerView: android.widget.TextView mStopStartTextView>;

        if z0 == 0 goto label1;

        $i0 = r0.<com.android.deskclock.timer.CountingTimerView: int mPressedColor>;

        goto label2;

     label1:
        $i0 = r0.<com.android.deskclock.timer.CountingTimerView: int mWhiteColor>;

     label2:
        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>($i0);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void invalidate()>();

        return;
    }

    private boolean withinVirtualButtonBounds(float, float)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        float f0, f1, f2, f3, f4, $f5, $f6;
        int i0, i1, $i2, $i3, $i4, $i5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        byte $b6;
        boolean $z0;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getWidth()>();

        i1 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getHeight()>();

        $i2 = i0 / 2;

        f2 = (float) $i2;

        $i3 = i1 / 2;

        f3 = (float) $i3;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $i5 = $i4 / 2;

        f4 = (float) $i5;

        $f5 = f2 - f0;

        $d1 = (double) $f5;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $f6 = f3 - f1;

        $d4 = (double) $f6;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 2.0);

        $d5 = $d2 + $d3;

        d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d5);

        $d6 = (double) f4;

        $b6 = d0 cmpg $d6;

        if $b6 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void registerVirtualButtonAction(java.lang.Runnable)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        java.lang.Runnable r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;
        com.android.deskclock.timer.CountingTimerView$3 $r3;
        com.android.deskclock.timer.CountingTimerView$2 $r4;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $r4 = new com.android.deskclock.timer.CountingTimerView$2;

        specialinvoke $r4.<com.android.deskclock.timer.CountingTimerView$2: void <init>(com.android.deskclock.timer.CountingTimerView,java.lang.Runnable)>(r0, r1);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void setOnTouchListener(android.view.View$OnTouchListener)>($r4);

        goto label2;

     label1:
        $r3 = new com.android.deskclock.timer.CountingTimerView$3;

        specialinvoke $r3.<com.android.deskclock.timer.CountingTimerView$3: void <init>(com.android.deskclock.timer.CountingTimerView,java.lang.Runnable)>(r0, r1);

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void setOnClickListener(android.view.View$OnClickListener)>($r3);

     label2:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, $i4, $i5;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Paint $r2, $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r15;
        com.android.deskclock.timer.CountingTimerView$Hundredths $r8;
        com.android.deskclock.timer.CountingTimerView$SignedTime $r12, $r14;
        com.android.deskclock.timer.CountingTimerView$UnsignedTime $r13;
        android.widget.TextView $r16;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.android.deskclock.timer.CountingTimerView: boolean mShowTimeStr>;

        if $z0 != 0 goto label1;

        $z3 = r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonPressedOn>;

        if $z3 != 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getWidth()>();

        $z1 = r0.<com.android.deskclock.timer.CountingTimerView: boolean mRemeasureText>;

        if $z1 == 0 goto label2;

        if i0 == 0 goto label2;

        specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: void setTotalTextWidth()>();

        i0 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getWidth()>();

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mRemeasureText> = 0;

     label2:
        i1 = i0 / 2;

        $i4 = virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: int getHeight()>();

        i2 = $i4 / 2;

        $f4 = (float) i1;

        $f2 = r0.<com.android.deskclock.timer.CountingTimerView: float mTotalTextWidth>;

        $f3 = $f2 / 2.0F;

        f0 = $f4 - $f3;

        $f6 = (float) i2;

        $f5 = r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight>;

        $f7 = $f5 / 2.0F;

        $f10 = $f6 + $f7;

        $f9 = r0.<com.android.deskclock.timer.CountingTimerView: float mTextHeight>;

        $f8 = $f9 * 0.14F;

        f1 = $f10 - $f8;

        $z2 = r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonPressedOn>;

        if $z2 == 0 goto label3;

        i3 = r0.<com.android.deskclock.timer.CountingTimerView: int mPressedColor>;

        $r16 = r0.<com.android.deskclock.timer.CountingTimerView: android.widget.TextView mStopStartTextView>;

        $i5 = r0.<com.android.deskclock.timer.CountingTimerView: int mPressedColor>;

        virtualinvoke $r16.<android.widget.TextView: void setTextColor(int)>($i5);

        goto label4;

     label3:
        i3 = r0.<com.android.deskclock.timer.CountingTimerView: int mDefaultColor>;

     label4:
        $r3 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintBigThin>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i3);

        $r2 = r0.<com.android.deskclock.timer.CountingTimerView: android.graphics.Paint mPaintMed>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i3);

        $r5 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        if $r5 == null goto label5;

        $r14 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$SignedTime mBigHours>;

        $r15 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHours>;

        f0 = virtualinvoke $r14.<com.android.deskclock.timer.CountingTimerView$SignedTime: float draw(android.graphics.Canvas,java.lang.String,float,float)>(r1, $r15, f0, f1);

     label5:
        $r4 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        if $r4 == null goto label6;

        $r12 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$SignedTime mBigMinutes>;

        $r11 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mMinutes>;

        f0 = virtualinvoke $r12.<com.android.deskclock.timer.CountingTimerView$SignedTime: float draw(android.graphics.Canvas,java.lang.String,float,float)>(r1, $r11, f0, f1);

     label6:
        $r7 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        if $r7 == null goto label7;

        $r13 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$UnsignedTime mBigSeconds>;

        $r10 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mSeconds>;

        f0 = virtualinvoke $r13.<com.android.deskclock.timer.CountingTimerView$UnsignedTime: float draw(android.graphics.Canvas,java.lang.String,float,float)>(r1, $r10, f0, f1);

     label7:
        $r6 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        if $r6 == null goto label8;

        $r8 = r0.<com.android.deskclock.timer.CountingTimerView: com.android.deskclock.timer.CountingTimerView$Hundredths mMedHundredths>;

        $r9 = r0.<com.android.deskclock.timer.CountingTimerView: java.lang.String mHundredths>;

        virtualinvoke $r8.<com.android.deskclock.timer.CountingTimerView$Hundredths: float draw(android.graphics.Canvas,java.lang.String,float,float)>(r1, $r9, f0, f1);

     label8:
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        r0.<com.android.deskclock.timer.CountingTimerView: boolean mRemeasureText> = 1;

        virtualinvoke r0.<com.android.deskclock.timer.CountingTimerView: void resetTextSize()>();

        return;
    }

    public void registerStopTextView(android.widget.TextView)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        android.widget.TextView r1;

        r0 := @this: com.android.deskclock.timer.CountingTimerView;

        r1 := @parameter0: android.widget.TextView;

        r0.<com.android.deskclock.timer.CountingTimerView: android.widget.TextView mStopStartTextView> = r1;

        return;
    }

    static boolean access$000(com.android.deskclock.timer.CountingTimerView)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean $z0;

        r0 := @parameter0: com.android.deskclock.timer.CountingTimerView;

        $z0 = r0.<com.android.deskclock.timer.CountingTimerView: boolean mVirtualButtonEnabled>;

        return $z0;
    }

    static boolean access$100(com.android.deskclock.timer.CountingTimerView, float, float)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        float f0, f1;
        boolean $z0;

        r0 := @parameter0: com.android.deskclock.timer.CountingTimerView;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: boolean withinVirtualButtonBounds(float,float)>(f0, f1);

        return $z0;
    }

    static void access$200(com.android.deskclock.timer.CountingTimerView, boolean)
    {
        com.android.deskclock.timer.CountingTimerView r0;
        boolean z0;

        r0 := @parameter0: com.android.deskclock.timer.CountingTimerView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.deskclock.timer.CountingTimerView: void virtualButtonPressed(boolean)>(z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.deskclock.timer.CountingTimerView: float HUNDREDTHS_SPACING> = 0.5F;

        <com.android.deskclock.timer.CountingTimerView: float HOURS_MINUTES_SPACING> = 0.4F;

        <com.android.deskclock.timer.CountingTimerView: float FONT_VERTICAL_OFFSET> = 0.14F;

        <com.android.deskclock.timer.CountingTimerView: float TEXT_SIZE_TO_WIDTH_RATIO> = 0.85F;

        <com.android.deskclock.timer.CountingTimerView: java.lang.String NEG_ONE_DIGIT> = "-%01d";

        <com.android.deskclock.timer.CountingTimerView: java.lang.String NEG_TWO_DIGITS> = "-%02d";

        <com.android.deskclock.timer.CountingTimerView: java.lang.String ONE_DIGIT> = "%01d";

        <com.android.deskclock.timer.CountingTimerView: java.lang.String TWO_DIGITS> = "%02d";

        return;
    }
}
