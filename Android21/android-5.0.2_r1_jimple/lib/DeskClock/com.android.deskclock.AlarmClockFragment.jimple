public class com.android.deskclock.AlarmClockFragment extends com.android.deskclock.DeskClockFragment implements android.app.LoaderManager$LoaderCallbacks, android.app.TimePickerDialog$OnTimeSetListener, android.view.View$OnTouchListener
{
    private static final float EXPAND_DECELERATION;
    private static final float COLLAPSE_DECELERATION;
    private static final int ANIMATION_DURATION;
    private static final int EXPAND_DURATION;
    private static final int COLLAPSE_DURATION;
    private static final int ROTATE_180_DEGREE;
    private static final float ALARM_ELEVATION;
    private static final float TINTED_LEVEL;
    private static final java.lang.String KEY_EXPANDED_ID;
    private static final java.lang.String KEY_REPEAT_CHECKED_IDS;
    private static final java.lang.String KEY_RINGTONE_TITLE_CACHE;
    private static final java.lang.String KEY_SELECTED_ALARMS;
    private static final java.lang.String KEY_DELETED_ALARM;
    private static final java.lang.String KEY_UNDO_SHOWING;
    private static final java.lang.String KEY_PREVIOUS_DAY_MAP;
    private static final java.lang.String KEY_SELECTED_ALARM;
    private static final com.android.deskclock.DeskClockExtensions sDeskClockExtensions;
    private static final int REQUEST_CODE_RINGTONE;
    private static final long INVALID_ID;
    public static final java.lang.String ALARM_CREATE_NEW_INTENT_EXTRA;
    public static final java.lang.String SCROLL_TO_ALARM_INTENT_EXTRA;
    private android.widget.FrameLayout mMainLayout;
    private android.widget.ListView mAlarmsList;
    private com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter;
    private android.view.View mEmptyView;
    private android.view.View mFooterView;
    private android.os.Bundle mRingtoneTitleCache;
    private com.android.deskclock.widget.ActionableToastBar mUndoBar;
    private android.view.View mUndoFrame;
    private com.android.deskclock.provider.Alarm mSelectedAlarm;
    private long mScrollToAlarmId;
    private android.content.Loader mCursorLoader;
    private com.android.deskclock.provider.Alarm mDeletedAlarm;
    private com.android.deskclock.provider.Alarm mAddedAlarm;
    private boolean mUndoShowing;
    private android.view.animation.Interpolator mExpandInterpolator;
    private android.view.animation.Interpolator mCollapseInterpolator;
    private android.transition.Transition mAddRemoveTransition;
    private android.transition.Transition mRepeatTransition;
    private android.transition.Transition mEmptyViewTransition;

    public void <init>()
    {
        com.android.deskclock.AlarmClockFragment r0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        specialinvoke r0.<com.android.deskclock.DeskClockFragment: void <init>()>();

        r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId> = -1L;

        r0.<com.android.deskclock.AlarmClockFragment: android.content.Loader mCursorLoader> = null;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.os.Bundle r1;
        android.app.LoaderManager $r2;
        android.content.Loader $r3;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.deskclock.DeskClockFragment: void onCreate(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.LoaderManager getLoaderManager()>();

        $r3 = virtualinvoke $r2.<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(0, null, r0);

        r0.<com.android.deskclock.AlarmClockFragment: android.content.Loader mCursorLoader> = $r3;

        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.view.LayoutInflater r1;
        android.view.ViewGroup r2;
        android.os.Bundle r3, r7, $r42, $r50, $r53;
        android.view.View r4, r8, $r28, $r30, $r32, $r34, $r35, $r36, $r40, $r41;
        long l0;
        long[] r5, r6;
        boolean z0, $z1, $z2, $z3;
        android.view.animation.DecelerateInterpolator $r9, $r10;
        android.transition.AutoTransition $r11, $r15;
        android.transition.Transition $r13, $r14, $r19;
        android.view.animation.AccelerateDecelerateInterpolator $r16;
        android.transition.TransitionSet $r20, $r21, $r22, $r24, $r27;
        android.transition.Fade $r23, $r25;
        android.content.res.Resources $r26;
        android.content.res.Configuration $r29;
        int $i1;
        android.widget.ListView $r31, $r45, $r46, $r47, $r48;
        android.widget.FrameLayout $r33;
        com.android.deskclock.widget.ActionableToastBar $r37;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r38, $r43, $r49;
        android.app.Activity $r39;
        com.android.deskclock.AlarmClockFragment$1 $r44;
        com.android.deskclock.provider.Alarm $r51, $r54;
        android.os.Parcelable $r52, $r55;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.os.Bundle;

        r4 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968578, r2, 0);

        l0 = -1L;

        r5 = null;

        r6 = null;

        r7 = null;

        if r3 == null goto label1;

        l0 = virtualinvoke r3.<android.os.Bundle: long getLong(java.lang.String)>("expandedId");

        r5 = virtualinvoke r3.<android.os.Bundle: long[] getLongArray(java.lang.String)>("repeatCheckedIds");

        $r53 = virtualinvoke r3.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("ringtoneTitleCache");

        r0.<com.android.deskclock.AlarmClockFragment: android.os.Bundle mRingtoneTitleCache> = $r53;

        $r52 = virtualinvoke r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("deletedAlarm");

        $r51 = (com.android.deskclock.provider.Alarm) $r52;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mDeletedAlarm> = $r51;

        $z3 = virtualinvoke r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>("undoShowing");

        r0.<com.android.deskclock.AlarmClockFragment: boolean mUndoShowing> = $z3;

        r6 = virtualinvoke r3.<android.os.Bundle: long[] getLongArray(java.lang.String)>("selectedAlarms");

        r7 = virtualinvoke r3.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("previousDayMap");

        $r55 = virtualinvoke r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("selectedAlarm");

        $r54 = (com.android.deskclock.provider.Alarm) $r55;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm> = $r54;

     label1:
        $r9 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r9.<android.view.animation.DecelerateInterpolator: void <init>(float)>(1.0F);

        r0.<com.android.deskclock.AlarmClockFragment: android.view.animation.Interpolator mExpandInterpolator> = $r9;

        $r10 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r10.<android.view.animation.DecelerateInterpolator: void <init>(float)>(0.7F);

        r0.<com.android.deskclock.AlarmClockFragment: android.view.animation.Interpolator mCollapseInterpolator> = $r10;

        $r11 = new android.transition.AutoTransition;

        specialinvoke $r11.<android.transition.AutoTransition: void <init>()>();

        r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mAddRemoveTransition> = $r11;

        $r13 = r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mAddRemoveTransition>;

        virtualinvoke $r13.<android.transition.Transition: android.transition.Transition setDuration(long)>(300L);

        $r15 = new android.transition.AutoTransition;

        specialinvoke $r15.<android.transition.AutoTransition: void <init>()>();

        r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mRepeatTransition> = $r15;

        $r14 = r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mRepeatTransition>;

        virtualinvoke $r14.<android.transition.Transition: android.transition.Transition setDuration(long)>(150L);

        $r19 = r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mRepeatTransition>;

        $r16 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r16.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        virtualinvoke $r19.<android.transition.Transition: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>($r16);

        $r21 = new android.transition.TransitionSet;

        specialinvoke $r21.<android.transition.TransitionSet: void <init>()>();

        $r20 = virtualinvoke $r21.<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>(1);

        $r23 = new android.transition.Fade;

        specialinvoke $r23.<android.transition.Fade: void <init>(int)>(2);

        $r22 = virtualinvoke $r20.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>($r23);

        $r25 = new android.transition.Fade;

        specialinvoke $r25.<android.transition.Fade: void <init>(int)>(1);

        $r24 = virtualinvoke $r22.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>($r25);

        $r27 = virtualinvoke $r24.<android.transition.TransitionSet: android.transition.TransitionSet setDuration(long)>(300L);

        r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mEmptyViewTransition> = $r27;

        $r26 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.content.res.Resources getResources()>();

        $r29 = virtualinvoke $r26.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r29.<android.content.res.Configuration: int orientation>;

        if $i1 != 2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        r8 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623960);

        if r8 == null goto label5;

        if z0 == 0 goto label4;

        virtualinvoke r8.<android.view.View: void setVisibility(int)>(8);

        goto label5;

     label4:
        virtualinvoke r8.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: void setupFakeOverflowMenuButton(android.view.View)>(r8);

     label5:
        $r28 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623956);

        r0.<com.android.deskclock.AlarmClockFragment: android.view.View mEmptyView> = $r28;

        $r32 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623954);

        $r33 = (android.widget.FrameLayout) $r32;

        r0.<com.android.deskclock.AlarmClockFragment: android.widget.FrameLayout mMainLayout> = $r33;

        $r30 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623955);

        $r31 = (android.widget.ListView) $r30;

        r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList> = $r31;

        $r36 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623958);

        $r37 = (com.android.deskclock.widget.ActionableToastBar) $r36;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar> = $r37;

        $r34 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623957);

        r0.<com.android.deskclock.AlarmClockFragment: android.view.View mUndoFrame> = $r34;

        $r35 = r0.<com.android.deskclock.AlarmClockFragment: android.view.View mUndoFrame>;

        virtualinvoke $r35.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        $r40 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131623959);

        r0.<com.android.deskclock.AlarmClockFragment: android.view.View mFooterView> = $r40;

        $r41 = r0.<com.android.deskclock.AlarmClockFragment: android.view.View mFooterView>;

        virtualinvoke $r41.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        $r38 = new com.android.deskclock.AlarmClockFragment$AlarmItemAdapter;

        $r39 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        $r45 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList>;

        specialinvoke $r38.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: void <init>(com.android.deskclock.AlarmClockFragment,android.content.Context,long,long[],long[],android.os.Bundle,android.widget.ListView)>(r0, $r39, l0, r5, r6, r7, $r45);

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter> = $r38;

        $r43 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        $r44 = new com.android.deskclock.AlarmClockFragment$1;

        specialinvoke $r44.<com.android.deskclock.AlarmClockFragment$1: void <init>(com.android.deskclock.AlarmClockFragment)>(r0);

        virtualinvoke $r43.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r44);

        $r42 = r0.<com.android.deskclock.AlarmClockFragment: android.os.Bundle mRingtoneTitleCache>;

        if $r42 != null goto label6;

        $r50 = new android.os.Bundle;

        specialinvoke $r50.<android.os.Bundle: void <init>()>();

        r0.<com.android.deskclock.AlarmClockFragment: android.os.Bundle mRingtoneTitleCache> = $r50;

     label6:
        $r48 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList>;

        $r49 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        virtualinvoke $r48.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r49);

        $r47 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList>;

        virtualinvoke $r47.<android.widget.ListView: void setVerticalScrollBarEnabled(boolean)>(1);

        $r46 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList>;

        virtualinvoke $r46.<android.widget.ListView: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(r0);

        $z2 = r0.<com.android.deskclock.AlarmClockFragment: boolean mUndoShowing>;

        if $z2 == 0 goto label7;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void showUndoBar()>();

     label7:
        return r4;
    }

    private void setUndoBarRightMargin(int)
    {
        com.android.deskclock.AlarmClockFragment r0;
        int i0, $i1, $i2, $i3;
        android.widget.FrameLayout$LayoutParams r1, $r6;
        com.android.deskclock.widget.ActionableToastBar $r2, $r4, $r7;
        android.view.ViewGroup$LayoutParams $r3, $r5;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        $r3 = virtualinvoke $r2.<com.android.deskclock.widget.ActionableToastBar: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.widget.FrameLayout$LayoutParams) $r3;

        $r4 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        $r5 = virtualinvoke $r4.<com.android.deskclock.widget.ActionableToastBar: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.widget.FrameLayout$LayoutParams) $r5;

        $i3 = r1.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $i2 = r1.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i1 = r1.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        virtualinvoke $r6.<android.widget.FrameLayout$LayoutParams: void setMargins(int,int,int,int)>($i3, $i2, i0, $i1);

        $r7 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        virtualinvoke $r7.<com.android.deskclock.widget.ActionableToastBar: void requestLayout()>();

        return;
    }

    public void onResume()
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.DeskClock r1;
        android.content.Intent r2;
        long l0;
        android.app.Activity $r3, $r5;
        int $i1;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r4, $r9;
        boolean $z0, $z1, $z2, $z3;
        byte $b2;
        android.content.Loader $r6, $r7, $r8;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        specialinvoke r0.<com.android.deskclock.DeskClockFragment: void onResume()>();

        $r3 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r1 = (com.android.deskclock.DeskClock) $r3;

        $i1 = virtualinvoke r1.<com.android.deskclock.DeskClock: int getSelectedTab()>();

        if $i1 != 0 goto label1;

        virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: void setFabAppearance()>();

        virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: void setLeftRightButtonAppearance()>();

     label1:
        $r4 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        if $r4 == null goto label2;

        $r9 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        virtualinvoke $r9.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: void notifyDataSetChanged()>();

     label2:
        $r5 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r2 = virtualinvoke $r5.<android.app.Activity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("deskclock.create.new");

        if $z0 == 0 goto label4;

        $z3 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("deskclock.create.new", 0);

        if $z3 == 0 goto label3;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void startCreatingAlarm()>();

     label3:
        virtualinvoke r2.<android.content.Intent: void removeExtra(java.lang.String)>("deskclock.create.new");

        goto label6;

     label4:
        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("deskclock.scroll.to.alarm");

        if $z1 == 0 goto label6;

        l0 = virtualinvoke r2.<android.content.Intent: long getLongExtra(java.lang.String,long)>("deskclock.scroll.to.alarm", -1L);

        $b2 = l0 cmp -1L;

        if $b2 == 0 goto label5;

        r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId> = l0;

        $r6 = r0.<com.android.deskclock.AlarmClockFragment: android.content.Loader mCursorLoader>;

        if $r6 == null goto label5;

        $r7 = r0.<com.android.deskclock.AlarmClockFragment: android.content.Loader mCursorLoader>;

        $z2 = virtualinvoke $r7.<android.content.Loader: boolean isStarted()>();

        if $z2 == 0 goto label5;

        $r8 = r0.<com.android.deskclock.AlarmClockFragment: android.content.Loader mCursorLoader>;

        virtualinvoke $r8.<android.content.Loader: void forceLoad()>();

     label5:
        virtualinvoke r2.<android.content.Intent: void removeExtra(java.lang.String)>("deskclock.scroll.to.alarm");

     label6:
        return;
    }

    private void hideUndoBar(boolean, android.view.MotionEvent)
    {
        com.android.deskclock.AlarmClockFragment r0;
        boolean z0, $z1;
        android.view.MotionEvent r1;
        com.android.deskclock.widget.ActionableToastBar $r2, $r4, $r5;
        android.view.View $r3;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.view.MotionEvent;

        $r2 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: android.view.View mUndoFrame>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        if r1 == null goto label1;

        $r5 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        $z1 = virtualinvoke $r5.<com.android.deskclock.widget.ActionableToastBar: boolean isEventInToastBar(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        virtualinvoke $r4.<com.android.deskclock.widget.ActionableToastBar: void hide(boolean)>(z0);

     label2:
        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mDeletedAlarm> = null;

        r0.<com.android.deskclock.AlarmClockFragment: boolean mUndoShowing> = 0;

        return;
    }

    private void showUndoBar()
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        android.view.View $r2;
        com.android.deskclock.AlarmClockFragment$2 $r3;
        com.android.deskclock.widget.ActionableToastBar $r4;
        android.content.res.Resources $r5;
        java.lang.String $r6;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mDeletedAlarm>;

        $r2 = r0.<com.android.deskclock.AlarmClockFragment: android.view.View mUndoFrame>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        $r4 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.widget.ActionableToastBar mUndoBar>;

        $r3 = new com.android.deskclock.AlarmClockFragment$2;

        specialinvoke $r3.<com.android.deskclock.AlarmClockFragment$2: void <init>(com.android.deskclock.AlarmClockFragment,com.android.deskclock.provider.Alarm)>(r0, r1);

        $r5 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131558551);

        virtualinvoke $r4.<com.android.deskclock.widget.ActionableToastBar: void show(com.android.deskclock.widget.ActionableToastBar$ActionClickedListener,int,java.lang.CharSequence,boolean,int,boolean)>($r3, 0, $r6, 1, 2131558550, 1);

        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.os.Bundle r1, $r7, $r11;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r2, $r3, $r5, $r9;
        long $l0;
        long[] $r4, $r6;
        com.android.deskclock.provider.Alarm $r8, $r10;
        boolean $z0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.deskclock.DeskClockFragment: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r2 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        $l0 = virtualinvoke $r2.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: long getExpandedId()>();

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("expandedId", $l0);

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        $r4 = virtualinvoke $r3.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: long[] getRepeatArray()>();

        virtualinvoke r1.<android.os.Bundle: void putLongArray(java.lang.String,long[])>("repeatCheckedIds", $r4);

        $r5 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        $r6 = virtualinvoke $r5.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: long[] getSelectedAlarmsArray()>();

        virtualinvoke r1.<android.os.Bundle: void putLongArray(java.lang.String,long[])>("selectedAlarms", $r6);

        $r7 = r0.<com.android.deskclock.AlarmClockFragment: android.os.Bundle mRingtoneTitleCache>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("ringtoneTitleCache", $r7);

        $r8 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mDeletedAlarm>;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("deletedAlarm", $r8);

        $z0 = r0.<com.android.deskclock.AlarmClockFragment: boolean mUndoShowing>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("undoShowing", $z0);

        $r9 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        $r11 = virtualinvoke $r9.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: android.os.Bundle getPreviousDaysOfWeekMap()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("previousDayMap", $r11);

        $r10 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("selectedAlarm", $r10);

        return;
    }

    public void onDestroy()
    {
        com.android.deskclock.AlarmClockFragment r0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        specialinvoke r0.<com.android.deskclock.DeskClockFragment: void onDestroy()>();

        staticinvoke <com.android.deskclock.ToastMaster: void cancelToast()>();

        return;
    }

    public void onPause()
    {
        com.android.deskclock.AlarmClockFragment r0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        specialinvoke r0.<com.android.deskclock.DeskClockFragment: void onPause()>();

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void hideUndoBar(boolean,android.view.MotionEvent)>(0, null);

        return;
    }

    public void onTimeSet(android.widget.TimePicker, int, int)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.widget.TimePicker r1;
        int i0, i1;
        com.android.deskclock.provider.Alarm r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        long $l2;
        android.app.Activity $r10;
        android.net.Uri $r11, $r12, $r13;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.widget.TimePicker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        if $r3 != null goto label2;

        $r9 = new com.android.deskclock.provider.Alarm;

        specialinvoke $r9.<com.android.deskclock.provider.Alarm: void <init>()>();

        r2 = $r9;

        $r10 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        $r11 = staticinvoke <android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>($r10, 4);

        r2.<com.android.deskclock.provider.Alarm: android.net.Uri alert> = $r11;

        $r12 = r2.<com.android.deskclock.provider.Alarm: android.net.Uri alert>;

        if $r12 != null goto label1;

        $r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/system/alarm_alert");

        r2.<com.android.deskclock.provider.Alarm: android.net.Uri alert> = $r13;

     label1:
        r2.<com.android.deskclock.provider.Alarm: int hour> = i0;

        r2.<com.android.deskclock.provider.Alarm: int minutes> = i1;

        r2.<com.android.deskclock.provider.Alarm: boolean enabled> = 1;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mAddedAlarm> = r2;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncAddAlarm(com.android.deskclock.provider.Alarm)>(r2);

        goto label3;

     label2:
        $r4 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        $r4.<com.android.deskclock.provider.Alarm: int hour> = i0;

        $r5 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        $r5.<com.android.deskclock.provider.Alarm: int minutes> = i1;

        $r6 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        $r6.<com.android.deskclock.provider.Alarm: boolean enabled> = 1;

        $r7 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        $l2 = $r7.<com.android.deskclock.provider.Alarm: long id>;

        r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId> = $l2;

        $r8 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncUpdateAlarm(com.android.deskclock.provider.Alarm,boolean)>($r8, 1);

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm> = null;

     label3:
        return;
    }

    private void showLabelDialog(com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        android.app.FragmentTransaction r2;
        android.app.Fragment r3;
        com.android.deskclock.LabelDialogFragment r4;
        android.app.FragmentManager $r5, $r6;
        java.lang.String $r8, $r9;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: com.android.deskclock.provider.Alarm;

        $r5 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.FragmentManager getFragmentManager()>();

        r2 = virtualinvoke $r5.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r6 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.FragmentManager getFragmentManager()>();

        r3 = virtualinvoke $r6.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("label_dialog");

        if r3 == null goto label1;

        virtualinvoke r2.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r3);

     label1:
        virtualinvoke r2.<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>(null);

        $r8 = r1.<com.android.deskclock.provider.Alarm: java.lang.String label>;

        $r9 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: java.lang.String getTag()>();

        r4 = staticinvoke <com.android.deskclock.LabelDialogFragment: com.android.deskclock.LabelDialogFragment newInstance(com.android.deskclock.provider.Alarm,java.lang.String,java.lang.String)>(r1, $r8, $r9);

        virtualinvoke r4.<com.android.deskclock.LabelDialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>(r2, "label_dialog");

        return;
    }

    public void setLabel(com.android.deskclock.provider.Alarm, java.lang.String)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        java.lang.String r2;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: com.android.deskclock.provider.Alarm;

        r2 := @parameter1: java.lang.String;

        r1.<com.android.deskclock.provider.Alarm: java.lang.String label> = r2;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncUpdateAlarm(com.android.deskclock.provider.Alarm,boolean)>(r1, 0);

        return;
    }

    public android.content.Loader onCreateLoader(int, android.os.Bundle)
    {
        android.content.CursorLoader $r0;
        com.android.deskclock.AlarmClockFragment r1;
        int i0;
        android.os.Bundle r2;
        android.app.Activity $r3;

        r1 := @this: com.android.deskclock.AlarmClockFragment;

        i0 := @parameter0: int;

        r2 := @parameter1: android.os.Bundle;

        $r3 = virtualinvoke r1.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        $r0 = staticinvoke <com.android.deskclock.provider.Alarm: android.content.CursorLoader getAlarmsCursorLoader(android.content.Context)>($r3);

        return $r0;
    }

    public void onLoadFinished(android.content.Loader, android.database.Cursor)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.content.Loader r1;
        android.database.Cursor r2;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r3;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.content.Loader;

        r2 := @parameter1: android.database.Cursor;

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        virtualinvoke $r3.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(r2);

        $l0 = r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId>;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void scrollToAlarm(long)>($l2);

        r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId> = -1L;

     label1:
        return;
    }

    private void scrollToAlarm(long)
    {
        com.android.deskclock.AlarmClockFragment r0;
        long l0, l3;
        int i1, i2, $i4;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r1, $r3, $r5;
        android.app.Activity $r2;
        android.widget.ListView $r4;
        byte $b5;
        android.content.Context r6;
        android.widget.Toast r7;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        l0 := @parameter0: long;

        i1 = -1;

        i2 = 0;

     label1:
        $r1 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        $i4 = virtualinvoke $r1.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: int getCount()>();

        if i2 >= $i4 goto label3;

        $r5 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        l3 = virtualinvoke $r5.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: long getItemId(int)>(i2);

        $b5 = l3 cmp l0;

        if $b5 != 0 goto label2;

        i1 = i2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if i1 < 0 goto label4;

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        virtualinvoke $r3.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: void setNewAlarm(long)>(l0);

        $r4 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList>;

        virtualinvoke $r4.<android.widget.ListView: void smoothScrollToPositionFromTop(int,int)>(i1, 0);

        goto label5;

     label4:
        $r2 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r6 = virtualinvoke $r2.<android.app.Activity: android.content.Context getApplicationContext()>();

        r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r6, 2131558435, 1);

        staticinvoke <com.android.deskclock.ToastMaster: void setToast(android.widget.Toast)>(r7);

        virtualinvoke r7.<android.widget.Toast: void show()>();

     label5:
        return;
    }

    public void onLoaderReset(android.content.Loader)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.content.Loader r1;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r2;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.content.Loader;

        $r2 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        virtualinvoke $r2.<com.android.deskclock.AlarmClockFragment$AlarmItemAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(null);

        return;
    }

    private void launchRingTonePicker(com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        android.net.Uri r2, $r4, $r5, $r10;
        android.content.Intent r3, $r6;
        boolean $z0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: com.android.deskclock.provider.Alarm;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm> = r1;

        $r5 = <com.android.deskclock.provider.Alarm: android.net.Uri NO_RINGTONE_URI>;

        $r4 = r1.<com.android.deskclock.provider.Alarm: android.net.Uri alert>;

        $z0 = virtualinvoke $r5.<android.net.Uri: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r10 = r1.<com.android.deskclock.provider.Alarm: android.net.Uri alert>;

     label2:
        r2 = $r10;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.RINGTONE_PICKER");

        r3 = $r6;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.ringtone.EXISTING_URI", r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.ringtone.TYPE", 4);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.ringtone.SHOW_DEFAULT", 0);

        virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: void startActivityForResult(android.content.Intent,int)>(r3, 1);

        return;
    }

    private void saveRingtoneUri(android.content.Intent)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.content.Intent r1;
        android.net.Uri r2, $r5;
        android.os.Parcelable $r3;
        com.android.deskclock.provider.Alarm $r4, $r6;
        boolean $z0;
        android.app.Activity $r7;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.ringtone.PICKED_URI");

        r2 = (android.net.Uri) $r3;

        if r2 != null goto label1;

        r2 = <com.android.deskclock.provider.Alarm: android.net.Uri NO_RINGTONE_URI>;

     label1:
        $r4 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        $r4.<com.android.deskclock.provider.Alarm: android.net.Uri alert> = r2;

        $r5 = <com.android.deskclock.provider.Alarm: android.net.Uri NO_RINGTONE_URI>;

        $z0 = virtualinvoke $r5.<android.net.Uri: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        staticinvoke <android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>($r7, 4, r2);

     label2:
        $r6 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm>;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncUpdateAlarm(com.android.deskclock.provider.Alarm,boolean)>($r6, 0);

        return;
    }

    public void onActivityResult(int, int, android.content.Intent)
    {
        com.android.deskclock.AlarmClockFragment r0;
        int i0, i1;
        android.content.Intent r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.Object[] $r6;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        if i1 != -1 goto label3;

        lookupswitch(i0)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void saveRingtoneUri(android.content.Intent)>(r1);

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled request code in onActivityResult: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void w(java.lang.String,java.lang.Object[])>($r5, $r6);

     label3:
        return;
    }

    private void startCreatingAlarm()
    {
        com.android.deskclock.AlarmClockFragment r0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm> = null;

        staticinvoke <com.android.deskclock.AlarmUtils: void showTimeEditDialog(android.app.Fragment,com.android.deskclock.provider.Alarm)>(r0, null);

        return;
    }

    private static com.android.deskclock.provider.AlarmInstance setupAlarmInstance(android.content.Context, com.android.deskclock.provider.Alarm)
    {
        android.content.Context r0;
        com.android.deskclock.provider.Alarm r1;
        android.content.ContentResolver r2;
        com.android.deskclock.provider.AlarmInstance r3, r5;
        java.util.Calendar $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r3 = virtualinvoke r1.<com.android.deskclock.provider.Alarm: com.android.deskclock.provider.AlarmInstance createInstanceAfter(java.util.Calendar)>($r4);

        r5 = staticinvoke <com.android.deskclock.provider.AlarmInstance: com.android.deskclock.provider.AlarmInstance addInstance(android.content.ContentResolver,com.android.deskclock.provider.AlarmInstance)>(r2, r3);

        staticinvoke <com.android.deskclock.alarms.AlarmStateManager: void registerInstance(android.content.Context,com.android.deskclock.provider.AlarmInstance,boolean)>(r0, r5, 1);

        return r5;
    }

    private void asyncDeleteAlarm(com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        android.content.Context r2;
        com.android.deskclock.AlarmClockFragment$3 r3, $r5;
        android.app.Activity $r4;
        java.lang.Void[] $r6;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: com.android.deskclock.provider.Alarm;

        $r4 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r2 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r5 = new com.android.deskclock.AlarmClockFragment$3;

        specialinvoke $r5.<com.android.deskclock.AlarmClockFragment$3: void <init>(com.android.deskclock.AlarmClockFragment,android.content.Context,com.android.deskclock.provider.Alarm)>(r0, r2, r1);

        r3 = $r5;

        r0.<com.android.deskclock.AlarmClockFragment: boolean mUndoShowing> = 1;

        $r6 = newarray (java.lang.Void)[0];

        virtualinvoke r3.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r6);

        return;
    }

    private void asyncAddAlarm(com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        android.content.Context r2;
        com.android.deskclock.AlarmClockFragment$4 r3, $r5;
        android.app.Activity $r4;
        java.lang.Void[] $r6;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: com.android.deskclock.provider.Alarm;

        $r4 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r2 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r5 = new com.android.deskclock.AlarmClockFragment$4;

        specialinvoke $r5.<com.android.deskclock.AlarmClockFragment$4: void <init>(com.android.deskclock.AlarmClockFragment,android.content.Context,com.android.deskclock.provider.Alarm)>(r0, r2, r1);

        r3 = $r5;

        $r6 = newarray (java.lang.Void)[0];

        virtualinvoke r3.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r6);

        return;
    }

    private void asyncUpdateAlarm(com.android.deskclock.provider.Alarm, boolean)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        boolean z0;
        android.content.Context r2;
        com.android.deskclock.AlarmClockFragment$5 r3, $r5;
        android.app.Activity $r4;
        java.lang.Void[] $r6;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: com.android.deskclock.provider.Alarm;

        z0 := @parameter1: boolean;

        $r4 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r2 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>();

        $r5 = new com.android.deskclock.AlarmClockFragment$5;

        specialinvoke $r5.<com.android.deskclock.AlarmClockFragment$5: void <init>(com.android.deskclock.AlarmClockFragment,android.content.Context,com.android.deskclock.provider.Alarm,boolean)>(r0, r2, r1, z0);

        r3 = $r5;

        $r6 = newarray (java.lang.Void)[0];

        virtualinvoke r3.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r6);

        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.view.View r1;
        android.view.MotionEvent r2;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void hideUndoBar(boolean,android.view.MotionEvent)>(1, r2);

        return 0;
    }

    public void onFabClick(android.view.View)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.view.View r1;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void hideUndoBar(boolean,android.view.MotionEvent)>(1, null);

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void startCreatingAlarm()>();

        return;
    }

    public void setFabAppearance()
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.DeskClock r1;
        android.app.Activity $r2;
        android.widget.ImageButton $r3, $r4, $r5, $r6;
        int $i0;
        java.lang.String $r7;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        $r2 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r1 = (com.android.deskclock.DeskClock) $r2;

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mFab>;

        if $r3 == null goto label1;

        $i0 = virtualinvoke r1.<com.android.deskclock.DeskClock: int getSelectedTab()>();

        if $i0 == 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mFab>;

        virtualinvoke $r4.<android.widget.ImageButton: void setVisibility(int)>(0);

        $r5 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mFab>;

        virtualinvoke $r5.<android.widget.ImageButton: void setImageResource(int)>(2130837544);

        $r6 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mFab>;

        $r7 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: java.lang.String getString(int)>(2131558483);

        virtualinvoke $r6.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r7);

        return;
    }

    public void setLeftRightButtonAppearance()
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.DeskClock r1;
        android.app.Activity $r2;
        android.widget.ImageButton $r3, $r4, $r5, $r6;
        int $i0;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        $r2 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        r1 = (com.android.deskclock.DeskClock) $r2;

        $r3 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mLeftButton>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mRightButton>;

        if $r4 == null goto label1;

        $i0 = virtualinvoke r1.<com.android.deskclock.DeskClock: int getSelectedTab()>();

        if $i0 == 0 goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mLeftButton>;

        virtualinvoke $r5.<android.widget.ImageButton: void setVisibility(int)>(4);

        $r6 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ImageButton mRightButton>;

        virtualinvoke $r6.<android.widget.ImageButton: void setVisibility(int)>(4);

        return;
    }

    public volatile void onLoadFinished(android.content.Loader, java.lang.Object)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.content.Loader r1;
        java.lang.Object r2;
        android.database.Cursor $r3;

        r0 := @this: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter0: android.content.Loader;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.database.Cursor) r2;

        virtualinvoke r0.<com.android.deskclock.AlarmClockFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>(r1, $r3);

        return;
    }

    static com.android.deskclock.AlarmClockFragment$AlarmItemAdapter access$000(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.AlarmClockFragment$AlarmItemAdapter $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.AlarmClockFragment$AlarmItemAdapter mAdapter>;

        return $r1;
    }

    static com.android.deskclock.provider.Alarm access$100(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mDeletedAlarm>;

        return $r1;
    }

    static void access$200(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void showUndoBar()>();

        return;
    }

    static android.widget.FrameLayout access$300(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.widget.FrameLayout $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.FrameLayout mMainLayout>;

        return $r1;
    }

    static android.transition.Transition access$400(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.transition.Transition $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mEmptyViewTransition>;

        return $r1;
    }

    static android.view.View access$500(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.view.View mEmptyView>;

        return $r1;
    }

    static com.android.deskclock.provider.Alarm access$602(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mAddedAlarm> = r1;

        return r1;
    }

    static com.android.deskclock.provider.Alarm access$102(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mDeletedAlarm> = r1;

        return r1;
    }

    static boolean access$702(com.android.deskclock.AlarmClockFragment, boolean)
    {
        com.android.deskclock.AlarmClockFragment r0;
        boolean z0;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        z0 := @parameter1: boolean;

        r0.<com.android.deskclock.AlarmClockFragment: boolean mUndoShowing> = z0;

        return z0;
    }

    static void access$800(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncAddAlarm(com.android.deskclock.provider.Alarm)>(r1);

        return;
    }

    static com.android.deskclock.provider.Alarm access$600(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mAddedAlarm>;

        return $r1;
    }

    static android.widget.ListView access$1200(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.widget.ListView $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.widget.ListView mAlarmsList>;

        return $r1;
    }

    static android.transition.Transition access$1300(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.transition.Transition $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mAddRemoveTransition>;

        return $r1;
    }

    static com.android.deskclock.provider.Alarm access$1402(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        r0.<com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.Alarm mSelectedAlarm> = r1;

        return r1;
    }

    static void access$1800(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm, boolean)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;
        boolean z0;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncUpdateAlarm(com.android.deskclock.provider.Alarm,boolean)>(r1, z0);

        return;
    }

    static void access$2000(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void asyncDeleteAlarm(com.android.deskclock.provider.Alarm)>(r1);

        return;
    }

    static void access$2300(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void showLabelDialog(com.android.deskclock.provider.Alarm)>(r1);

        return;
    }

    static android.transition.Transition access$2400(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.transition.Transition $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.transition.Transition mRepeatTransition>;

        return $r1;
    }

    static void access$3000(com.android.deskclock.AlarmClockFragment, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment r0;
        com.android.deskclock.provider.Alarm r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        specialinvoke r0.<com.android.deskclock.AlarmClockFragment: void launchRingTonePicker(com.android.deskclock.provider.Alarm)>(r1);

        return;
    }

    static android.os.Bundle access$3100(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.os.Bundle $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.os.Bundle mRingtoneTitleCache>;

        return $r1;
    }

    static android.view.animation.Interpolator access$3200(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.view.animation.Interpolator $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.view.animation.Interpolator mExpandInterpolator>;

        return $r1;
    }

    static android.view.animation.Interpolator access$3400(com.android.deskclock.AlarmClockFragment)
    {
        com.android.deskclock.AlarmClockFragment r0;
        android.view.animation.Interpolator $r1;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        $r1 = r0.<com.android.deskclock.AlarmClockFragment: android.view.animation.Interpolator mCollapseInterpolator>;

        return $r1;
    }

    static com.android.deskclock.DeskClockExtensions access$3500()
    {
        com.android.deskclock.DeskClockExtensions $r0;

        $r0 = <com.android.deskclock.AlarmClockFragment: com.android.deskclock.DeskClockExtensions sDeskClockExtensions>;

        return $r0;
    }

    static long access$3602(com.android.deskclock.AlarmClockFragment, long)
    {
        com.android.deskclock.AlarmClockFragment r0;
        long l0;

        r0 := @parameter0: com.android.deskclock.AlarmClockFragment;

        l0 := @parameter1: long;

        r0.<com.android.deskclock.AlarmClockFragment: long mScrollToAlarmId> = l0;

        return l0;
    }

    static com.android.deskclock.provider.AlarmInstance access$3700(android.content.Context, com.android.deskclock.provider.Alarm)
    {
        android.content.Context r0;
        com.android.deskclock.provider.Alarm r1;
        com.android.deskclock.provider.AlarmInstance $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.deskclock.provider.Alarm;

        $r2 = staticinvoke <com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.AlarmInstance setupAlarmInstance(android.content.Context,com.android.deskclock.provider.Alarm)>(r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.android.deskclock.DeskClockExtensions $r0;

        <com.android.deskclock.AlarmClockFragment: java.lang.String SCROLL_TO_ALARM_INTENT_EXTRA> = "deskclock.scroll.to.alarm";

        <com.android.deskclock.AlarmClockFragment: java.lang.String ALARM_CREATE_NEW_INTENT_EXTRA> = "deskclock.create.new";

        <com.android.deskclock.AlarmClockFragment: long INVALID_ID> = -1L;

        <com.android.deskclock.AlarmClockFragment: int REQUEST_CODE_RINGTONE> = 1;

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_SELECTED_ALARM> = "selectedAlarm";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_PREVIOUS_DAY_MAP> = "previousDayMap";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_UNDO_SHOWING> = "undoShowing";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_DELETED_ALARM> = "deletedAlarm";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_SELECTED_ALARMS> = "selectedAlarms";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_RINGTONE_TITLE_CACHE> = "ringtoneTitleCache";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_REPEAT_CHECKED_IDS> = "repeatCheckedIds";

        <com.android.deskclock.AlarmClockFragment: java.lang.String KEY_EXPANDED_ID> = "expandedId";

        <com.android.deskclock.AlarmClockFragment: float TINTED_LEVEL> = 0.09F;

        <com.android.deskclock.AlarmClockFragment: float ALARM_ELEVATION> = 8.0F;

        <com.android.deskclock.AlarmClockFragment: int ROTATE_180_DEGREE> = 180;

        <com.android.deskclock.AlarmClockFragment: int COLLAPSE_DURATION> = 250;

        <com.android.deskclock.AlarmClockFragment: int EXPAND_DURATION> = 300;

        <com.android.deskclock.AlarmClockFragment: int ANIMATION_DURATION> = 300;

        <com.android.deskclock.AlarmClockFragment: float COLLAPSE_DECELERATION> = 0.7F;

        <com.android.deskclock.AlarmClockFragment: float EXPAND_DECELERATION> = 1.0F;

        $r0 = staticinvoke <com.android.deskclock.ExtensionsFactory: com.android.deskclock.DeskClockExtensions getDeskClockExtensions()>();

        <com.android.deskclock.AlarmClockFragment: com.android.deskclock.DeskClockExtensions sDeskClockExtensions> = $r0;

        return;
    }
}
