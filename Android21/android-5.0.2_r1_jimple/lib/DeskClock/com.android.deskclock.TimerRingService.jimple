public class com.android.deskclock.TimerRingService extends android.app.Service implements android.media.AudioManager$OnAudioFocusChangeListener
{
    private boolean mPlaying;
    private android.media.MediaPlayer mMediaPlayer;
    private android.telephony.TelephonyManager mTelephonyManager;
    private int mInitialCallState;
    private final android.telephony.PhoneStateListener mPhoneStateListener;
    private static final float IN_CALL_VOLUME;

    public void <init>()
    {
        com.android.deskclock.TimerRingService r0;
        com.android.deskclock.TimerRingService$1 $r1;

        r0 := @this: com.android.deskclock.TimerRingService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        r0.<com.android.deskclock.TimerRingService: boolean mPlaying> = 0;

        $r1 = new com.android.deskclock.TimerRingService$1;

        specialinvoke $r1.<com.android.deskclock.TimerRingService$1: void <init>(com.android.deskclock.TimerRingService)>(r0);

        r0.<com.android.deskclock.TimerRingService: android.telephony.PhoneStateListener mPhoneStateListener> = $r1;

        return;
    }

    public void onCreate()
    {
        com.android.deskclock.TimerRingService r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2, $r4;
        android.telephony.PhoneStateListener $r3;

        r0 := @this: com.android.deskclock.TimerRingService;

        $r1 = virtualinvoke r0.<com.android.deskclock.TimerRingService: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        r0.<com.android.deskclock.TimerRingService: android.telephony.TelephonyManager mTelephonyManager> = $r2;

        $r4 = r0.<com.android.deskclock.TimerRingService: android.telephony.TelephonyManager mTelephonyManager>;

        $r3 = r0.<com.android.deskclock.TimerRingService: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r4.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r3, 32);

        staticinvoke <com.android.deskclock.AlarmAlertWakeLock: void acquireScreenCpuWakeLock(android.content.Context)>(r0);

        return;
    }

    public void onDestroy()
    {
        com.android.deskclock.TimerRingService r0;
        android.telephony.PhoneStateListener $r1;
        android.telephony.TelephonyManager $r2;

        r0 := @this: com.android.deskclock.TimerRingService;

        virtualinvoke r0.<com.android.deskclock.TimerRingService: void stop()>();

        $r2 = r0.<com.android.deskclock.TimerRingService: android.telephony.TelephonyManager mTelephonyManager>;

        $r1 = r0.<com.android.deskclock.TimerRingService: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke $r2.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r1, 0);

        staticinvoke <com.android.deskclock.AlarmAlertWakeLock: void releaseCpuLock()>();

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.deskclock.TimerRingService r0;
        android.content.Intent r1;

        r0 := @this: com.android.deskclock.TimerRingService;

        r1 := @parameter0: android.content.Intent;

        return null;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        com.android.deskclock.TimerRingService r0;
        android.content.Intent r1;
        int i0, i1, $i2;
        android.telephony.TelephonyManager $r2;

        r0 := @this: com.android.deskclock.TimerRingService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.deskclock.TimerRingService: void stopSelf()>();

        return 2;

     label1:
        specialinvoke r0.<com.android.deskclock.TimerRingService: void play()>();

        $r2 = r0.<com.android.deskclock.TimerRingService: android.telephony.TelephonyManager mTelephonyManager>;

        $i2 = virtualinvoke $r2.<android.telephony.TelephonyManager: int getCallState()>();

        r0.<com.android.deskclock.TimerRingService: int mInitialCallState> = $i2;

        return 1;
    }

    private void play()
    {
        com.android.deskclock.TimerRingService r0;
        android.content.res.AssetFileDescriptor r1;
        java.lang.Exception r2, $r15, $r18;
        boolean $z0;
        java.lang.Object[] $r3, $r11, $r17;
        android.media.MediaPlayer $r4, $r6, $r9, $r12, $r14, $r16, $r20, $r21, $r22;
        com.android.deskclock.TimerRingService$2 $r5;
        android.telephony.TelephonyManager $r7;
        int $i0;
        android.content.res.AssetManager $r8;
        java.io.FileDescriptor $r10;
        long $l1, $l2;
        android.content.res.Resources $r13, $r19;

        r0 := @this: com.android.deskclock.TimerRingService;

        $z0 = r0.<com.android.deskclock.TimerRingService: boolean mPlaying>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("TimerRingService.play()", $r3);

        $r4 = new android.media.MediaPlayer;

        specialinvoke $r4.<android.media.MediaPlayer: void <init>()>();

        r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer> = $r4;

        $r6 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        $r5 = new com.android.deskclock.TimerRingService$2;

        specialinvoke $r5.<com.android.deskclock.TimerRingService$2: void <init>(com.android.deskclock.TimerRingService)>(r0);

        virtualinvoke $r6.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>($r5);

     label02:
        $r7 = r0.<com.android.deskclock.TimerRingService: android.telephony.TelephonyManager mTelephonyManager>;

        $i0 = virtualinvoke $r7.<android.telephony.TelephonyManager: int getCallState()>();

        if $i0 == 0 goto label03;

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("Using the in-call alarm", $r11);

        $r14 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r14.<android.media.MediaPlayer: void setVolume(float,float)>(0.125F, 0.125F);

        $r13 = virtualinvoke r0.<com.android.deskclock.TimerRingService: android.content.res.Resources getResources()>();

        $r16 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        specialinvoke r0.<com.android.deskclock.TimerRingService: void setDataSourceFromResource(android.content.res.Resources,android.media.MediaPlayer,int)>($r13, $r16, 2131165185);

        goto label04;

     label03:
        $r8 = virtualinvoke r0.<com.android.deskclock.TimerRingService: android.content.res.AssetManager getAssets()>();

        r1 = virtualinvoke $r8.<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>("sounds/Timer_Expire.ogg");

        $r9 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        $r10 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l1 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l2 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getLength()>();

        virtualinvoke $r9.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r10, $l1, $l2);

     label04:
        $r12 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        specialinvoke r0.<com.android.deskclock.TimerRingService: void startAlarm(android.media.MediaPlayer)>($r12);

     label05:
        goto label10;

     label06:
        $r18 := @caughtexception;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("Using the fallback ringtone", $r17);

     label07:
        $r20 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r20.<android.media.MediaPlayer: void reset()>();

        $r19 = virtualinvoke r0.<com.android.deskclock.TimerRingService: android.content.res.Resources getResources()>();

        $r22 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        specialinvoke r0.<com.android.deskclock.TimerRingService: void setDataSourceFromResource(android.content.res.Resources,android.media.MediaPlayer,int)>($r19, $r22, 2131165184);

        $r21 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        specialinvoke r0.<com.android.deskclock.TimerRingService: void startAlarm(android.media.MediaPlayer)>($r21);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        r2 = $r15;

        staticinvoke <com.android.deskclock.LogUtils: void e(java.lang.String,java.lang.Exception)>("Failed to play fallback ringtone", r2);

     label10:
        r0.<com.android.deskclock.TimerRingService: boolean mPlaying> = 1;

        return;

        catch java.lang.Exception from label02 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private void startAlarm(android.media.MediaPlayer) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        com.android.deskclock.TimerRingService r0;
        android.media.MediaPlayer r1;
        android.media.AudioManager r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @this: com.android.deskclock.TimerRingService;

        r1 := @parameter0: android.media.MediaPlayer;

        $r3 = virtualinvoke r0.<com.android.deskclock.TimerRingService: java.lang.Object getSystemService(java.lang.String)>("audio");

        r2 = (android.media.AudioManager) $r3;

        $i0 = virtualinvoke r2.<android.media.AudioManager: int getStreamVolume(int)>(4);

        if $i0 == 0 goto label1;

        virtualinvoke r1.<android.media.MediaPlayer: void setAudioStreamType(int)>(4);

        virtualinvoke r1.<android.media.MediaPlayer: void setLooping(boolean)>(1);

        virtualinvoke r1.<android.media.MediaPlayer: void prepare()>();

        virtualinvoke r2.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>(r0, 4, 2);

        virtualinvoke r1.<android.media.MediaPlayer: void start()>();

     label1:
        return;
    }

    private void setDataSourceFromResource(android.content.res.Resources, android.media.MediaPlayer, int) throws java.io.IOException
    {
        com.android.deskclock.TimerRingService r0;
        android.content.res.Resources r1;
        android.media.MediaPlayer r2;
        int i0;
        android.content.res.AssetFileDescriptor r3;
        java.io.FileDescriptor $r4;
        long $l1, $l2;

        r0 := @this: com.android.deskclock.TimerRingService;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.media.MediaPlayer;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(i0);

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l1 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l2 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: long getLength()>();

        virtualinvoke r2.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r4, $l1, $l2);

        virtualinvoke r3.<android.content.res.AssetFileDescriptor: void close()>();

     label1:
        return;
    }

    public void stop()
    {
        com.android.deskclock.TimerRingService r0;
        android.media.AudioManager r1;
        java.lang.Object[] $r2;
        boolean $z0;
        android.media.MediaPlayer $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.deskclock.TimerRingService;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.deskclock.LogUtils: void v(java.lang.String,java.lang.Object[])>("TimerRingService.stop()", $r2);

        $z0 = r0.<com.android.deskclock.TimerRingService: boolean mPlaying>;

        if $z0 == 0 goto label1;

        r0.<com.android.deskclock.TimerRingService: boolean mPlaying> = 0;

        $r3 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r4.<android.media.MediaPlayer: void stop()>();

        $r5 = virtualinvoke r0.<com.android.deskclock.TimerRingService: java.lang.Object getSystemService(java.lang.String)>("audio");

        r1 = (android.media.AudioManager) $r5;

        virtualinvoke r1.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>(r0);

        $r6 = r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r6.<android.media.MediaPlayer: void release()>();

        r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer> = null;

     label1:
        return;
    }

    public void onAudioFocusChange(int)
    {
        com.android.deskclock.TimerRingService r0;
        int i0;

        r0 := @this: com.android.deskclock.TimerRingService;

        i0 := @parameter0: int;

        return;
    }

    static int access$000(com.android.deskclock.TimerRingService)
    {
        com.android.deskclock.TimerRingService r0;
        int $i0;

        r0 := @parameter0: com.android.deskclock.TimerRingService;

        $i0 = r0.<com.android.deskclock.TimerRingService: int mInitialCallState>;

        return $i0;
    }

    static android.media.MediaPlayer access$102(com.android.deskclock.TimerRingService, android.media.MediaPlayer)
    {
        com.android.deskclock.TimerRingService r0;
        android.media.MediaPlayer r1;

        r0 := @parameter0: com.android.deskclock.TimerRingService;

        r1 := @parameter1: android.media.MediaPlayer;

        r0.<com.android.deskclock.TimerRingService: android.media.MediaPlayer mMediaPlayer> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <com.android.deskclock.TimerRingService: float IN_CALL_VOLUME> = 0.125F;

        return;
    }
}
