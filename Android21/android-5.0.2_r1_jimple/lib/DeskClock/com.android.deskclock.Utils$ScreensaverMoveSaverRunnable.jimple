public class com.android.deskclock.Utils$ScreensaverMoveSaverRunnable extends java.lang.Object implements java.lang.Runnable
{
    static final long MOVE_DELAY;
    static final long SLIDE_TIME;
    static final long FADE_TIME;
    static final boolean SLIDE;
    private android.view.View mContentView;
    private android.view.View mSaverView;
    private final android.os.Handler mHandler;
    private static android.animation.TimeInterpolator mSlowStartWithBrakes;

    public void <init>(android.os.Handler)
    {
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable r0;
        android.os.Handler r1;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1 $r2;

        r0 := @this: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.os.Handler mHandler> = r1;

        $r2 = new com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1;

        specialinvoke $r2.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1: void <init>(com.android.deskclock.Utils$ScreensaverMoveSaverRunnable)>(r0);

        <com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.animation.TimeInterpolator mSlowStartWithBrakes> = $r2;

        return;
    }

    public void registerViews(android.view.View, android.view.View)
    {
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable r0;
        android.view.View r1, r2;

        r0 := @this: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mContentView> = r1;

        r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView> = r2;

        return;
    }

    public void run()
    {
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable r0;
        long l0, $l11, $l12, l14, l15, l16;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i9;
        android.animation.AnimatorSet r1, r8, r9, $r25, $r38, $r42, $r55, $r57;
        android.animation.ObjectAnimator r2, r3, r4, r5, r6, r7, r10, r11, $r69, $r70;
        android.view.animation.DecelerateInterpolator r12, $r45;
        android.view.animation.AccelerateInterpolator r13, $r46;
        android.os.Handler $r14, $r16, $r67, $r68;
        android.view.View $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r29, $r30, $r33, $r36, $r41, $r44, $r47, $r66, $r71, $r73;
        byte $b8, $b10, $b13;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float[] $r23, $r28, $r31, $r32, $r34, $r35, $r48, $r49, $r72;
        android.animation.AnimatorSet$Builder $r39, $r43, $r52, $r58, $r60, $r62;
        android.animation.Animator $r53, $r54, $r56, $r65;

        r0 := @this: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable;

        l0 = 60000L;

        $r15 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mContentView>;

        if $r15 == null goto label1;

        $r18 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        if $r18 != null goto label2;

     label1:
        $r14 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.os.Handler mHandler>;

        virtualinvoke $r14.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

        $r16 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.os.Handler mHandler>;

        virtualinvoke $r16.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, l0);

        return;

     label2:
        $r17 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mContentView>;

        $i3 = virtualinvoke $r17.<android.view.View: int getWidth()>();

        $r19 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $i5 = virtualinvoke $r19.<android.view.View: int getWidth()>();

        $i4 = $i3 - $i5;

        f0 = (float) $i4;

        $r20 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mContentView>;

        $i6 = virtualinvoke $r20.<android.view.View: int getHeight()>();

        $r21 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $i9 = virtualinvoke $r21.<android.view.View: int getHeight()>();

        $i7 = $i6 - $i9;

        f1 = (float) $i7;

        $b8 = f0 cmpl 0.0F;

        if $b8 != 0 goto label3;

        $b13 = f1 cmpl 0.0F;

        if $b13 != 0 goto label3;

        l14 = 500L;

        goto label6;

     label3:
        $d2 = staticinvoke <java.lang.Math: double random()>();

        $d3 = (double) f0;

        $d0 = $d2 * $d3;

        i1 = (int) $d0;

        $d1 = staticinvoke <java.lang.Math: double random()>();

        $d4 = (double) f1;

        $d5 = $d1 * $d4;

        i2 = (int) $d5;

        $r22 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $f2 = virtualinvoke $r22.<android.view.View: float getAlpha()>();

        $b10 = $f2 cmpl 0.0F;

        if $b10 != 0 goto label4;

        $r66 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $f7 = (float) i1;

        virtualinvoke $r66.<android.view.View: void setX(float)>($f7);

        $r73 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $f8 = (float) i2;

        virtualinvoke $r73.<android.view.View: void setY(float)>($f8);

        $r71 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r72 = newarray (float)[2];

        $r72[0] = 0.0F;

        $r72[1] = 1.0F;

        $r70 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r71, "alpha", $r72);

        $r69 = virtualinvoke $r70.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(3000L);

        virtualinvoke $r69.<android.animation.ObjectAnimator: void start()>();

        goto label5;

     label4:
        $r25 = new android.animation.AnimatorSet;

        specialinvoke $r25.<android.animation.AnimatorSet: void <init>()>();

        r1 = $r25;

        $r26 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r23 = newarray (float)[2];

        $r24 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $f3 = virtualinvoke $r24.<android.view.View: float getX()>();

        $r23[0] = $f3;

        $f4 = (float) i1;

        $r23[1] = $f4;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r26, "x", $r23);

        $r29 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r28 = newarray (float)[2];

        $r27 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $f5 = virtualinvoke $r27.<android.view.View: float getY()>();

        $r28[0] = $f5;

        $f6 = (float) i2;

        $r28[1] = $f6;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r29, "y", $r28);

        $r30 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r31 = newarray (float)[2];

        $r31[0] = 1.0F;

        $r31[1] = 0.85F;

        r4 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r30, "scaleX", $r31);

        $r36 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r35 = newarray (float)[2];

        $r35[0] = 0.85F;

        $r35[1] = 1.0F;

        r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r36, "scaleX", $r35);

        $r33 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r32 = newarray (float)[2];

        $r32[0] = 1.0F;

        $r32[1] = 0.85F;

        r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r33, "scaleY", $r32);

        $r41 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r34 = newarray (float)[2];

        $r34[0] = 0.85F;

        $r34[1] = 1.0F;

        r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r41, "scaleY", $r34);

        $r42 = new android.animation.AnimatorSet;

        specialinvoke $r42.<android.animation.AnimatorSet: void <init>()>();

        r8 = $r42;

        $r43 = virtualinvoke r8.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r4);

        virtualinvoke $r43.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r6);

        $r38 = new android.animation.AnimatorSet;

        specialinvoke $r38.<android.animation.AnimatorSet: void <init>()>();

        r9 = $r38;

        $r39 = virtualinvoke r9.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r5);

        virtualinvoke $r39.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r7);

        $r47 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r48 = newarray (float)[2];

        $r48[0] = 1.0F;

        $r48[1] = 0.0F;

        r11 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r47, "alpha", $r48);

        $r44 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.view.View mSaverView>;

        $r49 = newarray (float)[2];

        $r49[0] = 0.0F;

        $r49[1] = 1.0F;

        r10 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r44, "alpha", $r49);

        $r46 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r46.<android.view.animation.AccelerateInterpolator: void <init>()>();

        r13 = $r46;

        $r45 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r45.<android.view.animation.DecelerateInterpolator: void <init>()>();

        r12 = $r45;

        $r55 = virtualinvoke r8.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(3000L);

        virtualinvoke $r55.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>(r13);

        $r54 = virtualinvoke r11.<android.animation.Animator: android.animation.Animator setDuration(long)>(3000L);

        virtualinvoke $r54.<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>(r13);

        $r57 = virtualinvoke r9.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(3000L);

        virtualinvoke $r57.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>(r12);

        $r56 = virtualinvoke r10.<android.animation.Animator: android.animation.Animator setDuration(long)>(3000L);

        virtualinvoke $r56.<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>(r12);

        virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r8);

        virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r11);

        $r53 = virtualinvoke r2.<android.animation.Animator: android.animation.Animator setDuration(long)>(0L);

        $r52 = virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r53);

        virtualinvoke $r52.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)>(3000L);

        $r65 = virtualinvoke r3.<android.animation.Animator: android.animation.Animator setDuration(long)>(0L);

        $r62 = virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r65);

        virtualinvoke $r62.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)>(3000L);

        $r60 = virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r10);

        virtualinvoke $r60.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)>(3000L);

        $r58 = virtualinvoke r1.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r9);

        virtualinvoke $r58.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)>(3000L);

        virtualinvoke r1.<android.animation.AnimatorSet: void start()>();

     label5:
        l15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l16 = l15 % 60000L;

        $l12 = 60000L - l16;

        $l11 = l0 + $l12;

        l14 = $l11 - 3000L;

     label6:
        $r68 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.os.Handler mHandler>;

        virtualinvoke $r68.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

        $r67 = r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: android.os.Handler mHandler>;

        virtualinvoke $r67.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, l14);

        return;
    }

    public static void <clinit>()
    {
        <com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: boolean SLIDE> = 0;

        <com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: long FADE_TIME> = 3000L;

        <com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: long SLIDE_TIME> = 10000L;

        <com.android.deskclock.Utils$ScreensaverMoveSaverRunnable: long MOVE_DELAY> = 60000L;

        return;
    }
}
