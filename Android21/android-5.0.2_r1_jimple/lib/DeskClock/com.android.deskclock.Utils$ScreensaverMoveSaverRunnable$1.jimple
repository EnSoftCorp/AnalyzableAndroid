class com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1 extends java.lang.Object implements android.animation.TimeInterpolator
{
    final com.android.deskclock.Utils$ScreensaverMoveSaverRunnable this$0;

    void <init>(com.android.deskclock.Utils$ScreensaverMoveSaverRunnable)
    {
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1 r0;
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable r1;

        r0 := @this: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1;

        r1 := @parameter0: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable;

        r0.<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public float getInterpolation(float)
    {
        com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1 r0;
        float f0, $f1, $f2;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 3.0);

        $d2 = $d1 + 1.0;

        $d3 = $d2 * 3.141592653589793;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d5 = $d4 / 2.0;

        $f1 = (float) $d5;

        $f2 = $f1 + 0.5F;

        return $f2;
    }
}
