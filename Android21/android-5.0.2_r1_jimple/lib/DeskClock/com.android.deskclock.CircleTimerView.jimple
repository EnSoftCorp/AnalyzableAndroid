public class com.android.deskclock.CircleTimerView extends android.view.View
{
    private int mAccentColor;
    private int mWhiteColor;
    private long mIntervalTime;
    private long mIntervalStartTime;
    private long mMarkerTime;
    private long mCurrentIntervalTime;
    private long mAccumulatedTime;
    private boolean mPaused;
    private boolean mAnimate;
    private static float mStrokeSize;
    private static float mDotRadius;
    private static float mMarkerStrokeSize;
    private final android.graphics.Paint mPaint;
    private final android.graphics.Paint mFill;
    private final android.graphics.RectF mArcRect;
    private float mRadiusOffset;
    private float mScreenDensity;
    private boolean mTimerMode;
    public static final java.lang.String PREF_CTV_PAUSED;
    public static final java.lang.String PREF_CTV_INTERVAL;
    public static final java.lang.String PREF_CTV_INTERVAL_START;
    public static final java.lang.String PREF_CTV_CURRENT_INTERVAL;
    public static final java.lang.String PREF_CTV_ACCUM_TIME;
    public static final java.lang.String PREF_CTV_TIMER_MODE;
    public static final java.lang.String PREF_CTV_MARKER_TIME;

    public void <init>(android.content.Context)
    {
        com.android.deskclock.CircleTimerView r0;
        android.content.Context r1;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.deskclock.CircleTimerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.deskclock.CircleTimerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Paint $r3, $r4;
        android.graphics.RectF $r5;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.deskclock.CircleTimerView: long mIntervalTime> = 0L;

        r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime> = -1L;

        r0.<com.android.deskclock.CircleTimerView: long mMarkerTime> = -1L;

        r0.<com.android.deskclock.CircleTimerView: long mCurrentIntervalTime> = 0L;

        r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime> = 0L;

        r0.<com.android.deskclock.CircleTimerView: boolean mPaused> = 0;

        r0.<com.android.deskclock.CircleTimerView: boolean mAnimate> = 0;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint> = $r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mFill> = $r4;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect> = $r5;

        r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode> = 0;

        specialinvoke r0.<com.android.deskclock.CircleTimerView: void init(android.content.Context)>(r1);

        return;
    }

    public void setIntervalTime(long)
    {
        com.android.deskclock.CircleTimerView r0;
        long l0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        l0 := @parameter0: long;

        r0.<com.android.deskclock.CircleTimerView: long mIntervalTime> = l0;

        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void postInvalidate()>();

        return;
    }

    public void setMarkerTime(long)
    {
        com.android.deskclock.CircleTimerView r0;
        long l0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        l0 := @parameter0: long;

        r0.<com.android.deskclock.CircleTimerView: long mMarkerTime> = l0;

        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void postInvalidate()>();

        return;
    }

    public void reset()
    {
        com.android.deskclock.CircleTimerView r0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime> = -1L;

        r0.<com.android.deskclock.CircleTimerView: long mMarkerTime> = -1L;

        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void postInvalidate()>();

        return;
    }

    public void startIntervalAnimation()
    {
        com.android.deskclock.CircleTimerView r0;
        long $l0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        $l0 = staticinvoke <com.android.deskclock.Utils: long getTimeNow()>();

        r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime> = $l0;

        r0.<com.android.deskclock.CircleTimerView: boolean mAnimate> = 1;

        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void invalidate()>();

        r0.<com.android.deskclock.CircleTimerView: boolean mPaused> = 0;

        return;
    }

    public void stopIntervalAnimation()
    {
        com.android.deskclock.CircleTimerView r0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r0.<com.android.deskclock.CircleTimerView: boolean mAnimate> = 0;

        r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime> = -1L;

        r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime> = 0L;

        return;
    }

    public boolean isAnimating()
    {
        com.android.deskclock.CircleTimerView r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        $l0 = r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void pauseIntervalAnimation()
    {
        com.android.deskclock.CircleTimerView r0;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r0.<com.android.deskclock.CircleTimerView: boolean mAnimate> = 0;

        $l0 = r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime>;

        $l1 = staticinvoke <com.android.deskclock.Utils: long getTimeNow()>();

        $l2 = r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime>;

        $l3 = $l1 - $l2;

        $l4 = $l0 + $l3;

        r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime> = $l4;

        r0.<com.android.deskclock.CircleTimerView: boolean mPaused> = 1;

        return;
    }

    public void abortIntervalAnimation()
    {
        com.android.deskclock.CircleTimerView r0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r0.<com.android.deskclock.CircleTimerView: boolean mAnimate> = 0;

        return;
    }

    public void setPassedTime(long, boolean)
    {
        com.android.deskclock.CircleTimerView r0;
        long l0, $l1;
        boolean z0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime> = l0;

        r0.<com.android.deskclock.CircleTimerView: long mCurrentIntervalTime> = l0;

        if z0 == 0 goto label1;

        $l1 = staticinvoke <com.android.deskclock.Utils: long getTimeNow()>();

        r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime> = $l1;

     label1:
        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void postInvalidate()>();

        return;
    }

    private void init(android.content.Context)
    {
        com.android.deskclock.CircleTimerView r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Paint $r3, $r5, $r8, $r9, $r10;
        android.graphics.Paint$Style $r4, $r7;
        int $i0, $i1, $i2;
        android.util.DisplayMetrics $r6;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $f1 = virtualinvoke r2.<android.content.res.Resources: float getDimension(int)>(2131296291);

        <com.android.deskclock.CircleTimerView: float mStrokeSize> = $f1;

        f0 = virtualinvoke r2.<android.content.res.Resources: float getDimension(int)>(2131296290);

        $f2 = virtualinvoke r2.<android.content.res.Resources: float getDimension(int)>(2131296292);

        <com.android.deskclock.CircleTimerView: float mMarkerStrokeSize> = $f2;

        $f4 = <com.android.deskclock.CircleTimerView: float mStrokeSize>;

        $f3 = <com.android.deskclock.CircleTimerView: float mMarkerStrokeSize>;

        $f5 = staticinvoke <com.android.deskclock.Utils: float calculateRadiusOffset(float,float,float)>($f4, f0, $f3);

        r0.<com.android.deskclock.CircleTimerView: float mRadiusOffset> = $f5;

        $r3 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $i0 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>(2131427348);

        r0.<com.android.deskclock.CircleTimerView: int mWhiteColor> = $i0;

        $i1 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>(2131427345);

        r0.<com.android.deskclock.CircleTimerView: int mAccentColor> = $i1;

        $r6 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f6 = $r6.<android.util.DisplayMetrics: float density>;

        r0.<com.android.deskclock.CircleTimerView: float mScreenDensity> = $f6;

        $r8 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mFill>;

        virtualinvoke $r8.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r9 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mFill>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r9.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r10 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mFill>;

        $i2 = r0.<com.android.deskclock.CircleTimerView: int mAccentColor>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i2);

        $f7 = f0 / 2.0F;

        <com.android.deskclock.CircleTimerView: float mDotRadius> = $f7;

        return;
    }

    public void setTimerMode(boolean)
    {
        com.android.deskclock.CircleTimerView r0;
        boolean z0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        z0 := @parameter0: boolean;

        r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode> = z0;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.deskclock.CircleTimerView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i12, $i13, $i23;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, f38;
        android.graphics.Paint $r2, $r7, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r20, $r21, $r22;
        byte $b6, $b9, $b11, $b14, $b16, $b18;
        long $l7, $l8, $l10, $l15, $l17, $l19, $l20, $l21, $l22, $l24, $l25, $l26, $l27, $l28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.RectF $r3, $r4, $r5, $r6, $r8, $r13, $r15, $r18, $r19;
        double $d0, $d1, $d2;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.graphics.Canvas;

        $i2 = virtualinvoke r0.<com.android.deskclock.CircleTimerView: int getWidth()>();

        $i3 = $i2 / 2;

        i0 = $i3 + 1;

        $i4 = virtualinvoke r0.<com.android.deskclock.CircleTimerView: int getHeight()>();

        i1 = $i4 / 2;

        $r2 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $f4 = <com.android.deskclock.CircleTimerView: float mStrokeSize>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f4);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $f6 = (float) $i5;

        $f5 = r0.<com.android.deskclock.CircleTimerView: float mRadiusOffset>;

        f0 = $f6 - $f5;

        $l7 = r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime>;

        $b6 = $l7 cmp -1L;

        if $b6 != 0 goto label01;

        $r22 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $i23 = r0.<com.android.deskclock.CircleTimerView: int mWhiteColor>;

        virtualinvoke $r22.<android.graphics.Paint: void setColor(int)>($i23);

        $f37 = (float) i0;

        $f36 = (float) i1;

        $r21 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f37, $f36, f0, $r21);

        $z5 = r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode>;

        if $z5 == 0 goto label12;

        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void drawRedDot(android.graphics.Canvas,float,int,int,float)>(r1, 0.0F, i0, i1, f0);

        goto label12;

     label01:
        $z0 = r0.<com.android.deskclock.CircleTimerView: boolean mAnimate>;

        if $z0 == 0 goto label02;

        $l26 = staticinvoke <com.android.deskclock.Utils: long getTimeNow()>();

        $l25 = r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime>;

        $l27 = $l26 - $l25;

        $l28 = r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime>;

        $l24 = $l27 + $l28;

        r0.<com.android.deskclock.CircleTimerView: long mCurrentIntervalTime> = $l24;

     label02:
        $r3 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f7 = (float) i1;

        $f8 = $f7 - f0;

        $r3.<android.graphics.RectF: float top> = $f8;

        $r4 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f10 = (float) i1;

        $f9 = $f10 + f0;

        $r4.<android.graphics.RectF: float bottom> = $f9;

        $r5 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f11 = (float) i0;

        $f12 = $f11 - f0;

        $r5.<android.graphics.RectF: float left> = $f12;

        $r6 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f14 = (float) i0;

        $f13 = $f14 + f0;

        $r6.<android.graphics.RectF: float right> = $f13;

        $l8 = r0.<com.android.deskclock.CircleTimerView: long mCurrentIntervalTime>;

        $f15 = (float) $l8;

        $l10 = r0.<com.android.deskclock.CircleTimerView: long mIntervalTime>;

        $f16 = (float) $l10;

        f1 = $f15 / $f16;

        $b9 = f1 cmpl 1.0F;

        if $b9 <= 0 goto label03;

        $z4 = r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode>;

        if $z4 == 0 goto label03;

        $f33 = 1.0F;

        goto label04;

     label03:
        $f33 = f1;

     label04:
        f38 = $f33;

        $b11 = f38 cmpl 1.0F;

        if $b11 <= 0 goto label05;

        $f32 = 1.0F;

        goto label06;

     label05:
        $f32 = f38;

     label06:
        f2 = 1.0F - $f32;

        $r7 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $i12 = r0.<com.android.deskclock.CircleTimerView: int mAccentColor>;

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i12);

        $z1 = r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode>;

        if $z1 == 0 goto label07;

        $r18 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f34 = neg f38;

        $f35 = $f34 * 360.0F;

        $r20 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r18, 270.0F, $f35, 0, $r20);

        goto label08;

     label07:
        $r8 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f18 = f38 * 360.0F;

        $r9 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r8, 270.0F, $f18, 0, $r9);

     label08:
        $r11 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $f17 = <com.android.deskclock.CircleTimerView: float mStrokeSize>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeWidth(float)>($f17);

        $r10 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $i13 = r0.<com.android.deskclock.CircleTimerView: int mWhiteColor>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i13);

        $z2 = r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode>;

        if $z2 == 0 goto label09;

        $r19 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f28 = f2 * 360.0F;

        $r16 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r19, 270.0F, $f28, 0, $r16);

        goto label10;

     label09:
        $r13 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f21 = 1.0F - f2;

        $f20 = $f21 * 360.0F;

        $f22 = 270.0F + $f20;

        $f19 = f2 * 360.0F;

        $r12 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r13, $f22, $f19, 0, $r12);

     label10:
        $l15 = r0.<com.android.deskclock.CircleTimerView: long mMarkerTime>;

        $b14 = $l15 cmp -1L;

        if $b14 == 0 goto label11;

        $b18 = f0 cmpl 0.0F;

        if $b18 <= 0 goto label11;

        $l17 = r0.<com.android.deskclock.CircleTimerView: long mIntervalTime>;

        $b16 = $l17 cmp 0L;

        if $b16 == 0 goto label11;

        $r14 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $f23 = <com.android.deskclock.CircleTimerView: float mMarkerStrokeSize>;

        virtualinvoke $r14.<android.graphics.Paint: void setStrokeWidth(float)>($f23);

        $l19 = r0.<com.android.deskclock.CircleTimerView: long mMarkerTime>;

        $l20 = r0.<com.android.deskclock.CircleTimerView: long mIntervalTime>;

        $l21 = $l19 % $l20;

        $f26 = (float) $l21;

        $l22 = r0.<com.android.deskclock.CircleTimerView: long mIntervalTime>;

        $f25 = (float) $l22;

        $f24 = $f26 / $f25;

        f3 = $f24 * 360.0F;

        $r15 = r0.<com.android.deskclock.CircleTimerView: android.graphics.RectF mArcRect>;

        $f27 = 270.0F + f3;

        $f30 = r0.<com.android.deskclock.CircleTimerView: float mScreenDensity>;

        $d0 = (double) f0;

        $d1 = $d0 * 3.141592653589793;

        $d2 = 360.0 / $d1;

        $f29 = (float) $d2;

        $f31 = $f30 * $f29;

        $r17 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>($r15, $f27, $f31, 0, $r17);

     label11:
        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void drawRedDot(android.graphics.Canvas,float,int,int,float)>(r1, f38, i0, i1, f0);

     label12:
        $z3 = r0.<com.android.deskclock.CircleTimerView: boolean mAnimate>;

        if $z3 == 0 goto label13;

        virtualinvoke r0.<com.android.deskclock.CircleTimerView: void invalidate()>();

     label13:
        return;
    }

    protected void drawRedDot(android.graphics.Canvas, float, int, int, float)
    {
        com.android.deskclock.CircleTimerView r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i0, i1, $i2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.graphics.Paint $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        f1 := @parameter4: float;

        $r2 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mPaint>;

        $i2 = r0.<com.android.deskclock.CircleTimerView: int mAccentColor>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i2);

        $z0 = r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode>;

        if $z0 == 0 goto label1;

        $f10 = f0 * 360.0F;

        f2 = 270.0F - $f10;

        goto label2;

     label1:
        $f3 = f0 * 360.0F;

        f2 = 270.0F + $f3;

     label2:
        $d1 = (double) f2;

        d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $f4 = (float) i0;

        $d3 = (double) f1;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d4 = $d3 * $d2;

        $f5 = (float) $d4;

        $f7 = $f4 + $f5;

        $f6 = (float) i1;

        $d6 = (double) f1;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d7 = $d6 * $d5;

        $f8 = (float) $d7;

        $f11 = $f6 + $f8;

        $f9 = <com.android.deskclock.CircleTimerView: float mDotRadius>;

        $r3 = r0.<com.android.deskclock.CircleTimerView: android.graphics.Paint mFill>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f7, $f11, $f9, $r3);

        return;
    }

    public void writeToSharedPref(android.content.SharedPreferences, java.lang.String)
    {
        com.android.deskclock.CircleTimerView r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, $r7, $r12, $r17, $r22, $r29, $r30, $r38;
        android.content.SharedPreferences$Editor r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r26, $r28, $r31, $r32, $r33, $r34, $r36;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.content.SharedPreferences;

        r2 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_paused");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = r0.<com.android.deskclock.CircleTimerView: boolean mPaused>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r7, $z0);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_interval");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = r0.<com.android.deskclock.CircleTimerView: long mIntervalTime>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r12, $l0);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_interval_start");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r17, $l1);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_current_interval");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $l2 = r0.<com.android.deskclock.CircleTimerView: long mCurrentIntervalTime>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r22, $l2);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_accum_time");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $l3 = r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r29, $l3);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_marker_time");

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $l4 = r0.<com.android.deskclock.CircleTimerView: long mMarkerTime>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r30, $l4);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_timer_mode");

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r38, $z1);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public void readFromSharedPref(android.content.SharedPreferences, java.lang.String)
    {
        com.android.deskclock.CircleTimerView r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, $r6, $r10, $r14, $r17, $r22, $r25, $r30;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r29;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        byte $b6;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.content.SharedPreferences;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_paused");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r6, 0);

        r0.<com.android.deskclock.CircleTimerView: boolean mPaused> = $z0;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_interval");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = interfaceinvoke r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r10, 0L);

        r0.<com.android.deskclock.CircleTimerView: long mIntervalTime> = $l0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_interval_start");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = interfaceinvoke r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r14, -1L);

        r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime> = $l1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_current_interval");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $l2 = interfaceinvoke r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r17, 0L);

        r0.<com.android.deskclock.CircleTimerView: long mCurrentIntervalTime> = $l2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_accum_time");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $l3 = interfaceinvoke r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r22, 0L);

        r0.<com.android.deskclock.CircleTimerView: long mAccumulatedTime> = $l3;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_marker_time");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $l4 = interfaceinvoke r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r25, -1L);

        r0.<com.android.deskclock.CircleTimerView: long mMarkerTime> = $l4;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_timer_mode");

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r30, 0);

        r0.<com.android.deskclock.CircleTimerView: boolean mTimerMode> = $z1;

        $l5 = r0.<com.android.deskclock.CircleTimerView: long mIntervalStartTime>;

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label1;

        $z2 = r0.<com.android.deskclock.CircleTimerView: boolean mPaused>;

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        r0.<com.android.deskclock.CircleTimerView: boolean mAnimate> = $z3;

        return;
    }

    public void clearSharedPref(android.content.SharedPreferences, java.lang.String)
    {
        com.android.deskclock.CircleTimerView r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, $r10, $r16, $r19, $r26, $r29, $r37, $r41;
        android.content.SharedPreferences$Editor r3;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14, $r17, $r18, $r20, $r21, $r23, $r24, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36, $r40;

        r0 := @this: com.android.deskclock.CircleTimerView;

        r1 := @parameter0: android.content.SharedPreferences;

        r2 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_start_time");

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_accum_time");

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sw_state");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_paused");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r10);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_interval");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r16);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_interval_start");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r19);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_current_interval");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r26);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_accum_time");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r29);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_marker_time");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r37);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_ctv_timer_mode");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r41);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    static void <clinit>()
    {
        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_MARKER_TIME> = "_ctv_marker_time";

        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_TIMER_MODE> = "_ctv_timer_mode";

        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_ACCUM_TIME> = "_ctv_accum_time";

        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_CURRENT_INTERVAL> = "_ctv_current_interval";

        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_INTERVAL_START> = "_ctv_interval_start";

        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_INTERVAL> = "_ctv_interval";

        <com.android.deskclock.CircleTimerView: java.lang.String PREF_CTV_PAUSED> = "_ctv_paused";

        <com.android.deskclock.CircleTimerView: float mStrokeSize> = 4.0F;

        <com.android.deskclock.CircleTimerView: float mDotRadius> = 6.0F;

        <com.android.deskclock.CircleTimerView: float mMarkerStrokeSize> = 2.0F;

        return;
    }
}
