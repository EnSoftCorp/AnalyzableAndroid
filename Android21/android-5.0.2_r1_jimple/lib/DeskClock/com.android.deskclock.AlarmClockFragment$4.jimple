class com.android.deskclock.AlarmClockFragment$4 extends android.os.AsyncTask
{
    final android.content.Context val$context;
    final com.android.deskclock.provider.Alarm val$alarm;
    final com.android.deskclock.AlarmClockFragment this$0;

    void <init>(com.android.deskclock.AlarmClockFragment, android.content.Context, com.android.deskclock.provider.Alarm)
    {
        com.android.deskclock.AlarmClockFragment$4 r0;
        com.android.deskclock.AlarmClockFragment r1;
        android.content.Context r2;
        com.android.deskclock.provider.Alarm r3;

        r0 := @this: com.android.deskclock.AlarmClockFragment$4;

        r1 := @parameter0: com.android.deskclock.AlarmClockFragment;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.deskclock.provider.Alarm;

        r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.AlarmClockFragment this$0> = r1;

        r0.<com.android.deskclock.AlarmClockFragment$4: android.content.Context val$context> = r2;

        r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.provider.Alarm val$alarm> = r3;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient com.android.deskclock.provider.AlarmInstance doInBackground(java.lang.Void[])
    {
        com.android.deskclock.AlarmClockFragment$4 r0;
        java.lang.Void[] r1;
        android.content.ContentResolver r2;
        com.android.deskclock.provider.Alarm r3, $r5, $r7;
        android.content.Context $r4, $r6, $r11, $r14;
        long $l0;
        com.android.deskclock.AlarmClockFragment $r8, $r10;
        boolean $z0;
        com.android.deskclock.DeskClockExtensions $r9;
        android.app.Activity $r12;
        com.android.deskclock.provider.AlarmInstance $r13;

        r0 := @this: com.android.deskclock.AlarmClockFragment$4;

        r1 := @parameter0: java.lang.Void[];

        $r4 = r0.<com.android.deskclock.AlarmClockFragment$4: android.content.Context val$context>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.provider.Alarm val$alarm>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.deskclock.AlarmClockFragment$4: android.content.Context val$context>;

        r2 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.provider.Alarm val$alarm>;

        r3 = staticinvoke <com.android.deskclock.provider.Alarm: com.android.deskclock.provider.Alarm addAlarm(android.content.ContentResolver,com.android.deskclock.provider.Alarm)>(r2, $r7);

        $r8 = r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.AlarmClockFragment this$0>;

        $l0 = r3.<com.android.deskclock.provider.Alarm: long id>;

        staticinvoke <com.android.deskclock.AlarmClockFragment: long access$3602(com.android.deskclock.AlarmClockFragment,long)>($r8, $l0);

        $z0 = r3.<com.android.deskclock.provider.Alarm: boolean enabled>;

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <com.android.deskclock.AlarmClockFragment: com.android.deskclock.DeskClockExtensions access$3500()>();

        $r10 = r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.AlarmClockFragment this$0>;

        $r12 = virtualinvoke $r10.<com.android.deskclock.AlarmClockFragment: android.app.Activity getActivity()>();

        $r11 = virtualinvoke $r12.<android.app.Activity: android.content.Context getApplicationContext()>();

        interfaceinvoke $r9.<com.android.deskclock.DeskClockExtensions: void addAlarm(android.content.Context,com.android.deskclock.provider.Alarm)>($r11, r3);

        $r14 = r0.<com.android.deskclock.AlarmClockFragment$4: android.content.Context val$context>;

        $r13 = staticinvoke <com.android.deskclock.AlarmClockFragment: com.android.deskclock.provider.AlarmInstance access$3700(android.content.Context,com.android.deskclock.provider.Alarm)>($r14, r3);

        return $r13;

     label1:
        return null;
    }

    protected void onPostExecute(com.android.deskclock.provider.AlarmInstance)
    {
        com.android.deskclock.AlarmClockFragment$4 r0;
        com.android.deskclock.provider.AlarmInstance r1;
        android.content.Context $r2;
        java.util.Calendar $r3;
        long $l0;

        r0 := @this: com.android.deskclock.AlarmClockFragment$4;

        r1 := @parameter0: com.android.deskclock.provider.AlarmInstance;

        if r1 == null goto label1;

        $r2 = r0.<com.android.deskclock.AlarmClockFragment$4: android.content.Context val$context>;

        $r3 = virtualinvoke r1.<com.android.deskclock.provider.AlarmInstance: java.util.Calendar getAlarmTime()>();

        $l0 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        staticinvoke <com.android.deskclock.AlarmUtils: void popAlarmSetToast(android.content.Context,long)>($r2, $l0);

     label1:
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.deskclock.AlarmClockFragment$4 r0;
        java.lang.Object r1;
        com.android.deskclock.provider.AlarmInstance $r2;

        r0 := @this: com.android.deskclock.AlarmClockFragment$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.deskclock.provider.AlarmInstance) r1;

        virtualinvoke r0.<com.android.deskclock.AlarmClockFragment$4: void onPostExecute(com.android.deskclock.provider.AlarmInstance)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.deskclock.AlarmClockFragment$4 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        com.android.deskclock.provider.AlarmInstance $r3;

        r0 := @this: com.android.deskclock.AlarmClockFragment$4;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.deskclock.AlarmClockFragment$4: com.android.deskclock.provider.AlarmInstance doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
