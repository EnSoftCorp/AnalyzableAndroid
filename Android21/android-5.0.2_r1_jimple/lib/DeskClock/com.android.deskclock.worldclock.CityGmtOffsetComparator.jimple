public class com.android.deskclock.worldclock.CityGmtOffsetComparator extends java.lang.Object implements java.util.Comparator
{
    private com.android.deskclock.worldclock.CityNameComparator mNameComparator;

    public void <init>()
    {
        com.android.deskclock.worldclock.CityGmtOffsetComparator r0;

        r0 := @this: com.android.deskclock.worldclock.CityGmtOffsetComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.deskclock.worldclock.CityGmtOffsetComparator: com.android.deskclock.worldclock.CityNameComparator mNameComparator> = null;

        return;
    }

    public int compare(com.android.deskclock.worldclock.CityObj, com.android.deskclock.worldclock.CityObj)
    {
        com.android.deskclock.worldclock.CityGmtOffsetComparator r0;
        com.android.deskclock.worldclock.CityObj r1, r2;
        long l0;
        int i1, i2, $i3;
        java.lang.String $r3, $r5;
        java.util.TimeZone $r4, $r6;
        com.android.deskclock.worldclock.CityNameComparator $r7;

        r0 := @this: com.android.deskclock.worldclock.CityGmtOffsetComparator;

        r1 := @parameter0: com.android.deskclock.worldclock.CityObj;

        r2 := @parameter1: com.android.deskclock.worldclock.CityObj;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = r1.<com.android.deskclock.worldclock.CityObj: java.lang.String mTimeZone>;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r3);

        i1 = virtualinvoke $r4.<java.util.TimeZone: int getOffset(long)>(l0);

        $r5 = r2.<com.android.deskclock.worldclock.CityObj: java.lang.String mTimeZone>;

        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r5);

        i2 = virtualinvoke $r6.<java.util.TimeZone: int getOffset(long)>(l0);

        if i1 >= i2 goto label1;

        $i3 = -1;

        goto label3;

     label1:
        if i1 <= i2 goto label2;

        $i3 = 1;

        goto label3;

     label2:
        $r7 = specialinvoke r0.<com.android.deskclock.worldclock.CityGmtOffsetComparator: com.android.deskclock.worldclock.CityNameComparator getCityNameComparator()>();

        $i3 = virtualinvoke $r7.<com.android.deskclock.worldclock.CityNameComparator: int compare(com.android.deskclock.worldclock.CityObj,com.android.deskclock.worldclock.CityObj)>(r1, r2);

     label3:
        return $i3;
    }

    private com.android.deskclock.worldclock.CityNameComparator getCityNameComparator()
    {
        com.android.deskclock.worldclock.CityGmtOffsetComparator r0;
        com.android.deskclock.worldclock.CityNameComparator $r1, $r2, $r3;

        r0 := @this: com.android.deskclock.worldclock.CityGmtOffsetComparator;

        $r1 = r0.<com.android.deskclock.worldclock.CityGmtOffsetComparator: com.android.deskclock.worldclock.CityNameComparator mNameComparator>;

        if $r1 != null goto label1;

        $r3 = new com.android.deskclock.worldclock.CityNameComparator;

        specialinvoke $r3.<com.android.deskclock.worldclock.CityNameComparator: void <init>()>();

        r0.<com.android.deskclock.worldclock.CityGmtOffsetComparator: com.android.deskclock.worldclock.CityNameComparator mNameComparator> = $r3;

     label1:
        $r2 = r0.<com.android.deskclock.worldclock.CityGmtOffsetComparator: com.android.deskclock.worldclock.CityNameComparator mNameComparator>;

        return $r2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.android.deskclock.worldclock.CityGmtOffsetComparator r0;
        java.lang.Object r1, r2;
        com.android.deskclock.worldclock.CityObj $r3, $r4;
        int $i0;

        r0 := @this: com.android.deskclock.worldclock.CityGmtOffsetComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.android.deskclock.worldclock.CityObj) r1;

        $r3 = (com.android.deskclock.worldclock.CityObj) r2;

        $i0 = virtualinvoke r0.<com.android.deskclock.worldclock.CityGmtOffsetComparator: int compare(com.android.deskclock.worldclock.CityObj,com.android.deskclock.worldclock.CityObj)>($r4, $r3);

        return $i0;
    }
}
