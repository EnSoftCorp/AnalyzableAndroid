public class jp.co.omronsoft.openwnn.ComposingText extends java.lang.Object
{
    public static final int LAYER0;
    public static final int LAYER1;
    public static final int LAYER2;
    public static final int MAX_LAYER;
    protected java.util.ArrayList[] mStringLayer;
    protected int[] mCursor;

    public void <init>()
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0;
        java.util.ArrayList[] $r1, $r4;
        int[] $r2, $r5;
        java.util.ArrayList $r3;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.util.ArrayList)[3];

        r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer> = $r1;

        $r2 = newarray (int)[3];

        r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor> = $r2;

        i0 = 0;

     label1:
        if i0 >= 3 goto label2;

        $r4 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4[i0] = $r3;

        $r5 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r5[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void debugout()
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, $i2, $i5, $i6;
        java.lang.String r1, $r8, $r13, $r19, $r22;
        java.util.Iterator r2;
        jp.co.omronsoft.openwnn.StrSegment r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r16, $r17, $r18, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        int[] $r11;
        java.util.ArrayList $r14;
        java.util.ArrayList[] $r15;
        boolean $z0;
        java.lang.Object $r21;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 = 0;

     label1:
        if i0 >= 3 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ComposingText[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenWnn", $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  cur = ");

        $r11 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i2 = $r11[i0];

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenWnn", $r13);

        r1 = "";

        $r15 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r14 = $r15[i0];

        r2 = virtualinvoke $r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r21 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (jp.co.omronsoft.openwnn.StrSegment) $r21;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r22 = r3.<jp.co.omronsoft.openwnn.StrSegment: java.lang.String string>;

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i5 = r3.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i6 = r3.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label3:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  str = ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OpenWnn", $r19);

        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    public jp.co.omronsoft.openwnn.StrSegment getStrSegment(int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        java.util.ArrayList[] $r2;
        java.lang.Object $r3;
        jp.co.omronsoft.openwnn.StrSegment $r4;
        java.lang.Exception $r5;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r1 = $r2[i0];

        if i1 >= 0 goto label2;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        if i1 >= 0 goto label4;

     label3:
        return null;

     label4:
        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (jp.co.omronsoft.openwnn.StrSegment) $r3;

     label5:
        return $r4;

     label6:
        $r5 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.lang.String toString(int, int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3;
        java.lang.StringBuffer r1, $r4;
        java.util.ArrayList r2;
        jp.co.omronsoft.openwnn.StrSegment r3;
        java.util.ArrayList[] $r5;
        java.lang.String $r6, $r8;
        java.lang.Object $r7;
        java.lang.Exception $r10;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        $r5 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r2 = $r5[i0];

        i3 = i1;

     label2:
        if i3 > i2 goto label3;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (jp.co.omronsoft.openwnn.StrSegment) $r7;

        $r8 = r3.<jp.co.omronsoft.openwnn.StrSegment: java.lang.String string>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        return $r6;

     label5:
        $r10 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public java.lang.String toString(int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, $i1, $i2;
        java.util.ArrayList[] $r1;
        java.util.ArrayList $r2;
        java.lang.String $r3;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        $r1 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r2 = $r1[i0];

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        $r3 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: java.lang.String toString(int,int,int)>(i0, 0, $i2);

        return $r3;
    }

    private void modifyUpper(int, int, int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48;
        java.util.ArrayList r1, $r16;
        jp.co.omronsoft.openwnn.StrSegment r2, r3, $r7, $r19, r20, r21, r22, r23;
        java.util.ArrayList[] $r4, $r17;
        java.lang.Object $r5, $r8, $r9, $r11, $r12, $r13;
        java.lang.String $r6, $r10, $r15, $r18;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i0 < 2 goto label01;

        return;

     label01:
        i4 = i0 + 1;

        $r4 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r1 = $r4[i4];

        $i14 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i14 > 0 goto label02;

        $r19 = new jp.co.omronsoft.openwnn.StrSegment;

        $r18 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: java.lang.String toString(int)>(i0);

        $r17 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r16 = $r17[i0];

        $i44 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        $i45 = $i44 - 1;

        specialinvoke $r19.<jp.co.omronsoft.openwnn.StrSegment: void <init>(java.lang.String,int,int)>($r18, 0, $i45);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i4, 0, 1, 0);

        return;

     label02:
        if i2 != 0 goto label03;

        $i13 = 0;

        goto label04;

     label03:
        $i13 = i2 - 1;

     label04:
        i5 = i1 + $i13;

        if i3 != 0 goto label05;

        $i16 = 0;

        goto label06;

     label05:
        $i16 = i3 - 1;

     label06:
        i6 = i1 + $i16;

        $i15 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i17 = $i15 - 1;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i17);

        r2 = (jp.co.omronsoft.openwnn.StrSegment) $r5;

        $i19 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        if $i19 >= i1 goto label07;

        r2.<jp.co.omronsoft.openwnn.StrSegment: int 'to'> = i5;

        $i43 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i37 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $r15 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: java.lang.String toString(int,int,int)>(i0, $i43, $i37);

        r2.<jp.co.omronsoft.openwnn.StrSegment: java.lang.String string> = $r15;

        $i42 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i41 = $i42 - 1;

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i4, $i41, 1, 1);

        return;

     label07:
        i7 = -1;

        i8 = -1;

        i9 = 0;

     label08:
        $i18 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i9 >= $i18 goto label14;

        $r13 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r3 = (jp.co.omronsoft.openwnn.StrSegment) $r13;

        $i35 = r3.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        if $i35 <= i1 goto label11;

        $i38 = r3.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        if $i38 > i6 goto label10;

        if i7 >= 0 goto label09;

        i7 = i9;

     label09:
        i8 = i9;

        goto label13;

     label10:
        i8 = i9;

        goto label14;

     label11:
        if i3 != 0 goto label12;

        $i39 = r3.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        if $i39 != i1 goto label12;

        i7 = i9 - 1;

        i8 = i9 - 1;

        goto label14;

     label12:
        i7 = i9;

        i8 = i9;

        $i40 = r3.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        if $i40 < i6 goto label13;

        goto label14;

     label13:
        i9 = i9 + 1;

        goto label08;

     label14:
        i46 = i2 - i3;

        if i7 < 0 goto label22;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r20 = (jp.co.omronsoft.openwnn.StrSegment) $r9;

        i10 = r20.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        i11 = i7 + 1;

        i12 = i11;

     label15:
        if i12 > i8 goto label17;

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r20 = (jp.co.omronsoft.openwnn.StrSegment) $r12;

        $i36 = r20.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        if i10 <= $i36 goto label16;

        i10 = r20.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

     label16:
        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i11);

        i12 = i12 + 1;

        goto label15;

     label17:
        if i10 >= i5 goto label18;

        $i23 = i5;

        goto label19;

     label18:
        $i23 = i10 + i46;

     label19:
        r20.<jp.co.omronsoft.openwnn.StrSegment: int 'to'> = $i23;

        $i28 = r20.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i27 = r20.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $r10 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: java.lang.String toString(int,int,int)>(i0, $i28, $i27);

        r20.<jp.co.omronsoft.openwnn.StrSegment: java.lang.String string> = $r10;

        i47 = i11;

     label20:
        $i26 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i47 >= $i26 goto label21;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        r21 = (jp.co.omronsoft.openwnn.StrSegment) $r11;

        $i29 = r21.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i33 = $i29 + i46;

        r21.<jp.co.omronsoft.openwnn.StrSegment: int 'from'> = $i33;

        $i34 = r21.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i32 = $i34 + i46;

        r21.<jp.co.omronsoft.openwnn.StrSegment: int 'to'> = $i32;

        i47 = i47 + 1;

        goto label20;

     label21:
        $i30 = i8 - i7;

        $i31 = $i30 + 1;

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i4, i7, 1, $i31);

        goto label25;

     label22:
        $r7 = new jp.co.omronsoft.openwnn.StrSegment;

        $r6 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: java.lang.String toString(int,int,int)>(i0, i1, i5);

        specialinvoke $r7.<jp.co.omronsoft.openwnn.StrSegment: void <init>(java.lang.String,int,int)>($r6, i1, i5);

        r22 = $r7;

        virtualinvoke r1.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r22);

        i48 = 1;

     label23:
        $i20 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i48 >= $i20 goto label24;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i48);

        r23 = (jp.co.omronsoft.openwnn.StrSegment) $r8;

        $i22 = r23.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i21 = $i22 + i46;

        r23.<jp.co.omronsoft.openwnn.StrSegment: int 'from'> = $i21;

        $i24 = r23.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i25 = $i24 + i46;

        r23.<jp.co.omronsoft.openwnn.StrSegment: int 'to'> = $i25;

        i48 = i48 + 1;

        goto label23;

     label24:
        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i4, 0, 1, 0);

     label25:
        return;
    }

    public void insertStrSegment(int, jp.co.omronsoft.openwnn.StrSegment)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, $i2;
        jp.co.omronsoft.openwnn.StrSegment r1;
        int[] $r2;
        java.util.ArrayList[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        r1 := @parameter1: jp.co.omronsoft.openwnn.StrSegment;

        $r2 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        i1 = $r2[i0];

        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r4 = $r3[i0];

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, r1);

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i0, i1, 1, 0);

        $i2 = i1 + 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i0, $i2);

        return;
    }

    public void insertStrSegment(int, int, jp.co.omronsoft.openwnn.StrSegment)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20;
        jp.co.omronsoft.openwnn.StrSegment r1, r2, r4, $r11;
        java.util.ArrayList r3, $r7;
        java.util.ArrayList[] $r5, $r12;
        int[] $r6, $r8, $r9, $r10, $r14, $r15, $r16;
        java.lang.String $r13;
        java.lang.Object $r17;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: jp.co.omronsoft.openwnn.StrSegment;

        $r5 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r7 = $r5[i0];

        $r6 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i5 = $r6[i0];

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, r1);

        $r8 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i6 = $r8[i0];

        $i7 = $i6 + 1;

        $r8[i0] = $i7;

        i2 = i0 + 1;

     label1:
        if i2 > i1 goto label4;

        $r10 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i10 = i2 - 1;

        $i11 = $r10[$i10];

        i3 = $i11 - 1;

        $r11 = new jp.co.omronsoft.openwnn.StrSegment;

        $r13 = r1.<jp.co.omronsoft.openwnn.StrSegment: java.lang.String string>;

        specialinvoke $r11.<jp.co.omronsoft.openwnn.StrSegment: void <init>(java.lang.String,int,int)>($r13, i3, i3);

        r2 = $r11;

        $r12 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r3 = $r12[i2];

        $r14 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i12 = $r14[i2];

        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>($i12, r2);

        $r15 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i13 = $r15[i2];

        $i14 = $i13 + 1;

        $r15[i2] = $i14;

        $r16 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        i4 = $r16[i2];

     label2:
        $i17 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i4 >= $i17 goto label3;

        $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (jp.co.omronsoft.openwnn.StrSegment) $r17;

        $i15 = r4.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i16 = $i15 + 1;

        r4.<jp.co.omronsoft.openwnn.StrSegment: int 'from'> = $i16;

        $i18 = r4.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i19 = $i18 + 1;

        r4.<jp.co.omronsoft.openwnn.StrSegment: int 'to'> = $i19;

        i4 = i4 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r9 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        i20 = $r9[i1];

        $i9 = i20 - 1;

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i1, $i9, 1, 0);

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i1, i20);

        return;
    }

    protected void replaceStrSegment0(int, jp.co.omronsoft.openwnn.StrSegment[], int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        jp.co.omronsoft.openwnn.StrSegment[] r1;
        java.util.ArrayList r2;
        java.util.ArrayList[] $r3;
        jp.co.omronsoft.openwnn.StrSegment $r4;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        r1 := @parameter1: jp.co.omronsoft.openwnn.StrSegment[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r2 = $r3[i0];

        if i1 < 0 goto label1;

        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 <= $i8 goto label2;

     label1:
        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label2:
        if i2 < 0 goto label3;

        $i9 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i2 <= $i9 goto label4;

     label3:
        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label4:
        i3 = i1;

     label5:
        if i3 > i2 goto label6;

        virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i3 = i3 + 1;

        goto label5;

     label6:
        $i4 = lengthof r1;

        i10 = $i4 - 1;

     label7:
        if i10 < 0 goto label8;

        $r4 = r1[i10];

        virtualinvoke r2.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, $r4);

        i10 = i10 + -1;

        goto label7;

     label8:
        $i7 = lengthof r1;

        $i5 = i2 - i1;

        $i6 = $i5 + 1;

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void modifyUpper(int,int,int,int)>(i0, i1, $i7, $i6);

        return;
    }

    public void replaceStrSegment(int, jp.co.omronsoft.openwnn.StrSegment[], int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        jp.co.omronsoft.openwnn.StrSegment[] r1;
        int[] $r2;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        r1 := @parameter1: jp.co.omronsoft.openwnn.StrSegment[];

        i1 := @parameter2: int;

        $r2 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        i2 = $r2[i0];

        $i4 = i2 - i1;

        $i3 = i2 - 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void replaceStrSegment0(int,jp.co.omronsoft.openwnn.StrSegment[],int,int)>(i0, r1, $i4, $i3);

        $i5 = lengthof r1;

        $i6 = i2 + $i5;

        $i7 = $i6 - i1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i0, $i7);

        return;
    }

    public void replaceStrSegment(int, jp.co.omronsoft.openwnn.StrSegment[])
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        jp.co.omronsoft.openwnn.StrSegment[] r1;
        int[] $r2;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        r1 := @parameter1: jp.co.omronsoft.openwnn.StrSegment[];

        $r2 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        i1 = $r2[i0];

        $i3 = i1 - 1;

        $i2 = i1 - 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void replaceStrSegment0(int,jp.co.omronsoft.openwnn.StrSegment[],int,int)>(i0, r1, $i3, $i2);

        $i4 = lengthof r1;

        $i5 = i1 + $i4;

        $i6 = $i5 - 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i0, $i6);

        return;
    }

    public void deleteStrSegment(int, int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, i58;
        int[] r1, r2, $r7, $r9;
        java.util.ArrayList r3, r4, r5;
        jp.co.omronsoft.openwnn.StrSegment r6, $r12, $r17, $r19, $r21, $r23, $r24, $r26;
        java.util.ArrayList[] $r8, $r10, $r11;
        jp.co.omronsoft.openwnn.StrSegment[] $r13, r28;
        java.lang.String $r14;
        java.lang.Object $r15, $r16, $r18, $r20, $r22, $r25, $r27;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r7 = newarray (int)[3];

        $r7[0] = -1;

        $r7[1] = -1;

        $r7[2] = -1;

        r1 = $r7;

        $r9 = newarray (int)[3];

        $r9[0] = -1;

        $r9[1] = -1;

        $r9[2] = -1;

        r2 = $r9;

        $r8 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r3 = $r8[2];

        $r10 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r4 = $r10[1];

        if i0 != 2 goto label01;

        r1[2] = i1;

        r2[2] = i2;

        $r18 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r19 = (jp.co.omronsoft.openwnn.StrSegment) $r18;

        $i51 = $r19.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        r1[1] = $i51;

        $r25 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r24 = (jp.co.omronsoft.openwnn.StrSegment) $r25;

        $i55 = $r24.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        r2[1] = $i55;

        $i54 = r1[1];

        $r22 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>($i54);

        $r23 = (jp.co.omronsoft.openwnn.StrSegment) $r22;

        $i53 = $r23.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        r1[0] = $i53;

        $i57 = r2[1];

        $r27 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>($i57);

        $r26 = (jp.co.omronsoft.openwnn.StrSegment) $r27;

        $i56 = $r26.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        r2[0] = $i56;

        goto label03;

     label01:
        if i0 != 1 goto label02;

        r1[1] = i1;

        r2[1] = i2;

        $r16 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r17 = (jp.co.omronsoft.openwnn.StrSegment) $r16;

        $i47 = $r17.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        r1[0] = $i47;

        $r20 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r21 = (jp.co.omronsoft.openwnn.StrSegment) $r20;

        $i52 = $r21.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        r2[0] = $i52;

        goto label03;

     label02:
        r1[0] = i1;

        r2[0] = i2;

     label03:
        $i8 = i2 - i1;

        i3 = $i8 + 1;

        i4 = 0;

     label04:
        if i4 >= 3 goto label17;

        $i9 = r1[i4];

        if $i9 < 0 goto label05;

        $i50 = r1[i4];

        $i49 = r2[i4];

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void deleteStrSegment0(int,int,int,int)>(i4, $i50, $i49, i3);

        goto label16;

     label05:
        i5 = -1;

        i6 = -1;

        $r11 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r5 = $r11[i4];

        i7 = 0;

     label06:
        $i11 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i7 >= $i11 goto label13;

        $r15 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r6 = (jp.co.omronsoft.openwnn.StrSegment) $r15;

        $i30 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i24 = i4 - 1;

        $i29 = r1[$i24];

        if $i30 < $i29 goto label07;

        $i48 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i44 = i4 - 1;

        $i43 = r2[$i44];

        if $i48 <= $i43 goto label08;

     label07:
        $i34 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i27 = i4 - 1;

        $i28 = r1[$i27];

        if $i34 < $i28 goto label10;

        $i46 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i40 = i4 - 1;

        $i39 = r2[$i40];

        if $i46 > $i39 goto label10;

     label08:
        $i45 = r1[i4];

        if $i45 >= 0 goto label09;

        r1[i4] = i7;

        i5 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

     label09:
        r2[i4] = i7;

        i6 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        goto label12;

     label10:
        $i31 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i33 = i4 - 1;

        $i32 = r1[$i33];

        if $i31 > $i32 goto label11;

        $i41 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i35 = i4 - 1;

        $i42 = r2[$i35];

        if $i41 < $i42 goto label11;

        i5 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        i6 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        r1[i4] = i7;

        r2[i4] = i7;

        goto label13;

     label11:
        $i36 = r6.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i38 = i4 - 1;

        $i37 = r2[$i38];

        if $i36 <= $i37 goto label12;

        goto label13;

     label12:
        i7 = i7 + 1;

        goto label06;

     label13:
        $i10 = i4 - 1;

        $i13 = r1[$i10];

        if i5 != $i13 goto label14;

        $i18 = i4 - 1;

        $i22 = r2[$i18];

        if i6 == $i22 goto label15;

     label14:
        $i12 = r1[i4];

        $i14 = $i12 + 1;

        $i15 = r2[i4];

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void deleteStrSegment0(int,int,int,int)>(i4, $i14, $i15, i3);

        i58 = i6 - i3;

        $r13 = newarray (jp.co.omronsoft.openwnn.StrSegment)[1];

        $r12 = new jp.co.omronsoft.openwnn.StrSegment;

        $i16 = i4 - 1;

        $r14 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: java.lang.String toString(int)>($i16);

        specialinvoke $r12.<jp.co.omronsoft.openwnn.StrSegment: void <init>(java.lang.String,int,int)>($r14, i5, i58);

        $r13[0] = $r12;

        r28 = $r13;

        $i17 = r1[i4];

        $i19 = r1[i4];

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void replaceStrSegment0(int,jp.co.omronsoft.openwnn.StrSegment[],int,int)>(i4, r28, $i17, $i19);

        return;

     label15:
        $i20 = r1[i4];

        $i23 = r2[i4];

        specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void deleteStrSegment0(int,int,int,int)>(i4, $i20, $i23, i3);

     label16:
        $i25 = r2[i4];

        $i21 = r1[i4];

        $i26 = $i25 - $i21;

        i3 = $i26 + 1;

        i4 = i4 + 1;

        goto label04;

     label17:
        return;
    }

    private void deleteStrSegment0(int, int, int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.util.ArrayList r1;
        jp.co.omronsoft.openwnn.StrSegment r2;
        java.util.ArrayList[] $r3;
        java.lang.Object $r5;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r1 = $r3[i0];

        if i3 == 0 goto label2;

        i4 = i2 + 1;

     label1:
        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i4 >= $i5 goto label2;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (jp.co.omronsoft.openwnn.StrSegment) $r5;

        $i6 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        $i7 = $i6 - i3;

        r2.<jp.co.omronsoft.openwnn.StrSegment: int 'from'> = $i7;

        $i8 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i9 = $i8 - i3;

        r2.<jp.co.omronsoft.openwnn.StrSegment: int 'to'> = $i9;

        i4 = i4 + 1;

        goto label1;

     label2:
        i10 = i1;

     label3:
        if i10 > i2 goto label4;

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i10 = i10 + 1;

        goto label3;

     label4:
        return;
    }

    public int delete(int, boolean)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7;
        boolean z0;
        java.util.ArrayList r1;
        int[] $r2;
        java.util.ArrayList[] $r3;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        i1 = $r2[i0];

        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r1 = $r3[i0];

        if z0 != 0 goto label1;

        if i1 <= 0 goto label1;

        $i6 = i1 - 1;

        $i5 = i1 - 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void deleteStrSegment(int,int,int)>(i0, $i6, $i5);

        $i7 = i1 - 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i0, $i7);

        goto label2;

     label1:
        if z0 == 0 goto label2;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label2;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: void deleteStrSegment(int,int,int)>(i0, i1, i1);

        virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i0, i1);

     label2:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        return $i2;
    }

    public java.util.ArrayList getStringLayer(int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0;
        java.util.ArrayList[] $r2;
        java.util.ArrayList $r3;
        java.lang.Exception $r4;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r3 = $r2[i0];

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private int included(int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.util.ArrayList r1;
        jp.co.omronsoft.openwnn.StrSegment r2;
        java.util.ArrayList[] $r3;
        java.lang.Object $r4;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        return 0;

     label1:
        i2 = i0 + 1;

        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        r1 = $r3[i2];

        i3 = 0;

     label2:
        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i3 >= $i4 goto label4;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (jp.co.omronsoft.openwnn.StrSegment) $r4;

        $i5 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'from'>;

        if $i5 > i1 goto label3;

        $i6 = r2.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        if i1 > $i6 goto label3;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return i3;
    }

    public int setCursor(int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20;
        java.util.ArrayList[] $r1, $r7, $r12, $r17, $r26;
        java.util.ArrayList $r2, $r9, $r13, $r22, $r28;
        int[] $r3, $r4, $r5, $r6, $r8, $r16, $r18, $r19, $r23, $r24, $r25, $r27;
        java.lang.Object $r10, $r14, $r20;
        jp.co.omronsoft.openwnn.StrSegment $r11, $r15, $r21;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 <= $i2 goto label01;

        $r26 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r28 = $r26[i0];

        i1 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

     label01:
        if i1 >= 0 goto label02;

        i1 = 0;

     label02:
        if i0 != 0 goto label03;

        $r23 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r23[0] = i1;

        $r24 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i19 = specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int included(int,int)>(0, i1);

        $r24[1] = $i19;

        $r27 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r25 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i18 = $r25[1];

        $i20 = specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int included(int,int)>(1, $i18);

        $r27[2] = $i20;

        goto label11;

     label03:
        if i0 != 1 goto label06;

        $r16 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i13 = specialinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int included(int,int)>(1, i1);

        $r16[2] = $i13;

        $r18 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r18[1] = i1;

        $r19 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        if i1 <= 0 goto label04;

        $r17 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r22 = $r17[1];

        $i14 = i1 - 1;

        $r20 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>($i14);

        $r21 = (jp.co.omronsoft.openwnn.StrSegment) $r20;

        $i16 = $r21.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i17 = $i16 + 1;

        goto label05;

     label04:
        $i17 = 0;

     label05:
        $r19[0] = $i17;

        goto label11;

     label06:
        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r3[2] = i1;

        $r4 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        if i1 <= 0 goto label07;

        $r12 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r13 = $r12[2];

        $i9 = i1 - 1;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i9);

        $r15 = (jp.co.omronsoft.openwnn.StrSegment) $r14;

        $i11 = $r15.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i12 = $i11 + 1;

        goto label08;

     label07:
        $i12 = 0;

     label08:
        $r4[1] = $i12;

        $r6 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r5 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i3 = $r5[1];

        if $i3 <= 0 goto label09;

        $r7 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r9 = $r7[1];

        $r8 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i4 = $r8[1];

        $i5 = $i4 - 1;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r11 = (jp.co.omronsoft.openwnn.StrSegment) $r10;

        $i7 = $r11.<jp.co.omronsoft.openwnn.StrSegment: int 'to'>;

        $i8 = $i7 + 1;

        goto label10;

     label09:
        $i8 = 0;

     label10:
        $r6[0] = $i8;

     label11:
        return i1;
    }

    public int moveCursor(int, int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, i1, i2, $i3, $i4;
        int[] $r1;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i3 = $r1[i0];

        i2 = $i3 + i1;

        $i4 = virtualinvoke r0.<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)>(i0, i2);

        return $i4;
    }

    public int getCursor(int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        $r1 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int size(int)
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0, $i1;
        java.util.ArrayList[] $r1;
        java.util.ArrayList $r2;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter0: int;

        $r1 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r2 = $r1[i0];

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i1;
    }

    public void clear()
    {
        jp.co.omronsoft.openwnn.ComposingText r0;
        int i0;
        java.util.ArrayList[] $r1;
        java.util.ArrayList $r2;
        int[] $r3;

        r0 := @this: jp.co.omronsoft.openwnn.ComposingText;

        i0 = 0;

     label1:
        if i0 >= 3 goto label2;

        $r1 = r0.<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList[] mStringLayer>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = r0.<jp.co.omronsoft.openwnn.ComposingText: int[] mCursor>;

        $r3[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <jp.co.omronsoft.openwnn.ComposingText: int MAX_LAYER> = 3;

        <jp.co.omronsoft.openwnn.ComposingText: int LAYER2> = 2;

        <jp.co.omronsoft.openwnn.ComposingText: int LAYER1> = 1;

        <jp.co.omronsoft.openwnn.ComposingText: int LAYER0> = 0;

        return;
    }
}
