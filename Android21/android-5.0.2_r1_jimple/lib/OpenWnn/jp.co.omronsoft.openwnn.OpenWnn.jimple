public class jp.co.omronsoft.openwnn.OpenWnn extends android.inputmethodservice.InputMethodService
{
    protected jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager;
    protected jp.co.omronsoft.openwnn.InputViewManager mInputViewManager;
    protected jp.co.omronsoft.openwnn.WnnEngine mConverter;
    protected jp.co.omronsoft.openwnn.LetterConverter mPreConverter;
    protected jp.co.omronsoft.openwnn.ComposingText mComposingText;
    protected android.view.inputmethod.InputConnection mInputConnection;
    protected boolean mAutoHideMode;
    protected boolean mDirectInputMode;
    private boolean mConsumeDownEvent;
    private static boolean mIsXLarge;
    protected jp.co.omronsoft.openwnn.TextCandidatesViewManager mTextCandidatesViewManager;
    protected jp.co.omronsoft.openwnn.TextCandidates1LineViewManager mTextCandidates1LineViewManager;
    private static jp.co.omronsoft.openwnn.OpenWnn mCurrentIme;
    private java.util.List KeyActionList;

    public void <init>()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        java.util.ArrayList $r1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.LetterConverter mPreConverter> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.ComposingText mComposingText> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection mInputConnection> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mAutoHideMode> = 1;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mDirectInputMode> = 1;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidatesViewManager mTextCandidatesViewManager> = null;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidates1LineViewManager mTextCandidates1LineViewManager> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList> = $r1;

        return;
    }

    public void onCreate()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        jp.co.omronsoft.openwnn.TextCandidatesViewManager $r2, $r3;
        boolean $z0;
        jp.co.omronsoft.openwnn.WnnEngine $r4, $r7;
        jp.co.omronsoft.openwnn.ComposingText $r5, $r6;
        jp.co.omronsoft.openwnn.TextCandidates1LineViewManager $r8, $r9;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void updateXLargeMode()>();

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onCreate()>();

        staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        <jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.OpenWnn mCurrentIme> = r0;

        $r2 = new jp.co.omronsoft.openwnn.TextCandidatesViewManager;

        specialinvoke $r2.<jp.co.omronsoft.openwnn.TextCandidatesViewManager: void <init>(int)>(-1);

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidatesViewManager mTextCandidatesViewManager> = $r2;

        $z0 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnn: boolean isXLarge()>();

        if $z0 == 0 goto label1;

        $r8 = new jp.co.omronsoft.openwnn.TextCandidates1LineViewManager;

        specialinvoke $r8.<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: void <init>(int)>(500);

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidates1LineViewManager mTextCandidates1LineViewManager> = $r8;

        $r9 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidates1LineViewManager mTextCandidates1LineViewManager>;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager> = $r9;

        goto label2;

     label1:
        $r3 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidatesViewManager mTextCandidatesViewManager>;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager> = $r3;

     label2:
        $r4 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        if $r4 == null goto label3;

        $r7 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        interfaceinvoke $r7.<jp.co.omronsoft.openwnn.WnnEngine: void init()>();

     label3:
        $r5 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.ComposingText mComposingText>;

        if $r5 == null goto label4;

        $r6 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.ComposingText mComposingText>;

        virtualinvoke $r6.<jp.co.omronsoft.openwnn.ComposingText: void clear()>();

     label4:
        return;
    }

    public android.view.View onCreateCandidatesView()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        android.view.WindowManager r1;
        android.view.View r2, $r4;
        jp.co.omronsoft.openwnn.CandidatesViewManager $r3, $r7, $r10;
        java.lang.Object $r5;
        boolean $z0;
        jp.co.omronsoft.openwnn.TextCandidatesViewManager $r6, $r13;
        android.view.Display $r8, $r9, $r12, $r14;
        int $i0, $i1, $i2, $i3;
        jp.co.omronsoft.openwnn.TextCandidates1LineViewManager $r11;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        $r3 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager>;

        if $r3 == null goto label3;

        $r5 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: java.lang.Object getSystemService(java.lang.String)>("window");

        r1 = (android.view.WindowManager) $r5;

        $z0 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnn: boolean isXLarge()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidates1LineViewManager mTextCandidates1LineViewManager>;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager> = $r11;

        $r13 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidatesViewManager mTextCandidatesViewManager>;

        $r12 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i2 = virtualinvoke $r12.<android.view.Display: int getWidth()>();

        $r14 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i3 = virtualinvoke $r14.<android.view.Display: int getHeight()>();

        virtualinvoke $r13.<jp.co.omronsoft.openwnn.TextCandidatesViewManager: android.view.View initView(jp.co.omronsoft.openwnn.OpenWnn,int,int)>(r0, $i2, $i3);

        goto label2;

     label1:
        $r6 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.TextCandidatesViewManager mTextCandidatesViewManager>;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager> = $r6;

     label2:
        $r7 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager>;

        $r8 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r8.<android.view.Display: int getWidth()>();

        $r9 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i1 = virtualinvoke $r9.<android.view.Display: int getHeight()>();

        r2 = virtualinvoke $r7.<jp.co.omronsoft.openwnn.CandidatesViewManager: android.view.View initView(jp.co.omronsoft.openwnn.OpenWnn,int,int)>(r0, $i0, $i1);

        $r10 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager>;

        virtualinvoke $r10.<jp.co.omronsoft.openwnn.CandidatesViewManager: void setViewType(int)>(0);

        return r2;

     label3:
        $r4 = specialinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>();

        return $r4;
    }

    public android.view.View onCreateInputView()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        android.view.WindowManager r2;
        jp.co.omronsoft.openwnn.InputViewManager $r3, $r6;
        android.view.View $r4, $r9;
        java.lang.Object $r5;
        android.view.Display $r7, $r8;
        int $i0, $i1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r3 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        if $r3 == null goto label1;

        $r5 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: java.lang.Object getSystemService(java.lang.String)>("window");

        r2 = (android.view.WindowManager) $r5;

        $r6 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        $r7 = interfaceinvoke r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r7.<android.view.Display: int getWidth()>();

        $r8 = interfaceinvoke r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i1 = virtualinvoke $r8.<android.view.Display: int getHeight()>();

        $r9 = interfaceinvoke $r6.<jp.co.omronsoft.openwnn.InputViewManager: android.view.View initView(jp.co.omronsoft.openwnn.OpenWnn,int,int)>(r0, $i0, $i1);

        return $r9;

     label1:
        $r4 = specialinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>();

        return $r4;
    }

    public void onDestroy()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onDestroy()>();

        <jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.OpenWnn mCurrentIme> = null;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void close()>();

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        int i0, i1, i2, $i3;
        android.view.KeyEvent r1;
        jp.co.omronsoft.openwnn.KeyAction r2, $r4, $r8;
        jp.co.omronsoft.openwnn.OpenWnnEvent $r3;
        boolean $z0, $z1, $z3, $z4, $z5;
        java.util.List $r5, $r6, $r7, $r10;
        java.lang.Object $r9;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r3 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r3.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(android.view.KeyEvent)>(r1);

        $z0 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r3);

        r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mConsumeDownEvent> = $z0;

        $r4 = new jp.co.omronsoft.openwnn.KeyAction;

        specialinvoke $r4.<jp.co.omronsoft.openwnn.KeyAction: void <init>()>();

        r2 = $r4;

        $z1 = r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mConsumeDownEvent>;

        r2.<jp.co.omronsoft.openwnn.KeyAction: boolean mConsumeDownEvent> = $z1;

        r2.<jp.co.omronsoft.openwnn.KeyAction: int mKeyCode> = i0;

        $r5 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 == 0 goto label3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r7 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (jp.co.omronsoft.openwnn.KeyAction) $r9;

        $i3 = $r8.<jp.co.omronsoft.openwnn.KeyAction: int mKeyCode>;

        if $i3 != i0 goto label2;

        $r10 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i2);

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        $z3 = r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mConsumeDownEvent>;

        if $z3 != 0 goto label4;

        $z5 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z5;

     label4:
        $z4 = r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mConsumeDownEvent>;

        return $z4;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        int i0, i1, i2, $i3;
        android.view.KeyEvent r1;
        boolean z0, z1;
        jp.co.omronsoft.openwnn.KeyAction r2;
        java.util.List $r3, $r5, $r7;
        jp.co.omronsoft.openwnn.OpenWnnEvent $r4;
        java.lang.Object $r6;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        z0 = r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mConsumeDownEvent>;

        $r3 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r5 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (jp.co.omronsoft.openwnn.KeyAction) $r6;

        $i3 = r2.<jp.co.omronsoft.openwnn.KeyAction: int mKeyCode>;

        if $i3 != i0 goto label2;

        z0 = r2.<jp.co.omronsoft.openwnn.KeyAction: boolean mConsumeDownEvent>;

        $r7 = r0.<jp.co.omronsoft.openwnn.OpenWnn: java.util.List KeyActionList>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i2);

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        goto label5;

     label4:
        $r4 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r4.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(android.view.KeyEvent)>(r1);

        z1 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r4);

     label5:
        return z1;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0, $r3;
        int i0;
        android.view.KeyEvent r1;
        jp.co.omronsoft.openwnn.OpenWnnEvent r2, $r4;
        boolean $z0, $z1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r3 = <jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.OpenWnn mCurrentIme>;

        if $r3 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("iWnn", "OpenWnn::onKeyLongPress()  Unprocessing onCreate() ");

        $z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>(i0, r1);

        return $z1;

     label1:
        $r4 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r4.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(android.view.KeyEvent)>(r1);

        r2 = $r4;

        r2.<jp.co.omronsoft.openwnn.OpenWnnEvent: int code> = -268435420;

        $z0 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>(r2);

        return $z0;
    }

    public void onStartInput(android.view.inputmethod.EditorInfo, boolean)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;
        android.view.inputmethod.InputConnection $r2;
        jp.co.omronsoft.openwnn.ComposingText $r3, $r4;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        $r2 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection mInputConnection> = $r2;

        if z0 != 0 goto label1;

        $r3 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.ComposingText mComposingText>;

        if $r3 == null goto label1;

        $r4 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.ComposingText mComposingText>;

        virtualinvoke $r4.<jp.co.omronsoft.openwnn.ComposingText: void clear()>();

     label1:
        return;
    }

    public void onStartInputView(android.view.inputmethod.EditorInfo, boolean)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;
        android.content.SharedPreferences r2;
        android.view.inputmethod.InputConnection $r3, $r4;
        jp.co.omronsoft.openwnn.CandidatesViewManager $r5, $r12;
        jp.co.omronsoft.openwnn.InputViewManager $r6, $r11;
        jp.co.omronsoft.openwnn.LetterConverter $r7, $r10;
        jp.co.omronsoft.openwnn.WnnEngine $r8, $r9, $r13, $r14;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        $r3 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection mInputConnection> = $r3;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void setCandidatesViewShown(boolean)>(0);

        $r4 = r0.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection mInputConnection>;

        if $r4 == null goto label1;

        r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mDirectInputMode> = 0;

        $r13 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        if $r13 == null goto label2;

        $r14 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        interfaceinvoke $r14.<jp.co.omronsoft.openwnn.WnnEngine: void init()>();

        goto label2;

     label1:
        r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mDirectInputMode> = 1;

     label2:
        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r5 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager>;

        if $r5 == null goto label3;

        $r12 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.CandidatesViewManager mCandidatesViewManager>;

        virtualinvoke $r12.<jp.co.omronsoft.openwnn.CandidatesViewManager: void setPreferences(android.content.SharedPreferences)>(r2);

     label3:
        $r6 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        if $r6 == null goto label4;

        $r11 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        interfaceinvoke $r11.<jp.co.omronsoft.openwnn.InputViewManager: void setPreferences(android.content.SharedPreferences,android.view.inputmethod.EditorInfo)>(r2, r1);

     label4:
        $r7 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.LetterConverter mPreConverter>;

        if $r7 == null goto label5;

        $r10 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.LetterConverter mPreConverter>;

        interfaceinvoke $r10.<jp.co.omronsoft.openwnn.LetterConverter: void setPreferences(android.content.SharedPreferences)>(r2);

     label5:
        $r8 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        if $r8 == null goto label6;

        $r9 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        interfaceinvoke $r9.<jp.co.omronsoft.openwnn.WnnEngine: void setPreferences(android.content.SharedPreferences)>(r2);

     label6:
        return;
    }

    public void requestHideSelf(int)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        int i0;
        jp.co.omronsoft.openwnn.InputViewManager $r1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter0: int;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(i0);

        $r1 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        if $r1 != null goto label1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void hideWindow()>();

     label1:
        return;
    }

    public void setCandidatesViewShown(boolean)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        boolean z0, $z1;
        jp.co.omronsoft.openwnn.InputViewManager $r1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(z0);

        if z0 == 0 goto label1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void showWindow(boolean)>(1);

        goto label2;

     label1:
        $z1 = r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mAutoHideMode>;

        if $z1 == 0 goto label2;

        $r1 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        if $r1 != null goto label2;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void hideWindow()>();

     label2:
        return;
    }

    public void hideWindow()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void hideWindow()>();

        r0.<jp.co.omronsoft.openwnn.OpenWnn: boolean mDirectInputMode> = 1;

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: void hideStatusIcon()>();

        return;
    }

    public void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        android.inputmethodservice.InputMethodService$Insets r1;
        int $i0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        r1 := @parameter0: android.inputmethodservice.InputMethodService$Insets;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)>(r1);

        $i0 = r1.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets>;

        r1.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets> = $i0;

        return;
    }

    public boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        jp.co.omronsoft.openwnn.OpenWnnEvent r1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        r1 := @parameter0: jp.co.omronsoft.openwnn.OpenWnnEvent;

        return 0;
    }

    protected java.lang.String searchToggleCharacter(java.lang.String, java.lang.String[], boolean)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        java.lang.String r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.String[] r2;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label6;

        $r3 = r2[i0];

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label5;

        if z0 == 0 goto label3;

        i5 = i0 + -1;

        if i5 >= 0 goto label2;

        $i3 = lengthof r2;

        $i4 = $i3 - 1;

        $r7 = r2[$i4];

        return $r7;

     label2:
        $r6 = r2[i5];

        return $r6;

     label3:
        i6 = i0 + 1;

        $i2 = lengthof r2;

        if i6 != $i2 goto label4;

        $r5 = r2[0];

        return $r5;

     label4:
        $r4 = r2[i6];

        return $r4;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return null;
    }

    protected void close()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        jp.co.omronsoft.openwnn.WnnEngine $r1, $r2;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        $r1 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        if $r1 == null goto label1;

        $r2 = r0.<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.WnnEngine mConverter>;

        interfaceinvoke $r2.<jp.co.omronsoft.openwnn.WnnEngine: void close()>();

     label1:
        return;
    }

    public static boolean isXLarge()
    {
        boolean $z0;

        $z0 = <jp.co.omronsoft.openwnn.OpenWnn: boolean mIsXLarge>;

        return $z0;
    }

    public void updateXLargeMode()
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        $r1 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnn: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int screenLayout>;

        $i1 = $i0 & 15;

        if $i1 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <jp.co.omronsoft.openwnn.OpenWnn: boolean mIsXLarge> = $z0;

        return;
    }

    public static jp.co.omronsoft.openwnn.OpenWnn getCurrentIme()
    {
        jp.co.omronsoft.openwnn.OpenWnn $r0;

        $r0 = <jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.OpenWnn mCurrentIme>;

        return $r0;
    }

    protected boolean isThroughKeyCode(int)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        int i0;
        boolean z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 5: goto label1;
            case 24: goto label1;
            case 25: goto label1;
            case 79: goto label1;
            case 85: goto label1;
            case 86: goto label1;
            case 87: goto label1;
            case 88: goto label1;
            case 89: goto label1;
            case 90: goto label1;
            case 91: goto label1;
            case 126: goto label1;
            case 127: goto label1;
            case 128: goto label1;
            case 129: goto label1;
            case 130: goto label1;
            case 164: goto label1;
            case 205: goto label1;
            default: goto label2;
        };

     label1:
        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    protected boolean isTenKeyCode(int)
    {
        jp.co.omronsoft.openwnn.OpenWnn r0;
        int i0;
        boolean z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter0: int;

        z0 = 0;

        tableswitch(i0)
        {
            case 144: goto label1;
            case 145: goto label1;
            case 146: goto label1;
            case 147: goto label1;
            case 148: goto label1;
            case 149: goto label1;
            case 150: goto label1;
            case 151: goto label1;
            case 152: goto label1;
            case 153: goto label1;
            case 154: goto label2;
            case 155: goto label2;
            case 156: goto label2;
            case 157: goto label2;
            case 158: goto label1;
            default: goto label2;
        };

     label1:
        z0 = 1;

        goto label2;

     label2:
        return z0;
    }

    static void <clinit>()
    {
        <jp.co.omronsoft.openwnn.OpenWnn: boolean mIsXLarge> = 0;

        return;
    }
}
