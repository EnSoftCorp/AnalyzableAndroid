public class jp.co.omronsoft.openwnn.WnnSentence extends jp.co.omronsoft.openwnn.WnnWord
{
    public java.util.ArrayList elements;

    public void <init>(java.lang.String, java.util.ArrayList)
    {
        jp.co.omronsoft.openwnn.WnnSentence r0;
        java.lang.String r1, $r11, $r17, $r18;
        java.util.ArrayList r2;
        jp.co.omronsoft.openwnn.WnnClause r3, r6, r20;
        java.lang.StringBuffer r4, $r9;
        java.util.Iterator r5;
        jp.co.omronsoft.openwnn.WnnPOS $r7, $r12, $r13, $r14, $r19;
        boolean $z0, $z1;
        java.lang.Object $r8, $r10, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: jp.co.omronsoft.openwnn.WnnSentence;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        specialinvoke r0.<jp.co.omronsoft.openwnn.WnnWord: void <init>()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = 0;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = "";

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = "";

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = 0;

        $r7 = new jp.co.omronsoft.openwnn.WnnPOS;

        specialinvoke $r7.<jp.co.omronsoft.openwnn.WnnPOS: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r7;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = 0;

        goto label6;

     label2:
        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements> = r2;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r3 = (jp.co.omronsoft.openwnn.WnnClause) $r8;

        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label3;

        $i7 = r3.<jp.co.omronsoft.openwnn.WnnClause: int id>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = $i7;

        $r18 = r3.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String candidate>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = $r18;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = r1;

        $i8 = r3.<jp.co.omronsoft.openwnn.WnnClause: int frequency>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = $i8;

        $r19 = r3.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r19;

        $i9 = r3.<jp.co.omronsoft.openwnn.WnnClause: int attribute>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = $i9;

        goto label6;

     label3:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        r4 = $r9;

        r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (jp.co.omronsoft.openwnn.WnnClause) $r15;

        $r17 = r6.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String candidate>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        goto label4;

     label5:
        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r20 = (jp.co.omronsoft.openwnn.WnnClause) $r10;

        $i3 = r3.<jp.co.omronsoft.openwnn.WnnClause: int id>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = $i3;

        $r11 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = $r11;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = r1;

        $i4 = r3.<jp.co.omronsoft.openwnn.WnnClause: int frequency>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = $i4;

        $r13 = new jp.co.omronsoft.openwnn.WnnPOS;

        $r12 = r3.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        $i6 = $r12.<jp.co.omronsoft.openwnn.WnnPOS: int left>;

        $r14 = r20.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        $i5 = $r14.<jp.co.omronsoft.openwnn.WnnPOS: int right>;

        specialinvoke $r13.<jp.co.omronsoft.openwnn.WnnPOS: void <init>(int,int)>($i6, $i5);

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r13;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = 2;

     label6:
        return;
    }

    public void <init>(java.lang.String, jp.co.omronsoft.openwnn.WnnClause)
    {
        jp.co.omronsoft.openwnn.WnnSentence r0;
        java.lang.String r1, $r3;
        jp.co.omronsoft.openwnn.WnnClause r2;
        int $i0, $i1, $i2;
        jp.co.omronsoft.openwnn.WnnPOS $r4;
        java.util.ArrayList $r5, $r6;

        r0 := @this: jp.co.omronsoft.openwnn.WnnSentence;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: jp.co.omronsoft.openwnn.WnnClause;

        specialinvoke r0.<jp.co.omronsoft.openwnn.WnnWord: void <init>()>();

        $i0 = r2.<jp.co.omronsoft.openwnn.WnnClause: int id>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = $i0;

        $r3 = r2.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String candidate>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = $r3;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = r1;

        $i1 = r2.<jp.co.omronsoft.openwnn.WnnClause: int frequency>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = $i1;

        $r4 = r2.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r4;

        $i2 = r2.<jp.co.omronsoft.openwnn.WnnClause: int attribute>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = $i2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements> = $r5;

        $r6 = r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void <init>(jp.co.omronsoft.openwnn.WnnSentence, jp.co.omronsoft.openwnn.WnnClause)
    {
        jp.co.omronsoft.openwnn.WnnSentence r0, r1;
        jp.co.omronsoft.openwnn.WnnClause r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.String $r4, $r6, $r8, $r10, $r12, $r14;
        jp.co.omronsoft.openwnn.WnnPOS $r15, $r16, $r17;
        java.util.ArrayList $r18, $r19, $r20, $r21;

        r0 := @this: jp.co.omronsoft.openwnn.WnnSentence;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnSentence;

        r2 := @parameter1: jp.co.omronsoft.openwnn.WnnClause;

        specialinvoke r0.<jp.co.omronsoft.openwnn.WnnWord: void <init>()>();

        $i0 = r1.<jp.co.omronsoft.openwnn.WnnSentence: int id>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r2.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String candidate>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r1.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = r2.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String stroke>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = $r14;

        $i1 = r1.<jp.co.omronsoft.openwnn.WnnSentence: int frequency>;

        $i2 = r2.<jp.co.omronsoft.openwnn.WnnClause: int frequency>;

        $i3 = $i1 + $i2;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = $i3;

        $r15 = new jp.co.omronsoft.openwnn.WnnPOS;

        $r17 = r1.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        $i4 = $r17.<jp.co.omronsoft.openwnn.WnnPOS: int left>;

        $r16 = r2.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        $i5 = $r16.<jp.co.omronsoft.openwnn.WnnPOS: int right>;

        specialinvoke $r15.<jp.co.omronsoft.openwnn.WnnPOS: void <init>(int,int)>($i4, $i5);

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r15;

        $i6 = r1.<jp.co.omronsoft.openwnn.WnnSentence: int attribute>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = $i6;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements> = $r18;

        $r19 = r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        $r20 = r1.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        virtualinvoke $r19.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r20);

        $r21 = r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void <init>(jp.co.omronsoft.openwnn.WnnClause, jp.co.omronsoft.openwnn.WnnSentence)
    {
        jp.co.omronsoft.openwnn.WnnSentence r0, r2;
        jp.co.omronsoft.openwnn.WnnClause r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.String $r4, $r6, $r8, $r10, $r12, $r14, $r22, $r24;
        jp.co.omronsoft.openwnn.WnnPOS $r15, $r16, $r17, $r23;
        java.util.ArrayList $r18, $r19, $r20, $r21, $r25, $r26;

        r0 := @this: jp.co.omronsoft.openwnn.WnnSentence;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnClause;

        r2 := @parameter1: jp.co.omronsoft.openwnn.WnnSentence;

        specialinvoke r0.<jp.co.omronsoft.openwnn.WnnWord: void <init>()>();

        if r2 != null goto label1;

        $i6 = r1.<jp.co.omronsoft.openwnn.WnnClause: int id>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = $i6;

        $r22 = r1.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String candidate>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = $r22;

        $r24 = r1.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String stroke>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = $r24;

        $i8 = r1.<jp.co.omronsoft.openwnn.WnnClause: int frequency>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = $i8;

        $r23 = r1.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r23;

        $i7 = r1.<jp.co.omronsoft.openwnn.WnnClause: int attribute>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = $i7;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements> = $r25;

        $r26 = r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $i0 = r1.<jp.co.omronsoft.openwnn.WnnClause: int id>;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int id> = $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String candidate>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r2.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String candidate> = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r1.<jp.co.omronsoft.openwnn.WnnClause: java.lang.String stroke>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = r2.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.lang.String stroke> = $r14;

        $i1 = r1.<jp.co.omronsoft.openwnn.WnnClause: int frequency>;

        $i2 = r2.<jp.co.omronsoft.openwnn.WnnSentence: int frequency>;

        $i3 = $i1 + $i2;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int frequency> = $i3;

        $r15 = new jp.co.omronsoft.openwnn.WnnPOS;

        $r17 = r1.<jp.co.omronsoft.openwnn.WnnClause: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        $i4 = $r17.<jp.co.omronsoft.openwnn.WnnPOS: int left>;

        $r16 = r2.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech>;

        $i5 = $r16.<jp.co.omronsoft.openwnn.WnnPOS: int right>;

        specialinvoke $r15.<jp.co.omronsoft.openwnn.WnnPOS: void <init>(int,int)>($i4, $i5);

        r0.<jp.co.omronsoft.openwnn.WnnSentence: jp.co.omronsoft.openwnn.WnnPOS partOfSpeech> = $r15;

        r0.<jp.co.omronsoft.openwnn.WnnSentence: int attribute> = 2;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements> = $r19;

        $r18 = r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r21 = r0.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        $r20 = r2.<jp.co.omronsoft.openwnn.WnnSentence: java.util.ArrayList elements>;

        virtualinvoke $r21.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r20);

     label2:
        return;
    }
}
