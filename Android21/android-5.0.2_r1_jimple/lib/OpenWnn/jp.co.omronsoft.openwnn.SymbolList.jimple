public class jp.co.omronsoft.openwnn.SymbolList extends java.lang.Object implements jp.co.omronsoft.openwnn.WnnEngine
{
    public static final int LANG_EN;
    public static final int LANG_JA;
    public static final int LANG_ZHCN;
    public static final java.lang.String SYMBOL_JAPANESE;
    public static final java.lang.String SYMBOL_ENGLISH;
    public static final java.lang.String SYMBOL_CHINESE;
    public static final java.lang.String SYMBOL_JAPANESE_FACE;
    private static final java.lang.String XMLTAG_KEY;
    protected java.util.HashMap mSymbols;
    private jp.co.omronsoft.openwnn.OpenWnn mWnn;
    private java.util.ArrayList mCurrentList;
    private java.util.Iterator mCurrentListIterator;

    public void <init>(jp.co.omronsoft.openwnn.OpenWnn, int)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.OpenWnn r1;
        int i0;
        java.util.HashMap $r2, $r3, $r6, $r9, $r12, $r14, $r18, $r21, $r24, $r25;
        java.util.ArrayList $r4, $r8, $r10, $r13, $r16, $r20, $r23, $r27, $r29;
        java.lang.Object $r7, $r17, $r26;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.OpenWnn;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.OpenWnn mWnn> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols> = $r2;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r4 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)>(2130968621);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("e", $r4);

        $r6 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("e");

        $r8 = (java.util.ArrayList) $r7;

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList> = $r8;

        goto label4;

     label2:
        $r18 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r20 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)>(2130968620);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("j", $r20);

        $r21 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r23 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)>(2130968619);

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("j_face", $r23);

        $r24 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r27 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)>(2130968622);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("e", $r27);

        $r25 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r26 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("j");

        $r29 = (java.util.ArrayList) $r26;

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList> = $r29;

        goto label4;

     label3:
        $r9 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r10 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)>(2130968614);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c1", $r10);

        $r12 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r13 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)>(2130968622);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("e", $r13);

        $r14 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r17 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("c1");

        $r16 = (java.util.ArrayList) $r17;

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList> = $r16;

     label4:
        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList> = null;

        return;
    }

    private java.lang.String getXmlAttribute(android.content.res.XmlResourceParser, java.lang.String)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        android.content.res.XmlResourceParser r1;
        java.lang.String r2, $r4, $r5;
        int i0;
        jp.co.omronsoft.openwnn.OpenWnn $r3;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: android.content.res.XmlResourceParser;

        r2 := @parameter1: java.lang.String;

        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, r2, 0);

        if i0 != 0 goto label1;

        $r5 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        return $r5;

     label1:
        $r3 = r0.<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r4 = virtualinvoke $r3.<jp.co.omronsoft.openwnn.OpenWnn: java.lang.String getString(int)>(i0);

        return $r4;
    }

    private java.util.ArrayList getXmlfile(int)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r5;
        android.content.res.XmlResourceParser r2;
        java.lang.String r3, r4, $r8;
        jp.co.omronsoft.openwnn.OpenWnn $r6;
        android.content.res.Resources $r7;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r9;
        java.io.IOException $r10;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        i0 := @parameter0: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r7 = virtualinvoke $r6.<jp.co.omronsoft.openwnn.OpenWnn: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label1:
        $i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label3;

        if i1 != 2 goto label1;

        r3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r8 = "string";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        r4 = specialinvoke r0.<jp.co.omronsoft.openwnn.SymbolList: java.lang.String getXmlAttribute(android.content.res.XmlResourceParser,java.lang.String)>(r2, "value");

        if r4 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenWnn", "Ill-formatted keybaord resource file");

        goto label7;

     label6:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenWnn", "Unable to read keyboard resource file");

     label7:
        return r1;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
    }

    public boolean setDictionary(java.lang.String)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.HashMap mSymbols>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.ArrayList) $r3;

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList> = $r4;

        $r5 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList>;

        if $r5 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void init()
    {
        jp.co.omronsoft.openwnn.SymbolList r0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        return;
    }

    public void close()
    {
        jp.co.omronsoft.openwnn.SymbolList r0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        return;
    }

    public int predict(jp.co.omronsoft.openwnn.ComposingText, int, int)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.ComposingText r1;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.util.Iterator $r4;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.ComposingText;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList>;

        if $r2 != null goto label1;

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.Iterator mCurrentListIterator> = null;

        return 0;

     label1:
        $r3 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList mCurrentList>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

        r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.Iterator mCurrentListIterator> = $r4;

        return 1;
    }

    public int convert(jp.co.omronsoft.openwnn.ComposingText)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.ComposingText r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.ComposingText;

        return 0;
    }

    public int searchWords(java.lang.String)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        java.lang.String r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public int searchWords(jp.co.omronsoft.openwnn.WnnWord)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.WnnWord r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnWord;

        return 0;
    }

    public jp.co.omronsoft.openwnn.WnnWord getNextCandidate()
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        java.lang.String r1;
        jp.co.omronsoft.openwnn.WnnWord r2, $r7;
        java.util.Iterator $r3, $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        $r3 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.Iterator mCurrentListIterator>;

        if $r3 == null goto label1;

        $r4 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.Iterator mCurrentListIterator>;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = r0.<jp.co.omronsoft.openwnn.SymbolList: java.util.Iterator mCurrentListIterator>;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r6;

        $r7 = new jp.co.omronsoft.openwnn.WnnWord;

        specialinvoke $r7.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String)>(r1, r1);

        r2 = $r7;

        return r2;
    }

    public boolean learn(jp.co.omronsoft.openwnn.WnnWord)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.WnnWord r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnWord;

        return 0;
    }

    public int addWord(jp.co.omronsoft.openwnn.WnnWord)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.WnnWord r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnWord;

        return 0;
    }

    public boolean deleteWord(jp.co.omronsoft.openwnn.WnnWord)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        jp.co.omronsoft.openwnn.WnnWord r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnWord;

        return 0;
    }

    public void setPreferences(android.content.SharedPreferences)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        android.content.SharedPreferences r1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        r1 := @parameter0: android.content.SharedPreferences;

        return;
    }

    public void breakSequence()
    {
        jp.co.omronsoft.openwnn.SymbolList r0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        return;
    }

    public int makeCandidateListOf(int)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        int i0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean initializeDictionary(int)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        int i0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        i0 := @parameter0: int;

        return 1;
    }

    public boolean initializeDictionary(int, int)
    {
        jp.co.omronsoft.openwnn.SymbolList r0;
        int i0, i1;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 1;
    }

    public jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()
    {
        jp.co.omronsoft.openwnn.SymbolList r0;

        r0 := @this: jp.co.omronsoft.openwnn.SymbolList;

        return null;
    }

    public static void <clinit>()
    {
        <jp.co.omronsoft.openwnn.SymbolList: java.lang.String XMLTAG_KEY> = "string";

        <jp.co.omronsoft.openwnn.SymbolList: java.lang.String SYMBOL_JAPANESE_FACE> = "j_face";

        <jp.co.omronsoft.openwnn.SymbolList: java.lang.String SYMBOL_CHINESE> = "c1";

        <jp.co.omronsoft.openwnn.SymbolList: java.lang.String SYMBOL_ENGLISH> = "e";

        <jp.co.omronsoft.openwnn.SymbolList: java.lang.String SYMBOL_JAPANESE> = "j";

        <jp.co.omronsoft.openwnn.SymbolList: int LANG_ZHCN> = 2;

        <jp.co.omronsoft.openwnn.SymbolList: int LANG_JA> = 1;

        <jp.co.omronsoft.openwnn.SymbolList: int LANG_EN> = 0;

        return;
    }
}
