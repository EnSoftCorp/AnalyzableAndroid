class jp.co.omronsoft.openwnn.OpenWnnJAJP$2 extends android.os.Handler
{
    final jp.co.omronsoft.openwnn.OpenWnnJAJP this$0;

    void <init>(jp.co.omronsoft.openwnn.OpenWnnJAJP)
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$2 r0;
        jp.co.omronsoft.openwnn.OpenWnnJAJP r1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$2;

        r1 := @parameter0: jp.co.omronsoft.openwnn.OpenWnnJAJP;

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$2 r0;
        android.os.Message r1, $r20;
        jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP r2;
        android.view.View r3;
        int $i0;
        jp.co.omronsoft.openwnn.OpenWnnJAJP $r4, $r5, $r7, $r9, $r11, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r26;
        jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP $r6, $r15;
        jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN $r8, $r14;
        jp.co.omronsoft.openwnn.SymbolList $r10, $r12;
        jp.co.omronsoft.openwnn.JAJP.TutorialJAJP $r17, $r23, $r28;
        boolean $z0;
        jp.co.omronsoft.openwnn.InputViewManager $r21;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$2;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label4;
            default: goto label7;
        };

     label1:
        $r4 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: void access$100(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r4);

        goto label7;

     label2:
        $r18 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r17 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.JAJP.TutorialJAJP access$200(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r18);

        if $r17 != null goto label7;

        $r19 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $z0 = virtualinvoke $r19.<jp.co.omronsoft.openwnn.OpenWnnJAJP: boolean isInputViewShown()>();

        if $z0 == 0 goto label3;

        $r22 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r21 = $r22.<jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.InputViewManager mInputViewManager>;

        r2 = (jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP) $r21;

        r3 = virtualinvoke r2.<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: android.view.View getKeyboardView()>();

        $r24 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r23 = new jp.co.omronsoft.openwnn.JAJP.TutorialJAJP;

        $r25 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        specialinvoke $r23.<jp.co.omronsoft.openwnn.JAJP.TutorialJAJP: void <init>(jp.co.omronsoft.openwnn.OpenWnnJAJP,android.view.View,jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP)>($r25, r3, r2);

        staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.JAJP.TutorialJAJP access$202(jp.co.omronsoft.openwnn.OpenWnnJAJP,jp.co.omronsoft.openwnn.JAJP.TutorialJAJP)>($r24, $r23);

        $r26 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r28 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.JAJP.TutorialJAJP access$200(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r26);

        virtualinvoke $r28.<jp.co.omronsoft.openwnn.JAJP.TutorialJAJP: void start()>();

        goto label7;

     label3:
        $r20 = virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: boolean sendMessageDelayed(android.os.Message,long)>($r20, 100L);

        goto label7;

     label4:
        $r5 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r6 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP access$300(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r5);

        if $r6 == null goto label5;

        $r16 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r15 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP access$300(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r16);

        virtualinvoke $r15.<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: void close()>();

     label5:
        $r7 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r8 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN access$400(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r7);

        if $r8 == null goto label6;

        $r13 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r14 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN access$400(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r13);

        virtualinvoke $r14.<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: void close()>();

     label6:
        $r9 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r10 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.SymbolList access$500(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r9);

        if $r10 == null goto label7;

        $r11 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$2: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0>;

        $r12 = staticinvoke <jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.SymbolList access$500(jp.co.omronsoft.openwnn.OpenWnnJAJP)>($r11);

        virtualinvoke $r12.<jp.co.omronsoft.openwnn.SymbolList: void close()>();

     label7:
        return;
    }
}
