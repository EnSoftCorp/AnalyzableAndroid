class jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState extends java.lang.Object
{
    public static final int INVALID;
    public static final int DICTIONARYSET_JP;
    public static final int DICTIONARYSET_EN;
    public static final int CONVERT_TYPE_NONE;
    public static final int CONVERT_TYPE_RENBUN;
    public static final int CONVERT_TYPE_EISU_KANA;
    public static final int TEMPORARY_DICTIONARY_MODE_NONE;
    public static final int TEMPORARY_DICTIONARY_MODE_SYMBOL;
    public static final int TEMPORARY_DICTIONARY_MODE_USER;
    public static final int PREFERENCE_DICTIONARY_NONE;
    public static final int PREFERENCE_DICTIONARY_PERSON_NAME;
    public static final int PREFERENCE_DICTIONARY_POSTAL_ADDRESS;
    public static final int PREFERENCE_DICTIONARY_EMAIL_ADDRESS_URI;
    public static final int KEYBOARD_UNDEF;
    public static final int KEYBOARD_QWERTY;
    public static final int KEYBOARD_12KEY;
    public int dictionarySet;
    public int convertType;
    public int temporaryMode;
    public int preferenceDictionary;
    public int keyboard;
    final jp.co.omronsoft.openwnn.OpenWnnJAJP this$0;

    private void <init>(jp.co.omronsoft.openwnn.OpenWnnJAJP)
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        jp.co.omronsoft.openwnn.OpenWnnJAJP r1;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        r1 := @parameter0: jp.co.omronsoft.openwnn.OpenWnnJAJP;

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: jp.co.omronsoft.openwnn.OpenWnnJAJP this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int dictionarySet> = -1;

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int convertType> = -1;

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int temporaryMode> = -1;

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int preferenceDictionary> = -1;

        r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int keyboard> = -1;

        return;
    }

    public boolean isRenbun()
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        int $i0;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        $i0 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int convertType>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEisuKana()
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        int $i0;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        $i0 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int convertType>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isConvertState()
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        int $i0;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        $i0 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int convertType>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSymbolList()
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        int $i0;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        $i0 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int temporaryMode>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEnglish()
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        int $i0;
        boolean $z0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        $i0 = r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int dictionarySet>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void <init>(jp.co.omronsoft.openwnn.OpenWnnJAJP, jp.co.omronsoft.openwnn.OpenWnnJAJP$1)
    {
        jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState r0;
        jp.co.omronsoft.openwnn.OpenWnnJAJP r1;
        jp.co.omronsoft.openwnn.OpenWnnJAJP$1 r2;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState;

        r1 := @parameter0: jp.co.omronsoft.openwnn.OpenWnnJAJP;

        r2 := @parameter1: jp.co.omronsoft.openwnn.OpenWnnJAJP$1;

        specialinvoke r0.<jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: void <init>(jp.co.omronsoft.openwnn.OpenWnnJAJP)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int KEYBOARD_12KEY> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int KEYBOARD_QWERTY> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int KEYBOARD_UNDEF> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int PREFERENCE_DICTIONARY_EMAIL_ADDRESS_URI> = 3;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int PREFERENCE_DICTIONARY_POSTAL_ADDRESS> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int PREFERENCE_DICTIONARY_PERSON_NAME> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int PREFERENCE_DICTIONARY_NONE> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int TEMPORARY_DICTIONARY_MODE_USER> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int TEMPORARY_DICTIONARY_MODE_SYMBOL> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int TEMPORARY_DICTIONARY_MODE_NONE> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int CONVERT_TYPE_EISU_KANA> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int CONVERT_TYPE_RENBUN> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int CONVERT_TYPE_NONE> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int DICTIONARYSET_EN> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int DICTIONARYSET_JP> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnJAJP$EngineState: int INVALID> = -1;

        return;
    }
}
