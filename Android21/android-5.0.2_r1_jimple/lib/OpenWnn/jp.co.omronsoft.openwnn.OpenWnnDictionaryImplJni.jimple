public class jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni extends java.lang.Object
{
    public static final int APPROX_PATTERN_EN_TOUPPER;
    public static final int APPROX_PATTERN_EN_TOLOWER;
    public static final int APPROX_PATTERN_EN_QWERTY_NEAR;
    public static final int APPROX_PATTERN_EN_QWERTY_NEAR_UPPER;
    public static final int APPROX_PATTERN_JAJP_12KEY_NORMAL;
    public static final int SEARCH_EXACT;
    public static final int SEARCH_PREFIX;
    public static final int SEARCH_LINK;
    public static final int ORDER_BY_FREQUENCY;
    public static final int ORDER_BY_KEY;
    public static final int POS_TYPE_V1;
    public static final int POS_TYPE_V2;
    public static final int POS_TYPE_V3;
    public static final int POS_TYPE_BUNTOU;
    public static final int POS_TYPE_TANKANJI;
    public static final int POS_TYPE_SUUJI;
    public static final int POS_TYPE_MEISI;
    public static final int POS_TYPE_JINMEI;
    public static final int POS_TYPE_CHIMEI;
    public static final int POS_TYPE_KIGOU;

    public void <init>()
    {
        jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni r0;

        r0 := @this: jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final native long createWnnWork(java.lang.String);

    public static final native int freeWnnWork(long);

    public static final native int clearDictionaryParameters(long);

    public static final native int setDictionaryParameter(long, int, int, int);

    public static final native int searchWord(long, int, int, java.lang.String);

    public static final native int getNextWord(long, int);

    public static final native java.lang.String getStroke(long);

    public static final native java.lang.String getCandidate(long);

    public static final native int getFrequency(long);

    public static final native int getLeftPartOfSpeech(long);

    public static final native int getRightPartOfSpeech(long);

    public static final native void clearApproxPatterns(long);

    public static final native int setApproxPattern(long, java.lang.String, java.lang.String);

    public static final native int setApproxPattern(long, int);

    public static final native java.lang.String[] getApproxPattern(long, java.lang.String);

    public static final native void clearResult(long);

    public static final native int setLeftPartOfSpeech(long, int);

    public static final native int setRightPartOfSpeech(long, int);

    public static final native int setStroke(long, java.lang.String);

    public static final native int setCandidate(long, java.lang.String);

    public static final native int selectWord(long);

    public static final native byte[] getConnectArray(long, int);

    public static final native int getNumberOfLeftPOS(long);

    public static final native int getNumberOfRightPOS(long);

    public static final native int getLeftPartOfSpeechSpecifiedType(long, int);

    public static final native int getRightPartOfSpeechSpecifiedType(long, int);

    public static final native java.lang.String[] createBindArray(long, java.lang.String, int, int);

    public static final native java.lang.String createQueryStringBase(long, int, int, java.lang.String);

    public static void <clinit>()
    {
        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_KIGOU> = 9;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_CHIMEI> = 8;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_JINMEI> = 7;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_MEISI> = 6;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_SUUJI> = 5;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_TANKANJI> = 4;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_BUNTOU> = 3;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_V3> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_V2> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int POS_TYPE_V1> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int ORDER_BY_KEY> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int ORDER_BY_FREQUENCY> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int SEARCH_LINK> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int SEARCH_PREFIX> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int SEARCH_EXACT> = 0;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int APPROX_PATTERN_JAJP_12KEY_NORMAL> = 4;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int APPROX_PATTERN_EN_QWERTY_NEAR_UPPER> = 3;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int APPROX_PATTERN_EN_QWERTY_NEAR> = 2;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int APPROX_PATTERN_EN_TOLOWER> = 1;

        <jp.co.omronsoft.openwnn.OpenWnnDictionaryImplJni: int APPROX_PATTERN_EN_TOUPPER> = 0;

        return;
    }
}
