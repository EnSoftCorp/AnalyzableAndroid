public class jp.co.omronsoft.openwnn.JAJP.KanaConverter extends java.lang.Object
{
    private static final java.util.HashMap mHalfNumericMap;
    private static final java.util.HashMap mFullNumericMap;
    private static final java.util.HashMap mHalfKatakanaMap;
    private static final java.util.HashMap mFullKatakanaMap;
    private static final java.util.HashMap mHalfAlphabetMap;
    private static final java.util.HashMap mFullAlphabetMap;
    private static final java.util.HashMap mFullAlphabetMapQwety;
    private static final java.text.DecimalFormat mFormat;
    private java.util.List mAddCandidateList;
    private java.lang.StringBuffer mStringBuff;
    private jp.co.omronsoft.openwnn.WnnPOS mPosDefault;
    private jp.co.omronsoft.openwnn.WnnPOS mPosNumber;
    private jp.co.omronsoft.openwnn.WnnPOS mPosSymbol;

    public void <init>()
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        java.util.ArrayList $r1;
        java.lang.StringBuffer $r2;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.List mAddCandidateList> = $r1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff> = $r2;

        return;
    }

    public void setDictionary(jp.co.omronsoft.openwnn.WnnDictionary)
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        jp.co.omronsoft.openwnn.WnnDictionary r1;
        jp.co.omronsoft.openwnn.WnnPOS $r2, $r3, $r4;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        r1 := @parameter0: jp.co.omronsoft.openwnn.WnnDictionary;

        $r2 = interfaceinvoke r1.<jp.co.omronsoft.openwnn.WnnDictionary: jp.co.omronsoft.openwnn.WnnPOS getPOS(int)>(6);

        r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosDefault> = $r2;

        $r3 = interfaceinvoke r1.<jp.co.omronsoft.openwnn.WnnDictionary: jp.co.omronsoft.openwnn.WnnPOS getPOS(int)>(5);

        r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosNumber> = $r3;

        $r4 = interfaceinvoke r1.<jp.co.omronsoft.openwnn.WnnDictionary: jp.co.omronsoft.openwnn.WnnPOS getPOS(int)>(9);

        r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol> = $r4;

        return;
    }

    public java.util.List createPseudoCandidateList(java.lang.String, java.lang.String, int)
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        java.lang.String r1, r2, r4, r5, $r25, $r32, $r38, $r44, $r48, r53, r54, r55, r56;
        int i0, $i1;
        java.util.List r3;
        jp.co.omronsoft.openwnn.WnnWord $r6, $r21, $r22, $r24, $r30, $r33, $r34, $r36, $r40, $r42, $r46, $r51;
        java.lang.StringBuffer $r7, $r9, $r12, $r13, $r16, $r17, $r19, $r27, $r39, $r41, $r43, $r52;
        java.util.HashMap $r8, $r10, $r11, $r14, $r15, $r18;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Locale $r20;
        jp.co.omronsoft.openwnn.WnnPOS $r23, $r26, $r28, $r29, $r31, $r35, $r37, $r45, $r47, $r49, $r50;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.List mAddCandidateList>;

        interfaceinvoke r3.<java.util.List: void clear()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        return r3;

     label1:
        $r6 = new jp.co.omronsoft.openwnn.WnnWord;

        specialinvoke $r6.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String)>(r1, r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r8 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullKatakanaMap>;

        $r7 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z1 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r1, $r8, $r7);

        if $z1 == 0 goto label2;

        $r51 = new jp.co.omronsoft.openwnn.WnnWord;

        $r52 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $r48 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        $r49 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosDefault>;

        specialinvoke $r51.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r48, r1, $r49);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r51);

     label2:
        $r10 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mHalfKatakanaMap>;

        $r9 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z2 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r1, $r10, $r9);

        if $z2 == 0 goto label3;

        $r42 = new jp.co.omronsoft.openwnn.WnnWord;

        $r43 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        $r50 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosDefault>;

        specialinvoke $r42.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r44, r1, $r50);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r42);

     label3:
        if i0 != 2 goto label4;

        specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: void createPseudoCandidateListForQwerty(java.lang.String,java.lang.String)>(r1, r2);

        goto label8;

     label4:
        $r11 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mHalfNumericMap>;

        $r12 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z3 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r1, $r11, $r12);

        if $z3 == 0 goto label5;

        $r41 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        r4 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        r5 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.String convertNumber(java.lang.String)>(r4);

        $r40 = new jp.co.omronsoft.openwnn.WnnWord;

        $r45 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosNumber>;

        specialinvoke $r40.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r4, r1, $r45);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r40);

        if r5 == null goto label5;

        $r46 = new jp.co.omronsoft.openwnn.WnnWord;

        $r47 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosNumber>;

        specialinvoke $r46.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r5, r1, $r47);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r46);

     label5:
        $r14 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullNumericMap>;

        $r13 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z4 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r1, $r14, $r13);

        if $z4 == 0 goto label6;

        $r34 = new jp.co.omronsoft.openwnn.WnnWord;

        $r39 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $r38 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosNumber>;

        specialinvoke $r34.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r38, r1, $r37);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r34);

     label6:
        $r15 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mHalfAlphabetMap>;

        $r16 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z5 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r1, $r15, $r16);

        if $z5 == 0 goto label7;

        $r27 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        r53 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        r54 = virtualinvoke r53.<java.lang.String: java.lang.String toLowerCase()>();

        $r30 = new jp.co.omronsoft.openwnn.WnnWord;

        $r29 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r30.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r54, r1, $r29);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r30);

        $r33 = new jp.co.omronsoft.openwnn.WnnWord;

        $r32 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.String convertCaps(java.lang.String)>(r54);

        $r31 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r33.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r32, r1, $r31);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r33);

        $r36 = new jp.co.omronsoft.openwnn.WnnWord;

        $r35 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r36.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r53, r1, $r35);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r36);

     label7:
        $r18 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullAlphabetMap>;

        $r17 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z6 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r1, $r18, $r17);

        if $z6 == 0 goto label8;

        $r19 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        r55 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20 = <java.util.Locale: java.util.Locale JAPAN>;

        r56 = virtualinvoke r55.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r20);

        $r22 = new jp.co.omronsoft.openwnn.WnnWord;

        $r23 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r22.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r56, r1, $r23);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r21 = new jp.co.omronsoft.openwnn.WnnWord;

        $r25 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.String convertCaps(java.lang.String)>(r56);

        $r26 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r21.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r25, r1, $r26);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r24 = new jp.co.omronsoft.openwnn.WnnWord;

        $r28 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r24.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r55, r1, $r28);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r24);

     label8:
        return r3;
    }

    private void createPseudoCandidateListForQwerty(java.lang.String, java.lang.String)
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        java.lang.String r1, r2, r4, r5, r6, $r12, $r14, $r27, $r31;
        java.util.List r3;
        jp.co.omronsoft.openwnn.WnnWord $r7, $r9, $r11, $r15, $r21, $r23, $r24, $r26;
        jp.co.omronsoft.openwnn.WnnPOS $r8, $r10, $r13, $r16, $r22, $r25, $r28, $r29;
        java.util.HashMap $r17;
        java.lang.StringBuffer $r18, $r19;
        boolean $z4;
        java.util.Locale $r20, $r30;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.List mAddCandidateList>;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = new jp.co.omronsoft.openwnn.WnnWord;

        $r8 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosDefault>;

        specialinvoke $r7.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r2, r1, $r8);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = new jp.co.omronsoft.openwnn.WnnWord;

        $r10 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r9.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r4, r1, $r10);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r11 = new jp.co.omronsoft.openwnn.WnnWord;

        $r12 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.String convertCaps(java.lang.String)>(r4);

        $r13 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r11.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r12, r1, $r13);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r15 = new jp.co.omronsoft.openwnn.WnnWord;

        $r14 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r16 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r15.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r14, r1, $r16);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r17 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullAlphabetMapQwety>;

        $r18 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        $z4 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: boolean createCandidateString(java.lang.String,java.util.HashMap,java.lang.StringBuffer)>(r2, $r17, $r18);

        if $z4 == 0 goto label1;

        $r19 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.StringBuffer mStringBuff>;

        r5 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20 = <java.util.Locale: java.util.Locale JAPAN>;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r20);

        $r21 = new jp.co.omronsoft.openwnn.WnnWord;

        $r22 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r21.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r5, r1, $r22);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r24 = new jp.co.omronsoft.openwnn.WnnWord;

        $r25 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r24.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>(r6, r1, $r25);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r23 = new jp.co.omronsoft.openwnn.WnnWord;

        $r27 = specialinvoke r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.lang.String convertCaps(java.lang.String)>(r6);

        $r28 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r23.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r27, r1, $r28);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r26 = new jp.co.omronsoft.openwnn.WnnWord;

        $r30 = <java.util.Locale: java.util.Locale JAPAN>;

        $r31 = virtualinvoke r5.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r30);

        $r29 = r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter: jp.co.omronsoft.openwnn.WnnPOS mPosSymbol>;

        specialinvoke $r26.<jp.co.omronsoft.openwnn.WnnWord: void <init>(java.lang.String,java.lang.String,jp.co.omronsoft.openwnn.WnnPOS)>($r31, r1, $r29);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r26);

     label1:
        return;
    }

    private boolean createCandidateString(java.lang.String, java.util.HashMap, java.lang.StringBuffer)
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        java.lang.String r1, r4, $r5;
        java.util.HashMap r2;
        java.lang.StringBuffer r3;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r6;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.StringBuffer;

        $i1 = virtualinvoke r3.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label1;

        $i4 = virtualinvoke r3.<java.lang.StringBuffer: int length()>();

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i4);

     label1:
        i0 = 0;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i2 goto label4;

        $i3 = i0 + 1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);

        $r6 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r4 = (java.lang.String) $r6;

        if r4 != null goto label3;

        return 0;

     label3:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        i0 = i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    private java.lang.String convertCaps(java.lang.String)
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        java.lang.String r1, r2, $r4, $r6, $r8, $r10;
        int $i0;
        java.lang.StringBuilder $r3, $r7, $r11;
        java.util.Locale $r5, $r9;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        r1 := @parameter0: java.lang.String;

        r2 = "";

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r5 = <java.util.Locale: java.util.Locale JAPAN>;

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r9 = <java.util.Locale: java.util.Locale JAPAN>;

        $r10 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r2;
    }

    private java.lang.String convertNumber(java.lang.String)
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter r0;
        java.lang.String r1, $r4;
        java.text.DecimalFormat $r3;
        double $d0;
        java.lang.NumberFormatException $r5;

        r0 := @this: jp.co.omronsoft.openwnn.JAJP.KanaConverter;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.text.DecimalFormat mFormat>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$1 $r0;
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$2 $r1;
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$3 $r2;
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$4 $r3;
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$5 $r4;
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$6 $r5;
        jp.co.omronsoft.openwnn.JAJP.KanaConverter$7 $r6;
        java.text.DecimalFormat $r7;

        $r0 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$1;

        specialinvoke $r0.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$1: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mHalfNumericMap> = $r0;

        $r1 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$2;

        specialinvoke $r1.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$2: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullNumericMap> = $r1;

        $r2 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$3;

        specialinvoke $r2.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$3: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mHalfKatakanaMap> = $r2;

        $r3 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$4;

        specialinvoke $r3.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$4: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullKatakanaMap> = $r3;

        $r4 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$5;

        specialinvoke $r4.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$5: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mHalfAlphabetMap> = $r4;

        $r5 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$6;

        specialinvoke $r5.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$6: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullAlphabetMap> = $r5;

        $r6 = new jp.co.omronsoft.openwnn.JAJP.KanaConverter$7;

        specialinvoke $r6.<jp.co.omronsoft.openwnn.JAJP.KanaConverter$7: void <init>()>();

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.util.HashMap mFullAlphabetMapQwety> = $r6;

        $r7 = new java.text.DecimalFormat;

        specialinvoke $r7.<java.text.DecimalFormat: void <init>(java.lang.String)>("###,###");

        <jp.co.omronsoft.openwnn.JAJP.KanaConverter: java.text.DecimalFormat mFormat> = $r7;

        return;
    }
}
