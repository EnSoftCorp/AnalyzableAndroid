class jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 extends java.lang.Object implements jp.co.omronsoft.openwnn.KeyboardView$OnKeyboardActionListener
{
    final jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0;

    void <init>(jp.co.omronsoft.openwnn.DefaultSoftKeyboard)
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard r1;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        r1 := @parameter0: jp.co.omronsoft.openwnn.DefaultSoftKeyboard;

        r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onKey(int, int[])
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;
        int i0;
        int[] r1;
        android.view.inputmethod.InputConnection r2;
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard $r3, $r7, $r10, $r14;
        jp.co.omronsoft.openwnn.OpenWnnEvent $r4, $r8, $r11;
        android.view.KeyEvent $r5, $r15;
        jp.co.omronsoft.openwnn.OpenWnn $r6, $r9, $r12, $r13;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        tableswitch(i0)
        {
            case -303: goto label4;
            case -302: goto label3;
            case -301: goto label2;
            case -300: goto label1;
            default: goto label6;
        };

     label1:
        $r3 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        $r6 = $r3.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r4 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        $r5 = new android.view.KeyEvent;

        specialinvoke $r5.<android.view.KeyEvent: void <init>(int,int)>(0, 4);

        specialinvoke $r4.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(int,android.view.KeyEvent)>(-268435449, $r5);

        virtualinvoke $r6.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r4);

        goto label6;

     label2:
        $r7 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        $r9 = $r7.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r8 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r8.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(int)>(-268431360);

        virtualinvoke $r9.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r8);

        goto label6;

     label3:
        $r10 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        $r12 = $r10.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r11 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r11.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(int)>(-268431359);

        virtualinvoke $r12.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r11);

        goto label6;

     label4:
        $r14 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        $r13 = $r14.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        r2 = virtualinvoke $r13.<jp.co.omronsoft.openwnn.OpenWnn: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label5;

        $r15 = new android.view.KeyEvent;

        specialinvoke $r15.<android.view.KeyEvent: void <init>(int,int)>(0, 67);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r15);

     label5:
        return;

     label6:
        return;
    }

    public void onPress(int)
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;
        int i0;
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard $r1;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        i0 := @parameter0: int;

        $r1 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        staticinvoke <jp.co.omronsoft.openwnn.DefaultSoftKeyboard: void access$000(jp.co.omronsoft.openwnn.DefaultSoftKeyboard)>($r1);

        return;
    }

    public void onText(java.lang.CharSequence)
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;
        java.lang.CharSequence r1;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    public void swipeLeft()
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        return;
    }

    public void swipeRight()
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        return;
    }

    public void swipeUp()
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        return;
    }

    public void swipeDown()
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        return;
    }

    public void onRelease(int)
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;
        int i0;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        i0 := @parameter0: int;

        return;
    }

    public boolean onLongPress(jp.co.omronsoft.openwnn.Keyboard$Key)
    {
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1 r0;
        jp.co.omronsoft.openwnn.Keyboard$Key r1;
        int[] $r2;
        int $i0;
        jp.co.omronsoft.openwnn.DefaultSoftKeyboard $r3, $r6;
        jp.co.omronsoft.openwnn.OpenWnnEvent $r4, $r7;
        jp.co.omronsoft.openwnn.OpenWnn $r5, $r8;

        r0 := @this: jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1;

        r1 := @parameter0: jp.co.omronsoft.openwnn.Keyboard$Key;

        $r2 = r1.<jp.co.omronsoft.openwnn.Keyboard$Key: int[] codes>;

        $i0 = $r2[0];

        lookupswitch($i0)
        {
            case -302: goto label2;
            case -301: goto label1;
            default: goto label3;
        };

     label1:
        $r3 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        $r5 = $r3.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r4 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r4.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(int)>(-268431358);

        virtualinvoke $r5.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r4);

        return 1;

     label2:
        $r6 = r0.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard$1: jp.co.omronsoft.openwnn.DefaultSoftKeyboard this$0>;

        $r8 = $r6.<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.OpenWnn mWnn>;

        $r7 = new jp.co.omronsoft.openwnn.OpenWnnEvent;

        specialinvoke $r7.<jp.co.omronsoft.openwnn.OpenWnnEvent: void <init>(int)>(-268431357);

        virtualinvoke $r8.<jp.co.omronsoft.openwnn.OpenWnn: boolean onEvent(jp.co.omronsoft.openwnn.OpenWnnEvent)>($r7);

        return 1;

     label3:
        return 0;
    }
}
