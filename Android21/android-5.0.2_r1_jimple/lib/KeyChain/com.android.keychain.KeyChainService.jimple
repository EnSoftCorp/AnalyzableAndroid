public class com.android.keychain.KeyChainService extends android.app.IntentService
{
    private static final java.lang.String TAG;
    private static final java.lang.String DATABASE_NAME;
    private static final int DATABASE_VERSION;
    private static final java.lang.String TABLE_GRANTS;
    private static final java.lang.String GRANTS_ALIAS;
    private static final java.lang.String GRANTS_GRANTEE_UID;
    public com.android.keychain.KeyChainService$DatabaseHelper mDatabaseHelper;
    private static final java.lang.String SELECTION_COUNT_OF_MATCHING_GRANTS;
    private static final java.lang.String SELECT_GRANTS_BY_UID_AND_ALIAS;
    private static final java.lang.String SELECTION_GRANTS_BY_UID;
    private final android.security.IKeyChainService$Stub mIKeyChainService;

    public void <init>()
    {
        com.android.keychain.KeyChainService r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        com.android.keychain.KeyChainService$1 $r3;

        r0 := @this: com.android.keychain.KeyChainService;

        $r1 = class "com/android/keychain/KeyChainService";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke r0.<android.app.IntentService: void <init>(java.lang.String)>($r2);

        $r3 = new com.android.keychain.KeyChainService$1;

        specialinvoke $r3.<com.android.keychain.KeyChainService$1: void <init>(com.android.keychain.KeyChainService)>(r0);

        r0.<com.android.keychain.KeyChainService: android.security.IKeyChainService$Stub mIKeyChainService> = $r3;

        return;
    }

    public void onCreate()
    {
        com.android.keychain.KeyChainService r0;
        com.android.keychain.KeyChainService$DatabaseHelper $r1;

        r0 := @this: com.android.keychain.KeyChainService;

        specialinvoke r0.<android.app.IntentService: void onCreate()>();

        $r1 = new com.android.keychain.KeyChainService$DatabaseHelper;

        specialinvoke $r1.<com.android.keychain.KeyChainService$DatabaseHelper: void <init>(com.android.keychain.KeyChainService,android.content.Context)>(r0, r0);

        r0.<com.android.keychain.KeyChainService: com.android.keychain.KeyChainService$DatabaseHelper mDatabaseHelper> = $r1;

        return;
    }

    public void onDestroy()
    {
        com.android.keychain.KeyChainService r0;
        com.android.keychain.KeyChainService$DatabaseHelper $r1;

        r0 := @this: com.android.keychain.KeyChainService;

        specialinvoke r0.<android.app.IntentService: void onDestroy()>();

        $r1 = r0.<com.android.keychain.KeyChainService: com.android.keychain.KeyChainService$DatabaseHelper mDatabaseHelper>;

        virtualinvoke $r1.<com.android.keychain.KeyChainService$DatabaseHelper: void close()>();

        r0.<com.android.keychain.KeyChainService: com.android.keychain.KeyChainService$DatabaseHelper mDatabaseHelper> = null;

        return;
    }

    private boolean hasGrantInternal(android.database.sqlite.SQLiteDatabase, int, java.lang.String)
    {
        com.android.keychain.KeyChainService r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0;
        java.lang.String r2, $r4;
        long l1;
        java.lang.String[] $r3;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.keychain.KeyChainService;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = newarray (java.lang.String)[2];

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r3[0] = $r4;

        $r3[1] = r2;

        l1 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r1, "SELECT COUNT(*) FROM grants WHERE uid=? AND alias=?", $r3);

        $b2 = l1 cmp 0L;

        if $b2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setGrantInternal(android.database.sqlite.SQLiteDatabase, int, java.lang.String, boolean)
    {
        com.android.keychain.KeyChainService r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0;
        java.lang.String r2, $r5;
        boolean z0, $z1;
        android.content.ContentValues r3, $r6;
        java.lang.String[] $r4;
        java.lang.Integer $r7;

        r0 := @this: com.android.keychain.KeyChainService;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.keychain.KeyChainService: boolean hasGrantInternal(android.database.sqlite.SQLiteDatabase,int,java.lang.String)>(r1, i0, r2);

        if $z1 != 0 goto label2;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("alias", r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uid", $r7);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("grants", "alias", r3);

        goto label2;

     label1:
        $r4 = newarray (java.lang.String)[2];

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r4[0] = $r5;

        $r4[1] = r2;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("grants", "uid=? AND alias=?", $r4);

     label2:
        return;
    }

    private void removeAllGrants(android.database.sqlite.SQLiteDatabase)
    {
        com.android.keychain.KeyChainService r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.keychain.KeyChainService;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("grants", null, null);

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.keychain.KeyChainService r0;
        android.content.Intent r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        android.security.IKeyChainService$Stub $r5;

        r0 := @this: com.android.keychain.KeyChainService;

        r1 := @parameter0: android.content.Intent;

        $r2 = class "android/security/IKeyChainService";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.keychain.KeyChainService: android.security.IKeyChainService$Stub mIKeyChainService>;

        return $r5;

     label1:
        return null;
    }

    protected void onHandleIntent(android.content.Intent)
    {
        com.android.keychain.KeyChainService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.keychain.KeyChainService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.intent.action.PACKAGE_REMOVED";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.keychain.KeyChainService: void purgeOldGrants()>();

     label1:
        return;
    }

    private void purgeOldGrants()
    {
        com.android.keychain.KeyChainService r0;
        android.content.pm.PackageManager r1;
        android.database.sqlite.SQLiteDatabase r2;
        android.database.Cursor r3;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.Throwable r4, $r15;
        com.android.keychain.KeyChainService$DatabaseHelper $r5;
        java.lang.String[] $r6, $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12, $r14;

        r0 := @this: com.android.keychain.KeyChainService;

        r1 = virtualinvoke r0.<com.android.keychain.KeyChainService: android.content.pm.PackageManager getPackageManager()>();

        $r5 = r0.<com.android.keychain.KeyChainService: com.android.keychain.KeyChainService$DatabaseHelper mDatabaseHelper>;

        r2 = virtualinvoke $r5.<com.android.keychain.KeyChainService$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r3 = null;

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label01:
        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "uid";

        r3 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("grants", $r6, null, null, "uid", null, null);

     label02:
        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label06;

        i0 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(0);

        $r7 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if $r7 == null goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        if z0 == 0 goto label05;

        goto label02;

     label05:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting grants for UID ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because its package is no longer installed");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("KeyChain", $r12);

        $r13 = newarray (java.lang.String)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r13[0] = $r14;

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("grants", "uid=?", $r13);

        goto label02;

     label06:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label07:
        if r3 == null goto label08;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label08:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label12;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

     label10:
        if r3 == null goto label11;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label11:
        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void broadcastStorageChange()
    {
        com.android.keychain.KeyChainService r0;
        android.content.Intent r1, $r2;

        r0 := @this: com.android.keychain.KeyChainService;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.security.STORAGE_CHANGED");

        r1 = $r2;

        virtualinvoke r0.<com.android.keychain.KeyChainService: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }

    static boolean access$000(com.android.keychain.KeyChainService, android.database.sqlite.SQLiteDatabase, int, java.lang.String)
    {
        com.android.keychain.KeyChainService r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: com.android.keychain.KeyChainService;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.keychain.KeyChainService: boolean hasGrantInternal(android.database.sqlite.SQLiteDatabase,int,java.lang.String)>(r1, i0, r2);

        return $z0;
    }

    static void access$100(com.android.keychain.KeyChainService)
    {
        com.android.keychain.KeyChainService r0;

        r0 := @parameter0: com.android.keychain.KeyChainService;

        specialinvoke r0.<com.android.keychain.KeyChainService: void broadcastStorageChange()>();

        return;
    }

    static void access$200(com.android.keychain.KeyChainService, android.database.sqlite.SQLiteDatabase)
    {
        com.android.keychain.KeyChainService r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @parameter0: com.android.keychain.KeyChainService;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<com.android.keychain.KeyChainService: void removeAllGrants(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    static void access$300(com.android.keychain.KeyChainService, android.database.sqlite.SQLiteDatabase, int, java.lang.String, boolean)
    {
        com.android.keychain.KeyChainService r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0;
        java.lang.String r2;
        boolean z0;

        r0 := @parameter0: com.android.keychain.KeyChainService;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.keychain.KeyChainService: void setGrantInternal(android.database.sqlite.SQLiteDatabase,int,java.lang.String,boolean)>(r1, i0, r2, z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.keychain.KeyChainService: java.lang.String SELECTION_GRANTS_BY_UID> = "uid=?";

        <com.android.keychain.KeyChainService: java.lang.String SELECT_GRANTS_BY_UID_AND_ALIAS> = "uid=? AND alias=?";

        <com.android.keychain.KeyChainService: java.lang.String SELECTION_COUNT_OF_MATCHING_GRANTS> = "SELECT COUNT(*) FROM grants WHERE uid=? AND alias=?";

        <com.android.keychain.KeyChainService: java.lang.String GRANTS_GRANTEE_UID> = "uid";

        <com.android.keychain.KeyChainService: java.lang.String GRANTS_ALIAS> = "alias";

        <com.android.keychain.KeyChainService: java.lang.String TABLE_GRANTS> = "grants";

        <com.android.keychain.KeyChainService: int DATABASE_VERSION> = 1;

        <com.android.keychain.KeyChainService: java.lang.String DATABASE_NAME> = "grants.db";

        <com.android.keychain.KeyChainService: java.lang.String TAG> = "KeyChain";

        return;
    }
}
