class com.android.music.MediaPlaybackService$MultiPlayer extends java.lang.Object
{
    private com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer;
    private com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer;
    private android.os.Handler mHandler;
    private boolean mIsInitialized;
    android.media.MediaPlayer$OnCompletionListener listener;
    android.media.MediaPlayer$OnErrorListener errorListener;
    final com.android.music.MediaPlaybackService this$0;

    public void <init>(com.android.music.MediaPlaybackService)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService r1;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r2, $r5;
        com.android.music.MediaPlaybackService$MultiPlayer$1 $r3;
        com.android.music.MediaPlaybackService$MultiPlayer$2 $r4;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter0: com.android.music.MediaPlaybackService;

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.music.MediaPlaybackService$CompatMediaPlayer;

        specialinvoke $r2.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void <init>()>();

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer> = $r2;

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean mIsInitialized> = 0;

        $r3 = new com.android.music.MediaPlaybackService$MultiPlayer$1;

        specialinvoke $r3.<com.android.music.MediaPlaybackService$MultiPlayer$1: void <init>(com.android.music.MediaPlaybackService$MultiPlayer)>(r0);

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: android.media.MediaPlayer$OnCompletionListener listener> = $r3;

        $r4 = new com.android.music.MediaPlaybackService$MultiPlayer$2;

        specialinvoke $r4.<com.android.music.MediaPlaybackService$MultiPlayer$2: void <init>(com.android.music.MediaPlaybackService$MultiPlayer)>(r0);

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: android.media.MediaPlayer$OnErrorListener errorListener> = $r4;

        $r5 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r5.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setWakeMode(android.content.Context,int)>(r1, 1);

        return;
    }

    public void setDataSource(java.lang.String)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        java.lang.String r1;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        $z0 = specialinvoke r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean setDataSourceImpl(android.media.MediaPlayer,java.lang.String)>($r2, r1);

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean mIsInitialized> = $z0;

        $z1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean mIsInitialized>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.music.MediaPlaybackService$MultiPlayer: void setNextDataSource(java.lang.String)>(null);

     label1:
        return;
    }

    private boolean setDataSourceImpl(android.media.MediaPlayer, java.lang.String)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        android.media.MediaPlayer r1;
        java.lang.String r2, $r9;
        boolean $z0;
        android.media.MediaPlayer$OnCompletionListener $r4;
        android.media.MediaPlayer$OnErrorListener $r5;
        android.content.Intent $r6, r17;
        int $i0;
        com.android.music.MediaPlaybackService $r8, $r11, $r13;
        android.net.Uri $r12;
        java.io.IOException $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter0: android.media.MediaPlayer;

        r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r1.<android.media.MediaPlayer: void reset()>();

        virtualinvoke r1.<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>(null);

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("content://");

        if $z0 == 0 goto label2;

        $r13 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService this$0>;

        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        virtualinvoke r1.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>($r13, $r12);

        goto label3;

     label2:
        virtualinvoke r1.<android.media.MediaPlayer: void setDataSource(java.lang.String)>(r2);

     label3:
        virtualinvoke r1.<android.media.MediaPlayer: void setAudioStreamType(int)>(3);

        virtualinvoke r1.<android.media.MediaPlayer: void prepare()>();

     label4:
        goto label7;

     label5:
        $r14 := @caughtexception;

        return 0;

     label6:
        $r15 := @caughtexception;

        return 0;

     label7:
        $r4 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: android.media.MediaPlayer$OnCompletionListener listener>;

        virtualinvoke r1.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>($r4);

        $r5 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: android.media.MediaPlayer$OnErrorListener errorListener>;

        virtualinvoke r1.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>($r5);

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION");

        r17 = $r6;

        $i0 = virtualinvoke r0.<com.android.music.MediaPlaybackService$MultiPlayer: int getAudioSessionId()>();

        virtualinvoke r17.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.extra.AUDIO_SESSION", $i0);

        $r8 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService this$0>;

        $r9 = virtualinvoke $r8.<com.android.music.MediaPlaybackService: java.lang.String getPackageName()>();

        virtualinvoke r17.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.extra.PACKAGE_NAME", $r9);

        $r11 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService this$0>;

        virtualinvoke $r11.<com.android.music.MediaPlaybackService: void sendBroadcast(android.content.Intent)>(r17);

        return 1;

        catch java.io.IOException from label1 to label4 with label5;
        catch java.lang.IllegalArgumentException from label1 to label4 with label6;
    }

    public void setNextDataSource(java.lang.String)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        java.lang.String r1;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        com.android.music.MediaPlaybackService $r5;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r2.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>(null);

        $r3 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        if $r3 == null goto label1;

        $r12 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        virtualinvoke $r12.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void release()>();

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer> = null;

     label1:
        if r1 != null goto label2;

        return;

     label2:
        $r4 = new com.android.music.MediaPlaybackService$CompatMediaPlayer;

        specialinvoke $r4.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void <init>()>();

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer> = $r4;

        $r6 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        $r5 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService this$0>;

        virtualinvoke $r6.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setWakeMode(android.content.Context,int)>($r5, 1);

        $r7 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        $i0 = virtualinvoke r0.<com.android.music.MediaPlaybackService$MultiPlayer: int getAudioSessionId()>();

        virtualinvoke $r7.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setAudioSessionId(int)>($i0);

        $r8 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        $z0 = specialinvoke r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean setDataSourceImpl(android.media.MediaPlayer,java.lang.String)>($r8, r1);

        if $z0 == 0 goto label3;

        $r11 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        $r10 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        virtualinvoke $r11.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>($r10);

        goto label4;

     label3:
        $r9 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        virtualinvoke $r9.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void release()>();

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer> = null;

     label4:
        return;
    }

    public boolean isInitialized()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        boolean $z0;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $z0 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean mIsInitialized>;

        return $z0;
    }

    public void start()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        java.lang.Exception $r1;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r2;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = new java.lang.Exception;

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>("MultiPlayer.start called");

        staticinvoke <com.android.music.MusicUtils: void debugLog(java.lang.Object)>($r1);

        $r2 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r2.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void start()>();

        return;
    }

    public void stop()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void reset()>();

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean mIsInitialized> = 0;

        return;
    }

    public void release()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        virtualinvoke r0.<com.android.music.MediaPlaybackService$MultiPlayer: void stop()>();

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void release()>();

        return;
    }

    public void pause()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void pause()>();

        return;
    }

    public void setHandler(android.os.Handler)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        android.os.Handler r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter0: android.os.Handler;

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: android.os.Handler mHandler> = r1;

        return;
    }

    public long duration()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;
        int $i0;
        long $l1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        $i0 = virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: int getDuration()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public long position()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;
        int $i0;
        long $l1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        $i0 = virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: int getCurrentPosition()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public long seek(long)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        long l0;
        int $i1;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        $i1 = (int) l0;

        virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void seekTo(int)>($i1);

        return l0;
    }

    public void setVolume(float)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        float f0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setVolume(float,float)>(f0, f0);

        return;
    }

    public void setAudioSessionId(int)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        int i0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: void setAudioSessionId(int)>(i0);

        return;
    }

    public int getAudioSessionId()
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        $i0 = virtualinvoke $r1.<com.android.music.MediaPlaybackService$CompatMediaPlayer: int getAudioSessionId()>();

        return $i0;
    }

    static com.android.music.MediaPlaybackService$CompatMediaPlayer access$2400(com.android.music.MediaPlaybackService$MultiPlayer)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @parameter0: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer>;

        return $r1;
    }

    static com.android.music.MediaPlaybackService$CompatMediaPlayer access$2500(com.android.music.MediaPlaybackService$MultiPlayer)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer $r1;

        r0 := @parameter0: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer>;

        return $r1;
    }

    static com.android.music.MediaPlaybackService$CompatMediaPlayer access$2402(com.android.music.MediaPlaybackService$MultiPlayer, com.android.music.MediaPlaybackService$CompatMediaPlayer)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer r1;

        r0 := @parameter0: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter1: com.android.music.MediaPlaybackService$CompatMediaPlayer;

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mCurrentMediaPlayer> = r1;

        return r1;
    }

    static com.android.music.MediaPlaybackService$CompatMediaPlayer access$2502(com.android.music.MediaPlaybackService$MultiPlayer, com.android.music.MediaPlaybackService$CompatMediaPlayer)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        com.android.music.MediaPlaybackService$CompatMediaPlayer r1;

        r0 := @parameter0: com.android.music.MediaPlaybackService$MultiPlayer;

        r1 := @parameter1: com.android.music.MediaPlaybackService$CompatMediaPlayer;

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: com.android.music.MediaPlaybackService$CompatMediaPlayer mNextMediaPlayer> = r1;

        return r1;
    }

    static android.os.Handler access$2600(com.android.music.MediaPlaybackService$MultiPlayer)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.music.MediaPlaybackService$MultiPlayer;

        $r1 = r0.<com.android.music.MediaPlaybackService$MultiPlayer: android.os.Handler mHandler>;

        return $r1;
    }

    static boolean access$2702(com.android.music.MediaPlaybackService$MultiPlayer, boolean)
    {
        com.android.music.MediaPlaybackService$MultiPlayer r0;
        boolean z0;

        r0 := @parameter0: com.android.music.MediaPlaybackService$MultiPlayer;

        z0 := @parameter1: boolean;

        r0.<com.android.music.MediaPlaybackService$MultiPlayer: boolean mIsInitialized> = z0;

        return z0;
    }
}
