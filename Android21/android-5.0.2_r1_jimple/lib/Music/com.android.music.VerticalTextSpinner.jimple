public class com.android.music.VerticalTextSpinner extends android.view.View
{
    private static final int SELECTOR_ARROW_HEIGHT;
    private static int TEXT_SPACING;
    private static int TEXT_MARGIN_RIGHT;
    private static int TEXT_SIZE;
    private static int TEXT1_Y;
    private static int TEXT2_Y;
    private static int TEXT3_Y;
    private static int TEXT4_Y;
    private static int TEXT5_Y;
    private static int SCROLL_DISTANCE;
    private static final int SCROLL_MODE_NONE;
    private static final int SCROLL_MODE_UP;
    private static final int SCROLL_MODE_DOWN;
    private static final long DEFAULT_SCROLL_INTERVAL_MS;
    private static final int MIN_ANIMATIONS;
    private final android.graphics.drawable.Drawable mBackgroundFocused;
    private final android.graphics.drawable.Drawable mSelectorFocused;
    private final android.graphics.drawable.Drawable mSelectorNormal;
    private final int mSelectorDefaultY;
    private final int mSelectorMinY;
    private final int mSelectorMaxY;
    private final int mSelectorHeight;
    private final android.text.TextPaint mTextPaintDark;
    private final android.text.TextPaint mTextPaintLight;
    private int mSelectorY;
    private android.graphics.drawable.Drawable mSelector;
    private int mDownY;
    private boolean isDraggingSelector;
    private int mScrollMode;
    private long mScrollInterval;
    private boolean mIsAnimationRunning;
    private boolean mStopAnimation;
    private boolean mWrapAround;
    private int mTotalAnimatedDistance;
    private int mNumberOfAnimations;
    private long mDelayBetweenAnimations;
    private int mDistanceOfEachAnimation;
    private java.lang.String[] mTextList;
    private int mCurrentSelectedPos;
    private com.android.music.VerticalTextSpinner$OnChangedListener mListener;
    private java.lang.String mText1;
    private java.lang.String mText2;
    private java.lang.String mText3;
    private java.lang.String mText4;
    private java.lang.String mText5;

    public void <init>(android.content.Context)
    {
        com.android.music.VerticalTextSpinner r0;
        android.content.Context r1;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.music.VerticalTextSpinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.music.VerticalTextSpinner r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.content.res.Resources $r3, $r6, $r7, $r11, $r20, $r22;
        android.util.DisplayMetrics $r4;
        android.graphics.drawable.Drawable $r5, $r8, $r9, $r10, $r12, $r13, $r14;
        android.text.TextPaint $r15, $r16, $r17, $r18, $r19, $r21;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround> = 1;

        $r3 = virtualinvoke r0.<com.android.music.VerticalTextSpinner: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r4.<android.util.DisplayMetrics: float density>;

        $f1 = 18.0F * f0;

        $i1 = (int) $f1;

        <com.android.music.VerticalTextSpinner: int TEXT_SPACING> = $i1;

        $f2 = 25.0F * f0;

        $i2 = (int) $f2;

        <com.android.music.VerticalTextSpinner: int TEXT_MARGIN_RIGHT> = $i2;

        $f3 = 22.0F * f0;

        $i3 = (int) $f3;

        <com.android.music.VerticalTextSpinner: int TEXT_SIZE> = $i3;

        $i5 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $i4 = <com.android.music.VerticalTextSpinner: int TEXT_SPACING>;

        $i6 = $i5 + $i4;

        <com.android.music.VerticalTextSpinner: int SCROLL_DISTANCE> = $i6;

        $i8 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $i9 = $i8 * 0;

        $i7 = <com.android.music.VerticalTextSpinner: int TEXT_SPACING>;

        $i10 = $i7 * -1;

        $i12 = $i9 + $i10;

        <com.android.music.VerticalTextSpinner: int TEXT1_Y> = $i12;

        $i11 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $i16 = $i11 * 1;

        $i14 = <com.android.music.VerticalTextSpinner: int TEXT_SPACING>;

        $i13 = $i14 * 0;

        $i15 = $i16 + $i13;

        <com.android.music.VerticalTextSpinner: int TEXT2_Y> = $i15;

        $i18 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $i19 = $i18 * 2;

        $i17 = <com.android.music.VerticalTextSpinner: int TEXT_SPACING>;

        $i20 = $i17 * 1;

        $i22 = $i19 + $i20;

        <com.android.music.VerticalTextSpinner: int TEXT3_Y> = $i22;

        $i21 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $i23 = $i21 * 3;

        $i25 = <com.android.music.VerticalTextSpinner: int TEXT_SPACING>;

        $i26 = $i25 * 2;

        $i24 = $i23 + $i26;

        <com.android.music.VerticalTextSpinner: int TEXT4_Y> = $i24;

        $i29 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $i28 = $i29 * 4;

        $i30 = <com.android.music.VerticalTextSpinner: int TEXT_SPACING>;

        $i27 = $i30 * 3;

        $i31 = $i28 + $i27;

        <com.android.music.VerticalTextSpinner: int TEXT5_Y> = $i31;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r7.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837587);

        r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mBackgroundFocused> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r6.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837588);

        r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelectorFocused> = $r10;

        $r11 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r11.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837589);

        r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelectorNormal> = $r8;

        $r9 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelectorFocused>;

        $i34 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<com.android.music.VerticalTextSpinner: int mSelectorHeight> = $i34;

        $r12 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mBackgroundFocused>;

        $i33 = virtualinvoke $r12.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i32 = r0.<com.android.music.VerticalTextSpinner: int mSelectorHeight>;

        $i37 = $i33 - $i32;

        $i36 = $i37 / 2;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorDefaultY> = $i36;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorMinY> = 0;

        $r13 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mBackgroundFocused>;

        $i35 = virtualinvoke $r13.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i40 = r0.<com.android.music.VerticalTextSpinner: int mSelectorHeight>;

        $i39 = $i35 - $i40;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorMaxY> = $i39;

        $r14 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelectorNormal>;

        r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelector> = $r14;

        $i38 = r0.<com.android.music.VerticalTextSpinner: int mSelectorDefaultY>;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorY> = $i38;

        $r16 = new android.text.TextPaint;

        specialinvoke $r16.<android.text.TextPaint: void <init>(int)>(1);

        r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintDark> = $r16;

        $r15 = r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintDark>;

        $i41 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $f4 = (float) $i41;

        virtualinvoke $r15.<android.text.TextPaint: void setTextSize(float)>($f4);

        $r19 = r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintDark>;

        $r20 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i43 = virtualinvoke $r20.<android.content.res.Resources: int getColor(int)>(17170435);

        virtualinvoke $r19.<android.text.TextPaint: void setColor(int)>($i43);

        $r21 = new android.text.TextPaint;

        specialinvoke $r21.<android.text.TextPaint: void <init>(int)>(1);

        r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintLight> = $r21;

        $r17 = r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintLight>;

        $i42 = <com.android.music.VerticalTextSpinner: int TEXT_SIZE>;

        $f5 = (float) $i42;

        virtualinvoke $r17.<android.text.TextPaint: void setTextSize(float)>($f5);

        $r18 = r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintLight>;

        $r22 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i44 = virtualinvoke $r22.<android.content.res.Resources: int getColor(int)>(17170437);

        virtualinvoke $r18.<android.text.TextPaint: void setColor(int)>($i44);

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = 0;

        r0.<com.android.music.VerticalTextSpinner: long mScrollInterval> = 400L;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void calculateAnimationValues()>();

        return;
    }

    public void setOnChangeListener(com.android.music.VerticalTextSpinner$OnChangedListener)
    {
        com.android.music.VerticalTextSpinner r0;
        com.android.music.VerticalTextSpinner$OnChangedListener r1;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: com.android.music.VerticalTextSpinner$OnChangedListener;

        r0.<com.android.music.VerticalTextSpinner: com.android.music.VerticalTextSpinner$OnChangedListener mListener> = r1;

        return;
    }

    public void setItems(java.lang.String[])
    {
        com.android.music.VerticalTextSpinner r0;
        java.lang.String[] r1;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: java.lang.String[];

        r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList> = r1;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void calculateTextPositions()>();

        return;
    }

    public void setSelectedPos(int)
    {
        com.android.music.VerticalTextSpinner r0;
        int i0;

        r0 := @this: com.android.music.VerticalTextSpinner;

        i0 := @parameter0: int;

        r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos> = i0;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void calculateTextPositions()>();

        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void postInvalidate()>();

        return;
    }

    public void setScrollInterval(long)
    {
        com.android.music.VerticalTextSpinner r0;
        long l0;

        r0 := @this: com.android.music.VerticalTextSpinner;

        l0 := @parameter0: long;

        r0.<com.android.music.VerticalTextSpinner: long mScrollInterval> = l0;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void calculateAnimationValues()>();

        return;
    }

    public void setWrapAround(boolean)
    {
        com.android.music.VerticalTextSpinner r0;
        boolean z0;

        r0 := @this: com.android.music.VerticalTextSpinner;

        z0 := @parameter0: boolean;

        r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround> = z0;

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.music.VerticalTextSpinner r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.music.VerticalTextSpinner;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 19 goto label1;

        $z2 = specialinvoke r0.<com.android.music.VerticalTextSpinner: boolean canScrollDown()>();

        if $z2 == 0 goto label1;

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = 2;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void scroll()>();

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

        return 1;

     label1:
        if i0 != 20 goto label2;

        $z1 = specialinvoke r0.<com.android.music.VerticalTextSpinner: boolean canScrollUp()>();

        if $z1 == 0 goto label2;

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = 1;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void scroll()>();

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

        return 1;

     label2:
        $z0 = specialinvoke r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    private boolean canScrollDown()
    {
        com.android.music.VerticalTextSpinner r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.music.VerticalTextSpinner;

        $i0 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        if $i0 > 0 goto label1;

        $z0 = r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean canScrollUp()
    {
        com.android.music.VerticalTextSpinner r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: com.android.music.VerticalTextSpinner;

        $i2 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        $r1 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if $i2 < $i1 goto label1;

        $z0 = r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        com.android.music.VerticalTextSpinner r0;
        boolean z0;
        int i0, $i1;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4;

        r0 := @this: com.android.music.VerticalTextSpinner;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        if z0 == 0 goto label1;

        $r3 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mBackgroundFocused>;

        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r3);

        $r4 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelectorFocused>;

        r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelector> = $r4;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        $r2 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelectorNormal>;

        r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelector> = $r2;

        $i1 = r0.<com.android.music.VerticalTextSpinner: int mSelectorDefaultY>;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorY> = $i1;

     label2:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.music.VerticalTextSpinner r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        float $f0;
        android.graphics.drawable.Drawable $r2;
        boolean $z1, $z2, $z3, $z4;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label8;
            case 2: goto label4;
            case 3: goto label8;
            default: goto label8;
        };

     label1:
        virtualinvoke r0.<com.android.music.VerticalTextSpinner: boolean requestFocus()>();

        r0.<com.android.music.VerticalTextSpinner: int mDownY> = i1;

        $i3 = r0.<com.android.music.VerticalTextSpinner: int mSelectorY>;

        if i1 < $i3 goto label2;

        $i4 = r0.<com.android.music.VerticalTextSpinner: int mSelectorY>;

        $r2 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelector>;

        $i5 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i6 = $i4 + $i5;

        if i1 > $i6 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<com.android.music.VerticalTextSpinner: boolean isDraggingSelector> = $z1;

        goto label9;

     label4:
        $z2 = r0.<com.android.music.VerticalTextSpinner: boolean isDraggingSelector>;

        if $z2 == 0 goto label9;

        $i8 = r0.<com.android.music.VerticalTextSpinner: int mSelectorDefaultY>;

        $i7 = r0.<com.android.music.VerticalTextSpinner: int mDownY>;

        $i9 = i1 - $i7;

        i2 = $i8 + $i9;

        $i11 = r0.<com.android.music.VerticalTextSpinner: int mSelectorMinY>;

        if i2 > $i11 goto label5;

        $z4 = specialinvoke r0.<com.android.music.VerticalTextSpinner: boolean canScrollDown()>();

        if $z4 == 0 goto label5;

        $i15 = r0.<com.android.music.VerticalTextSpinner: int mSelectorMinY>;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorY> = $i15;

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 0;

        $i14 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        if $i14 == 2 goto label7;

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = 2;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void scroll()>();

        goto label7;

     label5:
        $i10 = r0.<com.android.music.VerticalTextSpinner: int mSelectorMaxY>;

        if i2 < $i10 goto label6;

        $z3 = specialinvoke r0.<com.android.music.VerticalTextSpinner: boolean canScrollUp()>();

        if $z3 == 0 goto label6;

        $i12 = r0.<com.android.music.VerticalTextSpinner: int mSelectorMaxY>;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorY> = $i12;

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 0;

        $i13 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        if $i13 == 1 goto label7;

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = 1;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void scroll()>();

        goto label7;

     label6:
        r0.<com.android.music.VerticalTextSpinner: int mSelectorY> = i2;

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

     label7:
        goto label9;

     label8:
        $i16 = r0.<com.android.music.VerticalTextSpinner: int mSelectorDefaultY>;

        r0.<com.android.music.VerticalTextSpinner: int mSelectorY> = $i16;

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void invalidate()>();

     label9:
        return 1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.music.VerticalTextSpinner r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, i66, i67, i68, i69, i70;
        android.text.TextPaint r2, r8;
        java.lang.String r3, r4, r5, r6, r7, $r12, $r14, $r15;
        android.graphics.drawable.Drawable $r9, $r10;
        boolean $z4, $z5, $z6, $z7, $z8, $z10;
        java.lang.String[] $r11, $r13, $r16, $r18, $r22;
        long $l16, $l22;
        byte $b17;
        com.android.music.VerticalTextSpinner$OnChangedListener $r17, $r19, $r20, $r21;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = r0.<com.android.music.VerticalTextSpinner: int mSelectorY>;

        i1 = virtualinvoke r0.<com.android.music.VerticalTextSpinner: int getWidth()>();

        $i8 = r0.<com.android.music.VerticalTextSpinner: int mSelectorY>;

        $i9 = r0.<com.android.music.VerticalTextSpinner: int mSelectorHeight>;

        i2 = $i8 + $i9;

        $r10 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, i0, i1, i2);

        $r9 = r0.<com.android.music.VerticalTextSpinner: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        $r11 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        if $r11 != null goto label01;

        return;

     label01:
        r2 = r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintDark>;

        $z4 = virtualinvoke r0.<com.android.music.VerticalTextSpinner: boolean hasFocus()>();

        if $z4 == 0 goto label02;

        i3 = i1;

        i4 = i0 + 15;

        r3 = r0.<com.android.music.VerticalTextSpinner: java.lang.String mText1>;

        r4 = r0.<com.android.music.VerticalTextSpinner: java.lang.String mText2>;

        r5 = r0.<com.android.music.VerticalTextSpinner: java.lang.String mText3>;

        r6 = r0.<com.android.music.VerticalTextSpinner: java.lang.String mText4>;

        r7 = r0.<com.android.music.VerticalTextSpinner: java.lang.String mText5>;

        r8 = r0.<com.android.music.VerticalTextSpinner: android.text.TextPaint mTextPaintLight>;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, 0, i3, i4);

        $i40 = <com.android.music.VerticalTextSpinner: int TEXT1_Y>;

        $i39 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i41 = $i40 + $i39;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r3, $i41, r8);

        $i35 = <com.android.music.VerticalTextSpinner: int TEXT2_Y>;

        $i42 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i36 = $i35 + $i42;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r4, $i36, r8);

        $i38 = <com.android.music.VerticalTextSpinner: int TEXT3_Y>;

        $i37 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i47 = $i38 + $i37;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r5, $i47, r8);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i48 = i0 + 15;

        $i49 = i2 - 15;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, $i48, i1, $i49);

        $i45 = <com.android.music.VerticalTextSpinner: int TEXT2_Y>;

        $i43 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i44 = $i45 + $i43;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r4, $i44, r2);

        $i53 = <com.android.music.VerticalTextSpinner: int TEXT3_Y>;

        $i54 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i56 = $i53 + $i54;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r5, $i56, r2);

        $i51 = <com.android.music.VerticalTextSpinner: int TEXT4_Y>;

        $i55 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i50 = $i51 + $i55;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r6, $i50, r2);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        i6 = i2 - 15;

        i5 = i1;

        i7 = virtualinvoke r0.<com.android.music.VerticalTextSpinner: int getMeasuredHeight()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, i6, i5, i7);

        $i61 = <com.android.music.VerticalTextSpinner: int TEXT3_Y>;

        $i63 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i62 = $i61 + $i63;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r5, $i62, r8);

        $i60 = <com.android.music.VerticalTextSpinner: int TEXT4_Y>;

        $i59 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i57 = $i60 + $i59;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r6, $i57, r8);

        $i64 = <com.android.music.VerticalTextSpinner: int TEXT5_Y>;

        $i58 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i65 = $i64 + $i58;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, r7, $i65, r8);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label03;

     label02:
        $r12 = r0.<com.android.music.VerticalTextSpinner: java.lang.String mText3>;

        $i10 = <com.android.music.VerticalTextSpinner: int TEXT3_Y>;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint)>(r1, $r12, $i10, r2);

     label03:
        $z5 = r0.<com.android.music.VerticalTextSpinner: boolean mIsAnimationRunning>;

        if $z5 == 0 goto label17;

        $i11 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i14 = staticinvoke <java.lang.Math: int abs(int)>($i11);

        $i15 = r0.<com.android.music.VerticalTextSpinner: int mDistanceOfEachAnimation>;

        $i13 = $i14 + $i15;

        $i12 = <com.android.music.VerticalTextSpinner: int SCROLL_DISTANCE>;

        if $i13 <= $i12 goto label13;

        r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance> = 0;

        $i25 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        if $i25 != 1 goto label07;

        i66 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        i67 = specialinvoke r0.<com.android.music.VerticalTextSpinner: int getNewIndex(int)>(1);

        if i67 < 0 goto label04;

        r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos> = i67;

        $r21 = r0.<com.android.music.VerticalTextSpinner: com.android.music.VerticalTextSpinner$OnChangedListener mListener>;

        if $r21 == null goto label04;

        $r20 = r0.<com.android.music.VerticalTextSpinner: com.android.music.VerticalTextSpinner$OnChangedListener mListener>;

        $i32 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        $r22 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        interfaceinvoke $r20.<com.android.music.VerticalTextSpinner$OnChangedListener: void onChanged(com.android.music.VerticalTextSpinner,int,int,java.lang.String[])>(r0, i66, $i32, $r22);

     label04:
        if i67 < 0 goto label05;

        $r18 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $i31 = lengthof $r18;

        $i34 = $i31 - 1;

        if i67 < $i34 goto label06;

        $z10 = r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround>;

        if $z10 != 0 goto label06;

     label05:
        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

     label06:
        specialinvoke r0.<com.android.music.VerticalTextSpinner: void calculateTextPositions()>();

        goto label11;

     label07:
        $i29 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        if $i29 != 2 goto label11;

        i68 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        i69 = specialinvoke r0.<com.android.music.VerticalTextSpinner: int getNewIndex(int)>(-1);

        if i69 < 0 goto label08;

        r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos> = i69;

        $r17 = r0.<com.android.music.VerticalTextSpinner: com.android.music.VerticalTextSpinner$OnChangedListener mListener>;

        if $r17 == null goto label08;

        $r19 = r0.<com.android.music.VerticalTextSpinner: com.android.music.VerticalTextSpinner$OnChangedListener mListener>;

        $i30 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        $r16 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        interfaceinvoke $r19.<com.android.music.VerticalTextSpinner$OnChangedListener: void onChanged(com.android.music.VerticalTextSpinner,int,int,java.lang.String[])>(r0, i68, $i30, $r16);

     label08:
        if i69 < 0 goto label09;

        if i69 != 0 goto label10;

        $z8 = r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround>;

        if $z8 != 0 goto label10;

     label09:
        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

     label10:
        specialinvoke r0.<com.android.music.VerticalTextSpinner: void calculateTextPositions()>();

     label11:
        $z6 = r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation>;

        if $z6 == 0 goto label15;

        i70 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        r0.<com.android.music.VerticalTextSpinner: boolean mIsAnimationRunning> = 0;

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 0;

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = 0;

        $r14 = "";

        $r13 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $i28 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        $r15 = $r13[$i28];

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z7 == 0 goto label12;

        r0.<com.android.music.VerticalTextSpinner: int mScrollMode> = i70;

        specialinvoke r0.<com.android.music.VerticalTextSpinner: void scroll()>();

        r0.<com.android.music.VerticalTextSpinner: boolean mStopAnimation> = 1;

     label12:
        goto label15;

     label13:
        $i18 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        if $i18 != 1 goto label14;

        $i27 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i26 = r0.<com.android.music.VerticalTextSpinner: int mDistanceOfEachAnimation>;

        $i24 = $i27 - $i26;

        r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance> = $i24;

        goto label15;

     label14:
        $i19 = r0.<com.android.music.VerticalTextSpinner: int mScrollMode>;

        if $i19 != 2 goto label15;

        $i20 = r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance>;

        $i23 = r0.<com.android.music.VerticalTextSpinner: int mDistanceOfEachAnimation>;

        $i21 = $i20 + $i23;

        r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance> = $i21;

     label15:
        $l16 = r0.<com.android.music.VerticalTextSpinner: long mDelayBetweenAnimations>;

        $b17 = $l16 cmp 0L;

        if $b17 <= 0 goto label16;

        $l22 = r0.<com.android.music.VerticalTextSpinner: long mDelayBetweenAnimations>;

        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void postInvalidateDelayed(long)>($l22);

        goto label17;

     label16:
        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void invalidate()>();

     label17:
        return;
    }

    private void calculateTextPositions()
    {
        com.android.music.VerticalTextSpinner r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.music.VerticalTextSpinner;

        $r1 = specialinvoke r0.<com.android.music.VerticalTextSpinner: java.lang.String getTextToDraw(int)>(-2);

        r0.<com.android.music.VerticalTextSpinner: java.lang.String mText1> = $r1;

        $r2 = specialinvoke r0.<com.android.music.VerticalTextSpinner: java.lang.String getTextToDraw(int)>(-1);

        r0.<com.android.music.VerticalTextSpinner: java.lang.String mText2> = $r2;

        $r3 = specialinvoke r0.<com.android.music.VerticalTextSpinner: java.lang.String getTextToDraw(int)>(0);

        r0.<com.android.music.VerticalTextSpinner: java.lang.String mText3> = $r3;

        $r4 = specialinvoke r0.<com.android.music.VerticalTextSpinner: java.lang.String getTextToDraw(int)>(1);

        r0.<com.android.music.VerticalTextSpinner: java.lang.String mText4> = $r4;

        $r5 = specialinvoke r0.<com.android.music.VerticalTextSpinner: java.lang.String getTextToDraw(int)>(2);

        r0.<com.android.music.VerticalTextSpinner: java.lang.String mText5> = $r5;

        return;
    }

    private java.lang.String getTextToDraw(int)
    {
        com.android.music.VerticalTextSpinner r0;
        int i0, i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.music.VerticalTextSpinner;

        i0 := @parameter0: int;

        i1 = specialinvoke r0.<com.android.music.VerticalTextSpinner: int getNewIndex(int)>(i0);

        if i1 >= 0 goto label1;

        return "";

     label1:
        $r1 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $r2 = $r1[i1];

        return $r2;
    }

    private int getNewIndex(int)
    {
        com.android.music.VerticalTextSpinner r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String[] $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.music.VerticalTextSpinner;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        i1 = $i2 + i0;

        if i1 >= 0 goto label2;

        $z1 = r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround>;

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $i5 = lengthof $r3;

        i1 = i1 + $i5;

        goto label4;

     label1:
        return -1;

     label2:
        $r1 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $i3 = lengthof $r1;

        if i1 < $i3 goto label4;

        $z0 = r0.<com.android.music.VerticalTextSpinner: boolean mWrapAround>;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.music.VerticalTextSpinner: java.lang.String[] mTextList>;

        $i4 = lengthof $r2;

        i1 = i1 - $i4;

        goto label4;

     label3:
        return -1;

     label4:
        return i1;
    }

    private void scroll()
    {
        com.android.music.VerticalTextSpinner r0;
        boolean $z0;

        r0 := @this: com.android.music.VerticalTextSpinner;

        $z0 = r0.<com.android.music.VerticalTextSpinner: boolean mIsAnimationRunning>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.music.VerticalTextSpinner: int mTotalAnimatedDistance> = 0;

        r0.<com.android.music.VerticalTextSpinner: boolean mIsAnimationRunning> = 1;

        virtualinvoke r0.<com.android.music.VerticalTextSpinner: void invalidate()>();

        return;
    }

    private void calculateAnimationValues()
    {
        com.android.music.VerticalTextSpinner r0;
        long $l0, $l9, $l10, $l11;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14;

        r0 := @this: com.android.music.VerticalTextSpinner;

        $l0 = r0.<com.android.music.VerticalTextSpinner: long mScrollInterval>;

        $i2 = (int) $l0;

        $i1 = <com.android.music.VerticalTextSpinner: int SCROLL_DISTANCE>;

        $i3 = $i2 / $i1;

        r0.<com.android.music.VerticalTextSpinner: int mNumberOfAnimations> = $i3;

        $i4 = r0.<com.android.music.VerticalTextSpinner: int mNumberOfAnimations>;

        if $i4 >= 4 goto label1;

        r0.<com.android.music.VerticalTextSpinner: int mNumberOfAnimations> = 4;

        $i13 = <com.android.music.VerticalTextSpinner: int SCROLL_DISTANCE>;

        $i12 = r0.<com.android.music.VerticalTextSpinner: int mNumberOfAnimations>;

        $i14 = $i13 / $i12;

        r0.<com.android.music.VerticalTextSpinner: int mDistanceOfEachAnimation> = $i14;

        r0.<com.android.music.VerticalTextSpinner: long mDelayBetweenAnimations> = 0L;

        goto label2;

     label1:
        $i6 = <com.android.music.VerticalTextSpinner: int SCROLL_DISTANCE>;

        $i5 = r0.<com.android.music.VerticalTextSpinner: int mNumberOfAnimations>;

        $i7 = $i6 / $i5;

        r0.<com.android.music.VerticalTextSpinner: int mDistanceOfEachAnimation> = $i7;

        $l10 = r0.<com.android.music.VerticalTextSpinner: long mScrollInterval>;

        $i8 = r0.<com.android.music.VerticalTextSpinner: int mNumberOfAnimations>;

        $l9 = (long) $i8;

        $l11 = $l10 / $l9;

        r0.<com.android.music.VerticalTextSpinner: long mDelayBetweenAnimations> = $l11;

     label2:
        return;
    }

    private void drawText(android.graphics.Canvas, java.lang.String, int, android.text.TextPaint)
    {
        com.android.music.VerticalTextSpinner r0;
        android.graphics.Canvas r1;
        java.lang.String r2;
        int i0, i1, i2, $i3, $i4, $i5;
        android.text.TextPaint r3;
        float $f0, $f1, $f2;

        r0 := @this: com.android.music.VerticalTextSpinner;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.TextPaint;

        $f0 = virtualinvoke r3.<android.text.TextPaint: float measureText(java.lang.String)>(r2);

        i1 = (int) $f0;

        $i3 = virtualinvoke r0.<com.android.music.VerticalTextSpinner: int getMeasuredWidth()>();

        $i5 = $i3 - i1;

        $i4 = <com.android.music.VerticalTextSpinner: int TEXT_MARGIN_RIGHT>;

        i2 = $i5 - $i4;

        $f2 = (float) i2;

        $f1 = (float) i0;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r2, $f2, $f1, r3);

        return;
    }

    public int getCurrentSelectedPos()
    {
        com.android.music.VerticalTextSpinner r0;
        int $i0;

        r0 := @this: com.android.music.VerticalTextSpinner;

        $i0 = r0.<com.android.music.VerticalTextSpinner: int mCurrentSelectedPos>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.music.VerticalTextSpinner: int MIN_ANIMATIONS> = 4;

        <com.android.music.VerticalTextSpinner: long DEFAULT_SCROLL_INTERVAL_MS> = 400L;

        <com.android.music.VerticalTextSpinner: int SCROLL_MODE_DOWN> = 2;

        <com.android.music.VerticalTextSpinner: int SCROLL_MODE_UP> = 1;

        <com.android.music.VerticalTextSpinner: int SCROLL_MODE_NONE> = 0;

        <com.android.music.VerticalTextSpinner: int SELECTOR_ARROW_HEIGHT> = 15;

        return;
    }
}
