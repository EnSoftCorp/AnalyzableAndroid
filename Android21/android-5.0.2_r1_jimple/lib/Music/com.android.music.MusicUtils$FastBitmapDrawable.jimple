class com.android.music.MusicUtils$FastBitmapDrawable extends android.graphics.drawable.Drawable
{
    private android.graphics.Bitmap mBitmap;

    public void <init>(android.graphics.Bitmap)
    {
        com.android.music.MusicUtils$FastBitmapDrawable r0;
        android.graphics.Bitmap r1;

        r0 := @this: com.android.music.MusicUtils$FastBitmapDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.android.music.MusicUtils$FastBitmapDrawable: android.graphics.Bitmap mBitmap> = r1;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.music.MusicUtils$FastBitmapDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.music.MusicUtils$FastBitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.android.music.MusicUtils$FastBitmapDrawable: android.graphics.Bitmap mBitmap>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, 0.0F, 0.0F, null);

        return;
    }

    public int getOpacity()
    {
        com.android.music.MusicUtils$FastBitmapDrawable r0;

        r0 := @this: com.android.music.MusicUtils$FastBitmapDrawable;

        return -1;
    }

    public void setAlpha(int)
    {
        com.android.music.MusicUtils$FastBitmapDrawable r0;
        int i0;

        r0 := @this: com.android.music.MusicUtils$FastBitmapDrawable;

        i0 := @parameter0: int;

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.music.MusicUtils$FastBitmapDrawable r0;
        android.graphics.ColorFilter r1;

        r0 := @this: com.android.music.MusicUtils$FastBitmapDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        return;
    }
}
