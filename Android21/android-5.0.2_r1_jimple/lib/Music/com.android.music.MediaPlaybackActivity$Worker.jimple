class com.android.music.MediaPlaybackActivity$Worker extends java.lang.Object implements java.lang.Runnable
{
    private final java.lang.Object mLock;
    private android.os.Looper mLooper;

    void <init>(java.lang.String)
    {
        com.android.music.MediaPlaybackActivity$Worker r0;
        java.lang.String r1;
        java.lang.Thread r2, $r7;
        java.lang.Object r3, $r6, $r8, $r10;
        java.lang.Throwable r5, $r12;
        android.os.Looper $r9;
        java.lang.InterruptedException $r11;

        r0 := @this: com.android.music.MediaPlaybackActivity$Worker;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.music.MediaPlaybackActivity$Worker: java.lang.Object mLock> = $r6;

        $r7 = new java.lang.Thread;

        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>(null, r0, r1);

        r2 = $r7;

        virtualinvoke r2.<java.lang.Thread: void setPriority(int)>(1);

        virtualinvoke r2.<java.lang.Thread: void start()>();

        $r8 = r0.<com.android.music.MediaPlaybackActivity$Worker: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label1:
        $r9 = r0.<com.android.music.MediaPlaybackActivity$Worker: android.os.Looper mLooper>;

        if $r9 != null goto label5;

     label2:
        $r10 = r0.<com.android.music.MediaPlaybackActivity$Worker: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void wait()>();

     label3:
        goto label1;

     label4:
        $r11 := @caughtexception;

        goto label1;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.os.Looper getLooper()
    {
        com.android.music.MediaPlaybackActivity$Worker r0;
        android.os.Looper $r1;

        r0 := @this: com.android.music.MediaPlaybackActivity$Worker;

        $r1 = r0.<com.android.music.MediaPlaybackActivity$Worker: android.os.Looper mLooper>;

        return $r1;
    }

    public void run()
    {
        com.android.music.MediaPlaybackActivity$Worker r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        android.os.Looper $r4;

        r0 := @this: com.android.music.MediaPlaybackActivity$Worker;

        $r3 = r0.<com.android.music.MediaPlaybackActivity$Worker: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        staticinvoke <android.os.Looper: void prepare()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<com.android.music.MediaPlaybackActivity$Worker: android.os.Looper mLooper> = $r4;

        $r5 = r0.<com.android.music.MediaPlaybackActivity$Worker: java.lang.Object mLock>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        staticinvoke <android.os.Looper: void loop()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void quit()
    {
        com.android.music.MediaPlaybackActivity$Worker r0;
        android.os.Looper $r1;

        r0 := @this: com.android.music.MediaPlaybackActivity$Worker;

        $r1 = r0.<com.android.music.MediaPlaybackActivity$Worker: android.os.Looper mLooper>;

        virtualinvoke $r1.<android.os.Looper: void quit()>();

        return;
    }
}
