public class com.android.music.MusicUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static com.android.music.IMediaPlaybackService sService;
    private static java.util.HashMap sConnectionMap;
    private static final long[] sEmptyList;
    private static android.content.ContentValues[] sContentValuesCache;
    private static java.lang.String mLastSdStatus;
    private static java.lang.StringBuilder sFormatBuilder;
    private static java.util.Formatter sFormatter;
    private static final java.lang.Object[] sTimeArgs;
    private static int sArtId;
    private static android.graphics.Bitmap mCachedBit;
    private static final android.graphics.BitmapFactory$Options sBitmapOptionsCache;
    private static final android.graphics.BitmapFactory$Options sBitmapOptions;
    private static final android.net.Uri sArtworkUri;
    private static final java.util.HashMap sArtCache;
    private static int sArtCacheId;
    private static final java.lang.String sExternalMediaUri;
    static int sActiveTabIndex;
    private static com.android.music.MusicUtils$LogEntry[] sMusicLog;
    private static int sLogPtr;
    private static android.text.format.Time sTime;

    public void <init>()
    {
        com.android.music.MusicUtils r0;

        r0 := @this: com.android.music.MusicUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String makeAlbumsLabel(android.content.Context, int, int, boolean)
    {
        android.content.Context r0;
        int i0, i1;
        boolean z0;
        java.lang.StringBuilder r1, $r4, $r6, $r10, $r18, $r23;
        android.content.res.Resources r2;
        java.lang.String r3, $r12, $r14, $r24, r26;
        java.lang.CharSequence $r5, $r16;
        java.lang.Object[] $r7, $r17;
        java.util.Formatter $r8, $r19;
        java.lang.Integer $r9, $r21;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label2;

        if i1 != 1 goto label1;

        $r24 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131165184);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        goto label3;

     label1:
        $r16 = virtualinvoke r2.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131230720, i1);

        r3 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();

        $r18 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke $r18.<java.lang.StringBuilder: void setLength(int)>(0);

        $r19 = <com.android.music.MusicUtils: java.util.Formatter sFormatter>;

        $r17 = newarray (java.lang.Object)[1];

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r17[0] = $r21;

        virtualinvoke $r19.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r3, $r17);

        $r23 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r23);

        goto label3;

     label2:
        $r5 = virtualinvoke r2.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131230722, i0);

        r26 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke $r6.<java.lang.StringBuilder: void setLength(int)>(0);

        $r8 = <com.android.music.MusicUtils: java.util.Formatter sFormatter>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r9;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r26, $r7);

        $r10 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r10);

        $r12 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131165291);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label3:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public static java.lang.String makeAlbumsSongsLabel(android.content.Context, int, int, boolean)
    {
        android.content.Context r0;
        int i0, i1;
        boolean z0;
        java.lang.StringBuilder r1, $r4, $r6, $r10, $r16, $r21;
        android.content.res.Resources r2;
        java.lang.String r3, $r12, $r23, $r24, r26;
        java.lang.CharSequence $r5, $r14;
        java.lang.Object[] $r7, $r15;
        java.util.Formatter $r8, $r17;
        java.lang.Integer $r9, $r19;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        if i1 != 1 goto label1;

        $r24 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131165184);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        goto label3;

     label1:
        r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 != 0 goto label2;

        $r14 = virtualinvoke r2.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131230722, i0);

        r3 = interfaceinvoke $r14.<java.lang.CharSequence: java.lang.String toString()>();

        $r16 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke $r16.<java.lang.StringBuilder: void setLength(int)>(0);

        $r17 = <com.android.music.MusicUtils: java.util.Formatter sFormatter>;

        $r15 = newarray (java.lang.Object)[1];

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15[0] = $r19;

        virtualinvoke $r17.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r3, $r15);

        $r21 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r21);

        $r23 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131165291);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label2:
        $r5 = virtualinvoke r2.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(2131230720, i1);

        r26 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke $r6.<java.lang.StringBuilder: void setLength(int)>(0);

        $r8 = <com.android.music.MusicUtils: java.util.Formatter sFormatter>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[0] = $r9;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r26, $r7);

        $r10 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r10);

     label3:
        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static com.android.music.MusicUtils$ServiceToken bindToService(android.app.Activity)
    {
        android.app.Activity r0;
        com.android.music.MusicUtils$ServiceToken $r1;

        r0 := @parameter0: android.app.Activity;

        $r1 = staticinvoke <com.android.music.MusicUtils: com.android.music.MusicUtils$ServiceToken bindToService(android.app.Activity,android.content.ServiceConnection)>(r0, null);

        return $r1;
    }

    public static com.android.music.MusicUtils$ServiceToken bindToService(android.app.Activity, android.content.ServiceConnection)
    {
        android.app.Activity r0, r2;
        android.content.ServiceConnection r1;
        android.content.ContextWrapper r3, $r5;
        com.android.music.MusicUtils$ServiceBinder r4, $r8;
        android.content.Intent $r6, $r9, $r10;
        boolean $z0;
        java.util.HashMap $r11;
        com.android.music.MusicUtils$ServiceToken $r13;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.content.ServiceConnection;

        r2 = virtualinvoke r0.<android.app.Activity: android.app.Activity getParent()>();

        if r2 != null goto label1;

        r2 = r0;

     label1:
        $r5 = new android.content.ContextWrapper;

        specialinvoke $r5.<android.content.ContextWrapper: void <init>(android.content.Context)>(r2);

        r3 = $r5;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r3, class "com/android/music/MediaPlaybackService");

        virtualinvoke r3.<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>($r6);

        $r8 = new com.android.music.MusicUtils$ServiceBinder;

        specialinvoke $r8.<com.android.music.MusicUtils$ServiceBinder: void <init>(android.content.ServiceConnection)>(r1);

        r4 = $r8;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>()>();

        $r10 = virtualinvoke $r9.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>(r3, class "com/android/music/MediaPlaybackService");

        $z0 = virtualinvoke r3.<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r10, r4, 0);

        if $z0 == 0 goto label2;

        $r11 = <com.android.music.MusicUtils: java.util.HashMap sConnectionMap>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        $r13 = new com.android.music.MusicUtils$ServiceToken;

        specialinvoke $r13.<com.android.music.MusicUtils$ServiceToken: void <init>(android.content.ContextWrapper)>(r3);

        return $r13;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Music", "Failed to bind to service");

        return null;
    }

    public static void unbindFromService(com.android.music.MusicUtils$ServiceToken)
    {
        com.android.music.MusicUtils$ServiceToken r0;
        android.content.ContextWrapper r1;
        com.android.music.MusicUtils$ServiceBinder r2;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @parameter0: com.android.music.MusicUtils$ServiceToken;

        if r0 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MusicUtils", "Trying to unbind with null token");

        return;

     label1:
        r1 = r0.<com.android.music.MusicUtils$ServiceToken: android.content.ContextWrapper mWrappedContext>;

        $r3 = <com.android.music.MusicUtils: java.util.HashMap sConnectionMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (com.android.music.MusicUtils$ServiceBinder) $r4;

        if r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MusicUtils", "Trying to unbind for unknown Context");

        return;

     label2:
        virtualinvoke r1.<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>(r2);

        $r5 = <com.android.music.MusicUtils: java.util.HashMap sConnectionMap>;

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService> = null;

     label3:
        return;
    }

    public static long getCurrentAlbumId()
    {
        com.android.music.IMediaPlaybackService $r1, $r2;
        long $l0;
        android.os.RemoteException $r3;

        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r1 == null goto label4;

     label1:
        $r2 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        $l0 = interfaceinvoke $r2.<com.android.music.IMediaPlaybackService: long getAlbumId()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

     label4:
        return -1L;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static long getCurrentArtistId()
    {
        com.android.music.IMediaPlaybackService $r1, $r2;
        long $l0;
        android.os.RemoteException $r3;

        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r1 == null goto label4;

     label1:
        $r2 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        $l0 = interfaceinvoke $r2.<com.android.music.IMediaPlaybackService: long getArtistId()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

     label4:
        return -1L;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static long getCurrentAudioId()
    {
        com.android.music.IMediaPlaybackService $r1, $r2;
        long $l0;
        android.os.RemoteException $r3;

        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r1 == null goto label4;

     label1:
        $r2 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        $l0 = interfaceinvoke $r2.<com.android.music.IMediaPlaybackService: long getAudioId()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

     label4:
        return -1L;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int getCurrentShuffleMode()
    {
        int i0;
        com.android.music.IMediaPlaybackService $r1, $r2;
        android.os.RemoteException $r3;

        i0 = 0;

        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r1 == null goto label4;

     label1:
        $r2 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        i0 = interfaceinvoke $r2.<com.android.music.IMediaPlaybackService: int getShuffleMode()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void togglePartyShuffle()
    {
        int i0;
        com.android.music.IMediaPlaybackService $r1, $r2, $r3;
        android.os.RemoteException $r4;

        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r1 == null goto label5;

        i0 = staticinvoke <com.android.music.MusicUtils: int getCurrentShuffleMode()>();

     label1:
        if i0 != 2 goto label2;

        $r3 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r3.<com.android.music.IMediaPlaybackService: void setShuffleMode(int)>(0);

        goto label3;

     label2:
        $r2 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r2.<com.android.music.IMediaPlaybackService: void setShuffleMode(int)>(2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public static void setPartyShuffleMenuIcon(android.view.Menu)
    {
        android.view.Menu r0;
        android.view.MenuItem r1;
        int i0;

        r0 := @parameter0: android.view.Menu;

        r1 = interfaceinvoke r0.<android.view.Menu: android.view.MenuItem findItem(int)>(8);

        if r1 == null goto label2;

        i0 = staticinvoke <com.android.music.MusicUtils: int getCurrentShuffleMode()>();

        if i0 != 2 goto label1;

        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837539);

        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131165189);

        goto label2;

     label1:
        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837539);

        interfaceinvoke r1.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131165188);

     label2:
        return;
    }

    public static boolean isMusicLoaded()
    {
        com.android.music.IMediaPlaybackService $r1, $r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r1 == null goto label5;

     label1:
        $r2 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        $r3 = interfaceinvoke $r2.<com.android.music.IMediaPlaybackService: java.lang.String getPath()>();

        if $r3 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public static long[] getSongListForCursor(android.database.Cursor)
    {
        android.database.Cursor r0;
        int i0, i3, i4;
        long[] r1, $r3;
        long $l2;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: android.database.Cursor;

        if r0 != null goto label1;

        $r3 = <com.android.music.MusicUtils: long[] sEmptyList>;

        return $r3;

     label1:
        i0 = interfaceinvoke r0.<android.database.Cursor: int getCount()>();

        r1 = newarray (long)[i0];

        interfaceinvoke r0.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        i3 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("audio_id");

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        i3 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

     label5:
        i4 = 0;

     label6:
        if i4 >= i0 goto label7;

        $l2 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(i3);

        r1[i4] = $l2;

        interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        i4 = i4 + 1;

        goto label6;

     label7:
        return r1;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public static long[] getSongListForArtist(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.String[] r1, $r5;
        java.lang.String r2;
        android.database.Cursor r3;
        long[] r4, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        android.net.Uri $r12;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_id";

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("artist_id=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is_music");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=1");

        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r3 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r12, r1, r2, null, "album_key,track");

        if r3 == null goto label1;

        r4 = staticinvoke <com.android.music.MusicUtils: long[] getSongListForCursor(android.database.Cursor)>(r3);

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return r4;

     label1:
        $r13 = <com.android.music.MusicUtils: long[] sEmptyList>;

        return $r13;
    }

    public static long[] getSongListForAlbum(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.String[] r1, $r5;
        java.lang.String r2;
        android.database.Cursor r3;
        long[] r4, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        android.net.Uri $r12;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_id";

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("album_id=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is_music");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=1");

        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r3 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r12, r1, r2, null, "track");

        if r3 == null goto label1;

        r4 = staticinvoke <com.android.music.MusicUtils: long[] getSongListForCursor(android.database.Cursor)>(r3);

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return r4;

     label1:
        $r13 = <com.android.music.MusicUtils: long[] sEmptyList>;

        return $r13;
    }

    public static long[] getSongListForPlaylist(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.String[] r1, $r4;
        android.database.Cursor r2;
        long[] r3, $r6;
        android.net.Uri $r5;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "audio_id";

        r1 = $r4;

        $r5 = staticinvoke <android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>("external", l0);

        r2 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r5, r1, null, null, "play_order");

        if r2 == null goto label1;

        r3 = staticinvoke <com.android.music.MusicUtils: long[] getSongListForCursor(android.database.Cursor)>(r2);

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r3;

     label1:
        $r6 = <com.android.music.MusicUtils: long[] sEmptyList>;

        return $r6;
    }

    public static void playPlaylist(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        long[] r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.music.MusicUtils: long[] getSongListForPlaylist(android.content.Context,long)>(r0, l0);

        if r1 == null goto label1;

        staticinvoke <com.android.music.MusicUtils: void playAll(android.content.Context,long[],int,boolean)>(r0, r1, -1, 0);

     label1:
        return;
    }

    public static long[] getAllSongs(android.content.Context)
    {
        android.content.Context r0;
        android.database.Cursor r1;
        long[] r2, r7;
        int i0, $i1, i3;
        java.lang.Throwable r3, $r6;
        java.lang.String[] $r4;
        android.net.Uri $r5;
        long $l2;

        r0 := @parameter0: android.content.Context;

        $r5 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_id";

        r1 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r5, $r4, "is_music=1", null, null);

     label01:
        if r1 == null goto label02;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i1 != 0 goto label04;

     label02:
        if r1 == null goto label03;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label03:
        return null;

     label04:
        i3 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        r2 = newarray (long)[i3];

        i0 = 0;

     label05:
        if i0 >= i3 goto label06;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        $l2 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

        r2[i0] = $l2;

        i0 = i0 + 1;

        goto label05;

     label06:
        r7 = r2;

     label07:
        if r1 == null goto label08;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label08:
        return r7;

     label09:
        $r6 := @caughtexception;

        r3 = $r6;

     label10:
        if r1 == null goto label11;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void makePlaylistMenu(android.content.Context, android.view.SubMenu)
    {
        android.content.Context r0;
        android.view.SubMenu r1;
        java.lang.String[] r2, $r7;
        android.content.ContentResolver r3;
        java.lang.String r4, $r13;
        android.database.Cursor r5;
        android.content.Intent r6, $r11;
        android.net.Uri $r8;
        int $i0;
        boolean $z1;
        long $l1;
        android.view.MenuItem $r15;
        java.io.PrintStream $r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.SubMenu;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "_id";

        $r7[1] = "name";

        r2 = $r7;

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if r3 != null goto label1;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("resolver = null");

        goto label4;

     label1:
        r4 = "name != \'\'";

        $r8 = <android.provider.MediaStore$Audio$Playlists: android.net.Uri EXTERNAL_CONTENT_URI>;

        r5 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, r2, r4, null, "name");

        interfaceinvoke r1.<android.view.SubMenu: void clear()>();

        interfaceinvoke r1.<android.view.SubMenu: android.view.MenuItem add(int,int,int,int)>(1, 12, 0, 2131165251);

        interfaceinvoke r1.<android.view.SubMenu: android.view.MenuItem add(int,int,int,int)>(1, 4, 0, 2131165252);

        if r5 == null goto label3;

        $i0 = interfaceinvoke r5.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label3;

        interfaceinvoke r5.<android.database.Cursor: boolean moveToFirst()>();

     label2:
        $z1 = interfaceinvoke r5.<android.database.Cursor: boolean isAfterLast()>();

        if $z1 != 0 goto label3;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>()>();

        r6 = $r11;

        $l1 = interfaceinvoke r5.<android.database.Cursor: long getLong(int)>(0);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("playlist", $l1);

        $r13 = interfaceinvoke r5.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r15 = interfaceinvoke r1.<android.view.SubMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>(1, 3, 0, $r13);

        interfaceinvoke $r15.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>(r6);

        interfaceinvoke r5.<android.database.Cursor: boolean moveToNext()>();

        goto label2;

     label3:
        if r5 == null goto label4;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label4:
        return;
    }

    public static void clearPlaylist(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.net.Uri r1;
        long $l1;
        android.content.ContentResolver $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $l1 = (long) i0;

        r1 = staticinvoke <android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>("external", $l1);

        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r2.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r1, null, null);

        return;
    }

    public static void deleteTracks(android.content.Context, long[])
    {
        android.content.Context r0;
        long[] r1;
        java.lang.String[] r2, $r7;
        java.lang.StringBuilder r3, $r8, $r23, $r25, $r26;
        int i0, $i3, $i4, $i5, $i10, $i11;
        long l1, l2, $l9;
        java.io.File r4, $r22;
        java.util.HashMap r5, $r30, $r31;
        java.lang.Throwable r6, $r33;
        java.lang.String $r11, $r19, $r24, r39, r41;
        android.net.Uri $r12, $r17, $r21;
        android.content.res.Resources $r13;
        java.lang.Object[] $r14;
        java.lang.Integer $r15;
        android.widget.Toast $r16;
        android.content.ContentResolver $r18, $r20;
        boolean $z0, $z3, $z4;
        com.android.music.IMediaPlaybackService $r27;
        java.lang.Long $r29;
        android.os.RemoteException $r35;
        java.lang.SecurityException $r36;
        android.database.Cursor r37;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: long[];

        $r7 = newarray (java.lang.String)[3];

        $r7[0] = "_id";

        $r7[1] = "_data";

        $r7[2] = "album_id";

        r2 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r3 = $r8;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id IN (");

        i0 = 0;

     label01:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label03;

        $l9 = r1[i0];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $i11 = lengthof r1;

        $i10 = $i11 - 1;

        if i0 >= $i10 goto label02;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r37 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r12, r2, $r11, null, null);

        if r37 == null goto label21;

     label04:
        interfaceinvoke r37.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        $z0 = interfaceinvoke r37.<android.database.Cursor: boolean isAfterLast()>();

        if $z0 != 0 goto label11;

        l1 = interfaceinvoke r37.<android.database.Cursor: long getLong(int)>(0);

        $r27 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r27.<com.android.music.IMediaPlaybackService: int removeTrack(long)>(l1);

        l2 = interfaceinvoke r37.<android.database.Cursor: long getLong(int)>(2);

        $r31 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        r5 = $r31;

        entermonitor $r31;

     label06:
        $r30 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r29);

        exitmonitor r5;

     label07:
        goto label10;

     label08:
        $r33 := @caughtexception;

        r6 = $r33;

        exitmonitor r5;

     label09:
        throw r6;

     label10:
        interfaceinvoke r37.<android.database.Cursor: boolean moveToNext()>();

        goto label05;

     label11:
        goto label13;

     label12:
        $r35 := @caughtexception;

     label13:
        $r20 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r21 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r21, $r19, null);

        interfaceinvoke r37.<android.database.Cursor: boolean moveToFirst()>();

     label14:
        $z3 = interfaceinvoke r37.<android.database.Cursor: boolean isAfterLast()>();

        if $z3 != 0 goto label20;

        r39 = interfaceinvoke r37.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r22 = new java.io.File;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>(r39);

        r4 = $r22;

     label15:
        $z4 = virtualinvoke r4.<java.io.File: boolean delete()>();

        if $z4 != 0 goto label16;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete file ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MusicUtils", $r24);

     label16:
        interfaceinvoke r37.<android.database.Cursor: boolean moveToNext()>();

     label17:
        goto label19;

     label18:
        $r36 := @caughtexception;

        interfaceinvoke r37.<android.database.Cursor: boolean moveToNext()>();

     label19:
        goto label14;

     label20:
        interfaceinvoke r37.<android.database.Cursor: void close()>();

     label21:
        $r13 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i5 = lengthof r1;

        $r14 = newarray (java.lang.Object)[1];

        $i4 = lengthof r1;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r14[0] = $r15;

        r41 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131230723, $i5, $r14);

        $r16 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, r41, 0);

        virtualinvoke $r16.<android.widget.Toast: void show()>();

        $r18 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r17 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://media");

        virtualinvoke $r18.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r17, null);

        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch android.os.RemoteException from label04 to label11 with label12;
        catch java.lang.SecurityException from label15 to label17 with label18;
    }

    public static void addToCurrentPlaylist(android.content.Context, long[])
    {
        android.content.Context r0;
        long[] r1;
        java.lang.String r2;
        com.android.music.IMediaPlaybackService $r3, $r4;
        android.content.res.Resources $r5;
        java.lang.Object[] $r6;
        int $i0, $i1;
        java.lang.Integer $r7;
        android.widget.Toast $r8;
        android.os.RemoteException $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: long[];

        $r3 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r4.<com.android.music.IMediaPlaybackService: void enqueue(long[],int)>(r1, 3);

        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = lengthof r1;

        $r6 = newarray (java.lang.Object)[1];

        $i0 = lengthof r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        r2 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131230724, $i1, $r6);

        $r8 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, r2, 0);

        virtualinvoke $r8.<android.widget.Toast: void show()>();

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static void makeInsertItems(long[], int, int, int)
    {
        long[] r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11;
        android.content.ContentValues[] $r1, $r2, $r3, $r5, $r7, $r12, $r13;
        android.content.ContentValues $r4, $r6, $r9, $r10;
        java.lang.Integer $r8;
        long $l8;
        java.lang.Long $r11;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i5 = i0 + i1;

        $i4 = lengthof r0;

        if $i5 <= $i4 goto label1;

        $i10 = lengthof r0;

        i1 = $i10 - i0;

     label1:
        $r1 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        if $r1 == null goto label2;

        $r12 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        $i11 = lengthof $r12;

        if $i11 == i1 goto label3;

     label2:
        $r2 = newarray (android.content.ContentValues)[i1];

        <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache> = $r2;

     label3:
        i3 = 0;

     label4:
        if i3 >= i1 goto label6;

        $r3 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        $r4 = $r3[i3];

        if $r4 != null goto label5;

        $r13 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        $r13[i3] = $r10;

     label5:
        $r5 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        $r6 = $r5[i3];

        $i6 = i2 + i0;

        $i7 = $i6 + i3;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("play_order", $r8);

        $r7 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        $r9 = $r7[i3];

        $i9 = i0 + i3;

        $l8 = r0[$i9];

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        virtualinvoke $r9.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("audio_id", $r11);

        i3 = i3 + 1;

        goto label4;

     label6:
        return;
    }

    public static void addToPlaylist(android.content.Context, long[], long)
    {
        android.content.Context r0;
        long[] r1;
        long l0;
        int i1, i2, i3, i4, $i6;
        android.content.ContentResolver r2;
        java.lang.String[] r3, $r6;
        android.net.Uri r4;
        android.database.Cursor r5;
        java.lang.Object[] $r7;
        android.content.res.Resources $r8;
        java.lang.Integer $r9;
        android.content.ContentValues[] $r10;
        android.widget.Toast $r11;
        java.lang.String r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: long[];

        l0 := @parameter2: long;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MusicBase", "ListSelection null");

        goto label4;

     label1:
        i1 = lengthof r1;

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "count(*)";

        r3 = $r6;

        r4 = staticinvoke <android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>("external", l0);

        r5 = virtualinvoke r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r4, r3, null, null, null);

        interfaceinvoke r5.<android.database.Cursor: boolean moveToFirst()>();

        i2 = interfaceinvoke r5.<android.database.Cursor: int getInt(int)>(0);

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        i3 = 0;

        i4 = 0;

     label2:
        if i4 >= i1 goto label3;

        staticinvoke <com.android.music.MusicUtils: void makeInsertItems(long[],int,int,int)>(r1, i4, 1000, i2);

        $r10 = <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache>;

        $i6 = virtualinvoke r2.<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>(r4, $r10);

        i3 = i3 + $i6;

        i4 = i4 + 1000;

        goto label2;

     label3:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r7[0] = $r9;

        r12 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131230724, i3, $r7);

        $r11 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, r12, 0);

        virtualinvoke $r11.<android.widget.Toast: void show()>();

     label4:
        return;
    }

    public static android.database.Cursor query(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, $r12;
        int i0;
        android.content.ContentResolver r6;
        android.database.Cursor $r7;
        android.net.Uri$Builder $r8, $r13;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.UnsupportedOperationException $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

     label1:
        r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if r6 != null goto label3;

     label2:
        return null;

     label3:
        if i0 <= 0 goto label4;

        $r8 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("limit", $r12);

        r1 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri build()>();

     label4:
        $r7 = virtualinvoke r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

     label5:
        return $r7;

     label6:
        $r14 := @caughtexception;

        return null;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label6;
        catch java.lang.UnsupportedOperationException from label3 to label5 with label6;
    }

    public static android.database.Cursor query(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.database.Cursor $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        $r6 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)>(r0, r1, r2, r3, r4, r5, 0);

        return $r6;
    }

    public static boolean isMediaScannerScanning(android.content.Context)
    {
        android.content.Context r0;
        boolean z0;
        android.database.Cursor r1;
        android.net.Uri $r2;
        java.lang.String[] $r3;
        int $i0;
        java.lang.String $r4, $r5;

        r0 := @parameter0: android.content.Context;

        z0 = 0;

        $r2 = staticinvoke <android.provider.MediaStore: android.net.Uri getMediaScannerUri()>();

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "volume";

        r1 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r2, $r3, null, null, null);

        if r1 == null goto label2;

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i0 != 1 goto label1;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        $r4 = "external";

        $r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label1:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label2:
        return z0;
    }

    public static void setSpinnerState(android.app.Activity)
    {
        android.app.Activity r0;
        boolean $z0;
        android.view.Window $r1, $r2, $r3;

        r0 := @parameter0: android.app.Activity;

        $z0 = staticinvoke <com.android.music.MusicUtils: boolean isMediaScannerScanning(android.content.Context)>(r0);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureInt(int,int)>(5, -3);

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setFeatureInt(int,int)>(5, -1);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureInt(int,int)>(5, -2);

     label2:
        return;
    }

    public static void displayDatabaseError(android.app.Activity)
    {
        android.app.Activity r0;
        java.lang.String r1, $r5, $r8;
        int i0, i1;
        android.content.Intent r2, $r10;
        android.widget.TextView r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.view.View $r4, r12, r13, r14, r15;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @parameter0: android.app.Activity;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isFinishing()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z1 = staticinvoke <android.os.Environment: boolean isExternalStorageRemovable()>();

        if $z1 == 0 goto label02;

        i0 = 2131165235;

        i1 = 2131165237;

        goto label03;

     label02:
        i0 = 2131165236;

        i1 = 2131165238;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("shared");

        if $z2 != 0 goto label04;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unmounted");

        if $z5 == 0 goto label06;

     label04:
        $z3 = staticinvoke <android.os.Environment: boolean isExternalStorageRemovable()>();

        if $z3 == 0 goto label05;

        i0 = 2131165231;

        i1 = 2131165233;

        goto label10;

     label05:
        i0 = 2131165232;

        i1 = 2131165234;

        goto label10;

     label06:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("removed");

        if $z4 == 0 goto label08;

        $z8 = staticinvoke <android.os.Environment: boolean isExternalStorageRemovable()>();

        if $z8 == 0 goto label07;

        i0 = 2131165227;

        i1 = 2131165229;

        goto label10;

     label07:
        i0 = 2131165228;

        i1 = 2131165230;

        goto label10;

     label08:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z6 == 0 goto label09;

        virtualinvoke r0.<android.app.Activity: void setTitle(java.lang.CharSequence)>("");

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>()>();

        r2 = $r10;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>(r0, class "com/android/music/ScanningProgress");

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r2, 11);

        goto label10;

     label09:
        $r5 = <com.android.music.MusicUtils: java.lang.String mLastSdStatus>;

        $z7 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, r1);

        if $z7 != 0 goto label10;

        <com.android.music.MusicUtils: java.lang.String mLastSdStatus> = r1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sd card: ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MusicUtils", $r8);

     label10:
        virtualinvoke r0.<android.app.Activity: void setTitle(int)>(i0);

        r12 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361838);

        if r12 == null goto label11;

        virtualinvoke r12.<android.view.View: void setVisibility(int)>(0);

     label11:
        r13 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361837);

        if r13 == null goto label12;

        virtualinvoke r13.<android.view.View: void setVisibility(int)>(0);

     label12:
        r14 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(16908298);

        if r14 == null goto label13;

        virtualinvoke r14.<android.view.View: void setVisibility(int)>(8);

     label13:
        r15 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361816);

        if r15 == null goto label14;

        virtualinvoke r15.<android.view.View: void setVisibility(int)>(8);

     label14:
        $r4 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361838);

        r3 = (android.widget.TextView) $r4;

        virtualinvoke r3.<android.widget.TextView: void setText(int)>(i1);

        return;
    }

    public static void hideDatabaseError(android.app.Activity)
    {
        android.app.Activity r0;
        android.view.View r1, r2, r3;

        r0 := @parameter0: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361838);

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(8);

     label1:
        r2 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361837);

        if r2 == null goto label2;

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(8);

     label2:
        r3 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(16908298);

        if r3 == null goto label3;

        virtualinvoke r3.<android.view.View: void setVisibility(int)>(0);

     label3:
        return;
    }

    protected static android.net.Uri getContentURIForPath(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1;
        android.net.Uri $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);

        return $r2;
    }

    public static java.lang.String makeTimeString(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l2, $l3, $l4, $l5, $l6;
        java.lang.String r1, $r10;
        java.lang.Object[] r2;
        byte $b1;
        java.lang.StringBuilder $r3;
        java.lang.Long $r4, $r5, $r6, $r7, $r9;
        java.util.Formatter $r8, $r11;
        int $i7;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $b1 = l0 cmp 3600L;

        if $b1 >= 0 goto label1;

        $i7 = 2131165185;

        goto label2;

     label1:
        $i7 = 2131165186;

     label2:
        r1 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>($i7);

        $r3 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        r2 = <com.android.music.MusicUtils: java.lang.Object[] sTimeArgs>;

        $l2 = l0 / 3600L;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r2[0] = $r4;

        $l3 = l0 / 60L;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r2[1] = $r5;

        $l4 = l0 / 60L;

        $l5 = $l4 % 60L;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        r2[2] = $r6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r2[3] = $r7;

        $l6 = l0 % 60L;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        r2[4] = $r9;

        $r8 = <com.android.music.MusicUtils: java.util.Formatter sFormatter>;

        $r11 = virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r10 = virtualinvoke $r11.<java.util.Formatter: java.lang.String toString()>();

        return $r10;
    }

    public static void shuffleAll(android.content.Context, android.database.Cursor)
    {
        android.content.Context r0;
        android.database.Cursor r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.Cursor;

        staticinvoke <com.android.music.MusicUtils: void playAll(android.content.Context,android.database.Cursor,int,boolean)>(r0, r1, 0, 1);

        return;
    }

    public static void playAll(android.content.Context, android.database.Cursor)
    {
        android.content.Context r0;
        android.database.Cursor r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.Cursor;

        staticinvoke <com.android.music.MusicUtils: void playAll(android.content.Context,android.database.Cursor,int,boolean)>(r0, r1, 0, 0);

        return;
    }

    public static void playAll(android.content.Context, android.database.Cursor, int)
    {
        android.content.Context r0;
        android.database.Cursor r1;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        staticinvoke <com.android.music.MusicUtils: void playAll(android.content.Context,android.database.Cursor,int,boolean)>(r0, r1, i0, 0);

        return;
    }

    public static void playAll(android.content.Context, long[], int)
    {
        android.content.Context r0;
        long[] r1;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        staticinvoke <com.android.music.MusicUtils: void playAll(android.content.Context,long[],int,boolean)>(r0, r1, i0, 0);

        return;
    }

    private static void playAll(android.content.Context, android.database.Cursor, int, boolean)
    {
        android.content.Context r0;
        android.database.Cursor r1;
        int i0;
        boolean z0;
        long[] r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 = staticinvoke <com.android.music.MusicUtils: long[] getSongListForCursor(android.database.Cursor)>(r1);

        staticinvoke <com.android.music.MusicUtils: void playAll(android.content.Context,long[],int,boolean)>(r0, r2, i0, z0);

        return;
    }

    private static void playAll(android.content.Context, long[], int, boolean)
    {
        android.content.Context r0;
        long[] r1, r3;
        int i0, i1, $i2, $i4, $i5;
        boolean z0, $z1;
        java.lang.String r2;
        android.content.Intent r4, r6, $r14, $r20, $r22, $r23, r24, r26;
        java.lang.Throwable r5, $r21;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        android.widget.Toast $r9;
        com.android.music.IMediaPlaybackService $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18;
        byte $b6;
        long $l7, l8;
        android.os.RemoteException $r19;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = lengthof r1;

        if $i2 == 0 goto label01;

        $r11 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r11 != null goto label02;

     label01:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MusicUtils", "attempt to play empty song list");

        $r7 = newarray (java.lang.Object)[1];

        $i4 = lengthof r1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[0] = $r8;

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131165254, $r7);

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, r2, 0);

        virtualinvoke $r9.<android.widget.Toast: void show()>();

        return;

     label02:
        if z0 == 0 goto label03;

        $r18 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r18.<com.android.music.IMediaPlaybackService: void setShuffleMode(int)>(1);

     label03:
        $r10 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        l8 = interfaceinvoke $r10.<com.android.music.IMediaPlaybackService: long getAudioId()>();

        $r12 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        i1 = interfaceinvoke $r12.<com.android.music.IMediaPlaybackService: int getQueuePosition()>();

        if i0 == -1 goto label05;

        if i1 != i0 goto label05;

        $l7 = r1[i0];

        $b6 = l8 cmp $l7;

        if $b6 != 0 goto label05;

        $r17 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        r3 = interfaceinvoke $r17.<com.android.music.IMediaPlaybackService: long[] getQueue()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>(r1, r3);

        if $z1 == 0 goto label05;

        $r16 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r16.<com.android.music.IMediaPlaybackService: void play()>();

     label04:
        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("com.android.music.PLAYBACK_VIEWER");

        r4 = virtualinvoke $r20.<android.content.Intent: android.content.Intent setFlags(int)>(67108864);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r4);

        return;

     label05:
        if i0 >= 0 goto label06;

        i0 = 0;

     label06:
        $r13 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if z0 == 0 goto label07;

        $i5 = -1;

        goto label08;

     label07:
        $i5 = i0;

     label08:
        interfaceinvoke $r13.<com.android.music.IMediaPlaybackService: void open(long[],int)>(r1, $i5);

        $r15 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r15.<com.android.music.IMediaPlaybackService: void play()>();

     label09:
        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("com.android.music.PLAYBACK_VIEWER");

        r24 = virtualinvoke $r14.<android.content.Intent: android.content.Intent setFlags(int)>(67108864);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r24);

        goto label14;

     label10:
        $r19 := @caughtexception;

     label11:
        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String)>("com.android.music.PLAYBACK_VIEWER");

        r26 = virtualinvoke $r23.<android.content.Intent: android.content.Intent setFlags(int)>(67108864);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r26);

        goto label14;

     label12:
        $r21 := @caughtexception;

        r5 = $r21;

     label13:
        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(java.lang.String)>("com.android.music.PLAYBACK_VIEWER");

        r6 = virtualinvoke $r22.<android.content.Intent: android.content.Intent setFlags(int)>(67108864);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r6);

        throw r5;

     label14:
        return;

        catch android.os.RemoteException from label02 to label04 with label10;
        catch android.os.RemoteException from label05 to label09 with label10;
        catch java.lang.Throwable from label02 to label04 with label12;
        catch java.lang.Throwable from label05 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static void clearQueue()
    {
        com.android.music.IMediaPlaybackService $r1;
        android.os.RemoteException $r2;

     label1:
        $r1 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        interfaceinvoke $r1.<com.android.music.IMediaPlaybackService: int removeTracks(int,int)>(0, 2147483647);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void initAlbumArtCache()
    {
        int i0, $i1;
        com.android.music.IMediaPlaybackService $r0;
        android.os.RemoteException $r1, r2;

     label1:
        $r0 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        i0 = interfaceinvoke $r0.<com.android.music.IMediaPlaybackService: int getMediaMountedCount()>();

        $i1 = <com.android.music.MusicUtils: int sArtCacheId>;

        if i0 == $i1 goto label2;

        staticinvoke <com.android.music.MusicUtils: void clearAlbumArtCache()>();

        <com.android.music.MusicUtils: int sArtCacheId> = i0;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        r2 = $r1;

        virtualinvoke r2.<android.os.RemoteException: void printStackTrace()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void clearAlbumArtCache()
    {
        java.util.HashMap r0, $r2, $r3;
        java.lang.Throwable r1, $r4;

        $r2 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        virtualinvoke $r3.<java.util.HashMap: void clear()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

     label4:
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.graphics.drawable.Drawable getCachedArtwork(android.content.Context, long, android.graphics.drawable.BitmapDrawable)
    {
        android.content.Context r0;
        long l0;
        android.graphics.drawable.BitmapDrawable r1;
        java.util.HashMap r2, r5, $r8, $r9, $r13, $r14, $r17;
        java.lang.Throwable r3, r7, $r19, $r20;
        int i1, i2;
        android.graphics.Bitmap r4, r22;
        android.graphics.drawable.Drawable r6, r21;
        java.lang.Long $r10, $r16, $r18;
        java.lang.Object $r11, $r15;
        com.android.music.MusicUtils$FastBitmapDrawable $r12;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: android.graphics.drawable.BitmapDrawable;

        $r8 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        r2 = $r8;

        entermonitor $r8;

     label01:
        $r9 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        r21 = (android.graphics.drawable.Drawable) $r11;

        exitmonitor r2;

     label02:
        goto label05;

     label03:
        $r19 := @caughtexception;

        r3 = $r19;

        exitmonitor r2;

     label04:
        throw r3;

     label05:
        if r21 != null goto label12;

        r21 = r1;

        r22 = virtualinvoke r1.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        i2 = virtualinvoke r22.<android.graphics.Bitmap: int getWidth()>();

        i1 = virtualinvoke r22.<android.graphics.Bitmap: int getHeight()>();

        r4 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getArtworkQuick(android.content.Context,long,int,int)>(r0, l0, i2, i1);

        if r4 == null goto label12;

        $r12 = new com.android.music.MusicUtils$FastBitmapDrawable;

        specialinvoke $r12.<com.android.music.MusicUtils$FastBitmapDrawable: void <init>(android.graphics.Bitmap)>(r4);

        r21 = $r12;

        $r14 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        r5 = $r14;

        entermonitor $r14;

     label06:
        $r13 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r6 = (android.graphics.drawable.Drawable) $r15;

        if r6 != null goto label07;

        $r17 = <com.android.music.MusicUtils: java.util.HashMap sArtCache>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r21);

        goto label08;

     label07:
        r21 = r6;

     label08:
        exitmonitor r5;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        r7 = $r20;

        exitmonitor r5;

     label11:
        throw r7;

     label12:
        return r21;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static android.graphics.Bitmap getArtworkQuick(android.content.Context, long, int, int)
    {
        android.content.Context r0;
        long l0;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, i10;
        android.content.ContentResolver r1;
        android.net.Uri r2, $r9;
        android.os.ParcelFileDescriptor r3;
        android.graphics.Bitmap r4, r5, r27;
        java.lang.Throwable r7, $r24;
        java.io.FileDescriptor $r10, $r19;
        android.graphics.BitmapFactory$Options $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r23;
        java.io.IOException $r21, $r25, $r26;
        java.io.FileNotFoundException $r22;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i10 = i1 + -1;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = <com.android.music.MusicUtils: android.net.Uri sArtworkUri>;

        r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r9, l0);

        if r2 == null goto label20;

        r3 = null;

     label01:
        r3 = virtualinvoke r1.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r2, "r");

        i3 = 1;

        $r11 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $r11.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r10 = virtualinvoke r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r13 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r10, null, $r13);

        $r14 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $i6 = $r14.<android.graphics.BitmapFactory$Options: int outWidth>;

        i4 = $i6 >> 1;

        $r15 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $i7 = $r15.<android.graphics.BitmapFactory$Options: int outHeight>;

        i5 = $i7 >> 1;

     label02:
        if i4 <= i10 goto label03;

        if i5 <= i2 goto label03;

        i3 = i3 << 1;

        i4 = i4 >> 1;

        i5 = i5 >> 1;

        goto label02;

     label03:
        $r17 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $r17.<android.graphics.BitmapFactory$Options: int inSampleSize> = i3;

        $r16 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $r16.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r19 = virtualinvoke r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r18 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r19, null, $r18);

        if r4 == null goto label06;

        $r20 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $i8 = $r20.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i8 != i10 goto label04;

        $r23 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $i9 = $r23.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i9 == i2 goto label06;

     label04:
        r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r4, i10, i2, 1);

        if r5 == r4 goto label05;

        virtualinvoke r4.<android.graphics.Bitmap: void recycle()>();

     label05:
        r4 = r5;

     label06:
        r27 = r4;

     label07:
        if r3 == null goto label08;

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

     label10:
        return r27;

     label11:
        $r22 := @caughtexception;

     label12:
        if r3 == null goto label13;

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label13:
        goto label20;

     label14:
        $r21 := @caughtexception;

        goto label20;

     label15:
        $r24 := @caughtexception;

        r7 = $r24;

     label16:
        if r3 == null goto label17;

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label17:
        goto label19;

     label18:
        $r25 := @caughtexception;

     label19:
        throw r7;

     label20:
        return null;

        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label01 to label07 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label07 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public static android.graphics.Bitmap getArtwork(android.content.Context, long, long)
    {
        android.content.Context r0;
        long l0, l1;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getArtwork(android.content.Context,long,long,boolean)>(r0, l0, l1, 1);

        return $r1;
    }

    public static android.graphics.Bitmap getArtwork(android.content.Context, long, long, boolean)
    {
        android.content.Context r0;
        long l0, l1;
        boolean z0;
        android.graphics.Bitmap r1, r4, r6, $r12, r23, r24;
        android.net.Uri r2, $r10;
        java.io.InputStream r3;
        java.lang.Throwable r8, $r13;
        byte $b2, $b3;
        android.graphics.BitmapFactory$Options $r11;
        java.io.FileNotFoundException $r14;
        java.io.IOException $r15, $r18, $r19, $r20;
        android.graphics.Bitmap$Config $r16, $r17;
        android.content.ContentResolver r21;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label03;

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label01;

        r1 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getArtworkFromFile(android.content.Context,long,long)>(r0, l0, -1L);

        if r1 == null goto label01;

        return r1;

     label01:
        if z0 == 0 goto label02;

        $r12 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getDefaultArtwork(android.content.Context)>(r0);

        return $r12;

     label02:
        return null;

     label03:
        r21 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = <com.android.music.MusicUtils: android.net.Uri sArtworkUri>;

        r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r10, l1);

        if r2 == null goto label25;

        r3 = null;

     label04:
        r3 = virtualinvoke r21.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r2);

        $r11 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptions>;

        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r3, null, $r11);

     label05:
        if r3 == null goto label06;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r20 := @caughtexception;

     label08:
        return r4;

     label09:
        $r14 := @caughtexception;

        r23 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getArtworkFromFile(android.content.Context,long,long)>(r0, l0, l1);

        if r23 == null goto label14;

        $r17 = virtualinvoke r23.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if $r17 != null goto label15;

        $r16 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        r23 = virtualinvoke r23.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r16, 0);

        if r23 != null goto label15;

        if z0 == 0 goto label15;

        r6 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getDefaultArtwork(android.content.Context)>(r0);

     label10:
        if r3 == null goto label11;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r19 := @caughtexception;

     label13:
        return r6;

     label14:
        if z0 == 0 goto label15;

        r23 = staticinvoke <com.android.music.MusicUtils: android.graphics.Bitmap getDefaultArtwork(android.content.Context)>(r0);

     label15:
        r24 = r23;

     label16:
        if r3 == null goto label17;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r15 := @caughtexception;

     label19:
        return r24;

     label20:
        $r13 := @caughtexception;

        r8 = $r13;

     label21:
        if r3 == null goto label22;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r18 := @caughtexception;

     label24:
        throw r8;

     label25:
        return null;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.FileNotFoundException from label04 to label05 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label14 to label16 with label20;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    private static android.graphics.Bitmap getArtworkFromFile(android.content.Context, long, long)
    {
        android.content.Context r0;
        long l0, l1;
        java.lang.IllegalStateException $r1;
        android.graphics.Bitmap r2;
        android.net.Uri r3, $r6, r16;
        android.os.ParcelFileDescriptor r4, r17;
        java.io.FileDescriptor r5, r18;
        byte $b2, $b3, $b4;
        android.content.ContentResolver $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r12;
        java.lang.String $r11;
        java.io.FileNotFoundException $r14;
        java.lang.IllegalArgumentException $r15;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 = null;

        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label1;

        $b4 = l0 cmp 0L;

        if $b4 >= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify an album or a song id");

        throw $r15;

     label1:
        $b3 = l1 cmp 0L;

        if $b3 >= 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://media/external/audio/media/");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/albumart");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);

        $r13 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke $r13.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r3, "r");

        if r4 == null goto label2;

        r5 = virtualinvoke r4.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>(r5);

     label2:
        goto label4;

     label3:
        $r6 = <com.android.music.MusicUtils: android.net.Uri sArtworkUri>;

        r16 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r6, l1);

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r17 = virtualinvoke $r7.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r16, "r");

        if r17 == null goto label4;

        r18 = virtualinvoke r17.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>(r18);

     label4:
        goto label7;

     label5:
        $r1 := @caughtexception;

        goto label7;

     label6:
        $r14 := @caughtexception;

     label7:
        if r2 == null goto label8;

        <com.android.music.MusicUtils: android.graphics.Bitmap mCachedBit> = r2;

     label8:
        return r2;

        catch java.lang.IllegalStateException from label1 to label4 with label5;
        catch java.io.FileNotFoundException from label1 to label4 with label6;
    }

    private static android.graphics.Bitmap getDefaultArtwork(android.content.Context)
    {
        android.content.Context r0;
        android.graphics.BitmapFactory$Options r1, $r2;
        android.graphics.Bitmap$Config $r3;
        android.content.res.Resources $r4;
        java.io.InputStream $r5;
        android.graphics.Bitmap $r6;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r1 = $r2;

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r3;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(2130837505);

        $r6 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r5, null, r1);

        return $r6;
    }

    static int getIntPref(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r3;
        int i0, $i1;
        android.content.SharedPreferences r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        r2 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r3, 0);

        $i1 = interfaceinvoke r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    static void setIntPref(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r4;
        int i0;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        r2 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r4, 0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>(r1, i0);

        staticinvoke <com.android.music.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>(r3);

        return;
    }

    static void setRingtone(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        android.content.ContentResolver r1;
        android.net.Uri r2, $r8, $r14;
        android.content.ContentValues r3, $r9;
        java.lang.String r4, r6, $r15, $r17, $r21;
        android.database.Cursor r5;
        java.lang.Throwable r7, $r24;
        java.lang.String[] $r10, r26;
        java.lang.StringBuilder $r11, $r12, $r13, $r18, $r22, $r23;
        int $i2;
        java.lang.Object[] $r16;
        android.widget.Toast $r19;
        java.lang.UnsupportedOperationException $r20;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r8, l0);

     label01:
        $r9 = new android.content.ContentValues;

        specialinvoke $r9.<android.content.ContentValues: void <init>(int)>(2);

        r3 = $r9;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("is_ringtone", "1");

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("is_alarm", "1");

        virtualinvoke r1.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r2, r3, null, null);

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t set ringtone flag for id ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MusicUtils", $r21);

        return;

     label04:
        $r10 = newarray (java.lang.String)[3];

        $r10[0] = "_id";

        $r10[1] = "_data";

        $r10[2] = "title";

        r26 = $r10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id=");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r5 = staticinvoke <com.android.music.MusicUtils: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r14, r26, r4, null, null);

     label05:
        if r5 == null goto label06;

        $i2 = interfaceinvoke r5.<android.database.Cursor: int getCount()>();

        if $i2 != 1 goto label06;

        interfaceinvoke r5.<android.database.Cursor: boolean moveToFirst()>();

        $r15 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r1, "ringtone", $r15);

        $r16 = newarray (java.lang.Object)[1];

        $r17 = interfaceinvoke r5.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r16[0] = $r17;

        r6 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131165248, $r16);

        $r19 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, r6, 0);

        virtualinvoke $r19.<android.widget.Toast: void show()>();

     label06:
        if r5 == null goto label10;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label10;

     label07:
        $r24 := @caughtexception;

        r7 = $r24;

     label08:
        if r5 == null goto label09;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label09:
        throw r7;

     label10:
        return;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    static boolean updateButtonBar(android.app.Activity, int)
    {
        android.app.Activity r0;
        int i0, i1, $i2, $i3;
        android.widget.TabWidget r1;
        boolean z0, z1, $z2;
        android.content.Intent r2;
        android.view.View r3, $r4;
        java.lang.Integer $r5;
        com.android.music.MusicUtils$1 $r6;
        com.android.music.MusicUtils$2 $r7;

        r0 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        $r4 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361816);

        r1 = (android.widget.TabWidget) $r4;

        z0 = 0;

        r2 = virtualinvoke r0.<android.app.Activity: android.content.Intent getIntent()>();

        if r2 == null goto label1;

        z0 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("withtabs", 0);

     label1:
        if i0 == 0 goto label2;

        if z0 != 0 goto label3;

     label2:
        virtualinvoke r1.<android.widget.TabWidget: void setVisibility(int)>(8);

        return z0;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke r1.<android.widget.TabWidget: void setVisibility(int)>(0);

     label4:
        $i2 = virtualinvoke r1.<android.widget.TabWidget: int getChildCount()>();

        i1 = $i2 - 1;

     label5:
        if i1 < 0 goto label9;

        r3 = virtualinvoke r1.<android.widget.TabWidget: android.view.View getChildAt(int)>(i1);

        $i3 = virtualinvoke r3.<android.view.View: int getId()>();

        if $i3 != i0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        z1 = $z2;

        if z1 == 0 goto label8;

        virtualinvoke r1.<android.widget.TabWidget: void setCurrentTab(int)>(i1);

        <com.android.music.MusicUtils: int sActiveTabIndex> = i1;

     label8:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r3.<android.view.View: void setTag(java.lang.Object)>($r5);

        $r6 = new com.android.music.MusicUtils$1;

        specialinvoke $r6.<com.android.music.MusicUtils$1: void <init>(android.widget.TabWidget)>(r1);

        virtualinvoke r3.<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>($r6);

        $r7 = new com.android.music.MusicUtils$2;

        specialinvoke $r7.<com.android.music.MusicUtils$2: void <init>(android.widget.TabWidget)>(r1);

        virtualinvoke r3.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r7);

        i1 = i1 + -1;

        goto label5;

     label9:
        return z0;
    }

    static void processTabClick(android.app.Activity, android.view.View, int)
    {
        android.app.Activity r0;
        android.view.View r1, $r3;
        int i0, i1, $i2;
        android.widget.TabWidget r2;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 = virtualinvoke r1.<android.view.View: int getId()>();

        if i1 != i0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361816);

        r2 = (android.widget.TabWidget) $r3;

        staticinvoke <com.android.music.MusicUtils: void activateTab(android.app.Activity,int)>(r0, i1);

        if i1 == 2131361821 goto label2;

        $r4 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();

        $r5 = (java.lang.Integer) $r4;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        virtualinvoke r2.<android.widget.TabWidget: void setCurrentTab(int)>($i2);

        staticinvoke <com.android.music.MusicUtils: void setIntPref(android.content.Context,java.lang.String,int)>(r0, "activetab", i1);

     label2:
        return;
    }

    static void activateTab(android.app.Activity, int)
    {
        android.app.Activity r0;
        int i0;
        android.content.Intent r1, $r2, $r7, r14;
        android.net.Uri $r3, $r8, $r10, $r12;

        r0 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PICK");

        r1 = $r2;

        tableswitch(i0)
        {
            case 2131361817: goto label1;
            case 2131361818: goto label2;
            case 2131361819: goto label3;
            case 2131361820: goto label4;
            case 2131361821: goto label5;
            default: goto label6;
        };

     label1:
        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r3, "vnd.android.cursor.dir/artistalbum");

        goto label7;

     label2:
        $r12 = <android.net.Uri: android.net.Uri EMPTY>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r12, "vnd.android.cursor.dir/album");

        goto label7;

     label3:
        $r10 = <android.net.Uri: android.net.Uri EMPTY>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r10, "vnd.android.cursor.dir/track");

        goto label7;

     label4:
        $r8 = <android.net.Uri: android.net.Uri EMPTY>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r8, "vnd.android.cursor.dir/playlist");

        goto label7;

     label5:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/music/MediaPlaybackActivity");

        r14 = $r7;

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>(r14);

     label6:
        return;

     label7:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("withtabs", 1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>(r1);

        virtualinvoke r0.<android.app.Activity: void finish()>();

        virtualinvoke r0.<android.app.Activity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    static void updateNowPlaying(android.app.Activity)
    {
        android.app.Activity r0;
        android.view.View r1, $r8, $r9;
        android.content.Intent r2;
        android.widget.TextView r3, r4;
        java.lang.String r5, $r12, $r13;
        com.android.music.IMediaPlaybackService $r6, $r7, $r10, $r11;
        long $l0;
        byte $b1;
        com.android.music.MusicUtils$3 $r14;
        boolean $z1;
        android.os.RemoteException $r15;

        r0 := @parameter0: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(2131361835);

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r0.<android.app.Activity: android.content.Intent getIntent()>();

        if r2 == null goto label2;

        virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("withtabs", 0);

     label2:
        $r6 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        if $r6 == null goto label5;

        $r7 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        $l0 = interfaceinvoke $r7.<com.android.music.IMediaPlaybackService: long getAudioId()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label5;

        $r8 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131361793);

        r3 = (android.widget.TextView) $r8;

        $r9 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131361794);

        r4 = (android.widget.TextView) $r9;

        $r10 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        $r12 = interfaceinvoke $r10.<com.android.music.IMediaPlaybackService: java.lang.String getTrackName()>();

        virtualinvoke r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r12);

        $r11 = <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService>;

        r5 = interfaceinvoke $r11.<com.android.music.IMediaPlaybackService: java.lang.String getArtistName()>();

        $r13 = "<unknown>";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        r5 = virtualinvoke r0.<android.app.Activity: java.lang.String getString(int)>(2131165239);

     label3:
        virtualinvoke r4.<android.widget.TextView: void setText(java.lang.CharSequence)>(r5);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        $r14 = new com.android.music.MusicUtils$3;

        specialinvoke $r14.<com.android.music.MusicUtils$3: void <init>()>();

        virtualinvoke r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r14);

     label4:
        return;

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

     label7:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(8);

        return;

        catch android.os.RemoteException from label1 to label4 with label6;
    }

    static void setBackground(android.view.View, android.graphics.Bitmap)
    {
        android.view.View r0;
        android.graphics.Bitmap r1, r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.graphics.Bitmap$Config r2;
        android.graphics.Canvas r4, $r10;
        android.graphics.Paint r5, $r12;
        android.graphics.ColorMatrix r6, r7, $r11, $r14;
        android.graphics.ColorMatrixColorFilter r8, $r13;
        android.graphics.Matrix r9, $r16;
        android.graphics.drawable.BitmapDrawable $r17;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Bitmap;

        if r1 != null goto label1;

        virtualinvoke r0.<android.view.View: void setBackgroundResource(int)>(0);

        return;

     label1:
        i0 = virtualinvoke r0.<android.view.View: int getWidth()>();

        i1 = virtualinvoke r0.<android.view.View: int getHeight()>();

        i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f5 = (float) i0;

        $f3 = (float) i2;

        f0 = $f5 / $f3;

        $f7 = (float) i1;

        $f4 = (float) i3;

        f1 = $f7 / $f4;

        $f6 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        f2 = $f6 * 1.3F;

        r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, r2);

        $r10 = new android.graphics.Canvas;

        specialinvoke $r10.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r4 = $r10;

        $r12 = new android.graphics.Paint;

        specialinvoke $r12.<android.graphics.Paint: void <init>()>();

        r5 = $r12;

        virtualinvoke r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r5.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r11 = new android.graphics.ColorMatrix;

        specialinvoke $r11.<android.graphics.ColorMatrix: void <init>()>();

        r6 = $r11;

        virtualinvoke r6.<android.graphics.ColorMatrix: void setSaturation(float)>(0.0F);

        $r14 = new android.graphics.ColorMatrix;

        specialinvoke $r14.<android.graphics.ColorMatrix: void <init>()>();

        r7 = $r14;

        virtualinvoke r7.<android.graphics.ColorMatrix: void setScale(float,float,float,float)>(0.3F, 0.3F, 0.3F, 1.0F);

        virtualinvoke r6.<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>(r7);

        $r13 = new android.graphics.ColorMatrixColorFilter;

        specialinvoke $r13.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>(r6);

        r8 = $r13;

        virtualinvoke r5.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r8);

        $r16 = new android.graphics.Matrix;

        specialinvoke $r16.<android.graphics.Matrix: void <init>()>();

        r9 = $r16;

        $i4 = neg i2;

        $i5 = $i4 / 2;

        $f9 = (float) $i5;

        $i6 = neg i3;

        $i7 = $i6 / 2;

        $f8 = (float) $i7;

        virtualinvoke r9.<android.graphics.Matrix: void setTranslate(float,float)>($f9, $f8);

        virtualinvoke r9.<android.graphics.Matrix: boolean postRotate(float)>(10.0F);

        virtualinvoke r9.<android.graphics.Matrix: boolean postScale(float,float)>(f2, f2);

        $i8 = i0 / 2;

        $f11 = (float) $i8;

        $i9 = i1 / 2;

        $f10 = (float) $i9;

        virtualinvoke r9.<android.graphics.Matrix: boolean postTranslate(float,float)>($f11, $f10);

        virtualinvoke r4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>(r1, r9, r5);

        $r17 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r17.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r3);

        virtualinvoke r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r17);

        return;
    }

    static int getCardId(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        android.database.Cursor r2;
        int i0;
        android.net.Uri $r3;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://media/external/fs_id");

        r2 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, null, null, null, null);

        i0 = -1;

        if r2 == null goto label1;

        interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        i0 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(0);

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label1:
        return i0;
    }

    static void debugLog(java.lang.Object)
    {
        java.lang.Object r0;
        com.android.music.MusicUtils$LogEntry $r1;
        com.android.music.MusicUtils$LogEntry[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.Object;

        $r2 = <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog>;

        $i0 = <com.android.music.MusicUtils: int sLogPtr>;

        $r1 = new com.android.music.MusicUtils$LogEntry;

        specialinvoke $r1.<com.android.music.MusicUtils$LogEntry: void <init>(java.lang.Object)>(r0);

        $r2[$i0] = $r1;

        $i1 = <com.android.music.MusicUtils: int sLogPtr>;

        $i2 = $i1 + 1;

        <com.android.music.MusicUtils: int sLogPtr> = $i2;

        $i4 = <com.android.music.MusicUtils: int sLogPtr>;

        $r3 = <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog>;

        $i3 = lengthof $r3;

        if $i4 < $i3 goto label1;

        <com.android.music.MusicUtils: int sLogPtr> = 0;

     label1:
        return;
    }

    static void debugDump(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.music.MusicUtils$LogEntry r1;
        com.android.music.MusicUtils$LogEntry[] $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.io.PrintWriter;

        i0 = 0;

     label1:
        $r2 = <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog>;

        $i2 = lengthof $r2;

        if i0 >= $i2 goto label4;

        $i3 = <com.android.music.MusicUtils: int sLogPtr>;

        i1 = $i3 + i0;

        $r3 = <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog>;

        $i4 = lengthof $r3;

        if i1 < $i4 goto label2;

        $r5 = <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog>;

        $i5 = lengthof $r5;

        i1 = i1 - $i5;

     label2:
        $r4 = <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog>;

        r1 = $r4[i1];

        if r1 == null goto label3;

        virtualinvoke r1.<com.android.music.MusicUtils$LogEntry: void dump(java.io.PrintWriter)>(r0);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    static android.text.format.Time access$000()
    {
        android.text.format.Time $r0;

        $r0 = <com.android.music.MusicUtils: android.text.format.Time sTime>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r10;
        long[] $r1;
        java.lang.StringBuilder $r2, $r4;
        java.util.Formatter $r3;
        java.util.Locale $r5;
        java.lang.Object[] $r6;
        android.graphics.BitmapFactory$Options $r7, $r8, $r12, $r13, $r15, $r17;
        android.net.Uri $r9, $r16;
        android.graphics.Bitmap$Config $r11, $r14;
        com.android.music.MusicUtils$LogEntry[] $r18;
        java.lang.String $r19;
        android.text.format.Time $r20;

        <com.android.music.MusicUtils: java.lang.String TAG> = "MusicUtils";

        <com.android.music.MusicUtils: com.android.music.IMediaPlaybackService sService> = null;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.music.MusicUtils: java.util.HashMap sConnectionMap> = $r0;

        $r1 = newarray (long)[0];

        <com.android.music.MusicUtils: long[] sEmptyList> = $r1;

        <com.android.music.MusicUtils: android.content.ContentValues[] sContentValuesCache> = null;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder> = $r2;

        $r3 = new java.util.Formatter;

        $r4 = <com.android.music.MusicUtils: java.lang.StringBuilder sFormatBuilder>;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r3.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r4, $r5);

        <com.android.music.MusicUtils: java.util.Formatter sFormatter> = $r3;

        $r6 = newarray (java.lang.Object)[5];

        <com.android.music.MusicUtils: java.lang.Object[] sTimeArgs> = $r6;

        <com.android.music.MusicUtils: int sArtId> = -2;

        <com.android.music.MusicUtils: android.graphics.Bitmap mCachedBit> = null;

        $r7 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

        <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache> = $r7;

        $r8 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r8.<android.graphics.BitmapFactory$Options: void <init>()>();

        <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptions> = $r8;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://media/external/audio/albumart");

        <com.android.music.MusicUtils: android.net.Uri sArtworkUri> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        <com.android.music.MusicUtils: java.util.HashMap sArtCache> = $r10;

        <com.android.music.MusicUtils: int sArtCacheId> = -1;

        $r12 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $r11 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r12.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r11;

        $r13 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptionsCache>;

        $r13.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r15 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptions>;

        $r14 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r15.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r14;

        $r17 = <com.android.music.MusicUtils: android.graphics.BitmapFactory$Options sBitmapOptions>;

        $r17.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r16 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r19 = virtualinvoke $r16.<android.net.Uri: java.lang.String toString()>();

        <com.android.music.MusicUtils: java.lang.String sExternalMediaUri> = $r19;

        <com.android.music.MusicUtils: int sActiveTabIndex> = -1;

        $r18 = newarray (com.android.music.MusicUtils$LogEntry)[100];

        <com.android.music.MusicUtils: com.android.music.MusicUtils$LogEntry[] sMusicLog> = $r18;

        <com.android.music.MusicUtils: int sLogPtr> = 0;

        $r20 = new android.text.format.Time;

        specialinvoke $r20.<android.text.format.Time: void <init>()>();

        <com.android.music.MusicUtils: android.text.format.Time sTime> = $r20;

        return;
    }
}
