public class com.android.music.MusicPicker extends android.app.ListActivity implements android.view.View$OnClickListener, android.media.MediaPlayer$OnCompletionListener, com.android.music.MusicUtils$Defs
{
    static final boolean DBG;
    static final java.lang.String TAG;
    static final java.lang.String LIST_STATE_KEY;
    static final java.lang.String FOCUS_KEY;
    static final java.lang.String SORT_MODE_KEY;
    static final int MY_QUERY_TOKEN;
    static final int TRACK_MENU;
    static final int ALBUM_MENU;
    static final int ARTIST_MENU;
    static final java.lang.String[] CURSOR_COLS;
    static java.lang.StringBuilder sFormatBuilder;
    static java.util.Formatter sFormatter;
    static final java.lang.Object[] sTimeArgs;
    android.net.Uri mBaseUri;
    com.android.music.MusicPicker$TrackListAdapter mAdapter;
    com.android.music.MusicPicker$QueryHandler mQueryHandler;
    android.os.Parcelable mListState;
    boolean mListHasFocus;
    android.database.Cursor mCursor;
    int mSortMode;
    java.lang.String mSortOrder;
    android.view.View mProgressContainer;
    android.view.View mListContainer;
    boolean mListShown;
    android.view.View mOkayButton;
    android.view.View mCancelButton;
    long mSelectedId;
    android.net.Uri mSelectedUri;
    long mPlayingId;
    android.media.MediaPlayer mMediaPlayer;

    public void <init>()
    {
        com.android.music.MusicPicker r0;

        r0 := @this: com.android.music.MusicPicker;

        specialinvoke r0.<android.app.ListActivity: void <init>()>();

        r0.<com.android.music.MusicPicker: android.os.Parcelable mListState> = null;

        r0.<com.android.music.MusicPicker: int mSortMode> = -1;

        r0.<com.android.music.MusicPicker: long mSelectedId> = -1L;

        r0.<com.android.music.MusicPicker: long mPlayingId> = -1L;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.music.MusicPicker r0;
        android.os.Bundle r1;
        int i0, i1;
        android.widget.ListView r2;
        android.net.Uri$Builder r3;
        java.lang.String r4, $r9, $r11;
        android.net.Uri r5, $r7, $r12, $r14, $r25, $r27, $r28, $r29, $r31, $r32, $r35;
        android.os.Parcelable $r6, $r8, $r33;
        boolean $z1, $z2, $z4;
        android.content.Intent $r10, $r13, $r34;
        int[] $r15;
        com.android.music.MusicPicker$TrackListAdapter $r16, $r17;
        java.lang.String[] $r18;
        android.view.View $r19, $r21, $r22, $r23, $r24, $r26;
        com.android.music.MusicPicker$QueryHandler $r20;
        long $l3;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListActivity: void onCreate(android.os.Bundle)>(r1);

        virtualinvoke r0.<com.android.music.MusicPicker: boolean requestWindowFeature(int)>(5);

        i0 = 1;

        if r1 != null goto label1;

        $r34 = virtualinvoke r0.<com.android.music.MusicPicker: android.content.Intent getIntent()>();

        $r33 = virtualinvoke $r34.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.ringtone.EXISTING_URI");

        $r32 = (android.net.Uri) $r33;

        r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri> = $r32;

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.intent.extra.ringtone.EXISTING_URI");

        $r7 = (android.net.Uri) $r6;

        r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri> = $r7;

        $r8 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("liststate");

        r0.<com.android.music.MusicPicker: android.os.Parcelable mListState> = $r8;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("focused");

        r0.<com.android.music.MusicPicker: boolean mListHasFocus> = $z1;

        i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("sortMode", i0);

     label2:
        $r9 = "android.intent.action.GET_CONTENT";

        $r10 = virtualinvoke r0.<com.android.music.MusicPicker: android.content.Intent getIntent()>();

        $r11 = virtualinvoke $r10.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label3;

        $r35 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r0.<com.android.music.MusicPicker: android.net.Uri mBaseUri> = $r35;

        goto label4;

     label3:
        $r13 = virtualinvoke r0.<com.android.music.MusicPicker: android.content.Intent getIntent()>();

        $r12 = virtualinvoke $r13.<android.content.Intent: android.net.Uri getData()>();

        r0.<com.android.music.MusicPicker: android.net.Uri mBaseUri> = $r12;

        $r14 = r0.<com.android.music.MusicPicker: android.net.Uri mBaseUri>;

        if $r14 != null goto label4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MusicPicker", "No data URI given to PICK action");

        virtualinvoke r0.<com.android.music.MusicPicker: void finish()>();

        return;

     label4:
        virtualinvoke r0.<com.android.music.MusicPicker: void setContentView(int)>(2130903050);

        r0.<com.android.music.MusicPicker: java.lang.String mSortOrder> = "title_key";

        r2 = virtualinvoke r0.<com.android.music.MusicPicker: android.widget.ListView getListView()>();

        virtualinvoke r2.<android.widget.ListView: void setItemsCanFocus(boolean)>(0);

        $r16 = new com.android.music.MusicPicker$TrackListAdapter;

        $r18 = newarray (java.lang.String)[0];

        $r15 = newarray (int)[0];

        specialinvoke $r16.<com.android.music.MusicPicker$TrackListAdapter: void <init>(com.android.music.MusicPicker,android.content.Context,android.widget.ListView,int,java.lang.String[],int[])>(r0, r0, r2, 2130903051, $r18, $r15);

        r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$TrackListAdapter mAdapter> = $r16;

        $r17 = r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$TrackListAdapter mAdapter>;

        virtualinvoke r0.<com.android.music.MusicPicker: void setListAdapter(android.widget.ListAdapter)>($r17);

        virtualinvoke r2.<android.widget.ListView: void setTextFilterEnabled(boolean)>(1);

        virtualinvoke r2.<android.widget.ListView: void setSaveEnabled(boolean)>(0);

        $r20 = new com.android.music.MusicPicker$QueryHandler;

        specialinvoke $r20.<com.android.music.MusicPicker$QueryHandler: void <init>(com.android.music.MusicPicker,android.content.Context)>(r0, r0);

        r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$QueryHandler mQueryHandler> = $r20;

        $r19 = virtualinvoke r0.<com.android.music.MusicPicker: android.view.View findViewById(int)>(2131361828);

        r0.<com.android.music.MusicPicker: android.view.View mProgressContainer> = $r19;

        $r22 = virtualinvoke r0.<com.android.music.MusicPicker: android.view.View findViewById(int)>(2131361829);

        r0.<com.android.music.MusicPicker: android.view.View mListContainer> = $r22;

        $r21 = virtualinvoke r0.<com.android.music.MusicPicker: android.view.View findViewById(int)>(2131361830);

        r0.<com.android.music.MusicPicker: android.view.View mOkayButton> = $r21;

        $r24 = r0.<com.android.music.MusicPicker: android.view.View mOkayButton>;

        virtualinvoke $r24.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r23 = virtualinvoke r0.<com.android.music.MusicPicker: android.view.View findViewById(int)>(2131361831);

        r0.<com.android.music.MusicPicker: android.view.View mCancelButton> = $r23;

        $r26 = r0.<com.android.music.MusicPicker: android.view.View mCancelButton>;

        virtualinvoke $r26.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r27 = r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri>;

        if $r27 == null goto label6;

        $r25 = r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri>;

        r3 = virtualinvoke $r25.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r28 = r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri>;

        r4 = virtualinvoke $r28.<android.net.Uri: java.lang.String getEncodedPath()>();

        i1 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(47);

        if i1 < 0 goto label5;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label5:
        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>(r4);

        r5 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri build()>();

        $r29 = r0.<com.android.music.MusicPicker: android.net.Uri mBaseUri>;

        $z4 = virtualinvoke r5.<android.net.Uri: boolean equals(java.lang.Object)>($r29);

        if $z4 == 0 goto label6;

        $r31 = r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri>;

        $l3 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>($r31);

        r0.<com.android.music.MusicPicker: long mSelectedId> = $l3;

     label6:
        virtualinvoke r0.<com.android.music.MusicPicker: boolean setSortMode(int)>(i0);

        return;
    }

    public void onRestart()
    {
        com.android.music.MusicPicker r0;

        r0 := @this: com.android.music.MusicPicker;

        specialinvoke r0.<android.app.ListActivity: void onRestart()>();

        virtualinvoke r0.<com.android.music.MusicPicker: android.database.Cursor doQuery(boolean,java.lang.String)>(0, null);

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.android.music.MusicPicker r0;
        android.view.MenuItem r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        $z0 = virtualinvoke r0.<com.android.music.MusicPicker: boolean setSortMode(int)>($i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.app.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z1;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.android.music.MusicPicker r0;
        android.view.Menu r1;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.view.Menu;

        specialinvoke r0.<android.app.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 1, 0, 2131165279);

        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 2, 0, 2131165280);

        interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(int,int,int,int)>(0, 3, 0, 2131165281);

        return 1;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        com.android.music.MusicPicker r0;
        android.os.Bundle r1;
        android.widget.ListView $r2, $r4;
        android.os.Parcelable $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListActivity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r0.<com.android.music.MusicPicker: android.widget.ListView getListView()>();

        $r3 = virtualinvoke $r2.<android.widget.ListView: android.os.Parcelable onSaveInstanceState()>();

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("liststate", $r3);

        $r4 = virtualinvoke r0.<com.android.music.MusicPicker: android.widget.ListView getListView()>();

        $z0 = virtualinvoke $r4.<android.widget.ListView: boolean hasFocus()>();

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("focused", $z0);

        $i0 = r0.<com.android.music.MusicPicker: int mSortMode>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("sortMode", $i0);

        return;
    }

    public void onPause()
    {
        com.android.music.MusicPicker r0;

        r0 := @this: com.android.music.MusicPicker;

        specialinvoke r0.<android.app.ListActivity: void onPause()>();

        virtualinvoke r0.<com.android.music.MusicPicker: void stopMediaPlayer()>();

        return;
    }

    public void onStop()
    {
        com.android.music.MusicPicker r0;
        com.android.music.MusicPicker$TrackListAdapter $r1, $r2;

        r0 := @this: com.android.music.MusicPicker;

        specialinvoke r0.<android.app.ListActivity: void onStop()>();

        $r1 = r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$TrackListAdapter mAdapter>;

        virtualinvoke $r1.<com.android.music.MusicPicker$TrackListAdapter: void setLoading(boolean)>(1);

        $r2 = r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$TrackListAdapter mAdapter>;

        virtualinvoke $r2.<com.android.music.MusicPicker$TrackListAdapter: void changeCursor(android.database.Cursor)>(null);

        return;
    }

    boolean setSortMode(int)
    {
        com.android.music.MusicPicker r0;
        int i0, $i1;

        r0 := @this: com.android.music.MusicPicker;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.music.MusicPicker: int mSortMode>;

        if i0 == $i1 goto label4;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        r0.<com.android.music.MusicPicker: int mSortMode> = i0;

        r0.<com.android.music.MusicPicker: java.lang.String mSortOrder> = "title_key";

        virtualinvoke r0.<com.android.music.MusicPicker: android.database.Cursor doQuery(boolean,java.lang.String)>(0, null);

        return 1;

     label2:
        r0.<com.android.music.MusicPicker: int mSortMode> = i0;

        r0.<com.android.music.MusicPicker: java.lang.String mSortOrder> = "album_key ASC, track ASC, title_key ASC";

        virtualinvoke r0.<com.android.music.MusicPicker: android.database.Cursor doQuery(boolean,java.lang.String)>(0, null);

        return 1;

     label3:
        r0.<com.android.music.MusicPicker: int mSortMode> = i0;

        r0.<com.android.music.MusicPicker: java.lang.String mSortOrder> = "artist_key ASC, album_key ASC, track ASC, title_key ASC";

        virtualinvoke r0.<com.android.music.MusicPicker: android.database.Cursor doQuery(boolean,java.lang.String)>(0, null);

        return 1;

     label4:
        return 0;
    }

    void makeListShown()
    {
        com.android.music.MusicPicker r0;
        boolean $z0;
        android.view.View $r1, $r3, $r4, $r6;
        android.view.animation.Animation $r2, $r5;

        r0 := @this: com.android.music.MusicPicker;

        $z0 = r0.<com.android.music.MusicPicker: boolean mListShown>;

        if $z0 != 0 goto label1;

        r0.<com.android.music.MusicPicker: boolean mListShown> = 1;

        $r1 = r0.<com.android.music.MusicPicker: android.view.View mProgressContainer>;

        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432577);

        virtualinvoke $r1.<android.view.View: void startAnimation(android.view.animation.Animation)>($r2);

        $r3 = r0.<com.android.music.MusicPicker: android.view.View mProgressContainer>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r4 = r0.<com.android.music.MusicPicker: android.view.View mListContainer>;

        $r5 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432576);

        virtualinvoke $r4.<android.view.View: void startAnimation(android.view.animation.Animation)>($r5);

        $r6 = r0.<com.android.music.MusicPicker: android.view.View mListContainer>;

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(0);

     label1:
        return;
    }

    android.database.Cursor doQuery(boolean, java.lang.String)
    {
        com.android.music.MusicPicker r0;
        boolean z0, $z1;
        java.lang.String r1, $r11, $r13, $r14, $r17, $r20;
        java.lang.StringBuilder r2, $r6;
        android.net.Uri r3;
        com.android.music.MusicPicker$QueryHandler $r5, $r9;
        com.android.music.MusicPicker$TrackListAdapter $r8;
        java.lang.String[] $r10, $r15;
        android.content.ContentResolver $r12;
        android.database.Cursor $r16;
        android.net.Uri$Builder $r18, $r19;
        java.lang.UnsupportedOperationException $r21;

        r0 := @this: com.android.music.MusicPicker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r5 = r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$QueryHandler mQueryHandler>;

        virtualinvoke $r5.<com.android.music.MusicPicker$QueryHandler: void cancelOperation(int)>(42);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = $r6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title != \'\'");

        r3 = r0.<com.android.music.MusicPicker: android.net.Uri mBaseUri>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label1;

        $r18 = virtualinvoke r3.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r20 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("filter", $r20);

        r3 = virtualinvoke $r19.<android.net.Uri$Builder: android.net.Uri build()>();

     label1:
        if z0 == 0 goto label5;

     label2:
        $r12 = virtualinvoke r0.<com.android.music.MusicPicker: android.content.ContentResolver getContentResolver()>();

        $r15 = <com.android.music.MusicPicker: java.lang.String[] CURSOR_COLS>;

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = r0.<com.android.music.MusicPicker: java.lang.String mSortOrder>;

        $r16 = virtualinvoke $r12.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r3, $r15, $r14, null, $r17);

     label3:
        return $r16;

     label4:
        $r21 := @caughtexception;

        goto label6;

     label5:
        $r8 = r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$TrackListAdapter mAdapter>;

        virtualinvoke $r8.<com.android.music.MusicPicker$TrackListAdapter: void setLoading(boolean)>(1);

        virtualinvoke r0.<com.android.music.MusicPicker: void setProgressBarIndeterminateVisibility(boolean)>(1);

        $r9 = r0.<com.android.music.MusicPicker: com.android.music.MusicPicker$QueryHandler mQueryHandler>;

        $r10 = <com.android.music.MusicPicker: java.lang.String[] CURSOR_COLS>;

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<com.android.music.MusicPicker: java.lang.String mSortOrder>;

        virtualinvoke $r9.<com.android.music.MusicPicker$QueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(42, null, r3, $r10, $r11, null, $r13);

     label6:
        return null;

        catch java.lang.UnsupportedOperationException from label2 to label3 with label4;
    }

    protected void onListItemClick(android.widget.ListView, android.view.View, int, long)
    {
        com.android.music.MusicPicker r0;
        android.widget.ListView r1;
        android.view.View r2;
        int i0;
        long l1;
        android.database.Cursor $r3, $r4;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.widget.ListView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r3 = r0.<com.android.music.MusicPicker: android.database.Cursor mCursor>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToPosition(int)>(i0);

        $r4 = r0.<com.android.music.MusicPicker: android.database.Cursor mCursor>;

        virtualinvoke r0.<com.android.music.MusicPicker: void setSelected(android.database.Cursor)>($r4);

        return;
    }

    void setSelected(android.database.Cursor)
    {
        com.android.music.MusicPicker r0;
        android.database.Cursor r1, $r4, $r5;
        android.net.Uri r2, $r6, $r8;
        long l0, $l2;
        java.io.IOException r3, $r18;
        int $i1;
        byte $b3;
        android.media.MediaPlayer $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r17;
        android.widget.ListView $r15, $r16;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.database.Cursor;

        r2 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r5 = r0.<com.android.music.MusicPicker: android.database.Cursor mCursor>;

        $r4 = r0.<com.android.music.MusicPicker: android.database.Cursor mCursor>;

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        l0 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>($i1);

        $r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r2, l0);

        r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri> = $r6;

        r0.<com.android.music.MusicPicker: long mSelectedId> = l0;

        $l2 = r0.<com.android.music.MusicPicker: long mPlayingId>;

        $b3 = l0 cmp $l2;

        if $b3 != 0 goto label1;

        $r14 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        if $r14 != null goto label5;

     label1:
        virtualinvoke r0.<com.android.music.MusicPicker: void stopMediaPlayer()>();

        $r7 = new android.media.MediaPlayer;

        specialinvoke $r7.<android.media.MediaPlayer: void <init>()>();

        r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer> = $r7;

     label2:
        $r9 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        $r8 = r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri>;

        virtualinvoke $r9.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>(r0, $r8);

        $r11 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r11.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>(r0);

        $r10 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r10.<android.media.MediaPlayer: void setAudioStreamType(int)>(2);

        $r13 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r13.<android.media.MediaPlayer: void prepare()>();

        $r12 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r12.<android.media.MediaPlayer: void start()>();

        r0.<com.android.music.MusicPicker: long mPlayingId> = l0;

        $r15 = virtualinvoke r0.<com.android.music.MusicPicker: android.widget.ListView getListView()>();

        virtualinvoke $r15.<android.widget.ListView: void invalidateViews()>();

     label3:
        goto label6;

     label4:
        $r18 := @caughtexception;

        r3 = $r18;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MusicPicker", "Unable to play track", r3);

        goto label6;

     label5:
        $r17 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        if $r17 == null goto label6;

        virtualinvoke r0.<com.android.music.MusicPicker: void stopMediaPlayer()>();

        $r16 = virtualinvoke r0.<com.android.music.MusicPicker: android.widget.ListView getListView()>();

        virtualinvoke $r16.<android.widget.ListView: void invalidateViews()>();

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void onCompletion(android.media.MediaPlayer)
    {
        com.android.music.MusicPicker r0;
        android.media.MediaPlayer r1, $r2;
        android.widget.ListView $r3;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.media.MediaPlayer;

        $r2 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        if $r2 != r1 goto label1;

        virtualinvoke r1.<android.media.MediaPlayer: void stop()>();

        virtualinvoke r1.<android.media.MediaPlayer: void release()>();

        r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer> = null;

        r0.<com.android.music.MusicPicker: long mPlayingId> = -1L;

        $r3 = virtualinvoke r0.<com.android.music.MusicPicker: android.widget.ListView getListView()>();

        virtualinvoke $r3.<android.widget.ListView: void invalidateViews()>();

     label1:
        return;
    }

    void stopMediaPlayer()
    {
        com.android.music.MusicPicker r0;
        android.media.MediaPlayer $r1, $r2, $r3;

        r0 := @this: com.android.music.MusicPicker;

        $r1 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void stop()>();

        $r3 = r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

        r0.<com.android.music.MusicPicker: android.media.MediaPlayer mMediaPlayer> = null;

        r0.<com.android.music.MusicPicker: long mPlayingId> = -1L;

     label1:
        return;
    }

    public void onClick(android.view.View)
    {
        com.android.music.MusicPicker r0;
        android.view.View r1;
        int $i0;
        long $l1;
        byte $b2;
        android.content.Intent $r2, $r4;
        android.net.Uri $r3;

        r0 := @this: com.android.music.MusicPicker;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getId()>();

        lookupswitch($i0)
        {
            case 2131361830: goto label1;
            case 2131361831: goto label2;
            default: goto label3;
        };

     label1:
        $l1 = r0.<com.android.music.MusicPicker: long mSelectedId>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label3;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        $r3 = r0.<com.android.music.MusicPicker: android.net.Uri mSelectedUri>;

        $r4 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r3);

        virtualinvoke r0.<com.android.music.MusicPicker: void setResult(int,android.content.Intent)>(-1, $r4);

        virtualinvoke r0.<com.android.music.MusicPicker: void finish()>();

        goto label3;

     label2:
        virtualinvoke r0.<com.android.music.MusicPicker: void finish()>();

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.StringBuilder $r1, $r3;
        java.util.Formatter $r2;
        java.util.Locale $r4;
        java.lang.Object[] $r5;

        <com.android.music.MusicPicker: int ARTIST_MENU> = 3;

        <com.android.music.MusicPicker: int ALBUM_MENU> = 2;

        <com.android.music.MusicPicker: int TRACK_MENU> = 1;

        <com.android.music.MusicPicker: int MY_QUERY_TOKEN> = 42;

        <com.android.music.MusicPicker: java.lang.String SORT_MODE_KEY> = "sortMode";

        <com.android.music.MusicPicker: java.lang.String FOCUS_KEY> = "focused";

        <com.android.music.MusicPicker: java.lang.String LIST_STATE_KEY> = "liststate";

        <com.android.music.MusicPicker: java.lang.String TAG> = "MusicPicker";

        <com.android.music.MusicPicker: boolean DBG> = 0;

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r0[2] = "title_key";

        $r0[3] = "_data";

        $r0[4] = "album";

        $r0[5] = "artist";

        $r0[6] = "artist_id";

        $r0[7] = "duration";

        $r0[8] = "track";

        <com.android.music.MusicPicker: java.lang.String[] CURSOR_COLS> = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        <com.android.music.MusicPicker: java.lang.StringBuilder sFormatBuilder> = $r1;

        $r2 = new java.util.Formatter;

        $r3 = <com.android.music.MusicPicker: java.lang.StringBuilder sFormatBuilder>;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r2.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r3, $r4);

        <com.android.music.MusicPicker: java.util.Formatter sFormatter> = $r2;

        $r5 = newarray (java.lang.Object)[5];

        <com.android.music.MusicPicker: java.lang.Object[] sTimeArgs> = $r5;

        return;
    }
}
