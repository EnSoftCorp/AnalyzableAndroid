public class com.android.music.TouchInterceptor extends android.widget.ListView
{
    private android.widget.ImageView mDragView;
    private android.view.WindowManager mWindowManager;
    private android.view.WindowManager$LayoutParams mWindowParams;
    private int mDragPos;
    private int mSrcDragPos;
    private int mDragPointX;
    private int mDragPointY;
    private int mXOffset;
    private int mYOffset;
    private com.android.music.TouchInterceptor$DragListener mDragListener;
    private com.android.music.TouchInterceptor$DropListener mDropListener;
    private com.android.music.TouchInterceptor$RemoveListener mRemoveListener;
    private int mUpperBound;
    private int mLowerBound;
    private int mHeight;
    private android.view.GestureDetector mGestureDetector;
    private static final int FLING;
    private static final int SLIDE;
    private static final int TRASH;
    private int mRemoveMode;
    private android.graphics.Rect mTempRect;
    private android.graphics.Bitmap mDragBitmap;
    private final int mTouchSlop;
    private int mItemHeightNormal;
    private int mItemHeightExpanded;
    private int mItemHeightHalf;
    private android.graphics.drawable.Drawable mTrashcan;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.music.TouchInterceptor r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.SharedPreferences r3;
        android.content.res.Resources r4;
        android.graphics.Rect $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewConfiguration $r6;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.music.TouchInterceptor: int mRemoveMode> = -1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.music.TouchInterceptor: android.graphics.Rect mTempRect> = $r5;

        r3 = virtualinvoke r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("Music", 3);

        $i0 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("deletemode", -1);

        r0.<com.android.music.TouchInterceptor: int mRemoveMode> = $i0;

        $r6 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i1 = virtualinvoke $r6.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.music.TouchInterceptor: int mTouchSlop> = $i1;

        r4 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131099648);

        r0.<com.android.music.TouchInterceptor: int mItemHeightNormal> = $i2;

        $i3 = r0.<com.android.music.TouchInterceptor: int mItemHeightNormal>;

        $i4 = $i3 / 2;

        r0.<com.android.music.TouchInterceptor: int mItemHeightHalf> = $i4;

        $i5 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131099649);

        r0.<com.android.music.TouchInterceptor: int mItemHeightExpanded> = $i5;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.music.TouchInterceptor r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.view.ViewGroup r2;
        android.graphics.Bitmap r3, $r7;
        com.android.music.TouchInterceptor$RemoveListener $r4;
        com.android.music.TouchInterceptor$DragListener $r5;
        float $f0, $f1, $f2, $f3;
        android.view.View $r6;
        boolean $z0;
        android.view.GestureDetector $r8, $r11;
        com.android.music.TouchInterceptor$DropListener $r9;
        com.android.music.TouchInterceptor$1 $r10;
        android.content.Context $r12;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: android.view.MotionEvent;

        $r4 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$RemoveListener mRemoveListener>;

        if $r4 == null goto label1;

        $r8 = r0.<com.android.music.TouchInterceptor: android.view.GestureDetector mGestureDetector>;

        if $r8 != null goto label1;

        $i25 = r0.<com.android.music.TouchInterceptor: int mRemoveMode>;

        if $i25 != 0 goto label1;

        $r11 = new android.view.GestureDetector;

        $r12 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.content.Context getContext()>();

        $r10 = new com.android.music.TouchInterceptor$1;

        specialinvoke $r10.<com.android.music.TouchInterceptor$1: void <init>(com.android.music.TouchInterceptor)>(r0);

        specialinvoke $r11.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r12, $r10);

        r0.<com.android.music.TouchInterceptor: android.view.GestureDetector mGestureDetector> = $r11;

     label1:
        $r5 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DragListener mDragListener>;

        if $r5 != null goto label2;

        $r9 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DropListener mDropListener>;

        if $r9 == null goto label6;

     label2:
        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i4)
        {
            case 0: goto label3;
            default: goto label6;
        };

     label3:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        i2 = virtualinvoke r0.<com.android.music.TouchInterceptor: int pointToPosition(int,int)>(i0, i1);

        if i2 != -1 goto label4;

        goto label6;

     label4:
        $i5 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getFirstVisiblePosition()>();

        $i6 = i2 - $i5;

        $r6 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>($i6);

        r2 = (android.view.ViewGroup) $r6;

        $i7 = virtualinvoke r2.<android.view.ViewGroup: int getLeft()>();

        $i9 = i0 - $i7;

        r0.<com.android.music.TouchInterceptor: int mDragPointX> = $i9;

        $i8 = virtualinvoke r2.<android.view.ViewGroup: int getTop()>();

        $i10 = i1 - $i8;

        r0.<com.android.music.TouchInterceptor: int mDragPointY> = $i10;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $i12 = (int) $f2;

        $i11 = $i12 - i0;

        r0.<com.android.music.TouchInterceptor: int mXOffset> = $i11;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $i13 = (int) $f3;

        $i14 = $i13 - i1;

        r0.<com.android.music.TouchInterceptor: int mYOffset> = $i14;

        if i0 >= 64 goto label5;

        virtualinvoke r2.<android.view.ViewGroup: void setDrawingCacheEnabled(boolean)>(1);

        $r7 = virtualinvoke r2.<android.view.ViewGroup: android.graphics.Bitmap getDrawingCache()>();

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>($r7);

        specialinvoke r0.<com.android.music.TouchInterceptor: void startDragging(android.graphics.Bitmap,int,int)>(r3, i0, i1);

        r0.<com.android.music.TouchInterceptor: int mDragPos> = i2;

        $i16 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        r0.<com.android.music.TouchInterceptor: int mSrcDragPos> = $i16;

        $i15 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getHeight()>();

        r0.<com.android.music.TouchInterceptor: int mHeight> = $i15;

        i3 = r0.<com.android.music.TouchInterceptor: int mTouchSlop>;

        $i17 = i1 - i3;

        $i19 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i20 = $i19 / 3;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i20);

        r0.<com.android.music.TouchInterceptor: int mUpperBound> = $i18;

        $i22 = i1 + i3;

        $i23 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i24 = $i23 * 2;

        $i21 = $i24 / 3;

        $i26 = staticinvoke <java.lang.Math: int max(int,int)>($i22, $i21);

        r0.<com.android.music.TouchInterceptor: int mLowerBound> = $i26;

        return 0;

     label5:
        specialinvoke r0.<com.android.music.TouchInterceptor: void stopDragging()>();

     label6:
        $z0 = specialinvoke r0.<android.widget.ListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    private int myPointToPosition(int, int)
    {
        com.android.music.TouchInterceptor r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r1;
        boolean $z0;
        android.graphics.Rect r2;

        r0 := @this: com.android.music.TouchInterceptor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= 0 goto label1;

        $i7 = r0.<com.android.music.TouchInterceptor: int mItemHeightNormal>;

        $i8 = i1 + $i7;

        i2 = specialinvoke r0.<com.android.music.TouchInterceptor: int myPointToPosition(int,int)>(i0, $i8);

        if i2 <= 0 goto label1;

        $i9 = i2 - 1;

        return $i9;

     label1:
        r2 = r0.<com.android.music.TouchInterceptor: android.graphics.Rect mTempRect>;

        i3 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getChildCount()>();

        i4 = i3 - 1;

     label2:
        if i4 < 0 goto label4;

        r1 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>(i4);

        virtualinvoke r1.<android.view.View: void getHitRect(android.graphics.Rect)>(r2);

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z0 == 0 goto label3;

        $i5 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getFirstVisiblePosition()>();

        $i6 = $i5 + i4;

        return $i6;

     label3:
        i4 = i4 + -1;

        goto label2;

     label4:
        return -1;
    }

    private int getItemForPosition(int)
    {
        com.android.music.TouchInterceptor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.music.TouchInterceptor;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.music.TouchInterceptor: int mDragPointY>;

        $i5 = i0 - $i3;

        $i4 = r0.<com.android.music.TouchInterceptor: int mItemHeightHalf>;

        i1 = $i5 - $i4;

        i2 = specialinvoke r0.<com.android.music.TouchInterceptor: int myPointToPosition(int,int)>(0, i1);

        if i2 < 0 goto label1;

        $i6 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        if i2 > $i6 goto label2;

        i2 = i2 + 1;

        goto label2;

     label1:
        if i1 >= 0 goto label2;

        i2 = 0;

     label2:
        return i2;
    }

    private void adjustScrollBounds(int)
    {
        com.android.music.TouchInterceptor r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: com.android.music.TouchInterceptor;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i2 = $i1 / 3;

        if i0 < $i2 goto label1;

        $i9 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i10 = $i9 / 3;

        r0.<com.android.music.TouchInterceptor: int mUpperBound> = $i10;

     label1:
        $i3 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i4 = $i3 * 2;

        $i5 = $i4 / 3;

        if i0 > $i5 goto label2;

        $i6 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i7 = $i6 * 2;

        $i8 = $i7 / 3;

        r0.<com.android.music.TouchInterceptor: int mLowerBound> = $i8;

     label2:
        return;
    }

    private void unExpandViews(boolean)
    {
        com.android.music.TouchInterceptor r0;
        boolean z0;
        int i0, i1, i2, $i3;
        android.view.View r1, $r2;
        android.widget.ListAdapter $r3;
        java.lang.IllegalStateException $r4;
        android.view.ViewGroup$LayoutParams r6;

        r0 := @this: com.android.music.TouchInterceptor;

        z0 := @parameter0: boolean;

        i0 = 0;

     label1:
        r1 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>(i0);

        if r1 != null goto label6;

        if z0 == 0 goto label2;

        i1 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getFirstVisiblePosition()>();

        $r2 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $r3 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.widget.ListAdapter getAdapter()>();

        virtualinvoke r0.<com.android.music.TouchInterceptor: void setAdapter(android.widget.ListAdapter)>($r3);

        virtualinvoke r0.<com.android.music.TouchInterceptor: void setSelectionFromTop(int,int)>(i1, i2);

     label2:
        virtualinvoke r0.<com.android.music.TouchInterceptor: void layoutChildren()>();

        r1 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>(i0);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        if r1 != null goto label6;

        return;

     label6:
        r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i3 = r0.<com.android.music.TouchInterceptor: int mItemHeightNormal>;

        r6.<android.view.ViewGroup$LayoutParams: int height> = $i3;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r6);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        i0 = i0 + 1;

        goto label1;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

    private void doExpansion()
    {
        com.android.music.TouchInterceptor r0;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.view.View r1, r2;
        byte b4;
        android.view.ViewGroup$LayoutParams r3;
        boolean $z0, $z1;

        r0 := @this: com.android.music.TouchInterceptor;

        $i5 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        $i6 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getFirstVisiblePosition()>();

        i0 = $i5 - $i6;

        $i8 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        $i7 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        if $i8 <= $i7 goto label01;

        i0 = i0 + 1;

     label01:
        i1 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getHeaderViewsCount()>();

        $i9 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        $i10 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getFirstVisiblePosition()>();

        $i11 = $i9 - $i10;

        r1 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>($i11);

        i2 = 0;

     label02:
        r2 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>(i2);

        if r2 != null goto label03;

        goto label10;

     label03:
        i3 = r0.<com.android.music.TouchInterceptor: int mItemHeightNormal>;

        b4 = 0;

        $i12 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        if $i12 >= i1 goto label05;

        if i2 != i1 goto label05;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label04;

        b4 = 4;

        goto label09;

     label04:
        i3 = r0.<com.android.music.TouchInterceptor: int mItemHeightExpanded>;

        goto label09;

     label05:
        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label08;

        $i17 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        $i18 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        if $i17 == $i18 goto label06;

        $i20 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getPositionForView(android.view.View)>(r2);

        $i19 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getCount()>();

        $i21 = $i19 - 1;

        if $i20 != $i21 goto label07;

     label06:
        b4 = 4;

        goto label09;

     label07:
        i3 = 1;

        goto label09;

     label08:
        if i2 != i0 goto label09;

        $i14 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        if $i14 < i1 goto label09;

        $i13 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        $i16 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getCount()>();

        $i15 = $i16 - 1;

        if $i13 >= $i15 goto label09;

        i3 = r0.<com.android.music.TouchInterceptor: int mItemHeightExpanded>;

     label09:
        r3 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3.<android.view.ViewGroup$LayoutParams: int height> = i3;

        virtualinvoke r2.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(b4);

        i2 = i2 + 1;

        goto label02;

     label10:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.music.TouchInterceptor r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33;
        android.graphics.Rect r2;
        byte b4, $b14, $b22, $b28;
        android.view.GestureDetector $r3, $r15;
        com.android.music.TouchInterceptor$DragListener $r4, $r11, $r14;
        android.widget.ImageView $r5, $r6;
        boolean $z0;
        com.android.music.TouchInterceptor$DropListener $r7, $r8, $r13;
        float $f0, $f1, $f2, $f3;
        com.android.music.TouchInterceptor$RemoveListener $r9, $r10;
        android.view.View $r12;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.music.TouchInterceptor: android.view.GestureDetector mGestureDetector>;

        if $r3 == null goto label01;

        $r15 = r0.<com.android.music.TouchInterceptor: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r15.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

     label01:
        $r4 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DragListener mDragListener>;

        if $r4 != null goto label02;

        $r13 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DropListener mDropListener>;

        if $r13 == null goto label19;

     label02:
        $r5 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        if $r5 == null goto label19;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch(i0)
        {
            case 0: goto label07;
            case 1: goto label03;
            case 2: goto label07;
            case 3: goto label03;
            default: goto label18;
        };

     label03:
        r2 = r0.<com.android.music.TouchInterceptor: android.graphics.Rect mTempRect>;

        $r6 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        virtualinvoke $r6.<android.widget.ImageView: void getDrawingRect(android.graphics.Rect)>(r2);

        specialinvoke r0.<com.android.music.TouchInterceptor: void stopDragging()>();

        $i5 = r0.<com.android.music.TouchInterceptor: int mRemoveMode>;

        if $i5 != 1 goto label05;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i11 = r2.<android.graphics.Rect: int right>;

        $i13 = $i11 * 3;

        $i12 = $i13 / 4;

        $f1 = (float) $i12;

        $b14 = $f0 cmpl $f1;

        if $b14 <= 0 goto label05;

        $r9 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$RemoveListener mRemoveListener>;

        if $r9 == null goto label04;

        $r10 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$RemoveListener mRemoveListener>;

        $i15 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        interfaceinvoke $r10.<com.android.music.TouchInterceptor$RemoveListener: void remove(int)>($i15);

     label04:
        specialinvoke r0.<com.android.music.TouchInterceptor: void unExpandViews(boolean)>(1);

        goto label18;

     label05:
        $r7 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DropListener mDropListener>;

        if $r7 == null goto label06;

        $i7 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        if $i7 < 0 goto label06;

        $i6 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        $i9 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getCount()>();

        if $i6 >= $i9 goto label06;

        $r8 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DropListener mDropListener>;

        $i10 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        $i8 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        interfaceinvoke $r8.<com.android.music.TouchInterceptor$DropListener: void drop(int,int)>($i10, $i8);

     label06:
        specialinvoke r0.<com.android.music.TouchInterceptor: void unExpandViews(boolean)>(0);

        goto label18;

     label07:
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f2;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = (int) $f3;

        specialinvoke r0.<com.android.music.TouchInterceptor: void dragView(int,int)>(i1, i2);

        i3 = specialinvoke r0.<com.android.music.TouchInterceptor: int getItemForPosition(int)>(i2);

        if i3 < 0 goto label18;

        if i0 == 0 goto label08;

        $i32 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        if i3 == $i32 goto label10;

     label08:
        $r11 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DragListener mDragListener>;

        if $r11 == null goto label09;

        $r14 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DragListener mDragListener>;

        $i33 = r0.<com.android.music.TouchInterceptor: int mDragPos>;

        interfaceinvoke $r14.<com.android.music.TouchInterceptor$DragListener: void drag(int,int)>($i33, i3);

     label09:
        r0.<com.android.music.TouchInterceptor: int mDragPos> = i3;

        specialinvoke r0.<com.android.music.TouchInterceptor: void doExpansion()>();

     label10:
        b4 = 0;

        specialinvoke r0.<com.android.music.TouchInterceptor: void adjustScrollBounds(int)>(i2);

        $i16 = r0.<com.android.music.TouchInterceptor: int mLowerBound>;

        if i2 <= $i16 goto label14;

        $i26 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getLastVisiblePosition()>();

        $i27 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getCount()>();

        $i24 = $i27 - 1;

        if $i26 >= $i24 goto label13;

        $i31 = r0.<com.android.music.TouchInterceptor: int mHeight>;

        $i25 = r0.<com.android.music.TouchInterceptor: int mLowerBound>;

        $i30 = $i31 + $i25;

        $i29 = $i30 / 2;

        if i2 <= $i29 goto label11;

        $b28 = 16;

        goto label12;

     label11:
        $b28 = 4;

     label12:
        b4 = $b28;

        goto label17;

     label13:
        b4 = 1;

        goto label17;

     label14:
        $i19 = r0.<com.android.music.TouchInterceptor: int mUpperBound>;

        if i2 >= $i19 goto label17;

        $i20 = r0.<com.android.music.TouchInterceptor: int mUpperBound>;

        $i17 = $i20 / 2;

        if i2 >= $i17 goto label15;

        $b22 = -16;

        goto label16;

     label15:
        $b22 = -4;

     label16:
        b4 = $b22;

        $i18 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getFirstVisiblePosition()>();

        if $i18 != 0 goto label17;

        $r12 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.view.View getChildAt(int)>(0);

        $i23 = virtualinvoke $r12.<android.view.View: int getTop()>();

        $i21 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getPaddingTop()>();

        if $i23 < $i21 goto label17;

        b4 = 0;

     label17:
        if b4 == 0 goto label18;

        virtualinvoke r0.<com.android.music.TouchInterceptor: void smoothScrollBy(int,int)>(b4, 30);

     label18:
        return 1;

     label19:
        $z0 = specialinvoke r0.<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    private void startDragging(android.graphics.Bitmap, int, int)
    {
        com.android.music.TouchInterceptor r0;
        android.graphics.Bitmap r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.Context r2;
        android.widget.ImageView r3, $r14;
        android.view.WindowManager$LayoutParams $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15;
        java.lang.Object $r13;
        android.view.WindowManager $r16, $r17;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.music.TouchInterceptor: void stopDragging()>();

        $r4 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r4.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams> = $r4;

        $r5 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r5.<android.view.WindowManager$LayoutParams: int gravity> = 51;

        $r6 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $i2 = r0.<com.android.music.TouchInterceptor: int mDragPointX>;

        $i4 = i0 - $i2;

        $i3 = r0.<com.android.music.TouchInterceptor: int mXOffset>;

        $i5 = $i4 + $i3;

        $r6.<android.view.WindowManager$LayoutParams: int x> = $i5;

        $r7 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $i6 = r0.<com.android.music.TouchInterceptor: int mDragPointY>;

        $i8 = i1 - $i6;

        $i7 = r0.<com.android.music.TouchInterceptor: int mYOffset>;

        $i9 = $i8 + $i7;

        $r7.<android.view.WindowManager$LayoutParams: int y> = $i9;

        $r9 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r9.<android.view.WindowManager$LayoutParams: int height> = -2;

        $r8 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r8.<android.view.WindowManager$LayoutParams: int width> = -2;

        $r11 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r11.<android.view.WindowManager$LayoutParams: int flags> = 920;

        $r10 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r10.<android.view.WindowManager$LayoutParams: int format> = -3;

        $r12 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r12.<android.view.WindowManager$LayoutParams: int windowAnimations> = 0;

        r2 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.content.Context getContext()>();

        $r14 = new android.widget.ImageView;

        specialinvoke $r14.<android.widget.ImageView: void <init>(android.content.Context)>(r2);

        r3 = $r14;

        virtualinvoke r3.<android.widget.ImageView: void setBackgroundResource(int)>(2130837591);

        virtualinvoke r3.<android.widget.ImageView: void setPadding(int,int,int,int)>(0, 0, 0, 0);

        virtualinvoke r3.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r1);

        r0.<com.android.music.TouchInterceptor: android.graphics.Bitmap mDragBitmap> = r1;

        $r13 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r16 = (android.view.WindowManager) $r13;

        r0.<com.android.music.TouchInterceptor: android.view.WindowManager mWindowManager> = $r16;

        $r17 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager mWindowManager>;

        $r15 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r17.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r3, $r15);

        r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView> = r3;

        return;
    }

    private void dragView(int, int)
    {
        com.android.music.TouchInterceptor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;
        float f0, $f1, $f2;
        android.view.WindowManager$LayoutParams $r1, $r2, $r3, $r11, $r13;
        android.view.WindowManager $r4;
        android.widget.ImageView $r5, $r6, $r12;
        android.graphics.drawable.Drawable $r7, $r8, $r9, $r10;

        r0 := @this: com.android.music.TouchInterceptor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<com.android.music.TouchInterceptor: int mRemoveMode>;

        if $i3 != 1 goto label2;

        f0 = 1.0F;

        $r12 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        i2 = virtualinvoke $r12.<android.widget.ImageView: int getWidth()>();

        $i19 = i2 / 2;

        if i0 <= $i19 goto label1;

        $i18 = i2 - i0;

        $f1 = (float) $i18;

        $i20 = i2 / 2;

        $f2 = (float) $i20;

        f0 = $f1 / $f2;

     label1:
        $r13 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r13.<android.view.WindowManager$LayoutParams: float alpha> = f0;

     label2:
        $i4 = r0.<com.android.music.TouchInterceptor: int mRemoveMode>;

        if $i4 == 0 goto label3;

        $i17 = r0.<com.android.music.TouchInterceptor: int mRemoveMode>;

        if $i17 != 2 goto label4;

     label3:
        $r1 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $i5 = r0.<com.android.music.TouchInterceptor: int mDragPointX>;

        $i7 = i0 - $i5;

        $i6 = r0.<com.android.music.TouchInterceptor: int mXOffset>;

        $i8 = $i7 + $i6;

        $r1.<android.view.WindowManager$LayoutParams: int x> = $i8;

        goto label5;

     label4:
        $r11 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $r11.<android.view.WindowManager$LayoutParams: int x> = 0;

     label5:
        $r3 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        $i9 = r0.<com.android.music.TouchInterceptor: int mDragPointY>;

        $i11 = i1 - $i9;

        $i10 = r0.<com.android.music.TouchInterceptor: int mYOffset>;

        $i12 = $i11 + $i10;

        $r3.<android.view.WindowManager$LayoutParams: int y> = $i12;

        $r4 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager mWindowManager>;

        $r5 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        $r2 = r0.<com.android.music.TouchInterceptor: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r4.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r5, $r2);

        $r7 = r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan>;

        if $r7 == null goto label8;

        $r6 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        i21 = virtualinvoke $r6.<android.widget.ImageView: int getWidth()>();

        $i13 = virtualinvoke r0.<com.android.music.TouchInterceptor: int getHeight()>();

        $i15 = $i13 * 3;

        $i14 = $i15 / 4;

        if i1 <= $i14 goto label6;

        $r10 = r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: boolean setLevel(int)>(2);

        goto label8;

     label6:
        if i21 <= 0 goto label7;

        $i16 = i21 / 4;

        if i0 <= $i16 goto label7;

        $r9 = r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: boolean setLevel(int)>(1);

        goto label8;

     label7:
        $r8 = r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: boolean setLevel(int)>(0);

     label8:
        return;
    }

    private void stopDragging()
    {
        com.android.music.TouchInterceptor r0;
        android.view.WindowManager r1;
        android.widget.ImageView $r2, $r7, $r10, $r11;
        android.graphics.Bitmap $r3, $r6;
        android.graphics.drawable.Drawable $r4, $r5;
        android.content.Context $r8;
        java.lang.Object $r9;

        r0 := @this: com.android.music.TouchInterceptor;

        $r2 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        if $r2 == null goto label1;

        $r7 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        virtualinvoke $r7.<android.widget.ImageView: void setVisibility(int)>(8);

        $r8 = virtualinvoke r0.<com.android.music.TouchInterceptor: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r1 = (android.view.WindowManager) $r9;

        $r10 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        interfaceinvoke r1.<android.view.WindowManager: void removeView(android.view.View)>($r10);

        $r11 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        virtualinvoke $r11.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView> = null;

     label1:
        $r3 = r0.<com.android.music.TouchInterceptor: android.graphics.Bitmap mDragBitmap>;

        if $r3 == null goto label2;

        $r6 = r0.<com.android.music.TouchInterceptor: android.graphics.Bitmap mDragBitmap>;

        virtualinvoke $r6.<android.graphics.Bitmap: void recycle()>();

        r0.<com.android.music.TouchInterceptor: android.graphics.Bitmap mDragBitmap> = null;

     label2:
        $r4 = r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setLevel(int)>(0);

     label3:
        return;
    }

    public void setTrashcan(android.graphics.drawable.Drawable)
    {
        com.android.music.TouchInterceptor r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.music.TouchInterceptor: android.graphics.drawable.Drawable mTrashcan> = r1;

        r0.<com.android.music.TouchInterceptor: int mRemoveMode> = 2;

        return;
    }

    public void setDragListener(com.android.music.TouchInterceptor$DragListener)
    {
        com.android.music.TouchInterceptor r0;
        com.android.music.TouchInterceptor$DragListener r1;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: com.android.music.TouchInterceptor$DragListener;

        r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DragListener mDragListener> = r1;

        return;
    }

    public void setDropListener(com.android.music.TouchInterceptor$DropListener)
    {
        com.android.music.TouchInterceptor r0;
        com.android.music.TouchInterceptor$DropListener r1;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: com.android.music.TouchInterceptor$DropListener;

        r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$DropListener mDropListener> = r1;

        return;
    }

    public void setRemoveListener(com.android.music.TouchInterceptor$RemoveListener)
    {
        com.android.music.TouchInterceptor r0;
        com.android.music.TouchInterceptor$RemoveListener r1;

        r0 := @this: com.android.music.TouchInterceptor;

        r1 := @parameter0: com.android.music.TouchInterceptor$RemoveListener;

        r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$RemoveListener mRemoveListener> = r1;

        return;
    }

    static android.widget.ImageView access$000(com.android.music.TouchInterceptor)
    {
        com.android.music.TouchInterceptor r0;
        android.widget.ImageView $r1;

        r0 := @parameter0: com.android.music.TouchInterceptor;

        $r1 = r0.<com.android.music.TouchInterceptor: android.widget.ImageView mDragView>;

        return $r1;
    }

    static android.graphics.Rect access$100(com.android.music.TouchInterceptor)
    {
        com.android.music.TouchInterceptor r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: com.android.music.TouchInterceptor;

        $r1 = r0.<com.android.music.TouchInterceptor: android.graphics.Rect mTempRect>;

        return $r1;
    }

    static void access$200(com.android.music.TouchInterceptor)
    {
        com.android.music.TouchInterceptor r0;

        r0 := @parameter0: com.android.music.TouchInterceptor;

        specialinvoke r0.<com.android.music.TouchInterceptor: void stopDragging()>();

        return;
    }

    static int access$300(com.android.music.TouchInterceptor)
    {
        com.android.music.TouchInterceptor r0;
        int $i0;

        r0 := @parameter0: com.android.music.TouchInterceptor;

        $i0 = r0.<com.android.music.TouchInterceptor: int mSrcDragPos>;

        return $i0;
    }

    static com.android.music.TouchInterceptor$RemoveListener access$400(com.android.music.TouchInterceptor)
    {
        com.android.music.TouchInterceptor r0;
        com.android.music.TouchInterceptor$RemoveListener $r1;

        r0 := @parameter0: com.android.music.TouchInterceptor;

        $r1 = r0.<com.android.music.TouchInterceptor: com.android.music.TouchInterceptor$RemoveListener mRemoveListener>;

        return $r1;
    }

    static void access$500(com.android.music.TouchInterceptor, boolean)
    {
        com.android.music.TouchInterceptor r0;
        boolean z0;

        r0 := @parameter0: com.android.music.TouchInterceptor;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.music.TouchInterceptor: void unExpandViews(boolean)>(z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.music.TouchInterceptor: int TRASH> = 2;

        <com.android.music.TouchInterceptor: int SLIDE> = 1;

        <com.android.music.TouchInterceptor: int FLING> = 0;

        return;
    }
}
