public class org.apache.xpath.functions.FuncExtFunctionAvailable extends org.apache.xpath.functions.FunctionOneArg
{
    static final long serialVersionUID;
    private transient org.apache.xpath.compiler.FunctionTable m_functionTable;

    public void <init>()
    {
        org.apache.xpath.functions.FuncExtFunctionAvailable r0;

        r0 := @this: org.apache.xpath.functions.FuncExtFunctionAvailable;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        r0.<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.compiler.FunctionTable m_functionTable> = null;

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncExtFunctionAvailable r0;
        org.apache.xpath.XPathContext r1;
        java.lang.String r3, r4, r5, r19;
        int i0, $i1;
        org.apache.xpath.Expression $r7;
        org.apache.xpath.objects.XObject $r8;
        org.apache.xml.utils.PrefixResolver $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;
        org.apache.xpath.compiler.FunctionTable $r11, $r13, $r14;
        org.apache.xpath.objects.XBoolean $r12, $r15, $r17, $r18;
        java.lang.Exception $r16;
        org.apache.xpath.ExtensionsProvider r20;

        r0 := @this: org.apache.xpath.functions.FuncExtFunctionAvailable;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r7 = r0.<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.Expression m_arg0>;

        $r8 = virtualinvoke $r7.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r5 = virtualinvoke $r8.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(58);

        if i0 >= 0 goto label01;

        r3 = "http://www.w3.org/1999/XSL/Transform";

        r4 = r5;

        goto label03;

     label01:
        r19 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r9 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        r3 = interfaceinvoke $r9.<org.apache.xml.utils.PrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String)>(r19);

        if null != r3 goto label02;

        $r17 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_FALSE>;

        return $r17;

     label02:
        $i1 = i0 + 1;

        r4 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i1);

     label03:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z0 == 0 goto label09;

     label04:
        $r11 = r0.<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.compiler.FunctionTable m_functionTable>;

        if null != $r11 goto label05;

        $r14 = new org.apache.xpath.compiler.FunctionTable;

        specialinvoke $r14.<org.apache.xpath.compiler.FunctionTable: void <init>()>();

        r0.<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.compiler.FunctionTable m_functionTable> = $r14;

     label05:
        $r13 = r0.<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.compiler.FunctionTable m_functionTable>;

        $z2 = virtualinvoke $r13.<org.apache.xpath.compiler.FunctionTable: boolean functionAvailable(java.lang.String)>(r4);

        if $z2 == 0 goto label06;

        $r15 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_TRUE>;

        goto label07;

     label06:
        $r15 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_FALSE>;

     label07:
        return $r15;

     label08:
        $r16 := @caughtexception;

        $r18 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_FALSE>;

        return $r18;

     label09:
        $r10 = virtualinvoke r1.<org.apache.xpath.XPathContext: java.lang.Object getOwnerObject()>();

        r20 = (org.apache.xpath.ExtensionsProvider) $r10;

        $z1 = interfaceinvoke r20.<org.apache.xpath.ExtensionsProvider: boolean functionAvailable(java.lang.String,java.lang.String)>(r3, r4);

        if $z1 == 0 goto label10;

        $r12 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_TRUE>;

        goto label11;

     label10:
        $r12 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_FALSE>;

     label11:
        return $r12;

        catch java.lang.Exception from label04 to label07 with label08;
    }

    public void setFunctionTable(org.apache.xpath.compiler.FunctionTable)
    {
        org.apache.xpath.functions.FuncExtFunctionAvailable r0;
        org.apache.xpath.compiler.FunctionTable r1;

        r0 := @this: org.apache.xpath.functions.FuncExtFunctionAvailable;

        r1 := @parameter0: org.apache.xpath.compiler.FunctionTable;

        r0.<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.compiler.FunctionTable m_functionTable> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncExtFunctionAvailable: long serialVersionUID> = 5118814314918592241L;

        return;
    }
}
