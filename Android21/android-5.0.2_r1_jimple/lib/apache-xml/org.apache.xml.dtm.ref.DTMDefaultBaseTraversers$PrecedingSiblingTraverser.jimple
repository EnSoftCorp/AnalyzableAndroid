class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        return;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser r0;
        int i0, i1, $i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getPreviousSibling(int)>(i1);

        return $i2;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser r0;
        int i0, i1, i2, $i3, $i4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getPreviousSibling(int)>(i1);

        i1 = $i3;

        if -1 == $i3 goto label2;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i4 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getExpandedTypeID(int)>(i1);

        if $i4 != i2 goto label1;

        return i1;

     label2:
        return -1;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
