public class org.apache.xalan.templates.Stylesheet extends org.apache.xalan.templates.ElemTemplateElement implements java.io.Serializable
{
    static final long serialVersionUID;
    public static final java.lang.String STYLESHEET_EXT;
    private java.lang.String m_XmlnsXsl;
    private org.apache.xml.utils.StringVector m_ExtensionElementURIs;
    private org.apache.xml.utils.StringVector m_ExcludeResultPrefixs;
    private java.lang.String m_Id;
    private java.lang.String m_Version;
    private boolean m_isCompatibleMode;
    private java.util.Vector m_imports;
    private java.util.Vector m_includes;
    java.util.Stack m_DecimalFormatDeclarations;
    private java.util.Vector m_whitespaceStrippingElements;
    private java.util.Vector m_whitespacePreservingElements;
    private java.util.Vector m_output;
    private java.util.Vector m_keyDeclarations;
    private java.util.Vector m_attributeSets;
    private java.util.Vector m_topLevelVariables;
    private java.util.Vector m_templates;
    private java.util.Vector m_prefix_aliases;
    private java.util.Hashtable m_NonXslTopLevel;
    private java.lang.String m_href;
    private java.lang.String m_publicId;
    private java.lang.String m_systemId;
    private org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot;
    private org.apache.xalan.templates.Stylesheet m_stylesheetParent;

    public void <init>(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.Stylesheet r0, r1;
        org.apache.xalan.templates.StylesheetRoot $r2;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: boolean m_isCompatibleMode> = 0;

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_href> = null;

        if null == r1 goto label1;

        r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet m_stylesheetParent> = r1;

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = $r2;

     label1:
        return;
    }

    public org.apache.xalan.templates.Stylesheet getStylesheet()
    {
        org.apache.xalan.templates.Stylesheet r0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        return r0;
    }

    public boolean isAggregatedType()
    {
        org.apache.xalan.templates.Stylesheet r0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        return 0;
    }

    public boolean isRoot()
    {
        org.apache.xalan.templates.Stylesheet r0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        return 0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.io.ObjectInputStream r1;
        java.lang.ClassNotFoundException r2, $r3;
        javax.xml.transform.TransformerException $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.io.ObjectInputStream;

     label1:
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new javax.xml.transform.TransformerException;

        specialinvoke $r4.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r2);

        throw $r4;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    public void setXmlnsXsl(java.lang.String)
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_XmlnsXsl> = r1;

        return;
    }

    public java.lang.String getXmlnsXsl()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_XmlnsXsl>;

        return $r1;
    }

    public void setExtensionElementPrefixes(org.apache.xml.utils.StringVector)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.StringVector r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.StringVector;

        r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs> = r1;

        return;
    }

    public java.lang.String getExtensionElementPrefix(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        org.apache.xml.utils.StringVector $r1, $r2;
        java.lang.String $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs>;

        if null != $r1 goto label1;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.StringVector: java.lang.String elementAt(int)>(i0);

        return $r3;
    }

    public int getExtensionElementPrefixCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.StringVector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs>;

        $i0 = virtualinvoke $r2.<org.apache.xml.utils.StringVector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean containsExtensionElementURI(java.lang.String)
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String r1;
        org.apache.xml.utils.StringVector $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs>;

        if null != $r2 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExtensionElementURIs>;

        $z0 = virtualinvoke $r3.<org.apache.xml.utils.StringVector: boolean contains(java.lang.String)>(r1);

        return $z0;
    }

    public void setExcludeResultPrefixes(org.apache.xml.utils.StringVector)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.StringVector r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.StringVector;

        r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs> = r1;

        return;
    }

    public java.lang.String getExcludeResultPrefix(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        org.apache.xml.utils.StringVector $r1, $r2;
        java.lang.String $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        if null != $r1 goto label1;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.StringVector: java.lang.String elementAt(int)>(i0);

        return $r3;
    }

    public int getExcludeResultPrefixCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.StringVector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        $i0 = virtualinvoke $r2.<org.apache.xml.utils.StringVector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean containsExcludeResultPrefix(java.lang.String, java.lang.String)
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String r1, r2, $r6, $r7;
        int i0, $i1;
        org.apache.xml.utils.StringVector $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        if null == $r3 goto label1;

        if r2 != null goto label2;

     label1:
        return 0;

     label2:
        i0 = 0;

     label3:
        $r4 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        $i1 = virtualinvoke $r4.<org.apache.xml.utils.StringVector: int size()>();

        if i0 >= $i1 goto label5;

        $r5 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xml.utils.StringVector m_ExcludeResultPrefixs>;

        $r6 = virtualinvoke $r5.<org.apache.xml.utils.StringVector: java.lang.String elementAt(int)>(i0);

        $r7 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: java.lang.String getNamespaceForPrefix(java.lang.String)>($r6);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return 0;
    }

    public void setId(java.lang.String)
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_Id> = r1;

        return;
    }

    public java.lang.String getId()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_Id>;

        return $r1;
    }

    public void setVersion(java.lang.String)
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String r1;
        java.lang.Double $r2;
        double $d0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_Version> = r1;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r1);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpl 1.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.xalan.templates.Stylesheet: boolean m_isCompatibleMode> = $z0;

        return;
    }

    public boolean getCompatibleMode()
    {
        org.apache.xalan.templates.Stylesheet r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $z0 = r0.<org.apache.xalan.templates.Stylesheet: boolean m_isCompatibleMode>;

        return $z0;
    }

    public java.lang.String getVersion()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_Version>;

        return $r1;
    }

    public void setImport(org.apache.xalan.templates.StylesheetComposed)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.StylesheetComposed r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetComposed;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.StylesheetComposed getImport(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.StylesheetComposed $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.StylesheetComposed) $r3;

        return $r4;
    }

    public int getImportCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_imports>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setInclude(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.Stylesheet r0, r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.Stylesheet getInclude(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0, $r4;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.Stylesheet) $r3;

        return $r4;
    }

    public int getIncludeCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_includes>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setDecimalFormat(org.apache.xalan.templates.DecimalFormatProperties)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.DecimalFormatProperties r1;
        java.util.Stack $r2, $r3, $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.DecimalFormatProperties;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        if null != $r2 goto label1;

        $r5 = new java.util.Stack;

        specialinvoke $r5.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations> = $r5;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.QName r1, $r4;
        int i0, i1;
        org.apache.xalan.templates.DecimalFormatProperties r2;
        java.util.Stack $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        if null != $r3 goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getDecimalFormatCount()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label4;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int)>(i1);

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r4.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    public org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Stack $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.DecimalFormatProperties $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.DecimalFormatProperties) $r3;

        return $r4;
    }

    public int getDecimalFormatCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Stack $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Stack m_DecimalFormatDeclarations>;

        $i0 = virtualinvoke $r2.<java.util.Stack: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setStripSpaces(org.apache.xalan.templates.WhiteSpaceInfo)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.WhiteSpaceInfo r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.WhiteSpaceInfo;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.WhiteSpaceInfo getStripSpace(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.WhiteSpaceInfo $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.WhiteSpaceInfo) $r3;

        return $r4;
    }

    public int getStripSpaceCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespaceStrippingElements>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setPreserveSpaces(org.apache.xalan.templates.WhiteSpaceInfo)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.WhiteSpaceInfo r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.WhiteSpaceInfo;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.WhiteSpaceInfo getPreserveSpace(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.WhiteSpaceInfo $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.WhiteSpaceInfo) $r3;

        return $r4;
    }

    public int getPreserveSpaceCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_whitespacePreservingElements>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setOutput(org.apache.xalan.templates.OutputProperties)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.OutputProperties r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.OutputProperties;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.OutputProperties getOutput(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.OutputProperties $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.OutputProperties) $r3;

        return $r4;
    }

    public int getOutputCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_output>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setKey(org.apache.xalan.templates.KeyDeclaration)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.KeyDeclaration r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.KeyDeclaration;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.KeyDeclaration getKey(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.KeyDeclaration $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.KeyDeclaration) $r3;

        return $r4;
    }

    public int getKeyCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_keyDeclarations>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setAttributeSet(org.apache.xalan.templates.ElemAttributeSet)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.ElemAttributeSet r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.ElemAttributeSet;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.ElemAttributeSet getAttributeSet(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.ElemAttributeSet $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.ElemAttributeSet) $r3;

        return $r4;
    }

    public int getAttributeSetCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_attributeSets>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setVariable(org.apache.xalan.templates.ElemVariable)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.ElemVariable r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.ElemVariable;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.ElemVariable getVariableOrParam(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.QName r1, $r4;
        int i0, i1;
        org.apache.xalan.templates.ElemVariable r2;
        java.util.Vector $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        if null == $r3 goto label3;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)>(i1);

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r4.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.xalan.templates.ElemVariable getVariable(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.QName r1, $r4;
        int i0, i1, $i2;
        org.apache.xalan.templates.ElemVariable r2;
        java.util.Vector $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        if null == $r3 goto label3;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)>(i1);

        $i2 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: int getXSLToken()>();

        if $i2 != 73 goto label2;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r4.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.xalan.templates.ElemVariable getVariableOrParam(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.ElemVariable $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.ElemVariable) $r3;

        return $r4;
    }

    public int getVariableOrParamCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setParam(org.apache.xalan.templates.ElemParam)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.ElemParam r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.ElemParam;

        virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: void setVariable(org.apache.xalan.templates.ElemVariable)>(r1);

        return;
    }

    public org.apache.xalan.templates.ElemParam getParam(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.QName r1, $r4;
        int i0, i1, $i2;
        org.apache.xalan.templates.ElemVariable r2;
        java.util.Vector $r3;
        boolean $z0;
        org.apache.xalan.templates.ElemParam $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_topLevelVariables>;

        if null == $r3 goto label3;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)>(i1);

        $i2 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: int getXSLToken()>();

        if $i2 != 41 goto label2;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r4.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = (org.apache.xalan.templates.ElemParam) r2;

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void setTemplate(org.apache.xalan.templates.ElemTemplate)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.ElemTemplate r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplate;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        if null != $r2 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplate: void setStylesheet(org.apache.xalan.templates.Stylesheet)>(r0);

        return;
    }

    public org.apache.xalan.templates.ElemTemplate getTemplate(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.ElemTemplate $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.ElemTemplate) $r3;

        return $r4;
    }

    public int getTemplateCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setNamespaceAlias(org.apache.xalan.templates.NamespaceAlias)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.NamespaceAlias r1;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.NamespaceAlias;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases>;

        if $r2 != null goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.NamespaceAlias getNamespaceAlias(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.Stylesheet r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.NamespaceAlias $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases>;

        if null != $r1 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.NamespaceAlias) $r3;

        return $r4;
    }

    public int getNamespaceAliasCount()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_prefix_aliases>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setNonXslTopLevel(org.apache.xml.utils.QName, java.lang.Object)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.QName r1;
        java.lang.Object r2;
        java.util.Hashtable $r3, $r4, $r6;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel>;

        if null != $r3 goto label1;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel> = $r6;

     label1:
        $r4 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getNonXslTopLevel(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xml.utils.QName r1;
        java.util.Hashtable $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel>;

        if null == $r2 goto label1;

        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public java.lang.String getHref()
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_href>;

        return $r1;
    }

    public void setHref(java.lang.String)
    {
        org.apache.xalan.templates.Stylesheet r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_href> = r1;

        return;
    }

    public void setLocaterInfo(javax.xml.transform.SourceLocator)
    {
        org.apache.xalan.templates.Stylesheet r0;
        javax.xml.transform.SourceLocator r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        javax.xml.transform.TransformerException $r8;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        if null == r1 goto label5;

        $r3 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: java.lang.String getPublicId()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_publicId> = $r3;

        $r4 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_systemId> = $r4;

        $r5 = r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_systemId>;

        if null == $r5 goto label4;

     label1:
        $r6 = r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_systemId>;

        $r7 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>($r6, null);

        r0.<org.apache.xalan.templates.Stylesheet: java.lang.String m_href> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setLocaterInfo(javax.xml.transform.SourceLocator)>(r1);

     label5:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.StylesheetRoot $r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        return $r1;
    }

    public void setStylesheetRoot(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = r1;

        return;
    }

    public org.apache.xalan.templates.Stylesheet getStylesheetParent()
    {
        org.apache.xalan.templates.Stylesheet r0, $r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        $r1 = r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet m_stylesheetParent>;

        return $r1;
    }

    public void setStylesheetParent(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.Stylesheet r0, r1;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet m_stylesheetParent> = r1;

        return;
    }

    public org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()
    {
        org.apache.xalan.templates.Stylesheet r0, r1;
        boolean $z0;
        org.apache.xalan.templates.StylesheetComposed $r2;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 = r0;

     label1:
        $z0 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: boolean isAggregatedType()>();

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getStylesheetParent()>();

        goto label1;

     label2:
        $r2 = (org.apache.xalan.templates.StylesheetComposed) r1;

        return $r2;
    }

    public short getNodeType()
    {
        org.apache.xalan.templates.Stylesheet r0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        return 9;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.Stylesheet r0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        return 25;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.Stylesheet r0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        return "stylesheet";
    }

    public void replaceTemplate(org.apache.xalan.templates.ElemTemplate, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.ElemTemplate r1;
        int i0;
        java.util.Vector $r2, $r3, $r7;
        java.lang.Object $r4;
        org.apache.xalan.templates.ElemTemplateElement $r5;
        java.lang.ArrayIndexOutOfBoundsException $r8;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplate;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        if null != $r2 goto label1;

        $r8 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r8.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r8;

     label1:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r5 = (org.apache.xalan.templates.ElemTemplateElement) $r4;

        virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplateElement replaceChild(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplateElement)>(r1, $r5);

        $r7 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Vector m_templates>;

        virtualinvoke $r7.<java.util.Vector: void setElementAt(java.lang.Object,int)>(r1, i0);

        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplate: void setStylesheet(org.apache.xalan.templates.Stylesheet)>(r0);

        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.Stylesheet r0, $r14;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0, $z1, $z2, $z5, $z6, $z9;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        org.apache.xalan.templates.ElemAttributeSet r2;
        java.util.Hashtable $r3, $r4;
        java.lang.Object $r5;
        org.apache.xalan.templates.WhiteSpaceInfo $r6, $r7;
        org.apache.xalan.templates.NamespaceAlias $r8;
        org.apache.xalan.templates.DecimalFormatProperties $r9;
        org.apache.xalan.templates.KeyDeclaration $r10;
        org.apache.xalan.templates.OutputProperties $r11;
        org.apache.xalan.templates.StylesheetComposed $r12;
        javax.xml.transform.TransformerException $r13, r17;
        org.apache.xml.utils.WrappedRuntimeException $r15;
        org.apache.xalan.templates.ElemTemplate r16;
        org.apache.xalan.templates.ElemVariable r18;
        java.util.Enumeration r19;
        org.apache.xalan.templates.ElemTemplateElement r20;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getImportCount()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r12 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getImport(int)>(i1);

        virtualinvoke $r12.<org.apache.xalan.templates.StylesheetComposed: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

        i1 = i1 + 1;

        goto label01;

     label02:
        i2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getIncludeCount()>();

        i3 = 0;

     label03:
        if i3 >= i2 goto label04;

        $r14 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getInclude(int)>(i3);

        virtualinvoke $r14.<org.apache.xalan.templates.Stylesheet: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

        i3 = i3 + 1;

        goto label03;

     label04:
        i4 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getOutputCount()>();

        i5 = 0;

     label05:
        if i5 >= i4 goto label06;

        $r11 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.OutputProperties getOutput(int)>(i5);

        virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>($r11);

        i5 = i5 + 1;

        goto label05;

     label06:
        i6 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getAttributeSetCount()>();

        i7 = 0;

     label07:
        if i7 >= i6 goto label09;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemAttributeSet getAttributeSet(int)>(i7);

        $z9 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        if $z9 == 0 goto label08;

        virtualinvoke r2.<org.apache.xalan.templates.ElemAttributeSet: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label08:
        i7 = i7 + 1;

        goto label07;

     label09:
        i8 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getDecimalFormatCount()>();

        i9 = 0;

     label10:
        if i9 >= i8 goto label11;

        $r9 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int)>(i9);

        virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>($r9);

        i9 = i9 + 1;

        goto label10;

     label11:
        i10 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getKeyCount()>();

        i11 = 0;

     label12:
        if i11 >= i10 goto label13;

        $r10 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.KeyDeclaration getKey(int)>(i11);

        virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>($r10);

        i11 = i11 + 1;

        goto label12;

     label13:
        i12 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getNamespaceAliasCount()>();

        i13 = 0;

     label14:
        if i13 >= i12 goto label15;

        $r8 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.NamespaceAlias getNamespaceAlias(int)>(i13);

        virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>($r8);

        i13 = i13 + 1;

        goto label14;

     label15:
        i14 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getTemplateCount()>();

        i15 = 0;

     label16:
        if i15 >= i14 goto label21;

     label17:
        r16 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplate getTemplate(int)>(i15);

        $z6 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>(r16);

        if $z6 == 0 goto label18;

        virtualinvoke r16.<org.apache.xalan.templates.ElemTemplate: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label18:
        goto label20;

     label19:
        $r13 := @caughtexception;

        r17 = $r13;

        $r15 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r15.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r17);

        throw $r15;

     label20:
        i15 = i15 + 1;

        goto label16;

     label21:
        i16 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()>();

        i17 = 0;

     label22:
        if i17 >= i16 goto label24;

        r18 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)>(i17);

        $z5 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelVariableOrParamDecl(org.apache.xalan.templates.ElemTemplateElement)>(r18);

        if $z5 == 0 goto label23;

        virtualinvoke r18.<org.apache.xalan.templates.ElemVariable: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label23:
        i17 = i17 + 1;

        goto label22;

     label24:
        i18 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getStripSpaceCount()>();

        i19 = 0;

     label25:
        if i19 >= i18 goto label26;

        $r7 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getStripSpace(int)>(i19);

        virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>($r7);

        i19 = i19 + 1;

        goto label25;

     label26:
        i20 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getPreserveSpaceCount()>();

        i21 = 0;

     label27:
        if i21 >= i20 goto label28;

        $r6 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getPreserveSpace(int)>(i21);

        virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>($r6);

        i21 = i21 + 1;

        goto label27;

     label28:
        $r3 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel>;

        if null == $r3 goto label31;

        $r4 = r0.<org.apache.xalan.templates.Stylesheet: java.util.Hashtable m_NonXslTopLevel>;

        r19 = virtualinvoke $r4.<java.util.Hashtable: java.util.Enumeration elements()>();

     label29:
        $z1 = interfaceinvoke r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label31;

        $r5 = interfaceinvoke r19.<java.util.Enumeration: java.lang.Object nextElement()>();

        r20 = (org.apache.xalan.templates.ElemTemplateElement) $r5;

        $z2 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)>(r20);

        if $z2 == 0 goto label30;

        virtualinvoke r20.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label30:
        goto label29;

     label31:
        return;

        catch javax.xml.transform.TransformerException from label17 to label18 with label19;
    }

    protected boolean accept(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.Stylesheet r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.Stylesheet;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitStylesheet(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.Stylesheet: java.lang.String STYLESHEET_EXT> = ".lxc";

        <org.apache.xalan.templates.Stylesheet: long serialVersionUID> = 2085337282743043776L;

        return;
    }
}
