public class org.apache.xalan.templates.ElemPI extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;
    private org.apache.xalan.templates.AVT m_name_atv;

    public void <init>()
    {
        org.apache.xalan.templates.ElemPI r0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv> = null;

        return;
    }

    public void setName(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.AVT r1;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv> = r1;

        return;
    }

    public org.apache.xalan.templates.AVT getName()
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.AVT $r1;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        $r1 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        return $r1;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector r2;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r3, $r6;
        org.apache.xalan.templates.AVT $r4, $r5;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        r2 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        if null == $r4 goto label1;

        $r5 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r5.<org.apache.xalan.templates.AVT: void fixupVariables(java.util.Vector,int)>(r2, $i0);

     label1:
        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemPI r0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        return 58;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemPI r0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        return "processing-instruction";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xpath.XPathContext r2;
        int i0;
        java.lang.String r3, r4, $r8;
        org.xml.sax.SAXException r5, $r16;
        org.apache.xalan.templates.AVT $r6, $r7, $r9;
        boolean $z0, $z1, $z2;
        org.apache.xml.serializer.SerializationHandler $r10;
        java.lang.Object[] $r11, $r13;
        org.apache.xalan.transformer.MsgMgr $r12, $r14;
        javax.xml.transform.TransformerException $r15;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r6 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        if $r6 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r7 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        $r8 = virtualinvoke $r7.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r0);

     label2:
        r3 = $r8;

        if r3 != null goto label3;

        return;

     label3:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("xml");

        if $z0 == 0 goto label4;

        $r14 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = "name";

        $r13[1] = r3;

        virtualinvoke $r14.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r0, "WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML", $r13);

        return;

     label4:
        $r9 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        $z1 = virtualinvoke $r9.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 != 0 goto label5;

        $z2 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNCName(java.lang.String)>(r3);

        if $z2 != 0 goto label5;

        $r12 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "name";

        $r11[1] = r3;

        virtualinvoke $r12.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r0, "WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME", $r11);

        return;

     label5:
        r4 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)>(r0);

     label6:
        $r10 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r10.<org.apache.xml.serializer.SerializationHandler: void processingInstruction(java.lang.String,java.lang.String)>(r3, r4);

     label7:
        goto label9;

     label8:
        $r16 := @caughtexception;

        r5 = $r16;

        $r15 = new javax.xml.transform.TransformerException;

        specialinvoke $r15.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r5);

        throw $r15;

     label9:
        return;

        catch org.xml.sax.SAXException from label6 to label7 with label8;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.ElemTemplateElement r1, $r2;
        int i0;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        lookupswitch(i0)
        {
            case 9: goto label1;
            case 17: goto label1;
            case 28: goto label1;
            case 30: goto label1;
            case 35: goto label1;
            case 36: goto label1;
            case 37: goto label1;
            case 42: goto label1;
            case 50: goto label1;
            case 72: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 75: goto label1;
            case 78: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r0.<org.apache.xalan.templates.ElemPI: java.lang.String getNodeName()>();

        $r3[1] = $r5;

        virtualinvoke r0.<org.apache.xalan.templates.ElemPI: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r3);

     label3:
        $r2 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemPI: long serialVersionUID> = 5621976448020889825L;

        return;
    }
}
