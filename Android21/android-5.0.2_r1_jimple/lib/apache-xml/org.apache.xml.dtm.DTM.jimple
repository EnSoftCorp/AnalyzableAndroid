public interface  org.apache.xml.dtm.DTM extends java.lang.Object
{
    public static final int NULL;
    public static final short ROOT_NODE;
    public static final short ELEMENT_NODE;
    public static final short ATTRIBUTE_NODE;
    public static final short TEXT_NODE;
    public static final short CDATA_SECTION_NODE;
    public static final short ENTITY_REFERENCE_NODE;
    public static final short ENTITY_NODE;
    public static final short PROCESSING_INSTRUCTION_NODE;
    public static final short COMMENT_NODE;
    public static final short DOCUMENT_NODE;
    public static final short DOCUMENT_TYPE_NODE;
    public static final short DOCUMENT_FRAGMENT_NODE;
    public static final short NOTATION_NODE;
    public static final short NAMESPACE_NODE;
    public static final short NTYPES;

    public abstract void setFeature(java.lang.String, boolean);

    public abstract void setProperty(java.lang.String, java.lang.Object);

    public abstract org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int);

    public abstract org.apache.xml.dtm.DTMAxisIterator getAxisIterator(int);

    public abstract org.apache.xml.dtm.DTMAxisIterator getTypedAxisIterator(int, int);

    public abstract boolean hasChildNodes(int);

    public abstract int getFirstChild(int);

    public abstract int getLastChild(int);

    public abstract int getAttributeNode(int, java.lang.String, java.lang.String);

    public abstract int getFirstAttribute(int);

    public abstract int getFirstNamespaceNode(int, boolean);

    public abstract int getNextSibling(int);

    public abstract int getPreviousSibling(int);

    public abstract int getNextAttribute(int);

    public abstract int getNextNamespaceNode(int, int, boolean);

    public abstract int getParent(int);

    public abstract int getDocument();

    public abstract int getOwnerDocument(int);

    public abstract int getDocumentRoot(int);

    public abstract org.apache.xml.utils.XMLString getStringValue(int);

    public abstract int getStringValueChunkCount(int);

    public abstract char[] getStringValueChunk(int, int, int[]);

    public abstract int getExpandedTypeID(int);

    public abstract int getExpandedTypeID(java.lang.String, java.lang.String, int);

    public abstract java.lang.String getLocalNameFromExpandedNameID(int);

    public abstract java.lang.String getNamespaceFromExpandedNameID(int);

    public abstract java.lang.String getNodeName(int);

    public abstract java.lang.String getNodeNameX(int);

    public abstract java.lang.String getLocalName(int);

    public abstract java.lang.String getPrefix(int);

    public abstract java.lang.String getNamespaceURI(int);

    public abstract java.lang.String getNodeValue(int);

    public abstract short getNodeType(int);

    public abstract short getLevel(int);

    public abstract boolean isSupported(java.lang.String, java.lang.String);

    public abstract java.lang.String getDocumentBaseURI();

    public abstract void setDocumentBaseURI(java.lang.String);

    public abstract java.lang.String getDocumentSystemIdentifier(int);

    public abstract java.lang.String getDocumentEncoding(int);

    public abstract java.lang.String getDocumentStandalone(int);

    public abstract java.lang.String getDocumentVersion(int);

    public abstract boolean getDocumentAllDeclarationsProcessed();

    public abstract java.lang.String getDocumentTypeDeclarationSystemIdentifier();

    public abstract java.lang.String getDocumentTypeDeclarationPublicIdentifier();

    public abstract int getElementById(java.lang.String);

    public abstract java.lang.String getUnparsedEntityURI(java.lang.String);

    public abstract boolean supportsPreStripping();

    public abstract boolean isNodeAfter(int, int);

    public abstract boolean isCharacterElementContentWhitespace(int);

    public abstract boolean isDocumentAllDeclarationsProcessed(int);

    public abstract boolean isAttributeSpecified(int);

    public abstract void dispatchCharactersEvents(int, org.xml.sax.ContentHandler, boolean) throws org.xml.sax.SAXException;

    public abstract void dispatchToEvents(int, org.xml.sax.ContentHandler) throws org.xml.sax.SAXException;

    public abstract org.w3c.dom.Node getNode(int);

    public abstract boolean needsTwoThreads();

    public abstract org.xml.sax.ContentHandler getContentHandler();

    public abstract org.xml.sax.ext.LexicalHandler getLexicalHandler();

    public abstract org.xml.sax.EntityResolver getEntityResolver();

    public abstract org.xml.sax.DTDHandler getDTDHandler();

    public abstract org.xml.sax.ErrorHandler getErrorHandler();

    public abstract org.xml.sax.ext.DeclHandler getDeclHandler();

    public abstract void appendChild(int, boolean, boolean);

    public abstract void appendTextChild(java.lang.String);

    public abstract javax.xml.transform.SourceLocator getSourceLocatorFor(int);

    public abstract void documentRegistration();

    public abstract void documentRelease();

    public abstract void migrateTo(org.apache.xml.dtm.DTMManager);

    public static void <clinit>()
    {
        <org.apache.xml.dtm.DTM: short NTYPES> = 14;

        <org.apache.xml.dtm.DTM: short NAMESPACE_NODE> = 13;

        <org.apache.xml.dtm.DTM: short NOTATION_NODE> = 12;

        <org.apache.xml.dtm.DTM: short DOCUMENT_FRAGMENT_NODE> = 11;

        <org.apache.xml.dtm.DTM: short DOCUMENT_TYPE_NODE> = 10;

        <org.apache.xml.dtm.DTM: short DOCUMENT_NODE> = 9;

        <org.apache.xml.dtm.DTM: short COMMENT_NODE> = 8;

        <org.apache.xml.dtm.DTM: short PROCESSING_INSTRUCTION_NODE> = 7;

        <org.apache.xml.dtm.DTM: short ENTITY_NODE> = 6;

        <org.apache.xml.dtm.DTM: short ENTITY_REFERENCE_NODE> = 5;

        <org.apache.xml.dtm.DTM: short CDATA_SECTION_NODE> = 4;

        <org.apache.xml.dtm.DTM: short TEXT_NODE> = 3;

        <org.apache.xml.dtm.DTM: short ATTRIBUTE_NODE> = 2;

        <org.apache.xml.dtm.DTM: short ELEMENT_NODE> = 1;

        <org.apache.xml.dtm.DTM: short ROOT_NODE> = 0;

        <org.apache.xml.dtm.DTM: int NULL> = -1;

        return;
    }
}
