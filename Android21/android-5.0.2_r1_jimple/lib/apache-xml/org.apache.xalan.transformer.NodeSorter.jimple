public class org.apache.xalan.transformer.NodeSorter extends java.lang.Object
{
    org.apache.xpath.XPathContext m_execContext;
    java.util.Vector m_keys;

    public void <init>(org.apache.xpath.XPathContext)
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xpath.XPathContext r1;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext> = r1;

        return;
    }

    public void sort(org.apache.xml.dtm.DTMIterator, java.util.Vector, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xml.dtm.DTMIterator r1;
        java.util.Vector r2, r4, $r6, $r7, r11;
        org.apache.xpath.XPathContext r3;
        int i0, i1, $i2, $i3, $i4, i5;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem r5, $r9, $r10;
        java.lang.Object $r8;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xml.dtm.DTMIterator;

        r2 := @parameter1: java.util.Vector;

        r3 := @parameter2: org.apache.xpath.XPathContext;

        r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys> = r2;

        i0 = interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: int getLength()>();

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r4 = $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = new org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        $i4 = interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: int item(int)>(i1);

        specialinvoke $r10.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: void <init>(org.apache.xalan.transformer.NodeSorter,int)>(r0, $i4);

        r5 = $r10;

        virtualinvoke r4.<java.util.Vector: void addElement(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r11 = $r7;

        $i2 = i0 - 1;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r4, r11, 0, $i2, r3);

        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        $r8 = virtualinvoke r4.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        $r9 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r8;

        $i3 = $r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: void setItem(int,int)>($i3, i5);

        i5 = i5 + 1;

        goto label3;

     label4:
        interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: void setCurrentPos(int)>(0);

        return;
    }

    int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem, org.apache.xalan.transformer.NodeSorter$NodeCompareElem, int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i15, $i16, $i19, i20;
        org.apache.xpath.XPathContext r3, $r13, $r15, $r29, $r31;
        org.apache.xalan.transformer.NodeSortKey r4;
        double d0, d1, d2;
        java.text.CollationKey r5, r43;
        org.apache.xpath.objects.XObject r6, r7, r8, r44;
        java.util.Vector $r9, $r21, $r34;
        java.lang.Object $r10, $r24, $r25, $r26, $r27, $r35, $r38, $r41, $r42;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.xml.utils.PrefixResolver $r11, $r14, $r30, $r32;
        org.apache.xpath.XPath $r12, $r16, $r28, $r33;
        java.lang.String $r17, $r20, $r22, $r23, r45, r46;
        java.text.Collator $r18, $r19;
        byte $b8, $b13, $b14, $b17, $b18;
        java.lang.Double $r36, $r37, $r39, $r40;
        org.apache.xml.dtm.DTM r47;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        r2 := @parameter1: org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        i0 := @parameter2: int;

        r3 := @parameter3: org.apache.xpath.XPathContext;

        $r9 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $r10 = virtualinvoke $r9.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r4 = (org.apache.xalan.transformer.NodeSortKey) $r10;

        $z1 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_treatAsNumbers>;

        if $z1 == 0 goto label15;

        if i0 != 0 goto label01;

        $r41 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        $r40 = (java.lang.Double) $r41;

        d0 = virtualinvoke $r40.<java.lang.Double: double doubleValue()>();

        $r42 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        $r39 = (java.lang.Double) $r42;

        d1 = virtualinvoke $r39.<java.lang.Double: double doubleValue()>();

        goto label03;

     label01:
        if i0 != 1 goto label02;

        $r38 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        $r37 = (java.lang.Double) $r38;

        d0 = virtualinvoke $r37.<java.lang.Double: double doubleValue()>();

        $r35 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        $r36 = (java.lang.Double) $r35;

        d1 = virtualinvoke $r36.<java.lang.Double: double doubleValue()>();

        goto label03;

     label02:
        $r28 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r29 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i11 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r30 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r7 = virtualinvoke $r28.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r29, $i11, $r30);

        $r33 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r31 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i12 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r32 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r8 = virtualinvoke $r33.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r31, $i12, $r32);

        d0 = virtualinvoke r7.<org.apache.xpath.objects.XObject: double num()>();

        d1 = virtualinvoke r8.<org.apache.xpath.objects.XObject: double num()>();

     label03:
        $b13 = d0 cmpl d1;

        if $b13 != 0 goto label04;

        $i15 = i0 + 1;

        $r34 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $i16 = virtualinvoke $r34.<java.util.Vector: int size()>();

        if $i15 >= $i16 goto label04;

        $i19 = i0 + 1;

        i20 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>(r1, r2, $i19, r3);

        goto label14;

     label04:
        $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z6 == 0 goto label06;

        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z8 == 0 goto label05;

        d2 = 0.0;

        goto label08;

     label05:
        d2 = -1.0;

        goto label08;

     label06:
        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z7 == 0 goto label07;

        d2 = 1.0;

        goto label08;

     label07:
        d2 = d0 - d1;

     label08:
        $b14 = d2 cmpg 0.0;

        if $b14 >= 0 goto label10;

        $z10 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z10 == 0 goto label09;

        $b18 = 1;

        goto label13;

     label09:
        $b18 = -1;

        goto label13;

     label10:
        $b17 = d2 cmpl 0.0;

        if $b17 <= 0 goto label12;

        $z9 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z9 == 0 goto label11;

        $b18 = -1;

        goto label13;

     label11:
        $b18 = 1;

        goto label13;

     label12:
        $b18 = 0;

     label13:
        i20 = $b18;

     label14:
        goto label22;

     label15:
        if i0 != 0 goto label16;

        $r25 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        r43 = (java.text.CollationKey) $r25;

        $r24 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        r5 = (java.text.CollationKey) $r24;

        goto label18;

     label16:
        if i0 != 1 goto label17;

        $r27 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        r43 = (java.text.CollationKey) $r27;

        $r26 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        r5 = (java.text.CollationKey) $r26;

        goto label18;

     label17:
        $r12 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r13 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i1 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r11 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r44 = virtualinvoke $r12.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r13, $i1, $r11);

        $r16 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r15 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i2 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r14 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r6 = virtualinvoke $r16.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r15, $i2, $r14);

        $r18 = r4.<org.apache.xalan.transformer.NodeSortKey: java.text.Collator m_col>;

        $r17 = virtualinvoke r44.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        r43 = virtualinvoke $r18.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>($r17);

        $r19 = r4.<org.apache.xalan.transformer.NodeSortKey: java.text.Collator m_col>;

        $r20 = virtualinvoke r6.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        r5 = virtualinvoke $r19.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>($r20);

     label18:
        i20 = virtualinvoke r43.<java.text.CollationKey: int compareTo(java.text.CollationKey)>(r5);

        $z3 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_caseOrderUpper>;

        if $z3 == 0 goto label21;

        $r22 = virtualinvoke r43.<java.text.CollationKey: java.lang.String getSourceString()>();

        r45 = virtualinvoke $r22.<java.lang.String: java.lang.String toLowerCase()>();

        $r23 = virtualinvoke r5.<java.text.CollationKey: java.lang.String getSourceString()>();

        r46 = virtualinvoke $r23.<java.lang.String: java.lang.String toLowerCase()>();

        $z5 = virtualinvoke r45.<java.lang.String: boolean equals(java.lang.Object)>(r46);

        if $z5 == 0 goto label21;

        if i20 != 0 goto label19;

        $i10 = 0;

        goto label20;

     label19:
        $i10 = neg i20;

     label20:
        i20 = $i10;

     label21:
        $z2 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z2 == 0 goto label22;

        i20 = neg i20;

     label22:
        if 0 != i20 goto label23;

        $i6 = i0 + 1;

        $r21 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $i7 = virtualinvoke $r21.<java.util.Vector: int size()>();

        if $i6 >= $i7 goto label23;

        $i9 = i0 + 1;

        i20 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>(r1, r2, $i9, r3);

     label23:
        if 0 != i20 goto label26;

        $i3 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        r47 = virtualinvoke r3.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i3);

        $i4 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $i5 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $z4 = interfaceinvoke r47.<org.apache.xml.dtm.DTM: boolean isNodeAfter(int,int)>($i4, $i5);

        if $z4 == 0 goto label24;

        $b8 = -1;

        goto label25;

     label24:
        $b8 = 1;

     label25:
        i20 = $b8;

     label26:
        return i20;
    }

    void mergesort(java.util.Vector, java.util.Vector, int, int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        java.util.Vector r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22;
        org.apache.xpath.XPathContext r3;
        java.lang.Object $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem $r5, $r6;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: java.util.Vector;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: org.apache.xpath.XPathContext;

        $i7 = i1 - i0;

        if $i7 <= 0 goto label14;

        $i8 = i1 + i0;

        i2 = $i8 / 2;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r1, r2, i0, i2, r3);

        $i9 = i2 + 1;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r1, r2, $i9, i1, r3);

        i3 = i2;

     label01:
        if i3 < i0 goto label04;

        $i20 = virtualinvoke r2.<java.util.Vector: int size()>();

        if i3 < $i20 goto label02;

        $r13 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        virtualinvoke r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r13, i3);

        goto label03;

     label02:
        $r12 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        virtualinvoke r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r12, i3);

     label03:
        i3 = i3 + -1;

        goto label01;

     label04:
        i21 = i0;

        i4 = i2 + 1;

     label05:
        if i4 > i1 goto label08;

        $i10 = i1 + i2;

        $i12 = $i10 + 1;

        $i11 = $i12 - i4;

        $i13 = virtualinvoke r2.<java.util.Vector: int size()>();

        if $i11 < $i13 goto label06;

        $r11 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        $i18 = i1 + i2;

        $i17 = $i18 + 1;

        $i19 = $i17 - i4;

        virtualinvoke r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r11, $i19);

        goto label07;

     label06:
        $r10 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        $i15 = i1 + i2;

        $i14 = $i15 + 1;

        $i16 = $i14 - i4;

        virtualinvoke r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r10, $i16);

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        i22 = i1;

        i5 = i0;

     label09:
        if i5 > i1 goto label14;

        if i21 != i22 goto label10;

        i6 = -1;

        goto label11;

     label10:
        $r4 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i21);

        $r5 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r4;

        $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i22);

        $r6 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r7;

        i6 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>($r5, $r6, 0, r3);

     label11:
        if i6 >= 0 goto label12;

        $r9 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i21);

        virtualinvoke r1.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r9, i5);

        i21 = i21 + 1;

        goto label13;

     label12:
        if i6 <= 0 goto label13;

        $r8 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i22);

        virtualinvoke r1.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r8, i5);

        i22 = i22 + -1;

     label13:
        i5 = i5 + 1;

        goto label09;

     label14:
        return;
    }
}
