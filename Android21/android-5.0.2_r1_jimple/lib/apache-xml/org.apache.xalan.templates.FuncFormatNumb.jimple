public class org.apache.xalan.templates.FuncFormatNumb extends org.apache.xpath.functions.Function3Args
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.FuncFormatNumb r0;

        r0 := @this: org.apache.xalan.templates.FuncFormatNumb;

        specialinvoke r0.<org.apache.xpath.functions.Function3Args: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.FuncFormatNumb r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        org.apache.xalan.templates.StylesheetRoot r3;
        java.text.DecimalFormat r4, $r19, $r20, $r22;
        double d0;
        java.lang.String r5, r7, $r14;
        org.apache.xpath.Expression r6, $r10, $r12;
        org.apache.xml.utils.QName r8, $r16, $r23;
        org.apache.xml.utils.PrefixResolver $r9, $r24;
        org.apache.xpath.objects.XObject $r11, $r13, $r21;
        int $i0;
        org.apache.xpath.objects.XString $r15, $r26;
        java.util.Locale $r17;
        java.text.DecimalFormatSymbols $r18, r29, r30, r31;
        java.lang.Object[] $r25, $r27;
        java.lang.Exception $r28;

        r0 := @this: org.apache.xalan.templates.FuncFormatNumb;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r9 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        r2 = (org.apache.xalan.templates.ElemTemplateElement) $r9;

        r3 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        r4 = null;

        $r10 = virtualinvoke r0.<org.apache.xalan.templates.FuncFormatNumb: org.apache.xpath.Expression getArg0()>();

        $r11 = virtualinvoke $r10.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        d0 = virtualinvoke $r11.<org.apache.xpath.objects.XObject: double num()>();

        $r12 = virtualinvoke r0.<org.apache.xalan.templates.FuncFormatNumb: org.apache.xpath.Expression getArg1()>();

        $r13 = virtualinvoke $r12.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r5 = virtualinvoke $r13.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(164);

        if $i0 <= 0 goto label1;

        virtualinvoke r3.<org.apache.xalan.templates.StylesheetRoot: void error(java.lang.String)>("ER_CURRENCY_SIGN_ILLEGAL");

     label1:
        r6 = virtualinvoke r0.<org.apache.xalan.templates.FuncFormatNumb: org.apache.xpath.Expression getArg2()>();

        if null == r6 goto label3;

        $r21 = virtualinvoke r6.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r7 = virtualinvoke $r21.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $r23 = new org.apache.xml.utils.QName;

        $r24 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        specialinvoke $r23.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)>(r7, $r24);

        r8 = $r23;

        r29 = virtualinvoke r3.<org.apache.xalan.templates.StylesheetRoot: java.text.DecimalFormatSymbols getDecimalFormatComposed(org.apache.xml.utils.QName)>(r8);

        if null != r29 goto label2;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r7;

        virtualinvoke r0.<org.apache.xalan.templates.FuncFormatNumb: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_NO_DECIMALFORMAT_DECLARATION", $r27);

        goto label3;

     label2:
        $r22 = new java.text.DecimalFormat;

        specialinvoke $r22.<java.text.DecimalFormat: void <init>()>();

        r4 = $r22;

        virtualinvoke r4.<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>(r29);

        virtualinvoke r4.<java.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)>(r5);

     label3:
        if null != r4 goto label5;

        $r16 = new org.apache.xml.utils.QName;

        specialinvoke $r16.<org.apache.xml.utils.QName: void <init>(java.lang.String)>("");

        r30 = virtualinvoke r3.<org.apache.xalan.templates.StylesheetRoot: java.text.DecimalFormatSymbols getDecimalFormatComposed(org.apache.xml.utils.QName)>($r16);

        if r30 == null goto label4;

        $r19 = new java.text.DecimalFormat;

        specialinvoke $r19.<java.text.DecimalFormat: void <init>()>();

        r4 = $r19;

        virtualinvoke r4.<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>(r30);

        virtualinvoke r4.<java.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)>(r5);

        goto label5;

     label4:
        $r18 = new java.text.DecimalFormatSymbols;

        $r17 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r18.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r17);

        r31 = $r18;

        virtualinvoke r31.<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>("Infinity");

        virtualinvoke r31.<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>("NaN");

        $r20 = new java.text.DecimalFormat;

        specialinvoke $r20.<java.text.DecimalFormat: void <init>()>();

        r4 = $r20;

        virtualinvoke r4.<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>(r31);

        if null == r5 goto label5;

        virtualinvoke r4.<java.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)>(r5);

     label5:
        $r15 = new org.apache.xpath.objects.XString;

        $r14 = virtualinvoke r4.<java.text.DecimalFormat: java.lang.String format(double)>(d0);

        specialinvoke $r15.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r14);

     label6:
        return $r15;

     label7:
        $r28 := @caughtexception;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r5;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_MALFORMED_FORMAT_STRING", $r25);

        $r26 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r26;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    public void warn(org.apache.xpath.XPathContext, java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.FuncFormatNumb r0;
        org.apache.xpath.XPathContext r1;
        java.lang.String r2, r4;
        java.lang.Object[] r3;
        javax.xml.transform.ErrorListener r5;
        javax.xml.transform.TransformerException $r6;
        javax.xml.transform.SourceLocator $r7;
        org.apache.xml.utils.SAXSourceLocator $r8;

        r0 := @this: org.apache.xalan.templates.FuncFormatNumb;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createWarning(java.lang.String,java.lang.Object[])>(r2, r3);

        r5 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()>();

        $r6 = new javax.xml.transform.TransformerException;

        $r7 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        $r8 = (org.apache.xml.utils.SAXSourceLocator) $r7;

        specialinvoke $r6.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r4, $r8);

        interfaceinvoke r5.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r6);

        return;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xalan.templates.FuncFormatNumb r0;
        int i0;

        r0 := @this: org.apache.xalan.templates.FuncFormatNumb;

        i0 := @parameter0: int;

        if i0 > 3 goto label1;

        if i0 >= 2 goto label2;

     label1:
        virtualinvoke r0.<org.apache.xalan.templates.FuncFormatNumb: void reportWrongNumberArgs()>();

     label2:
        return;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xalan.templates.FuncFormatNumb r0;
        org.apache.xpath.functions.WrongNumberArgsException $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.FuncFormatNumb;

        $r1 = new org.apache.xpath.functions.WrongNumberArgsException;

        $r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_TWO_OR_THREE", null);

        specialinvoke $r1.<org.apache.xpath.functions.WrongNumberArgsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.FuncFormatNumb: long serialVersionUID> = -8869935264870858636L;

        return;
    }
}
