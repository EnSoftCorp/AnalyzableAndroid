public class org.apache.xalan.processor.ProcessorLRE extends org.apache.xalan.processor.ProcessorTemplateElem
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.processor.ProcessorLRE r0;

        r0 := @this: org.apache.xalan.processor.ProcessorLRE;

        specialinvoke r0.<org.apache.xalan.processor.ProcessorTemplateElem: void <init>()>();

        return;
    }

    public void startElement(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorLRE r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r14, r15, r16, $r43, $r44, $r45, $r46, $r48, $r51, $r52, $r59;
        org.xml.sax.Attributes r5;
        org.apache.xalan.templates.ElemTemplateElement r6, r69;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, z15, z16;
        org.apache.xalan.processor.XSLTElementProcessor r7, r8;
        org.apache.xalan.templates.Stylesheet r9, r68;
        javax.xml.transform.TransformerConfigurationException r10, $r55;
        org.apache.xml.utils.SAXSourceLocator r11, $r20, $r25, $r35, r61;
        org.xml.sax.helpers.AttributesImpl r12, r13, $r36, $r37;
        int i0, i1, $i2, $i3;
        org.w3c.dom.Node $r17;
        java.lang.Object $r18, $r30, $r31;
        org.xml.sax.helpers.NamespaceSupport $r19, $r22, $r38;
        org.apache.xalan.templates.ElemLiteralResult $r21, $r23, $r26, $r27, $r28, $r29, $r32, $r33, r67;
        org.apache.xalan.templates.ElemExtensionCall $r24, $r34;
        org.apache.xpath.XPath $r39, r64;
        org.apache.xalan.templates.ElemTemplate $r40, r63;
        org.apache.xalan.processor.TransformerFactoryImpl $r41;
        javax.xml.transform.ErrorListener $r42;
        java.lang.IllegalAccessException $r47, r71;
        java.lang.Exception $r49, r62;
        java.lang.InstantiationException $r50, r70;
        javax.xml.transform.TransformerException $r53, $r60, r72;
        org.xml.sax.SAXException $r54, $r56, $r57;
        java.util.List $r58;
        org.apache.xalan.processor.XSLTElementDef r65;
        java.lang.Class r66;

        r0 := @this: org.apache.xalan.processor.ProcessorLRE;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.xml.sax.Attributes;

     label01:
        r6 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()>();

        z0 = 0;

        z1 = 0;

        if null != r6 goto label20;

        r7 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor popProcessor()>();

        r8 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/XSL/Transform", "stylesheet", "xsl:stylesheet");

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushProcessor(org.apache.xalan.processor.XSLTElementProcessor)>(r7);

     label02:
        r9 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorLRE: org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)>(r1);

     label03:
        goto label05;

     label04:
        $r55 := @caughtexception;

        r10 = $r55;

        $r60 = new javax.xml.transform.TransformerException;

        specialinvoke $r60.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r10);

        throw $r60;

     label05:
        $r35 = new org.apache.xml.utils.SAXSourceLocator;

        specialinvoke $r35.<org.apache.xml.utils.SAXSourceLocator: void <init>()>();

        r61 = $r35;

        r11 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        if null == r11 goto label06;

        $i2 = interfaceinvoke r11.<org.xml.sax.Locator: int getLineNumber()>();

        virtualinvoke r61.<org.apache.xml.utils.SAXSourceLocator: void setLineNumber(int)>($i2);

        $i3 = interfaceinvoke r11.<org.xml.sax.Locator: int getColumnNumber()>();

        virtualinvoke r61.<org.apache.xml.utils.SAXSourceLocator: void setColumnNumber(int)>($i3);

        $r52 = interfaceinvoke r11.<org.xml.sax.Locator: java.lang.String getPublicId()>();

        virtualinvoke r61.<org.apache.xml.utils.SAXSourceLocator: void setPublicId(java.lang.String)>($r52);

        $r48 = interfaceinvoke r11.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        virtualinvoke r61.<org.apache.xml.utils.SAXSourceLocator: void setSystemId(java.lang.String)>($r48);

     label06:
        virtualinvoke r9.<org.apache.xalan.templates.Stylesheet: void setLocaterInfo(javax.xml.transform.SourceLocator)>(r61);

        $r38 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke r9.<org.apache.xalan.templates.Stylesheet: void setPrefixes(org.xml.sax.helpers.NamespaceSupport)>($r38);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushStylesheet(org.apache.xalan.templates.Stylesheet)>(r9);

        z1 = 1;

        $r37 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r37.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r12 = $r37;

        $r36 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r36.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r13 = $r36;

        i1 = interfaceinvoke r5.<org.xml.sax.Attributes: int getLength()>();

        i0 = 0;

     label07:
        if i0 >= i1 goto label12;

        r15 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i0);

        r14 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        r16 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        if null == r14 goto label08;

        $z10 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z10 == 0 goto label08;

        $r43 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getType(int)>(i0);

        $r51 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        virtualinvoke r12.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r15, r15, $r43, $r51);

        goto label11;

     label08:
        $z8 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z8 != 0 goto label09;

        $z9 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z9 == 0 goto label10;

     label09:
        $z11 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z11 == 0 goto label10;

        goto label11;

     label10:
        $r44 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i0);

        $r45 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getType(int)>(i0);

        $r46 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        virtualinvoke r13.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r14, r15, $r44, $r45, $r46);

     label11:
        i0 = i0 + 1;

        goto label07;

     label12:
        r5 = r13;

     label13:
        virtualinvoke r8.<org.apache.xalan.processor.XSLTElementProcessor: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)>(r1, "stylesheet", r12, r9);

     label14:
        goto label18;

     label15:
        $r49 := @caughtexception;

        r62 = $r49;

        $r58 = virtualinvoke r9.<org.apache.xalan.templates.Stylesheet: java.util.List getDeclaredPrefixes()>();

        if $r58 == null goto label16;

        $z12 = specialinvoke r0.<org.apache.xalan.processor.ProcessorLRE: boolean declaredXSLNS(org.apache.xalan.templates.Stylesheet)>(r9);

        if $z12 != 0 goto label17;

     label16:
        $r57 = new org.xml.sax.SAXException;

        $r59 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createWarning(java.lang.String,java.lang.Object[])>("WG_OLD_XSLT_NS", null);

        specialinvoke $r57.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r59);

        throw $r57;

     label17:
        $r54 = new org.xml.sax.SAXException;

        specialinvoke $r54.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r62);

        throw $r54;

     label18:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r9);

        $r40 = new org.apache.xalan.templates.ElemTemplate;

        specialinvoke $r40.<org.apache.xalan.templates.ElemTemplate: void <init>()>();

        r63 = $r40;

        if r61 == null goto label19;

        virtualinvoke r63.<org.apache.xalan.templates.ElemTemplate: void setLocaterInfo(javax.xml.transform.SourceLocator)>(r61);

     label19:
        virtualinvoke r0.<org.apache.xalan.processor.ProcessorLRE: void appendAndPush(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)>(r1, r63);

        $r39 = new org.apache.xpath.XPath;

        $r41 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        $r42 = virtualinvoke $r41.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        specialinvoke $r39.<org.apache.xpath.XPath: void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)>("/", r9, r9, 1, $r42);

        r64 = $r39;

        virtualinvoke r63.<org.apache.xalan.templates.ElemTemplate: void setMatch(org.apache.xpath.XPath)>(r64);

        virtualinvoke r9.<org.apache.xalan.templates.Stylesheet: void setTemplate(org.apache.xalan.templates.ElemTemplate)>(r63);

        r6 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()>();

        z0 = 1;

     label20:
        r65 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorLRE: org.apache.xalan.processor.XSLTElementDef getElemDef()>();

        r66 = virtualinvoke r65.<org.apache.xalan.processor.XSLTElementDef: java.lang.Class getClassObject()>();

        z13 = 0;

        z14 = 0;

        z15 = 0;

     label21:
        if null == r6 goto label27;

        $z5 = r6 instanceof org.apache.xalan.templates.ElemLiteralResult;

        if $z5 == 0 goto label22;

        r67 = (org.apache.xalan.templates.ElemLiteralResult) r6;

        z13 = virtualinvoke r67.<org.apache.xalan.templates.ElemLiteralResult: boolean containsExtensionElementURI(java.lang.String)>(r2);

        goto label25;

     label22:
        $z4 = r6 instanceof org.apache.xalan.templates.Stylesheet;

        if $z4 == 0 goto label25;

        r68 = (org.apache.xalan.templates.Stylesheet) r6;

        z13 = virtualinvoke r68.<org.apache.xalan.templates.Stylesheet: boolean containsExtensionElementURI(java.lang.String)>(r2);

        if 0 != z13 goto label24;

        if null == r2 goto label24;

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan");

        if $z7 != 0 goto label23;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xslt");

        if $z6 == 0 goto label24;

     label23:
        z14 = 1;

        goto label25;

     label24:
        z15 = 1;

     label25:
        if z13 == 0 goto label26;

        goto label27;

     label26:
        r6 = virtualinvoke r6.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        goto label21;

     label27:
        r69 = null;

     label28:
        if z13 == 0 goto label29;

        $r34 = new org.apache.xalan.templates.ElemExtensionCall;

        specialinvoke $r34.<org.apache.xalan.templates.ElemExtensionCall: void <init>()>();

        r69 = $r34;

        goto label32;

     label29:
        if z14 == 0 goto label30;

        $r31 = virtualinvoke r66.<java.lang.Class: java.lang.Object newInstance()>();

        r69 = (org.apache.xalan.templates.ElemTemplateElement) $r31;

        goto label32;

     label30:
        if z15 == 0 goto label31;

        $r30 = virtualinvoke r66.<java.lang.Class: java.lang.Object newInstance()>();

        r69 = (org.apache.xalan.templates.ElemTemplateElement) $r30;

        goto label32;

     label31:
        $r18 = virtualinvoke r66.<java.lang.Class: java.lang.Object newInstance()>();

        r69 = (org.apache.xalan.templates.ElemTemplateElement) $r18;

     label32:
        $r17 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node getOriginatingNode()>();

        virtualinvoke r69.<org.apache.xalan.templates.ElemTemplateElement: void setDOMBackPointer(org.w3c.dom.Node)>($r17);

        $r20 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        virtualinvoke r69.<org.apache.xalan.templates.ElemTemplateElement: void setLocaterInfo(javax.xml.transform.SourceLocator)>($r20);

        $r19 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke r69.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport,boolean)>($r19, z0);

        $z3 = r69 instanceof org.apache.xalan.templates.ElemLiteralResult;

        if $z3 == 0 goto label33;

        $r26 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r26.<org.apache.xalan.templates.ElemLiteralResult: void setNamespace(java.lang.String)>(r2);

        $r27 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r27.<org.apache.xalan.templates.ElemLiteralResult: void setLocalName(java.lang.String)>(r3);

        $r32 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r32.<org.apache.xalan.templates.ElemLiteralResult: void setRawName(java.lang.String)>(r4);

        $r33 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r33.<org.apache.xalan.templates.ElemLiteralResult: void setIsLiteralResultAsStylesheet(boolean)>(z1);

     label33:
        goto label36;

     label34:
        $r50 := @caughtexception;

        r70 = $r50;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_FAILED_CREATING_ELEMLITRSLT", null, r70);

        goto label36;

     label35:
        $r47 := @caughtexception;

        r71 = $r47;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_FAILED_CREATING_ELEMLITRSLT", null, r71);

     label36:
        virtualinvoke r0.<org.apache.xalan.processor.ProcessorLRE: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)>(r1, r4, r5, r69);

        if z13 != 0 goto label37;

        $z2 = r69 instanceof org.apache.xalan.templates.ElemLiteralResult;

        if $z2 == 0 goto label37;

        $r21 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        z16 = virtualinvoke $r21.<org.apache.xalan.templates.ElemLiteralResult: boolean containsExtensionElementURI(java.lang.String)>(r2);

        if z16 == 0 goto label37;

        $r24 = new org.apache.xalan.templates.ElemExtensionCall;

        specialinvoke $r24.<org.apache.xalan.templates.ElemExtensionCall: void <init>()>();

        r69 = $r24;

        $r25 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        virtualinvoke r69.<org.apache.xalan.templates.ElemTemplateElement: void setLocaterInfo(javax.xml.transform.SourceLocator)>($r25);

        $r22 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke r69.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport)>($r22);

        $r23 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r23.<org.apache.xalan.templates.ElemLiteralResult: void setNamespace(java.lang.String)>(r2);

        $r28 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r28.<org.apache.xalan.templates.ElemLiteralResult: void setLocalName(java.lang.String)>(r3);

        $r29 = (org.apache.xalan.templates.ElemLiteralResult) r69;

        virtualinvoke $r29.<org.apache.xalan.templates.ElemLiteralResult: void setRawName(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.xalan.processor.ProcessorLRE: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)>(r1, r4, r5, r69);

     label37:
        virtualinvoke r0.<org.apache.xalan.processor.ProcessorLRE: void appendAndPush(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)>(r1, r69);

     label38:
        goto label40;

     label39:
        $r53 := @caughtexception;

        r72 = $r53;

        $r56 = new org.xml.sax.SAXException;

        specialinvoke $r56.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r72);

        throw $r56;

     label40:
        return;

        catch javax.xml.transform.TransformerConfigurationException from label02 to label03 with label04;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.InstantiationException from label28 to label33 with label34;
        catch java.lang.IllegalAccessException from label28 to label33 with label35;
        catch javax.xml.transform.TransformerException from label01 to label38 with label39;
    }

    protected org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.ProcessorLRE r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        org.apache.xalan.templates.StylesheetRoot r2, $r3;
        org.apache.xalan.processor.XSLTSchema $r4;
        org.apache.xalan.processor.TransformerFactoryImpl $r5, $r7;
        javax.xml.transform.ErrorListener $r6;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.ProcessorLRE;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        $r3 = new org.apache.xalan.templates.StylesheetRoot;

        $r4 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTSchema getSchema()>();

        $r5 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        $r6 = virtualinvoke $r5.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        specialinvoke $r3.<org.apache.xalan.templates.StylesheetRoot: void <init>(org.apache.xalan.processor.XSLTSchema,javax.xml.transform.ErrorListener)>($r4, $r6);

        r2 = $r3;

        $r7 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        $z0 = virtualinvoke $r7.<org.apache.xalan.processor.TransformerFactoryImpl: boolean isSecureProcessing()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot: void setSecureProcessing(boolean)>(1);

     label1:
        return r2;
    }

    public void endElement(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorLRE r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.templates.ElemTemplateElement r5;
        boolean $z0, $z1;
        org.apache.xalan.templates.ElemLiteralResult $r6;

        r0 := @this: org.apache.xalan.processor.ProcessorLRE;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()>();

        $z0 = r5 instanceof org.apache.xalan.templates.ElemLiteralResult;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.xalan.templates.ElemLiteralResult) r5;

        $z1 = virtualinvoke $r6.<org.apache.xalan.templates.ElemLiteralResult: boolean getIsLiteralResultAsStylesheet()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet popStylesheet()>();

     label1:
        specialinvoke r0.<org.apache.xalan.processor.ProcessorTemplateElem: void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    private boolean declaredXSLNS(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.processor.ProcessorLRE r0;
        org.apache.xalan.templates.Stylesheet r1;
        java.util.List r2;
        int i0, i1;
        org.apache.xalan.templates.XMLNSDecl r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.ProcessorLRE;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        r2 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: java.util.List getDeclaredPrefixes()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (org.apache.xalan.templates.XMLNSDecl) $r4;

        $r5 = virtualinvoke r3.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.ProcessorLRE: long serialVersionUID> = -1490218021772101404L;

        return;
    }
}
