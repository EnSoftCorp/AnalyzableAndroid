class org.apache.xml.utils.ObjectFactory extends java.lang.Object
{
    private static final java.lang.String DEFAULT_PROPERTIES_FILENAME;
    private static final java.lang.String SERVICES_PATH;
    private static final boolean DEBUG;
    private static java.util.Properties fXalanProperties;
    private static long fLastModified;

    void <init>()
    {
        org.apache.xml.utils.ObjectFactory r0;

        r0 := @this: org.apache.xml.utils.ObjectFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object createObject(java.lang.String, java.lang.String) throws org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String,java.lang.String)>(r0, null, r1);

        return $r2;
    }

    static java.lang.Object createObject(java.lang.String, java.lang.String, java.lang.String) throws org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r1, r2, $r8, $r15, $r22;
        java.lang.Class r3;
        java.lang.Object r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r16, $r18, $r19, $r20, $r21;
        org.apache.xml.utils.ObjectFactory$ConfigurationError $r9, $r17;
        java.lang.Exception $r14, r23;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.Class lookUpFactoryClass(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        if r3 != null goto label1;

        $r9 = new org.apache.xml.utils.ObjectFactory$ConfigurationError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.xml.utils.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r15, null);

        throw $r9;

     label1:
        r4 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of factory ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r8);

     label2:
        return r4;

     label3:
        $r14 := @caughtexception;

        r23 = $r14;

        $r17 = new org.apache.xml.utils.ObjectFactory$ConfigurationError;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for factory ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.xml.utils.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r22, r23);

        throw $r17;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.Class lookUpFactoryClass(java.lang.String) throws org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        java.lang.String r0;
        java.lang.Class $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.Class lookUpFactoryClass(java.lang.String,java.lang.String,java.lang.String)>(r0, null, null);

        return $r1;
    }

    static java.lang.Class lookUpFactoryClass(java.lang.String, java.lang.String, java.lang.String) throws org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r1, r2, r3, $r11, $r20, $r25;
        java.lang.ClassLoader r4;
        java.lang.Class r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r15, $r16, $r17, $r18, $r21, $r23, $r24, $r26;
        java.lang.Exception $r12, r28;
        org.apache.xml.utils.ObjectFactory$ConfigurationError $r14, $r22;
        java.lang.ClassNotFoundException $r19, r27;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.String lookUpFactoryClassName(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        r4 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        if r3 != null goto label1;

        r3 = r2;

     label1:
        r5 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r3, r4, 1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r11);

     label2:
        return r5;

     label3:
        $r19 := @caughtexception;

        r27 = $r19;

        $r22 = new org.apache.xml.utils.ObjectFactory$ConfigurationError;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.xml.utils.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r25, r27);

        throw $r22;

     label4:
        $r12 := @caughtexception;

        r28 = $r12;

        $r14 = new org.apache.xml.utils.ObjectFactory$ConfigurationError;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.xml.utils.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r20, r28);

        throw $r14;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    static java.lang.String lookUpFactoryClassName(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r4, r6, $r17, $r22, $r26, $r27, $r40, r54;
        org.apache.xml.utils.SecuritySupport r3;
        java.io.File r5, $r14, $r29;
        boolean z0, z1;
        java.io.FileInputStream r7, r59;
        java.lang.Throwable r9, r11, r12, $r47, $r50, $r51;
        java.util.Properties $r15, $r32, $r33, $r34, $r35, r60;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r28, $r30, $r31, $r36, $r37, $r41;
        byte $b0, $b4;
        long $l1, $l2, $l3, $l5;
        java.io.IOException $r38, $r44, $r45, $r46, $r48, $r49;
        java.lang.Exception $r39, $r42;
        java.lang.SecurityException $r43, $r52;
        java.lang.Class r56;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <org.apache.xml.utils.SecuritySupport: org.apache.xml.utils.SecuritySupport getInstance()>();

     label01:
        r4 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>(r0);

        if r4 == null goto label03;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found system property, value=");

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r40);

     label02:
        return r4;

     label03:
        goto label05;

     label04:
        $r52 := @caughtexception;

     label05:
        r54 = null;

        if r1 != null goto label36;

        r5 = null;

        z0 = 0;

     label06:
        r6 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("java.home");

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r27 = <java.io.File: java.lang.String separator>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r26 = <java.io.File: java.lang.String separator>;

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xalan.properties");

        r1 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = new java.io.File;

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>(r1);

        r5 = $r29;

        z0 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: boolean getFileExists(java.io.File)>(r5);

     label07:
        goto label09;

     label08:
        $r43 := @caughtexception;

        <org.apache.xml.utils.ObjectFactory: long fLastModified> = -1L;

        <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties> = null;

     label09:
        r56 = class "org/apache/xml/utils/ObjectFactory";

        entermonitor class "org/apache/xml/utils/ObjectFactory";

     label10:
        z1 = 0;

        r7 = null;

     label11:
        $l1 = <org.apache.xml.utils.ObjectFactory: long fLastModified>;

        $b0 = $l1 cmp 0L;

        if $b0 < 0 goto label13;

        if z0 == 0 goto label12;

        $l2 = <org.apache.xml.utils.ObjectFactory: long fLastModified>;

        $l5 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: long getLastModified(java.io.File)>(r5);

        <org.apache.xml.utils.ObjectFactory: long fLastModified> = $l5;

        $b4 = $l2 cmp $l5;

        if $b4 >= 0 goto label12;

        z1 = 1;

        goto label14;

     label12:
        if z0 != 0 goto label14;

        <org.apache.xml.utils.ObjectFactory: long fLastModified> = -1L;

        <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties> = null;

        goto label14;

     label13:
        if z0 == 0 goto label14;

        z1 = 1;

        $l3 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: long getLastModified(java.io.File)>(r5);

        <org.apache.xml.utils.ObjectFactory: long fLastModified> = $l3;

     label14:
        if z1 == 0 goto label15;

        $r32 = new java.util.Properties;

        specialinvoke $r32.<java.util.Properties: void <init>()>();

        <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties> = $r32;

        r7 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>(r5);

        $r35 = <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties>;

        virtualinvoke $r35.<java.util.Properties: void load(java.io.InputStream)>(r7);

     label15:
        if r7 == null goto label30;

     label16:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

     label17:
        goto label30;

     label18:
        $r48 := @caughtexception;

        goto label30;

     label19:
        $r39 := @caughtexception;

        <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties> = null;

        <org.apache.xml.utils.ObjectFactory: long fLastModified> = -1L;

     label20:
        if r7 == null goto label30;

     label21:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

     label22:
        goto label30;

     label23:
        $r45 := @caughtexception;

        goto label30;

     label24:
        $r51 := @caughtexception;

        r9 = $r51;

     label25:
        if r7 == null goto label29;

     label26:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r49 := @caughtexception;

     label29:
        throw r9;

     label30:
        exitmonitor r56;

     label31:
        goto label34;

     label32:
        $r50 := @caughtexception;

        r11 = $r50;

        exitmonitor r56;

     label33:
        throw r11;

     label34:
        $r33 = <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties>;

        if $r33 == null goto label35;

        $r34 = <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties>;

        r54 = virtualinvoke $r34.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

     label35:
        goto label53;

     label36:
        r59 = null;

     label37:
        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>(r1);

        r59 = virtualinvoke r3.<org.apache.xml.utils.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>($r14);

        $r15 = new java.util.Properties;

        specialinvoke $r15.<java.util.Properties: void <init>()>();

        r60 = $r15;

        virtualinvoke r60.<java.util.Properties: void load(java.io.InputStream)>(r59);

        r54 = virtualinvoke r60.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

     label38:
        if r59 == null goto label53;

     label39:
        virtualinvoke r59.<java.io.FileInputStream: void close()>();

     label40:
        goto label53;

     label41:
        $r38 := @caughtexception;

        goto label53;

     label42:
        $r42 := @caughtexception;

     label43:
        if r59 == null goto label53;

     label44:
        virtualinvoke r59.<java.io.FileInputStream: void close()>();

     label45:
        goto label53;

     label46:
        $r46 := @caughtexception;

        goto label53;

     label47:
        $r47 := @caughtexception;

        r12 = $r47;

     label48:
        if r59 == null goto label52;

     label49:
        virtualinvoke r59.<java.io.FileInputStream: void close()>();

     label50:
        goto label52;

     label51:
        $r44 := @caughtexception;

     label52:
        throw r12;

     label53:
        if r54 == null goto label54;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r22);

        return r54;

     label54:
        $r17 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.String findJarServiceProviderName(java.lang.String)>(r0);

        return $r17;

        catch java.lang.SecurityException from label01 to label02 with label04;
        catch java.lang.SecurityException from label06 to label07 with label08;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Exception from label11 to label15 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label11 to label15 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.Throwable from label10 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.lang.Exception from label37 to label38 with label42;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.lang.Throwable from label37 to label38 with label47;
        catch java.lang.Throwable from label42 to label43 with label47;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.lang.Throwable from label47 to label48 with label47;
    }

    private static void debugPrintln(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    static java.lang.ClassLoader findClassLoader() throws org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        org.apache.xml.utils.SecuritySupport r0;
        java.lang.ClassLoader r1, r2, r3, r4, r6;
        java.lang.Class $r5;

        r0 = staticinvoke <org.apache.xml.utils.SecuritySupport: org.apache.xml.utils.SecuritySupport getInstance()>();

        r1 = virtualinvoke r0.<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        r2 = virtualinvoke r0.<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()>();

        r3 = r2;

     label1:
        if r1 != r3 goto label6;

        $r5 = class "org/apache/xml/utils/ObjectFactory";

        r4 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r6 = r2;

     label2:
        if r4 != r6 goto label3;

        return r2;

     label3:
        if r6 != null goto label4;

        goto label5;

     label4:
        r6 = virtualinvoke r0.<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)>(r6);

        goto label2;

     label5:
        return r4;

     label6:
        if r3 != null goto label7;

        goto label8;

     label7:
        r3 = virtualinvoke r0.<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)>(r3);

        goto label1;

     label8:
        return r1;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean) throws org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, $r9, $r15, $r23;
        java.lang.ClassLoader r1;
        boolean z0;
        java.lang.Class r2;
        java.lang.Object r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r22, $r24;
        java.lang.ClassNotFoundException $r10, r25;
        org.apache.xml.utils.ObjectFactory$ConfigurationError $r11, $r17;
        java.lang.Exception $r18, r26;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

     label1:
        r2 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r0, r1, z0);

        r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r9);

     label2:
        return r3;

     label3:
        $r10 := @caughtexception;

        r25 = $r10;

        $r11 = new org.apache.xml.utils.ObjectFactory$ConfigurationError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.xml.utils.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r15, r25);

        throw $r11;

     label4:
        $r18 := @caughtexception;

        r26 = $r18;

        $r17 = new org.apache.xml.utils.ObjectFactory$ConfigurationError;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.xml.utils.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r23, r26);

        throw $r17;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    static java.lang.Class findProviderClass(java.lang.String, java.lang.ClassLoader, boolean) throws java.lang.ClassNotFoundException, org.apache.xml.utils.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r3;
        java.lang.ClassLoader r1, r4, r11;
        boolean z0;
        java.lang.SecurityManager r2;
        int i0;
        java.lang.SecurityException $r5, r8;
        java.lang.ClassNotFoundException $r6, r10;
        java.lang.Class $r7, r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

     label01:
        if r2 == null goto label03;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        r3 = r0;

        if i0 == -1 goto label02;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label02:
        virtualinvoke r2.<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>(r3);

     label03:
        goto label05;

     label04:
        $r5 := @caughtexception;

        r8 = $r5;

        throw r8;

     label05:
        if r1 != null goto label06;

        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        goto label13;

     label06:
        r9 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label07:
        goto label13;

     label08:
        $r6 := @caughtexception;

        r10 = $r6;

        if z0 == 0 goto label12;

        $r7 = class "org/apache/xml/utils/ObjectFactory";

        r4 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r4 != null goto label09;

        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        goto label11;

     label09:
        if r1 == r4 goto label10;

        r11 = r4;

        r9 = virtualinvoke r11.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

        goto label11;

     label10:
        throw r10;

     label11:
        goto label13;

     label12:
        throw r10;

     label13:
        return r9;

        catch java.lang.SecurityException from label01 to label03 with label04;
        catch java.lang.ClassNotFoundException from label06 to label07 with label08;
    }

    private static java.lang.String findJarServiceProviderName(java.lang.String)
    {
        java.lang.String r0, r2, $r15, $r17, $r22, r33;
        org.apache.xml.utils.SecuritySupport r1;
        java.lang.ClassLoader r3, r4;
        java.lang.Throwable r5, $r29;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r18, $r19, $r21;
        java.io.BufferedReader $r14, $r27, r32;
        java.io.InputStreamReader $r16, $r30;
        boolean $z0;
        java.lang.Class $r20;
        java.io.IOException $r23, $r24, $r25, $r28;
        java.io.UnsupportedEncodingException $r26;
        java.io.InputStream r31;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <org.apache.xml.utils.SecuritySupport: org.apache.xml.utils.SecuritySupport getInstance()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <org.apache.xml.utils.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r31 = virtualinvoke r1.<org.apache.xml.utils.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);

        if r31 != null goto label01;

        $r20 = class "org/apache/xml/utils/ObjectFactory";

        r4 = virtualinvoke $r20.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r3 == r4 goto label01;

        r3 = r4;

        r31 = virtualinvoke r1.<org.apache.xml.utils.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);

     label01:
        if r31 != null goto label02;

        return null;

     label02:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found jar resource=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r15);

     label03:
        $r14 = new java.io.BufferedReader;

        $r16 = new java.io.InputStreamReader;

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r31, "UTF-8");

        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader)>($r16);

        r32 = $r14;

     label04:
        goto label06;

     label05:
        $r26 := @caughtexception;

        $r27 = new java.io.BufferedReader;

        $r30 = new java.io.InputStreamReader;

        specialinvoke $r30.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r31);

        specialinvoke $r27.<java.io.BufferedReader: void <init>(java.io.Reader)>($r30);

        r32 = $r27;

     label06:
        r33 = virtualinvoke r32.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        virtualinvoke r32.<java.io.BufferedReader: void close()>();

     label08:
        goto label20;

     label09:
        $r25 := @caughtexception;

        goto label20;

     label10:
        $r23 := @caughtexception;

     label11:
        virtualinvoke r32.<java.io.BufferedReader: void close()>();

     label12:
        goto label14;

     label13:
        $r24 := @caughtexception;

     label14:
        return null;

     label15:
        $r29 := @caughtexception;

        r5 = $r29;

     label16:
        virtualinvoke r32.<java.io.BufferedReader: void close()>();

     label17:
        goto label19;

     label18:
        $r28 := @caughtexception;

     label19:
        throw r5;

     label20:
        if r33 == null goto label21;

        $r17 = "";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r33);

        if $z0 != 0 goto label21;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in resource, value=");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xml.utils.ObjectFactory: void debugPrintln(java.lang.String)>($r22);

        return r33;

     label21:
        return null;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    static void <clinit>()
    {
        <org.apache.xml.utils.ObjectFactory: boolean DEBUG> = 0;

        <org.apache.xml.utils.ObjectFactory: java.lang.String SERVICES_PATH> = "META-INF/services/";

        <org.apache.xml.utils.ObjectFactory: java.lang.String DEFAULT_PROPERTIES_FILENAME> = "xalan.properties";

        <org.apache.xml.utils.ObjectFactory: java.util.Properties fXalanProperties> = null;

        <org.apache.xml.utils.ObjectFactory: long fLastModified> = -1L;

        return;
    }
}
