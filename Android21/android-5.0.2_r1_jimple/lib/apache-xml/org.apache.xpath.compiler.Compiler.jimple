public class org.apache.xpath.compiler.Compiler extends org.apache.xpath.compiler.OpMap
{
    private int locPathDepth;
    private static final boolean DEBUG;
    private static long s_nextMethodId;
    private org.apache.xml.utils.PrefixResolver m_currentPrefixResolver;
    javax.xml.transform.ErrorListener m_errorHandler;
    javax.xml.transform.SourceLocator m_locator;
    private org.apache.xpath.compiler.FunctionTable m_functionTable;

    public void <init>(javax.xml.transform.ErrorListener, javax.xml.transform.SourceLocator, org.apache.xpath.compiler.FunctionTable)
    {
        org.apache.xpath.compiler.Compiler r0;
        javax.xml.transform.ErrorListener r1;
        javax.xml.transform.SourceLocator r2;
        org.apache.xpath.compiler.FunctionTable r3;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        r3 := @parameter2: org.apache.xpath.compiler.FunctionTable;

        specialinvoke r0.<org.apache.xpath.compiler.OpMap: void <init>()>();

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = -1;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver> = null;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler> = r1;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator> = r2;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable m_functionTable> = r3;

        return;
    }

    public void <init>()
    {
        org.apache.xpath.compiler.Compiler r0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        specialinvoke r0.<org.apache.xpath.compiler.OpMap: void <init>()>();

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = -1;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver> = null;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler> = null;

        r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator> = null;

        return;
    }

    public org.apache.xpath.Expression compile(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, $i2, $i3, $i4;
        org.apache.xpath.Expression r1;
        java.lang.Object[] $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        r1 = null;

        tableswitch(i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label31;
            case 16: goto label15;
            case 17: goto label16;
            case 18: goto label17;
            case 19: goto label18;
            case 20: goto label19;
            case 21: goto label20;
            case 22: goto label21;
            case 23: goto label22;
            case 24: goto label25;
            case 25: goto label26;
            case 26: goto label24;
            case 27: goto label23;
            case 28: goto label27;
            case 29: goto label28;
            case 30: goto label29;
            case 31: goto label30;
            default: goto label32;
        };

     label01:
        $i2 = i0 + 2;

        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i2);

        goto label33;

     label02:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression or(int)>(i0);

        goto label33;

     label03:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression and(int)>(i0);

        goto label33;

     label04:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression notequals(int)>(i0);

        goto label33;

     label05:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression equals(int)>(i0);

        goto label33;

     label06:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression lte(int)>(i0);

        goto label33;

     label07:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression lt(int)>(i0);

        goto label33;

     label08:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression gte(int)>(i0);

        goto label33;

     label09:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression gt(int)>(i0);

        goto label33;

     label10:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression plus(int)>(i0);

        goto label33;

     label11:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression minus(int)>(i0);

        goto label33;

     label12:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression mult(int)>(i0);

        goto label33;

     label13:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression div(int)>(i0);

        goto label33;

     label14:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression mod(int)>(i0);

        goto label33;

     label15:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression 'neg'(int)>(i0);

        goto label33;

     label16:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression string(int)>(i0);

        goto label33;

     label17:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression bool(int)>(i0);

        goto label33;

     label18:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression number(int)>(i0);

        goto label33;

     label19:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression union(int)>(i0);

        goto label33;

     label20:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression literal(int)>(i0);

        goto label33;

     label21:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression variable(int)>(i0);

        goto label33;

     label22:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression group(int)>(i0);

        goto label33;

     label23:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression numberlit(int)>(i0);

        goto label33;

     label24:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression arg(int)>(i0);

        goto label33;

     label25:
        r1 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileExtension(int)>(i0);

        goto label33;

     label26:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileFunction(int)>(i0);

        goto label33;

     label27:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression locationPath(int)>(i0);

        goto label33;

     label28:
        r1 = null;

        goto label33;

     label29:
        $i3 = i0 + 2;

        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression matchPattern(int)>($i3);

        goto label33;

     label30:
        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression locationPathPattern(int)>(i0);

        goto label33;

     label31:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "quo";

        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_OPCODE", $r2);

        goto label33;

     label32:
        $r3 = newarray (java.lang.Object)[1];

        $i4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r3[0] = $r4;

        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_OPCODE", $r3);

     label33:
        return r1;
    }

    private org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xpath.operations.Operation r1;
        int i0, i1, i2;
        org.apache.xpath.Expression $r2, $r3;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: org.apache.xpath.operations.Operation;

        i0 := @parameter1: int;

        i1 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        i2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i1);

        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i1);

        $r3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i2);

        virtualinvoke r1.<org.apache.xpath.operations.Operation: void setLeftRight(org.apache.xpath.Expression,org.apache.xpath.Expression)>($r2, $r3);

        return r1;
    }

    private org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xpath.operations.UnaryOperation r1;
        int i0, i1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: org.apache.xpath.operations.UnaryOperation;

        i0 := @parameter1: int;

        i1 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i1);

        virtualinvoke r1.<org.apache.xpath.operations.UnaryOperation: void setRight(org.apache.xpath.Expression)>($r2);

        return r1;
    }

    protected org.apache.xpath.Expression or(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Or $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Or;

        specialinvoke $r1.<org.apache.xpath.operations.Or: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression and(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.And $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.And;

        specialinvoke $r1.<org.apache.xpath.operations.And: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression notequals(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.NotEquals $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.NotEquals;

        specialinvoke $r1.<org.apache.xpath.operations.NotEquals: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression equals(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Equals $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Equals;

        specialinvoke $r1.<org.apache.xpath.operations.Equals: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression lte(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Lte $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Lte;

        specialinvoke $r1.<org.apache.xpath.operations.Lte: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression lt(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Lt $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Lt;

        specialinvoke $r1.<org.apache.xpath.operations.Lt: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression gte(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Gte $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Gte;

        specialinvoke $r1.<org.apache.xpath.operations.Gte: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression gt(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Gt $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Gt;

        specialinvoke $r1.<org.apache.xpath.operations.Gt: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression plus(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Plus $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Plus;

        specialinvoke $r1.<org.apache.xpath.operations.Plus: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression minus(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Minus $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Minus;

        specialinvoke $r1.<org.apache.xpath.operations.Minus: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression mult(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Mult $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Mult;

        specialinvoke $r1.<org.apache.xpath.operations.Mult: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression div(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Div $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Div;

        specialinvoke $r1.<org.apache.xpath.operations.Div: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression mod(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Mod $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Mod;

        specialinvoke $r1.<org.apache.xpath.operations.Mod: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression 'neg'(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Neg $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Neg;

        specialinvoke $r1.<org.apache.xpath.operations.Neg: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression string(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.String $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.String;

        specialinvoke $r1.<org.apache.xpath.operations.String: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression bool(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Bool $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Bool;

        specialinvoke $r1.<org.apache.xpath.operations.Bool: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression number(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0;
        org.apache.xpath.operations.Number $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.operations.Number;

        specialinvoke $r1.<org.apache.xpath.operations.Number: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)>($r1, i0);

        return $r2;
    }

    protected org.apache.xpath.Expression literal(int)
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, i2;
        org.apache.xml.utils.ObjectVector $r1;
        java.lang.Object $r2;
        org.apache.xpath.objects.XString $r3;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i2 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i2);

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i1);

        $r3 = (org.apache.xpath.objects.XString) $r2;

        return $r3;
    }

    protected org.apache.xpath.Expression numberlit(int)
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, i2;
        org.apache.xml.utils.ObjectVector $r1;
        java.lang.Object $r2;
        org.apache.xpath.objects.XNumber $r3;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i2 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i2);

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i1);

        $r3 = (org.apache.xpath.objects.XNumber) $r2;

        return $r3;
    }

    protected org.apache.xpath.Expression variable(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, $i2, $i3, i4;
        org.apache.xpath.operations.Variable r1, $r5;
        java.lang.String r2, r3, $r10;
        org.apache.xml.utils.QName r4, $r11;
        org.apache.xml.utils.ObjectVector $r6, $r8;
        java.lang.Object $r7, $r9;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $r5 = new org.apache.xpath.operations.Variable;

        specialinvoke $r5.<org.apache.xpath.operations.Variable: void <init>()>();

        r1 = $r5;

        i4 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i4);

        if -2 != i1 goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $r7 = virtualinvoke $r6.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>(i1);

        $r10 = (java.lang.String) $r7;

     label2:
        r2 = $r10;

        $r8 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i2 = i4 + 1;

        $i3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>($i2);

        $r9 = virtualinvoke $r8.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i3);

        r3 = (java.lang.String) $r9;

        $r11 = new org.apache.xml.utils.QName;

        specialinvoke $r11.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        r4 = $r11;

        virtualinvoke r1.<org.apache.xpath.operations.Variable: void setQName(org.apache.xml.utils.QName)>(r4);

        return r1;
    }

    protected org.apache.xpath.Expression group(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        return $r1;
    }

    protected org.apache.xpath.Expression arg(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        return $r1;
    }

    protected org.apache.xpath.Expression union(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.xpath.axes.LocPathIterator r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i2 = $i1 + 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i2;

     label1:
        r1 = staticinvoke <org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator createUnionIterator(org.apache.xpath.compiler.Compiler,int)>(r0, i0);

     label2:
        $i3 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i4 = $i3 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i4;

        return r1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        $i5 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i6 = $i5 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i6;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getLocationPathDepth()
    {
        org.apache.xpath.compiler.Compiler r0;
        int $i0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $i0 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        return $i0;
    }

    org.apache.xpath.compiler.FunctionTable getFunctionTable()
    {
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xpath.compiler.FunctionTable $r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $r1 = r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable m_functionTable>;

        return $r1;
    }

    public org.apache.xpath.Expression locationPath(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xml.dtm.DTMIterator r1;
        org.apache.xpath.Expression r2;
        java.lang.Throwable r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i2 = $i1 + 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i2;

     label1:
        $i3 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        if $i3 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r1 = staticinvoke <org.apache.xpath.axes.WalkerFactory: org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)>(r0, i0, $z0);

        r2 = (org.apache.xpath.Expression) r1;

     label4:
        $i4 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i5 = $i4 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i5;

        return r2;

     label5:
        $r4 := @caughtexception;

        r3 = $r4;

     label6:
        $i6 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i7 = $i6 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i7;

        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xpath.Expression predicate(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, $i1;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i1);

        return $r1;
    }

    protected org.apache.xpath.Expression matchPattern(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        org.apache.xpath.Expression r1, $r7;
        org.apache.xpath.patterns.StepPattern[] r2;
        org.apache.xpath.patterns.UnionPattern r3, $r5, r9;
        java.lang.Throwable r4, $r8;
        org.apache.xpath.patterns.StepPattern $r6;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i3 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i4 = $i3 + 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i4;

     label01:
        i1 = i0;

        i2 = 0;

     label02:
        $i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i1);

        if $i5 != 31 goto label03;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i1);

        i2 = i2 + 1;

        goto label02;

     label03:
        if i2 != 1 goto label05;

        r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i0);

     label04:
        $i9 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i10 = $i9 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i10;

        return r1;

     label05:
        $r5 = new org.apache.xpath.patterns.UnionPattern;

        specialinvoke $r5.<org.apache.xpath.patterns.UnionPattern: void <init>()>();

        r9 = $r5;

        r2 = newarray (org.apache.xpath.patterns.StepPattern)[i2];

        i13 = 0;

     label06:
        $i6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        if $i6 != 31 goto label07;

        i14 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i0);

        $r7 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i0);

        $r6 = (org.apache.xpath.patterns.StepPattern) $r7;

        r2[i13] = $r6;

        i0 = i14;

        i13 = i13 + 1;

        goto label06;

     label07:
        virtualinvoke r9.<org.apache.xpath.patterns.UnionPattern: void setPatterns(org.apache.xpath.patterns.StepPattern[])>(r2);

        r3 = r9;

     label08:
        $i7 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i8 = $i7 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i8;

        return r3;

     label09:
        $r8 := @caughtexception;

        r4 = $r8;

     label10:
        $i11 = r0.<org.apache.xpath.compiler.Compiler: int locPathDepth>;

        $i12 = $i11 - 1;

        r0.<org.apache.xpath.compiler.Compiler: int locPathDepth> = $i12;

        throw r4;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public org.apache.xpath.Expression locationPathPattern(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1;
        org.apache.xpath.patterns.StepPattern $r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i1 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        $r1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)>(i1, 0, null);

        return $r1;
    }

    public int getWhatToShow(int)
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        $i3 = i0 + 3;

        i2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>($i3);

        lookupswitch(i2)
        {
            case 34: goto label12;
            case 35: goto label10;
            case 1030: goto label01;
            case 1031: goto label02;
            case 1032: goto label03;
            case 1033: goto label04;
            case 1034: goto label11;
            default: goto label17;
        };

     label01:
        return 128;

     label02:
        return 12;

     label03:
        return 64;

     label04:
        tableswitch(i1)
        {
            case 38: goto label07;
            case 39: goto label06;
            case 40: goto label08;
            case 41: goto label08;
            case 42: goto label07;
            case 43: goto label08;
            case 44: goto label08;
            case 45: goto label08;
            case 46: goto label08;
            case 47: goto label08;
            case 48: goto label07;
            case 49: goto label05;
            case 50: goto label08;
            case 51: goto label06;
            default: goto label08;
        };

     label05:
        return 4096;

     label06:
        return 2;

     label07:
        return -1;

     label08:
        $i4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(0);

        if $i4 != 30 goto label09;

        return -1283;

     label09:
        return -3;

     label10:
        return 1280;

     label11:
        return 65536;

     label12:
        tableswitch(i1)
        {
            case 39: goto label14;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label16;
            case 43: goto label16;
            case 44: goto label16;
            case 45: goto label16;
            case 46: goto label16;
            case 47: goto label16;
            case 48: goto label16;
            case 49: goto label13;
            case 50: goto label16;
            case 51: goto label14;
            case 52: goto label15;
            case 53: goto label15;
            default: goto label16;
        };

     label13:
        return 4096;

     label14:
        return 2;

     label15:
        return 1;

     label16:
        return 1;

     label17:
        return -1;
    }

    protected org.apache.xpath.patterns.StepPattern stepPattern(int, int, org.apache.xpath.patterns.StepPattern) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.xpath.patterns.StepPattern r1, r2, $r3, $r7, $r8, $r12, $r13, r17;
        java.lang.String $r4, $r5, $r9, $r10, $r11, $r14;
        org.apache.xpath.Expression[] $r6;
        org.apache.xpath.patterns.FunctionPattern $r15;
        org.apache.xpath.Expression $r16;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.xpath.patterns.StepPattern;

        i2 = i0;

        i3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        if -1 != i3 goto label01;

        return null;

     label01:
        i4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i0);

        lookupswitch(i3)
        {
            case 25: goto label02;
            case 50: goto label03;
            case 51: goto label04;
            case 52: goto label05;
            case 53: goto label07;
            default: goto label08;
        };

     label02:
        $i11 = i0 + 1;

        i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>($i11);

        $r15 = new org.apache.xpath.patterns.FunctionPattern;

        $r16 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compileFunction(int)>(i0);

        specialinvoke $r15.<org.apache.xpath.patterns.FunctionPattern: void <init>(org.apache.xpath.Expression,int,int)>($r16, 10, 3);

        r2 = $r15;

        goto label09;

     label03:
        i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getArgLengthOfStep(int)>(i0);

        i0 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPosOfStep(int)>(i0);

        $r13 = new org.apache.xpath.patterns.StepPattern;

        specialinvoke $r13.<org.apache.xpath.patterns.StepPattern: void <init>(int,int,int)>(1280, 10, 3);

        r2 = $r13;

        goto label09;

     label04:
        i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getArgLengthOfStep(int)>(i0);

        i0 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPosOfStep(int)>(i0);

        $r12 = new org.apache.xpath.patterns.StepPattern;

        $r11 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: java.lang.String getStepNS(int)>(i2);

        $r14 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: java.lang.String getStepLocalName(int)>(i2);

        specialinvoke $r12.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>(2, $r11, $r14, 10, 2);

        r2 = $r12;

        goto label09;

     label05:
        i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getArgLengthOfStep(int)>(i0);

        i0 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPosOfStep(int)>(i0);

        i6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i2);

        if 1280 != i6 goto label06;

     label06:
        $r8 = new org.apache.xpath.patterns.StepPattern;

        $i10 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i2);

        $r9 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: java.lang.String getStepNS(int)>(i2);

        $r10 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: java.lang.String getStepLocalName(int)>(i2);

        specialinvoke $r8.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>($i10, $r9, $r10, 0, 3);

        r2 = $r8;

        goto label09;

     label07:
        i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getArgLengthOfStep(int)>(i0);

        i0 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPosOfStep(int)>(i0);

        $r3 = new org.apache.xpath.patterns.StepPattern;

        $i7 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i2);

        $r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: java.lang.String getStepNS(int)>(i2);

        $r5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: java.lang.String getStepLocalName(int)>(i2);

        specialinvoke $r3.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>($i7, $r4, $r5, 10, 3);

        r2 = $r3;

        goto label09;

     label08:
        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_MATCH_OPERATION", null);

        return null;

     label09:
        $i8 = i0 + i5;

        $r6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression[] getCompiledPredicates(int)>($i8);

        virtualinvoke r2.<org.apache.xpath.patterns.StepPattern: void setPredicates(org.apache.xpath.Expression[])>($r6);

        if null != r1 goto label10;

        goto label11;

     label10:
        virtualinvoke r2.<org.apache.xpath.patterns.StepPattern: void setRelativePathPattern(org.apache.xpath.patterns.StepPattern)>(r1);

     label11:
        $i9 = i1 + 1;

        r17 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)>(i4, $i9, r2);

        if null == r17 goto label12;

        $r7 = r17;

        goto label13;

     label12:
        $r7 = r2;

     label13:
        return $r7;
    }

    public org.apache.xpath.Expression[] getCompiledPredicates(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1;
        org.apache.xpath.Expression[] r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int countPredicates(int)>(i0);

        if i1 <= 0 goto label1;

        r1 = newarray (org.apache.xpath.Expression)[i1];

        specialinvoke r0.<org.apache.xpath.compiler.Compiler: void compilePredicates(int,org.apache.xpath.Expression[])>(i0, r1);

        return r1;

     label1:
        return null;
    }

    public int countPredicates(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, $i2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $i2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        if 29 != $i2 goto label2;

        i1 = i1 + 1;

        i0 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i0);

        goto label1;

     label2:
        return i1;
    }

    private void compilePredicates(int, org.apache.xpath.Expression[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, $i2;
        org.apache.xpath.Expression[] r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xpath.Expression[];

        i1 = 0;

     label1:
        $i2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        if 29 != $i2 goto label2;

        $r2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression predicate(int)>(i0);

        r1[i1] = $r2;

        i0 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    org.apache.xpath.Expression compileFunction(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8, i9;
        org.apache.xpath.functions.Function r1;
        org.apache.xpath.compiler.FunctionTable $r2, $r4, $r7;
        boolean $z0;
        org.apache.xpath.Expression $r3;
        org.apache.xpath.functions.WrongNumberArgsException $r5, r14;
        org.apache.xpath.functions.FuncExtFunctionAvailable $r6;
        java.lang.Object[] $r8;
        javax.xml.transform.TransformerException $r9;
        javax.xml.transform.ErrorListener $r10;
        java.lang.String $r11, $r13, r15;
        javax.xml.transform.SourceLocator $r12;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i5 = i0 + 1;

        $i6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>($i5);

        $i7 = i0 + $i6;

        i1 = $i7 - 1;

        i8 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        i2 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i8);

        i9 = i8 + 1;

        if -1 == i2 goto label8;

        $r2 = r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable m_functionTable>;

        r1 = virtualinvoke $r2.<org.apache.xpath.compiler.FunctionTable: org.apache.xpath.functions.Function getFunction(int)>(i2);

        $z0 = r1 instanceof org.apache.xpath.functions.FuncExtFunctionAvailable;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.xpath.functions.FuncExtFunctionAvailable) r1;

        $r4 = r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable m_functionTable>;

        virtualinvoke $r6.<org.apache.xpath.functions.FuncExtFunctionAvailable: void setFunctionTable(org.apache.xpath.compiler.FunctionTable)>($r4);

     label1:
        virtualinvoke r1.<org.apache.xpath.functions.Function: void postCompileStep(org.apache.xpath.compiler.Compiler)>(r0);

     label2:
        i3 = 0;

        i4 = i9;

     label3:
        if i4 >= i1 goto label4;

        $r3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i4);

        virtualinvoke r1.<org.apache.xpath.functions.Function: void setArg(org.apache.xpath.Expression,int)>($r3, i3);

        i4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i4);

        i3 = i3 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<org.apache.xpath.functions.Function: void checkNumberArgs(int)>(i3);

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        r14 = $r5;

        $r7 = r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable m_functionTable>;

        r15 = virtualinvoke $r7.<org.apache.xpath.compiler.FunctionTable: java.lang.String getFunctionName(int)>(i2);

        $r10 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        $r9 = new javax.xml.transform.TransformerException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r15;

        $r11 = virtualinvoke r14.<org.apache.xpath.functions.WrongNumberArgsException: java.lang.String getMessage()>();

        $r8[1] = $r11;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_ONLY_ALLOWS", $r8);

        $r12 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r13, $r12);

        interfaceinvoke $r10.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r9);

     label7:
        return r1;

     label8:
        virtualinvoke r0.<org.apache.xpath.compiler.Compiler: void error(java.lang.String,java.lang.Object[])>("ER_FUNCTION_TOKEN_NOT_FOUND", null);

        return null;

        catch org.apache.xpath.functions.WrongNumberArgsException from label2 to label5 with label6;
    }

    private synchronized long getNextMethodId()
    {
        org.apache.xpath.compiler.Compiler r0;
        long $l0, $l2, $l3;
        byte $b1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $l0 = <org.apache.xpath.compiler.Compiler: long s_nextMethodId>;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        <org.apache.xpath.compiler.Compiler: long s_nextMethodId> = 0L;

     label1:
        $l2 = <org.apache.xpath.compiler.Compiler: long s_nextMethodId>;

        $l3 = $l2 + 1L;

        <org.apache.xpath.compiler.Compiler: long s_nextMethodId> = $l3;

        return $l2;
    }

    private org.apache.xpath.Expression compileExtension(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12;
        java.lang.String r1, r2, $r9;
        org.apache.xpath.functions.FuncExtFunction r3, $r8;
        org.apache.xml.utils.ObjectVector $r4, $r6;
        java.lang.Object $r5, $r7;
        long $l9;
        org.apache.xpath.functions.WrongNumberArgsException $r10;
        org.apache.xpath.Expression $r11;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        i0 := @parameter0: int;

        $i4 = i0 + 1;

        $i5 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>($i4);

        $i6 = i0 + $i5;

        i1 = $i6 - 1;

        i10 = staticinvoke <org.apache.xpath.compiler.Compiler: int getFirstChildPos(int)>(i0);

        $r4 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i7 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i10);

        $r5 = virtualinvoke $r4.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i7);

        r1 = (java.lang.String) $r5;

        i11 = i10 + 1;

        $r6 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.ObjectVector getTokenQueue()>();

        $i8 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i11);

        $r7 = virtualinvoke $r6.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>($i8);

        r2 = (java.lang.String) $r7;

        i12 = i11 + 1;

        $r8 = new org.apache.xpath.functions.FuncExtFunction;

        $l9 = specialinvoke r0.<org.apache.xpath.compiler.Compiler: long getNextMethodId()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l9);

        specialinvoke $r8.<org.apache.xpath.functions.FuncExtFunction: void <init>(java.lang.String,java.lang.String,java.lang.Object)>(r1, r2, $r9);

        r3 = $r8;

     label1:
        i2 = 0;

     label2:
        if i12 >= i1 goto label3;

        i3 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i12);

        $r11 = virtualinvoke r0.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i12);

        virtualinvoke r3.<org.apache.xpath.functions.Function: void setArg(org.apache.xpath.Expression,int)>($r11, i2);

        i12 = i3;

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return r3;

        catch org.apache.xpath.functions.WrongNumberArgsException from label1 to label3 with label4;
    }

    public void warn(java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        java.lang.String r1, r3, $r10, $r17;
        java.lang.Object[] r2;
        javax.xml.transform.ErrorListener $r4, $r21;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r12, $r14, $r15, $r18;
        java.io.PrintStream $r6;
        javax.xml.transform.SourceLocator $r9, $r13, $r16, $r19;
        int $i0, $i1;
        javax.xml.transform.TransformerException $r20;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHWarning(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        if null == $r4 goto label1;

        $r21 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        $r20 = new javax.xml.transform.TransformerException;

        $r19 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        specialinvoke $r20.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r3, $r19);

        interfaceinvoke $r21.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r20);

        goto label2;

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; file ");

        $r9 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $r10 = interfaceinvoke $r9.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; line ");

        $r13 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $i0 = interfaceinvoke $r13.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; column ");

        $r16 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $i1 = interfaceinvoke $r16.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label2:
        return;
    }

    public void assertion(boolean, java.lang.String)
    {
        org.apache.xpath.compiler.Compiler r0;
        boolean z0;
        java.lang.String r1, r2;
        java.lang.Object[] $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        if z0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INCORRECT_PROGRAMMER_ASSERTION", $r3);

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(r2);

        throw $r4;

     label1:
        return;
    }

    public void error(java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        java.lang.String r1, r3;
        java.lang.Object[] r2;
        javax.xml.transform.ErrorListener $r4, $r10;
        javax.xml.transform.TransformerException $r5, $r8;
        javax.xml.transform.SourceLocator $r6, $r9;
        org.apache.xml.utils.SAXSourceLocator $r7;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        if null == $r4 goto label1;

        $r10 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.ErrorListener m_errorHandler>;

        $r8 = new javax.xml.transform.TransformerException;

        $r9 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        specialinvoke $r8.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r3, $r9);

        interfaceinvoke $r10.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r8);

        goto label2;

     label1:
        $r5 = new javax.xml.transform.TransformerException;

        $r6 = r0.<org.apache.xpath.compiler.Compiler: javax.xml.transform.SourceLocator m_locator>;

        $r7 = (org.apache.xml.utils.SAXSourceLocator) $r6;

        specialinvoke $r5.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r3, $r7);

        throw $r5;

     label2:
        return;
    }

    public org.apache.xml.utils.PrefixResolver getNamespaceContext()
    {
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xml.utils.PrefixResolver $r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        $r1 = r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver>;

        return $r1;
    }

    public void setNamespaceContext(org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xpath.compiler.Compiler r0;
        org.apache.xml.utils.PrefixResolver r1;

        r0 := @this: org.apache.xpath.compiler.Compiler;

        r1 := @parameter0: org.apache.xml.utils.PrefixResolver;

        r0.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver m_currentPrefixResolver> = r1;

        return;
    }

    static void <clinit>()
    {
        <org.apache.xpath.compiler.Compiler: boolean DEBUG> = 0;

        <org.apache.xpath.compiler.Compiler: long s_nextMethodId> = 0L;

        return;
    }
}
