public class org.apache.xml.dtm.ref.DTMManagerDefault extends org.apache.xml.dtm.DTMManager
{
    private static final boolean DUMPTREE;
    private static final boolean DEBUG;
    protected org.apache.xml.dtm.DTM[] m_dtms;
    int[] m_dtm_offsets;
    protected org.apache.xml.utils.XMLReaderManager m_readerManager;
    protected org.xml.sax.helpers.DefaultHandler m_defaultHandler;
    private org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable;

    public synchronized void addDTM(org.apache.xml.dtm.DTM, int)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void addDTM(org.apache.xml.dtm.DTM,int,int)>(r1, i0, 0);

        return;
    }

    public synchronized void addDTM(org.apache.xml.dtm.DTM, int, int)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM r1;
        int i0, i1, i2, i3, $i4;
        org.apache.xml.dtm.DTM[] r2, $r4, $r5, $r7;
        int[] r3, $r6, $r8;
        org.apache.xml.dtm.DTMException $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < 65536 goto label1;

        $r9 = new org.apache.xml.dtm.DTMException;

        $r10 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NO_DTMIDS_AVAIL", null);

        specialinvoke $r9.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label1:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i2 = lengthof $r4;

        if i2 > i0 goto label2;

        $i4 = i0 + 256;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i4, 65536);

        r2 = newarray (org.apache.xml.dtm.DTM)[i3];

        $r7 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r2, 0, i2);

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms> = r2;

        r3 = newarray (int)[i3];

        $r8 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r8, 0, r3, 0, i2);

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets> = r3;

     label2:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $r5[i0] = r1;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets>;

        $r6[i0] = i1;

        interfaceinvoke r1.<org.apache.xml.dtm.DTM: void documentRegistration()>();

        return;
    }

    public synchronized int getFirstFreeDTMID()
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        int i0, i1;
        org.apache.xml.dtm.DTM[] $r1, $r2;
        org.apache.xml.dtm.DTM $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i0 = lengthof $r1;

        i1 = 1;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $r3 = $r2[i1];

        if null != $r3 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public void <init>()
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM[] $r1;
        int[] $r2;
        org.xml.sax.helpers.DefaultHandler $r3;
        org.apache.xml.dtm.ref.ExpandedNameTable $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        specialinvoke r0.<org.apache.xml.dtm.DTMManager: void <init>()>();

        $r1 = newarray (org.apache.xml.dtm.DTM)[256];

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms> = $r1;

        $r2 = newarray (int)[256];

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets> = $r2;

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager> = null;

        $r3 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r3.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler> = $r3;

        $r4 = new org.apache.xml.dtm.ref.ExpandedNameTable;

        specialinvoke $r4.<org.apache.xml.dtm.ref.ExpandedNameTable: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable> = $r4;

        return;
    }

    public synchronized org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source, boolean, org.apache.xml.dtm.DTMWSFilter, boolean, boolean)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        javax.xml.transform.Source r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15;
        org.apache.xml.dtm.DTMWSFilter r2;
        org.apache.xml.utils.XMLStringFactory r3;
        int i0, i1;
        org.apache.xml.dtm.ref.dom2dtm.DOM2DTM r4, $r37;
        org.xml.sax.XMLReader r5;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM r6, $r14, r63, r66, r72;
        org.xml.sax.InputSource r7;
        java.lang.String r8, $r29, $r33, $r48;
        java.lang.Exception r11, $r39, $r49, $r51, $r54, $r55, $r57, $r58, $r59, r65, r71;
        java.lang.Throwable r13, $r42;
        org.xml.sax.ErrorHandler $r15, $r23;
        org.xml.sax.helpers.DefaultHandler $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r43, $r44, $r53;
        org.apache.xml.dtm.ref.IncrementalSAXSource_Filter $r24, $r25, r62;
        java.lang.Class $r28, $r30;
        java.lang.Object $r31;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM $r32;
        java.lang.Object[] $r34;
        org.apache.xml.dtm.DTMException $r35;
        javax.xml.transform.dom.DOMSource $r36;
        java.lang.StringBuilder $r38, $r46, $r47;
        org.xml.sax.SAXNotRecognizedException $r40;
        org.xml.sax.SAXNotSupportedException $r41;
        java.io.PrintStream $r45;
        java.lang.RuntimeException $r50, $r60, r64, r70;
        org.apache.xml.utils.WrappedRuntimeException $r52, $r56;
        org.apache.xml.dtm.ref.IncrementalSAXSource r61;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: javax.xml.transform.Source;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.xml.dtm.DTMWSFilter;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLStringFactory m_xsf>;

        i0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int getFirstFreeDTMID()>();

        i1 = i0 << 16;

        if null == r1 goto label01;

        $z11 = r1 instanceof javax.xml.transform.dom.DOMSource;

        if $z11 == 0 goto label01;

        $r37 = new org.apache.xml.dtm.ref.dom2dtm.DOM2DTM;

        $r36 = (javax.xml.transform.dom.DOMSource) r1;

        specialinvoke $r37.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)>(r0, $r36, i1, r2, r3, z2);

        r4 = $r37;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void addDTM(org.apache.xml.dtm.DTM,int,int)>(r4, i0, 0);

        return r4;

     label01:
        if null == r1 goto label02;

        $z12 = r1 instanceof javax.xml.transform.sax.SAXSource;

        goto label03;

     label02:
        $z12 = 1;

     label03:
        z14 = $z12;

        if null == r1 goto label04;

        $z10 = r1 instanceof javax.xml.transform.stream.StreamSource;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        z3 = $z10;

        if z14 != 0 goto label06;

        if z3 == 0 goto label68;

     label06:
        r5 = null;

     label07:
        if null != r1 goto label08;

        r7 = null;

        goto label13;

     label08:
        r5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)>(r1);

        r7 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r1);

        r8 = virtualinvoke r7.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        if null == r8 goto label13;

     label09:
        r8 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>(r8);

     label10:
        goto label12;

     label11:
        $r39 := @caughtexception;

        $r45 = <java.lang.System: java.io.PrintStream err>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not absolutize URL: ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r48);

     label12:
        virtualinvoke r7.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r8);

     label13:
        if r1 != null goto label14;

        if z0 == 0 goto label14;

        if z1 != 0 goto label14;

        if z2 != 0 goto label14;

        $r32 = new org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM;

        specialinvoke $r32.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)>(r0, r1, i1, r2, r3, z2);

        r6 = $r32;

        goto label15;

     label14:
        $r14 = new org.apache.xml.dtm.ref.sax2dtm.SAX2DTM;

        specialinvoke $r14.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)>(r0, r1, i1, r2, r3, z2);

        r6 = $r14;

     label15:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void addDTM(org.apache.xml.dtm.DTM,int,int)>(r6, i0, 0);

        if null == r5 goto label16;

        $r28 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        $z9 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xerces.parsers.SAXParser");

        if $z9 == 0 goto label16;

        $z8 = 1;

        goto label17;

     label16:
        $z8 = 0;

     label17:
        z15 = $z8;

        if z15 == 0 goto label18;

        z1 = 1;

     label18:
        $z4 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: boolean m_incremental>;

        if $z4 == 0 goto label38;

        if z1 == 0 goto label38;

        r61 = null;

        if z15 == 0 goto label22;

     label19:
        $r30 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces");

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.Object newInstance()>();

        r61 = (org.apache.xml.dtm.ref.IncrementalSAXSource) $r31;

     label20:
        goto label22;

     label21:
        $r58 := @caughtexception;

        r11 = $r58;

        virtualinvoke r11.<java.lang.Exception: void printStackTrace()>();

        r61 = null;

     label22:
        if r61 != null goto label24;

        if null != r5 goto label23;

        $r25 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;

        specialinvoke $r25.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void <init>()>();

        r61 = $r25;

        goto label24;

     label23:
        $r24 = new org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;

        specialinvoke $r24.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void <init>()>();

        r62 = $r24;

        virtualinvoke r62.<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setXMLReader(org.xml.sax.XMLReader)>(r5);

        r61 = r62;

     label24:
        virtualinvoke r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)>(r61);

        if null != r7 goto label31;

        r63 = r6;

     label25:
        if r5 == null goto label30;

        $z7 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: boolean m_incremental>;

        if $z7 == 0 goto label26;

        if z1 != 0 goto label30;

     label26:
        $r22 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r22);

        $r26 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r26);

        $r27 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r27);

     label27:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", null);

     label28:
        goto label30;

     label29:
        $r49 := @caughtexception;

     label30:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r5);

        return r63;

     label31:
        $r23 = interfaceinvoke r5.<org.xml.sax.XMLReader: org.xml.sax.ErrorHandler getErrorHandler()>();

        if null != $r23 goto label32;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r6);

     label32:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r6);

     label33:
        interfaceinvoke r61.<org.apache.xml.dtm.ref.IncrementalSAXSource: void startParse(org.xml.sax.InputSource)>(r7);

     label34:
        goto label37;

     label35:
        $r60 := @caughtexception;

        r64 = $r60;

        virtualinvoke r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        throw r64;

     label36:
        $r51 := @caughtexception;

        r65 = $r51;

        virtualinvoke r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        $r52 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r52.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r65);

        throw $r52;

     label37:
        goto label54;

     label38:
        if null != r5 goto label45;

        r66 = r6;

     label39:
        if r5 == null goto label44;

        $z6 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: boolean m_incremental>;

        if $z6 == 0 goto label40;

        if z1 != 0 goto label44;

     label40:
        $r21 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r21);

        $r19 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r19);

        $r20 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r20);

     label41:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", null);

     label42:
        goto label44;

     label43:
        $r54 := @caughtexception;

     label44:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r5);

        return r66;

     label45:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r6);

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r6);

        $r15 = interfaceinvoke r5.<org.xml.sax.XMLReader: org.xml.sax.ErrorHandler getErrorHandler()>();

        if null != $r15 goto label46;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r6);

     label46:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r6);

     label47:
        goto label50;

     label48:
        $r40 := @caughtexception;

        goto label50;

     label49:
        $r41 := @caughtexception;

     label50:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r7);

     label51:
        goto label54;

     label52:
        $r50 := @caughtexception;

        r70 = $r50;

        virtualinvoke r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        throw r70;

     label53:
        $r55 := @caughtexception;

        r71 = $r55;

        virtualinvoke r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

        $r56 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r56.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r71);

        throw $r56;

     label54:
        r72 = r6;

     label55:
        if r5 == null goto label60;

        $z5 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: boolean m_incremental>;

        if $z5 == 0 goto label56;

        if z1 != 0 goto label60;

     label56:
        $r16 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r16);

        $r18 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r18);

        $r17 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r17);

     label57:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", null);

     label58:
        goto label60;

     label59:
        $r57 := @caughtexception;

     label60:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r5);

        return r72;

     label61:
        $r42 := @caughtexception;

        r13 = $r42;

     label62:
        if r5 == null goto label67;

        $z13 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: boolean m_incremental>;

        if $z13 == 0 goto label63;

        if z1 != 0 goto label67;

     label63:
        $r43 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r43);

        $r44 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r44);

        $r53 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.helpers.DefaultHandler m_defaultHandler>;

        interfaceinvoke r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r53);

     label64:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", null);

     label65:
        goto label67;

     label66:
        $r59 := @caughtexception;

     label67:
        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: void releaseXMLReader(org.xml.sax.XMLReader)>(r5);

        throw r13;

     label68:
        $r35 = new org.apache.xml.dtm.DTMException;

        $r34 = newarray (java.lang.Object)[1];

        $r34[0] = r1;

        $r33 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUPPORTED", $r34);

        specialinvoke $r35.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String)>($r33);

        throw $r35;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.RuntimeException from label33 to label34 with label35;
        catch java.lang.Exception from label33 to label34 with label36;
        catch java.lang.Exception from label41 to label42 with label43;
        catch org.xml.sax.SAXNotRecognizedException from label46 to label47 with label48;
        catch org.xml.sax.SAXNotSupportedException from label46 to label47 with label49;
        catch java.lang.RuntimeException from label50 to label51 with label52;
        catch java.lang.Exception from label50 to label51 with label53;
        catch java.lang.Exception from label57 to label58 with label59;
        catch java.lang.Throwable from label07 to label25 with label61;
        catch java.lang.Throwable from label31 to label39 with label61;
        catch java.lang.Throwable from label45 to label55 with label61;
        catch java.lang.Exception from label64 to label65 with label66;
        catch java.lang.Throwable from label61 to label62 with label61;
    }

    public synchronized int getDTMHandleFromNode(org.w3c.dom.Node)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.w3c.dom.Node r1, $r4, r19, r20;
        int i0, i1, i2, i3, $i5, i6;
        org.apache.xml.dtm.DTM r2, $r6;
        boolean $z0, $z1, $z2;
        org.apache.xml.dtm.DTM[] $r3, $r14;
        short $s4;
        javax.xml.transform.dom.DOMSource $r5;
        java.lang.RuntimeException $r7;
        org.w3c.dom.Attr $r8, $r13;
        java.lang.String $r9, $r11, $r12, $r18;
        org.w3c.dom.Element $r10;
        org.apache.xml.dtm.ref.dom2dtm.DOM2DTM $r15, r21;
        org.apache.xml.dtm.ref.DTMNodeProxy $r16;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.w3c.dom.Node;

        if null != r1 goto label01;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_NODE_NON_NULL", null);

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label01:
        $z0 = r1 instanceof org.apache.xml.dtm.ref.DTMNodeProxy;

        if $z0 == 0 goto label02;

        $r16 = (org.apache.xml.dtm.ref.DTMNodeProxy) r1;

        $i5 = virtualinvoke $r16.<org.apache.xml.dtm.ref.DTMNodeProxy: int getDTMNodeNumber()>();

        return $i5;

     label02:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i0 = lengthof $r3;

        i1 = 0;

     label03:
        if i1 >= i0 goto label05;

        $r14 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        r2 = $r14[i1];

        if null == r2 goto label04;

        $z2 = r2 instanceof org.apache.xml.dtm.ref.dom2dtm.DOM2DTM;

        if $z2 == 0 goto label04;

        $r15 = (org.apache.xml.dtm.ref.dom2dtm.DOM2DTM) r2;

        i2 = virtualinvoke $r15.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)>(r1);

        if i2 == -1 goto label04;

        return i2;

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        r19 = r1;

        $s4 = interfaceinvoke r19.<org.w3c.dom.Node: short getNodeType()>();

        if $s4 != 2 goto label06;

        $r13 = (org.w3c.dom.Attr) r19;

        $r4 = interfaceinvoke $r13.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

        goto label07;

     label06:
        $r4 = interfaceinvoke r19.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label07:
        r20 = $r4;

     label08:
        if r20 == null goto label09;

        r19 = r20;

        r20 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label08;

     label09:
        $r5 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r5.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r19);

        $r6 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>($r5, 0, null, 1, 1);

        r21 = (org.apache.xml.dtm.ref.dom2dtm.DOM2DTM) $r6;

        $z1 = r1 instanceof org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode;

        if $z1 == 0 goto label10;

        $r8 = (org.w3c.dom.Attr) r1;

        $r10 = interfaceinvoke $r8.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

        i3 = virtualinvoke r21.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)>($r10);

        $r12 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r11 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        i6 = virtualinvoke r21.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>(i3, $r12, $r11);

        goto label11;

     label10:
        i6 = virtualinvoke r21.<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)>(r1);

     label11:
        if -1 != i6 goto label12;

        $r7 = new java.lang.RuntimeException;

        $r9 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_RESOLVE_NODE", null);

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label12:
        return i6;
    }

    public synchronized org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        javax.xml.transform.Source r1;
        org.xml.sax.XMLReader r2, $r7;
        boolean $z0;
        org.apache.xml.utils.XMLReaderManager $r3, $r4, $r5;
        javax.xml.transform.sax.SAXSource $r6;
        org.xml.sax.SAXException $r8, r11;
        org.apache.xml.dtm.DTMException $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: javax.xml.transform.Source;

     label1:
        $z0 = r1 instanceof javax.xml.transform.sax.SAXSource;

        if $z0 == 0 goto label2;

        $r6 = (javax.xml.transform.sax.SAXSource) r1;

        $r7 = virtualinvoke $r6.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        r2 = $r7;

        if null != r2 goto label5;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        if $r3 != null goto label4;

        $r5 = staticinvoke <org.apache.xml.utils.XMLReaderManager: org.apache.xml.utils.XMLReaderManager getInstance()>();

        r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager> = $r5;

     label4:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        r2 = virtualinvoke $r4.<org.apache.xml.utils.XMLReaderManager: org.xml.sax.XMLReader getXMLReader()>();

     label5:
        return r2;

     label6:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = new org.apache.xml.dtm.DTMException;

        $r10 = virtualinvoke r11.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r11);

        throw $r9;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    public synchronized void releaseXMLReader(org.xml.sax.XMLReader)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.xml.sax.XMLReader r1;
        org.apache.xml.utils.XMLReaderManager $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.xml.sax.XMLReader;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.utils.XMLReaderManager m_readerManager>;

        virtualinvoke $r3.<org.apache.xml.utils.XMLReaderManager: void releaseXMLReader(org.xml.sax.XMLReader)>(r1);

     label1:
        return;
    }

    public synchronized org.apache.xml.dtm.DTM getDTM(int)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        int i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException r1, $r4;
        org.apache.xml.dtm.DTM[] $r2;
        org.apache.xml.dtm.DTM $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $i1 = i0 >>> 16;

        $r3 = $r2[$i1];

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        if i0 != -1 goto label4;

        return null;

     label4:
        throw r1;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public synchronized int getDTMIdentity(org.apache.xml.dtm.DTM)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM r1, r3;
        org.apache.xml.dtm.ref.DTMDefaultBase r2;
        int i0, $i1, $i2, $i3, i4;
        boolean $z0;
        org.apache.xml.dtm.DTM[] $r4, $r5;
        int[] $r6;
        org.apache.xml.dtm.DTMManager $r7;
        org.apache.xml.utils.SuballocatedIntVector $r8;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        $z0 = r1 instanceof org.apache.xml.dtm.ref.DTMDefaultBase;

        if $z0 == 0 goto label2;

        r2 = (org.apache.xml.dtm.ref.DTMDefaultBase) r1;

        $r7 = virtualinvoke r2.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.DTMManager getManager()>();

        if $r7 != r0 goto label1;

        $r8 = virtualinvoke r2.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector getDTMIDs()>();

        $i3 = virtualinvoke $r8.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(0);

        return $i3;

     label1:
        return -1;

     label2:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        i4 = lengthof $r4;

        i0 = 0;

     label3:
        if i0 >= i4 goto label5;

        $r5 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        r3 = $r5[i0];

        if r3 != r1 goto label4;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int[] m_dtm_offsets>;

        $i1 = $r6[i0];

        if $i1 != 0 goto label4;

        $i2 = i0 << 16;

        return $i2;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return -1;
    }

    public synchronized boolean release(org.apache.xml.dtm.DTM, boolean)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM r1;
        boolean z0, $z1, $z2;
        org.apache.xml.utils.SuballocatedIntVector r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        org.apache.xml.dtm.DTM[] $r3, $r5;
        org.apache.xml.dtm.ref.DTMDefaultBase $r4;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM $r6;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        z0 := @parameter1: boolean;

        $z1 = r1 instanceof org.apache.xml.dtm.ref.sax2dtm.SAX2DTM;

        if $z1 == 0 goto label1;

        $r6 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM) r1;

        virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void clearCoRoutine()>();

     label1:
        $z2 = r1 instanceof org.apache.xml.dtm.ref.DTMDefaultBase;

        if $z2 == 0 goto label4;

        $r4 = (org.apache.xml.dtm.ref.DTMDefaultBase) r1;

        r2 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector getDTMIDs()>();

        $i2 = virtualinvoke r2.<org.apache.xml.utils.SuballocatedIntVector: int size()>();

        i0 = $i2 - 1;

     label2:
        if i0 < 0 goto label3;

        $r5 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $i3 = virtualinvoke r2.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i0);

        $i4 = $i3 >>> 16;

        $r5[$i4] = null;

        i0 = i0 + -1;

        goto label2;

     label3:
        goto label5;

     label4:
        i5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: int getDTMIdentity(org.apache.xml.dtm.DTM)>(r1);

        if i5 < 0 goto label5;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM[] m_dtms>;

        $i1 = i5 >>> 16;

        $r3[$i1] = null;

     label5:
        interfaceinvoke r1.<org.apache.xml.dtm.DTM: void documentRelease()>();

        return 1;
    }

    public synchronized org.apache.xml.dtm.DTM createDocumentFragment()
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        javax.xml.parsers.DocumentBuilderFactory r1;
        javax.xml.parsers.DocumentBuilder r2;
        org.w3c.dom.Document r3;
        org.w3c.dom.DocumentFragment r4;
        javax.xml.transform.dom.DOMSource $r5;
        org.apache.xml.dtm.DTM $r6;
        java.lang.Exception $r7, r9;
        org.apache.xml.dtm.DTMException $r8;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

     label1:
        r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        r2 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r3 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        r4 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.DocumentFragment createDocumentFragment()>();

        $r5 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r5.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r4);

        $r6 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>($r5, 1, null, 0, 0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new org.apache.xml.dtm.DTMException;

        specialinvoke $r8.<org.apache.xml.dtm.DTMException: void <init>(java.lang.Throwable)>(r9);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(int, org.apache.xml.dtm.DTMFilter, boolean)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        int i0;
        org.apache.xml.dtm.DTMFilter r1;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.dtm.DTMFilter;

        z0 := @parameter2: boolean;

        return null;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.String, org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        java.lang.String r1;
        org.apache.xml.utils.PrefixResolver r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xml.utils.PrefixResolver;

        return null;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(int)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        i0 := @parameter0: int;

        return null;
    }

    public synchronized org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.Object, int)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        return null;
    }

    public org.apache.xml.dtm.ref.ExpandedNameTable getExpandedNameTable(org.apache.xml.dtm.DTM)
    {
        org.apache.xml.dtm.ref.DTMManagerDefault r0;
        org.apache.xml.dtm.DTM r1;
        org.apache.xml.dtm.ref.ExpandedNameTable $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMManagerDefault;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.ref.ExpandedNameTable m_expandedNameTable>;

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xml.dtm.ref.DTMManagerDefault: boolean DEBUG> = 0;

        <org.apache.xml.dtm.ref.DTMManagerDefault: boolean DUMPTREE> = 0;

        return;
    }
}
