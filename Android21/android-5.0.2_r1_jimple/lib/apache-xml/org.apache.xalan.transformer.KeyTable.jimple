public class org.apache.xalan.transformer.KeyTable extends java.lang.Object
{
    private int m_docKey;
    private java.util.Vector m_keyDeclarations;
    private java.util.Hashtable m_refsTable;
    private org.apache.xpath.objects.XNodeSet m_keyNodes;

    public int getDocKey()
    {
        org.apache.xalan.transformer.KeyTable r0;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $i0 = r0.<org.apache.xalan.transformer.KeyTable: int m_docKey>;

        return $i0;
    }

    org.apache.xalan.transformer.KeyIterator getKeyIterator()
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r1;
        org.apache.xml.dtm.DTMIterator $r2;
        org.apache.xalan.transformer.KeyIterator $r3, $r4;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        $r3 = (org.apache.xalan.transformer.KeyIterator) $r2;

        $r4 = (org.apache.xalan.transformer.KeyIterator) $r3;

        return $r4;
    }

    public void <init>(int, org.apache.xml.utils.PrefixResolver, org.apache.xml.utils.QName, java.util.Vector, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.KeyTable r0;
        int i0;
        org.apache.xml.utils.PrefixResolver r1;
        org.apache.xml.utils.QName r2;
        java.util.Vector r3;
        org.apache.xpath.XPathContext r4;
        org.apache.xalan.transformer.KeyIterator r5, $r6;
        org.apache.xpath.objects.XNodeSet $r7, $r8, $r9;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.utils.PrefixResolver;

        r2 := @parameter2: org.apache.xml.utils.QName;

        r3 := @parameter3: java.util.Vector;

        r4 := @parameter4: org.apache.xpath.XPathContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable> = null;

        r0.<org.apache.xalan.transformer.KeyTable: int m_docKey> = i0;

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations> = r3;

        $r6 = new org.apache.xalan.transformer.KeyIterator;

        specialinvoke $r6.<org.apache.xalan.transformer.KeyIterator: void <init>(org.apache.xml.utils.QName,java.util.Vector)>(r2, r3);

        r5 = $r6;

        $r7 = new org.apache.xpath.objects.XNodeSet;

        specialinvoke $r7.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMIterator)>(r5);

        r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes> = $r7;

        $r8 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r8.<org.apache.xpath.objects.XNodeSet: void allowDetachToRelease(boolean)>(0);

        $r9 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r9.<org.apache.xpath.objects.XNodeSet: void setRoot(int,java.lang.Object)>(i0, r4);

        return;
    }

    public org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName, org.apache.xml.utils.XMLString)
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xml.utils.QName r1;
        org.apache.xml.utils.XMLString r2;
        org.apache.xpath.objects.XNodeSet r3, $r8;
        org.apache.xpath.XPathContext r5;
        java.util.Hashtable $r6;
        java.lang.Object $r7;
        org.apache.xml.dtm.DTMIterator $r9, $r12;
        org.apache.xalan.transformer.KeyTable$1 $r10;
        org.apache.xml.dtm.DTMManager $r11;
        java.lang.CloneNotSupportedException $r13;
        org.apache.xalan.transformer.KeyIterator r14;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: org.apache.xml.utils.XMLString;

        $r6 = specialinvoke r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable getRefsTable()>();

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (org.apache.xpath.objects.XNodeSet) $r7;

     label1:
        if r3 == null goto label2;

        $r12 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

        r3 = (org.apache.xpath.objects.XNodeSet) $r12;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r3 = null;

     label4:
        if r3 != null goto label5;

        $r8 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r9 = virtualinvoke $r8.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        r14 = (org.apache.xalan.transformer.KeyIterator) $r9;

        r5 = virtualinvoke r14.<org.apache.xalan.transformer.KeyIterator: org.apache.xpath.XPathContext getXPathContext()>();

        $r10 = new org.apache.xalan.transformer.KeyTable$1;

        $r11 = virtualinvoke r5.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r10.<org.apache.xalan.transformer.KeyTable$1: void <init>(org.apache.xalan.transformer.KeyTable,org.apache.xml.dtm.DTMManager)>(r0, $r11);

        r3 = $r10;

        virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: void reset()>();

     label5:
        return r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public org.apache.xml.utils.QName getKeyTableName()
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xalan.transformer.KeyIterator $r1;
        org.apache.xml.utils.QName $r2;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xalan.transformer.KeyIterator getKeyIterator()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName getName()>();

        return $r2;
    }

    private java.util.Vector getKeyDeclarations()
    {
        org.apache.xalan.transformer.KeyTable r0;
        int i0, i1;
        java.util.Vector r1, $r3, $r4, $r5;
        org.apache.xalan.templates.KeyDeclaration r2;
        java.lang.Object $r6;
        org.apache.xml.utils.QName $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r3 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations>;

        i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>(int)>(i0);

        r1 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.xalan.templates.KeyDeclaration) $r6;

        $r7 = virtualinvoke r2.<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName getName()>();

        $r8 = virtualinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xml.utils.QName getKeyTableName()>();

        $z0 = virtualinvoke $r7.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>(r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    private java.util.Hashtable getRefsTable()
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xalan.transformer.KeyIterator r1;
        org.apache.xpath.XPathContext r2;
        java.util.Vector r3;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        org.apache.xalan.templates.KeyDeclaration r4;
        org.apache.xpath.objects.XObject r5;
        org.apache.xml.utils.XMLString r6, r8;
        org.apache.xml.dtm.DTM r7;
        java.util.Hashtable $r9, $r10, $r11;
        org.apache.xml.dtm.DTMIterator $r12, r22;
        org.apache.xpath.objects.XNodeSet $r13, $r14, $r15, $r19;
        java.lang.Object $r16;
        org.apache.xml.utils.PrefixResolver $r17;
        org.apache.xpath.XPath $r18;
        org.apache.xml.utils.WrappedRuntimeException $r20;
        javax.xml.transform.TransformerException $r21, r23;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r9 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        if $r9 != null goto label9;

        $r11 = new java.util.Hashtable;

        specialinvoke $r11.<java.util.Hashtable: void <init>(int)>(89);

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable> = $r11;

        $r13 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r12 = virtualinvoke $r13.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        r1 = (org.apache.xalan.transformer.KeyIterator) $r12;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xpath.XPathContext getXPathContext()>();

        r3 = specialinvoke r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector getKeyDeclarations()>();

        i0 = virtualinvoke r3.<java.util.Vector: int size()>();

        $r14 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r14.<org.apache.xpath.objects.XNodeSet: void reset()>();

     label1:
        $r15 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $i4 = virtualinvoke $r15.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        i1 = $i4;

        if -1 == $i4 goto label9;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label7;

        $r16 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r4 = (org.apache.xalan.templates.KeyDeclaration) $r16;

        $r18 = virtualinvoke r4.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getUse()>();

        $r17 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        r5 = virtualinvoke $r18.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i1, $r17);

        $i5 = virtualinvoke r5.<org.apache.xpath.objects.XObject: int getType()>();

        if $i5 == 4 goto label4;

        r6 = virtualinvoke r5.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        specialinvoke r0.<org.apache.xalan.transformer.KeyTable: void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)>(r2, r6, i1);

        goto label6;

     label4:
        $r19 = (org.apache.xpath.objects.XNodeSet) r5;

        r22 = virtualinvoke $r19.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator iterRaw()>();

     label5:
        $i6 = interfaceinvoke r22.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        i3 = $i6;

        if -1 == $i6 goto label6;

        r7 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i3);

        r8 = interfaceinvoke r7.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i3);

        specialinvoke r0.<org.apache.xalan.transformer.KeyTable: void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)>(r2, r8, i1);

        goto label5;

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        goto label1;

     label8:
        $r21 := @caughtexception;

        r23 = $r21;

        $r20 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r20.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r23);

        throw $r20;

     label9:
        $r10 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        return $r10;

        catch javax.xml.transform.TransformerException from label2 to label7 with label8;
    }

    private void addValueInRefsTable(org.apache.xpath.XPathContext, org.apache.xml.utils.XMLString, int)
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.utils.XMLString r2;
        int i0, $i1;
        org.apache.xpath.objects.XNodeSet r3, $r7, r11;
        java.util.Hashtable $r4, $r9;
        java.lang.Object $r5;
        org.apache.xpath.NodeSetDTM $r6;
        org.apache.xml.dtm.DTMManager $r8;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xml.utils.XMLString;

        i0 := @parameter2: int;

        $r4 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (org.apache.xpath.objects.XNodeSet) $r5;

        if r3 != null goto label1;

        $r7 = new org.apache.xpath.objects.XNodeSet;

        $r8 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r7.<org.apache.xpath.objects.XNodeSet: void <init>(int,org.apache.xml.dtm.DTMManager)>(i0, $r8);

        r11 = $r7;

        virtualinvoke r11.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        $r9 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r11);

        goto label2;

     label1:
        $i1 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: int getCurrentNode()>();

        if $i1 == i0 goto label2;

        $r6 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        virtualinvoke $r6.<org.apache.xpath.NodeSetDTM: void addNode(int)>(i0);

        virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

     label2:
        return;
    }
}
