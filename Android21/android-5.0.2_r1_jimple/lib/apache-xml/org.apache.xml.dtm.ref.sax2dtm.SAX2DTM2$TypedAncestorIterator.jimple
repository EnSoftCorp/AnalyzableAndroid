public final class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator extends org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator
{
    private final int _nodeType;
    final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2, int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        i0 := @parameter1: int;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$AncestorIterator: void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _nodeType> = i0;

        return;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26;
        int[] r1, $r4, $r10, $r12, $r13, $r15, $r16, $r18, $r21, $r22, r25;
        boolean $z0, $z1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r2, $r5, $r6, $r7, $r11, $r14, $r17, $r19, $r20, $r23, $r24;
        org.apache.xml.dtm.DTMAxisIterator $r3;
        org.apache.xml.dtm.ref.ExtendedType $r8;
        org.apache.xml.dtm.ref.ExtendedType[] $r9;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        i0 := @parameter0: int;

        if i0 != 0 goto label01;

        $r23 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i0 = virtualinvoke $r23.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getDocument()>();

     label01:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_realStartNode> = i0;

        $z0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: boolean _isRestartable>;

        if $z0 == 0 goto label15;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeIdentity(int)>(i0);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size> = 0;

        if i1 != -1 goto label02;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _currentNode> = -1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_ancestorsPos> = 0;

        return r0;

     label02:
        i2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _nodeType>;

        $z1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: boolean _includeSelf>;

        if $z1 != 0 goto label03;

        $r20 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i1 = virtualinvoke $r20.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i1);

        $r24 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i0 = virtualinvoke $r24.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeHandle(int)>(i1);

     label03:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _startNode> = i0;

        if i2 < 14 goto label07;

     label04:
        if i1 == -1 goto label12;

        $r14 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i3 = virtualinvoke $r14.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i1);

        if i3 != i2 goto label06;

        $i20 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $r16 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i18 = lengthof $r16;

        if $i20 < $i18 goto label05;

        $i23 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $i22 = $i23 * 2;

        r1 = newarray (int)[$i22];

        $r21 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $r22 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i25 = lengthof $r22;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r21, 0, r1, 0, $i25);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors> = r1;

     label05:
        $r18 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i21 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $i19 = $i21 + 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size> = $i19;

        $r19 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i24 = virtualinvoke $r19.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeHandle(int)>(i1);

        $r18[$i21] = $i24;

     label06:
        $r17 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i1 = virtualinvoke $r17.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i1);

        goto label04;

     label07:
        if i1 == -1 goto label12;

        $r5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i26 = virtualinvoke $r5.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i1);

        if i26 >= 14 goto label08;

        if i26 == i2 goto label09;

     label08:
        if i26 < 14 goto label11;

        $r7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r9 = $r7.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.dtm.ref.ExtendedType[] m_extendedTypes>;

        $r8 = $r9[i26];

        $i9 = virtualinvoke $r8.<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()>();

        if $i9 != i2 goto label11;

     label09:
        $i10 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $r10 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i11 = lengthof $r10;

        if $i10 < $i11 goto label10;

        $i16 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $i14 = $i16 * 2;

        r25 = newarray (int)[$i14];

        $r15 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $r13 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i17 = lengthof $r13;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r15, 0, r25, 0, $i17);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors> = r25;

     label10:
        $r12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i13 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $i12 = $i13 + 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size> = $i12;

        $r11 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i15 = virtualinvoke $r11.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeHandle(int)>(i1);

        $r12[$i13] = $i15;

     label11:
        $r6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i1 = virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i1);

        goto label07;

     label12:
        $i4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        $i5 = $i4 - 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_ancestorsPos> = $i5;

        $i6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_ancestorsPos>;

        if $i6 < 0 goto label13;

        $r4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_ancestorsPos>;

        $i8 = $r4[$i7];

        goto label14;

     label13:
        $i8 = -1;

     label14:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int _currentNode> = $i8;

        $r3 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r3;

     label15:
        return r0;
    }

    public int getNodeByPosition(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        if i0 > $i1 goto label1;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int[] m_ancestors>;

        $i2 = i0 - 1;

        $i3 = $r1[$i2];

        return $i3;

     label1:
        return -1;
    }

    public int getLast()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator r0;
        int $i0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedAncestorIterator: int m_size>;

        return $i0;
    }
}
