public class org.apache.xpath.axes.ChildIterator extends org.apache.xpath.axes.LocPathIterator
{
    static final long serialVersionUID;

    void <init>(org.apache.xpath.compiler.Compiler, int, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.ChildIterator r0;
        org.apache.xpath.compiler.Compiler r1;
        int i0, i1;

        r0 := @this: org.apache.xpath.axes.ChildIterator;

        r1 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>(org.apache.xpath.compiler.Compiler,int,int,boolean)>(r1, i0, i1, 0);

        virtualinvoke r0.<org.apache.xpath.axes.ChildIterator: void initNodeTest(int)>(-1);

        return;
    }

    public int asNode(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.ChildIterator r0;
        org.apache.xpath.XPathContext r1;
        int i0, $i1;
        org.apache.xml.dtm.DTM r2;

        r0 := @this: org.apache.xpath.axes.ChildIterator;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getFirstChild(int)>(i0);

        return $i1;
    }

    public int nextNode()
    {
        org.apache.xpath.axes.ChildIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        org.apache.xml.dtm.DTM $r1, $r2;

        r0 := @this: org.apache.xpath.axes.ChildIterator;

        $z0 = r0.<org.apache.xpath.axes.ChildIterator: boolean m_foundLast>;

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $i1 = r0.<org.apache.xpath.axes.ChildIterator: int m_lastFetched>;

        if -1 != $i1 goto label2;

        $r2 = r0.<org.apache.xpath.axes.ChildIterator: org.apache.xml.dtm.DTM m_cdtm>;

        $i6 = r0.<org.apache.xpath.axes.ChildIterator: int m_context>;

        $i3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i6);

        goto label3;

     label2:
        $r1 = r0.<org.apache.xpath.axes.ChildIterator: org.apache.xml.dtm.DTM m_cdtm>;

        $i2 = r0.<org.apache.xpath.axes.ChildIterator: int m_lastFetched>;

        $i3 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getNextSibling(int)>($i2);

     label3:
        i0 = $i3;

        r0.<org.apache.xpath.axes.ChildIterator: int m_lastFetched> = $i3;

        if -1 == i0 goto label4;

        $i4 = r0.<org.apache.xpath.axes.ChildIterator: int m_pos>;

        $i5 = $i4 + 1;

        r0.<org.apache.xpath.axes.ChildIterator: int m_pos> = $i5;

        return i0;

     label4:
        r0.<org.apache.xpath.axes.ChildIterator: boolean m_foundLast> = 1;

        return -1;
    }

    public int getAxis()
    {
        org.apache.xpath.axes.ChildIterator r0;

        r0 := @this: org.apache.xpath.axes.ChildIterator;

        return 3;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.ChildIterator: long serialVersionUID> = -6935428015142993583L;

        return;
    }
}
