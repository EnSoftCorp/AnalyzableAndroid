class org.apache.xalan.processor.ProcessorStripSpace extends org.apache.xalan.processor.ProcessorPreserveSpace
{
    static final long serialVersionUID;

    void <init>()
    {
        org.apache.xalan.processor.ProcessorStripSpace r0;

        r0 := @this: org.apache.xalan.processor.ProcessorStripSpace;

        specialinvoke r0.<org.apache.xalan.processor.ProcessorPreserveSpace: void <init>()>();

        return;
    }

    public void startElement(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorStripSpace r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4;
        org.xml.sax.Attributes r5;
        org.apache.xalan.templates.Stylesheet r6;
        org.apache.xalan.processor.WhitespaceInfoPaths r7, $r10;
        java.util.Vector r8;
        int i0, $i1, $i2;
        org.apache.xalan.templates.WhiteSpaceInfo r9, $r11;
        org.apache.xpath.XPath $r12;
        java.lang.Object $r13;

        r0 := @this: org.apache.xalan.processor.ProcessorStripSpace;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.xml.sax.Attributes;

        r6 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        $r10 = new org.apache.xalan.processor.WhitespaceInfoPaths;

        specialinvoke $r10.<org.apache.xalan.processor.WhitespaceInfoPaths: void <init>(org.apache.xalan.templates.Stylesheet)>(r6);

        r7 = $r10;

        virtualinvoke r0.<org.apache.xalan.processor.ProcessorStripSpace: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)>(r1, r4, r5, r7);

        r8 = virtualinvoke r7.<org.apache.xalan.processor.WhitespaceInfoPaths: java.util.Vector getElements()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke r8.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label2;

        $r11 = new org.apache.xalan.templates.WhiteSpaceInfo;

        $r13 = virtualinvoke r8.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r12 = (org.apache.xpath.XPath) $r13;

        specialinvoke $r11.<org.apache.xalan.templates.WhiteSpaceInfo: void <init>(org.apache.xpath.XPath,boolean,org.apache.xalan.templates.Stylesheet)>($r12, 1, r6);

        r9 = $r11;

        $i2 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: int nextUid()>();

        virtualinvoke r9.<org.apache.xalan.templates.WhiteSpaceInfo: void setUid(int)>($i2);

        virtualinvoke r6.<org.apache.xalan.templates.Stylesheet: void setStripSpaces(org.apache.xalan.templates.WhiteSpaceInfo)>(r9);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r7.<org.apache.xalan.processor.WhitespaceInfoPaths: void clearElements()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.ProcessorStripSpace: long serialVersionUID> = -5594493198637899591L;

        return;
    }
}
