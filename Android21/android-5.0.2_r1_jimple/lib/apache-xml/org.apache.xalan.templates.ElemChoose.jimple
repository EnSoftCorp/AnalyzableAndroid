public class org.apache.xalan.templates.ElemChoose extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemChoose r0;

        r0 := @this: org.apache.xalan.templates.ElemChoose;

        return 37;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemChoose r0;

        r0 := @this: org.apache.xalan.templates.ElemChoose;

        return "choose";
    }

    public void <init>()
    {
        org.apache.xalan.templates.ElemChoose r0;

        r0 := @this: org.apache.xalan.templates.ElemChoose;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemChoose r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        boolean z0, $z1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        int i0, i1;
        org.apache.xalan.templates.ElemWhen r3;
        org.apache.xpath.XPathContext r4;
        org.apache.xalan.transformer.MsgMgr $r5;
        org.apache.xpath.XPath $r6;

        r0 := @this: org.apache.xalan.templates.ElemChoose;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        z0 = 0;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemChoose: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

     label1:
        if r2 == null goto label5;

        i0 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 38 != i0 goto label3;

        z0 = 1;

        r3 = (org.apache.xalan.templates.ElemWhen) r2;

        r4 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        i1 = virtualinvoke r4.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r6 = virtualinvoke r3.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath getTest()>();

        $z1 = virtualinvoke $r6.<org.apache.xpath.XPath: boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r4, i1, r3);

        if $z1 == 0 goto label2;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r3, 1);

        return;

     label2:
        goto label4;

     label3:
        if 39 != i0 goto label4;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r2, 1);

        return;

     label4:
        r2 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        goto label1;

     label5:
        if z0 != 0 goto label6;

        $r5 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        virtualinvoke $r5.<org.apache.xalan.transformer.MsgMgr: void error(javax.xml.transform.SourceLocator,java.lang.String)>(r0, "ER_CHOOSE_REQUIRES_WHEN");

     label6:
        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemChoose r0;
        org.apache.xalan.templates.ElemTemplateElement r1, $r2;
        int i0;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.xalan.templates.ElemChoose;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        lookupswitch(i0)
        {
            case 38: goto label1;
            case 39: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r0.<org.apache.xalan.templates.ElemChoose: java.lang.String getNodeName()>();

        $r3[1] = $r5;

        virtualinvoke r0.<org.apache.xalan.templates.ElemChoose: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r3);

     label3:
        $r2 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $r2;
    }

    public boolean canAcceptVariables()
    {
        org.apache.xalan.templates.ElemChoose r0;

        r0 := @this: org.apache.xalan.templates.ElemChoose;

        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemChoose: long serialVersionUID> = -3070117361903102033L;

        return;
    }
}
