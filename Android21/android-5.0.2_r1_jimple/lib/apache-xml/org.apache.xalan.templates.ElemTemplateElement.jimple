public class org.apache.xalan.templates.ElemTemplateElement extends org.apache.xml.utils.UnImplNode implements org.apache.xml.utils.PrefixResolver, java.io.Serializable, org.apache.xpath.ExpressionNode, org.apache.xpath.WhitespaceStrippingElementMatcher, org.apache.xalan.templates.XSLTVisitable
{
    static final long serialVersionUID;
    private int m_lineNumber;
    private int m_endLineNumber;
    private int m_columnNumber;
    private int m_endColumnNumber;
    private boolean m_defaultSpace;
    private boolean m_hasTextLitOnly;
    protected boolean m_hasVariableDecl;
    private java.util.List m_declaredPrefixes;
    private java.util.List m_prefixTable;
    protected int m_docOrderNumber;
    protected org.apache.xalan.templates.ElemTemplateElement m_parentNode;
    org.apache.xalan.templates.ElemTemplateElement m_nextSibling;
    org.apache.xalan.templates.ElemTemplateElement m_firstChild;
    private transient org.w3c.dom.Node m_DOMBackPointer;

    public void <init>()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<org.apache.xml.utils.UnImplNode: void <init>()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_defaultSpace> = 1;

        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasTextLitOnly> = 0;

        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl> = 0;

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_docOrderNumber> = -1;

        return;
    }

    public boolean isCompiledTemplate()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 0;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return -1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return "Unknown XSLT Element";
    }

    public java.lang.String getLocalName()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        return $r1;
    }

    public void runtimeInit(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;
        org.apache.xalan.templates.StylesheetComposed $r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        return $r2;
    }

    public org.apache.xalan.templates.Stylesheet getStylesheet()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, $r2;
        org.apache.xalan.templates.Stylesheet $r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if null != $r1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

     label2:
        return $r3;
    }

    public org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;
        org.apache.xalan.templates.StylesheetRoot $r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        return $r2;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r2, $r4;
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.StylesheetRoot$ComposeState r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void resolvePrefixTables()>();

        r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 78 goto label1;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasTextLitOnly> = $z0;

        r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        virtualinvoke r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void pushStackMark()>();

        return;
    }

    public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.StylesheetRoot$ComposeState r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void popStackMark()>();

        return;
    }

    public void error(java.lang.String, java.lang.Object[])
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String r1, r3, $r6;
        java.lang.Object[] r2, $r5;
        java.lang.RuntimeException $r4;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = new java.lang.RuntimeException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ELEMTEMPLATEELEM_ERR", $r5);

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r4;
    }

    public void error(java.lang.String)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>(r1, null);

        return;
    }

    public org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r2, r3, $r4;
        org.w3c.dom.Node r1, $r5;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.w3c.dom.Node;

        if null != r1 goto label1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_NULL_CHILD", null);

     label1:
        r2 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if null != $r4 goto label2;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r2;

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getLastChild()>();

        r3 = (org.apache.xalan.templates.ElemTemplateElement) $r5;

        r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r2;

     label3:
        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r0;

        return r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2, $r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        if null != r1 goto label1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_NULL_CHILD", null);

     label1:
        $r3 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if null != $r3 goto label2;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r1;

        goto label3;

     label2:
        r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getLastChildElem()>();

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r1;

     label3:
        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        return r1;
    }

    public boolean hasChildNodes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public short getNodeType()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 1;
    }

    public org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return r0;
    }

    public org.apache.xalan.templates.ElemTemplateElement removeChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        if r1 == null goto label1;

        $r3 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if $r3 == r0 goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if r1 != $r4 goto label3;

        $r6 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r6;

        goto label4;

     label3:
        r2 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()>();

        $r5 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r5;

     label4:
        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = null;

        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = null;

        return r1;
    }

    public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r3, r4, r5, $r8, $r9;
        org.w3c.dom.Node r1, r2, $r6, $r7;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        if r2 == null goto label1;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r6 == r0 goto label2;

     label1:
        return null;

     label2:
        r3 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        r4 = (org.apache.xalan.templates.ElemTemplateElement) r2;

        $r7 = virtualinvoke r4.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getPreviousSibling()>();

        r5 = (org.apache.xalan.templates.ElemTemplateElement) $r7;

        if null == r5 goto label3;

        r5.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r3;

     label3:
        $r8 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if $r8 != r4 goto label4;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r3;

     label4:
        r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r0;

        r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = null;

        $r9 = r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r9;

        r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = null;

        return r3;
    }

    public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r17;
        org.w3c.dom.Node r1, r2, r3, r4, $r12, $r14;
        boolean z0;
        org.w3c.dom.DOMException $r5;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        if null != r2 goto label01;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        return r1;

     label01:
        if r1 != r2 goto label02;

        return r1;

     label02:
        r3 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        r4 = null;

        z0 = 0;

     label03:
        if null == r3 goto label10;

        if r1 != r3 goto label06;

        if null == r4 goto label04;

        $r15 = (org.apache.xalan.templates.ElemTemplateElement) r4;

        $r14 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r17 = (org.apache.xalan.templates.ElemTemplateElement) $r14;

        $r15.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r17;

        goto label05;

     label04:
        $r12 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        $r13 = (org.apache.xalan.templates.ElemTemplateElement) $r12;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r13;

     label05:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label03;

     label06:
        if r2 != r3 goto label09;

        if null == r4 goto label07;

        $r11 = (org.apache.xalan.templates.ElemTemplateElement) r4;

        $r10 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        $r11.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r10;

        goto label08;

     label07:
        $r6 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = $r6;

     label08:
        $r8 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        $r7 = (org.apache.xalan.templates.ElemTemplateElement) r2;

        $r8.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r7;

        $r9 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        virtualinvoke $r9.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        r4 = r1;

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        z0 = 1;

        goto label03;

     label09:
        r4 = r3;

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label03;

     label10:
        if z0 != 0 goto label11;

        $r5 = new org.w3c.dom.DOMException;

        specialinvoke $r5.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(8, "refChild was not found in insertBefore method!");

        throw $r5;

     label11:
        return r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement replaceChild(org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2, r3, $r4, $r5, $r6;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        if $r4 == r0 goto label2;

     label1:
        return null;

     label2:
        r3 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()>();

        if null == r3 goto label3;

        r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = r1;

     label3:
        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        if $r5 != r2 goto label4;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild> = r1;

     label4:
        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r0;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = null;

        $r6 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = $r6;

        r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling> = null;

        return r1;
    }

    public int getLength()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1;
        int i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 = 0;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r1 == null goto label2;

        i0 = i0 + 1;

        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label2:
        return i0;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1;
        int i0, i1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        if r1 == null goto label2;

        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public org.w3c.dom.Document getOwnerDocument()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.Stylesheet $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplate getOwnerXSLTemplate()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1;
        int i0;
        org.apache.xalan.templates.ElemTemplate $r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = r0;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

     label1:
        if null == r1 goto label2;

        if i0 == 19 goto label2;

        r1 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        if null == r1 goto label1;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        goto label1;

     label2:
        $r2 = (org.apache.xalan.templates.ElemTemplate) r1;

        return $r2;
    }

    public java.lang.String getTagName()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        return $r1;
    }

    public boolean hasTextLitOnly()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasTextLitOnly>;

        return $z0;
    }

    public java.lang.String getBaseIdentifier()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getSystemId()>();

        return $r1;
    }

    public int getEndLineNumber()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endLineNumber>;

        return $i0;
    }

    public int getLineNumber()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_lineNumber>;

        return $i0;
    }

    public int getEndColumnNumber()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endColumnNumber>;

        return $i0;
    }

    public int getColumnNumber()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_columnNumber>;

        return $i0;
    }

    public java.lang.String getPublicId()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getPublicId()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.String getSystemId()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.Stylesheet r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: java.lang.String getHref()>();

     label2:
        return $r2;
    }

    public void setLocaterInfo(javax.xml.transform.SourceLocator)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        javax.xml.transform.SourceLocator r1;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        $i0 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_lineNumber> = $i0;

        $i1 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_columnNumber> = $i1;

        return;
    }

    public void setEndLocaterInfo(javax.xml.transform.SourceLocator)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        javax.xml.transform.SourceLocator r1;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        $i0 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endLineNumber> = $i0;

        $i1 = interfaceinvoke r1.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_endColumnNumber> = $i1;

        return;
    }

    public boolean hasVariableDecl()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl>;

        return $z0;
    }

    public void setXmlSpace(int)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        if 2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_defaultSpace> = $z0;

        return;
    }

    public boolean getXmlSpace()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = r0.<org.apache.xalan.templates.ElemTemplateElement: boolean m_defaultSpace>;

        return $z0;
    }

    public java.util.List getDeclaredPrefixes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.util.List $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        return $r1;
    }

    public void setPrefixes(org.xml.sax.helpers.NamespaceSupport) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.xml.sax.helpers.NamespaceSupport r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.xml.sax.helpers.NamespaceSupport;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport,boolean)>(r1, 0);

        return;
    }

    public void setPrefixes(org.xml.sax.helpers.NamespaceSupport, boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.xml.sax.helpers.NamespaceSupport r1;
        boolean z0, $z1, $z3;
        java.util.Enumeration r2;
        java.lang.String r3, r4;
        org.apache.xalan.templates.XMLNSDecl r5, $r8;
        java.lang.Object $r6;
        java.util.List $r7, $r9;
        java.util.ArrayList $r10;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.xml.sax.helpers.NamespaceSupport;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r6;

        $r7 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        if null != $r7 goto label2;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes> = $r10;

     label2:
        r4 = virtualinvoke r1.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r3);

        if z0 == 0 goto label3;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z3 == 0 goto label3;

        goto label1;

     label3:
        $r8 = new org.apache.xalan.templates.XMLNSDecl;

        specialinvoke $r8.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>(r3, r4, 0);

        r5 = $r8;

        $r9 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label4:
        return;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String r1;
        org.w3c.dom.Node r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANT_RESOLVE_NSPREFIX", null);

        return null;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r4, $r6;
        java.lang.String r1, $r5, $r7, $r9, $r10;
        java.util.List r2;
        int i0, i1;
        org.apache.xalan.templates.XMLNSDecl r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        if null == r2 goto label4;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("#default");

        if $z1 == 0 goto label1;

        r1 = "";

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (org.apache.xalan.templates.XMLNSDecl) $r8;

        $r9 = virtualinvoke r3.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label3;

        $r10 = virtualinvoke r3.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        return $r10;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        if null == $r4 goto label5;

        $r6 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $r7 = virtualinvoke $r6.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)>(r1);

        return $r7;

     label5:
        $r5 = "xml";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label6;

        return "http://www.w3.org/XML/1998/namespace";

     label6:
        return null;
    }

    java.util.List getPrefixTable()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.util.List $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        return $r1;
    }

    void setPrefixTable(java.util.List)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.util.List r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable> = r1;

        return;
    }

    public boolean containsExcludeResultPrefix(java.lang.String, java.lang.String)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        if null == r3 goto label1;

        $z0 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: boolean containsExcludeResultPrefix(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;

     label1:
        return 0;
    }

    private boolean excludeResultNSDecl(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2;
        org.apache.xalan.templates.Stylesheet $r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        $z1 = virtualinvoke $r3.<org.apache.xalan.templates.Stylesheet: boolean containsExtensionElementURI(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean containsExcludeResultPrefix(java.lang.String,java.lang.String)>(r1, r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void resolvePrefixTables() throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r28;
        org.apache.xalan.templates.StylesheetRoot r1;
        int i0, i1, i2, i3;
        org.apache.xalan.templates.XMLNSDecl r2, $r14, $r20, $r22, r27, r30;
        java.lang.String r3, r4, $r11, $r12, $r13, $r15, $r23, $r25;
        boolean z0, $z1, $z2, z4;
        org.apache.xalan.templates.NamespaceAlias r5;
        java.util.List $r6, $r7, $r9, $r16, $r17, $r19, $r21, $r24, r29;
        java.util.ArrayList $r8, $r26;
        java.lang.Object $r10, $r18;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixTable(java.util.List)>(null);

        $r6 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        if null == $r6 goto label06;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $r17 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        i0 = interfaceinvoke $r17.<java.util.List: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label06;

        $r19 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_declaredPrefixes>;

        $r18 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (org.apache.xalan.templates.XMLNSDecl) $r18;

        r3 = virtualinvoke r2.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        r4 = virtualinvoke r2.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        if null != r4 goto label02;

        r4 = "";

     label02:
        z0 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean excludeResultNSDecl(java.lang.String,java.lang.String)>(r3, r4);

        $r21 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        if null != $r21 goto label03;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixTable(java.util.List)>($r26);

     label03:
        r5 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.NamespaceAlias getNamespaceAliasComposed(java.lang.String)>(r4);

        if null == r5 goto label04;

        $r22 = new org.apache.xalan.templates.XMLNSDecl;

        $r23 = virtualinvoke r5.<org.apache.xalan.templates.NamespaceAlias: java.lang.String getStylesheetPrefix()>();

        $r25 = virtualinvoke r5.<org.apache.xalan.templates.NamespaceAlias: java.lang.String getResultNamespace()>();

        specialinvoke $r22.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>($r23, $r25, z0);

        r27 = $r22;

        goto label05;

     label04:
        $r20 = new org.apache.xalan.templates.XMLNSDecl;

        specialinvoke $r20.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>(r3, r4, z0);

        r27 = $r20;

     label05:
        $r24 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r27);

        i1 = i1 + 1;

        goto label01;

     label06:
        r28 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()>();

        if null == r28 goto label11;

        r29 = r28.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        $r9 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        if null != $r9 goto label07;

        $z2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean needToCheckExclude()>();

        if $z2 != 0 goto label07;

        $r16 = r28.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixTable(java.util.List)>($r16);

        goto label10;

     label07:
        i2 = interfaceinvoke r29.<java.util.List: int size()>();

        i3 = 0;

     label08:
        if i3 >= i2 goto label10;

        $r10 = interfaceinvoke r29.<java.util.List: java.lang.Object get(int)>(i3);

        r30 = (org.apache.xalan.templates.XMLNSDecl) $r10;

        $r12 = virtualinvoke r30.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r11 = virtualinvoke r30.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        z4 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean excludeResultNSDecl(java.lang.String,java.lang.String)>($r12, $r11);

        $z1 = virtualinvoke r30.<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()>();

        if z4 == $z1 goto label09;

        $r14 = new org.apache.xalan.templates.XMLNSDecl;

        $r13 = virtualinvoke r30.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r15 = virtualinvoke r30.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        specialinvoke $r14.<org.apache.xalan.templates.XMLNSDecl: void <init>(java.lang.String,java.lang.String,boolean)>($r13, $r15, z4);

        r30 = $r14;

     label09:
        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl)>(r30);

        i3 = i3 + 1;

        goto label08;

     label10:
        goto label12;

     label11:
        $r7 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        if null != $r7 goto label12;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setPrefixTable(java.util.List)>($r8);

     label12:
        return;
    }

    void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.XMLNSDecl r1, r2;
        int i0, i1;
        java.util.List $r3, $r4, $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        boolean $z1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XMLNSDecl;

        $r3 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (org.apache.xalan.templates.XMLNSDecl) $r6;

        $r7 = virtualinvoke r2.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r8 = virtualinvoke r1.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        return;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    boolean needToCheckExclude()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 0;
    }

    void executeNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)>(r1, null);

        return;
    }

    void executeNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        java.lang.String r2, $r9, $r10, $r11;
        org.apache.xml.serializer.SerializationHandler r3;
        int i0, i1;
        org.apache.xalan.templates.XMLNSDecl r4;
        java.util.List $r5, $r6, $r7;
        java.lang.Object $r8;
        boolean $z0, $z2;
        org.xml.sax.SAXException $r12, r14;
        javax.xml.transform.TransformerException $r13;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter1: java.lang.String;

     label1:
        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        if null == $r5 goto label5;

        r3 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $r6 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label5;

        $r7 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.xalan.templates.XMLNSDecl) $r8;

        $z0 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()>();

        if $z0 != 0 goto label4;

        if null == r2 goto label3;

        $r11 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label4;

     label3:
        $r9 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $r10 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()>();

        interfaceinvoke r3.<org.apache.xml.serializer.SerializationHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>($r9, $r10, 1);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r14 = $r12;

        $r13 = new javax.xml.transform.TransformerException;

        specialinvoke $r13.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r14);

        throw $r13;

     label7:
        return;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)>(r1, null);

        return;
    }

    void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        java.lang.String r2, $r9, $r10;
        org.apache.xml.serializer.SerializationHandler r3;
        int i0, i1;
        org.apache.xalan.templates.XMLNSDecl r4;
        java.util.List $r5, $r6, $r7;
        java.lang.Object $r8;
        boolean $z0, $z1;
        org.xml.sax.SAXException $r11, r13;
        javax.xml.transform.TransformerException $r12;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter1: java.lang.String;

     label1:
        $r5 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        if null == $r5 goto label5;

        r3 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $r6 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r7 = r0.<org.apache.xalan.templates.ElemTemplateElement: java.util.List m_prefixTable>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.xalan.templates.XMLNSDecl) $r8;

        $z0 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()>();

        if $z0 != 0 goto label4;

        if null == r2 goto label3;

        $r10 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label4;

     label3:
        $r9 = virtualinvoke r4.<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()>();

        interfaceinvoke r3.<org.apache.xml.serializer.SerializationHandler: void endPrefixMapping(java.lang.String)>($r9);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        r13 = $r11;

        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r13);

        throw $r12;

     label7:
        return;

        catch org.xml.sax.SAXException from label1 to label5 with label6;
    }

    public void setUid(int)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.templates.ElemTemplateElement: int m_docOrderNumber> = i0;

        return;
    }

    public int getUid()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = r0.<org.apache.xalan.templates.ElemTemplateElement: int m_docOrderNumber>;

        return $i0;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getParentElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        return $r1;
    }

    public void setParentElem(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r1;

        return;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        return $r1;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node r1, r2, r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getParentNode()>();

        r2 = null;

        if r1 == null goto label3;

        r3 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r3 == null goto label3;

        if r3 != r0 goto label2;

        return r2;

     label2:
        r2 = r3;

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        return null;
    }

    public org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2, r3;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()>();

        r2 = null;

        if r1 == null goto label3;

        r3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

     label1:
        if r3 == null goto label3;

        if r3 != r0 goto label2;

        return r2;

     label2:
        r2 = r3;

        r3 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        goto label1;

     label3:
        return null;
    }

    public org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        return $r1;
    }

    public org.w3c.dom.Node getFirstChild()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        return $r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        return $r1;
    }

    public org.w3c.dom.Node getLastChild()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = null;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r2 == null goto label2;

        r1 = r2;

        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label2:
        return r1;
    }

    public org.apache.xalan.templates.ElemTemplateElement getLastChildElem()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r1, r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = null;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r2 == null goto label2;

        r1 = r2;

        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label2:
        return r1;
    }

    public org.w3c.dom.Node getDOMBackPointer()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node m_DOMBackPointer>;

        return $r1;
    }

    public void setDOMBackPointer(org.w3c.dom.Node)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node m_DOMBackPointer> = r1;

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r2;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4;
        org.apache.xalan.templates.StylesheetComposed $r3, $r4;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: java.lang.Object;

        r2 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        $r3 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        i0 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        i1 = virtualinvoke $r4.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        if i1 >= i0 goto label1;

        return -1;

     label1:
        if i1 <= i0 goto label2;

        return 1;

     label2:
        $i2 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getUid()>();

        $i3 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getUid()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    public boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext, org.w3c.dom.Element) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xpath.XPathContext r1;
        org.w3c.dom.Element r2;
        org.apache.xalan.templates.StylesheetRoot r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        if null == r3 goto label1;

        $z0 = virtualinvoke r3.<org.apache.xalan.templates.StylesheetRoot: boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,org.w3c.dom.Element)>(r1, r2);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canStripWhiteSpace()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        if null == r1 goto label1;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: boolean canStripWhiteSpace()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canAcceptVariables()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 1;
    }

    public void exprSetParent(org.apache.xpath.ExpressionNode)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        org.apache.xpath.ExpressionNode r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xpath.ExpressionNode;

        $r2 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>($r2);

        return;
    }

    public org.apache.xpath.ExpressionNode exprGetParent()
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        return $r1;
    }

    public void exprAddChild(org.apache.xpath.ExpressionNode, int)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        org.apache.xpath.ExpressionNode r1;
        int i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xpath.ExpressionNode;

        i0 := @parameter1: int;

        $r2 = (org.apache.xalan.templates.ElemTemplateElement) r1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>($r2);

        return;
    }

    public org.apache.xpath.ExpressionNode exprGetChild(int)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int i0;
        org.w3c.dom.Node $r1;
        org.apache.xpath.ExpressionNode $r2;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node item(int)>(i0);

        $r2 = (org.apache.xpath.ExpressionNode) $r1;

        return $r2;
    }

    public int exprGetNumChildren()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getLength()>();

        return $i0;
    }

    protected boolean accept(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        return $z0;
    }

    public void callVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean accept(org.apache.xalan.templates.XSLTVisitor)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label1:
        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, r2;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        r2 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label2:
        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.ElemTemplateElement r0;
        org.apache.xalan.templates.XSLTVisitor r1;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, 1);

        return;
    }

    public boolean handlesNullPrefixes()
    {
        org.apache.xalan.templates.ElemTemplateElement r0;

        r0 := @this: org.apache.xalan.templates.ElemTemplateElement;

        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemTemplateElement: long serialVersionUID> = 4440018597841834447L;

        return;
    }
}
