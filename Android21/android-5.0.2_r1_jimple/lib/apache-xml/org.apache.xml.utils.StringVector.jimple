public class org.apache.xml.utils.StringVector extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    protected int m_blocksize;
    protected java.lang.String[] m_map;
    protected int m_firstFree;
    protected int m_mapSize;

    public void <init>()
    {
        org.apache.xml.utils.StringVector r0;
        int $i0, $i1;
        java.lang.String[] $r1;

        r0 := @this: org.apache.xml.utils.StringVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.StringVector: int m_firstFree> = 0;

        r0.<org.apache.xml.utils.StringVector: int m_blocksize> = 8;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_blocksize>;

        r0.<org.apache.xml.utils.StringVector: int m_mapSize> = $i0;

        $i1 = r0.<org.apache.xml.utils.StringVector: int m_blocksize>;

        $r1 = newarray (java.lang.String)[$i1];

        r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map> = $r1;

        return;
    }

    public void <init>(int)
    {
        org.apache.xml.utils.StringVector r0;
        int i0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.xml.utils.StringVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.StringVector: int m_firstFree> = 0;

        r0.<org.apache.xml.utils.StringVector: int m_blocksize> = i0;

        r0.<org.apache.xml.utils.StringVector: int m_mapSize> = i0;

        $r1 = newarray (java.lang.String)[i0];

        r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map> = $r1;

        return;
    }

    public int getLength()
    {
        org.apache.xml.utils.StringVector r0;
        int $i0;

        r0 := @this: org.apache.xml.utils.StringVector;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        return $i0;
    }

    public final int size()
    {
        org.apache.xml.utils.StringVector r0;
        int $i0;

        r0 := @this: org.apache.xml.utils.StringVector;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        return $i0;
    }

    public final void addElement(java.lang.String)
    {
        org.apache.xml.utils.StringVector r0;
        java.lang.String r1;
        java.lang.String[] r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.apache.xml.utils.StringVector;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.apache.xml.utils.StringVector: int m_mapSize>;

        if $i2 < $i1 goto label1;

        $i7 = r0.<org.apache.xml.utils.StringVector: int m_mapSize>;

        $i6 = r0.<org.apache.xml.utils.StringVector: int m_blocksize>;

        $i8 = $i7 + $i6;

        r0.<org.apache.xml.utils.StringVector: int m_mapSize> = $i8;

        $i9 = r0.<org.apache.xml.utils.StringVector: int m_mapSize>;

        r2 = newarray (java.lang.String)[$i9];

        $r4 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i10 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i11 = $i10 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i11);

        r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map> = r2;

     label1:
        $r3 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i3 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $r3[$i3] = r1;

        $i4 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i5 = $i4 + 1;

        r0.<org.apache.xml.utils.StringVector: int m_firstFree> = $i5;

        return;
    }

    public final java.lang.String elementAt(int)
    {
        org.apache.xml.utils.StringVector r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.utils.StringVector;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $r2 = $r1[i0];

        return $r2;
    }

    public final boolean contains(java.lang.String)
    {
        org.apache.xml.utils.StringVector r0;
        java.lang.String r1, $r3;
        int i0, $i1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.StringVector;

        r1 := @parameter0: java.lang.String;

        if null != r1 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $i1 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        if i0 >= $i1 goto label4;

        $r2 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public final boolean containsIgnoreCase(java.lang.String)
    {
        org.apache.xml.utils.StringVector r0;
        java.lang.String r1, $r3;
        int i0, $i1;
        java.lang.String[] $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.StringVector;

        r1 := @parameter0: java.lang.String;

        if null != r1 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $i1 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        if i0 >= $i1 goto label4;

        $r2 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public final void push(java.lang.String)
    {
        org.apache.xml.utils.StringVector r0;
        java.lang.String r1;
        java.lang.String[] r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.apache.xml.utils.StringVector;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.apache.xml.utils.StringVector: int m_mapSize>;

        if $i2 < $i1 goto label1;

        $i7 = r0.<org.apache.xml.utils.StringVector: int m_mapSize>;

        $i6 = r0.<org.apache.xml.utils.StringVector: int m_blocksize>;

        $i8 = $i7 + $i6;

        r0.<org.apache.xml.utils.StringVector: int m_mapSize> = $i8;

        $i9 = r0.<org.apache.xml.utils.StringVector: int m_mapSize>;

        r2 = newarray (java.lang.String)[$i9];

        $r4 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i10 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i11 = $i10 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i11);

        r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map> = r2;

     label1:
        $r3 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i3 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $r3[$i3] = r1;

        $i4 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i5 = $i4 + 1;

        r0.<org.apache.xml.utils.StringVector: int m_firstFree> = $i5;

        return;
    }

    public final java.lang.String pop()
    {
        org.apache.xml.utils.StringVector r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.apache.xml.utils.StringVector;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        if $i0 > 0 goto label1;

        return null;

     label1:
        $i1 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i2 = $i1 - 1;

        r0.<org.apache.xml.utils.StringVector: int m_firstFree> = $i2;

        $r2 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i3 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        r1 = $r2[$i3];

        $r3 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i4 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $r3[$i4] = null;

        return r1;
    }

    public final java.lang.String peek()
    {
        org.apache.xml.utils.StringVector r0;
        int $i0, $i1, $i2;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.utils.StringVector;

        $i0 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        if $i0 > 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xml.utils.StringVector: java.lang.String[] m_map>;

        $i1 = r0.<org.apache.xml.utils.StringVector: int m_firstFree>;

        $i2 = $i1 - 1;

        $r2 = $r1[$i2];

     label2:
        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xml.utils.StringVector: long serialVersionUID> = 4995234972032919748L;

        return;
    }
}
