public class org.apache.xpath.compiler.OpMap extends java.lang.Object
{
    protected java.lang.String m_currentPattern;
    static final int MAXTOKENQUEUESIZE;
    static final int BLOCKTOKENQUEUESIZE;
    org.apache.xml.utils.ObjectVector m_tokenQueue;
    org.apache.xpath.compiler.OpMapVector m_opMap;
    public static final int MAPINDEX_LENGTH;

    public void <init>()
    {
        org.apache.xpath.compiler.OpMap r0;
        org.apache.xml.utils.ObjectVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.xml.utils.ObjectVector;

        specialinvoke $r1.<org.apache.xml.utils.ObjectVector: void <init>(int,int)>(500, 500);

        r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue> = $r1;

        r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap> = null;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.xpath.compiler.OpMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: java.lang.String m_currentPattern>;

        return $r1;
    }

    public java.lang.String getPatternString()
    {
        org.apache.xpath.compiler.OpMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: java.lang.String m_currentPattern>;

        return $r1;
    }

    public org.apache.xml.utils.ObjectVector getTokenQueue()
    {
        org.apache.xpath.compiler.OpMap r0;
        org.apache.xml.utils.ObjectVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        return $r1;
    }

    public java.lang.Object getToken(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0;
        org.apache.xml.utils.ObjectVector $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>(i0);

        return $r2;
    }

    public int getTokenQueueSize()
    {
        org.apache.xpath.compiler.OpMap r0;
        org.apache.xml.utils.ObjectVector $r1;
        int $i0;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: int size()>();

        return $i0;
    }

    public org.apache.xpath.compiler.OpMapVector getOpMap()
    {
        org.apache.xpath.compiler.OpMap r0;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        return $r1;
    }

    void shrink()
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.xpath.compiler.OpMapVector $r1, $r2, $r3, $r4, $r5;
        org.apache.xml.utils.ObjectVector $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        i0 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>(1);

        $r2 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i1 = i0 + 4;

        virtualinvoke $r2.<org.apache.xpath.compiler.OpMapVector: void setToSize(int)>($i1);

        $r3 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        virtualinvoke $r3.<org.apache.xpath.compiler.OpMapVector: void setElementAt(int,int)>(0, i0);

        $r4 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i2 = i0 + 1;

        virtualinvoke $r4.<org.apache.xpath.compiler.OpMapVector: void setElementAt(int,int)>(0, $i2);

        $r5 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i3 = i0 + 2;

        virtualinvoke $r5.<org.apache.xpath.compiler.OpMapVector: void setElementAt(int,int)>(0, $i3);

        $r6 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        i7 = virtualinvoke $r6.<org.apache.xml.utils.ObjectVector: int size()>();

        $r7 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $i4 = i7 + 4;

        virtualinvoke $r7.<org.apache.xml.utils.ObjectVector: void setToSize(int)>($i4);

        $r8 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        virtualinvoke $r8.<org.apache.xml.utils.ObjectVector: void setElementAt(java.lang.Object,int)>(null, i7);

        $r9 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $i5 = i7 + 1;

        virtualinvoke $r9.<org.apache.xml.utils.ObjectVector: void setElementAt(java.lang.Object,int)>(null, $i5);

        $r10 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $i6 = i7 + 2;

        virtualinvoke $r10.<org.apache.xml.utils.ObjectVector: void setElementAt(java.lang.Object,int)>(null, $i6);

        return;
    }

    public int getOp(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, $i1;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i1 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>(i0);

        return $i1;
    }

    public void setOp(int, int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, i1;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: void setElementAt(int,int)>(i1, i0);

        return;
    }

    public int getNextOpPos(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, $i1, $i2, $i3;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i1 = i0 + 1;

        $i2 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i1);

        $i3 = i0 + $i2;

        return $i3;
    }

    public int getNextStepPos(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.RuntimeException $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i0);

        if i1 < 37 goto label1;

        if i1 > 53 goto label1;

        $i4 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i0);

        return $i4;

     label1:
        if i1 < 22 goto label6;

        if i1 > 25 goto label6;

        i2 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i0);

     label2:
        $i3 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i2);

        if 29 != $i3 goto label3;

        i2 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)>(i2);

        goto label2;

     label3:
        i5 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getOp(int)>(i2);

        if i5 < 37 goto label4;

        if i5 <= 53 goto label5;

     label4:
        return -1;

     label5:
        return i2;

     label6:
        $r1 = new java.lang.RuntimeException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $r2[0] = $r3;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_STEP", $r2);

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r1;
    }

    public static int getNextOpPos(int[], int)
    {
        int[] r0;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        $i1 = i0 + 1;

        $i2 = r0[$i1];

        $i3 = i0 + $i2;

        return $i3;
    }

    public int getFirstPredicateOpPos(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xpath.compiler.OpMapVector $r1, $r4, $r5;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        i1 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>(i0);

        if i1 < 37 goto label1;

        if i1 > 53 goto label1;

        $r5 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i5 = i0 + 2;

        $i6 = virtualinvoke $r5.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i5);

        $i7 = i0 + $i6;

        return $i7;

     label1:
        if i1 < 22 goto label2;

        if i1 > 25 goto label2;

        $r4 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i2 = i0 + 1;

        $i3 = virtualinvoke $r4.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i2);

        $i4 = i0 + $i3;

        return $i4;

     label2:
        if -2 != i1 goto label3;

        return -2;

     label3:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $r2[0] = $r3;

        virtualinvoke r0.<org.apache.xpath.compiler.OpMap: void error(java.lang.String,java.lang.Object[])>("ER_UNKNOWN_OPCODE", $r2);

        return -1;
    }

    public void error(java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.OpMap r0;
        java.lang.String r1, r3;
        java.lang.Object[] r2;
        javax.xml.transform.TransformerException $r4;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = new javax.xml.transform.TransformerException;

        specialinvoke $r4.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>(r3);

        throw $r4;
    }

    public static int getFirstChildPos(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 + 2;

        return $i1;
    }

    public int getArgLength(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, $i1, $i2;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i1 = i0 + 1;

        $i2 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i1);

        return $i2;
    }

    public int getArgLengthOfStep(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i1 = i0 + 1;

        $i2 = $i1 + 1;

        $i3 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i2);

        $i4 = $i3 - 3;

        return $i4;
    }

    public static int getFirstChildPosOfStep(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 + 3;

        return $i1;
    }

    public int getStepTestType(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, $i1, $i2;
        org.apache.xpath.compiler.OpMapVector $r1;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i1 = i0 + 3;

        $i2 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i1);

        return $i2;
    }

    public java.lang.String getStepNS(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, i1, i2, $i3;
        org.apache.xpath.compiler.OpMapVector $r1;
        org.apache.xml.utils.ObjectVector $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)>(i0);

        if i1 != 3 goto label3;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i3 = i0 + 4;

        i2 = virtualinvoke $r1.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i3);

        if i2 < 0 goto label1;

        $r2 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>(i2);

        $r4 = (java.lang.String) $r3;

        return $r4;

     label1:
        if -3 != i2 goto label2;

        return "*";

     label2:
        return null;

     label3:
        return null;
    }

    public java.lang.String getStepLocalName(int)
    {
        org.apache.xpath.compiler.OpMap r0;
        int i0, i1, i2, $i3, $i4;
        org.apache.xml.utils.ObjectVector $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.xpath.compiler.OpMapVector $r4, $r5;

        r0 := @this: org.apache.xpath.compiler.OpMap;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)>(i0);

        tableswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        i2 = -2;

        goto label6;

     label2:
        i2 = -3;

        goto label6;

     label3:
        $r5 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i4 = i0 + 4;

        i2 = virtualinvoke $r5.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i4);

        goto label6;

     label4:
        $r4 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector m_opMap>;

        $i3 = i0 + 5;

        i2 = virtualinvoke $r4.<org.apache.xpath.compiler.OpMapVector: int elementAt(int)>($i3);

        goto label6;

     label5:
        i2 = -2;

     label6:
        if i2 < 0 goto label7;

        $r1 = r0.<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector m_tokenQueue>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>(i2);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;

     label7:
        if -3 != i2 goto label8;

        return "*";

     label8:
        return null;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.compiler.OpMap: int MAPINDEX_LENGTH> = 1;

        <org.apache.xpath.compiler.OpMap: int BLOCKTOKENQUEUESIZE> = 500;

        <org.apache.xpath.compiler.OpMap: int MAXTOKENQUEUESIZE> = 500;

        return;
    }
}
