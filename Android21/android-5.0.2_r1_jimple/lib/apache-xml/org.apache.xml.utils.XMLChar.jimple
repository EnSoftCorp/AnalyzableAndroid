public class org.apache.xml.utils.XMLChar extends java.lang.Object
{
    private static final byte[] CHARS;
    public static final int MASK_VALID;
    public static final int MASK_SPACE;
    public static final int MASK_NAME_START;
    public static final int MASK_NAME;
    public static final int MASK_PUBID;
    public static final int MASK_CONTENT;
    public static final int MASK_NCNAME_START;
    public static final int MASK_NCNAME;

    public void <init>()
    {
        org.apache.xml.utils.XMLChar r0;

        r0 := @this: org.apache.xml.utils.XMLChar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSupplemental(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 65536 goto label1;

        if i0 > 1114111 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int supplemental(char, char)
    {
        char c0, c1;
        int $i2, $i3, $i4, $i5, $i6;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i2 = c0 - 55296;

        $i4 = $i2 * 1024;

        $i3 = c1 - 56320;

        $i5 = $i4 + $i3;

        $i6 = $i5 + 65536;

        return $i6;
    }

    public static char highSurrogate(int)
    {
        int i0, $i1, $i2, $i3;
        char $c4;

        i0 := @parameter0: int;

        $i1 = i0 - 65536;

        $i2 = $i1 >> 10;

        $i3 = $i2 + 55296;

        $c4 = (char) $i3;

        return $c4;
    }

    public static char lowSurrogate(int)
    {
        int i0, $i1, $i2, $i3;
        char $c4;

        i0 := @parameter0: int;

        $i1 = i0 - 65536;

        $i2 = $i1 & 1023;

        $i3 = $i2 + 56320;

        $c4 = (char) $i3;

        return $c4;
    }

    public static boolean isHighSurrogate(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 55296 > i0 goto label1;

        if i0 > 56319 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isLowSurrogate(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 56320 > i0 goto label1;

        if i0 > 57343 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValid(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 1;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isInvalid(int)
    {
        int i0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValid(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isContent(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 32;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isMarkup(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 60 goto label1;

        if i0 == 38 goto label1;

        if i0 != 37 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isSpace(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 2;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNameStart(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 4;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isName(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 8;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNCNameStart(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 64;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNCName(int)
    {
        int i0;
        byte[] $r0;
        byte $b1;
        short $s2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $s2 = $b1 & 128;

        if $s2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isPubid(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 16;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidName(java.lang.String)
    {
        java.lang.String r0;
        char c0, c4;
        int i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        return 0;

     label1:
        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isNameStart(int)>(c0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = 1;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i3 goto label5;

        c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isName(int)>(c4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 1;
    }

    public static boolean isValidNCName(java.lang.String)
    {
        java.lang.String r0;
        char c0, c4;
        int i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        return 0;

     label1:
        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isNCNameStart(int)>(c0);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = 1;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i3 goto label5;

        c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isNCName(int)>(c4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 1;
    }

    public static boolean isValidNmtoken(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i2, $i3;
        char c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i3 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isName(int)>(c1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static boolean isValidIANAEncoding(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2;
        char c1, c3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label9;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 0 goto label9;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c1 < 65 goto label1;

        if c1 <= 90 goto label2;

     label1:
        if c1 < 97 goto label9;

        if c1 > 122 goto label9;

     label2:
        i2 = 1;

     label3:
        if i2 >= i0 goto label8;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c3 < 65 goto label4;

        if c3 <= 90 goto label7;

     label4:
        if c3 < 97 goto label5;

        if c3 <= 122 goto label7;

     label5:
        if c3 < 48 goto label6;

        if c3 <= 57 goto label7;

     label6:
        if c3 == 46 goto label7;

        if c3 == 95 goto label7;

        if c3 == 45 goto label7;

        return 0;

     label7:
        i2 = i2 + 1;

        goto label3;

     label8:
        return 1;

     label9:
        return 0;
    }

    public static boolean isValidJavaEncoding(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1;
        char c2;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label7;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 0 goto label7;

        i1 = 1;

     label1:
        if i1 >= i0 goto label6;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if c2 < 65 goto label2;

        if c2 <= 90 goto label5;

     label2:
        if c2 < 97 goto label3;

        if c2 <= 122 goto label5;

     label3:
        if c2 < 48 goto label4;

        if c2 <= 57 goto label5;

     label4:
        if c2 == 46 goto label5;

        if c2 == 95 goto label5;

        if c2 == 45 goto label5;

        return 0;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return 1;

     label7:
        return 0;
    }

    public static boolean isValidQName(java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i0 != $i2 goto label2;

     label1:
        return 0;

     label2:
        if i0 <= 0 goto label5;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i3 = i0 + 1;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r2);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r0);

        return $z0;
    }

    static void <clinit>()
    {
        int[] r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i18, $i19, $i20, $i21, $i30, $i34, $i36, $i37, $i38, $i39, $i49, $i50, $i51, $i54, $i60, $i61, $i66, $i69, $i70, $i74, $i80, $i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99;
        byte[] $r15, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44;
        byte $b14, $b16, $b22, $b23, $b24, $b25, $b26, $b27, $b29, $b31, $b33, $b35, $b40, $b41, $b43, $b44, $b45, $b47, $b52, $b53, $b56, $b58, $b59, $b63, $b64, $b65, $b67, $b71, $b72, $b73, $b75, $b76, $b77, $b78, $b79;
        short $s17, $s28, $s32, $s42, $s46, $s48, $s55, $s57, $s62, $s68;

        <org.apache.xml.utils.XMLChar: int MASK_NCNAME> = 128;

        <org.apache.xml.utils.XMLChar: int MASK_NCNAME_START> = 64;

        <org.apache.xml.utils.XMLChar: int MASK_CONTENT> = 32;

        <org.apache.xml.utils.XMLChar: int MASK_PUBID> = 16;

        <org.apache.xml.utils.XMLChar: int MASK_NAME> = 8;

        <org.apache.xml.utils.XMLChar: int MASK_NAME_START> = 4;

        <org.apache.xml.utils.XMLChar: int MASK_SPACE> = 2;

        <org.apache.xml.utils.XMLChar: int MASK_VALID> = 1;

        $r15 = newarray (byte)[65536];

        <org.apache.xml.utils.XMLChar: byte[] CHARS> = $r15;

        $r14 = newarray (int)[8];

        $r14[0] = 9;

        $r14[1] = 10;

        $r14[2] = 13;

        $r14[3] = 13;

        $r14[4] = 32;

        $r14[5] = 55295;

        $r14[6] = 57344;

        $r14[7] = 65533;

        r0 = $r14;

        $r17 = newarray (int)[4];

        $r17[0] = 32;

        $r17[1] = 9;

        $r17[2] = 13;

        $r17[3] = 10;

        r1 = $r17;

        $r16 = newarray (int)[2];

        $r16[0] = 45;

        $r16[1] = 46;

        r2 = $r16;

        $r19 = newarray (int)[2];

        $r19[0] = 58;

        $r19[1] = 95;

        r3 = $r19;

        $r18 = newarray (int)[9];

        $r18[0] = 10;

        $r18[1] = 13;

        $r18[2] = 32;

        $r18[3] = 33;

        $r18[4] = 35;

        $r18[5] = 36;

        $r18[6] = 37;

        $r18[7] = 61;

        $r18[8] = 95;

        r4 = $r18;

        $r21 = newarray (int)[6];

        $r21[0] = 39;

        $r21[1] = 59;

        $r21[2] = 63;

        $r21[3] = 90;

        $r21[4] = 97;

        $r21[5] = 122;

        r5 = $r21;

        $r20 = newarray (int)[302];

        $r20[0] = 65;

        $r20[1] = 90;

        $r20[2] = 97;

        $r20[3] = 122;

        $r20[4] = 192;

        $r20[5] = 214;

        $r20[6] = 216;

        $r20[7] = 246;

        $r20[8] = 248;

        $r20[9] = 305;

        $r20[10] = 308;

        $r20[11] = 318;

        $r20[12] = 321;

        $r20[13] = 328;

        $r20[14] = 330;

        $r20[15] = 382;

        $r20[16] = 384;

        $r20[17] = 451;

        $r20[18] = 461;

        $r20[19] = 496;

        $r20[20] = 500;

        $r20[21] = 501;

        $r20[22] = 506;

        $r20[23] = 535;

        $r20[24] = 592;

        $r20[25] = 680;

        $r20[26] = 699;

        $r20[27] = 705;

        $r20[28] = 904;

        $r20[29] = 906;

        $r20[30] = 910;

        $r20[31] = 929;

        $r20[32] = 931;

        $r20[33] = 974;

        $r20[34] = 976;

        $r20[35] = 982;

        $r20[36] = 994;

        $r20[37] = 1011;

        $r20[38] = 1025;

        $r20[39] = 1036;

        $r20[40] = 1038;

        $r20[41] = 1103;

        $r20[42] = 1105;

        $r20[43] = 1116;

        $r20[44] = 1118;

        $r20[45] = 1153;

        $r20[46] = 1168;

        $r20[47] = 1220;

        $r20[48] = 1223;

        $r20[49] = 1224;

        $r20[50] = 1227;

        $r20[51] = 1228;

        $r20[52] = 1232;

        $r20[53] = 1259;

        $r20[54] = 1262;

        $r20[55] = 1269;

        $r20[56] = 1272;

        $r20[57] = 1273;

        $r20[58] = 1329;

        $r20[59] = 1366;

        $r20[60] = 1377;

        $r20[61] = 1414;

        $r20[62] = 1488;

        $r20[63] = 1514;

        $r20[64] = 1520;

        $r20[65] = 1522;

        $r20[66] = 1569;

        $r20[67] = 1594;

        $r20[68] = 1601;

        $r20[69] = 1610;

        $r20[70] = 1649;

        $r20[71] = 1719;

        $r20[72] = 1722;

        $r20[73] = 1726;

        $r20[74] = 1728;

        $r20[75] = 1742;

        $r20[76] = 1744;

        $r20[77] = 1747;

        $r20[78] = 1765;

        $r20[79] = 1766;

        $r20[80] = 2309;

        $r20[81] = 2361;

        $r20[82] = 2392;

        $r20[83] = 2401;

        $r20[84] = 2437;

        $r20[85] = 2444;

        $r20[86] = 2447;

        $r20[87] = 2448;

        $r20[88] = 2451;

        $r20[89] = 2472;

        $r20[90] = 2474;

        $r20[91] = 2480;

        $r20[92] = 2486;

        $r20[93] = 2489;

        $r20[94] = 2524;

        $r20[95] = 2525;

        $r20[96] = 2527;

        $r20[97] = 2529;

        $r20[98] = 2544;

        $r20[99] = 2545;

        $r20[100] = 2565;

        $r20[101] = 2570;

        $r20[102] = 2575;

        $r20[103] = 2576;

        $r20[104] = 2579;

        $r20[105] = 2600;

        $r20[106] = 2602;

        $r20[107] = 2608;

        $r20[108] = 2610;

        $r20[109] = 2611;

        $r20[110] = 2613;

        $r20[111] = 2614;

        $r20[112] = 2616;

        $r20[113] = 2617;

        $r20[114] = 2649;

        $r20[115] = 2652;

        $r20[116] = 2674;

        $r20[117] = 2676;

        $r20[118] = 2693;

        $r20[119] = 2699;

        $r20[120] = 2703;

        $r20[121] = 2705;

        $r20[122] = 2707;

        $r20[123] = 2728;

        $r20[124] = 2730;

        $r20[125] = 2736;

        $r20[126] = 2738;

        $r20[127] = 2739;

        $r20[128] = 2741;

        $r20[129] = 2745;

        $r20[130] = 2821;

        $r20[131] = 2828;

        $r20[132] = 2831;

        $r20[133] = 2832;

        $r20[134] = 2835;

        $r20[135] = 2856;

        $r20[136] = 2858;

        $r20[137] = 2864;

        $r20[138] = 2866;

        $r20[139] = 2867;

        $r20[140] = 2870;

        $r20[141] = 2873;

        $r20[142] = 2908;

        $r20[143] = 2909;

        $r20[144] = 2911;

        $r20[145] = 2913;

        $r20[146] = 2949;

        $r20[147] = 2954;

        $r20[148] = 2958;

        $r20[149] = 2960;

        $r20[150] = 2962;

        $r20[151] = 2965;

        $r20[152] = 2969;

        $r20[153] = 2970;

        $r20[154] = 2974;

        $r20[155] = 2975;

        $r20[156] = 2979;

        $r20[157] = 2980;

        $r20[158] = 2984;

        $r20[159] = 2986;

        $r20[160] = 2990;

        $r20[161] = 2997;

        $r20[162] = 2999;

        $r20[163] = 3001;

        $r20[164] = 3077;

        $r20[165] = 3084;

        $r20[166] = 3086;

        $r20[167] = 3088;

        $r20[168] = 3090;

        $r20[169] = 3112;

        $r20[170] = 3114;

        $r20[171] = 3123;

        $r20[172] = 3125;

        $r20[173] = 3129;

        $r20[174] = 3168;

        $r20[175] = 3169;

        $r20[176] = 3205;

        $r20[177] = 3212;

        $r20[178] = 3214;

        $r20[179] = 3216;

        $r20[180] = 3218;

        $r20[181] = 3240;

        $r20[182] = 3242;

        $r20[183] = 3251;

        $r20[184] = 3253;

        $r20[185] = 3257;

        $r20[186] = 3296;

        $r20[187] = 3297;

        $r20[188] = 3333;

        $r20[189] = 3340;

        $r20[190] = 3342;

        $r20[191] = 3344;

        $r20[192] = 3346;

        $r20[193] = 3368;

        $r20[194] = 3370;

        $r20[195] = 3385;

        $r20[196] = 3424;

        $r20[197] = 3425;

        $r20[198] = 3585;

        $r20[199] = 3630;

        $r20[200] = 3634;

        $r20[201] = 3635;

        $r20[202] = 3648;

        $r20[203] = 3653;

        $r20[204] = 3713;

        $r20[205] = 3714;

        $r20[206] = 3719;

        $r20[207] = 3720;

        $r20[208] = 3732;

        $r20[209] = 3735;

        $r20[210] = 3737;

        $r20[211] = 3743;

        $r20[212] = 3745;

        $r20[213] = 3747;

        $r20[214] = 3754;

        $r20[215] = 3755;

        $r20[216] = 3757;

        $r20[217] = 3758;

        $r20[218] = 3762;

        $r20[219] = 3763;

        $r20[220] = 3776;

        $r20[221] = 3780;

        $r20[222] = 3904;

        $r20[223] = 3911;

        $r20[224] = 3913;

        $r20[225] = 3945;

        $r20[226] = 4256;

        $r20[227] = 4293;

        $r20[228] = 4304;

        $r20[229] = 4342;

        $r20[230] = 4354;

        $r20[231] = 4355;

        $r20[232] = 4357;

        $r20[233] = 4359;

        $r20[234] = 4363;

        $r20[235] = 4364;

        $r20[236] = 4366;

        $r20[237] = 4370;

        $r20[238] = 4436;

        $r20[239] = 4437;

        $r20[240] = 4447;

        $r20[241] = 4449;

        $r20[242] = 4461;

        $r20[243] = 4462;

        $r20[244] = 4466;

        $r20[245] = 4467;

        $r20[246] = 4526;

        $r20[247] = 4527;

        $r20[248] = 4535;

        $r20[249] = 4536;

        $r20[250] = 4540;

        $r20[251] = 4546;

        $r20[252] = 7680;

        $r20[253] = 7835;

        $r20[254] = 7840;

        $r20[255] = 7929;

        $r20[256] = 7936;

        $r20[257] = 7957;

        $r20[258] = 7960;

        $r20[259] = 7965;

        $r20[260] = 7968;

        $r20[261] = 8005;

        $r20[262] = 8008;

        $r20[263] = 8013;

        $r20[264] = 8016;

        $r20[265] = 8023;

        $r20[266] = 8031;

        $r20[267] = 8061;

        $r20[268] = 8064;

        $r20[269] = 8116;

        $r20[270] = 8118;

        $r20[271] = 8124;

        $r20[272] = 8130;

        $r20[273] = 8132;

        $r20[274] = 8134;

        $r20[275] = 8140;

        $r20[276] = 8144;

        $r20[277] = 8147;

        $r20[278] = 8150;

        $r20[279] = 8155;

        $r20[280] = 8160;

        $r20[281] = 8172;

        $r20[282] = 8178;

        $r20[283] = 8180;

        $r20[284] = 8182;

        $r20[285] = 8188;

        $r20[286] = 8490;

        $r20[287] = 8491;

        $r20[288] = 8576;

        $r20[289] = 8578;

        $r20[290] = 12353;

        $r20[291] = 12436;

        $r20[292] = 12449;

        $r20[293] = 12538;

        $r20[294] = 12549;

        $r20[295] = 12588;

        $r20[296] = 44032;

        $r20[297] = 55203;

        $r20[298] = 12321;

        $r20[299] = 12329;

        $r20[300] = 19968;

        $r20[301] = 40869;

        r6 = $r20;

        $r23 = newarray (int)[53];

        $r23[0] = 902;

        $r23[1] = 908;

        $r23[2] = 986;

        $r23[3] = 988;

        $r23[4] = 990;

        $r23[5] = 992;

        $r23[6] = 1369;

        $r23[7] = 1749;

        $r23[8] = 2365;

        $r23[9] = 2482;

        $r23[10] = 2654;

        $r23[11] = 2701;

        $r23[12] = 2749;

        $r23[13] = 2784;

        $r23[14] = 2877;

        $r23[15] = 2972;

        $r23[16] = 3294;

        $r23[17] = 3632;

        $r23[18] = 3716;

        $r23[19] = 3722;

        $r23[20] = 3725;

        $r23[21] = 3749;

        $r23[22] = 3751;

        $r23[23] = 3760;

        $r23[24] = 3773;

        $r23[25] = 4352;

        $r23[26] = 4361;

        $r23[27] = 4412;

        $r23[28] = 4414;

        $r23[29] = 4416;

        $r23[30] = 4428;

        $r23[31] = 4430;

        $r23[32] = 4432;

        $r23[33] = 4441;

        $r23[34] = 4451;

        $r23[35] = 4453;

        $r23[36] = 4455;

        $r23[37] = 4457;

        $r23[38] = 4469;

        $r23[39] = 4510;

        $r23[40] = 4520;

        $r23[41] = 4523;

        $r23[42] = 4538;

        $r23[43] = 4587;

        $r23[44] = 4592;

        $r23[45] = 4601;

        $r23[46] = 8025;

        $r23[47] = 8027;

        $r23[48] = 8029;

        $r23[49] = 8126;

        $r23[50] = 8486;

        $r23[51] = 8494;

        $r23[52] = 12295;

        r7 = $r23;

        $r22 = newarray (int)[132];

        $r22[0] = 768;

        $r22[1] = 837;

        $r22[2] = 864;

        $r22[3] = 865;

        $r22[4] = 1155;

        $r22[5] = 1158;

        $r22[6] = 1425;

        $r22[7] = 1441;

        $r22[8] = 1443;

        $r22[9] = 1465;

        $r22[10] = 1467;

        $r22[11] = 1469;

        $r22[12] = 1473;

        $r22[13] = 1474;

        $r22[14] = 1611;

        $r22[15] = 1618;

        $r22[16] = 1750;

        $r22[17] = 1756;

        $r22[18] = 1757;

        $r22[19] = 1759;

        $r22[20] = 1760;

        $r22[21] = 1764;

        $r22[22] = 1767;

        $r22[23] = 1768;

        $r22[24] = 1770;

        $r22[25] = 1773;

        $r22[26] = 2305;

        $r22[27] = 2307;

        $r22[28] = 2366;

        $r22[29] = 2380;

        $r22[30] = 2385;

        $r22[31] = 2388;

        $r22[32] = 2402;

        $r22[33] = 2403;

        $r22[34] = 2433;

        $r22[35] = 2435;

        $r22[36] = 2496;

        $r22[37] = 2500;

        $r22[38] = 2503;

        $r22[39] = 2504;

        $r22[40] = 2507;

        $r22[41] = 2509;

        $r22[42] = 2530;

        $r22[43] = 2531;

        $r22[44] = 2624;

        $r22[45] = 2626;

        $r22[46] = 2631;

        $r22[47] = 2632;

        $r22[48] = 2635;

        $r22[49] = 2637;

        $r22[50] = 2672;

        $r22[51] = 2673;

        $r22[52] = 2689;

        $r22[53] = 2691;

        $r22[54] = 2750;

        $r22[55] = 2757;

        $r22[56] = 2759;

        $r22[57] = 2761;

        $r22[58] = 2763;

        $r22[59] = 2765;

        $r22[60] = 2817;

        $r22[61] = 2819;

        $r22[62] = 2878;

        $r22[63] = 2883;

        $r22[64] = 2887;

        $r22[65] = 2888;

        $r22[66] = 2891;

        $r22[67] = 2893;

        $r22[68] = 2902;

        $r22[69] = 2903;

        $r22[70] = 2946;

        $r22[71] = 2947;

        $r22[72] = 3006;

        $r22[73] = 3010;

        $r22[74] = 3014;

        $r22[75] = 3016;

        $r22[76] = 3018;

        $r22[77] = 3021;

        $r22[78] = 3073;

        $r22[79] = 3075;

        $r22[80] = 3134;

        $r22[81] = 3140;

        $r22[82] = 3142;

        $r22[83] = 3144;

        $r22[84] = 3146;

        $r22[85] = 3149;

        $r22[86] = 3157;

        $r22[87] = 3158;

        $r22[88] = 3202;

        $r22[89] = 3203;

        $r22[90] = 3262;

        $r22[91] = 3268;

        $r22[92] = 3270;

        $r22[93] = 3272;

        $r22[94] = 3274;

        $r22[95] = 3277;

        $r22[96] = 3285;

        $r22[97] = 3286;

        $r22[98] = 3330;

        $r22[99] = 3331;

        $r22[100] = 3390;

        $r22[101] = 3395;

        $r22[102] = 3398;

        $r22[103] = 3400;

        $r22[104] = 3402;

        $r22[105] = 3405;

        $r22[106] = 3636;

        $r22[107] = 3642;

        $r22[108] = 3655;

        $r22[109] = 3662;

        $r22[110] = 3764;

        $r22[111] = 3769;

        $r22[112] = 3771;

        $r22[113] = 3772;

        $r22[114] = 3784;

        $r22[115] = 3789;

        $r22[116] = 3864;

        $r22[117] = 3865;

        $r22[118] = 3953;

        $r22[119] = 3972;

        $r22[120] = 3974;

        $r22[121] = 3979;

        $r22[122] = 3984;

        $r22[123] = 3989;

        $r22[124] = 3993;

        $r22[125] = 4013;

        $r22[126] = 4017;

        $r22[127] = 4023;

        $r22[128] = 8400;

        $r22[129] = 8412;

        $r22[130] = 12330;

        $r22[131] = 12335;

        r8 = $r22;

        $r25 = newarray (int)[29];

        $r25[0] = 1471;

        $r25[1] = 1476;

        $r25[2] = 1648;

        $r25[3] = 2364;

        $r25[4] = 2381;

        $r25[5] = 2492;

        $r25[6] = 2494;

        $r25[7] = 2495;

        $r25[8] = 2519;

        $r25[9] = 2562;

        $r25[10] = 2620;

        $r25[11] = 2622;

        $r25[12] = 2623;

        $r25[13] = 2748;

        $r25[14] = 2876;

        $r25[15] = 3031;

        $r25[16] = 3415;

        $r25[17] = 3633;

        $r25[18] = 3761;

        $r25[19] = 3893;

        $r25[20] = 3895;

        $r25[21] = 3897;

        $r25[22] = 3902;

        $r25[23] = 3903;

        $r25[24] = 3991;

        $r25[25] = 4025;

        $r25[26] = 8417;

        $r25[27] = 12441;

        $r25[28] = 12442;

        r9 = $r25;

        $r24 = newarray (int)[30];

        $r24[0] = 48;

        $r24[1] = 57;

        $r24[2] = 1632;

        $r24[3] = 1641;

        $r24[4] = 1776;

        $r24[5] = 1785;

        $r24[6] = 2406;

        $r24[7] = 2415;

        $r24[8] = 2534;

        $r24[9] = 2543;

        $r24[10] = 2662;

        $r24[11] = 2671;

        $r24[12] = 2790;

        $r24[13] = 2799;

        $r24[14] = 2918;

        $r24[15] = 2927;

        $r24[16] = 3047;

        $r24[17] = 3055;

        $r24[18] = 3174;

        $r24[19] = 3183;

        $r24[20] = 3302;

        $r24[21] = 3311;

        $r24[22] = 3430;

        $r24[23] = 3439;

        $r24[24] = 3664;

        $r24[25] = 3673;

        $r24[26] = 3792;

        $r24[27] = 3801;

        $r24[28] = 3872;

        $r24[29] = 3881;

        r10 = $r24;

        $r27 = newarray (int)[6];

        $r27[0] = 12337;

        $r27[1] = 12341;

        $r27[2] = 12445;

        $r27[3] = 12446;

        $r27[4] = 12540;

        $r27[5] = 12542;

        r11 = $r27;

        $r26 = newarray (int)[8];

        $r26[0] = 183;

        $r26[1] = 720;

        $r26[2] = 721;

        $r26[3] = 903;

        $r26[4] = 1600;

        $r26[5] = 3654;

        $r26[6] = 3782;

        $r26[7] = 12293;

        r12 = $r26;

        $r28 = newarray (int)[5];

        $r28[0] = 60;

        $r28[1] = 38;

        $r28[2] = 10;

        $r28[3] = 13;

        $r28[4] = 93;

        r13 = $r28;

        i0 = 0;

     label01:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label04;

        i1 = r0[i0];

     label02:
        $i81 = i0 + 1;

        $i80 = r0[$i81];

        if i1 > $i80 goto label03;

        $r43 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b79 = $r43[i1];

        $b78 = $b79 | 33;

        $b77 = (byte) $b78;

        $r43[i1] = $b77;

        i1 = i1 + 1;

        goto label02;

     label03:
        i0 = i0 + 2;

        goto label01;

     label04:
        i82 = 0;

     label05:
        $i5 = lengthof r13;

        if i82 >= $i5 goto label06;

        $r44 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i70 = r13[i82];

        $r42 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i74 = r13[i82];

        $b73 = $r42[$i74];

        $b72 = $b73 & -33;

        $b71 = (byte) $b72;

        $r44[$i70] = $b71;

        i82 = i82 + 1;

        goto label05;

     label06:
        i83 = 0;

     label07:
        $i6 = lengthof r1;

        if i83 >= $i6 goto label08;

        $r40 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i66 = r1[i83];

        $b64 = $r40[$i66];

        $b76 = $b64 | 2;

        $b75 = (byte) $b76;

        $r40[$i66] = $b75;

        i83 = i83 + 1;

        goto label07;

     label08:
        i84 = 0;

     label09:
        $i3 = lengthof r3;

        if i84 >= $i3 goto label10;

        $r41 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i69 = r3[i84];

        $b67 = $r41[$i69];

        $s68 = $b67 | 204;

        $b65 = (byte) $s68;

        $r41[$i69] = $b65;

        i84 = i84 + 1;

        goto label09;

     label10:
        i85 = 0;

     label11:
        $i4 = lengthof r6;

        if i85 >= $i4 goto label14;

        i86 = r6[i85];

     label12:
        $i60 = i85 + 1;

        $i61 = r6[$i60];

        if i86 > $i61 goto label13;

        $r39 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b59 = $r39[i86];

        $s57 = $b59 | 204;

        $b58 = (byte) $s57;

        $r39[i86] = $b58;

        i86 = i86 + 1;

        goto label12;

     label13:
        i85 = i85 + 2;

        goto label11;

     label14:
        i87 = 0;

     label15:
        $i9 = lengthof r7;

        if i87 >= $i9 goto label16;

        $r37 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i51 = r7[i87];

        $b53 = $r37[$i51];

        $s62 = $b53 | 204;

        $b63 = (byte) $s62;

        $r37[$i51] = $b63;

        i87 = i87 + 1;

        goto label15;

     label16:
        i88 = 0;

     label17:
        $i10 = lengthof r2;

        if i88 >= $i10 goto label18;

        $r38 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i54 = r2[i88];

        $b56 = $r38[$i54];

        $s55 = $b56 | 136;

        $b52 = (byte) $s55;

        $r38[$i54] = $b52;

        i88 = i88 + 1;

        goto label17;

     label18:
        i89 = 0;

     label19:
        $i7 = lengthof r10;

        if i89 >= $i7 goto label22;

        i90 = r10[i89];

     label20:
        $i50 = i89 + 1;

        $i49 = r10[$i50];

        if i90 > $i49 goto label21;

        $r36 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b44 = $r36[i90];

        $s46 = $b44 | 136;

        $b45 = (byte) $s46;

        $r36[i90] = $b45;

        i90 = i90 + 1;

        goto label20;

     label21:
        i89 = i89 + 2;

        goto label19;

     label22:
        i91 = 0;

     label23:
        $i8 = lengthof r8;

        if i91 >= $i8 goto label26;

        i92 = r8[i91];

     label24:
        $i38 = i91 + 1;

        $i39 = r8[$i38];

        if i92 > $i39 goto label25;

        $r34 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b40 = $r34[i92];

        $s48 = $b40 | 136;

        $b47 = (byte) $s48;

        $r34[i92] = $b47;

        i92 = i92 + 1;

        goto label24;

     label25:
        i91 = i91 + 2;

        goto label23;

     label26:
        i93 = 0;

     label27:
        $i12 = lengthof r9;

        if i93 >= $i12 goto label28;

        $r35 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i34 = r9[i93];

        $b41 = $r35[$i34];

        $s42 = $b41 | 136;

        $b43 = (byte) $s42;

        $r35[$i34] = $b43;

        i93 = i93 + 1;

        goto label27;

     label28:
        i94 = 0;

     label29:
        $i13 = lengthof r11;

        if i94 >= $i13 goto label32;

        i95 = r11[i94];

     label30:
        $i36 = i94 + 1;

        $i37 = r11[$i36];

        if i95 > $i37 goto label31;

        $r33 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b31 = $r33[i95];

        $s32 = $b31 | 136;

        $b33 = (byte) $s32;

        $r33[i95] = $b33;

        i95 = i95 + 1;

        goto label30;

     label31:
        i94 = i94 + 2;

        goto label29;

     label32:
        i96 = 0;

     label33:
        $i11 = lengthof r12;

        if i96 >= $i11 goto label34;

        $r32 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i30 = r12[i96];

        $b29 = $r32[$i30];

        $s28 = $b29 | 136;

        $b35 = (byte) $s28;

        $r32[$i30] = $b35;

        i96 = i96 + 1;

        goto label33;

     label34:
        $r29 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b16 = $r29[58];

        $s17 = $b16 & -193;

        $b14 = (byte) $s17;

        $r29[58] = $b14;

        i97 = 0;

     label35:
        $i15 = lengthof r4;

        if i97 >= $i15 goto label36;

        $r31 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i21 = r4[i97];

        $b27 = $r31[$i21];

        $b26 = $b27 | 16;

        $b25 = (byte) $b26;

        $r31[$i21] = $b25;

        i97 = i97 + 1;

        goto label35;

     label36:
        i98 = 0;

     label37:
        $i20 = lengthof r5;

        if i98 >= $i20 goto label40;

        i99 = r5[i98];

     label38:
        $i19 = i98 + 1;

        $i18 = r5[$i19];

        if i99 > $i18 goto label39;

        $r30 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b24 = $r30[i99];

        $b23 = $b24 | 16;

        $b22 = (byte) $b23;

        $r30[i99] = $b22;

        i99 = i99 + 1;

        goto label38;

     label39:
        i98 = i98 + 2;

        goto label37;

     label40:
        return;
    }
}
