public class org.apache.xml.res.XMLErrorResources extends java.util.ListResourceBundle
{
    public static final java.lang.String ER_FUNCTION_NOT_SUPPORTED;
    public static final java.lang.String ER_CANNOT_OVERWRITE_CAUSE;
    public static final java.lang.String ER_NO_DEFAULT_IMPL;
    public static final java.lang.String ER_CHUNKEDINTARRAY_NOT_SUPPORTED;
    public static final java.lang.String ER_OFFSET_BIGGER_THAN_SLOT;
    public static final java.lang.String ER_COROUTINE_NOT_AVAIL;
    public static final java.lang.String ER_COROUTINE_CO_EXIT;
    public static final java.lang.String ER_COJOINROUTINESET_FAILED;
    public static final java.lang.String ER_COROUTINE_PARAM;
    public static final java.lang.String ER_PARSER_DOTERMINATE_ANSWERS;
    public static final java.lang.String ER_NO_PARSE_CALL_WHILE_PARSING;
    public static final java.lang.String ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED;
    public static final java.lang.String ER_ITERATOR_AXIS_NOT_IMPLEMENTED;
    public static final java.lang.String ER_ITERATOR_CLONE_NOT_SUPPORTED;
    public static final java.lang.String ER_UNKNOWN_AXIS_TYPE;
    public static final java.lang.String ER_AXIS_NOT_SUPPORTED;
    public static final java.lang.String ER_NO_DTMIDS_AVAIL;
    public static final java.lang.String ER_NOT_SUPPORTED;
    public static final java.lang.String ER_NODE_NON_NULL;
    public static final java.lang.String ER_COULD_NOT_RESOLVE_NODE;
    public static final java.lang.String ER_STARTPARSE_WHILE_PARSING;
    public static final java.lang.String ER_STARTPARSE_NEEDS_SAXPARSER;
    public static final java.lang.String ER_COULD_NOT_INIT_PARSER;
    public static final java.lang.String ER_EXCEPTION_CREATING_POOL;
    public static final java.lang.String ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE;
    public static final java.lang.String ER_SCHEME_REQUIRED;
    public static final java.lang.String ER_NO_SCHEME_IN_URI;
    public static final java.lang.String ER_NO_SCHEME_INURI;
    public static final java.lang.String ER_PATH_INVALID_CHAR;
    public static final java.lang.String ER_SCHEME_FROM_NULL_STRING;
    public static final java.lang.String ER_SCHEME_NOT_CONFORMANT;
    public static final java.lang.String ER_HOST_ADDRESS_NOT_WELLFORMED;
    public static final java.lang.String ER_PORT_WHEN_HOST_NULL;
    public static final java.lang.String ER_INVALID_PORT;
    public static final java.lang.String ER_FRAG_FOR_GENERIC_URI;
    public static final java.lang.String ER_FRAG_WHEN_PATH_NULL;
    public static final java.lang.String ER_FRAG_INVALID_CHAR;
    public static final java.lang.String ER_PARSER_IN_USE;
    public static final java.lang.String ER_CANNOT_CHANGE_WHILE_PARSING;
    public static final java.lang.String ER_SELF_CAUSATION_NOT_PERMITTED;
    public static final java.lang.String ER_NO_USERINFO_IF_NO_HOST;
    public static final java.lang.String ER_NO_PORT_IF_NO_HOST;
    public static final java.lang.String ER_NO_QUERY_STRING_IN_PATH;
    public static final java.lang.String ER_NO_FRAGMENT_STRING_IN_PATH;
    public static final java.lang.String ER_CANNOT_INIT_URI_EMPTY_PARMS;
    public static final java.lang.String ER_METHOD_NOT_SUPPORTED;
    public static final java.lang.String ER_INCRSAXSRCFILTER_NOT_RESTARTABLE;
    public static final java.lang.String ER_XMLRDR_NOT_BEFORE_STARTPARSE;
    public static final java.lang.String ER_AXIS_TRAVERSER_NOT_SUPPORTED;
    public static final java.lang.String ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER;
    public static final java.lang.String ER_SYSTEMID_UNKNOWN;
    public static final java.lang.String ER_LOCATION_UNKNOWN;
    public static final java.lang.String ER_PREFIX_MUST_RESOLVE;
    public static final java.lang.String ER_CREATEDOCUMENT_NOT_SUPPORTED;
    public static final java.lang.String ER_CHILD_HAS_NO_OWNER_DOCUMENT;
    public static final java.lang.String ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT;
    public static final java.lang.String ER_CANT_OUTPUT_TEXT_BEFORE_DOC;
    public static final java.lang.String ER_CANT_HAVE_MORE_THAN_ONE_ROOT;
    public static final java.lang.String ER_ARG_LOCALNAME_NULL;
    public static final java.lang.String ER_ARG_LOCALNAME_INVALID;
    public static final java.lang.String ER_ARG_PREFIX_INVALID;
    public static final java.lang.String ER_NAME_CANT_START_WITH_COLON;

    public void <init>()
    {
        org.apache.xml.res.XMLErrorResources r0;

        r0 := @this: org.apache.xml.res.XMLErrorResources;

        specialinvoke r0.<java.util.ListResourceBundle: void <init>()>();

        return;
    }

    public java.lang.Object[][] getContents()
    {
        org.apache.xml.res.XMLErrorResources r0;
        java.lang.Object[][] $r1;
        java.lang.Object[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68;

        r0 := @this: org.apache.xml.res.XMLErrorResources;

        $r1 = newarray (java.lang.Object[])[67];

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "ER0000";

        $r2[1] = "{0}";

        $r1[0] = $r2;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "ER_FUNCTION_NOT_SUPPORTED";

        $r3[1] = "Function not supported!";

        $r1[1] = $r3;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "ER_CANNOT_OVERWRITE_CAUSE";

        $r4[1] = "Cannot overwrite cause";

        $r1[2] = $r4;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = "ER_NO_DEFAULT_IMPL";

        $r5[1] = "No default implementation found ";

        $r1[3] = $r5;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "ER_CHUNKEDINTARRAY_NOT_SUPPORTED";

        $r6[1] = "ChunkedIntArray({0}) not currently supported";

        $r1[4] = $r6;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "ER_OFFSET_BIGGER_THAN_SLOT";

        $r7[1] = "Offset bigger than slot";

        $r1[5] = $r7;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "ER_COROUTINE_NOT_AVAIL";

        $r8[1] = "Coroutine not available, id={0}";

        $r1[6] = $r8;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "ER_COROUTINE_CO_EXIT";

        $r9[1] = "CoroutineManager received co_exit() request";

        $r1[7] = $r9;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = "ER_COJOINROUTINESET_FAILED";

        $r10[1] = "co_joinCoroutineSet() failed";

        $r1[8] = $r10;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "ER_COROUTINE_PARAM";

        $r11[1] = "Coroutine parameter error ({0})";

        $r1[9] = $r11;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = "ER_PARSER_DOTERMINATE_ANSWERS";

        $r12[1] = "\nUNEXPECTED: Parser doTerminate answers {0}";

        $r1[10] = $r12;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = "ER_NO_PARSE_CALL_WHILE_PARSING";

        $r13[1] = "parse may not be called while parsing";

        $r1[11] = $r13;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED";

        $r14[1] = "Error: typed iterator for axis  {0} not implemented";

        $r1[12] = $r14;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "ER_ITERATOR_AXIS_NOT_IMPLEMENTED";

        $r15[1] = "Error: iterator for axis {0} not implemented ";

        $r1[13] = $r15;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = "ER_ITERATOR_CLONE_NOT_SUPPORTED";

        $r17[1] = "Iterator clone not supported";

        $r1[14] = $r17;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = "ER_UNKNOWN_AXIS_TYPE";

        $r16[1] = "Unknown axis traversal type: {0}";

        $r1[15] = $r16;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = "ER_AXIS_NOT_SUPPORTED";

        $r19[1] = "Axis traverser not supported: {0}";

        $r1[16] = $r19;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = "ER_NO_DTMIDS_AVAIL";

        $r18[1] = "No more DTM IDs are available";

        $r1[17] = $r18;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = "ER_NOT_SUPPORTED";

        $r21[1] = "Not supported: {0}";

        $r1[18] = $r21;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = "ER_NODE_NON_NULL";

        $r20[1] = "Node must be non-null for getDTMHandleFromNode";

        $r1[19] = $r20;

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = "ER_COULD_NOT_RESOLVE_NODE";

        $r23[1] = "Could not resolve the node to a handle";

        $r1[20] = $r23;

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = "ER_STARTPARSE_WHILE_PARSING";

        $r22[1] = "startParse may not be called while parsing";

        $r1[21] = $r22;

        $r25 = newarray (java.lang.Object)[2];

        $r25[0] = "ER_STARTPARSE_NEEDS_SAXPARSER";

        $r25[1] = "startParse needs a non-null SAXParser";

        $r1[22] = $r25;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = "ER_COULD_NOT_INIT_PARSER";

        $r24[1] = "could not initialize parser with";

        $r1[23] = $r24;

        $r27 = newarray (java.lang.Object)[2];

        $r27[0] = "ER_EXCEPTION_CREATING_POOL";

        $r27[1] = "exception creating new instance for pool";

        $r1[24] = $r27;

        $r26 = newarray (java.lang.Object)[2];

        $r26[0] = "ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE";

        $r26[1] = "Path contains invalid escape sequence";

        $r1[25] = $r26;

        $r29 = newarray (java.lang.Object)[2];

        $r29[0] = "ER_SCHEME_REQUIRED";

        $r29[1] = "Scheme is required!";

        $r1[26] = $r29;

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = "ER_NO_SCHEME_IN_URI";

        $r28[1] = "No scheme found in URI: {0}";

        $r1[27] = $r28;

        $r31 = newarray (java.lang.Object)[2];

        $r31[0] = "ER_NO_SCHEME_INURI";

        $r31[1] = "No scheme found in URI";

        $r1[28] = $r31;

        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = "ER_PATH_INVALID_CHAR";

        $r30[1] = "Path contains invalid character: {0}";

        $r1[29] = $r30;

        $r34 = newarray (java.lang.Object)[2];

        $r34[0] = "ER_SCHEME_FROM_NULL_STRING";

        $r34[1] = "Cannot set scheme from null string";

        $r1[30] = $r34;

        $r35 = newarray (java.lang.Object)[2];

        $r35[0] = "ER_SCHEME_NOT_CONFORMANT";

        $r35[1] = "The scheme is not conformant.";

        $r1[31] = $r35;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = "ER_HOST_ADDRESS_NOT_WELLFORMED";

        $r32[1] = "Host is not a well formed address";

        $r1[32] = $r32;

        $r33 = newarray (java.lang.Object)[2];

        $r33[0] = "ER_PORT_WHEN_HOST_NULL";

        $r33[1] = "Port cannot be set when host is null";

        $r1[33] = $r33;

        $r38 = newarray (java.lang.Object)[2];

        $r38[0] = "ER_INVALID_PORT";

        $r38[1] = "Invalid port number";

        $r1[34] = $r38;

        $r39 = newarray (java.lang.Object)[2];

        $r39[0] = "ER_FRAG_FOR_GENERIC_URI";

        $r39[1] = "Fragment can only be set for a generic URI";

        $r1[35] = $r39;

        $r36 = newarray (java.lang.Object)[2];

        $r36[0] = "ER_FRAG_WHEN_PATH_NULL";

        $r36[1] = "Fragment cannot be set when path is null";

        $r1[36] = $r36;

        $r37 = newarray (java.lang.Object)[2];

        $r37[0] = "ER_FRAG_INVALID_CHAR";

        $r37[1] = "Fragment contains invalid character";

        $r1[37] = $r37;

        $r42 = newarray (java.lang.Object)[2];

        $r42[0] = "ER_PARSER_IN_USE";

        $r42[1] = "Parser is already in use";

        $r1[38] = $r42;

        $r43 = newarray (java.lang.Object)[2];

        $r43[0] = "ER_CANNOT_CHANGE_WHILE_PARSING";

        $r43[1] = "Cannot change {0} {1} while parsing";

        $r1[39] = $r43;

        $r40 = newarray (java.lang.Object)[2];

        $r40[0] = "ER_SELF_CAUSATION_NOT_PERMITTED";

        $r40[1] = "Self-causation not permitted";

        $r1[40] = $r40;

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = "ER_NO_USERINFO_IF_NO_HOST";

        $r41[1] = "Userinfo may not be specified if host is not specified";

        $r1[41] = $r41;

        $r46 = newarray (java.lang.Object)[2];

        $r46[0] = "ER_NO_PORT_IF_NO_HOST";

        $r46[1] = "Port may not be specified if host is not specified";

        $r1[42] = $r46;

        $r47 = newarray (java.lang.Object)[2];

        $r47[0] = "ER_NO_QUERY_STRING_IN_PATH";

        $r47[1] = "Query string cannot be specified in path and query string";

        $r1[43] = $r47;

        $r44 = newarray (java.lang.Object)[2];

        $r44[0] = "ER_NO_FRAGMENT_STRING_IN_PATH";

        $r44[1] = "Fragment cannot be specified in both the path and fragment";

        $r1[44] = $r44;

        $r45 = newarray (java.lang.Object)[2];

        $r45[0] = "ER_CANNOT_INIT_URI_EMPTY_PARMS";

        $r45[1] = "Cannot initialize URI with empty parameters";

        $r1[45] = $r45;

        $r51 = newarray (java.lang.Object)[2];

        $r51[0] = "ER_METHOD_NOT_SUPPORTED";

        $r51[1] = "Method not yet supported ";

        $r1[46] = $r51;

        $r50 = newarray (java.lang.Object)[2];

        $r50[0] = "ER_INCRSAXSRCFILTER_NOT_RESTARTABLE";

        $r50[1] = "IncrementalSAXSource_Filter not currently restartable";

        $r1[47] = $r50;

        $r49 = newarray (java.lang.Object)[2];

        $r49[0] = "ER_XMLRDR_NOT_BEFORE_STARTPARSE";

        $r49[1] = "XMLReader not before startParse request";

        $r1[48] = $r49;

        $r48 = newarray (java.lang.Object)[2];

        $r48[0] = "ER_AXIS_TRAVERSER_NOT_SUPPORTED";

        $r48[1] = "Axis traverser not supported: {0}";

        $r1[49] = $r48;

        $r55 = newarray (java.lang.Object)[2];

        $r55[0] = "ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER";

        $r55[1] = "ListingErrorHandler created with null PrintWriter!";

        $r1[50] = $r55;

        $r54 = newarray (java.lang.Object)[2];

        $r54[0] = "ER_SYSTEMID_UNKNOWN";

        $r54[1] = "SystemId Unknown";

        $r1[51] = $r54;

        $r53 = newarray (java.lang.Object)[2];

        $r53[0] = "ER_LOCATION_UNKNOWN";

        $r53[1] = "Location of error unknown";

        $r1[52] = $r53;

        $r52 = newarray (java.lang.Object)[2];

        $r52[0] = "ER_PREFIX_MUST_RESOLVE";

        $r52[1] = "Prefix must resolve to a namespace: {0}";

        $r1[53] = $r52;

        $r59 = newarray (java.lang.Object)[2];

        $r59[0] = "ER_CREATEDOCUMENT_NOT_SUPPORTED";

        $r59[1] = "createDocument() not supported in XPathContext!";

        $r1[54] = $r59;

        $r58 = newarray (java.lang.Object)[2];

        $r58[0] = "ER_CHILD_HAS_NO_OWNER_DOCUMENT";

        $r58[1] = "Attribute child does not have an owner document!";

        $r1[55] = $r58;

        $r57 = newarray (java.lang.Object)[2];

        $r57[0] = "ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT";

        $r57[1] = "Attribute child does not have an owner document element!";

        $r1[56] = $r57;

        $r56 = newarray (java.lang.Object)[2];

        $r56[0] = "ER_CANT_OUTPUT_TEXT_BEFORE_DOC";

        $r56[1] = "Warning: can\'t output text before document element!  Ignoring...";

        $r1[57] = $r56;

        $r63 = newarray (java.lang.Object)[2];

        $r63[0] = "ER_CANT_HAVE_MORE_THAN_ONE_ROOT";

        $r63[1] = "Can\'t have more than one root on a DOM!";

        $r1[58] = $r63;

        $r62 = newarray (java.lang.Object)[2];

        $r62[0] = "ER_ARG_LOCALNAME_NULL";

        $r62[1] = "Argument \'localName\' is null";

        $r1[59] = $r62;

        $r61 = newarray (java.lang.Object)[2];

        $r61[0] = "ER_ARG_LOCALNAME_INVALID";

        $r61[1] = "Localname in QNAME should be a valid NCName";

        $r1[60] = $r61;

        $r60 = newarray (java.lang.Object)[2];

        $r60[0] = "ER_ARG_PREFIX_INVALID";

        $r60[1] = "Prefix in QNAME should be a valid NCName";

        $r1[61] = $r60;

        $r65 = newarray (java.lang.Object)[2];

        $r65[0] = "ER_NAME_CANT_START_WITH_COLON";

        $r65[1] = "Name cannot start with a colon";

        $r1[62] = $r65;

        $r66 = newarray (java.lang.Object)[2];

        $r66[0] = "BAD_CODE";

        $r66[1] = "Parameter to createMessage was out of bounds";

        $r1[63] = $r66;

        $r67 = newarray (java.lang.Object)[2];

        $r67[0] = "FORMAT_FAILED";

        $r67[1] = "Exception thrown during messageFormat call";

        $r1[64] = $r67;

        $r68 = newarray (java.lang.Object)[2];

        $r68[0] = "line";

        $r68[1] = "Line #";

        $r1[65] = $r68;

        $r64 = newarray (java.lang.Object)[2];

        $r64[0] = "column";

        $r64[1] = "Column #";

        $r1[66] = $r64;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NAME_CANT_START_WITH_COLON> = "ER_NAME_CANT_START_WITH_COLON";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_ARG_PREFIX_INVALID> = "ER_ARG_PREFIX_INVALID";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_ARG_LOCALNAME_INVALID> = "ER_ARG_LOCALNAME_INVALID";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_ARG_LOCALNAME_NULL> = "ER_ARG_LOCALNAME_NULL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CANT_HAVE_MORE_THAN_ONE_ROOT> = "ER_CANT_HAVE_MORE_THAN_ONE_ROOT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CANT_OUTPUT_TEXT_BEFORE_DOC> = "ER_CANT_OUTPUT_TEXT_BEFORE_DOC";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT> = "ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CHILD_HAS_NO_OWNER_DOCUMENT> = "ER_CHILD_HAS_NO_OWNER_DOCUMENT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CREATEDOCUMENT_NOT_SUPPORTED> = "ER_CREATEDOCUMENT_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_PREFIX_MUST_RESOLVE> = "ER_PREFIX_MUST_RESOLVE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_LOCATION_UNKNOWN> = "ER_LOCATION_UNKNOWN";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_SYSTEMID_UNKNOWN> = "ER_SYSTEMID_UNKNOWN";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER> = "ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_AXIS_TRAVERSER_NOT_SUPPORTED> = "ER_AXIS_TRAVERSER_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_XMLRDR_NOT_BEFORE_STARTPARSE> = "ER_XMLRDR_NOT_BEFORE_STARTPARSE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_INCRSAXSRCFILTER_NOT_RESTARTABLE> = "ER_INCRSAXSRCFILTER_NOT_RESTARTABLE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_METHOD_NOT_SUPPORTED> = "ER_METHOD_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CANNOT_INIT_URI_EMPTY_PARMS> = "ER_CANNOT_INIT_URI_EMPTY_PARMS";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_FRAGMENT_STRING_IN_PATH> = "ER_NO_FRAGMENT_STRING_IN_PATH";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_QUERY_STRING_IN_PATH> = "ER_NO_QUERY_STRING_IN_PATH";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_PORT_IF_NO_HOST> = "ER_NO_PORT_IF_NO_HOST";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_USERINFO_IF_NO_HOST> = "ER_NO_USERINFO_IF_NO_HOST";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_SELF_CAUSATION_NOT_PERMITTED> = "ER_SELF_CAUSATION_NOT_PERMITTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CANNOT_CHANGE_WHILE_PARSING> = "ER_CANNOT_CHANGE_WHILE_PARSING";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_PARSER_IN_USE> = "ER_PARSER_IN_USE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_FRAG_INVALID_CHAR> = "ER_FRAG_INVALID_CHAR";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_FRAG_WHEN_PATH_NULL> = "ER_FRAG_WHEN_PATH_NULL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_FRAG_FOR_GENERIC_URI> = "ER_FRAG_FOR_GENERIC_URI";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_INVALID_PORT> = "ER_INVALID_PORT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_PORT_WHEN_HOST_NULL> = "ER_PORT_WHEN_HOST_NULL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_HOST_ADDRESS_NOT_WELLFORMED> = "ER_HOST_ADDRESS_NOT_WELLFORMED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_SCHEME_NOT_CONFORMANT> = "ER_SCHEME_NOT_CONFORMANT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_SCHEME_FROM_NULL_STRING> = "ER_SCHEME_FROM_NULL_STRING";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_PATH_INVALID_CHAR> = "ER_PATH_INVALID_CHAR";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_SCHEME_INURI> = "ER_NO_SCHEME_INURI";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_SCHEME_IN_URI> = "ER_NO_SCHEME_IN_URI";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_SCHEME_REQUIRED> = "ER_SCHEME_REQUIRED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE> = "ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_EXCEPTION_CREATING_POOL> = "ER_EXCEPTION_CREATING_POOL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_COULD_NOT_INIT_PARSER> = "ER_COULD_NOT_INIT_PARSER";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_STARTPARSE_NEEDS_SAXPARSER> = "ER_STARTPARSE_NEEDS_SAXPARSER";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_STARTPARSE_WHILE_PARSING> = "ER_STARTPARSE_WHILE_PARSING";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_COULD_NOT_RESOLVE_NODE> = "ER_COULD_NOT_RESOLVE_NODE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NODE_NON_NULL> = "ER_NODE_NON_NULL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NOT_SUPPORTED> = "ER_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_DTMIDS_AVAIL> = "ER_NO_DTMIDS_AVAIL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_AXIS_NOT_SUPPORTED> = "ER_AXIS_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_UNKNOWN_AXIS_TYPE> = "ER_UNKNOWN_AXIS_TYPE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_ITERATOR_CLONE_NOT_SUPPORTED> = "ER_ITERATOR_CLONE_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_ITERATOR_AXIS_NOT_IMPLEMENTED> = "ER_ITERATOR_AXIS_NOT_IMPLEMENTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED> = "ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_PARSE_CALL_WHILE_PARSING> = "ER_NO_PARSE_CALL_WHILE_PARSING";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_PARSER_DOTERMINATE_ANSWERS> = "ER_PARSER_DOTERMINATE_ANSWERS";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_COROUTINE_PARAM> = "ER_COROUTINE_PARAM";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_COJOINROUTINESET_FAILED> = "ER_COJOINROUTINESET_FAILED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_COROUTINE_CO_EXIT> = "ER_COROUTINE_CO_EXIT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_COROUTINE_NOT_AVAIL> = "ER_COROUTINE_NOT_AVAIL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_OFFSET_BIGGER_THAN_SLOT> = "ER_OFFSET_BIGGER_THAN_SLOT";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CHUNKEDINTARRAY_NOT_SUPPORTED> = "ER_CHUNKEDINTARRAY_NOT_SUPPORTED";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_NO_DEFAULT_IMPL> = "ER_NO_DEFAULT_IMPL";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_CANNOT_OVERWRITE_CAUSE> = "ER_CANNOT_OVERWRITE_CAUSE";

        <org.apache.xml.res.XMLErrorResources: java.lang.String ER_FUNCTION_NOT_SUPPORTED> = "ER_FUNCTION_NOT_SUPPORTED";

        return;
    }
}
