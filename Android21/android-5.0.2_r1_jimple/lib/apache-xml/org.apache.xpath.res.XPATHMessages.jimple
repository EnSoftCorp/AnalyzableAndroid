public class org.apache.xpath.res.XPATHMessages extends org.apache.xml.res.XMLMessages
{
    private static java.util.ListResourceBundle XPATHBundle;
    private static final java.lang.String XPATH_ERROR_RESOURCES;

    public void <init>()
    {
        org.apache.xpath.res.XPATHMessages r0;

        r0 := @this: org.apache.xpath.res.XPATHMessages;

        specialinvoke r0.<org.apache.xml.res.XMLMessages: void <init>()>();

        return;
    }

    public static final java.lang.String createXPATHMessage(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.util.ListResourceBundle $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <org.apache.xpath.res.XPATHMessages: java.util.ListResourceBundle XPATHBundle>;

        $r3 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMsg(java.util.ListResourceBundle,java.lang.String,java.lang.Object[])>($r2, r0, r1);

        return $r3;
    }

    public static final java.lang.String createXPATHWarning(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.util.ListResourceBundle $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <org.apache.xpath.res.XPATHMessages: java.util.ListResourceBundle XPATHBundle>;

        $r3 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMsg(java.util.ListResourceBundle,java.lang.String,java.lang.Object[])>($r2, r0, r1);

        return $r3;
    }

    public static final java.lang.String createXPATHMsg(java.util.ListResourceBundle, java.lang.String, java.lang.Object[])
    {
        java.util.ListResourceBundle r0;
        java.lang.String r1, r3, r11, r12;
        java.lang.Object[] r2;
        boolean z0;
        int i0, i1;
        java.lang.RuntimeException $r4;
        java.lang.Object $r5;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @parameter0: java.util.ListResourceBundle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        z0 = 0;

        r3 = null;

        if r1 == null goto label01;

        r3 = virtualinvoke r0.<java.util.ListResourceBundle: java.lang.String getString(java.lang.String)>(r1);

     label01:
        if r3 != null goto label02;

        r3 = virtualinvoke r0.<java.util.ListResourceBundle: java.lang.String getString(java.lang.String)>("BAD_CODE");

        z0 = 1;

     label02:
        if r2 == null goto label09;

     label03:
        i0 = lengthof r2;

        i1 = 0;

     label04:
        if i1 >= i0 goto label06;

        $r5 = r2[i1];

        if null != $r5 goto label05;

        r2[i1] = "";

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        r11 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r3, r2);

     label07:
        goto label10;

     label08:
        $r6 := @caughtexception;

        r12 = virtualinvoke r0.<java.util.ListResourceBundle: java.lang.String getString(java.lang.String)>("FORMAT_FAILED");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        r11 = r3;

     label10:
        if z0 == 0 goto label11;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(r11);

        throw $r4;

     label11:
        return r11;

        catch java.lang.Exception from label03 to label07 with label08;
    }

    static void <clinit>()
    {
        org.apache.xpath.res.XPATHErrorResources $r0;

        <org.apache.xpath.res.XPATHMessages: java.lang.String XPATH_ERROR_RESOURCES> = "org.apache.xpath.res.XPATHErrorResources";

        $r0 = new org.apache.xpath.res.XPATHErrorResources;

        specialinvoke $r0.<org.apache.xpath.res.XPATHErrorResources: void <init>()>();

        <org.apache.xpath.res.XPATHMessages: java.util.ListResourceBundle XPATHBundle> = $r0;

        return;
    }
}
