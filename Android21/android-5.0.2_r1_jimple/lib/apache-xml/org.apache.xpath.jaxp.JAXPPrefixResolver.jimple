public class org.apache.xpath.jaxp.JAXPPrefixResolver extends java.lang.Object implements org.apache.xml.utils.PrefixResolver
{
    private javax.xml.namespace.NamespaceContext namespaceContext;
    public static final java.lang.String S_XMLNAMESPACEURI;

    public void <init>(javax.xml.namespace.NamespaceContext)
    {
        org.apache.xpath.jaxp.JAXPPrefixResolver r0;
        javax.xml.namespace.NamespaceContext r1;

        r0 := @this: org.apache.xpath.jaxp.JAXPPrefixResolver;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xpath.jaxp.JAXPPrefixResolver: javax.xml.namespace.NamespaceContext namespaceContext> = r1;

        return;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        org.apache.xpath.jaxp.JAXPPrefixResolver r0;
        java.lang.String r1, $r3;
        javax.xml.namespace.NamespaceContext $r2;

        r0 := @this: org.apache.xpath.jaxp.JAXPPrefixResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xpath.jaxp.JAXPPrefixResolver: javax.xml.namespace.NamespaceContext namespaceContext>;

        $r3 = interfaceinvoke $r2.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getBaseIdentifier()
    {
        org.apache.xpath.jaxp.JAXPPrefixResolver r0;

        r0 := @this: org.apache.xpath.jaxp.JAXPPrefixResolver;

        return null;
    }

    public boolean handlesNullPrefixes()
    {
        org.apache.xpath.jaxp.JAXPPrefixResolver r0;

        r0 := @this: org.apache.xpath.jaxp.JAXPPrefixResolver;

        return 0;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node)
    {
        org.apache.xpath.jaxp.JAXPPrefixResolver r0;
        java.lang.String r1, r4, r7, r8, $r9;
        org.w3c.dom.Node r2, r3, r6;
        short s0, $s3;
        org.w3c.dom.NamedNodeMap r5;
        int i1, i2, $i4, $i5;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xpath.jaxp.JAXPPrefixResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 = r2;

        r4 = null;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z1 == 0 goto label1;

        r4 = "http://www.w3.org/XML/1998/namespace";

        goto label9;

     label1:
        if null == r3 goto label9;

        if null != r4 goto label9;

        $s3 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        s0 = $s3;

        if $s3 == 1 goto label2;

        if s0 != 5 goto label9;

     label2:
        if s0 != 1 goto label8;

        r5 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label3:
        $i4 = interfaceinvoke r5.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i4 goto label8;

        r6 = interfaceinvoke r5.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r7 = interfaceinvoke r6.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        z0 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if z0 != 0 goto label4;

        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z3 == 0 goto label7;

     label4:
        i2 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(58);

        if z0 == 0 goto label5;

        $i5 = i2 + 1;

        $r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i5);

        goto label6;

     label5:
        $r9 = "";

     label6:
        r8 = $r9;

        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label7;

        r4 = interfaceinvoke r6.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        goto label8;

     label7:
        i1 = i1 + 1;

        goto label3;

     label8:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label1;

     label9:
        return r4;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String S_XMLNAMESPACEURI> = "http://www.w3.org/XML/1998/namespace";

        return;
    }
}
