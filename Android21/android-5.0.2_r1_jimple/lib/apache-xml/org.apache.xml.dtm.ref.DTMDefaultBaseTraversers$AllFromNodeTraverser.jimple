class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser extends org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers,org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)>(r1, null);

        return;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser r0;
        int i0, i1, i2, $i3, $i5, i6;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i3 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

        i6 = $i3 + 1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _exptype(int)>(i6);

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: boolean isDescendant(int,int)>(i2, i6);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i6);

        return $i5;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
