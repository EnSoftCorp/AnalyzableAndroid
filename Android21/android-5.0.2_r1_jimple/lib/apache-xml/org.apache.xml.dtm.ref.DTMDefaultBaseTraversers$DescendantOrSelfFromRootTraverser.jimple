class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser extends org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers,org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)>(r1, null);

        return;
    }

    protected int getFirstPotential(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser r0;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser;

        i0 := @parameter0: int;

        return i0;
    }

    protected int getSubtreeRoot(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser r0;
        int i0, $i1, $i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getDocument()>();

        $i2 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>($i1);

        return $i2;
    }

    public int first(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser r0;
        int i0, $i1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getDocumentRoot(int)>(i0);

        return $i1;
    }

    public int first(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser r0;
        int i0, i1, i3, $i4, $i5, $i6, i7;
        byte b2;
        boolean $z0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: boolean isIndexed(int)>(i1);

        if $z0 == 0 goto label1;

        b2 = 0;

        i3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: int getFirstPotential(int)>(b2);

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: int getNextIndexed(int,int,int)>(b2, i3, i1);

        $i6 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>($i5);

        return $i6;

     label1:
        i7 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: int first(int)>(i0);

        $i4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: int next(int,int,int)>(i7, i7, i1);

        return $i4;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
