final class org.apache.xml.serializer.CharInfo extends java.lang.Object
{
    private java.util.HashMap m_charToString;
    public static final java.lang.String HTML_ENTITIES_RESOURCE;
    public static final java.lang.String XML_ENTITIES_RESOURCE;
    static final char S_HORIZONAL_TAB;
    static final char S_LINEFEED;
    static final char S_CARRIAGERETURN;
    static final char S_SPACE;
    static final char S_QUOTE;
    static final char S_LT;
    static final char S_GT;
    static final char S_NEL;
    static final char S_LINE_SEPARATOR;
    boolean onlyQuotAmpLtGt;
    static final int ASCII_MAX;
    private final boolean[] shouldMapAttrChar_ASCII;
    private final boolean[] shouldMapTextChar_ASCII;
    private final int[] array_of_bits;
    private static final int SHIFT_PER_WORD;
    private static final int LOW_ORDER_BITMASK;
    private int firstWordNotUsed;
    private final org.apache.xml.serializer.CharInfo$CharKey m_charKey;
    private static java.util.Hashtable m_getCharInfoCache;

    private void <init>()
    {
        org.apache.xml.serializer.CharInfo r0;
        int[] $r1;
        boolean[] $r2, $r3;
        org.apache.xml.serializer.CharInfo$CharKey $r4;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: int[] createEmptySetOfIntegers(int)>(65535);

        r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits> = $r1;

        r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = 0;

        $r2 = newarray (boolean)[128];

        r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII> = $r2;

        $r3 = newarray (boolean)[128];

        r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII> = $r3;

        $r4 = new org.apache.xml.serializer.CharInfo$CharKey;

        specialinvoke $r4.<org.apache.xml.serializer.CharInfo$CharKey: void <init>()>();

        r0.<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo$CharKey m_charKey> = $r4;

        r0.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt> = 1;

        return;
    }

    private void <init>(java.lang.String, java.lang.String, boolean)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1, r2, r5, r6, r7, $r13, $r14, $r22, $r30, $r31, $r34, r47, r48;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        java.util.ResourceBundle r3;
        int i0, i1, $i2, $i4, i7, i8, i9;
        java.lang.Throwable r8, $r25;
        java.util.HashMap $r10;
        java.io.BufferedReader $r11, $r38, r45;
        java.io.InputStreamReader $r12, $r39;
        boolean[] $r15, $r16, $r17;
        char $c3, $c5, $c6;
        java.lang.RuntimeException $r18, $r27;
        java.lang.Object[] $r19, $r26;
        java.net.URL $r20, r43;
        org.apache.xml.serializer.utils.Messages $r21, $r33;
        java.lang.Class $r23;
        java.lang.Object $r24;
        java.lang.Exception $r28, $r29, $r32, $r35, $r36, r50;
        java.io.UnsupportedEncodingException $r37;
        java.util.Enumeration r40;
        java.io.InputStream r41;
        java.lang.ClassLoader r42;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void <init>()>();

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString> = $r10;

        r3 = null;

        z1 = 1;

        if z0 == 0 goto label04;

     label01:
        r3 = staticinvoke <java.util.PropertyResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r1);

     label02:
        goto label04;

     label03:
        $r36 := @caughtexception;

     label04:
        if r3 == null goto label08;

        r40 = virtualinvoke r3.<java.util.ResourceBundle: java.util.Enumeration getKeys()>();

     label05:
        $z6 = interfaceinvoke r40.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z6 == 0 goto label07;

        $r24 = interfaceinvoke r40.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r24;

        r6 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r5);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        $c6 = (char) i0;

        z2 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean defineEntity(java.lang.String,char)>(r5, $c6);

        if z2 == 0 goto label06;

        z1 = 0;

     label06:
        goto label05;

     label07:
        goto label38;

     label08:
        r41 = null;

     label09:
        if z0 == 0 goto label10;

        $r23 = class "org/apache/xml/serializer/CharInfo";

        r41 = virtualinvoke $r23.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        goto label16;

     label10:
        r42 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        if r42 != null goto label11;

        r41 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r1);

        goto label12;

     label11:
        r41 = virtualinvoke r42.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label12:
        if r41 != null goto label16;

     label13:
        $r20 = new java.net.URL;

        specialinvoke $r20.<java.net.URL: void <init>(java.lang.String)>(r1);

        r43 = $r20;

        r41 = virtualinvoke r43.<java.net.URL: java.io.InputStream openStream()>();

     label14:
        goto label16;

     label15:
        $r29 := @caughtexception;

     label16:
        if r41 != null goto label17;

        $r18 = new java.lang.RuntimeException;

        $r21 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = r1;

        $r19[1] = r1;

        $r22 = virtualinvoke $r21.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_RESOURCE_COULD_NOT_FIND", $r19);

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label17:
        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.InputStreamReader;

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r41, "UTF-8");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

        r45 = $r11;

     label18:
        goto label20;

     label19:
        $r37 := @caughtexception;

        $r38 = new java.io.BufferedReader;

        $r39 = new java.io.InputStreamReader;

        specialinvoke $r39.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r41);

        specialinvoke $r38.<java.io.BufferedReader: void <init>(java.io.Reader)>($r39);

        r45 = $r38;

     label20:
        r47 = virtualinvoke r45.<java.io.BufferedReader: java.lang.String readLine()>();

     label21:
        if r47 == null goto label26;

        $i2 = virtualinvoke r47.<java.lang.String: int length()>();

        if $i2 == 0 goto label22;

        $c3 = virtualinvoke r47.<java.lang.String: char charAt(int)>(0);

        if $c3 != 35 goto label23;

     label22:
        r47 = virtualinvoke r45.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label21;

     label23:
        i7 = virtualinvoke r47.<java.lang.String: int indexOf(int)>(32);

        if i7 <= 1 goto label25;

        r48 = virtualinvoke r47.<java.lang.String: java.lang.String substring(int,int)>(0, i7);

        i8 = i7 + 1;

        $i4 = virtualinvoke r47.<java.lang.String: int length()>();

        if i8 >= $i4 goto label25;

        r7 = virtualinvoke r47.<java.lang.String: java.lang.String substring(int)>(i8);

        i9 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(32);

        if i9 <= 0 goto label24;

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, i9);

     label24:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

        $c5 = (char) i1;

        z3 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean defineEntity(java.lang.String,char)>(r48, $c5);

        if z3 == 0 goto label25;

        z1 = 0;

     label25:
        r47 = virtualinvoke r45.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label21;

     label26:
        virtualinvoke r41.<java.io.InputStream: void close()>();

     label27:
        if r41 == null goto label38;

     label28:
        virtualinvoke r41.<java.io.InputStream: void close()>();

     label29:
        goto label38;

     label30:
        $r32 := @caughtexception;

        goto label38;

     label31:
        $r28 := @caughtexception;

        r50 = $r28;

        $r27 = new java.lang.RuntimeException;

        $r33 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r26 = newarray (java.lang.Object)[4];

        $r26[0] = r1;

        $r34 = virtualinvoke r50.<java.lang.Exception: java.lang.String toString()>();

        $r26[1] = $r34;

        $r26[2] = r1;

        $r30 = virtualinvoke r50.<java.lang.Exception: java.lang.String toString()>();

        $r26[3] = $r30;

        $r31 = virtualinvoke $r33.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_RESOURCE_COULD_NOT_LOAD", $r26);

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label32:
        $r25 := @caughtexception;

        r8 = $r25;

     label33:
        if r41 == null goto label37;

     label34:
        virtualinvoke r41.<java.io.InputStream: void close()>();

     label35:
        goto label37;

     label36:
        $r35 := @caughtexception;

     label37:
        throw r8;

     label38:
        r0.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt> = z1;

        $r13 = "xml";

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label39;

        $r17 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r17[34] = 0;

     label39:
        $r14 = "html";

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label40;

        $r16 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $r16[60] = 0;

        $r15 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r15[34] = 0;

     label40:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label19;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Exception from label09 to label27 with label31;
        catch java.lang.Throwable from label09 to label27 with label32;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.lang.Throwable from label31 to label33 with label32;
    }

    private boolean defineEntity(java.lang.String, char)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1, r3;
        char c0;
        java.lang.StringBuffer r2, $r4;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("&");

        r2 = $r4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        z0 = virtualinvoke r0.<org.apache.xml.serializer.CharInfo: boolean defineChar2StringMapping(java.lang.String,char)>(r3, c0);

        return z0;
    }

    java.lang.String getOutputStringForChar(char)
    {
        org.apache.xml.serializer.CharInfo r0;
        char c0;
        org.apache.xml.serializer.CharInfo$CharKey $r1, $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo$CharKey m_charKey>;

        virtualinvoke $r1.<org.apache.xml.serializer.CharInfo$CharKey: void setChar(char)>(c0);

        $r3 = r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString>;

        $r2 = r0.<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo$CharKey m_charKey>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    final boolean shouldMapAttrChar(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean $z0, $z1;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $z1 = $r1[i0];

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean get(int)>(i0);

        return $z0;
    }

    final boolean shouldMapTextChar(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean $z0, $z1;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $z1 = $r1[i0];

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean get(int)>(i0);

        return $z0;
    }

    private static org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0;
        org.apache.xml.serializer.CharInfo$1 $r2;
        java.lang.Object $r3;
        org.apache.xml.serializer.CharInfo $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = new org.apache.xml.serializer.CharInfo$1;

        specialinvoke $r2.<org.apache.xml.serializer.CharInfo$1: void <init>(java.lang.String,java.lang.String,boolean)>(r0, r1, z0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        $r4 = (org.apache.xml.serializer.CharInfo) $r3;

        return $r4;
    }

    static org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.xml.serializer.CharInfo r2, $r9, $r10, $r12, $r14, r17;
        javax.xml.transform.TransformerException r4, $r15;
        java.util.Hashtable $r5, $r7;
        java.lang.Object $r6;
        java.lang.Exception $r11, $r13;
        int $i0;
        org.apache.xml.serializer.utils.WrappedRuntimeException $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r5 = <org.apache.xml.serializer.CharInfo: java.util.Hashtable m_getCharInfoCache>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (org.apache.xml.serializer.CharInfo) $r6;

        if r2 == null goto label01;

        $r10 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo mutableCopyOf(org.apache.xml.serializer.CharInfo)>(r2);

        return $r10;

     label01:
        r17 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)>(r0, r1, 1);

        $r7 = <org.apache.xml.serializer.CharInfo: java.util.Hashtable m_getCharInfoCache>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r17);

        $r9 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo mutableCopyOf(org.apache.xml.serializer.CharInfo)>(r17);

     label02:
        return $r9;

     label03:
        $r11 := @caughtexception;

     label04:
        $r12 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

     label05:
        return $r12;

     label06:
        $r13 := @caughtexception;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label07;

        staticinvoke <org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)>(r0);

        goto label10;

     label07:
        staticinvoke <org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>(r0, null);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        $r16 = new org.apache.xml.serializer.utils.WrappedRuntimeException;

        specialinvoke $r16.<org.apache.xml.serializer.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r4);

        throw $r16;

     label10:
        $r14 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

        return $r14;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch javax.xml.transform.TransformerException from label07 to label08 with label09;
    }

    private static org.apache.xml.serializer.CharInfo mutableCopyOf(org.apache.xml.serializer.CharInfo)
    {
        org.apache.xml.serializer.CharInfo r0, r1, $r2;
        int i0, $i1, i2, i3;
        int[] $r3, $r4, $r5;
        boolean[] $r6, $r7, $r8, $r9, $r10, $r11;
        java.util.HashMap $r12, $r14;
        java.lang.Object $r13;
        boolean $z0;

        r0 := @parameter0: org.apache.xml.serializer.CharInfo;

        $r2 = new org.apache.xml.serializer.CharInfo;

        specialinvoke $r2.<org.apache.xml.serializer.CharInfo: void <init>()>();

        r1 = $r2;

        $r3 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        i0 = lengthof $r3;

        $r5 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        $r4 = r1.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r5, 0, $r4, 0, i0);

        $i1 = r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed>;

        r1.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = $i1;

        $r6 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        i2 = lengthof $r6;

        $r8 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $r7 = r1.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r8, 0, $r7, 0, i2);

        $r9 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        i3 = lengthof $r9;

        $r11 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r10 = r1.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r11, 0, $r10, 0, i3);

        $r12 = r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object clone()>();

        $r14 = (java.util.HashMap) $r13;

        r1.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString> = $r14;

        $z0 = r0.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt>;

        r1.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt> = $z0;

        return r1;
    }

    private static int arrayIndex(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >> 5;

        return $i1;
    }

    private static int bit(int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        $i2 = i0 & 31;

        i1 = 1 << $i2;

        return i1;
    }

    private int[] createEmptySetOfIntegers(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0, $i1, $i2, $i3;
        int[] r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = 0;

        $i1 = i0 - 1;

        $i2 = staticinvoke <org.apache.xml.serializer.CharInfo: int arrayIndex(int)>($i1);

        $i3 = $i2 + 1;

        r1 = newarray (int)[$i3];

        return r1;
    }

    private final void set(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void setASCIItextDirty(int)>(i0);

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void setASCIIattrDirty(int)>(i0);

        i1 = i0 >> 5;

        i2 = i1 + 1;

        $i3 = r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed>;

        if $i3 >= i2 goto label1;

        r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = i2;

     label1:
        $r1 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        $i6 = $r1[i1];

        $i4 = i0 & 31;

        $i5 = 1 << $i4;

        $i7 = $i6 | $i5;

        $r1[i1] = $i7;

        return;
    }

    private final boolean get(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, $z1;
        int[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        z0 = 0;

        i1 = i0 >> 5;

        $i2 = r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed>;

        if i1 >= $i2 goto label3;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        $i5 = $r1[i1];

        $i3 = i0 & 31;

        $i4 = 1 << $i3;

        $i6 = $i5 & $i4;

        if $i6 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        return z0;
    }

    private boolean extraEntity(java.lang.String, int)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1;
        int i0;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 = 0;

        if i0 >= 128 goto label6;

        lookupswitch(i0)
        {
            case 34: goto label1;
            case 38: goto label2;
            case 60: goto label3;
            case 62: goto label4;
            default: goto label5;
        };

     label1:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&quot;");

        if $z4 != 0 goto label6;

        z0 = 1;

        goto label6;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&amp;");

        if $z3 != 0 goto label6;

        z0 = 1;

        goto label6;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&lt;");

        if $z2 != 0 goto label6;

        z0 = 1;

        goto label6;

     label4:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&gt;");

        if $z1 != 0 goto label6;

        z0 = 1;

        goto label6;

     label5:
        z0 = 1;

     label6:
        return z0;
    }

    private void setASCIItextDirty(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r1[i0] = 1;

     label1:
        return;
    }

    private void setASCIIattrDirty(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $r1[i0] = 1;

     label1:
        return;
    }

    boolean defineChar2StringMapping(java.lang.String, char)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1;
        char c0;
        org.apache.xml.serializer.CharInfo$CharKey r2, $r3;
        boolean z0;
        java.util.HashMap $r4;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r3 = new org.apache.xml.serializer.CharInfo$CharKey;

        specialinvoke $r3.<org.apache.xml.serializer.CharInfo$CharKey: void <init>(char)>(c0);

        r2 = $r3;

        $r4 = r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void set(int)>(c0);

        z0 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean extraEntity(java.lang.String,int)>(r1, c0);

        return z0;
    }

    void <init>(java.lang.String, java.lang.String, boolean, org.apache.xml.serializer.CharInfo$1)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1, r2;
        boolean z0;
        org.apache.xml.serializer.CharInfo$1 r3;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.apache.xml.serializer.CharInfo$1;

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r7, $r8;
        java.lang.String $r1, $r4, $r6, $r9;
        java.util.Hashtable $r10;

        <org.apache.xml.serializer.CharInfo: int LOW_ORDER_BITMASK> = 31;

        <org.apache.xml.serializer.CharInfo: int SHIFT_PER_WORD> = 5;

        <org.apache.xml.serializer.CharInfo: int ASCII_MAX> = 128;

        <org.apache.xml.serializer.CharInfo: char S_LINE_SEPARATOR> = 8232;

        <org.apache.xml.serializer.CharInfo: char S_NEL> = 133;

        <org.apache.xml.serializer.CharInfo: char S_GT> = 62;

        <org.apache.xml.serializer.CharInfo: char S_LT> = 60;

        <org.apache.xml.serializer.CharInfo: char S_QUOTE> = 34;

        <org.apache.xml.serializer.CharInfo: char S_SPACE> = 32;

        <org.apache.xml.serializer.CharInfo: char S_CARRIAGERETURN> = 13;

        <org.apache.xml.serializer.CharInfo: char S_LINEFEED> = 10;

        <org.apache.xml.serializer.CharInfo: char S_HORIZONAL_TAB> = 9;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <org.apache.xml.serializer.SerializerBase: java.lang.String PKG_NAME>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".HTMLEntities");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.xml.serializer.CharInfo: java.lang.String HTML_ENTITIES_RESOURCE> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = <org.apache.xml.serializer.SerializerBase: java.lang.String PKG_NAME>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".XMLEntities");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.xml.serializer.CharInfo: java.lang.String XML_ENTITIES_RESOURCE> = $r9;

        $r10 = new java.util.Hashtable;

        specialinvoke $r10.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serializer.CharInfo: java.util.Hashtable m_getCharInfoCache> = $r10;

        return;
    }
}
