public class org.apache.xml.dtm.ref.DTMNodeProxy extends java.lang.Object implements org.w3c.dom.Node, org.w3c.dom.Document, org.w3c.dom.Text, org.w3c.dom.Element, org.w3c.dom.Attr, org.w3c.dom.ProcessingInstruction, org.w3c.dom.Comment, org.w3c.dom.DocumentFragment
{
    public org.apache.xml.dtm.DTM dtm;
    int node;
    private static final java.lang.String EMPTYSTRING;
    static final org.w3c.dom.DOMImplementation implementation;
    protected java.lang.String fDocumentURI;
    protected java.lang.String actualEncoding;
    private java.lang.String xmlEncoding;
    private boolean xmlStandalone;
    private java.lang.String xmlVersion;

    public void <init>(org.apache.xml.dtm.DTM, int)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTM r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm> = r1;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node> = i0;

        return;
    }

    public final org.apache.xml.dtm.DTM getDTM()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTM $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        return $r1;
    }

    public final int getDTMNodeNumber()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        return $i0;
    }

    public final boolean equals(org.w3c.dom.Node)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0, r2;
        org.w3c.dom.Node r1;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r3, $r4;
        boolean $z0;
        java.lang.ClassCastException $r5;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

     label1:
        r2 = (org.apache.xml.dtm.ref.DTMNodeProxy) r1;

        $i1 = r2.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        if $i1 != $i0 goto label2;

        $r4 = r2.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        if $r4 != $r3 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label3 with label4;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.Object r1;
        org.w3c.dom.Node $r3;
        boolean $z0;
        java.lang.ClassCastException $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = (org.w3c.dom.Node) r1;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: boolean equals(org.w3c.dom.Node)>($r3);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public final boolean sameNodeAs(org.w3c.dom.Node)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0, r2;
        org.w3c.dom.Node r1;
        boolean $z0, $z1;
        org.apache.xml.dtm.DTM $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        $z0 = r1 instanceof org.apache.xml.dtm.ref.DTMNodeProxy;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.xml.dtm.ref.DTMNodeProxy) r1;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = r2.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        if $r4 != $r3 goto label2;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i0 = r2.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        if $i1 != $i0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public final java.lang.String getNodeName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getTarget()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getLocalName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getLocalName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getPrefix()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getPrefix(int)>($i0);

        return $r2;
    }

    public final void setPrefix(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r2;
    }

    public final java.lang.String getNamespaceURI()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>($i0);

        return $r2;
    }

    public final boolean supports(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.w3c.dom.DOMImplementation $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation>;

        $z0 = interfaceinvoke $r3.<org.w3c.dom.DOMImplementation: boolean hasFeature(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    public final boolean isSupported(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.w3c.dom.DOMImplementation $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation>;

        $z0 = interfaceinvoke $r3.<org.w3c.dom.DOMImplementation: boolean hasFeature(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    public final java.lang.String getNodeValue() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        return $r2;
    }

    public final java.lang.String getStringValue() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        org.apache.xml.utils.XMLString $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        return $r3;
    }

    public final void setNodeValue(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r2;
    }

    public final short getNodeType()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        short $s1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $s1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i0);

        return $s1;
    }

    public final org.w3c.dom.Node getParentNode()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i2;
        short $s1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $s1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        if $s1 != 2 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getParent(int)>($i2);

        if i0 != -1 goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label3:
        return $r3;
    }

    public final org.w3c.dom.Node getOwnerNode()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getParent(int)>($i1);

        if i0 != -1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label2:
        return $r3;
    }

    public final org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.ref.DTMChildIterNodeList $r1;
        int $i0;
        org.apache.xml.dtm.DTM $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = new org.apache.xml.dtm.ref.DTMChildIterNodeList;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r1.<org.apache.xml.dtm.ref.DTMChildIterNodeList: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        return $r1;
    }

    public final org.w3c.dom.Node getFirstChild()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i1);

        if i0 != -1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label2:
        return $r3;
    }

    public final org.w3c.dom.Node getLastChild()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getLastChild(int)>($i1);

        if i0 != -1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label2:
        return $r3;
    }

    public final org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getPreviousSibling(int)>($i1);

        if i0 != -1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label2:
        return $r3;
    }

    public final org.w3c.dom.Node getNextSibling()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i1, $i3;
        org.apache.xml.dtm.DTM $r1, $r2, $r3;
        short $s2;
        org.w3c.dom.Node $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $s2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i1);

        if $s2 != 2 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getNextSibling(int)>($i3);

        if i0 != -1 goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label3:
        return $r4;
    }

    public final org.w3c.dom.NamedNodeMap getAttributes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.ref.DTMNamedNodeMap $r1;
        int $i0;
        org.apache.xml.dtm.DTM $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r1.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r2, $i0);

        return $r1;
    }

    public boolean hasAttribute(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i0, null, r1);

        if -1 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i0, r1, r2);

        if -1 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final org.w3c.dom.Document getOwnerDocument()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;
        org.w3c.dom.Document $r4, $r5;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getOwnerDocument(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

        $r4 = (org.w3c.dom.Document) $r3;

        $r5 = (org.w3c.dom.Document) $r4;

        return $r5;
    }

    public final org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r3;
    }

    public final org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r3;
    }

    public final org.w3c.dom.Node removeChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r2;
    }

    public final org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r2;
    }

    public final boolean hasChildNodes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r1;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i0);

        if -1 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final org.w3c.dom.Node cloneNode(boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        boolean z0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public final org.w3c.dom.DocumentType getDoctype()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return null;
    }

    public final org.w3c.dom.DOMImplementation getImplementation()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.DOMImplementation $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation>;

        return $r1;
    }

    public final org.w3c.dom.Element getDocumentElement()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, i1, i2;
        org.apache.xml.dtm.DTM $r1, $r2, $r3, $r8, $r9, $r10, $r11;
        org.w3c.dom.Node $r4;
        org.w3c.dom.Element $r5, $r6;
        org.apache.xml.dtm.DTMDOMException $r7;
        short $s3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getDocument()>();

        i1 = -1;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i2 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getFirstChild(int)>(i0);

     label1:
        if i2 == -1 goto label7;

        $r8 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $s3 = interfaceinvoke $r8.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i2);

        tableswitch($s3)
        {
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label5;
            case 10: goto label4;
            default: goto label5;
        };

     label2:
        if i1 == -1 goto label3;

        i1 = -1;

        $r10 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i2 = interfaceinvoke $r10.<org.apache.xml.dtm.DTM: int getLastChild(int)>(i0);

        goto label6;

     label3:
        i1 = i2;

        goto label6;

     label4:
        goto label6;

     label5:
        i1 = -1;

        $r11 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i2 = interfaceinvoke $r11.<org.apache.xml.dtm.DTM: int getLastChild(int)>(i0);

     label6:
        $r9 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        i2 = interfaceinvoke $r9.<org.apache.xml.dtm.DTM: int getNextSibling(int)>(i2);

        goto label1;

     label7:
        if i1 != -1 goto label8;

        $r7 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r7.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r7;

     label8:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i1);

        $r5 = (org.w3c.dom.Element) $r4;

        $r6 = (org.w3c.dom.Element) $r5;

        return $r6;
    }

    public final org.w3c.dom.Element createElement(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public final org.w3c.dom.Text createTextNode(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.CDATASection createCDATASection(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r3;
    }

    public final org.w3c.dom.Attr createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.EntityReference createEntityReference(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.NodeList getElementsByTagName(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, $r10;
        java.util.Vector r2, $r5;
        org.w3c.dom.Node r3, $r9, $r11, $r13;
        boolean z0;
        org.w3c.dom.NodeList r4;
        int i0, $i1, $i3, $i5, i6, i7;
        org.apache.xml.dtm.DTM $r6, $r12;
        org.apache.xpath.NodeSet $r7, r14;
        java.lang.Object $r8;
        short $s2, $s4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r2 = $r5;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        r3 = interfaceinvoke $r6.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

        if r3 == null goto label4;

        $r10 = "*";

        z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        $s2 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        if 1 != $s2 goto label3;

        r4 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label1:
        $i5 = interfaceinvoke r4.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i5 goto label2;

        $r13 = interfaceinvoke r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)>(r2, $r13, r1, z0);

        i0 = i0 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $s4 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        if 9 != $s4 goto label4;

        $r12 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r11 = interfaceinvoke $r12.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i3);

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)>(r2, $r11, r1, z0);

     label4:
        i6 = virtualinvoke r2.<java.util.Vector: int size()>();

        $r7 = new org.apache.xpath.NodeSet;

        specialinvoke $r7.<org.apache.xpath.NodeSet: void <init>(int)>(i6);

        r14 = $r7;

        i7 = 0;

     label5:
        if i7 >= i6 goto label6;

        $r8 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        $r9 = (org.w3c.dom.Node) $r8;

        virtualinvoke r14.<org.apache.xpath.NodeSet: void addNode(org.w3c.dom.Node)>($r9);

        i7 = i7 + 1;

        goto label5;

     label6:
        return r14;
    }

    private final void traverseChildren(java.util.Vector, org.w3c.dom.Node, java.lang.String, boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.util.Vector r1;
        org.w3c.dom.Node r2, $r5;
        java.lang.String r3, $r6;
        boolean z0, $z1, $z3;
        org.w3c.dom.NodeList r4;
        int i0, $i2;
        short $s1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if r2 != null goto label1;

        return;

     label1:
        $s1 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label3;

        if z0 != 0 goto label2;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label3;

     label2:
        virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>(r2);

     label3:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z1 == 0 goto label5;

        r4 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label4:
        $i2 = interfaceinvoke r4.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i2 goto label5;

        $r5 = interfaceinvoke r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)>(r1, $r5, r3, z0);

        i0 = i0 + 1;

        goto label4;

     label5:
        return;
    }

    public final org.w3c.dom.Node importNode(org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        boolean z0;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(7);

        throw $r2;
    }

    public final org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r3;
    }

    public final org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r3;
    }

    public final org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2, $r10, $r12;
        java.util.Vector r3, $r6;
        org.w3c.dom.Node r4, $r11, $r13, $r15;
        boolean z0, z1;
        org.w3c.dom.NodeList r5;
        int i0, $i1, $i3, $i5, i6, i7;
        org.apache.xml.dtm.DTM $r7, $r14;
        org.apache.xpath.NodeSet $r8, r16;
        java.lang.Object $r9;
        short $s2, $s4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r3 = $r6;

        $r7 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        r4 = interfaceinvoke $r7.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

        if r4 == null goto label4;

        $r10 = "*";

        z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        $r12 = "*";

        z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        $s2 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        if 1 != $s2 goto label3;

        r5 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label1:
        $i5 = interfaceinvoke r5.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i5 goto label2;

        $r15 = interfaceinvoke r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)>(r3, $r15, r1, r2, z0, z1);

        i0 = i0 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $s4 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        if 9 != $s4 goto label4;

        $r14 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r13 = interfaceinvoke $r14.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i3);

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)>(r3, $r13, r1, r2, z0, z1);

     label4:
        i6 = virtualinvoke r3.<java.util.Vector: int size()>();

        $r8 = new org.apache.xpath.NodeSet;

        specialinvoke $r8.<org.apache.xpath.NodeSet: void <init>(int)>(i6);

        r16 = $r8;

        i7 = 0;

     label5:
        if i7 >= i6 goto label6;

        $r9 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i7);

        $r11 = (org.w3c.dom.Node) $r9;

        virtualinvoke r16.<org.apache.xpath.NodeSet: void addNode(org.w3c.dom.Node)>($r11);

        i7 = i7 + 1;

        goto label5;

     label6:
        return r16;
    }

    private final void traverseChildren(java.util.Vector, org.w3c.dom.Node, java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.util.Vector r1;
        org.w3c.dom.Node r2, $r6;
        java.lang.String r3, r4, r5, $r7;
        boolean z0, z1, $z2, $z4, $z5;
        int i0, $i2;
        short $s1;
        org.w3c.dom.NodeList r8;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        if r2 != null goto label1;

        return;

     label1:
        $s1 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label5;

        if z1 != 0 goto label2;

        $r7 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label5;

     label2:
        r5 = interfaceinvoke r2.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if r3 != null goto label3;

        if r5 == null goto label4;

     label3:
        if z0 != 0 goto label4;

        if r3 == null goto label5;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 == 0 goto label5;

     label4:
        virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>(r2);

     label5:
        $z2 = interfaceinvoke r2.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z2 == 0 goto label7;

        r8 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

     label6:
        $i2 = interfaceinvoke r8.<org.w3c.dom.NodeList: int getLength()>();

        if i0 >= $i2 goto label7;

        $r6 = interfaceinvoke r8.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)>(r1, $r6, r3, r4, z0, z1);

        i0 = i0 + 1;

        goto label6;

     label7:
        return;
    }

    public final org.w3c.dom.Element getElementById(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTM $r2, $r3;
        int $i0;
        org.w3c.dom.Node $r4;
        org.w3c.dom.Element $r5;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: int getElementById(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i0);

        $r5 = (org.w3c.dom.Element) $r4;

        return $r5;
    }

    public final org.w3c.dom.Text splitText(int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public final java.lang.String getData() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        return $r2;
    }

    public final void setData(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final int getLength()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        return $i1;
    }

    public final java.lang.String substringData(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, i1, $i2;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getData()>();

        $i2 = i0 + i1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        return $r2;
    }

    public final void appendData(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final void insertData(int, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final void deleteData(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, i1;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public final void replaceData(int, int, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, i1;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final java.lang.String getTagName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final java.lang.String getAttribute(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, $r6;
        org.apache.xml.dtm.ref.DTMNamedNodeMap r2, $r4;
        org.w3c.dom.Node r3;
        int $i0;
        org.apache.xml.dtm.DTM $r5;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r4 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r5 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r4.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r5, $i0);

        r2 = $r4;

        r3 = virtualinvoke r2.<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>(r1);

        if null != r3 goto label1;

        $r6 = "";

        goto label2;

     label1:
        $r6 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label2:
        return $r6;
    }

    public final void setAttribute(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r3;
    }

    public final void removeAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.Attr getAttributeNode(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.ref.DTMNamedNodeMap r2, $r3;
        int $i0;
        org.apache.xml.dtm.DTM $r4;
        org.w3c.dom.Node $r5;
        org.w3c.dom.Attr $r6;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r3 = new org.apache.xml.dtm.ref.DTMNamedNodeMap;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        specialinvoke $r3.<org.apache.xml.dtm.ref.DTMNamedNodeMap: void <init>(org.apache.xml.dtm.DTM,int)>($r4, $i0);

        r2 = $r3;

        $r5 = virtualinvoke r2.<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>(r1);

        $r6 = (org.w3c.dom.Attr) $r5;

        return $r6;
    }

    public final org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Attr r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Attr;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Attr r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Attr;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public boolean hasAttributes()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0, $i1;
        org.apache.xml.dtm.DTM $r1;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getFirstAttribute(int)>($i0);

        if -1 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void normalize()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public final java.lang.String getAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2, $r5;
        org.w3c.dom.Node r3;
        int i0, $i1;
        org.apache.xml.dtm.DTM $r4, $r6;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = null;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r4.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i1, r1, r2);

        if i0 == -1 goto label1;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        r3 = interfaceinvoke $r6.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

     label1:
        if null != r3 goto label2;

        $r5 = "";

        goto label3;

     label2:
        $r5 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label3:
        return $r5;
    }

    public final void setAttributeNS(java.lang.String, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2, r3;
        org.apache.xml.dtm.DTMDOMException $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r4.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r4;
    }

    public final void removeAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.apache.xml.dtm.DTMDOMException $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r3.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r3;
    }

    public final org.w3c.dom.Attr getAttributeNodeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        org.w3c.dom.Attr r3;
        int i0, $i1;
        org.apache.xml.dtm.DTM $r4, $r5;
        org.w3c.dom.Node $r6;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = null;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r4.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>($i1, r1, r2);

        if i0 == -1 goto label1;

        $r5 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r6 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

        r3 = (org.w3c.dom.Attr) $r6;

     label1:
        return r3;
    }

    public final org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Attr r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Attr;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final java.lang.String getName()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>($i0);

        return $r2;
    }

    public final boolean getSpecified()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return 1;
    }

    public final java.lang.String getValue()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>($i0);

        return $r2;
    }

    public final void setValue(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public final org.w3c.dom.Element getOwnerElement()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int i0, $i2;
        short $s1;
        org.apache.xml.dtm.DTM $r1, $r2;
        org.w3c.dom.Node $r3;
        org.w3c.dom.Element $r4, $r5;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $s1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        if $s1 == 2 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getParent(int)>($i2);

        if i0 != -1 goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $r3 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

        $r4 = (org.w3c.dom.Element) $r3;

        $r5 = (org.w3c.dom.Element) $r4;

     label3:
        return $r5;
    }

    public org.w3c.dom.Node adoptNode(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        org.apache.xml.dtm.DTMDOMException $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r2.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r2;
    }

    public java.lang.String getInputEncoding()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public boolean getStrictErrorChecking()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public void setStrictErrorChecking(boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        boolean z0;
        org.apache.xml.dtm.DTMDOMException $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.xml.dtm.DTMDOMException;

        specialinvoke $r1.<org.apache.xml.dtm.DTMDOMException: void <init>(short)>(9);

        throw $r1;
    }

    public java.lang.Object setUserData(java.lang.String, java.lang.Object, org.w3c.dom.UserDataHandler)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        org.w3c.dom.UserDataHandler r3;
        org.w3c.dom.Document $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.w3c.dom.UserDataHandler;

        $r4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Document getOwnerDocument()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)>(r1, r2, r3);

        return $r5;
    }

    public java.lang.Object getUserData(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        org.w3c.dom.Document $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: java.lang.Object getUserData(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.Object getFeature(java.lang.String, java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0, $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: boolean isSupported(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean isEqualNode(org.w3c.dom.Node)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        short $s0, $s1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $s1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        if $s0 == $s1 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeName()>();

        if $r2 != null goto label03;

        $r21 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        if $r21 == null goto label04;

        return 0;

     label03:
        $r3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeName()>();

        $r4 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        $r5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getLocalName()>();

        if $r5 != null goto label05;

        $r19 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        if $r19 == null goto label06;

        return 0;

     label05:
        $r6 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getLocalName()>();

        $r7 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label06;

        return 0;

     label06:
        $r8 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNamespaceURI()>();

        if $r8 != null goto label07;

        $r20 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r20 == null goto label08;

        return 0;

     label07:
        $r9 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNamespaceURI()>();

        $r10 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label08;

        return 0;

     label08:
        $r12 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getPrefix()>();

        if $r12 != null goto label09;

        $r17 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        if $r17 == null goto label10;

        return 0;

     label09:
        $r11 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getPrefix()>();

        $r13 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 != 0 goto label10;

        return 0;

     label10:
        $r15 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeValue()>();

        if $r15 != null goto label11;

        $r18 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r18 == null goto label12;

        return 0;

     label11:
        $r14 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeValue()>();

        $r16 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z4 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    public java.lang.String lookupNamespaceURI(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2, r3, r6, r7, $r8, $r9, $r11, r13;
        short s0, $s3;
        org.w3c.dom.NamedNodeMap r4;
        int i1, i2;
        org.w3c.dom.Node r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.w3c.dom.Element $r10, $r12;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        s0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        tableswitch(s0)
        {
            case 1: goto label01;
            case 2: goto label09;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label08;
            case 7: goto label11;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label08;
            default: goto label11;
        };

     label01:
        r2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNamespaceURI()>();

        r3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getPrefix()>();

        if r2 == null goto label03;

        if r1 != null goto label02;

        if r3 != r1 goto label02;

        return r2;

     label02:
        if r3 == null goto label03;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label03;

        return r2;

     label03:
        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: boolean hasAttributes()>();

        if $z0 == 0 goto label07;

        r4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = interfaceinvoke r4.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i2 = 0;

     label04:
        if i2 >= i1 goto label07;

        r5 = interfaceinvoke r4.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        r6 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        r7 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r13 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if r13 == null goto label06;

        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z1 == 0 goto label06;

        if r1 != null goto label05;

        $r9 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z5 == 0 goto label05;

        return r7;

     label05:
        if r6 == null goto label06;

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z2 == 0 goto label06;

        $r8 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label06;

        return r7;

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        return null;

     label08:
        return null;

     label09:
        $r10 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getOwnerElement()>();

        $s3 = interfaceinvoke $r10.<org.w3c.dom.Element: short getNodeType()>();

        if $s3 != 1 goto label10;

        $r12 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getOwnerElement()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.Element: java.lang.String lookupNamespaceURI(java.lang.String)>(r1);

        return $r11;

     label10:
        return null;

     label11:
        return null;
    }

    public boolean isDefaultNamespace(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.String lookupPrefix(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, $r4;
        short s0, $s1;
        org.w3c.dom.Element $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        s0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()>();

        tableswitch(s0)
        {
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label2;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            default: goto label5;
        };

     label2:
        return null;

     label3:
        $r2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getOwnerElement()>();

        $s1 = interfaceinvoke $r2.<org.w3c.dom.Element: short getNodeType()>();

        if $s1 != 1 goto label4;

        $r3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getOwnerElement()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String lookupPrefix(java.lang.String)>(r1);

        return $r4;

     label4:
        return null;

     label5:
        return null;
    }

    public boolean isSameNode(org.w3c.dom.Node)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setTextContent(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.dtm.ref.DTMNodeProxy: void setNodeValue(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getTextContent() throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        org.apache.xml.utils.XMLString $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM dtm>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: int node>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        return $r3;
    }

    public short compareDocumentPosition(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        return 0;
    }

    public java.lang.String getBaseURI()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return null;
    }

    public org.w3c.dom.Node renameNode(org.w3c.dom.Node, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Node r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return r1;
    }

    public void normalizeDocument()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return;
    }

    public org.w3c.dom.DOMConfiguration getDomConfig()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return null;
    }

    public void setDocumentURI(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String fDocumentURI> = r1;

        return;
    }

    public java.lang.String getDocumentURI()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String fDocumentURI>;

        return $r1;
    }

    public java.lang.String getActualEncoding()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String actualEncoding>;

        return $r1;
    }

    public void setActualEncoding(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String actualEncoding> = r1;

        return;
    }

    public org.w3c.dom.Text replaceWholeText(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getWholeText()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return null;
    }

    public boolean isElementContentWhitespace()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return 0;
    }

    public void setIdAttribute(boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        return;
    }

    public void setIdAttribute(java.lang.String, boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return;
    }

    public void setIdAttributeNode(org.w3c.dom.Attr, boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        org.w3c.dom.Attr r1;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: org.w3c.dom.Attr;

        z0 := @parameter1: boolean;

        return;
    }

    public void setIdAttributeNS(java.lang.String, java.lang.String, boolean)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return;
    }

    public org.w3c.dom.TypeInfo getSchemaTypeInfo()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return null;
    }

    public boolean isId()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        return 0;
    }

    public java.lang.String getXmlEncoding()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String xmlEncoding>;

        return $r1;
    }

    public void setXmlEncoding(java.lang.String)
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String xmlEncoding> = r1;

        return;
    }

    public boolean getXmlStandalone()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $z0 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: boolean xmlStandalone>;

        return $z0;
    }

    public void setXmlStandalone(boolean) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        z0 := @parameter0: boolean;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: boolean xmlStandalone> = z0;

        return;
    }

    public java.lang.String getXmlVersion()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String xmlVersion>;

        return $r1;
    }

    public void setXmlVersion(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.dtm.ref.DTMNodeProxy r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMNodeProxy;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String xmlVersion> = r1;

        return;
    }

    static void <clinit>()
    {
        org.apache.xml.dtm.ref.DTMNodeProxy$DTMNodeProxyImplementation $r0;

        <org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String EMPTYSTRING> = "";

        $r0 = new org.apache.xml.dtm.ref.DTMNodeProxy$DTMNodeProxyImplementation;

        specialinvoke $r0.<org.apache.xml.dtm.ref.DTMNodeProxy$DTMNodeProxyImplementation: void <init>()>();

        <org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation implementation> = $r0;

        return;
    }
}
