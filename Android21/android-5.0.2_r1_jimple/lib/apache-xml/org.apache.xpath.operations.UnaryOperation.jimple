public abstract class org.apache.xpath.operations.UnaryOperation extends org.apache.xpath.Expression implements org.apache.xpath.ExpressionOwner
{
    static final long serialVersionUID;
    protected org.apache.xpath.Expression m_right;

    public void <init>()
    {
        org.apache.xpath.operations.UnaryOperation r0;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        specialinvoke r0.<org.apache.xpath.Expression: void <init>()>();

        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.operations.UnaryOperation r0;
        java.util.Vector r1;
        int i0;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        virtualinvoke $r2.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.Expression $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        $r1 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        $z0 = virtualinvoke $r2.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setRight(org.apache.xpath.Expression)
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.Expression r1;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        r1 := @parameter0: org.apache.xpath.Expression;

        r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right> = r1;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.Expression $r2;
        org.apache.xpath.objects.XObject $r3, $r4;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r2 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r4 = virtualinvoke r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)>($r3);

        return $r4;
    }

    public abstract org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException;

    public org.apache.xpath.Expression getOperand()
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        $r1 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        return $r1;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;
        boolean $z0;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        $z0 = virtualinvoke r2.<org.apache.xpath.XPathVisitor: boolean visitUnaryOperation(org.apache.xpath.ExpressionOwner,org.apache.xpath.operations.UnaryOperation)>(r1, r0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(r0, r2);

     label1:
        return;
    }

    public org.apache.xpath.Expression getExpression()
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        $r1 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        return $r1;
    }

    public void setExpression(org.apache.xpath.Expression)
    {
        org.apache.xpath.operations.UnaryOperation r0;
        org.apache.xpath.Expression r1;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        r1 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right> = r1;

        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.operations.UnaryOperation r0, $r2;
        org.apache.xpath.Expression r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.operations.UnaryOperation;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = virtualinvoke r0.<org.apache.xpath.operations.UnaryOperation: boolean isSameClass(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        $r2 = (org.apache.xpath.operations.UnaryOperation) r1;

        $r3 = $r2.<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression m_right>;

        $z1 = virtualinvoke $r4.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.operations.UnaryOperation: long serialVersionUID> = 6536083808424286166L;

        return;
    }
}
