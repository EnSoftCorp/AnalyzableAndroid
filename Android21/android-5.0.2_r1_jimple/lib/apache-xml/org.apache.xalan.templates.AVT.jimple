public class org.apache.xalan.templates.AVT extends java.lang.Object implements java.io.Serializable, org.apache.xalan.templates.XSLTVisitable
{
    static final long serialVersionUID;
    private static final boolean USE_OBJECT_POOL;
    private static final int INIT_BUFFER_CHUNK_BITS;
    private java.lang.String m_simpleString;
    private java.util.Vector m_parts;
    private java.lang.String m_rawName;
    private java.lang.String m_name;
    private java.lang.String m_uri;

    public java.lang.String getRawName()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName>;

        return $r1;
    }

    public void setRawName(java.lang.String)
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName> = r1;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_name>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_name> = r1;

        return;
    }

    public java.lang.String getURI()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri>;

        return $r1;
    }

    public void setURI(java.lang.String)
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri> = r1;

        return;
    }

    public void <init>(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r8, r9, r10, $r16, $r20, $r23, $r28, r37;
        org.apache.xalan.templates.ElemTemplateElement r6;
        java.util.StringTokenizer r7, $r12;
        int i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.Throwable r11, $r27;
        org.apache.xml.utils.FastStringBuffer $r13, $r14, r35, r36;
        java.util.Vector $r15, $r17, $r18, $r24, $r29;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xalan.templates.AVTPartSimple $r19, $r25;
        java.lang.Object[] $r21, $r32;
        char $c4, $c7;
        org.apache.xalan.templates.AVTPartXPath $r22;
        java.util.NoSuchElementException $r26;
        javax.xml.transform.TransformerException $r30, $r33;
        org.xml.sax.SAXException $r31, $r34, r39, r40;
        org.apache.xpath.XPath r38;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = null;

        r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts> = null;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri> = r2;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_name> = r3;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName> = r4;

        $r12 = new java.util.StringTokenizer;

        specialinvoke $r12.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r5, "{}\"\'", 1);

        r7 = $r12;

        i0 = virtualinvoke r7.<java.util.StringTokenizer: int countTokens()>();

        if i0 >= 2 goto label01;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = r5;

        goto label38;

     label01:
        $r14 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r14.<org.apache.xml.utils.FastStringBuffer: void <init>(int)>(6);

        r35 = $r14;

        $r13 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r13.<org.apache.xml.utils.FastStringBuffer: void <init>(int)>(6);

        r36 = $r13;

     label02:
        $r15 = new java.util.Vector;

        $i1 = i0 + 1;

        specialinvoke $r15.<java.util.Vector: void <init>(int)>($i1);

        r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts> = $r15;

        r8 = null;

        r9 = null;

     label03:
        $z0 = virtualinvoke r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label34;

        if r8 == null goto label04;

        r37 = r8;

        r8 = null;

        goto label05;

     label04:
        r37 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label05:
        $i3 = virtualinvoke r37.<java.lang.String: int length()>();

        if $i3 != 1 goto label29;

        $c4 = virtualinvoke r37.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c4)
        {
            case 34: goto label06;
            case 39: goto label06;
            case 123: goto label07;
            case 125: goto label23;
            default: goto label28;
        };

     label06:
        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r37);

        goto label30;

     label07:
        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("{");

        if $z2 == 0 goto label09;

        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r8 = null;

     label08:
        goto label30;

     label09:
        $i6 = virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i6 <= 0 goto label10;

        $r29 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r25 = new org.apache.xalan.templates.AVTPartSimple;

        $r28 = virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.xalan.templates.AVTPartSimple: void <init>(java.lang.String)>($r28);

        virtualinvoke $r29.<java.util.Vector: void addElement(java.lang.Object)>($r25);

        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label10:
        virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label11:
        if null == r8 goto label19;

        $i5 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i5 != 1 goto label18;

        $c7 = virtualinvoke r8.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c7)
        {
            case 34: goto label12;
            case 39: goto label12;
            case 123: goto label15;
            case 125: goto label16;
            default: goto label17;
        };

     label12:
        virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r10 = r8;

        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label13:
        $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z3 != 0 goto label14;

        virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label13;

     label14:
        virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label11;

     label15:
        r9 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_CURLYBRACE", null);

        r8 = null;

        goto label11;

     label16:
        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r23 = virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        r38 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>($r23, r6);

        $r24 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r22 = new org.apache.xalan.templates.AVTPartXPath;

        specialinvoke $r22.<org.apache.xalan.templates.AVTPartXPath: void <init>(org.apache.xpath.XPath)>(r38);

        virtualinvoke $r24.<java.util.Vector: void addElement(java.lang.Object)>($r22);

        r8 = null;

        goto label11;

     label17:
        virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label11;

     label18:
        virtualinvoke r36.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label11;

     label19:
        if r9 == null goto label21;

     label20:
        goto label30;

     label21:
        goto label30;

     label22:
        $r26 := @caughtexception;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = r3;

        $r32[1] = r5;

        r9 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r32);

        goto label30;

     label23:
        r8 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z1 == 0 goto label24;

        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r8);

        r8 = null;

        goto label30;

     label24:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>("WG_FOUND_CURLYBRACE", null);

     label25:
        goto label27;

     label26:
        $r34 := @caughtexception;

        r39 = $r34;

        $r33 = new javax.xml.transform.TransformerException;

        specialinvoke $r33.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r39);

        throw $r33;

     label27:
        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>("}");

        goto label30;

     label28:
        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r37);

        goto label30;

     label29:
        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r37);

     label30:
        if null == r9 goto label03;

     label31:
        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r9;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>("WG_ATTR_TEMPLATE", $r21);

     label32:
        goto label34;

     label33:
        $r31 := @caughtexception;

        r40 = $r31;

        $r30 = new javax.xml.transform.TransformerException;

        specialinvoke $r30.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r40);

        throw $r30;

     label34:
        $i2 = virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i2 <= 0 goto label35;

        $r18 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r19 = new org.apache.xalan.templates.AVTPartSimple;

        $r20 = virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.xalan.templates.AVTPartSimple: void <init>(java.lang.String)>($r20);

        virtualinvoke $r18.<java.util.Vector: void addElement(java.lang.Object)>($r19);

        virtualinvoke r35.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label35:
        goto label38;

     label36:
        $r27 := @caughtexception;

        r11 = $r27;

     label37:
        throw r11;

     label38:
        $r17 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null != $r17 goto label39;

        $r16 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null != $r16 goto label39;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = "";

     label39:
        return;

        catch java.util.NoSuchElementException from label07 to label08 with label22;
        catch java.util.NoSuchElementException from label09 to label20 with label22;
        catch org.xml.sax.SAXException from label24 to label25 with label26;
        catch org.xml.sax.SAXException from label31 to label32 with label33;
        catch java.lang.Throwable from label02 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    public java.lang.String getSimpleString()
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xml.utils.FastStringBuffer r1;
        int i0, i1;
        org.apache.xalan.templates.AVTPart r2;
        java.lang.Throwable r3, $r10;
        java.lang.String $r4, $r9, $r11, r12;
        java.util.Vector $r5, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null == $r4 goto label1;

        $r11 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        return $r11;

     label1:
        $r5 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r5 goto label9;

        r1 = specialinvoke r0.<org.apache.xalan.templates.AVT: org.apache.xml.utils.FastStringBuffer getBuffer()>();

        $r6 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r7 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.xalan.templates.AVTPart) $r8;

        $r9 = virtualinvoke r2.<org.apache.xalan.templates.AVTPart: java.lang.String getSimpleString()>();

        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label3;

     label4:
        r12 = virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

     label5:
        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        goto label8;

     label6:
        $r10 := @caughtexception;

        r3 = $r10;

     label7:
        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        throw r3;

     label8:
        return r12;

     label9:
        return "";

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.lang.String evaluate(org.apache.xpath.XPathContext, int, org.apache.xml.utils.PrefixResolver) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2;
        org.apache.xml.utils.PrefixResolver r2;
        org.apache.xml.utils.FastStringBuffer r3;
        org.apache.xalan.templates.AVTPart r4;
        java.lang.Throwable r5, $r11;
        java.lang.String $r6, $r12, r13;
        java.util.Vector $r7, $r8, $r10;
        java.lang.Object $r9;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xml.utils.PrefixResolver;

        $r6 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null == $r6 goto label1;

        $r12 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        return $r12;

     label1:
        $r7 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r7 goto label9;

        r3 = specialinvoke r0.<org.apache.xalan.templates.AVT: org.apache.xml.utils.FastStringBuffer getBuffer()>();

        $r8 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i1 = virtualinvoke $r8.<java.util.Vector: int size()>();

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        $r10 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r9 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r4 = (org.apache.xalan.templates.AVTPart) $r9;

        virtualinvoke r4.<org.apache.xalan.templates.AVTPart: void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)>(r1, r3, i0, r2);

        i2 = i2 + 1;

        goto label3;

     label4:
        r13 = virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

     label5:
        virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        goto label8;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

     label7:
        virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        throw r5;

     label8:
        return r13;

     label9:
        return "";

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isContextInsensitive()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xalan.templates.AVT r0;
        int i0, i1;
        org.apache.xalan.templates.AVTPart r1;
        java.util.Vector $r2, $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r2 goto label3;

        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r1 = (org.apache.xalan.templates.AVTPart) $r5;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.AVTPart: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xalan.templates.AVT r0;
        java.util.Vector r1, $r3, $r4, $r5;
        int i0, i1, i2;
        org.apache.xalan.templates.AVTPart r2;
        java.lang.Object $r6;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r3 goto label2;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i1 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r5 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r2 = (org.apache.xalan.templates.AVTPart) $r6;

        virtualinvoke r2.<org.apache.xalan.templates.AVTPart: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void callVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        int i0, i1;
        org.apache.xalan.templates.AVTPart r2;
        boolean $z0;
        java.util.Vector $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitAVT(org.apache.xalan.templates.AVT)>(r0);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if null == $r3 goto label2;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.xalan.templates.AVTPart) $r6;

        virtualinvoke r2.<org.apache.xalan.templates.AVTPart: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isSimple()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final org.apache.xml.utils.FastStringBuffer getBuffer()
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xml.utils.FastStringBuffer $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r1.<org.apache.xml.utils.FastStringBuffer: void <init>(int)>(8);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.AVT: int INIT_BUFFER_CHUNK_BITS> = 8;

        <org.apache.xalan.templates.AVT: boolean USE_OBJECT_POOL> = 0;

        <org.apache.xalan.templates.AVT: long serialVersionUID> = 5167607155517042691L;

        return;
    }
}
