public class org.apache.xpath.operations.VariableSafeAbsRef extends org.apache.xpath.operations.Variable
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.operations.VariableSafeAbsRef r0;

        r0 := @this: org.apache.xpath.operations.VariableSafeAbsRef;

        specialinvoke r0.<org.apache.xpath.operations.Variable: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext, boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.operations.VariableSafeAbsRef r0;
        org.apache.xpath.XPathContext r1;
        boolean z0;
        org.apache.xpath.objects.XNodeSet r2;
        org.apache.xml.dtm.DTMManager r3;
        int i0, $i1, $i2, $i3;
        org.apache.xpath.Expression r4;
        org.apache.xpath.objects.XObject $r5;
        org.apache.xml.dtm.DTM $r6, $r7;
        org.apache.xml.dtm.DTMIterator $r8, $r9;

        r0 := @this: org.apache.xpath.operations.VariableSafeAbsRef;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        z0 := @parameter1: boolean;

        $r5 = specialinvoke r0.<org.apache.xpath.operations.Variable: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)>(r1, z0);

        r2 = (org.apache.xpath.objects.XNodeSet) $r5;

        r3 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getContextNode()>();

        $i1 = virtualinvoke r2.<org.apache.xpath.objects.XNodeSet: int getRoot()>();

        $r6 = virtualinvoke r3.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(int)>($i1);

        $i2 = interfaceinvoke $r6.<org.apache.xml.dtm.DTM: int getDocument()>();

        $r7 = virtualinvoke r3.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $i3 = interfaceinvoke $r7.<org.apache.xml.dtm.DTM: int getDocument()>();

        if $i2 == $i3 goto label1;

        $r8 = virtualinvoke r2.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        r4 = (org.apache.xpath.Expression) $r8;

        $r9 = virtualinvoke r4.<org.apache.xpath.Expression: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>(r1, i0);

        r2 = (org.apache.xpath.objects.XNodeSet) $r9;

     label1:
        return r2;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.operations.VariableSafeAbsRef: long serialVersionUID> = -9174661990819967452L;

        return;
    }
}
