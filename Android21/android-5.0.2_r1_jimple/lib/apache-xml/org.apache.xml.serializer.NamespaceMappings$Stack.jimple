class org.apache.xml.serializer.NamespaceMappings$Stack extends java.lang.Object
{
    private int top;
    private int max;
    java.lang.Object[] m_stack;
    final org.apache.xml.serializer.NamespaceMappings this$0;

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0, r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.xml.serializer.NamespaceMappings $r3;
        java.lang.Object[] $r4, $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        $r2 = new org.apache.xml.serializer.NamespaceMappings$Stack;

        $r3 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: org.apache.xml.serializer.NamespaceMappings this$0>;

        specialinvoke $r2.<org.apache.xml.serializer.NamespaceMappings$Stack: void <init>(org.apache.xml.serializer.NamespaceMappings)>($r3);

        r1 = $r2;

        $i1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max>;

        r1.<org.apache.xml.serializer.NamespaceMappings$Stack: int max> = $i1;

        $i2 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        r1.<org.apache.xml.serializer.NamespaceMappings$Stack: int top> = $i2;

        $i3 = r1.<org.apache.xml.serializer.NamespaceMappings$Stack: int max>;

        $r4 = newarray (java.lang.Object)[$i3];

        r1.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack> = $r4;

        i0 = 0;

     label1:
        $i4 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if i0 > $i4 goto label2;

        $r7 = r1.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $r5 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $r6 = $r5[i0];

        $r7[i0] = $r6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void <init>(org.apache.xml.serializer.NamespaceMappings)
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        org.apache.xml.serializer.NamespaceMappings r1;
        int $i0;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        r1 := @parameter0: org.apache.xml.serializer.NamespaceMappings;

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: org.apache.xml.serializer.NamespaceMappings this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top> = -1;

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max> = 20;

        $i0 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max>;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack> = $r2;

        return;
    }

    public java.lang.Object push(java.lang.Object)
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object[] r2, $r3, $r4;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        $i2 = $i1 + 1;

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top> = $i2;

        $i4 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max>;

        $i3 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if $i4 > $i3 goto label1;

        $i6 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max>;

        $i7 = 2 * $i6;

        i0 = $i7 + 1;

        r2 = newarray (java.lang.Object)[i0];

        $r4 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $i8 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i8);

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int max> = i0;

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack> = r2;

     label1:
        $r3 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $i5 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        $r3[$i5] = r1;

        return r1;
    }

    public java.lang.Object pop()
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        $i0 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if 0 > $i0 goto label1;

        $r2 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $i1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        r1 = $r2[$i1];

        $i2 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        $i3 = $i2 - 1;

        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top> = $i3;

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public java.lang.Object peek()
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        java.lang.Object r1;
        int $i0, $i1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        $i0 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if 0 > $i0 goto label1;

        $r2 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $i1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        r1 = $r2[$i1];

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public java.lang.Object peek(int)
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $r2 = $r1[i0];

        return $r2;
    }

    public boolean isEmpty()
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        $i0 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean empty()
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        $i0 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clear()
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        int i0, $i1;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        i0 = 0;

     label1:
        $i1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top>;

        if i0 > $i1 goto label2;

        $r1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $r1[i0] = null;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<org.apache.xml.serializer.NamespaceMappings$Stack: int top> = -1;

        return;
    }

    public java.lang.Object getElement(int)
    {
        org.apache.xml.serializer.NamespaceMappings$Stack r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.xml.serializer.NamespaceMappings$Stack;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.serializer.NamespaceMappings$Stack: java.lang.Object[] m_stack>;

        $r2 = $r1[i0];

        return $r2;
    }
}
