public class org.apache.xpath.functions.FuncDoclocation extends org.apache.xpath.functions.FunctionDef1Arg
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.functions.FuncDoclocation r0;

        r0 := @this: org.apache.xpath.functions.FuncDoclocation;

        specialinvoke r0.<org.apache.xpath.functions.FunctionDef1Arg: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncDoclocation r0;
        org.apache.xpath.XPathContext r1;
        int i0;
        java.lang.String r2, $r5;
        org.apache.xml.dtm.DTM r3;
        org.apache.xpath.objects.XString $r4;
        short $s1;

        r0 := @this: org.apache.xpath.functions.FuncDoclocation;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r0.<org.apache.xpath.functions.FuncDoclocation: int getArg0AsNode(org.apache.xpath.XPathContext)>(r1);

        r2 = null;

        if -1 == i0 goto label2;

        r3 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $s1 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

        if 11 != $s1 goto label1;

        i0 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: int getFirstChild(int)>(i0);

     label1:
        if -1 == i0 goto label2;

        r2 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: java.lang.String getDocumentBaseURI()>();

     label2:
        $r4 = new org.apache.xpath.objects.XString;

        if null == r2 goto label3;

        $r5 = r2;

        goto label4;

     label3:
        $r5 = "";

     label4:
        specialinvoke $r4.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r5);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncDoclocation: long serialVersionUID> = 7469213946343568769L;

        return;
    }
}
