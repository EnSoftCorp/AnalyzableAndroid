final class org.apache.xml.serializer.WriterToUTF8Buffered extends java.io.Writer implements org.apache.xml.serializer.WriterChain
{
    private static final int BYTES_MAX;
    private static final int CHARS_MAX;
    private final java.io.OutputStream m_os;
    private final byte[] m_outputBytes;
    private final char[] m_inputChars;
    private int count;

    public void <init>(java.io.OutputStream)
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream r1;
        byte[] $r2;
        char[] $r3;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os> = r1;

        $r2 = newarray (byte)[16387];

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes> = $r2;

        $r3 = newarray (char)[5463];

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars> = $r3;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = 0;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i39, $i40, $i41, $i42, $i43, $i44, $i46, $i48, $i49, $i51, $i52;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b6, $b12, $b19, $b24, $b26, $b36, $b38, $b45, $b47, $b50;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        if $i1 < 16384 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

     label1:
        if i0 >= 128 goto label2;

        $r10 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i52 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i51 = $i52 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i51;

        $b50 = (byte) i0;

        $r10[$i52] = $b50;

        goto label5;

     label2:
        if i0 >= 2048 goto label3;

        $r8 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i42 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i41 = $i42 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i41;

        $i40 = i0 >> 6;

        $i46 = 192 + $i40;

        $b45 = (byte) $i46;

        $r8[$i42] = $b45;

        $r9 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i44 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i43 = $i44 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i43;

        $i49 = i0 & 63;

        $i48 = 128 + $i49;

        $b47 = (byte) $i48;

        $r9[$i44] = $b47;

        goto label5;

     label3:
        if i0 >= 65536 goto label4;

        $r5 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i23 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i25 = $i23 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i25;

        $i28 = i0 >> 12;

        $i29 = 224 + $i28;

        $b26 = (byte) $i29;

        $r5[$i23] = $b26;

        $r6 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i27 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i32 = $i27 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i32;

        $i30 = i0 >> 6;

        $i31 = $i30 & 63;

        $i35 = 128 + $i31;

        $b36 = (byte) $i35;

        $r6[$i27] = $b36;

        $r7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i33 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i34 = $i33 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i34;

        $i39 = i0 & 63;

        $i37 = 128 + $i39;

        $b38 = (byte) $i37;

        $r7[$i33] = $b38;

        goto label5;

     label4:
        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i3 = $i2 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i3;

        $i4 = i0 >> 18;

        $i5 = 240 + $i4;

        $b6 = (byte) $i5;

        $r1[$i2] = $b6;

        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i8 = $i7 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i8;

        $i9 = i0 >> 12;

        $i10 = $i9 & 63;

        $i11 = 128 + $i10;

        $b12 = (byte) $i11;

        $r2[$i7] = $b12;

        $r3 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i14 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i13 = $i14 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i13;

        $i15 = i0 >> 6;

        $i17 = $i15 & 63;

        $i16 = 128 + $i17;

        $b19 = (byte) $i16;

        $r3[$i14] = $b19;

        $r4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i18 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i20 = $i18 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i20;

        $i22 = i0 & 63;

        $i21 = 128 + $i22;

        $b24 = (byte) $i21;

        $r4[$i18] = $b24;

     label5:
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        char[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i10, $i11, $i12, $i13, $i19, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i31, $i32, $i33, $i34, $i36, $i39, $i44, $i47, $i49, $i52, $i56, $i58, $i61, $i62, $i63, i64, i65, i66, i69, i72, i73, i74, i75, i76;
        char c8, c9, $c14, $c16, $c17, $c20, $c35, $c38, $c41, $c42, $c45, $c48, $c50, c67, c68, c70, c71;
        byte $b15, $b18, $b21, $b28, $b30, $b37, $b40, $b43, $b46, $b51, $b57;
        long $l53, $l54, $l55, $l59, $l60;
        byte[] r2;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 3 * i1;

        $i11 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i12 = 16384 - $i11;

        if i2 < $i12 goto label07;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i2 <= 16384 goto label07;

        i3 = i1 / 5461;

        $i58 = i1 % 5461;

        if $i58 <= 0 goto label01;

        i4 = i3 + 1;

        goto label02;

     label01:
        i4 = i3;

     label02:
        i5 = i0;

        i6 = 1;

     label03:
        if i6 > i4 goto label06;

        i7 = i5;

        $l60 = (long) i1;

        $l59 = (long) i6;

        $l54 = $l60 * $l59;

        $l53 = (long) i4;

        $l55 = $l54 / $l53;

        $i56 = (int) $l55;

        i5 = i0 + $i56;

        $i61 = i5 - 1;

        c8 = r1[$i61];

        $i62 = i5 - 1;

        c9 = r1[$i62];

        if c8 < 55296 goto label05;

        if c8 > 56319 goto label05;

        $i63 = i0 + i1;

        if i5 >= $i63 goto label04;

        i5 = i5 + 1;

        goto label05;

     label04:
        i5 = i5 + -1;

     label05:
        i10 = i5 - i7;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)>(r1, i7, i10);

        i6 = i6 + 1;

        goto label03;

     label06:
        return;

     label07:
        i64 = i1 + i0;

        r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i65 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i66 = i0;

     label08:
        if i66 >= i64 goto label09;

        $c50 = r1[i66];

        c67 = $c50;

        if $c50 >= 128 goto label09;

        $i49 = i65;

        i65 = i65 + 1;

        $b57 = (byte) c67;

        r2[$i49] = $b57;

        i66 = i66 + 1;

        goto label08;

     label09:
        if i66 >= i64 goto label14;

        c68 = r1[i66];

        if c68 >= 128 goto label10;

        $i52 = i65;

        i65 = i65 + 1;

        $b51 = (byte) c68;

        r2[$i52] = $b51;

        goto label13;

     label10:
        if c68 >= 2048 goto label11;

        i69 = i65 + 1;

        $c45 = c68 >> 6;

        $i44 = 192 + $c45;

        $b43 = (byte) $i44;

        r2[i65] = $b43;

        i65 = i69 + 1;

        $c48 = c68 & 63;

        $i47 = 128 + $c48;

        $b46 = (byte) $i47;

        r2[i69] = $b46;

        goto label13;

     label11:
        if c68 < 55296 goto label12;

        if c68 > 56319 goto label12;

        c70 = c68;

        i66 = i66 + 1;

        c71 = r1[i66];

        i72 = i65 + 1;

        $i23 = c70 + 64;

        $i25 = $i23 >> 8;

        $i24 = $i25 & 240;

        $i27 = 240 | $i24;

        $b28 = (byte) $i27;

        r2[i65] = $b28;

        i73 = i72 + 1;

        $i26 = c70 + 64;

        $i31 = $i26 >> 2;

        $i32 = $i31 & 63;

        $i29 = 128 | $i32;

        $b30 = (byte) $i29;

        r2[i72] = $b30;

        i74 = i73 + 1;

        $c35 = c71 >> 6;

        $c38 = $c35 & 15;

        $i33 = c70 << 4;

        $i34 = $i33 & 48;

        $i39 = $c38 + $i34;

        $i36 = 128 | $i39;

        $b37 = (byte) $i36;

        r2[i73] = $b37;

        i65 = i74 + 1;

        $c42 = c71 & 63;

        $c41 = 128 | $c42;

        $b40 = (byte) $c41;

        r2[i74] = $b40;

        goto label13;

     label12:
        i75 = i65 + 1;

        $c14 = c68 >> 12;

        $i13 = 224 + $c14;

        $b15 = (byte) $i13;

        r2[i65] = $b15;

        i76 = i75 + 1;

        $c17 = c68 >> 6;

        $c16 = $c17 & 63;

        $i19 = 128 + $c16;

        $b18 = (byte) $i19;

        r2[i75] = $b18;

        i65 = i76 + 1;

        $c20 = c68 & 63;

        $i22 = 128 + $c20;

        $b21 = (byte) $i22;

        r2[i76] = $b21;

     label13:
        i66 = i66 + 1;

        goto label09;

     label14:
        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i65;

        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i13, $i15, $i18, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i33, $i34, $i35, $i40, $i43, $i48, $i54, $i56, $i58, $i59, i60, i61, i62, i65, i68, i69, i70, i71, i72;
        char c8, $c11, $c14, $c16, $c19, $c30, $c36, $c37, $c38, $c41, $c44, $c46, c63, c64, c66, c67;
        char[] $r2, $r3, $r4, $r5, r6;
        byte $b12, $b17, $b20, $b23, $b32, $b39, $b42, $b45, $b47, $b49, $b55;
        long $l50, $l51, $l52, $l53, $l57;
        byte[] r7;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = 3 * i0;

        $i9 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i10 = 16384 - $i9;

        if i1 < $i10 goto label06;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i1 <= 16384 goto label06;

        i2 = i0 / 5461;

        $i56 = i0 % 5461;

        if $i56 <= 0 goto label01;

        i3 = i2 + 1;

        goto label02;

     label01:
        i3 = i2;

     label02:
        i4 = 0;

        i5 = 1;

     label03:
        if i5 > i3 goto label05;

        i6 = i4;

        $l50 = (long) i0;

        $l57 = (long) i5;

        $l52 = $l50 * $l57;

        $l51 = (long) i3;

        $l53 = $l52 / $l51;

        $i58 = (int) $l53;

        i4 = 0 + $i58;

        $r4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i6, i4, $r4, 0);

        i7 = i4 - i6;

        $r5 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        $i59 = i7 - 1;

        c8 = $r5[$i59];

        if c8 < 55296 goto label04;

        if c8 > 56319 goto label04;

        i4 = i4 + -1;

        i7 = i7 + -1;

        if i5 != i3 goto label04;

     label04:
        $r3 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)>($r3, 0, i7);

        i5 = i5 + 1;

        goto label03;

     label05:
        return;

     label06:
        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r2, 0);

        r6 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        i60 = i0;

        r7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i61 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i62 = 0;

     label07:
        if i62 >= i60 goto label08;

        $c46 = r6[i62];

        c63 = $c46;

        if $c46 >= 128 goto label08;

        $i54 = i61;

        i61 = i61 + 1;

        $b55 = (byte) c63;

        r7[$i54] = $b55;

        i62 = i62 + 1;

        goto label07;

     label08:
        if i62 >= i60 goto label13;

        c64 = r6[i62];

        if c64 >= 128 goto label09;

        $i48 = i61;

        i61 = i61 + 1;

        $b47 = (byte) c64;

        r7[$i48] = $b47;

        goto label12;

     label09:
        if c64 >= 2048 goto label10;

        i65 = i61 + 1;

        $c41 = c64 >> 6;

        $i40 = 192 + $c41;

        $b45 = (byte) $i40;

        r7[i61] = $b45;

        i61 = i65 + 1;

        $c44 = c64 & 63;

        $i43 = 128 + $c44;

        $b49 = (byte) $i43;

        r7[i65] = $b49;

        goto label12;

     label10:
        if c64 < 55296 goto label11;

        if c64 > 56319 goto label11;

        c66 = c64;

        i62 = i62 + 1;

        c67 = r6[i62];

        i68 = i61 + 1;

        $i22 = c66 + 64;

        $i21 = $i22 >> 8;

        $i24 = $i21 & 240;

        $i25 = 240 | $i24;

        $b23 = (byte) $i25;

        r7[i61] = $b23;

        i69 = i68 + 1;

        $i28 = c66 + 64;

        $i29 = $i28 >> 2;

        $i26 = $i29 & 63;

        $i27 = 128 | $i26;

        $b32 = (byte) $i27;

        r7[i68] = $b32;

        i70 = i69 + 1;

        $c30 = c67 >> 6;

        $c36 = $c30 & 15;

        $i31 = c66 << 4;

        $i35 = $i31 & 48;

        $i33 = $c36 + $i35;

        $i34 = 128 | $i33;

        $b39 = (byte) $i34;

        r7[i69] = $b39;

        i61 = i70 + 1;

        $c38 = c67 & 63;

        $c37 = 128 | $c38;

        $b42 = (byte) $c37;

        r7[i70] = $b42;

        goto label12;

     label11:
        i71 = i61 + 1;

        $c11 = c64 >> 12;

        $i13 = 224 + $c11;

        $b12 = (byte) $i13;

        r7[i61] = $b12;

        i72 = i71 + 1;

        $c14 = c64 >> 6;

        $c16 = $c14 & 63;

        $i15 = 128 + $c16;

        $b17 = (byte) $i15;

        r7[i71] = $b17;

        i61 = i72 + 1;

        $c19 = c64 & 63;

        $i18 = 128 + $c19;

        $b20 = (byte) $i18;

        r7[i72] = $b20;

     label12:
        i62 = i62 + 1;

        goto label08;

     label13:
        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i61;

        return;
    }

    public void flushBuffer() throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        int $i0, $i1;
        byte[] $r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        $i0 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i1);

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = 0;

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public java.io.OutputStream getOutputStream()
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        return $r1;
    }

    public java.io.Writer getWriter()
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        return null;
    }

    public static void <clinit>()
    {
        <org.apache.xml.serializer.WriterToUTF8Buffered: int CHARS_MAX> = 5461;

        <org.apache.xml.serializer.WriterToUTF8Buffered: int BYTES_MAX> = 16384;

        return;
    }
}
