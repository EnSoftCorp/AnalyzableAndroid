public class org.apache.xalan.templates.FuncDocument extends org.apache.xpath.functions.Function2Args
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.FuncDocument r0;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.FuncDocument r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, i9;
        org.apache.xml.dtm.DTM r2, r9, $r17, r23;
        org.apache.xpath.objects.XObject r3, r6;
        java.lang.String r4, $r16;
        org.apache.xpath.Expression r5, $r10;
        org.apache.xpath.objects.XNodeSet r7, $r14, $r22, r24;
        org.apache.xml.utils.XMLString r8, $r15;
        org.apache.xml.utils.PrefixResolver $r11, $r12;
        org.apache.xml.dtm.DTMManager $r13, $r21;
        boolean $z0, $z1;
        org.apache.xml.dtm.DTMIterator $r18, $r19, r26;
        org.apache.xpath.NodeSetDTM r25;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getDocumentRoot(int)>(i0);

        $r10 = virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: org.apache.xpath.Expression getArg0()>();

        r3 = virtualinvoke $r10.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r4 = "";

        r5 = virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: org.apache.xpath.Expression getArg1()>();

        if null == r5 goto label04;

        r6 = virtualinvoke r5.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $i8 = virtualinvoke r6.<org.apache.xpath.objects.XObject: int getType()>();

        if 4 != $i8 goto label02;

        $r19 = virtualinvoke r6.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        i2 = interfaceinvoke $r19.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        if i2 != -1 goto label01;

        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_EMPTY_SECOND_ARG", null);

        $r22 = new org.apache.xpath.objects.XNodeSet;

        $r21 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r22.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMManager)>($r21);

        r7 = $r22;

        return r7;

     label01:
        r23 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i2);

        r4 = interfaceinvoke r23.<org.apache.xml.dtm.DTM: java.lang.String getDocumentBaseURI()>();

        goto label03;

     label02:
        virtualinvoke r6.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

     label03:
        goto label07;

     label04:
        $r11 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        if null == $r11 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void assertion(boolean,java.lang.String)>($z1, "Namespace context can not be null!");

        $r12 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        r4 = interfaceinvoke $r12.<org.apache.xml.utils.PrefixResolver: java.lang.String getBaseIdentifier()>();

     label07:
        $r14 = new org.apache.xpath.objects.XNodeSet;

        $r13 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r14.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMManager)>($r13);

        r24 = $r14;

        r25 = virtualinvoke r24.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        $i6 = virtualinvoke r3.<org.apache.xpath.objects.XObject: int getType()>();

        if 4 != $i6 goto label08;

        $r18 = virtualinvoke r3.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        goto label09;

     label08:
        $r18 = null;

     label09:
        r26 = $r18;

        i3 = -1;

     label10:
        if null == r26 goto label11;

        $i7 = interfaceinvoke r26.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        i3 = $i7;

        if -1 == $i7 goto label20;

     label11:
        if null == r26 goto label12;

        $r17 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i3);

        $r15 = interfaceinvoke $r17.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i3);

        goto label13;

     label12:
        $r15 = virtualinvoke r3.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

     label13:
        r8 = $r15;

        if null != r5 goto label14;

        if -1 == i3 goto label14;

        r9 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i3);

        r4 = interfaceinvoke r9.<org.apache.xml.dtm.DTM: java.lang.String getDocumentBaseURI()>();

     label14:
        if null != r8 goto label15;

        goto label10;

     label15:
        if -1 != i1 goto label16;

        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "ER_NO_CONTEXT_OWNERDOC", null);

     label16:
        i9 = interfaceinvoke r8.<org.apache.xml.utils.XMLString: int indexOf(int)>(58);

        i4 = interfaceinvoke r8.<org.apache.xml.utils.XMLString: int indexOf(int)>(47);

        if i9 == -1 goto label17;

        if i4 == -1 goto label17;

        if i9 >= i4 goto label17;

        r4 = null;

     label17:
        $r16 = interfaceinvoke r8.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        i5 = virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)>(r1, i0, $r16, r4);

        if -1 == i5 goto label18;

        $z0 = virtualinvoke r25.<org.apache.xpath.NodeSetDTM: boolean contains(int)>(i5);

        if $z0 != 0 goto label18;

        virtualinvoke r25.<org.apache.xpath.NodeSetDTM: void addElement(int)>(i5);

     label18:
        if null == r26 goto label20;

        if i5 != -1 goto label19;

        goto label20;

     label19:
        goto label10;

     label20:
        return r24;
    }

    int getDoc(org.apache.xpath.XPathContext, int, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.FuncDocument r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, $i2, $i5, $i6, $i7;
        java.lang.String r2, r3, $r19, $r23, $r27, $r28, $r37, $r44, $r47, $r49, $r51, $r52, $r57, $r61, $r65, $r70, $r72, $r74, r81;
        org.apache.xpath.SourceTreeManager r4;
        javax.xml.transform.Source r5;
        java.io.IOException r6, $r32, $r71, r80;
        java.lang.Throwable r7, r11, $r35;
        java.io.StringWriter r8, $r42;
        java.io.PrintWriter r9, $r41;
        javax.xml.transform.TransformerException r10, r12, $r33, $r69, $r76, $r78, r79;
        javax.xml.transform.SourceLocator r13, $r14, $r31, $r34, $r36, $r77;
        java.lang.Object[] $r15, $r22, $r29;
        java.lang.StringBuilder $r17, $r18, $r20, $r24, $r25, $r26, $r40, $r43, $r46, $r48, $r50, $r53, $r55, $r56, $r58, $r59, $r60, $r63, $r64, $r66, $r67, $r68, $r75;
        org.apache.xml.utils.PrefixResolver $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Exception $r38;
        org.apache.xml.utils.WrappedRuntimeException $r39, $r54, $r73;
        java.lang.Class $r45, $r62;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

     label01:
        $r14 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        r5 = virtualinvoke r4.<org.apache.xpath.SourceTreeManager: javax.xml.transform.Source resolveURI(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator)>(r3, r2, $r14);

        i1 = virtualinvoke r4.<org.apache.xpath.SourceTreeManager: int getNode(javax.xml.transform.Source)>(r5);

     label02:
        goto label05;

     label03:
        $r71 := @caughtexception;

        r6 = $r71;

        $r69 = new javax.xml.transform.TransformerException;

        $r70 = virtualinvoke r6.<java.io.IOException: java.lang.String getMessage()>();

        $r77 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        specialinvoke $r69.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator,java.lang.Throwable)>($r70, $r77, r6);

        throw $r69;

     label04:
        $r78 := @caughtexception;

        r79 = $r78;

        $r76 = new javax.xml.transform.TransformerException;

        specialinvoke $r76.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r79);

        throw $r76;

     label05:
        if -1 == i1 goto label06;

        return i1;

     label06:
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label10;

        $r30 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        r2 = interfaceinvoke $r30.<org.apache.xml.utils.PrefixResolver: java.lang.String getBaseIdentifier()>();

     label07:
        $r34 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        r5 = virtualinvoke r4.<org.apache.xpath.SourceTreeManager: javax.xml.transform.Source resolveURI(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator)>(r3, r2, $r34);

     label08:
        goto label10;

     label09:
        $r32 := @caughtexception;

        r80 = $r32;

        $r33 = new javax.xml.transform.TransformerException;

        $r37 = virtualinvoke r80.<java.io.IOException: java.lang.String getMessage()>();

        $r36 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        specialinvoke $r33.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator,java.lang.Throwable)>($r37, $r36, r80);

        throw $r33;

     label10:
        r81 = null;

     label11:
        if null == r2 goto label12;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i5 <= 0 goto label12;

        $r31 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        i1 = virtualinvoke r4.<org.apache.xpath.SourceTreeManager: int getSourceTree(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)>(r5, $r31, r1);

        goto label15;

     label12:
        $r15 = newarray (java.lang.Object)[1];

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        if r3 != null goto label13;

        $r27 = "";

        goto label14;

     label13:
        $r27 = r3;

     label14:
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15[0] = $r19;

        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_CANNOT_MAKE_URL_FROM", $r15);

     label15:
        goto label29;

     label16:
        $r35 := @caughtexception;

        r7 = $r35;

        i1 = -1;

     label17:
        $z0 = r7 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z0 == 0 goto label18;

        $r73 = (org.apache.xml.utils.WrappedRuntimeException) r7;

        r7 = virtualinvoke $r73.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

        goto label17;

     label18:
        $z2 = r7 instanceof java.lang.NullPointerException;

        if $z2 != 0 goto label19;

        $z1 = r7 instanceof java.lang.ClassCastException;

        if $z1 == 0 goto label20;

     label19:
        $r39 = new org.apache.xml.utils.WrappedRuntimeException;

        $r38 = (java.lang.Exception) r7;

        specialinvoke $r39.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r38);

        throw $r39;

     label20:
        $r42 = new java.io.StringWriter;

        specialinvoke $r42.<java.io.StringWriter: void <init>()>();

        r8 = $r42;

        $r41 = new java.io.PrintWriter;

        specialinvoke $r41.<java.io.PrintWriter: void <init>(java.io.Writer)>(r8);

        r9 = $r41;

        $z3 = r7 instanceof javax.xml.transform.TransformerException;

        if $z3 == 0 goto label27;

        r10 = (javax.xml.transform.TransformerException) r7;

        r11 = r10;

     label21:
        if null == r11 goto label26;

        $r47 = virtualinvoke r11.<java.lang.Throwable: java.lang.String getMessage()>();

        if null == $r47 goto label22;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r62 = virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        $r61 = virtualinvoke $r62.<java.lang.Class: java.lang.String getName()>();

        $r64 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r74 = virtualinvoke r11.<java.lang.Throwable: java.lang.String getMessage()>();

        $r75 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r72);

     label22:
        $z4 = r11 instanceof javax.xml.transform.TransformerException;

        if $z4 == 0 goto label25;

        r12 = (javax.xml.transform.TransformerException) r11;

        r13 = virtualinvoke r12.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()>();

        if null == r13 goto label23;

        $r52 = interfaceinvoke r13.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        if null == $r52 goto label23;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ID: ");

        $r57 = interfaceinvoke r13.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Line #");

        $i6 = interfaceinvoke r13.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r55 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Column #");

        $i7 = interfaceinvoke r13.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        $r66 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r65);

     label23:
        r11 = virtualinvoke r12.<javax.xml.transform.TransformerException: java.lang.Throwable getException()>();

        $z5 = r11 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z5 == 0 goto label24;

        $r54 = (org.apache.xml.utils.WrappedRuntimeException) r11;

        r11 = virtualinvoke $r54.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

     label24:
        goto label21;

     label25:
        r11 = null;

        goto label21;

     label26:
        goto label28;

     label27:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r45 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        $r44 = virtualinvoke $r45.<java.lang.Class: java.lang.String getName()>();

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r49 = virtualinvoke r7.<java.lang.Throwable: java.lang.String getMessage()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r51);

     label28:
        r81 = virtualinvoke r7.<java.lang.Throwable: java.lang.String getMessage()>();

     label29:
        if -1 != i1 goto label35;

        if null == r81 goto label30;

        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r81;

        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_CANNOT_LOAD_REQUESTED_DOC", $r29);

        goto label35;

     label30:
        $r22 = newarray (java.lang.Object)[1];

        if r2 != null goto label33;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        if r3 != null goto label31;

        $r28 = "";

        goto label32;

     label31:
        $r28 = r3;

     label32:
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label34;

     label33:
        $r23 = virtualinvoke r2.<java.lang.String: java.lang.String toString()>();

     label34:
        $r22[0] = $r23;

        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_CANNOT_LOAD_REQUESTED_DOC", $r22);

     label35:
        return i1;

        catch java.io.IOException from label01 to label02 with label03;
        catch javax.xml.transform.TransformerException from label01 to label02 with label04;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label15 with label16;
    }

    public void error(org.apache.xpath.XPathContext, java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.FuncDocument r0;
        org.apache.xpath.XPathContext r1;
        java.lang.String r2, r4;
        java.lang.Object[] r3;
        javax.xml.transform.ErrorListener r5;
        javax.xml.transform.TransformerException r6, $r7;
        javax.xml.transform.SourceLocator $r8;
        java.io.PrintStream $r9;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>(r2, r3);

        r5 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()>();

        $r7 = new javax.xml.transform.TransformerException;

        $r8 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        specialinvoke $r7.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r4, $r8);

        r6 = $r7;

        if null == r5 goto label1;

        interfaceinvoke r5.<javax.xml.transform.ErrorListener: void error(javax.xml.transform.TransformerException)>(r6);

        goto label2;

     label1:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(r4);

     label2:
        return;
    }

    public void warn(org.apache.xpath.XPathContext, java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.FuncDocument r0;
        org.apache.xpath.XPathContext r1;
        java.lang.String r2, r4;
        java.lang.Object[] r3;
        javax.xml.transform.ErrorListener r5;
        javax.xml.transform.TransformerException r6, $r7;
        javax.xml.transform.SourceLocator $r8;
        java.io.PrintStream $r9;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createWarning(java.lang.String,java.lang.Object[])>(r2, r3);

        r5 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()>();

        $r7 = new javax.xml.transform.TransformerException;

        $r8 = virtualinvoke r1.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        specialinvoke $r7.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r4, $r8);

        r6 = $r7;

        if null == r5 goto label1;

        interfaceinvoke r5.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>(r6);

        goto label2;

     label1:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(r4);

     label2:
        return;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xalan.templates.FuncDocument r0;
        int i0;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 2 goto label2;

     label1:
        virtualinvoke r0.<org.apache.xalan.templates.FuncDocument: void reportWrongNumberArgs()>();

     label2:
        return;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xalan.templates.FuncDocument r0;
        org.apache.xpath.functions.WrongNumberArgsException $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        $r1 = new org.apache.xpath.functions.WrongNumberArgsException;

        $r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ONE_OR_TWO", null);

        specialinvoke $r1.<org.apache.xpath.functions.WrongNumberArgsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public boolean isNodesetExpr()
    {
        org.apache.xalan.templates.FuncDocument r0;

        r0 := @this: org.apache.xalan.templates.FuncDocument;

        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.FuncDocument: long serialVersionUID> = 2483304325971281424L;

        return;
    }
}
