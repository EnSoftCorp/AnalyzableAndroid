public class org.apache.xpath.functions.FuncLang extends org.apache.xpath.functions.FunctionOneArg
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.functions.FuncLang r0;

        r0 := @this: org.apache.xpath.functions.FuncLang;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncLang r0;
        org.apache.xpath.XPathContext r1;
        java.lang.String r2, r4, $r8, $r9;
        int i0, i1, i2, $i5;
        boolean z0, $z1;
        org.apache.xml.dtm.DTM r3;
        org.apache.xpath.Expression $r5;
        org.apache.xpath.objects.XObject $r6;
        org.apache.xpath.objects.XBoolean $r7;
        short $s3;
        char $c4;

        r0 := @this: org.apache.xpath.functions.FuncLang;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r5 = r0.<org.apache.xpath.functions.FuncLang: org.apache.xpath.Expression m_arg0>;

        $r6 = virtualinvoke $r5.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r2 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        z0 = 0;

        r3 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

     label1:
        if -1 == i0 goto label5;

        $s3 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

        if 1 != $s3 goto label4;

        i1 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: int getAttributeNode(int,java.lang.String,java.lang.String)>(i0, "http://www.w3.org/XML/1998/namespace", "lang");

        if -1 == i1 goto label4;

        r4 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>(i1);

        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z1 == 0 goto label5;

        i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i5 == i2 goto label2;

        $c4 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i2);

        if $c4 != 45 goto label3;

     label2:
        z0 = 1;

     label3:
        goto label5;

     label4:
        i0 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: int getParent(int)>(i0);

        goto label1;

     label5:
        if z0 == 0 goto label6;

        $r7 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_TRUE>;

        goto label7;

     label6:
        $r7 = <org.apache.xpath.objects.XBoolean: org.apache.xpath.objects.XBoolean S_FALSE>;

     label7:
        return $r7;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncLang: long serialVersionUID> = -7868705139354872185L;

        return;
    }
}
