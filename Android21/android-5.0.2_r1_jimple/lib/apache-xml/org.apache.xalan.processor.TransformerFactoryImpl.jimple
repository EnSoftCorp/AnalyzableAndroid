public class org.apache.xalan.processor.TransformerFactoryImpl extends javax.xml.transform.sax.SAXTransformerFactory
{
    public static final java.lang.String XSLT_PROPERTIES;
    private boolean m_isSecureProcessing;
    public static final java.lang.String FEATURE_INCREMENTAL;
    public static final java.lang.String FEATURE_OPTIMIZE;
    public static final java.lang.String FEATURE_SOURCE_LOCATION;
    private java.lang.String m_DOMsystemID;
    private boolean m_optimize;
    private boolean m_source_location;
    private boolean m_incremental;
    javax.xml.transform.URIResolver m_uriResolver;
    private javax.xml.transform.ErrorListener m_errorListener;

    public void <init>()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xml.utils.DefaultErrorHandler $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        specialinvoke r0.<javax.xml.transform.sax.SAXTransformerFactory: void <init>()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing> = 0;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID> = null;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = 1;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = 0;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental> = 0;

        $r1 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r1.<org.apache.xml.utils.DefaultErrorHandler: void <init>(boolean)>(0);

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener> = $r1;

        return;
    }

    public javax.xml.transform.Templates processFromNode(org.w3c.dom.Node) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.w3c.dom.Node r1;
        javax.xml.transform.sax.TemplatesHandler r2;
        org.apache.xml.utils.TreeWalker r3, $r4;
        org.apache.xml.utils.DOM2Helper $r5;
        java.lang.String $r6, $r11, $r22;
        javax.xml.transform.Templates $r7;
        org.xml.sax.SAXException $r8, r27;
        javax.xml.transform.ErrorListener $r9, $r13, $r20, $r24;
        javax.xml.transform.TransformerConfigurationException $r10, $r14, $r16, $r18, $r19, $r25, $r26, r28, r30, r32;
        javax.xml.transform.TransformerException $r12, $r15, $r21, $r23, r29, r33;
        java.lang.Exception $r17, r31;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: org.w3c.dom.Node;

     label01:
        r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()>();

        $r4 = new org.apache.xml.utils.TreeWalker;

        $r5 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r5.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        $r6 = interfaceinvoke r2.<javax.xml.transform.sax.TemplatesHandler: java.lang.String getSystemId()>();

        specialinvoke $r4.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>(r2, $r5, $r6);

        r3 = $r4;

        virtualinvoke r3.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r1);

        $r7 = interfaceinvoke r2.<javax.xml.transform.sax.TemplatesHandler: javax.xml.transform.Templates getTemplates()>();

     label02:
        return $r7;

     label03:
        $r8 := @caughtexception;

        r27 = $r8;

        $r9 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r9 == null goto label09;

     label04:
        $r13 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r27);

        interfaceinvoke $r13.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r12);

     label05:
        goto label08;

     label06:
        $r14 := @caughtexception;

        r28 = $r14;

        throw r28;

     label07:
        $r23 := @caughtexception;

        r29 = $r23;

        $r26 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r26.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r29);

        throw $r26;

     label08:
        return null;

     label09:
        $r10 = new javax.xml.transform.TransformerConfigurationException;

        $r11 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_PROCESSFROMNODE_FAILED", null);

        specialinvoke $r10.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r27);

        throw $r10;

     label10:
        $r25 := @caughtexception;

        r30 = $r25;

        throw r30;

     label11:
        $r17 := @caughtexception;

        r31 = $r17;

        $r20 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r20 == null goto label17;

     label12:
        $r24 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r21 = new javax.xml.transform.TransformerException;

        specialinvoke $r21.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r31);

        interfaceinvoke $r24.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r21);

     label13:
        goto label16;

     label14:
        $r16 := @caughtexception;

        r32 = $r16;

        throw r32;

     label15:
        $r15 := @caughtexception;

        r33 = $r15;

        $r18 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r18.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r33);

        throw $r18;

     label16:
        return null;

     label17:
        $r19 = new javax.xml.transform.TransformerConfigurationException;

        $r22 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_PROCESSFROMNODE_FAILED", null);

        specialinvoke $r19.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r22, r31);

        throw $r19;

        catch org.xml.sax.SAXException from label01 to label02 with label03;
        catch javax.xml.transform.TransformerConfigurationException from label04 to label05 with label06;
        catch javax.xml.transform.TransformerException from label04 to label05 with label07;
        catch javax.xml.transform.TransformerConfigurationException from label01 to label02 with label10;
        catch java.lang.Exception from label01 to label02 with label11;
        catch javax.xml.transform.TransformerConfigurationException from label12 to label13 with label14;
        catch javax.xml.transform.TransformerException from label12 to label13 with label15;
    }

    java.lang.String getDOMsystemID()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID>;

        return $r1;
    }

    javax.xml.transform.Templates processFromNode(org.w3c.dom.Node, java.lang.String) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.w3c.dom.Node r1;
        java.lang.String r2;
        javax.xml.transform.Templates $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID> = r2;

        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)>(r1);

        return $r3;
    }

    public javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1, $r14;
        java.lang.String r2, r3, r4, r5, $r26;
        org.xml.sax.InputSource r6;
        org.w3c.dom.Node r7;
        org.xml.sax.XMLReader r8;
        javax.xml.transform.dom.DOMSource r9;
        org.apache.xml.utils.TreeWalker r10, $r15;
        boolean $z0, $z1;
        org.apache.xml.utils.StylesheetPIHandler $r12, r31;
        javax.xml.transform.URIResolver $r13, $r16;
        org.apache.xml.utils.DOM2Helper $r17;
        org.apache.xml.utils.StopParseException $r18;
        org.xml.sax.SAXException $r19, $r23, $r27, $r29, r39;
        javax.xml.transform.TransformerConfigurationException $r20, $r30;
        java.io.IOException $r21, r40;
        javax.xml.parsers.ParserConfigurationException $r22, r34;
        java.lang.NoSuchMethodError $r24;
        java.lang.AbstractMethodError $r25;
        javax.xml.parsers.FactoryConfigurationError $r28, r35;
        javax.xml.parsers.SAXParserFactory r32;
        javax.xml.parsers.SAXParser r33;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r6 = null;

        r7 = null;

        r8 = null;

        $z0 = r1 instanceof javax.xml.transform.dom.DOMSource;

        if $z0 == 0 goto label01;

        r9 = (javax.xml.transform.dom.DOMSource) r1;

        r7 = virtualinvoke r9.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        r5 = virtualinvoke r9.<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()>();

        goto label02;

     label01:
        r6 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r1);

        r5 = virtualinvoke r6.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

     label02:
        $r12 = new org.apache.xml.utils.StylesheetPIHandler;

        specialinvoke $r12.<org.apache.xml.utils.StylesheetPIHandler: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r5, r2, r3, r4);

        r31 = $r12;

        $r13 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        if $r13 == null goto label03;

        $r16 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r31.<org.apache.xml.utils.StylesheetPIHandler: void setURIResolver(javax.xml.transform.URIResolver)>($r16);

     label03:
        if null == r7 goto label04;

        $r15 = new org.apache.xml.utils.TreeWalker;

        $r17 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r17.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        specialinvoke $r15.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>(r31, $r17, r5);

        r10 = $r15;

        virtualinvoke r10.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r7);

        goto label16;

     label04:
        r32 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke r32.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $z1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        if $z1 == 0 goto label08;

     label05:
        virtualinvoke r32.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label06:
        goto label08;

     label07:
        $r19 := @caughtexception;

     label08:
        r33 = virtualinvoke r32.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r8 = virtualinvoke r33.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label09:
        goto label14;

     label10:
        $r22 := @caughtexception;

        r34 = $r22;

        $r23 = new org.xml.sax.SAXException;

        specialinvoke $r23.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r34);

        throw $r23;

     label11:
        $r28 := @caughtexception;

        r35 = $r28;

        $r29 = new org.xml.sax.SAXException;

        $r26 = virtualinvoke r35.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r29.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r26);

        throw $r29;

     label12:
        $r24 := @caughtexception;

        goto label14;

     label13:
        $r25 := @caughtexception;

     label14:
        if null != r8 goto label15;

        r8 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label15:
        interfaceinvoke r8.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r31);

        interfaceinvoke r8.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r6);

     label16:
        goto label20;

     label17:
        $r18 := @caughtexception;

        goto label20;

     label18:
        $r27 := @caughtexception;

        r39 = $r27;

        $r30 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r30.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("getAssociatedStylesheets failed", r39);

        throw $r30;

     label19:
        $r21 := @caughtexception;

        r40 = $r21;

        $r20 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r20.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("getAssociatedStylesheets failed", r40);

        throw $r20;

     label20:
        $r14 = virtualinvoke r31.<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.Source getAssociatedStylesheet()>();

        return $r14;

        catch org.xml.sax.SAXException from label05 to label06 with label07;
        catch javax.xml.parsers.ParserConfigurationException from label04 to label09 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label04 to label09 with label11;
        catch java.lang.NoSuchMethodError from label04 to label09 with label12;
        catch java.lang.AbstractMethodError from label04 to label09 with label13;
        catch org.apache.xml.utils.StopParseException from label03 to label16 with label17;
        catch org.xml.sax.SAXException from label03 to label16 with label18;
        catch java.io.IOException from label03 to label16 with label19;
    }

    public javax.xml.transform.sax.TemplatesHandler newTemplatesHandler() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xalan.processor.StylesheetHandler $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = new org.apache.xalan.processor.StylesheetHandler;

        specialinvoke $r1.<org.apache.xalan.processor.StylesheetHandler: void <init>(org.apache.xalan.processor.TransformerFactoryImpl)>(r0);

        return $r1;
    }

    public void setFeature(java.lang.String, boolean) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r4, $r6;
        boolean z0, $z1;
        javax.xml.transform.TransformerConfigurationException $r2;
        java.lang.Object[] $r3;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        $r6 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_SET_FEATURE_NULL_NAME", null);

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://javax.xml.XMLConstants/feature/secure-processing");

        if $z1 == 0 goto label2;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing> = z0;

        goto label3;

     label2:
        $r2 = new javax.xml.transform.TransformerConfigurationException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_UNSUPPORTED_FEATURE", $r3);

        specialinvoke $r2.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label3:
        return;
    }

    public boolean getFeature(java.lang.String)
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.NullPointerException $r11;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        $r10 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_GET_FEATURE_NULL_NAME", null);

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>($r10);

        throw $r11;

     label1:
        if "http://javax.xml.transform.dom.DOMResult/feature" == r1 goto label2;

        if "http://javax.xml.transform.dom.DOMSource/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXResult/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXSource/feature" == r1 goto label2;

        if "http://javax.xml.transform.stream.StreamResult/feature" == r1 goto label2;

        if "http://javax.xml.transform.stream.StreamSource/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXTransformerFactory/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter" != r1 goto label3;

     label2:
        return 1;

     label3:
        $r2 = "http://javax.xml.transform.dom.DOMResult/feature";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        $r3 = "http://javax.xml.transform.dom.DOMSource/feature";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $r4 = "http://javax.xml.transform.sax.SAXResult/feature";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label4;

        $r5 = "http://javax.xml.transform.sax.SAXSource/feature";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 != 0 goto label4;

        $r6 = "http://javax.xml.transform.stream.StreamResult/feature";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label4;

        $r7 = "http://javax.xml.transform.stream.StreamSource/feature";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 != 0 goto label4;

        $r8 = "http://javax.xml.transform.sax.SAXTransformerFactory/feature";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 != 0 goto label4;

        $r9 = "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label5;

     label4:
        return 1;

     label5:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://javax.xml.XMLConstants/feature/secure-processing");

        if $z9 == 0 goto label6;

        $z8 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        return $z8;

     label6:
        return 0;
    }

    public void setAttribute(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r5, $r8, $r10, $r13, $r15, $r20, $r22;
        java.lang.Object r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.IllegalArgumentException $r3, $r6, $r12, $r18;
        java.lang.Object[] $r4, $r7, $r14, $r21;
        java.lang.Boolean $r9, $r11, $r16, $r17, $r19, $r23;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/incremental");

        if $z0 == 0 goto label03;

        $z10 = r2 instanceof java.lang.Boolean;

        if $z10 == 0 goto label01;

        $r23 = (java.lang.Boolean) r2;

        $z13 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental> = $z13;

        goto label10;

     label01:
        $z12 = r2 instanceof java.lang.String;

        if $z12 == 0 goto label02;

        $r19 = new java.lang.Boolean;

        $r20 = (java.lang.String) r2;

        specialinvoke $r19.<java.lang.Boolean: void <init>(java.lang.String)>($r20);

        $z14 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental> = $z14;

        goto label10;

     label02:
        $r18 = new java.lang.IllegalArgumentException;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r1;

        $r21[1] = r2;

        $r22 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r21);

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/optimize");

        if $z1 == 0 goto label06;

        $z6 = r2 instanceof java.lang.Boolean;

        if $z6 == 0 goto label04;

        $r17 = (java.lang.Boolean) r2;

        $z11 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = $z11;

        goto label10;

     label04:
        $z8 = r2 instanceof java.lang.String;

        if $z8 == 0 goto label05;

        $r16 = new java.lang.Boolean;

        $r15 = (java.lang.String) r2;

        specialinvoke $r16.<java.lang.Boolean: void <init>(java.lang.String)>($r15);

        $z9 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = $z9;

        goto label10;

     label05:
        $r12 = new java.lang.IllegalArgumentException;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r1;

        $r14[1] = r2;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r14);

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label06:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location");

        if $z2 == 0 goto label09;

        $z3 = r2 instanceof java.lang.Boolean;

        if $z3 == 0 goto label07;

        $r11 = (java.lang.Boolean) r2;

        $z7 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = $z7;

        goto label10;

     label07:
        $z4 = r2 instanceof java.lang.String;

        if $z4 == 0 goto label08;

        $r9 = new java.lang.Boolean;

        $r10 = (java.lang.String) r2;

        specialinvoke $r9.<java.lang.Boolean: void <init>(java.lang.String)>($r10);

        $z5 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = $z5;

        goto label10;

     label08:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $r7[1] = r2;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label09:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUPPORTED", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label10:
        return;
    }

    public java.lang.Object getAttribute(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Boolean $r5, $r6, $r7;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/incremental");

        if $z0 == 0 goto label1;

        $r7 = new java.lang.Boolean;

        $z5 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental>;

        specialinvoke $r7.<java.lang.Boolean: void <init>(boolean)>($z5);

        return $r7;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/optimize");

        if $z1 == 0 goto label2;

        $r6 = new java.lang.Boolean;

        $z4 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        specialinvoke $r6.<java.lang.Boolean: void <init>(boolean)>($z4);

        return $r6;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location");

        if $z2 == 0 goto label3;

        $r5 = new java.lang.Boolean;

        $z3 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location>;

        specialinvoke $r5.<java.lang.Boolean: void <init>(boolean)>($z3);

        return $r5;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ATTRIB_VALUE_NOT_RECOGNIZED", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Templates r2;
        org.xml.sax.XMLFilter $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)>(r2);

        return $r3;
    }

    public org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Templates r1;
        javax.xml.transform.TransformerConfigurationException r2, r3, $r5, $r7, $r8;
        org.apache.xalan.transformer.TrAXFilter $r4;
        javax.xml.transform.TransformerException $r6, r11;
        javax.xml.transform.ErrorListener $r9, $r10;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Templates;

     label1:
        $r4 = new org.apache.xalan.transformer.TrAXFilter;

        specialinvoke $r4.<org.apache.xalan.transformer.TrAXFilter: void <init>(javax.xml.transform.Templates)>(r1);

     label2:
        return $r4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r9 == null goto label8;

     label4:
        $r10 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r10.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r2);

     label5:
        return null;

     label6:
        $r5 := @caughtexception;

        r3 = $r5;

        throw r3;

     label7:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r7.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r11);

        throw $r7;

     label8:
        throw r2;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label3;
        catch javax.xml.transform.TransformerConfigurationException from label4 to label5 with label6;
        catch javax.xml.transform.TransformerException from label4 to label5 with label7;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Templates r2;
        javax.xml.transform.sax.TransformerHandler $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>(r2);

        return $r3;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Templates r1;
        org.apache.xalan.transformer.TransformerImpl r2;
        javax.xml.transform.sax.TransformerHandler r3;
        javax.xml.transform.Transformer $r4;
        javax.xml.transform.URIResolver $r5;
        org.xml.sax.ContentHandler $r6;
        javax.xml.transform.TransformerConfigurationException $r7, $r8, $r12, r13, r14;
        javax.xml.transform.ErrorListener $r9, $r10;
        javax.xml.transform.TransformerException $r11, r15;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Templates;

     label1:
        $r4 = interfaceinvoke r1.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        r2 = (org.apache.xalan.transformer.TransformerImpl) $r4;

        $r5 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: void setURIResolver(javax.xml.transform.URIResolver)>($r5);

        $r6 = virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)>(1);

        r3 = (javax.xml.transform.sax.TransformerHandler) $r6;

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r13 = $r8;

        $r9 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r9 == null goto label8;

     label4:
        $r10 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r10.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r13);

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        r14 = $r7;

        throw r14;

     label7:
        $r11 := @caughtexception;

        r15 = $r11;

        $r12 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r12.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r15);

        throw $r12;

     label8:
        throw r13;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label3;
        catch javax.xml.transform.TransformerConfigurationException from label4 to label5 with label6;
        catch javax.xml.transform.TransformerException from label4 to label5 with label7;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xalan.transformer.TransformerIdentityImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = new org.apache.xalan.transformer.TransformerIdentityImpl;

        $z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        specialinvoke $r1.<org.apache.xalan.transformer.TransformerIdentityImpl: void <init>(boolean)>($z0);

        return $r1;
    }

    public javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Templates r2;
        javax.xml.transform.Transformer r3;
        javax.xml.transform.URIResolver $r4;
        javax.xml.transform.TransformerConfigurationException $r5, $r9, $r10, r11, r12;
        javax.xml.transform.ErrorListener $r6, $r7;
        javax.xml.transform.TransformerException $r8, r13;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

     label01:
        r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if r2 != null goto label03;

     label02:
        return null;

     label03:
        r3 = interfaceinvoke r2.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        $r4 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r3.<javax.xml.transform.Transformer: void setURIResolver(javax.xml.transform.URIResolver)>($r4);

     label04:
        return r3;

     label05:
        $r5 := @caughtexception;

        r11 = $r5;

        $r6 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r6 == null goto label10;

     label06:
        $r7 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r7.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r11);

     label07:
        return null;

     label08:
        $r10 := @caughtexception;

        r12 = $r10;

        throw r12;

     label09:
        $r8 := @caughtexception;

        r13 = $r8;

        $r9 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r9.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r13);

        throw $r9;

     label10:
        throw r11;

        catch javax.xml.transform.TransformerConfigurationException from label01 to label02 with label05;
        catch javax.xml.transform.TransformerConfigurationException from label03 to label04 with label05;
        catch javax.xml.transform.TransformerConfigurationException from label06 to label07 with label08;
        catch javax.xml.transform.TransformerException from label06 to label07 with label09;
    }

    public javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xalan.transformer.TransformerIdentityImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = new org.apache.xalan.transformer.TransformerIdentityImpl;

        $z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        specialinvoke $r1.<org.apache.xalan.transformer.TransformerIdentityImpl: void <init>(boolean)>($z0);

        return $r1;
    }

    public javax.xml.transform.Templates newTemplates(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        java.lang.String r2, r5, $r18, $r29, $r36;
        javax.xml.transform.dom.DOMSource r3;
        org.w3c.dom.Node r4;
        javax.xml.parsers.SAXParserFactory r6;
        boolean $z0, $z1, $z2;
        javax.xml.transform.Templates $r8, $r11;
        javax.xml.transform.sax.SAXSource $r9;
        java.lang.IllegalArgumentException $r10;
        javax.xml.transform.TransformerConfigurationException $r12, $r17, $r21, $r25, $r33, $r37, r47, r50;
        javax.xml.transform.TransformerException $r13, $r14, $r19, $r35, r48, r51;
        java.lang.AbstractMethodError $r15;
        org.xml.sax.SAXException $r16, $r22, $r27, $r28, r46;
        javax.xml.transform.ErrorListener $r20, $r24, $r31, $r34;
        javax.xml.parsers.FactoryConfigurationError $r23, r43;
        javax.xml.parsers.ParserConfigurationException $r26, r42;
        java.lang.Exception $r30, r49;
        java.lang.NoSuchMethodError $r32;
        javax.xml.transform.sax.TemplatesHandler r38;
        org.xml.sax.InputSource r39;
        org.xml.sax.XMLReader r40;
        javax.xml.parsers.SAXParser r41;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 = interfaceinvoke r1.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        if null == r2 goto label01;

        r2 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>(r2);

     label01:
        $z0 = r1 instanceof javax.xml.transform.dom.DOMSource;

        if $z0 == 0 goto label03;

        r3 = (javax.xml.transform.dom.DOMSource) r1;

        r4 = virtualinvoke r3.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        if null == r4 goto label02;

        $r11 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates processFromNode(org.w3c.dom.Node,java.lang.String)>(r4, r2);

        return $r11;

     label02:
        r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_DOMSOURCE_INPUT", null);

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r5);

        throw $r10;

     label03:
        r38 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()>();

        interfaceinvoke r38.<javax.xml.transform.sax.TemplatesHandler: void setSystemId(java.lang.String)>(r2);

     label04:
        r39 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r1);

        virtualinvoke r39.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r2);

        r40 = null;

        $z1 = r1 instanceof javax.xml.transform.sax.SAXSource;

        if $z1 == 0 goto label05;

        $r9 = (javax.xml.transform.sax.SAXSource) r1;

        r40 = virtualinvoke $r9.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

     label05:
        if null != r40 goto label16;

     label06:
        r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke r6.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $z2 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        if $z2 == 0 goto label10;

     label07:
        virtualinvoke r6.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label08:
        goto label10;

     label09:
        $r22 := @caughtexception;

     label10:
        r41 = virtualinvoke r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r40 = virtualinvoke r41.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label11:
        goto label16;

     label12:
        $r26 := @caughtexception;

        r42 = $r26;

        $r27 = new org.xml.sax.SAXException;

        specialinvoke $r27.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r42);

        throw $r27;

     label13:
        $r23 := @caughtexception;

        r43 = $r23;

        $r28 = new org.xml.sax.SAXException;

        $r29 = virtualinvoke r43.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r28.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label14:
        $r32 := @caughtexception;

        goto label16;

     label15:
        $r15 := @caughtexception;

     label16:
        if null != r40 goto label17;

        r40 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label17:
        interfaceinvoke r40.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r38);

        interfaceinvoke r40.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r39);

     label18:
        goto label32;

     label19:
        $r16 := @caughtexception;

        r46 = $r16;

        $r20 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r20 == null goto label24;

     label20:
        $r24 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r19 = new javax.xml.transform.TransformerException;

        specialinvoke $r19.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r46);

        interfaceinvoke $r24.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r19);

     label21:
        goto label25;

     label22:
        $r25 := @caughtexception;

        r47 = $r25;

        throw r47;

     label23:
        $r13 := @caughtexception;

        r48 = $r13;

        $r12 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r12.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r48);

        throw $r12;

     label24:
        $r21 = new javax.xml.transform.TransformerConfigurationException;

        $r18 = virtualinvoke r46.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r21.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r46);

        throw $r21;

     label25:
        goto label32;

     label26:
        $r30 := @caughtexception;

        r49 = $r30;

        $r31 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r31 == null goto label31;

     label27:
        $r34 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r35 = new javax.xml.transform.TransformerException;

        specialinvoke $r35.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r49);

        interfaceinvoke $r34.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r35);

     label28:
        return null;

     label29:
        $r33 := @caughtexception;

        r50 = $r33;

        throw r50;

     label30:
        $r14 := @caughtexception;

        r51 = $r14;

        $r17 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r17.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r51);

        throw $r17;

     label31:
        $r37 = new javax.xml.transform.TransformerConfigurationException;

        $r36 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r37.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r36, r49);

        throw $r37;

     label32:
        $r8 = interfaceinvoke r38.<javax.xml.transform.sax.TemplatesHandler: javax.xml.transform.Templates getTemplates()>();

        return $r8;

        catch org.xml.sax.SAXException from label07 to label08 with label09;
        catch javax.xml.parsers.ParserConfigurationException from label06 to label11 with label12;
        catch javax.xml.parsers.FactoryConfigurationError from label06 to label11 with label13;
        catch java.lang.NoSuchMethodError from label06 to label11 with label14;
        catch java.lang.AbstractMethodError from label06 to label11 with label15;
        catch org.xml.sax.SAXException from label04 to label18 with label19;
        catch javax.xml.transform.TransformerConfigurationException from label20 to label21 with label22;
        catch javax.xml.transform.TransformerException from label20 to label21 with label23;
        catch java.lang.Exception from label04 to label18 with label26;
        catch javax.xml.transform.TransformerConfigurationException from label27 to label28 with label29;
        catch javax.xml.transform.TransformerException from label27 to label28 with label30;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.URIResolver r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.URIResolver;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver> = r1;

        return;
    }

    public javax.xml.transform.URIResolver getURIResolver()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.URIResolver $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        return $r1;
    }

    public javax.xml.transform.ErrorListener getErrorListener()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.ErrorListener $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        return $r1;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.ErrorListener r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        if null != r1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ERRORLISTENER", null);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener> = r1;

        return;
    }

    public boolean isSecureProcessing()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_SOURCE_LOCATION> = "http://xml.apache.org/xalan/properties/source-location";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_OPTIMIZE> = "http://xml.apache.org/xalan/features/optimize";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_INCREMENTAL> = "http://xml.apache.org/xalan/features/incremental";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String XSLT_PROPERTIES> = "org/apache/xalan/res/XSLTInfo.properties";

        return;
    }
}
