public class org.apache.xalan.templates.ElemCopyOf extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;
    public org.apache.xpath.XPath m_selectExpression;

    public void <init>()
    {
        org.apache.xalan.templates.ElemCopyOf r0;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression> = null;

        return;
    }

    public void setSelect(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.ElemCopyOf r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression> = r1;

        return;
    }

    public org.apache.xpath.XPath getSelect()
    {
        org.apache.xalan.templates.ElemCopyOf r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        $r1 = r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression>;

        return $r1;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemCopyOf r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.StylesheetRoot$ComposeState r2;
        org.apache.xpath.XPath $r3;
        java.util.Vector $r4;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r3 = r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression>;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r3.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>($r4, $i0);

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemCopyOf r0;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        return 74;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemCopyOf r0;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        return "copy-of";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemCopyOf r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xpath.XPathContext r2, $r11;
        int i0, i1, i2, i4, $i5, $i6, $i7;
        org.apache.xpath.objects.XObject r3;
        org.apache.xml.serializer.SerializationHandler r4;
        java.lang.String r5, r17;
        org.apache.xml.dtm.DTMIterator r6;
        org.apache.xalan.transformer.TreeWalker2Result r7, $r12;
        org.apache.xml.dtm.DTM r8;
        short s3;
        org.apache.xpath.XPath $r9;
        char[] $r10, $r14;
        org.apache.xml.dtm.DTMManager $r13;
        org.xml.sax.SAXException $r15, r18;
        javax.xml.transform.TransformerException $r16;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

     label01:
        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r9 = r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression>;

        r3 = virtualinvoke $r9.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r0);

        r4 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        if null == r3 goto label12;

        i1 = virtualinvoke r3.<org.apache.xpath.objects.XObject: int getType()>();

        tableswitch(i1)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label10;
            default: goto label11;
        };

     label02:
        r5 = virtualinvoke r3.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $r10 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();

        $i5 = virtualinvoke r5.<java.lang.String: int length()>();

        interfaceinvoke r4.<org.apache.xml.serializer.SerializationHandler: void characters(char[],int,int)>($r10, 0, $i5);

        goto label12;

     label03:
        r6 = virtualinvoke r3.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        $r12 = new org.apache.xalan.transformer.TreeWalker2Result;

        specialinvoke $r12.<org.apache.xalan.transformer.TreeWalker2Result: void <init>(org.apache.xalan.transformer.TransformerImpl,org.apache.xml.serializer.SerializationHandler)>(r1, r4);

        r7 = $r12;

     label04:
        $i6 = interfaceinvoke r6.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        i2 = $i6;

        if -1 == $i6 goto label12;

        $r13 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        r8 = virtualinvoke $r13.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(int)>(i2);

        s3 = interfaceinvoke r8.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i2);

        if s3 != 9 goto label07;

        i4 = interfaceinvoke r8.<org.apache.xml.dtm.DTM: int getFirstChild(int)>(i2);

     label05:
        if i4 == -1 goto label06;

        virtualinvoke r7.<org.apache.xml.dtm.ref.DTMTreeWalker: void traverse(int)>(i4);

        i4 = interfaceinvoke r8.<org.apache.xml.dtm.DTM: int getNextSibling(int)>(i4);

        goto label05;

     label06:
        goto label09;

     label07:
        if s3 != 2 goto label08;

        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void addAttribute(org.apache.xml.serializer.SerializationHandler,int)>(r4, i2);

        goto label09;

     label08:
        virtualinvoke r7.<org.apache.xml.dtm.ref.DTMTreeWalker: void traverse(int)>(i2);

     label09:
        goto label04;

     label10:
        $r11 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)>(r4, r3, $r11);

        goto label12;

     label11:
        r17 = virtualinvoke r3.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $r14 = virtualinvoke r17.<java.lang.String: char[] toCharArray()>();

        $i7 = virtualinvoke r17.<java.lang.String: int length()>();

        interfaceinvoke r4.<org.apache.xml.serializer.SerializationHandler: void characters(char[],int,int)>($r14, 0, $i7);

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

        r18 = $r15;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r18);

        throw $r16;

     label14:
        return;

        catch org.xml.sax.SAXException from label01 to label12 with label13;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemCopyOf r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r2[0] = $r3;

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemCopyOf: java.lang.String getNodeName()>();

        $r2[1] = $r4;

        virtualinvoke r0.<org.apache.xalan.templates.ElemCopyOf: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r2);

        return null;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.ElemCopyOf r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0;
        org.apache.xpath.XPath $r2, $r4;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xalan.templates.ElemCopyOf;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r4 = r0.<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath m_selectExpression>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r4, r1);

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemCopyOf: long serialVersionUID> = -7433828829497411127L;

        return;
    }
}
