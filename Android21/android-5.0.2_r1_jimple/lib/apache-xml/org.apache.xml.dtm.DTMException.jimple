public class org.apache.xml.dtm.DTMException extends java.lang.RuntimeException
{
    static final long serialVersionUID;
    javax.xml.transform.SourceLocator locator;
    java.lang.Throwable containedException;

    public javax.xml.transform.SourceLocator getLocator()
    {
        org.apache.xml.dtm.DTMException r0;
        javax.xml.transform.SourceLocator $r1;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        return $r1;
    }

    public void setLocator(javax.xml.transform.SourceLocator)
    {
        org.apache.xml.dtm.DTMException r0;
        javax.xml.transform.SourceLocator r1;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = r1;

        return;
    }

    public java.lang.Throwable getException()
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.Throwable $r1;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.Throwable $r1, $r2;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

        if $r1 != r0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

     label2:
        return $r2;
    }

    public synchronized java.lang.Throwable initCause(java.lang.Throwable)
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.Throwable r1, $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, $r6;
        java.lang.IllegalStateException $r5;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

        if $r2 != null goto label1;

        if r1 == null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_OVERWRITE_CAUSE", null);

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        if r1 != r0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_SELF_CAUSATION_NOT_PERMITTED", null);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r1;

        return r0;
    }

    public void <init>(java.lang.String)
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = null;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.Throwable r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r1;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;
        int $i0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        goto label3;

     label2:
        $r3 = r1;

     label3:
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r2;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator)
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.String r1;
        javax.xml.transform.SourceLocator r2;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = null;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = r2;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.String r1;
        javax.xml.transform.SourceLocator r2;
        java.lang.Throwable r3;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r3;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = r2;

        return;
    }

    public java.lang.String getMessageAndLocation()
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.StringBuffer r1, $r4;
        java.lang.String r2, r3, $r6;
        int i0, i1;
        javax.xml.transform.SourceLocator $r5, $r7, $r8, $r9;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        r2 = specialinvoke r0.<java.lang.RuntimeException: java.lang.String getMessage()>();

        if null == r2 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label1:
        $r5 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        if null == $r5 goto label4;

        $r7 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        r3 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r8 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        i0 = interfaceinvoke $r8.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r9 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        i1 = interfaceinvoke $r9.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == r3 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

     label2:
        if 0 == i0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label3:
        if 0 == i1 goto label4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

     label4:
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getLocationAsString()
    {
        org.apache.xml.dtm.DTMException r0;
        java.lang.StringBuffer r1, $r4;
        java.lang.String r2, $r8;
        int i0, i1;
        javax.xml.transform.SourceLocator $r3, $r5, $r6, $r7;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r3 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        if null == $r3 goto label4;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        $r5 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        r2 = interfaceinvoke $r5.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r6 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        i0 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r7 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        i1 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == r2 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

     label1:
        if 0 == i0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

     label2:
        if 0 == i1 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

     label3:
        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label4:
        return null;
    }

    public void printStackTrace()
    {
        org.apache.xml.dtm.DTMException r0;
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.xml.dtm.DTMException: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        org.apache.xml.dtm.DTMException r0;
        java.io.PrintStream r1;
        java.io.PrintWriter $r2;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.io.PrintStream;

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke r0.<org.apache.xml.dtm.DTMException: void printStackTrace(java.io.PrintWriter)>($r2);

        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        org.apache.xml.dtm.DTMException r0, $r15;
        java.io.PrintWriter r1, $r17;
        java.lang.String r2, r4;
        int i0;
        java.lang.Throwable r5, $r18, $r23, r26;
        java.lang.Class[] $r6, $r11;
        java.lang.Class $r7, $r8, $r10, $r12, $r13;
        boolean $z0, z1;
        java.lang.Object[] $r14;
        java.lang.Object $r16;
        java.io.PrintStream $r19;
        java.lang.NoSuchMethodException $r20, $r21;
        java.lang.reflect.InvocationTargetException $r22;
        java.lang.IllegalAccessException $r24;
        java.lang.reflect.Method r28;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.io.PrintWriter;

        if r1 != null goto label01;

        $r17 = new java.io.PrintWriter;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r17.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r19, 1);

        r1 = $r17;

     label01:
        r2 = virtualinvoke r0.<org.apache.xml.dtm.DTMException: java.lang.String getLocationAsString()>();

        if null == r2 goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label02:
        specialinvoke r0.<java.lang.RuntimeException: void printStackTrace(java.io.PrintWriter)>(r1);

     label03:
        goto label05;

     label04:
        $r23 := @caughtexception;

     label05:
        z1 = 0;

     label06:
        $r8 = class "java/lang/Throwable";

        $r6 = newarray (java.lang.Class)[1];

        $r7 = (java.lang.Class) null;

        $r6[0] = $r7;

        virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCause", $r6);

        z1 = 1;

     label07:
        goto label09;

     label08:
        $r21 := @caughtexception;

     label09:
        if z1 != 0 goto label24;

        r26 = virtualinvoke r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable getException()>();

        i0 = 0;

     label10:
        if i0 >= 10 goto label24;

        if null == r26 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("---------");

     label11:
        $z0 = r26 instanceof org.apache.xml.dtm.DTMException;

        if $z0 == 0 goto label12;

        $r15 = (org.apache.xml.dtm.DTMException) r26;

        r4 = virtualinvoke $r15.<org.apache.xml.dtm.DTMException: java.lang.String getLocationAsString()>();

        if null == r4 goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r4);

     label12:
        virtualinvoke r26.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

     label13:
        goto label15;

     label14:
        $r18 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Could not print stack trace...");

     label15:
        $r10 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = newarray (java.lang.Class)[1];

        $r12 = (java.lang.Class) null;

        $r11[0] = $r12;

        r28 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getException", $r11);

        if null == r28 goto label18;

        r5 = r26;

        $r14 = newarray (java.lang.Object)[1];

        $r13 = (java.lang.Class) null;

        $r14[0] = $r13;

        $r16 = virtualinvoke r28.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r26, $r14);

        r26 = (java.lang.Throwable) $r16;

        if r5 != r26 goto label17;

     label16:
        goto label24;

     label17:
        goto label19;

     label18:
        r26 = null;

     label19:
        goto label23;

     label20:
        $r22 := @caughtexception;

        r26 = null;

        goto label23;

     label21:
        $r24 := @caughtexception;

        r26 = null;

        goto label23;

     label22:
        $r20 := @caughtexception;

        r26 = null;

     label23:
        i0 = i0 + 1;

        goto label10;

     label24:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.NoSuchMethodException from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label20;
        catch java.lang.reflect.InvocationTargetException from label17 to label19 with label20;
        catch java.lang.IllegalAccessException from label15 to label16 with label21;
        catch java.lang.IllegalAccessException from label17 to label19 with label21;
        catch java.lang.NoSuchMethodException from label15 to label16 with label22;
        catch java.lang.NoSuchMethodException from label17 to label19 with label22;
    }

    public static void <clinit>()
    {
        <org.apache.xml.dtm.DTMException: long serialVersionUID> = -775576419181334734L;

        return;
    }
}
