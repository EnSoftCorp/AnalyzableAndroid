public class org.apache.xpath.functions.FuncSubstringAfter extends org.apache.xpath.functions.Function2Args
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.functions.FuncSubstringAfter r0;

        r0 := @this: org.apache.xpath.functions.FuncSubstringAfter;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncSubstringAfter r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.utils.XMLString r2, r3, $r8;
        int i0, $i1, $i2;
        org.apache.xpath.Expression $r4, $r6;
        org.apache.xpath.objects.XObject $r5, $r7;
        org.apache.xpath.objects.XString $r9;

        r0 := @this: org.apache.xpath.functions.FuncSubstringAfter;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r4 = r0.<org.apache.xpath.functions.FuncSubstringAfter: org.apache.xpath.Expression m_arg0>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r2 = virtualinvoke $r5.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $r6 = r0.<org.apache.xpath.functions.FuncSubstringAfter: org.apache.xpath.Expression m_arg1>;

        $r7 = virtualinvoke $r6.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r3 = virtualinvoke $r7.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        i0 = interfaceinvoke r2.<org.apache.xml.utils.XMLString: int indexOf(org.apache.xml.utils.XMLString)>(r3);

        if -1 != i0 goto label1;

        $r9 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        goto label2;

     label1:
        $i1 = interfaceinvoke r3.<org.apache.xml.utils.XMLString: int length()>();

        $i2 = i0 + $i1;

        $r8 = interfaceinvoke r2.<org.apache.xml.utils.XMLString: org.apache.xml.utils.XMLString substring(int)>($i2);

        $r9 = (org.apache.xpath.objects.XString) $r8;

     label2:
        return $r9;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncSubstringAfter: long serialVersionUID> = -8119731889862512194L;

        return;
    }
}
