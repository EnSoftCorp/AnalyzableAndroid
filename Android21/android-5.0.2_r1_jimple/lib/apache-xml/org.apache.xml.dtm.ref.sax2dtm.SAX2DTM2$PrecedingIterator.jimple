public class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase
{
    private final int _maxAncestors;
    protected int[] _stack;
    protected int _sp;
    protected int _oldsp;
    protected int _markedsp;
    protected int _markedNode;
    protected int _markedDescendant;
    final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int[] $r2;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _maxAncestors> = 8;

        $r2 = newarray (int)[8];

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack> = $r2;

        return;
    }

    public boolean isReverse()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        return 1;
    }

    public org.apache.xml.dtm.DTMAxisIterator cloneIterator()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0, r1;
        int[] r2, $r4, $r5, $r6;
        java.lang.Object $r3;
        int $i0, $i1;
        java.lang.CloneNotSupportedException $r7;
        org.apache.xml.dtm.DTMException $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: boolean _isRestartable> = 0;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator) $r3;

        $r4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $i0 = lengthof $r4;

        r2 = newarray (int)[$i0];

        $r6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $r5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $i1 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r6, 0, r2, 0, $i1);

        r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack> = r2;

     label2:
        return r1;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.xml.dtm.DTMException;

        $r9 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_ITERATOR_CLONE_NOT_SUPPORTED", null);

        specialinvoke $r8.<org.apache.xml.dtm.DTMException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        int[] r1, $r4, $r6, $r8, $r9, $r11;
        boolean $z0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r2, $r3, $r5, $r10, $r12;
        org.apache.xml.dtm.DTMAxisIterator $r7;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i0 = virtualinvoke $r12.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getDocument()>();

     label1:
        $z0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: boolean _isRestartable>;

        if $z0 == 0 goto label7;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i8 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeIdentity(int)>(i0);

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i3 = virtualinvoke $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _type2(int)>(i8);

        if $i3 != 2 goto label2;

        $r10 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i8 = virtualinvoke $r10.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i8);

     label2:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _startNode> = i8;

        $r4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        i2 = 0;

        $r4[0] = i8;

        i1 = i8;

     label3:
        $r5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i4 = virtualinvoke $r5.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i1);

        i1 = $i4;

        if $i4 == -1 goto label5;

        i2 = i2 + 1;

        $r8 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $i6 = lengthof $r8;

        if i2 != $i6 goto label4;

        $i7 = i2 * 2;

        r1 = newarray (int)[$i7];

        $r11 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r11, 0, r1, 0, i2);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack> = r1;

     label4:
        $r9 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $r9[i2] = i1;

        goto label3;

     label5:
        if i2 <= 0 goto label6;

        i2 = i2 + -1;

     label6:
        $r6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $i5 = $r6[i2];

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode> = $i5;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp> = i2;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _oldsp> = i2;

        $r7 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r7;

     label7:
        return r0;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] $r1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        $i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode>;

        $i2 = $i1 + 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode> = $i2;

     label1:
        $i3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp>;

        if $i3 < 0 goto label5;

        $i6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode>;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $i4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp>;

        $i5 = $r1[$i4];

        if $i6 >= $i5 goto label3;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i11 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode>;

        i0 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _type2(int)>($i11);

        if i0 == 2 goto label2;

        if i0 == 13 goto label2;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode>;

        $i14 = virtualinvoke $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeHandle(int)>($i12);

        $i13 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int returnNode(int)>($i14);

        return $i13;

     label2:
        goto label4;

     label3:
        $i7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp>;

        $i8 = $i7 - 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp> = $i8;

     label4:
        $i9 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode>;

        $i10 = $i9 + 1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode> = $i10;

        goto label1;

     label5:
        return -1;
    }

    public org.apache.xml.dtm.DTMAxisIterator reset()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;
        int $i0;
        org.apache.xml.dtm.DTMAxisIterator $r1;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _oldsp>;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp> = $i0;

        $r1 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r1;
    }

    public void setMark()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp>;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _markedsp> = $i0;

        $i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode>;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _markedNode> = $i1;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int[] _stack>;

        $i2 = $r1[0];

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _markedDescendant> = $i2;

        return;
    }

    public void gotoMark()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator r0;
        int $i0, $i1;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator;

        $i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _markedsp>;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _sp> = $i0;

        $i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _markedNode>;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$PrecedingIterator: int _currentNode> = $i1;

        return;
    }
}
