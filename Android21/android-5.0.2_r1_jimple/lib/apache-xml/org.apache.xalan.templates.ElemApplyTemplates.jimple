public class org.apache.xalan.templates.ElemApplyTemplates extends org.apache.xalan.templates.ElemCallTemplate
{
    static final long serialVersionUID;
    private org.apache.xml.utils.QName m_mode;
    private boolean m_isDefaultTemplate;

    public void <init>()
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        specialinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: void <init>()>();

        r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName m_mode> = null;

        r0.<org.apache.xalan.templates.ElemApplyTemplates: boolean m_isDefaultTemplate> = 0;

        return;
    }

    public void setMode(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;
        org.apache.xml.utils.QName r1;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName m_mode> = r1;

        return;
    }

    public org.apache.xml.utils.QName getMode()
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;
        org.apache.xml.utils.QName $r1;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        $r1 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName m_mode>;

        return $r1;
    }

    public void setIsDefaultTemplate(boolean)
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.templates.ElemApplyTemplates: boolean m_isDefaultTemplate> = z0;

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        return 50;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        return "apply-templates";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        boolean z0, $z1, $z2;
        org.apache.xml.utils.QName r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushCurrentTemplateRuleIsNull(boolean)>(0);

        z0 = 0;

     label01:
        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()>();

        $z1 = r0.<org.apache.xalan.templates.ElemApplyTemplates: boolean m_isDefaultTemplate>;

        if $z1 != 0 goto label04;

        if null != r2 goto label02;

        $r6 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName m_mode>;

        if null != $r6 goto label03;

     label02:
        if null == r2 goto label04;

        $r4 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName m_mode>;

        $z2 = virtualinvoke r2.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label04;

     label03:
        z0 = 1;

        $r5 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName m_mode>;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushMode(org.apache.xml.utils.QName)>($r5);

     label04:
        virtualinvoke r0.<org.apache.xalan.templates.ElemApplyTemplates: void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popMode()>();

     label06:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popCurrentTemplateRuleIsNull()>();

        goto label10;

     label07:
        $r7 := @caughtexception;

        r3 = $r7;

     label08:
        if z0 == 0 goto label09;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popMode()>();

     label09:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popCurrentTemplateRuleIsNull()>();

        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label01 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemApplyTemplates r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xpath.XPathContext r2;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        org.apache.xml.dtm.DTMIterator r3;
        org.apache.xpath.VariableStack r4;
        boolean z0, z1;
        java.util.Vector r5, $r21, $r22;
        org.apache.xml.serializer.SerializationHandler r6;
        org.apache.xalan.templates.StylesheetRoot r7;
        org.apache.xalan.templates.TemplateList r8;
        org.apache.xml.dtm.DTM r9, $r23;
        org.apache.xalan.templates.ElemWithParam r10, r17;
        org.apache.xpath.objects.XObject r11, r16;
        org.apache.xml.utils.QName r12;
        short s6;
        org.apache.xalan.templates.ElemTemplate r13, $r24, $r28;
        org.apache.xalan.templates.ElemTemplateElement r14, r35;
        org.apache.xalan.templates.ElemParam r15;
        java.lang.Throwable r18, r19, $r26, $r27;
        org.apache.xpath.Expression $r20;
        org.apache.xalan.templates.ElemWithParam[] $r25, $r29;
        javax.xml.transform.ErrorListener $r30;
        org.xml.sax.SAXException $r31, r36;
        javax.xml.transform.TransformerException $r32;
        org.apache.xml.utils.IntStack r33, r34;

        r0 := @this: org.apache.xalan.templates.ElemApplyTemplates;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r20 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xpath.Expression m_selectExpression>;

        r3 = virtualinvoke $r20.<org.apache.xpath.Expression: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>(r2, i0);

        r4 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        i1 = virtualinvoke r0.<org.apache.xalan.templates.ElemApplyTemplates: int getParamElemCount()>();

        i2 = virtualinvoke r4.<org.apache.xpath.VariableStack: int getStackFrame()>();

        z0 = 0;

     label01:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(-1);

        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushCurrentExpressionNode(int)>(-1);

        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushSAXLocatorNull()>();

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(null);

        $r21 = r0.<org.apache.xalan.templates.ElemApplyTemplates: java.util.Vector m_sortElems>;

        if $r21 != null goto label02;

        $r22 = null;

        goto label03;

     label02:
        $r22 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach,int)>(r0, i0);

     label03:
        r5 = $r22;

        if null == r5 goto label04;

        r3 = virtualinvoke r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)>(r2, r5, r3);

     label04:
        r6 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        r7 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        r8 = virtualinvoke r7.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.TemplateList getTemplateListComposed()>();

        z1 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: boolean getQuietConflictWarnings()>();

        r9 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        i3 = -1;

        if i1 <= 0 goto label07;

        i3 = virtualinvoke r4.<org.apache.xpath.VariableStack: int link(int)>(i1);

        virtualinvoke r4.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i2);

        i4 = 0;

     label05:
        if i4 >= i1 goto label06;

        $r29 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        r10 = $r29[i4];

        r11 = virtualinvoke r10.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)>(r1, i0);

        virtualinvoke r4.<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject,int)>(i4, r11, i3);

        i4 = i4 + 1;

        goto label05;

     label06:
        virtualinvoke r4.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i3);

     label07:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>(r3);

        z0 = 1;

        r33 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentNodeStack()>();

        r34 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentExpressionNodeStack()>();

     label08:
        $i10 = interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        i19 = $i10;

        if -1 == $i10 goto label32;

        virtualinvoke r33.<org.apache.xml.utils.IntStack: void setTop(int)>(i19);

        virtualinvoke r34.<org.apache.xml.utils.IntStack: void setTop(int)>(i19);

        $r23 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i19);

        if $r23 == r9 goto label09;

        r9 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i19);

     label09:
        i5 = interfaceinvoke r9.<org.apache.xml.dtm.DTM: int getExpandedTypeID(int)>(i19);

        s6 = interfaceinvoke r9.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i19);

        r12 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()>();

        r13 = virtualinvoke r8.<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)>(r2, i19, i5, r12, -1, z1, r9);

        if null != r13 goto label14;

        tableswitch(s6)
        {
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label13;
            case 6: goto label13;
            case 7: goto label13;
            case 8: goto label13;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label10;
            default: goto label13;
        };

     label10:
        r13 = virtualinvoke r7.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRule()>();

        goto label15;

     label11:
        $r24 = virtualinvoke r7.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultTextRule()>();

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushPairCurrentMatched(org.apache.xalan.templates.ElemTemplateElement,int)>($r24, i19);

        $r28 = virtualinvoke r7.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultTextRule()>();

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)>($r28);

        interfaceinvoke r9.<org.apache.xml.dtm.DTM: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)>(i19, r6, 0);

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popCurrentMatched()>();

        goto label08;

     label12:
        r13 = virtualinvoke r7.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRootRule()>();

        goto label15;

     label13:
        goto label08;

     label14:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)>(r13);

     label15:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushPairCurrentMatched(org.apache.xalan.templates.ElemTemplateElement,int)>(r13, i19);

        $i11 = r13.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        if $i11 <= 0 goto label22;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushRTFContext()>();

        i7 = virtualinvoke r4.<org.apache.xpath.VariableStack: int getStackFrame()>();

        $i13 = r13.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        virtualinvoke r4.<org.apache.xpath.VariableStack: int link(int)>($i13);

        $i16 = r13.<org.apache.xalan.templates.ElemTemplate: int m_inArgsSize>;

        if $i16 <= 0 goto label23;

        i8 = 0;

        r14 = virtualinvoke r13.<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

     label16:
        if null == r14 goto label21;

        $i15 = virtualinvoke r14.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 41 != $i15 goto label21;

        r15 = (org.apache.xalan.templates.ElemParam) r14;

        i9 = 0;

     label17:
        if i9 >= i1 goto label19;

        $r25 = r0.<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        r17 = $r25[i9];

        $i18 = r17.<org.apache.xalan.templates.ElemWithParam: int m_qnameID>;

        $i17 = r15.<org.apache.xalan.templates.ElemParam: int m_qnameID>;

        if $i18 != $i17 goto label18;

        r16 = virtualinvoke r4.<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(int,int)>(i9, i3);

        virtualinvoke r4.<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject)>(i8, r16);

        goto label19;

     label18:
        i9 = i9 + 1;

        goto label17;

     label19:
        if i9 != i1 goto label20;

        virtualinvoke r4.<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject)>(i8, null);

     label20:
        i8 = i8 + 1;

        r14 = virtualinvoke r14.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        goto label16;

     label21:
        goto label23;

     label22:
        i7 = 0;

     label23:
        r35 = r13.<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label24:
        if r35 == null goto label30;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r35);

     label25:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r35);

        virtualinvoke r35.<org.apache.xalan.templates.ElemTemplateElement: void execute(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label26:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label29;

     label27:
        $r27 := @caughtexception;

        r19 = $r27;

     label28:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        throw r19;

     label29:
        r35 = r35.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label24;

     label30:
        $i14 = r13.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        if $i14 <= 0 goto label31;

        virtualinvoke r4.<org.apache.xpath.VariableStack: void unlink(int)>(i7);

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popRTFContext()>();

     label31:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popCurrentMatched()>();

        goto label08;

     label32:
        if i1 <= 0 goto label33;

        virtualinvoke r4.<org.apache.xpath.VariableStack: void unlink(int)>(i2);

     label33:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        if z0 == 0 goto label34;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popContextNodeList()>();

     label34:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: void detach()>();

        goto label43;

     label35:
        $r31 := @caughtexception;

        r36 = $r31;

        $r30 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r32 = new javax.xml.transform.TransformerException;

        specialinvoke $r32.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r36);

        interfaceinvoke $r30.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r32);

     label36:
        if i1 <= 0 goto label37;

        virtualinvoke r4.<org.apache.xpath.VariableStack: void unlink(int)>(i2);

     label37:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        if z0 == 0 goto label38;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popContextNodeList()>();

     label38:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: void detach()>();

        goto label43;

     label39:
        $r26 := @caughtexception;

        r18 = $r26;

     label40:
        if i1 <= 0 goto label41;

        virtualinvoke r4.<org.apache.xpath.VariableStack: void unlink(int)>(i2);

     label41:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        if z0 == 0 goto label42;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popContextNodeList()>();

     label42:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: void detach()>();

        throw r18;

     label43:
        return;

        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
        catch org.xml.sax.SAXException from label01 to label32 with label35;
        catch java.lang.Throwable from label01 to label32 with label39;
        catch java.lang.Throwable from label35 to label36 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemApplyTemplates: long serialVersionUID> = 2903125371542621004L;

        return;
    }
}
