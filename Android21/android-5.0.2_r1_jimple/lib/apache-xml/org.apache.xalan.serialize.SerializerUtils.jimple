public class org.apache.xalan.serialize.SerializerUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xalan.serialize.SerializerUtils r0;

        r0 := @this: org.apache.xalan.serialize.SerializerUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addAttribute(org.apache.xml.serializer.SerializationHandler, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.SerializationHandler r0;
        int i0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xml.dtm.DTM r2;
        java.lang.String r3, $r7, $r8, $r9;
        javax.xml.transform.Transformer $r5;
        org.apache.xpath.XPathContext $r6;
        boolean $z0;
        org.xml.sax.SAXException $r10;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        i0 := @parameter1: int;

        $r5 = interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: javax.xml.transform.Transformer getTransformer()>();

        r1 = (org.apache.xalan.transformer.TransformerImpl) $r5;

        $r6 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        r2 = virtualinvoke $r6.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $z0 = staticinvoke <org.apache.xalan.serialize.SerializerUtils: boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)>(r0, i0, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>(i0);

        if r3 != null goto label2;

        r3 = "";

     label2:
        $r7 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getLocalName(int)>(i0);

        $r8 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>(i0);

        $r9 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>(i0);

        interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r3, $r7, $r8, "CDATA", $r9, 0);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return;

        catch org.xml.sax.SAXException from label2 to label3 with label4;
    }

    public static void addAttributes(org.apache.xml.serializer.SerializationHandler, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.SerializationHandler r0;
        int i0, i1;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xml.dtm.DTM r2;
        javax.xml.transform.Transformer $r3;
        org.apache.xpath.XPathContext $r4;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        i0 := @parameter1: int;

        $r3 = interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: javax.xml.transform.Transformer getTransformer()>();

        r1 = (org.apache.xalan.transformer.TransformerImpl) $r3;

        $r4 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        r2 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getFirstAttribute(int)>(i0);

     label1:
        if -1 == i1 goto label2;

        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void addAttribute(org.apache.xml.serializer.SerializationHandler,int)>(r0, i1);

        i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getNextAttribute(int)>(i1);

        goto label1;

     label2:
        return;
    }

    public static void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler, org.apache.xpath.objects.XObject, org.apache.xpath.XPathContext) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializationHandler r0;
        org.apache.xpath.objects.XObject r1;
        org.apache.xpath.XPathContext r2;
        int i0, i1;
        org.apache.xml.dtm.DTM r3;
        short $s2;
        java.lang.String $r4;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r1 := @parameter1: org.apache.xpath.objects.XObject;

        r2 := @parameter2: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int rtf()>();

        r3 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        if null == r3 goto label3;

        i1 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: int getFirstChild(int)>(i0);

     label1:
        if -1 == i1 goto label3;

        interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $s2 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i1);

        if $s2 != 1 goto label2;

        $r4 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>(i1);

        if $r4 != null goto label2;

        interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: void startPrefixMapping(java.lang.String,java.lang.String)>("", "");

     label2:
        interfaceinvoke r3.<org.apache.xml.dtm.DTM: void dispatchToEvents(int,org.xml.sax.ContentHandler)>(i1, r0);

        i1 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: int getNextSibling(int)>(i1);

        goto label1;

     label3:
        return;
    }

    public static void processNSDecls(org.apache.xml.serializer.SerializationHandler, int, int, org.apache.xml.dtm.DTM) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.SerializationHandler r0;
        int i0, i1, i2;
        org.apache.xml.dtm.DTM r1;
        java.lang.String r2, r3, r4, r7, r8, r9;
        boolean $z0, $z2;
        javax.xml.transform.TransformerException $r5;
        org.xml.sax.SAXException $r6, r10;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: org.apache.xml.dtm.DTM;

     label1:
        if i1 != 1 goto label5;

        i2 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: int getFirstNamespaceNode(int,boolean)>(i0, 1);

     label2:
        if -1 == i2 goto label4;

        r2 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i2);

        r3 = interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: java.lang.String getNamespaceURIFromPrefix(java.lang.String)>(r2);

        r4 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>(i2);

        $z2 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z2 != 0 goto label3;

        interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r2, r4, 0);

     label3:
        i2 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: int getNextNamespaceNode(int,int,boolean)>(i0, i2, 1);

        goto label2;

     label4:
        goto label6;

     label5:
        if i1 != 13 goto label6;

        r7 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i0);

        r8 = interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: java.lang.String getNamespaceURIFromPrefix(java.lang.String)>(r7);

        r9 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>(i0);

        $z0 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r8);

        if $z0 != 0 goto label6;

        interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r7, r9, 0);

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        r10 = $r6;

        $r5 = new javax.xml.transform.TransformerException;

        specialinvoke $r5.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r10);

        throw $r5;

     label8:
        return;

        catch org.xml.sax.SAXException from label1 to label6 with label7;
    }

    public static boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler, int, org.apache.xml.dtm.DTM)
    {
        org.apache.xml.serializer.SerializationHandler r0;
        int i0;
        org.apache.xml.dtm.DTM r1;
        java.lang.String r2, r3;
        short $s1;
        org.apache.xml.utils.XMLString $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.xml.dtm.DTM;

        $s1 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

        if 13 != $s1 goto label1;

        r2 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i0);

        r3 = interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: java.lang.String getNamespaceURIFromPrefix(java.lang.String)>(r2);

        if null == r3 goto label1;

        $r4 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i0);

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler, org.apache.xml.dtm.DTM, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.SerializationHandler r0;
        org.apache.xml.dtm.DTM r1;
        int i0, $i1;
        java.lang.String r2, r3, r4;
        org.apache.xml.serializer.NamespaceMappings r5;
        boolean $z1;

        r0 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r1 := @parameter1: org.apache.xml.dtm.DTM;

        i0 := @parameter2: int;

        r2 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>(i0);

        r3 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i0);

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        if null == r3 goto label2;

        r5 = interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()>();

        if r5 == null goto label2;

        r4 = virtualinvoke r5.<org.apache.xml.serializer.NamespaceMappings: java.lang.String lookupNamespace(java.lang.String)>(r3);

        if null == r4 goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

     label1:
        interfaceinvoke r0.<org.apache.xml.serializer.SerializationHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r3, r2, 0);

     label2:
        return;
    }
}
