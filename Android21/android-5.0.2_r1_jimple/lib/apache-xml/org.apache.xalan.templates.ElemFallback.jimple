public class org.apache.xalan.templates.ElemFallback extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.ElemFallback r0;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemFallback r0;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        return 57;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemFallback r0;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        return "fallback";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemFallback r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public void executeFallback(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemFallback r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        int i0;
        org.apache.xalan.templates.ElemTemplateElement $r2;
        java.io.PrintStream $r3;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $r2 = r0.<org.apache.xalan.templates.ElemFallback: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        i0 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 79 == i0 goto label1;

        if -1 != i0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r0, 1);

        goto label3;

     label2:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Error!  parent of xsl:fallback must be an extension or unknown element!");

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemFallback: long serialVersionUID> = 1782962139867340703L;

        return;
    }
}
