public class org.apache.xml.utils.DOMBuilder extends java.lang.Object implements org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler
{
    public org.w3c.dom.Document m_doc;
    protected org.w3c.dom.Node m_currentNode;
    protected org.w3c.dom.Node m_root;
    protected org.w3c.dom.Node m_nextSibling;
    public org.w3c.dom.DocumentFragment m_docFrag;
    protected java.util.Stack m_elemStack;
    protected java.util.Vector m_prefixMappings;
    protected boolean m_inCData;

    public void <init>(org.w3c.dom.Document, org.w3c.dom.Node)
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Document r1;
        org.w3c.dom.Node r2;
        java.util.Stack $r3, $r5;
        java.util.Vector $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_root> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = null;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings> = $r4;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc> = r1;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_root> = r2;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = r2;

        $z0 = r2 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r2);

     label1:
        return;
    }

    public void <init>(org.w3c.dom.Document, org.w3c.dom.DocumentFragment)
    {
        java.util.Vector $r0;
        org.apache.xml.utils.DOMBuilder r1;
        org.w3c.dom.Document r2;
        org.w3c.dom.DocumentFragment r3;
        java.util.Stack $r4;

        r1 := @this: org.apache.xml.utils.DOMBuilder;

        r2 := @parameter0: org.w3c.dom.Document;

        r3 := @parameter1: org.w3c.dom.DocumentFragment;

        specialinvoke r1.<java.lang.Object: void <init>()>();

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = null;

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_root> = null;

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling> = null;

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = null;

        $r4 = new java.util.Stack;

        specialinvoke $r4.<java.util.Stack: void <init>()>();

        r1.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack> = $r4;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        r1.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings> = $r0;

        r1.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc> = r2;

        r1.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = r3;

        return;
    }

    public void <init>(org.w3c.dom.Document)
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Document r1;
        java.util.Stack $r2;
        java.util.Vector $r3;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_root> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling> = null;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag> = null;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings> = $r3;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc> = r1;

        return;
    }

    public org.w3c.dom.Node getRootDocument()
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.DocumentFragment $r1;
        org.w3c.dom.Node $r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

     label2:
        return $r2;
    }

    public org.w3c.dom.Node getRootNode()
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_root>;

        return $r1;
    }

    public org.w3c.dom.Node getCurrentNode()
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        return $r1;
    }

    public void setNextSibling(org.w3c.dom.Node)
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: org.w3c.dom.Node;

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling> = r1;

        return;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node $r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        return $r1;
    }

    public java.io.Writer getWriter()
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return null;
    }

    protected void append(org.w3c.dom.Node) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Node r1, r2, $r5, $r8, $r17, $r22, $r23, $r25, $r27;
        boolean z0;
        short s0;
        java.lang.String r3, $r13, $r15, $r18;
        org.w3c.dom.DocumentFragment $r4, $r20, $r21;
        org.w3c.dom.Document $r6, $r9, $r11;
        org.w3c.dom.Element $r12;
        org.xml.sax.SAXException $r14, $r16;
        int $i1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        if null == r2 goto label2;

        $r23 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_root>;

        if r2 != $r23 goto label1;

        $r25 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        if $r25 == null goto label1;

        $r27 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, $r27);

        goto label9;

     label1:
        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        goto label9;

     label2:
        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        if null == $r4 goto label4;

        $r17 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        if $r17 == null goto label3;

        $r21 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        $r22 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        interfaceinvoke $r21.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, $r22);

        goto label9;

     label3:
        $r20 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        interfaceinvoke $r20.<org.w3c.dom.DocumentFragment: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        goto label9;

     label4:
        z0 = 1;

        s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if s0 != 3 goto label6;

        r3 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if null == r3 goto label5;

        $r15 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $r16 = new org.xml.sax.SAXException;

        $r18 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANT_OUTPUT_TEXT_BEFORE_DOC", null);

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label5:
        z0 = 0;

        goto label7;

     label6:
        if s0 != 1 goto label7;

        $r11 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r12 = interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        if $r12 == null goto label7;

        $r14 = new org.xml.sax.SAXException;

        $r13 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANT_HAVE_MORE_THAN_ONE_ROOT", null);

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r13);

        throw $r14;

     label7:
        if z0 == 0 goto label9;

        $r5 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        if $r5 == null goto label8;

        $r9 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r8 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_nextSibling>;

        interfaceinvoke $r9.<org.w3c.dom.Document: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, $r8);

        goto label9;

     label8:
        $r6 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

     label9:
        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.xml.sax.Locator r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2, r3, r6, r7, $r17, $r18, $r19, $r21, r24, r25;
        org.xml.sax.Attributes r4;
        org.w3c.dom.Element r5;
        int i0, i1, i2, $i3, $i4, i5;
        org.w3c.dom.Document $r8, $r20;
        java.util.Vector $r9, $r11, $r12, $r16;
        java.util.Stack $r10;
        java.lang.Object $r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        org.xml.sax.SAXException $r22;
        java.lang.Exception $r23, r26;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        if null == r1 goto label01;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 != 0 goto label02;

     label01:
        $r8 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        r5 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(null, r3);

        goto label03;

     label02:
        $r20 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        r5 = interfaceinvoke $r20.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r1, r3);

     label03:
        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>(r5);

     label04:
        i0 = interfaceinvoke r4.<org.xml.sax.Attributes: int getLength()>();

        if 0 == i0 goto label10;

        i1 = 0;

     label05:
        if i1 >= i0 goto label10;

        $r17 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getType(int)>(i1);

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ID");

        if $z0 == 0 goto label06;

        $r21 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void setIDAttribute(java.lang.String,org.w3c.dom.Element)>($r21, r5);

     label06:
        r6 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i1);

        $r18 = "";

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label07;

        r6 = null;

     label07:
        r7 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i1);

        $z2 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 != 0 goto label08;

        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z3 == 0 goto label09;

     label08:
        r6 = "http://www.w3.org/2000/xmlns/";

     label09:
        $r19 = interfaceinvoke r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(r6, r7, $r19);

        i1 = i1 + 1;

        goto label05;

     label10:
        $r9 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings>;

        i5 = virtualinvoke $r9.<java.util.Vector: int size()>();

        i2 = 0;

     label11:
        if i2 >= i5 goto label14;

        $r12 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings>;

        $r14 = virtualinvoke $r12.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r24 = (java.lang.String) $r14;

        if r24 != null goto label12;

        goto label13;

     label12:
        $r16 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings>;

        $i3 = i2 + 1;

        $r15 = virtualinvoke $r16.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        r25 = (java.lang.String) $r15;

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r24, r25);

     label13:
        i2 = i2 + 2;

        goto label11;

     label14:
        $r11 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings>;

        virtualinvoke $r11.<java.util.Vector: void clear()>();

        $r10 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        virtualinvoke $r10.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r5);

        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = r5;

     label15:
        goto label17;

     label16:
        $r23 := @caughtexception;

        r26 = $r23;

        $r22 = new org.xml.sax.SAXException;

        specialinvoke $r22.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r26);

        throw $r22;

     label17:
        return;

        catch java.lang.Exception from label04 to label15 with label16;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2, r3;
        java.util.Stack $r4, $r6, $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.w3c.dom.Node $r9;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();

        $r6 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        $z0 = virtualinvoke $r6.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r7 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        $r8 = virtualinvoke $r7.<java.util.Stack: java.lang.Object peek()>();

        $r9 = (org.w3c.dom.Node) $r8;

     label2:
        r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode> = $r9;

        return;
    }

    public void setIDAttribute(java.lang.String, org.w3c.dom.Element)
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;
        org.w3c.dom.Element r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Element;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        char[] r1;
        int i0, i1;
        java.lang.String r2, $r5;
        org.w3c.dom.Node r3, $r6, $r9, $r10;
        org.w3c.dom.Text r4, $r8;
        boolean $z0, $z1, $z2;
        org.w3c.dom.Document $r7;
        short $s2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r1, i0, i1);

        if $z2 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void cdata(char[],int,int)>(r1, i0, i1);

        return;

     label2:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        r2 = $r5;

        $r6 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        if $r6 == null goto label3;

        $r9 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        goto label4;

     label3:
        $r10 = null;

     label4:
        r3 = $r10;

        if r3 == null goto label5;

        $s2 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        if $s2 != 3 goto label5;

        $r8 = (org.w3c.dom.Text) r3;

        interfaceinvoke $r8.<org.w3c.dom.Text: void appendData(java.lang.String)>(r2);

        goto label6;

     label5:
        $r7 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        r4 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>(r4);

     label6:
        return;
    }

    public void charactersRaw(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        char[] r1;
        int i0, i1;
        java.lang.String r2, $r3;
        boolean $z0, $z1;
        org.w3c.dom.Document $r4, $r6;
        org.w3c.dom.ProcessingInstruction $r5;
        org.w3c.dom.Text $r7;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r1, i0, i1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        r2 = $r3;

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>("xslt-next-is-raw", "formatter-to-dom");

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r5);

        $r6 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r7);

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;
        org.w3c.dom.Document $r2;
        org.w3c.dom.EntityReference $r3;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r3);

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        char[] r1;
        int i0, i1;
        java.lang.String r2, $r3;
        boolean $z0;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Text $r5;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        r2 = $r3;

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r5);

        return;
    }

    private boolean isOutsideDocElem()
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.DocumentFragment $r1;
        java.util.Stack $r2;
        int $i0;
        org.w3c.dom.Node $r3, $r4;
        boolean $z0;
        short $s1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.DocumentFragment m_docFrag>;

        if null != $r1 goto label2;

        $r2 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Stack m_elemStack>;

        $i0 = virtualinvoke $r2.<java.util.Stack: int size()>();

        if $i0 != 0 goto label2;

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        if null == $r3 goto label1;

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        $s1 = interfaceinvoke $r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2;
        org.w3c.dom.Document $r3;
        org.w3c.dom.ProcessingInstruction $r4;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r4);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        char[] r1;
        int i0, i1;
        java.lang.String $r2;
        org.w3c.dom.Document $r3;
        org.w3c.dom.Comment $r4;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r2);

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r4);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        org.w3c.dom.Document $r1;
        org.w3c.dom.CDATASection $r2;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 1;

        $r1 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Document m_doc>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>("");

        virtualinvoke r0.<org.apache.xml.utils.DOMBuilder: void append(org.w3c.dom.Node)>($r2);

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r0.<org.apache.xml.utils.DOMBuilder: boolean m_inCData> = 0;

        return;
    }

    public void cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        char[] r1;
        int i0, i1;
        java.lang.String r2, $r4;
        org.w3c.dom.CDATASection r3;
        boolean $z0, $z1;
        org.w3c.dom.Node $r5, $r6;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.xml.utils.DOMBuilder: boolean isOutsideDocElem()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char[],int,int)>(r1, i0, i1);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        r2 = $r4;

        $r5 = r0.<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node m_currentNode>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        r3 = (org.w3c.dom.CDATASection) $r6;

        interfaceinvoke r3.<org.w3c.dom.CDATASection: void appendData(java.lang.String)>(r2);

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1, r2, r8;
        java.util.Vector $r3, $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if null == r1 goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        r8 = "xmlns";

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r3 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r8);

        $r4 = r0.<org.apache.xml.utils.DOMBuilder: java.util.Vector m_prefixMappings>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r2);

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.DOMBuilder r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.DOMBuilder;

        r1 := @parameter0: java.lang.String;

        return;
    }
}
