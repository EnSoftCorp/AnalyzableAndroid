public class org.apache.xpath.functions.FunctionMultiArgs extends org.apache.xpath.functions.Function3Args
{
    static final long serialVersionUID;
    org.apache.xpath.Expression[] m_args;

    public void <init>()
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        specialinvoke r0.<org.apache.xpath.functions.Function3Args: void <init>()>();

        return;
    }

    public org.apache.xpath.Expression[] getArgs()
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        org.apache.xpath.Expression[] $r1;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        $r1 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        return $r1;
    }

    public void setArg(org.apache.xpath.Expression, int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        org.apache.xpath.Expression r1;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.xpath.Expression[] r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        r1 := @parameter0: org.apache.xpath.Expression;

        i0 := @parameter1: int;

        if i0 >= 3 goto label1;

        specialinvoke r0.<org.apache.xpath.functions.Function3Args: void setArg(org.apache.xpath.Expression,int)>(r1, i0);

        goto label4;

     label1:
        $r3 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        if null != $r3 goto label2;

        $r8 = newarray (org.apache.xpath.Expression)[1];

        r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args> = $r8;

        $r9 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r9[0] = r1;

        goto label3;

     label2:
        $r4 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $i1 = lengthof $r4;

        $i2 = $i1 + 1;

        r2 = newarray (org.apache.xpath.Expression)[$i2];

        $r6 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r5 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $i3 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, $i3);

        $r7 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $i4 = lengthof $r7;

        r2[$i4] = r1;

        r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args> = r2;

     label3:
        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

     label4:
        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        java.util.Vector r1;
        int i0, i1, $i2;
        org.apache.xpath.Expression[] $r2, $r3, $r4;
        org.apache.xpath.Expression $r5;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.functions.Function3Args: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        if null == $r2 goto label2;

        i1 = 0;

     label1:
        $r3 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label2;

        $r4 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r5 = $r4[i1];

        virtualinvoke $r5.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        int i0;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        i0 := @parameter0: int;

        return;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "Programmer\'s assertion:  the method FunctionMultiArgs.reportWrongNumberArgs() should never be called.";

        r1 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INCORRECT_PROGRAMMER_ASSERTION", $r2);

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        int i0, i1;
        boolean $z0, $z1;
        org.apache.xpath.Expression[] $r1, $r2;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        $z0 = specialinvoke r0.<org.apache.xpath.functions.Function3Args: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        i0 = lengthof $r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r3 = $r2[i1];

        $z1 = virtualinvoke $r3.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void callArgVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.functions.FunctionMultiArgs r0;
        org.apache.xpath.XPathVisitor r1;
        int i0, i1;
        org.apache.xpath.Expression[] $r2, $r3, $r4;
        org.apache.xpath.functions.FunctionMultiArgs$ArgMultiOwner $r5;
        org.apache.xpath.Expression $r6;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        specialinvoke r0.<org.apache.xpath.functions.Function3Args: void callArgVisitors(org.apache.xpath.XPathVisitor)>(r1);

        $r2 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        if null == $r2 goto label2;

        $r3 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r6 = $r4[i1];

        $r5 = new org.apache.xpath.functions.FunctionMultiArgs$ArgMultiOwner;

        specialinvoke $r5.<org.apache.xpath.functions.FunctionMultiArgs$ArgMultiOwner: void <init>(org.apache.xpath.functions.FunctionMultiArgs,int)>(r0, i1);

        virtualinvoke $r6.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r5, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.functions.FunctionMultiArgs r0, r2;
        org.apache.xpath.Expression r1, $r9, $r10;
        int i0, i1, $i2;
        boolean $z0, $z1;
        org.apache.xpath.Expression[] $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.xpath.functions.FunctionMultiArgs;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.functions.Function3Args: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.xpath.functions.FunctionMultiArgs) r1;

        $r3 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        if null == $r3 goto label7;

        $r5 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        i0 = lengthof $r5;

        if null == r2 goto label2;

        $r6 = r2.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $i2 = lengthof $r6;

        if $i2 == i0 goto label3;

     label2:
        return 0;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        $r7 = r0.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r10 = $r7[i1];

        $r8 = r2.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        $r9 = $r8[i1];

        $z1 = virtualinvoke $r10.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r9);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        goto label8;

     label7:
        $r4 = r2.<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] m_args>;

        if null == $r4 goto label8;

        return 0;

     label8:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FunctionMultiArgs: long serialVersionUID> = 7117257746138417181L;

        return;
    }
}
