public class org.apache.xalan.templates.StylesheetComposed extends org.apache.xalan.templates.Stylesheet
{
    static final long serialVersionUID;
    private int m_importNumber;
    private int m_importCountComposed;
    private int m_endImportCountComposed;
    private transient java.util.Vector m_includesComposed;

    public void <init>(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        org.apache.xalan.templates.Stylesheet r1;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        specialinvoke r0.<org.apache.xalan.templates.Stylesheet: void <init>(org.apache.xalan.templates.Stylesheet)>(r1);

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber> = -1;

        return;
    }

    public boolean isAggregatedType()
    {
        org.apache.xalan.templates.StylesheetComposed r0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        return 1;
    }

    public void recompose(java.util.Vector) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        java.util.Vector r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19;
        org.apache.xalan.templates.Stylesheet r2;
        org.apache.xalan.templates.WhiteSpaceInfo $r3, $r4;
        org.apache.xalan.templates.ElemTemplate $r5;
        org.apache.xalan.templates.ElemVariable $r6;
        org.apache.xalan.templates.KeyDeclaration $r7;
        org.apache.xalan.templates.NamespaceAlias $r8;
        org.apache.xalan.templates.ElemAttributeSet $r9;
        org.apache.xalan.templates.DecimalFormatProperties $r10;
        org.apache.xalan.templates.OutputProperties $r11;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        r1 := @parameter0: java.util.Vector;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()>();

        i1 = -1;

     label01:
        if i1 >= i0 goto label20;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i1);

        i2 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getOutputCount()>();

        i3 = 0;

     label02:
        if i3 >= i2 goto label03;

        $r11 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.OutputProperties getOutput(int)>(i3);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r11);

        i3 = i3 + 1;

        goto label02;

     label03:
        i4 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getAttributeSetCount()>();

        i5 = 0;

     label04:
        if i5 >= i4 goto label05;

        $r9 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemAttributeSet getAttributeSet(int)>(i5);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r9);

        i5 = i5 + 1;

        goto label04;

     label05:
        i6 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getDecimalFormatCount()>();

        i7 = 0;

     label06:
        if i7 >= i6 goto label07;

        $r10 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int)>(i7);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        i7 = i7 + 1;

        goto label06;

     label07:
        i8 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getKeyCount()>();

        i9 = 0;

     label08:
        if i9 >= i8 goto label09;

        $r7 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.KeyDeclaration getKey(int)>(i9);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        i9 = i9 + 1;

        goto label08;

     label09:
        i10 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getNamespaceAliasCount()>();

        i11 = 0;

     label10:
        if i11 >= i10 goto label11;

        $r8 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.NamespaceAlias getNamespaceAlias(int)>(i11);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        i11 = i11 + 1;

        goto label10;

     label11:
        i12 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getTemplateCount()>();

        i13 = 0;

     label12:
        if i13 >= i12 goto label13;

        $r5 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplate getTemplate(int)>(i13);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        i13 = i13 + 1;

        goto label12;

     label13:
        i14 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()>();

        i15 = 0;

     label14:
        if i15 >= i14 goto label15;

        $r6 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)>(i15);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        i15 = i15 + 1;

        goto label14;

     label15:
        i16 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getStripSpaceCount()>();

        i17 = 0;

     label16:
        if i17 >= i16 goto label17;

        $r3 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getStripSpace(int)>(i17);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        i17 = i17 + 1;

        goto label16;

     label17:
        i18 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: int getPreserveSpaceCount()>();

        i19 = 0;

     label18:
        if i19 >= i18 goto label19;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getPreserveSpace(int)>(i19);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        i19 = i19 + 1;

        goto label18;

     label19:
        i1 = i1 + 1;

        goto label01;

     label20:
        return;
    }

    void recomposeImports()
    {
        org.apache.xalan.templates.StylesheetComposed r0, $r5, $r6;
        org.apache.xalan.templates.StylesheetRoot r1, $r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        org.apache.xalan.templates.Stylesheet $r3, $r4;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $i3 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot: int getImportNumber(org.apache.xalan.templates.StylesheetComposed)>(r0);

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber> = $i3;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        i0 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()>();

        $i4 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber>;

        $i5 = i0 - $i4;

        $i6 = $i5 - 1;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_importCountComposed> = $i6;

        i1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: int getImportCount()>();

        if i1 <= 0 goto label2;

        $i11 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $i14 = $i11 + i1;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i14;

     label1:
        if i1 <= 0 goto label2;

        $i13 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        i1 = i1 + -1;

        $r6 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.StylesheetComposed getImport(int)>(i1);

        $i15 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()>();

        $i16 = $i13 + $i15;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i16;

        goto label1;

     label2:
        i17 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()>();

     label3:
        if i17 <= 0 goto label6;

        i17 = i17 + -1;

        $r3 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i17);

        i2 = virtualinvoke $r3.<org.apache.xalan.templates.Stylesheet: int getImportCount()>();

        $i8 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $i7 = $i8 + i2;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i7;

     label4:
        if i2 <= 0 goto label5;

        $i9 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i17);

        i2 = i2 + -1;

        $r5 = virtualinvoke $r4.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getImport(int)>(i2);

        $i10 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()>();

        $i12 = $i9 + $i10;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i12;

        goto label4;

     label5:
        goto label3;

     label6:
        return;
    }

    public org.apache.xalan.templates.StylesheetComposed getImportComposed(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.StylesheetComposed r0, $r2;
        int i0, $i1, $i2, $i3;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $i1 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber>;

        $i2 = 1 + $i1;

        $i3 = $i2 + i0;

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)>($i3);

        return $r2;
    }

    public int getImportCountComposed()
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $i0 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_importCountComposed>;

        return $i0;
    }

    public int getEndImportCountComposed()
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $i0 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        return $i0;
    }

    void recomposeIncludes(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        org.apache.xalan.templates.Stylesheet r1, r2;
        int i0, i1;
        java.util.Vector $r3, $r4, $r5;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: int getIncludeCount()>();

        if i0 <= 0 goto label3;

        $r3 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        if null != $r3 goto label1;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed> = $r5;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = virtualinvoke r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getInclude(int)>(i1);

        $r4 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r2);

        virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: void recomposeIncludes(org.apache.xalan.templates.Stylesheet)>(r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public org.apache.xalan.templates.Stylesheet getIncludeComposed(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        int i0;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.templates.Stylesheet $r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        i0 := @parameter0: int;

        if -1 != i0 goto label1;

        return r0;

     label1:
        $r1 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        if null != $r1 goto label2;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        $r2 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.Stylesheet) $r3;

        return $r4;
    }

    public int getIncludeCountComposed()
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        java.util.Vector $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $r1 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void recomposeTemplates(boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        z0 := @parameter0: boolean;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.StylesheetComposed: long serialVersionUID> = -3444072247410233923L;

        return;
    }
}
