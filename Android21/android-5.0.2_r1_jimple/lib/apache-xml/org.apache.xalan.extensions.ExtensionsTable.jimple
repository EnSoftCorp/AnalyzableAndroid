public class org.apache.xalan.extensions.ExtensionsTable extends java.lang.Object
{
    public java.util.Hashtable m_extensionFunctionNamespaces;
    private org.apache.xalan.templates.StylesheetRoot m_sroot;

    public void <init>(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        org.apache.xalan.templates.StylesheetRoot r1, $r6;
        java.util.Vector r2;
        int i0, $i1;
        org.apache.xalan.extensions.ExtensionNamespaceSupport r3;
        org.apache.xalan.extensions.ExtensionHandler r4;
        java.util.Hashtable $r5;
        java.lang.Object $r7;
        java.lang.String $r8;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces> = $r5;

        r0.<org.apache.xalan.extensions.ExtensionsTable: org.apache.xalan.templates.StylesheetRoot m_sroot> = r1;

        $r6 = r0.<org.apache.xalan.extensions.ExtensionsTable: org.apache.xalan.templates.StylesheetRoot m_sroot>;

        r2 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getExtensions()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke r2.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label3;

        $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object get(int)>(i0);

        r3 = (org.apache.xalan.extensions.ExtensionNamespaceSupport) $r7;

        r4 = virtualinvoke r3.<org.apache.xalan.extensions.ExtensionNamespaceSupport: org.apache.xalan.extensions.ExtensionHandler launch()>();

        if r4 == null goto label2;

        $r8 = virtualinvoke r3.<org.apache.xalan.extensions.ExtensionNamespaceSupport: java.lang.String getNamespace()>();

        virtualinvoke r0.<org.apache.xalan.extensions.ExtensionsTable: void addExtensionNamespace(java.lang.String,org.apache.xalan.extensions.ExtensionHandler)>($r8, r4);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public org.apache.xalan.extensions.ExtensionHandler get(java.lang.String)
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        org.apache.xalan.extensions.ExtensionHandler $r4;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xalan.extensions.ExtensionHandler) $r3;

        return $r4;
    }

    public void addExtensionNamespace(java.lang.String, org.apache.xalan.extensions.ExtensionHandler)
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        java.lang.String r1;
        org.apache.xalan.extensions.ExtensionHandler r2;
        java.util.Hashtable $r3;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xalan.extensions.ExtensionHandler;

        $r3 = r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean functionAvailable(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        java.lang.String r1, r2;
        boolean z0;
        org.apache.xalan.extensions.ExtensionHandler r3;
        java.util.Hashtable $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 = 0;

        if null == r1 goto label1;

        $r4 = r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (org.apache.xalan.extensions.ExtensionHandler) $r5;

        if r3 == null goto label1;

        z0 = virtualinvoke r3.<org.apache.xalan.extensions.ExtensionHandler: boolean isFunctionAvailable(java.lang.String)>(r2);

     label1:
        return z0;
    }

    public boolean elementAvailable(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        java.lang.String r1, r2;
        boolean z0;
        org.apache.xalan.extensions.ExtensionHandler r3;
        java.util.Hashtable $r4;
        java.lang.Object $r5;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 = 0;

        if null == r1 goto label1;

        $r4 = r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (org.apache.xalan.extensions.ExtensionHandler) $r5;

        if r3 == null goto label1;

        z0 = virtualinvoke r3.<org.apache.xalan.extensions.ExtensionHandler: boolean isElementAvailable(java.lang.String)>(r2);

     label1:
        return z0;
    }

    public java.lang.Object extFunction(java.lang.String, java.lang.String, java.util.Vector, java.lang.Object, org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        java.lang.String r1, r2, $r13;
        java.util.Vector r3;
        java.lang.Object r4, r6, $r10;
        org.apache.xalan.extensions.ExpressionContext r5;
        org.apache.xalan.extensions.ExtensionHandler r7;
        javax.xml.transform.TransformerException r8, $r15, $r16;
        java.util.Hashtable $r9;
        org.apache.xpath.XPathProcessorException $r11;
        java.lang.Object[] $r12;
        java.lang.Exception $r14, r17;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Vector;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: org.apache.xalan.extensions.ExpressionContext;

        r6 = null;

        if null == r1 goto label6;

        $r9 = r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.apache.xalan.extensions.ExtensionHandler) $r10;

        if null == r7 goto label5;

     label1:
        r6 = virtualinvoke r7.<org.apache.xalan.extensions.ExtensionHandler: java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)>(r2, r3, r4, r5);

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

        r8 = $r15;

        throw r8;

     label4:
        $r14 := @caughtexception;

        r17 = $r14;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r17);

        throw $r16;

     label5:
        $r11 = new org.apache.xpath.XPathProcessorException;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r1;

        $r12[1] = r2;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_EXTENSION_FUNC_UNKNOWN", $r12);

        specialinvoke $r11.<org.apache.xpath.XPathProcessorException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label6:
        return r6;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction, java.util.Vector, org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable r0;
        org.apache.xpath.functions.FuncExtFunction r1;
        java.util.Vector r2;
        org.apache.xalan.extensions.ExpressionContext r3;
        java.lang.Object r4, $r9;
        java.lang.String r5, $r12, $r13;
        org.apache.xalan.extensions.ExtensionHandler r6;
        javax.xml.transform.TransformerException r7, $r15, $r16;
        java.util.Hashtable $r8;
        org.apache.xpath.XPathProcessorException $r10;
        java.lang.Object[] $r11;
        java.lang.Exception $r14, r17;

        r0 := @this: org.apache.xalan.extensions.ExtensionsTable;

        r1 := @parameter0: org.apache.xpath.functions.FuncExtFunction;

        r2 := @parameter1: java.util.Vector;

        r3 := @parameter2: org.apache.xalan.extensions.ExpressionContext;

        r4 = null;

        r5 = virtualinvoke r1.<org.apache.xpath.functions.FuncExtFunction: java.lang.String getNamespace()>();

        if null == r5 goto label6;

        $r8 = r0.<org.apache.xalan.extensions.ExtensionsTable: java.util.Hashtable m_extensionFunctionNamespaces>;

        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (org.apache.xalan.extensions.ExtensionHandler) $r9;

        if null == r6 goto label5;

     label1:
        r4 = virtualinvoke r6.<org.apache.xalan.extensions.ExtensionHandler: java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)>(r1, r2, r3);

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

        r7 = $r15;

        throw r7;

     label4:
        $r14 := @caughtexception;

        r17 = $r14;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r17);

        throw $r16;

     label5:
        $r10 = new org.apache.xpath.XPathProcessorException;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r5;

        $r12 = virtualinvoke r1.<org.apache.xpath.functions.FuncExtFunction: java.lang.String getFunctionName()>();

        $r11[1] = $r12;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_EXTENSION_FUNC_UNKNOWN", $r11);

        specialinvoke $r10.<org.apache.xpath.XPathProcessorException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label6:
        return r4;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }
}
