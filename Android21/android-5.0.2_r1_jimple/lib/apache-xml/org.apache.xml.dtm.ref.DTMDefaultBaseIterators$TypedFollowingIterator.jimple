public final class org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator
{
    private final int _nodeType;
    final org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0;

    public void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseIterators;

        i0 := @parameter1: int;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        org.apache.xml.dtm.DTMAxisTraverser $r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators $r2, $r3;
        short $s7;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator;

     label1:
        i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _currentNode>;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        $i2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _startNode>;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _currentNode>;

        $i3 = virtualinvoke $r1.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>($i2, $i1);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _currentNode> = $i3;

        if i0 == -1 goto label2;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: int getExpandedTypeID(int)>(i0);

        $i6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _nodeType>;

        if $i5 == $i6 goto label2;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $s7 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: short getNodeType(int)>(i0);

        $i8 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int _nodeType>;

        if $s7 != $i8 goto label1;

     label2:
        if i0 != -1 goto label3;

        $i4 = -1;

        goto label4;

     label3:
        $i4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator: int returnNode(int)>(i0);

     label4:
        return $i4;
    }
}
