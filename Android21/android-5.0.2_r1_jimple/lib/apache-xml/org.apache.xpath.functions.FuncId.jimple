public class org.apache.xpath.functions.FuncId extends org.apache.xpath.functions.FunctionOneArg
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.functions.FuncId r0;

        r0 := @this: org.apache.xpath.functions.FuncId;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    private org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext, int, java.lang.String, org.apache.xml.utils.StringVector, org.apache.xpath.NodeSetDTM, boolean)
    {
        org.apache.xpath.functions.FuncId r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1;
        java.lang.String r2, r9;
        org.apache.xml.utils.StringVector r3, $r8;
        org.apache.xpath.NodeSetDTM r4;
        boolean z0, z1, $z2;
        java.util.StringTokenizer r5, $r7;
        org.apache.xml.dtm.DTM r6;

        r0 := @this: org.apache.xpath.functions.FuncId;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.apache.xml.utils.StringVector;

        r4 := @parameter4: org.apache.xpath.NodeSetDTM;

        z0 := @parameter5: boolean;

        if null == r2 goto label7;

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String)>(r2);

        r5 = $r7;

        z1 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        r6 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

     label1:
        if z1 == 0 goto label7;

        r9 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        z1 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if null == r3 goto label2;

        $z2 = virtualinvoke r3.<org.apache.xml.utils.StringVector: boolean contains(java.lang.String)>(r9);

        if $z2 == 0 goto label2;

        goto label1;

     label2:
        i1 = interfaceinvoke r6.<org.apache.xml.dtm.DTM: int getElementById(java.lang.String)>(r9);

        if -1 == i1 goto label3;

        virtualinvoke r4.<org.apache.xpath.NodeSetDTM: int addNodeInDocOrder(int,org.apache.xpath.XPathContext)>(i1, r1);

     label3:
        if null == r9 goto label6;

        if z1 != 0 goto label4;

        if z0 == 0 goto label6;

     label4:
        if null != r3 goto label5;

        $r8 = new org.apache.xml.utils.StringVector;

        specialinvoke $r8.<org.apache.xml.utils.StringVector: void <init>()>();

        r3 = $r8;

     label5:
        virtualinvoke r3.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>(r9);

     label6:
        goto label1;

     label7:
        return r3;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncId r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2, i3;
        org.apache.xml.dtm.DTM r2, r8;
        org.apache.xpath.objects.XObject r3;
        org.apache.xpath.objects.XNodeSet r4, $r12;
        org.apache.xpath.NodeSetDTM r5;
        org.apache.xml.dtm.DTMIterator r6;
        org.apache.xml.utils.StringVector r7;
        java.lang.String r9, r15;
        org.apache.xpath.Expression $r10;
        org.apache.xml.dtm.DTMManager $r11;
        org.apache.xml.utils.XMLString $r14;
        boolean $z0;

        r0 := @this: org.apache.xpath.functions.FuncId;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getDocument()>();

        if -1 != i1 goto label1;

        virtualinvoke r0.<org.apache.xpath.functions.FuncId: void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "ER_CONTEXT_HAS_NO_OWNERDOC", null);

     label1:
        $r10 = r0.<org.apache.xpath.functions.FuncId: org.apache.xpath.Expression m_arg0>;

        r3 = virtualinvoke $r10.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        i2 = virtualinvoke r3.<org.apache.xpath.objects.XObject: int getType()>();

        $r12 = new org.apache.xpath.objects.XNodeSet;

        $r11 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r12.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMManager)>($r11);

        r4 = $r12;

        r5 = virtualinvoke r4.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        if 4 != i2 goto label6;

        r6 = virtualinvoke r3.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        r7 = null;

        i3 = interfaceinvoke r6.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

     label2:
        if -1 == i3 goto label5;

        r8 = interfaceinvoke r6.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>(i3);

        $r14 = interfaceinvoke r8.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i3);

        r9 = interfaceinvoke $r14.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        i3 = interfaceinvoke r6.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        if -1 == i3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        r7 = specialinvoke r0.<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)>(r1, i1, r9, r7, r5, $z0);

        goto label2;

     label5:
        goto label8;

     label6:
        if -1 != i2 goto label7;

        return r4;

     label7:
        r15 = virtualinvoke r3.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        specialinvoke r0.<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)>(r1, i1, r15, null, r5, 0);

     label8:
        return r4;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncId: long serialVersionUID> = 8930573966143567310L;

        return;
    }
}
