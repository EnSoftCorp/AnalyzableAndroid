public class org.apache.xpath.axes.HasPositionalPredChecker extends org.apache.xpath.XPathVisitor
{
    private boolean m_hasPositionalPred;
    private int m_predDepth;

    public void <init>()
    {
        org.apache.xpath.axes.HasPositionalPredChecker r0;

        r0 := @this: org.apache.xpath.axes.HasPositionalPredChecker;

        specialinvoke r0.<org.apache.xpath.XPathVisitor: void <init>()>();

        r0.<org.apache.xpath.axes.HasPositionalPredChecker: boolean m_hasPositionalPred> = 0;

        r0.<org.apache.xpath.axes.HasPositionalPredChecker: int m_predDepth> = 0;

        return;
    }

    public static boolean check(org.apache.xpath.axes.LocPathIterator)
    {
        org.apache.xpath.axes.LocPathIterator r0;
        org.apache.xpath.axes.HasPositionalPredChecker r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.xpath.axes.LocPathIterator;

        $r2 = new org.apache.xpath.axes.HasPositionalPredChecker;

        specialinvoke $r2.<org.apache.xpath.axes.HasPositionalPredChecker: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<org.apache.xpath.axes.LocPathIterator: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(null, r1);

        $z0 = r1.<org.apache.xpath.axes.HasPositionalPredChecker: boolean m_hasPositionalPred>;

        return $z0;
    }

    public boolean visitFunction(org.apache.xpath.ExpressionOwner, org.apache.xpath.functions.Function)
    {
        org.apache.xpath.axes.HasPositionalPredChecker r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.functions.Function r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.axes.HasPositionalPredChecker;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.functions.Function;

        $z0 = r2 instanceof org.apache.xpath.functions.FuncPosition;

        if $z0 != 0 goto label1;

        $z1 = r2 instanceof org.apache.xpath.functions.FuncLast;

        if $z1 == 0 goto label2;

     label1:
        r0.<org.apache.xpath.axes.HasPositionalPredChecker: boolean m_hasPositionalPred> = 1;

     label2:
        return 1;
    }

    public boolean visitPredicate(org.apache.xpath.ExpressionOwner, org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.HasPositionalPredChecker r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.Expression r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: org.apache.xpath.axes.HasPositionalPredChecker;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.Expression;

        $i0 = r0.<org.apache.xpath.axes.HasPositionalPredChecker: int m_predDepth>;

        $i1 = $i0 + 1;

        r0.<org.apache.xpath.axes.HasPositionalPredChecker: int m_predDepth> = $i1;

        $i2 = r0.<org.apache.xpath.axes.HasPositionalPredChecker: int m_predDepth>;

        if $i2 != 1 goto label3;

        $z0 = r2 instanceof org.apache.xpath.operations.Variable;

        if $z0 != 0 goto label1;

        $z1 = r2 instanceof org.apache.xpath.objects.XNumber;

        if $z1 != 0 goto label1;

        $z2 = r2 instanceof org.apache.xpath.operations.Div;

        if $z2 != 0 goto label1;

        $z3 = r2 instanceof org.apache.xpath.operations.Plus;

        if $z3 != 0 goto label1;

        $z4 = r2 instanceof org.apache.xpath.operations.Minus;

        if $z4 != 0 goto label1;

        $z5 = r2 instanceof org.apache.xpath.operations.Mod;

        if $z5 != 0 goto label1;

        $z6 = r2 instanceof org.apache.xpath.operations.Quo;

        if $z6 != 0 goto label1;

        $z7 = r2 instanceof org.apache.xpath.operations.Mult;

        if $z7 != 0 goto label1;

        $z9 = r2 instanceof org.apache.xpath.operations.Number;

        if $z9 != 0 goto label1;

        $z8 = r2 instanceof org.apache.xpath.functions.Function;

        if $z8 == 0 goto label2;

     label1:
        r0.<org.apache.xpath.axes.HasPositionalPredChecker: boolean m_hasPositionalPred> = 1;

        goto label3;

     label2:
        virtualinvoke r2.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(r1, r0);

     label3:
        $i3 = r0.<org.apache.xpath.axes.HasPositionalPredChecker: int m_predDepth>;

        $i4 = $i3 - 1;

        r0.<org.apache.xpath.axes.HasPositionalPredChecker: int m_predDepth> = $i4;

        return 0;
    }
}
