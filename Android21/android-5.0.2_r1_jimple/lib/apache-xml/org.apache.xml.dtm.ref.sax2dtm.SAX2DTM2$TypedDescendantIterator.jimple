public final class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator extends org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator
{
    private final int _nodeType;
    final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2, int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        i0 := @parameter1: int;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r3, $r6, $r7, $r8, $r11, $r12;
        org.apache.xml.dtm.ref.ExtendedType[] $r4, $r10;
        org.apache.xml.dtm.ref.ExtendedType $r5, $r9;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator;

        i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _startNode>;

        $i4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _startNode>;

        if $i4 != -1 goto label01;

        return -1;

     label01:
        i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _currentNode>;

        i3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _nodeType>;

        if i3 == 1 goto label05;

     label02:
        i1 = i1 + 1;

        $r11 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i2 = virtualinvoke $r11.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i1);

        if -1 == i2 goto label03;

        $r12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i10 = virtualinvoke $r12.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i1);

        if $i10 >= i0 goto label04;

        if i0 == i1 goto label04;

     label03:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _currentNode> = -1;

        return -1;

     label04:
        if i2 != i3 goto label02;

        goto label11;

     label05:
        if i0 != 0 goto label08;

     label06:
        i1 = i1 + 1;

        $r7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i11 = virtualinvoke $r7.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i1);

        if -1 != i11 goto label07;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _currentNode> = -1;

        return -1;

     label07:
        if i11 < 14 goto label06;

        $r8 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r10 = $r8.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.dtm.ref.ExtendedType[] m_extendedTypes>;

        $r9 = $r10[i11];

        $i9 = virtualinvoke $r9.<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()>();

        if $i9 != 1 goto label06;

        goto label11;

     label08:
        i1 = i1 + 1;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i12 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i1);

        if -1 == i12 goto label09;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i1);

        if $i5 >= i0 goto label10;

        if i0 == i1 goto label10;

     label09:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _currentNode> = -1;

        return -1;

     label10:
        if i12 < 14 goto label08;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.dtm.ref.ExtendedType[] m_extendedTypes>;

        $r5 = $r4[i12];

        $i6 = virtualinvoke $r5.<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()>();

        if $i6 != 1 goto label08;

     label11:
        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int _currentNode> = i1;

        $r6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i7 = virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeHandle(int)>(i1);

        $i8 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedDescendantIterator: int returnNode(int)>($i7);

        return $i8;
    }
}
