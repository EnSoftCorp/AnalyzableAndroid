public class org.apache.xpath.patterns.ContextMatchStepPattern extends org.apache.xpath.patterns.StepPattern
{
    static final long serialVersionUID;

    public void <init>(int, int)
    {
        org.apache.xpath.patterns.ContextMatchStepPattern r0;
        int i0, i1;

        r0 := @this: org.apache.xpath.patterns.ContextMatchStepPattern;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.patterns.StepPattern: void <init>(int,int,int)>(-1, i0, i1);

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.ContextMatchStepPattern r0;
        org.apache.xpath.XPathContext r1;
        int $i0, $i1;
        org.apache.xpath.objects.XNumber $r2, $r3;

        r0 := @this: org.apache.xpath.patterns.ContextMatchStepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getIteratorRoot()>();

        $i1 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        if $i0 != $i1 goto label1;

        $r3 = virtualinvoke r0.<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XNumber getStaticScore()>();

        return $r3;

     label1:
        $r2 = <org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        return $r2;
    }

    public org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext, org.apache.xpath.patterns.StepPattern) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.ContextMatchStepPattern r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.patterns.StepPattern r2;
        org.apache.xpath.objects.XObject r3, r6, r9;
        int i0, i2, i3, i4, i5, $i6;
        org.apache.xml.dtm.DTM r4;
        org.apache.xml.dtm.DTMAxisTraverser r5, r7;
        boolean z0, z1, $z2, $z3;
        java.lang.Throwable r8, r10, $r14, $r15;
        short $s7, $s8;
        org.apache.xpath.objects.XNumber $r11, $r12, $r13;
        byte b9;

        r0 := @this: org.apache.xpath.patterns.ContextMatchStepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xpath.patterns.StepPattern;

        r3 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r4 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        if null == r4 goto label23;

        virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        i2 = r0.<org.apache.xpath.patterns.ContextMatchStepPattern: int m_axis>;

        z0 = staticinvoke <org.apache.xpath.axes.WalkerFactory: boolean isDownwardAxisOfMany(int)>(i2);

        $i6 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getIteratorRoot()>();

        $s7 = interfaceinvoke r4.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i6);

        if $s7 != 2 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z1 = $z3;

        if 11 != i2 goto label03;

        if z1 == 0 goto label03;

        i2 = 15;

     label03:
        r5 = interfaceinvoke r4.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>(i2);

        i3 = virtualinvoke r5.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i0);

     label04:
        if -1 == i3 goto label23;

     label05:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i3);

        r3 = virtualinvoke r0.<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r11 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 == $r11 goto label08;

        $z2 = virtualinvoke r0.<org.apache.xpath.patterns.ContextMatchStepPattern: boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)>(r1, r4, i0);

        if $z2 == 0 goto label07;

        r6 = r3;

     label06:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return r6;

     label07:
        r3 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

     label08:
        if z0 == 0 goto label19;

        if z1 == 0 goto label19;

        $s8 = interfaceinvoke r4.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i3);

        if 1 != $s8 goto label19;

        b9 = 2;

        i4 = 0;

     label09:
        if i4 >= 2 goto label19;

        r7 = interfaceinvoke r4.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>(b9);

        i5 = virtualinvoke r7.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i3);

     label10:
        if -1 == i5 goto label18;

     label11:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i5);

        r3 = virtualinvoke r0.<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r12 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 == $r12 goto label14;

        $r13 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 == $r13 goto label14;

        r9 = r3;

     label12:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

     label13:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return r9;

     label14:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label17;

     label15:
        $r14 := @caughtexception;

        r8 = $r14;

     label16:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r8;

     label17:
        i5 = virtualinvoke r7.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>(i3, i5);

        goto label10;

     label18:
        b9 = 9;

        i4 = i4 + 1;

        goto label09;

     label19:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label22;

     label20:
        $r15 := @caughtexception;

        r10 = $r15;

     label21:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r10;

     label22:
        i3 = virtualinvoke r5.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>(i0, i3);

        goto label04;

     label23:
        return r3;

        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label13 with label20;
        catch java.lang.Throwable from label14 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.patterns.ContextMatchStepPattern: long serialVersionUID> = -1888092779313211942L;

        return;
    }
}
