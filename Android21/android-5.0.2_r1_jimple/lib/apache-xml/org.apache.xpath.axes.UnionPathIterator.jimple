public class org.apache.xpath.axes.UnionPathIterator extends org.apache.xpath.axes.LocPathIterator implements java.lang.Cloneable, org.apache.xml.dtm.DTMIterator, java.io.Serializable, org.apache.xpath.axes.PathComponent
{
    static final long serialVersionUID;
    protected org.apache.xpath.axes.LocPathIterator[] m_exprs;
    protected org.apache.xml.dtm.DTMIterator[] m_iterators;

    public void <init>()
    {
        org.apache.xpath.axes.UnionPathIterator r0;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>()>();

        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators> = null;

        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs> = null;

        return;
    }

    public void setRoot(int, java.lang.Object)
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        int i0, i1, i2;
        java.lang.Object r1;
        org.apache.xml.dtm.DTMIterator[] r2;
        org.apache.xml.dtm.DTMIterator r3;
        org.apache.xpath.axes.LocPathIterator[] $r4, $r5, $r6;
        org.apache.xpath.XPathContext $r7;
        org.apache.xpath.axes.LocPathIterator $r8;
        java.lang.Exception $r9, r11;
        org.apache.xml.utils.WrappedRuntimeException $r10;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void setRoot(int,java.lang.Object)>(i0, r1);

     label1:
        $r4 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        if null == $r4 goto label4;

        $r5 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        i1 = lengthof $r5;

        r2 = newarray (org.apache.xml.dtm.DTMIterator)[i1];

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r6 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r8 = $r6[i2];

        $r7 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.XPathContext m_execContext>;

        r3 = virtualinvoke $r8.<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>($r7, i0);

        r2[i2] = r3;

        interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        i2 = i2 + 1;

        goto label2;

     label3:
        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators> = r2;

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        r11 = $r9;

        $r10 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r10.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r11);

        throw $r10;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void addIterator(org.apache.xml.dtm.DTMIterator)
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        org.apache.xml.dtm.DTMIterator r1;
        org.apache.xml.dtm.DTMIterator[] r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10;
        int i0, $i1;
        boolean $z0;
        org.apache.xpath.Expression $r8;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: org.apache.xml.dtm.DTMIterator;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        if null != $r3 goto label1;

        $r9 = newarray (org.apache.xml.dtm.DTMIterator)[1];

        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators> = $r9;

        $r10 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r10[0] = r1;

        goto label2;

     label1:
        r2 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r4 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        i0 = lengthof $r4;

        $i1 = i0 + 1;

        $r5 = newarray (org.apache.xml.dtm.DTMIterator)[$i1];

        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators> = $r5;

        $r6 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, i0);

        $r7 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r7[i0] = r1;

     label2:
        interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $z0 = r1 instanceof org.apache.xpath.Expression;

        if $z0 == 0 goto label3;

        $r8 = (org.apache.xpath.Expression) r1;

        virtualinvoke $r8.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

     label3:
        return;
    }

    public void detach()
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        int i0, i1;
        boolean $z0;
        org.apache.xml.dtm.DTMIterator[] $r1, $r2, $r3;
        org.apache.xml.dtm.DTMIterator $r4;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        $z0 = r0.<org.apache.xpath.axes.UnionPathIterator: boolean m_allowDetach>;

        if $z0 == 0 goto label3;

        $r1 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        if null == $r1 goto label3;

        $r2 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r4 = $r3[i1];

        interfaceinvoke $r4.<org.apache.xml.dtm.DTMIterator: void detach()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators> = null;

     label3:
        return;
    }

    public void <init>(org.apache.xpath.compiler.Compiler, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        org.apache.xpath.compiler.Compiler r1;
        int i0, i1;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>()>();

        i1 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i0);

        virtualinvoke r0.<org.apache.xpath.axes.UnionPathIterator: void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)>(r1, i1, 0);

        return;
    }

    public static org.apache.xpath.axes.LocPathIterator createUnionIterator(org.apache.xpath.compiler.Compiler, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.compiler.Compiler r0;
        int i0, i1, i2, $i3, i4;
        org.apache.xpath.axes.UnionPathIterator r1, $r4;
        boolean z0, $z1;
        org.apache.xpath.axes.LocPathIterator r2, r3;
        org.apache.xpath.axes.LocPathIterator[] $r5, $r7, $r8;
        org.apache.xpath.axes.UnionChildIterator $r6, r9;

        r0 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        $r4 = new org.apache.xpath.axes.UnionPathIterator;

        specialinvoke $r4.<org.apache.xpath.axes.UnionPathIterator: void <init>(org.apache.xpath.compiler.Compiler,int)>(r0, i0);

        r1 = $r4;

        $r5 = r1.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        i1 = lengthof $r5;

        z0 = 1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $r8 = r1.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        r2 = $r8[i2];

        $i3 = virtualinvoke r2.<org.apache.xpath.axes.LocPathIterator: int getAxis()>();

        if $i3 == 3 goto label2;

        z0 = 0;

        goto label4;

     label2:
        $z1 = staticinvoke <org.apache.xpath.axes.HasPositionalPredChecker: boolean check(org.apache.xpath.axes.LocPathIterator)>(r2);

        if $z1 == 0 goto label3;

        z0 = 0;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label7;

        $r6 = new org.apache.xpath.axes.UnionChildIterator;

        specialinvoke $r6.<org.apache.xpath.axes.UnionChildIterator: void <init>()>();

        r9 = $r6;

        i4 = 0;

     label5:
        if i4 >= i1 goto label6;

        $r7 = r1.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        r3 = $r7[i4];

        virtualinvoke r9.<org.apache.xpath.axes.UnionChildIterator: void addNodeTest(org.apache.xpath.axes.PredicatedNodeTest)>(r3);

        i4 = i4 + 1;

        goto label5;

     label6:
        return r9;

     label7:
        return r1;
    }

    public int getAnalysisBits()
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        int i0, i1, i2, i3;
        org.apache.xpath.axes.LocPathIterator[] $r1, $r2, $r3;
        org.apache.xpath.axes.LocPathIterator $r4;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        i0 = 0;

        $r1 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        i1 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r4 = $r3[i2];

        i3 = virtualinvoke $r4.<org.apache.xpath.axes.LocPathIterator: int getAnalysisBits()>();

        i0 = i0 | i3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        java.io.ObjectInputStream r1;
        java.lang.ClassNotFoundException r2, $r4;
        org.apache.xpath.axes.IteratorPool $r3;
        javax.xml.transform.TransformerException $r5;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: java.io.ObjectInputStream;

     label1:
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r3 = new org.apache.xpath.axes.IteratorPool;

        specialinvoke $r3.<org.apache.xpath.axes.IteratorPool: void <init>(org.apache.xml.dtm.DTMIterator)>(r0);

        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.IteratorPool m_clones> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new javax.xml.transform.TransformerException;

        specialinvoke $r5.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.xpath.axes.UnionPathIterator r0, r1;
        int i0, i1;
        java.lang.Object $r2, $r9;
        org.apache.xml.dtm.DTMIterator[] $r3, $r4, $r5, $r6, $r8;
        org.apache.xml.dtm.DTMIterator $r7, $r10;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        $r2 = specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: java.lang.Object clone()>();

        r1 = (org.apache.xpath.axes.UnionPathIterator) $r2;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        i0 = lengthof $r4;

        $r5 = newarray (org.apache.xml.dtm.DTMIterator)[i0];

        r1.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators> = $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r1.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r6 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r7 = $r6[i1];

        $r9 = interfaceinvoke $r7.<org.apache.xml.dtm.DTMIterator: java.lang.Object clone()>();

        $r10 = (org.apache.xml.dtm.DTMIterator) $r9;

        $r8[i1] = $r10;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    protected org.apache.xpath.axes.LocPathIterator createDTMIterator(org.apache.xpath.compiler.Compiler, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        org.apache.xpath.compiler.Compiler r1;
        int i0, $i1;
        org.apache.xpath.axes.LocPathIterator r2;
        org.apache.xml.dtm.DTMIterator $r3;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getLocationPathDepth()>();

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = staticinvoke <org.apache.xpath.axes.WalkerFactory: org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)>(r1, i0, $z0);

        r2 = (org.apache.xpath.axes.LocPathIterator) $r3;

        return r2;
    }

    protected void loadLocationPaths(org.apache.xpath.compiler.Compiler, int, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        org.apache.xpath.compiler.Compiler r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.xpath.axes.WalkingIterator r2, $r3;
        org.apache.xml.utils.PrefixResolver $r4;
        org.apache.xpath.axes.FilterExprWalker $r5;
        org.apache.xpath.axes.AxesWalker $r6;
        org.apache.xpath.axes.LocPathIterator[] $r7, $r8, $r10, $r12;
        org.apache.xpath.axes.LocPathIterator $r9, $r11;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i0);

        if i2 != 28 goto label1;

        $i7 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i0);

        $i6 = i1 + 1;

        virtualinvoke r0.<org.apache.xpath.axes.UnionPathIterator: void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)>(r1, $i7, $i6);

        $r10 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r9 = virtualinvoke r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator createDTMIterator(org.apache.xpath.compiler.Compiler,int)>(r1, i0);

        $r10[i1] = $r9;

        $r12 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r11 = $r12[i1];

        virtualinvoke $r11.<org.apache.xpath.axes.LocPathIterator: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        goto label5;

     label1:
        tableswitch(i2)
        {
            case 22: goto label2;
            case 23: goto label2;
            case 24: goto label2;
            case 25: goto label2;
            default: goto label4;
        };

     label2:
        $i3 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getNextOpPos(int)>(i0);

        $i4 = i1 + 1;

        virtualinvoke r0.<org.apache.xpath.axes.UnionPathIterator: void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)>(r1, $i3, $i4);

        $r3 = new org.apache.xpath.axes.WalkingIterator;

        $r4 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        specialinvoke $r3.<org.apache.xpath.axes.WalkingIterator: void <init>(org.apache.xml.utils.PrefixResolver)>($r4);

        r2 = $r3;

        virtualinvoke r2.<org.apache.xpath.axes.WalkingIterator: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        $i5 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getLocationPathDepth()>();

        if $i5 > 0 goto label3;

        virtualinvoke r2.<org.apache.xpath.axes.WalkingIterator: void setIsTopLevel(boolean)>(1);

     label3:
        $r5 = new org.apache.xpath.axes.FilterExprWalker;

        specialinvoke $r5.<org.apache.xpath.axes.FilterExprWalker: void <init>(org.apache.xpath.axes.WalkingIterator)>(r2);

        r2.<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.axes.AxesWalker m_firstWalker> = $r5;

        $r6 = r2.<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.axes.AxesWalker m_firstWalker>;

        virtualinvoke $r6.<org.apache.xpath.axes.AxesWalker: void init(org.apache.xpath.compiler.Compiler,int,int)>(r1, i0, i2);

        $r7 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r7[i1] = r2;

        goto label5;

     label4:
        $r8 = newarray (org.apache.xpath.axes.LocPathIterator)[i1];

        r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs> = $r8;

     label5:
        return;
    }

    public int nextNode()
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        int i0, i1, i2, i3, i4;
        org.apache.xml.dtm.DTM r1;
        boolean $z0, $z1;
        org.apache.xml.dtm.DTMIterator[] $r2, $r3, $r4, $r6, $r9;
        org.apache.xml.dtm.DTMIterator $r5, $r7, $r8;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        $z0 = r0.<org.apache.xpath.axes.UnionPathIterator: boolean m_foundLast>;

        if $z0 == 0 goto label1;

        return -1;

     label1:
        i0 = -1;

        $r2 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        if null == $r2 goto label9;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        i1 = lengthof $r3;

        i2 = -1;

        i3 = 0;

     label2:
        if i3 >= i1 goto label7;

        $r6 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r7 = $r6[i3];

        i4 = interfaceinvoke $r7.<org.apache.xml.dtm.DTMIterator: int getCurrentNode()>();

        if -1 != i4 goto label3;

        goto label6;

     label3:
        if -1 != i0 goto label4;

        i2 = i3;

        i0 = i4;

        goto label6;

     label4:
        if i4 != i0 goto label5;

        $r9 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r8 = $r9[i3];

        interfaceinvoke $r8.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        goto label6;

     label5:
        r1 = virtualinvoke r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTM getDTM(int)>(i4);

        $z1 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: boolean isNodeAfter(int,int)>(i4, i0);

        if $z1 == 0 goto label6;

        i2 = i3;

        i0 = i4;

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        if -1 == i0 goto label8;

        $r4 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xml.dtm.DTMIterator[] m_iterators>;

        $r5 = $r4[i2];

        interfaceinvoke $r5.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        virtualinvoke r0.<org.apache.xpath.axes.UnionPathIterator: void incrementCurrentPos()>();

        goto label9;

     label8:
        r0.<org.apache.xpath.axes.UnionPathIterator: boolean m_foundLast> = 1;

     label9:
        r0.<org.apache.xpath.axes.UnionPathIterator: int m_lastFetched> = i0;

        return i0;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        java.util.Vector r1;
        int i0, i1, $i2;
        org.apache.xpath.axes.LocPathIterator[] $r2, $r3;
        org.apache.xpath.axes.LocPathIterator $r4;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $i2 = lengthof $r2;

        if i1 >= $i2 goto label2;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<org.apache.xpath.axes.LocPathIterator: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int getAxis()
    {
        org.apache.xpath.axes.UnionPathIterator r0;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        return -1;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.axes.UnionPathIterator r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;
        int i0, i1;
        boolean $z0;
        org.apache.xpath.axes.LocPathIterator[] $r3, $r4, $r5;
        org.apache.xpath.axes.UnionPathIterator$iterOwner $r6;
        org.apache.xpath.axes.LocPathIterator $r7;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        $z0 = virtualinvoke r2.<org.apache.xpath.XPathVisitor: boolean visitUnionPath(org.apache.xpath.ExpressionOwner,org.apache.xpath.axes.UnionPathIterator)>(r1, r0);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        if null == $r3 goto label2;

        $r4 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r7 = $r5[i1];

        $r6 = new org.apache.xpath.axes.UnionPathIterator$iterOwner;

        specialinvoke $r6.<org.apache.xpath.axes.UnionPathIterator$iterOwner: void <init>(org.apache.xpath.axes.UnionPathIterator,int)>(r0, i1);

        virtualinvoke $r7.<org.apache.xpath.axes.LocPathIterator: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r6, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.UnionPathIterator r0, r2;
        org.apache.xpath.Expression r1;
        int i0, i1, $i2;
        boolean $z0, $z1;
        org.apache.xpath.axes.LocPathIterator[] $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.xpath.axes.LocPathIterator $r10, $r11;

        r0 := @this: org.apache.xpath.axes.UnionPathIterator;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.xpath.axes.UnionPathIterator) r1;

        $r3 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        if null == $r3 goto label7;

        $r5 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        i0 = lengthof $r5;

        $r6 = r2.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        if null == $r6 goto label2;

        $r7 = r2.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $i2 = lengthof $r7;

        if $i2 == i0 goto label3;

     label2:
        return 0;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        $r8 = r0.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r11 = $r8[i1];

        $r9 = r2.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        $r10 = $r9[i1];

        $z1 = virtualinvoke $r11.<org.apache.xpath.axes.LocPathIterator: boolean deepEquals(org.apache.xpath.Expression)>($r10);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        goto label8;

     label7:
        $r4 = r2.<org.apache.xpath.axes.UnionPathIterator: org.apache.xpath.axes.LocPathIterator[] m_exprs>;

        if null == $r4 goto label8;

        return 0;

     label8:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.UnionPathIterator: long serialVersionUID> = -3910351546843826781L;

        return;
    }
}
