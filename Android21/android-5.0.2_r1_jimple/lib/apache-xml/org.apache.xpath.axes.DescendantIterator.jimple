public class org.apache.xpath.axes.DescendantIterator extends org.apache.xpath.axes.LocPathIterator
{
    static final long serialVersionUID;
    protected transient org.apache.xml.dtm.DTMAxisTraverser m_traverser;
    protected int m_axis;
    protected int m_extendedTypeID;

    void <init>(org.apache.xpath.compiler.Compiler, int, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.DescendantIterator r0;
        org.apache.xpath.compiler.Compiler r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, i9, i10;
        boolean z0, z1, $z2;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        r1 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>(org.apache.xpath.compiler.Compiler,int,int,boolean)>(r1, i0, i1, 0);

        i2 = staticinvoke <org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)>(i0);

        i3 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i2);

        if 42 != i3 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        z1 = 0;

        if 48 != i3 goto label03;

        z0 = 1;

        goto label04;

     label03:
        if 50 != i3 goto label04;

        z1 = 1;

        i4 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getNextStepPos(int)>(i2);

        $i8 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i4);

        if $i8 != 42 goto label04;

        z0 = 1;

     label04:
        i9 = i2;

     label05:
        i9 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getNextStepPos(int)>(i9);

        if i9 <= 0 goto label06;

        i5 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getOp(int)>(i9);

        if -1 == i5 goto label06;

        i2 = i9;

        goto label05;

     label06:
        $i6 = i1 & 65536;

        if $i6 == 0 goto label07;

        z0 = 0;

     label07:
        if z1 == 0 goto label09;

        if z0 == 0 goto label08;

        r0.<org.apache.xpath.axes.DescendantIterator: int m_axis> = 18;

        goto label11;

     label08:
        r0.<org.apache.xpath.axes.DescendantIterator: int m_axis> = 17;

        goto label11;

     label09:
        if z0 == 0 goto label10;

        r0.<org.apache.xpath.axes.DescendantIterator: int m_axis> = 5;

        goto label11;

     label10:
        r0.<org.apache.xpath.axes.DescendantIterator: int m_axis> = 4;

     label11:
        i10 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)>(i2);

        $i7 = i10 & 67;

        if 0 == $i7 goto label12;

        if i10 != -1 goto label13;

     label12:
        virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: void initNodeTest(int)>(i10);

        goto label14;

     label13:
        $r3 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: java.lang.String getStepNS(int)>(i2);

        $r2 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: java.lang.String getStepLocalName(int)>(i2);

        virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: void initNodeTest(int,java.lang.String,java.lang.String)>(i10, $r3, $r2);

     label14:
        virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: void initPredicateInfo(org.apache.xpath.compiler.Compiler,int)>(r1, i2);

        return;
    }

    public void <init>()
    {
        org.apache.xpath.axes.DescendantIterator r0;
        byte b0;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void <init>(org.apache.xml.utils.PrefixResolver)>(null);

        r0.<org.apache.xpath.axes.DescendantIterator: int m_axis> = 18;

        b0 = -1;

        virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: void initNodeTest(int)>(b0);

        return;
    }

    public org.apache.xml.dtm.DTMIterator cloneWithReset() throws java.lang.CloneNotSupportedException
    {
        org.apache.xpath.axes.DescendantIterator r0, r1;
        org.apache.xml.dtm.DTMIterator $r2;
        org.apache.xml.dtm.DTMAxisTraverser $r3;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        $r2 = specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

        r1 = (org.apache.xpath.axes.DescendantIterator) $r2;

        $r3 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        r1.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser> = $r3;

        virtualinvoke r1.<org.apache.xpath.axes.DescendantIterator: void resetProximityPositions()>();

        return r1;
    }

    public int nextNode()
    {
        org.apache.xpath.axes.DescendantIterator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        org.apache.xpath.VariableStack r1;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        org.apache.xml.dtm.DTMAxisTraverser $r3, $r4, $r5, $r7;
        short $s15;
        org.apache.xpath.XPathContext $r6;
        byte b25;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        $z0 = r0.<org.apache.xpath.axes.DescendantIterator: boolean m_foundLast>;

        if $z0 == 0 goto label01;

        return -1;

     label01:
        $i3 = r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched>;

        if -1 != $i3 goto label02;

        virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: void resetProximityPositions()>();

     label02:
        $i4 = r0.<org.apache.xpath.axes.DescendantIterator: int m_stackFrame>;

        if -1 == $i4 goto label03;

        $r6 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xpath.XPathContext m_execContext>;

        r1 = virtualinvoke $r6.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        i1 = virtualinvoke r1.<org.apache.xpath.VariableStack: int getStackFrame()>();

        $i24 = r0.<org.apache.xpath.axes.DescendantIterator: int m_stackFrame>;

        virtualinvoke r1.<org.apache.xpath.VariableStack: void setStackFrame(int)>($i24);

        goto label04;

     label03:
        r1 = null;

        i1 = 0;

     label04:
        $i5 = r0.<org.apache.xpath.axes.DescendantIterator: int m_extendedTypeID>;

        if 0 != $i5 goto label07;

        $i19 = r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched>;

        if -1 != $i19 goto label05;

        $r7 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        $i21 = r0.<org.apache.xpath.axes.DescendantIterator: int m_context>;

        $i22 = virtualinvoke $r7.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>($i21);

        goto label06;

     label05:
        $r5 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        $i20 = r0.<org.apache.xpath.axes.DescendantIterator: int m_context>;

        $i18 = r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched>;

        $i22 = virtualinvoke $r5.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>($i20, $i18);

     label06:
        r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched> = $i22;

        i0 = $i22;

        goto label10;

     label07:
        $i6 = r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched>;

        if -1 != $i6 goto label08;

        $r4 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        $i16 = r0.<org.apache.xpath.axes.DescendantIterator: int m_context>;

        $i17 = r0.<org.apache.xpath.axes.DescendantIterator: int m_extendedTypeID>;

        $i10 = virtualinvoke $r4.<org.apache.xml.dtm.DTMAxisTraverser: int first(int,int)>($i16, $i17);

        goto label09;

     label08:
        $r3 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser>;

        $i9 = r0.<org.apache.xpath.axes.DescendantIterator: int m_context>;

        $i8 = r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched>;

        $i7 = r0.<org.apache.xpath.axes.DescendantIterator: int m_extendedTypeID>;

        $i10 = virtualinvoke $r3.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int,int)>($i9, $i8, $i7);

     label09:
        r0.<org.apache.xpath.axes.DescendantIterator: int m_lastFetched> = $i10;

        i0 = $i10;

     label10:
        if -1 == i0 goto label12;

        $s15 = virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: short acceptNode(int)>(i0);

        if 1 != $s15 goto label11;

        goto label12;

     label11:
        if i0 != -1 goto label04;

     label12:
        if -1 == i0 goto label15;

        $i11 = r0.<org.apache.xpath.axes.DescendantIterator: int m_pos>;

        $i14 = $i11 + 1;

        r0.<org.apache.xpath.axes.DescendantIterator: int m_pos> = $i14;

        i2 = i0;

     label13:
        $i13 = r0.<org.apache.xpath.axes.DescendantIterator: int m_stackFrame>;

        if -1 == $i13 goto label14;

        virtualinvoke r1.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i1);

     label14:
        return i2;

     label15:
        r0.<org.apache.xpath.axes.DescendantIterator: boolean m_foundLast> = 1;

        b25 = -1;

     label16:
        $i12 = r0.<org.apache.xpath.axes.DescendantIterator: int m_stackFrame>;

        if -1 == $i12 goto label17;

        virtualinvoke r1.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i1);

     label17:
        return b25;

     label18:
        $r8 := @caughtexception;

        r2 = $r8;

     label19:
        $i23 = r0.<org.apache.xpath.axes.DescendantIterator: int m_stackFrame>;

        if -1 == $i23 goto label20;

        virtualinvoke r1.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i1);

     label20:
        throw r2;

        catch java.lang.Throwable from label04 to label13 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void setRoot(int, java.lang.Object)
    {
        org.apache.xpath.axes.DescendantIterator r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1;
        java.lang.String r2, r3, $r6, $r7;
        org.apache.xml.dtm.DTM $r4, $r8;
        org.apache.xml.dtm.DTMAxisTraverser $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void setRoot(int,java.lang.Object)>(i0, r1);

        $r4 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTM m_cdtm>;

        $i3 = r0.<org.apache.xpath.axes.DescendantIterator: int m_axis>;

        $r5 = interfaceinvoke $r4.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>($i3);

        r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser> = $r5;

        r2 = virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: java.lang.String getLocalName()>();

        r3 = virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: java.lang.String getNamespace()>();

        i1 = r0.<org.apache.xpath.axes.DescendantIterator: int m_whatToShow>;

        if -1 == i1 goto label1;

        $r6 = "*";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r7 = "*";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

     label1:
        r0.<org.apache.xpath.axes.DescendantIterator: int m_extendedTypeID> = 0;

        goto label3;

     label2:
        i2 = staticinvoke <org.apache.xpath.axes.DescendantIterator: int getNodeTypeTest(int)>(i1);

        $r8 = r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTM m_cdtm>;

        $i4 = interfaceinvoke $r8.<org.apache.xml.dtm.DTM: int getExpandedTypeID(java.lang.String,java.lang.String,int)>(r3, r2, i2);

        r0.<org.apache.xpath.axes.DescendantIterator: int m_extendedTypeID> = $i4;

     label3:
        return;
    }

    public int asNode(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.DescendantIterator r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.xml.dtm.DTM r2;
        org.apache.xml.dtm.DTMAxisTraverser r3;
        java.lang.String r4, r5;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i4 = virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: int getPredicateCount()>();

        if $i4 <= 0 goto label1;

        $i7 = specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: int asNode(org.apache.xpath.XPathContext)>(r1);

        return $i7;

     label1:
        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $i5 = r0.<org.apache.xpath.axes.DescendantIterator: int m_axis>;

        r3 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>($i5);

        r4 = virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: java.lang.String getLocalName()>();

        r5 = virtualinvoke r0.<org.apache.xpath.axes.DescendantIterator: java.lang.String getNamespace()>();

        i1 = r0.<org.apache.xpath.axes.DescendantIterator: int m_whatToShow>;

        if -1 == i1 goto label2;

        if r4 == "*" goto label2;

        if r5 != "*" goto label3;

     label2:
        $i6 = virtualinvoke r3.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i0);

        return $i6;

     label3:
        i2 = staticinvoke <org.apache.xpath.axes.DescendantIterator: int getNodeTypeTest(int)>(i1);

        i3 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getExpandedTypeID(java.lang.String,java.lang.String,int)>(r5, r4, i2);

        $i8 = virtualinvoke r3.<org.apache.xml.dtm.DTMAxisTraverser: int first(int,int)>(i0, i3);

        return $i8;
    }

    public void detach()
    {
        org.apache.xpath.axes.DescendantIterator r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        $z0 = r0.<org.apache.xpath.axes.DescendantIterator: boolean m_allowDetach>;

        if $z0 == 0 goto label1;

        r0.<org.apache.xpath.axes.DescendantIterator: org.apache.xml.dtm.DTMAxisTraverser m_traverser> = null;

        r0.<org.apache.xpath.axes.DescendantIterator: int m_extendedTypeID> = 0;

        specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: void detach()>();

     label1:
        return;
    }

    public int getAxis()
    {
        org.apache.xpath.axes.DescendantIterator r0;
        int $i0;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        $i0 = r0.<org.apache.xpath.axes.DescendantIterator: int m_axis>;

        return $i0;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.DescendantIterator r0, $r2;
        org.apache.xpath.Expression r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.apache.xpath.axes.DescendantIterator;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.axes.LocPathIterator: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<org.apache.xpath.axes.DescendantIterator: int m_axis>;

        $r2 = (org.apache.xpath.axes.DescendantIterator) r1;

        $i0 = $r2.<org.apache.xpath.axes.DescendantIterator: int m_axis>;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.DescendantIterator: long serialVersionUID> = -1190338607743976938L;

        return;
    }
}
