public class org.apache.xalan.templates.AVTPartXPath extends org.apache.xalan.templates.AVTPart
{
    static final long serialVersionUID;
    private org.apache.xpath.XPath m_xpath;

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        java.util.Vector r1;
        int i0;
        org.apache.xpath.XPath $r2;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath>;

        virtualinvoke $r2.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>(r1, i0);

        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        org.apache.xpath.XPath $r1;
        org.apache.xpath.Expression $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        $r1 = r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $z0 = virtualinvoke $r2.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        return $z0;
    }

    public void <init>(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        r1 := @parameter0: org.apache.xpath.XPath;

        specialinvoke r0.<org.apache.xalan.templates.AVTPart: void <init>()>();

        r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath> = r1;

        return;
    }

    public void <init>(java.lang.String, org.apache.xml.utils.PrefixResolver, org.apache.xpath.compiler.XPathParser, org.apache.xpath.XPathFactory, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        java.lang.String r1;
        org.apache.xml.utils.PrefixResolver r2;
        org.apache.xpath.compiler.XPathParser r3;
        org.apache.xpath.XPathFactory r4;
        org.apache.xpath.XPathContext r5;
        org.apache.xpath.XPath $r6;
        javax.xml.transform.ErrorListener $r7;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xml.utils.PrefixResolver;

        r3 := @parameter2: org.apache.xpath.compiler.XPathParser;

        r4 := @parameter3: org.apache.xpath.XPathFactory;

        r5 := @parameter4: org.apache.xpath.XPathContext;

        specialinvoke r0.<org.apache.xalan.templates.AVTPart: void <init>()>();

        $r6 = new org.apache.xpath.XPath;

        $r7 = virtualinvoke r5.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()>();

        specialinvoke $r6.<org.apache.xpath.XPath: void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)>(r1, null, r2, 0, $r7);

        r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath> = $r6;

        return;
    }

    public java.lang.String getSimpleString()
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        org.apache.xpath.XPath $r3;
        java.lang.String $r4, $r7;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r3 = r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.XPath: java.lang.String getPatternString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.utils.FastStringBuffer r2;
        int i0;
        org.apache.xml.utils.PrefixResolver r3;
        org.apache.xpath.objects.XObject r4;
        org.apache.xpath.XPath $r5;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xml.utils.FastStringBuffer;

        i0 := @parameter2: int;

        r3 := @parameter3: org.apache.xml.utils.PrefixResolver;

        $r5 = r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath>;

        r4 = virtualinvoke $r5.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r1, i0, r3);

        if null == r4 goto label1;

        virtualinvoke r4.<org.apache.xpath.objects.XObject: void appendToFsb(org.apache.xml.utils.FastStringBuffer)>(r2);

     label1:
        return;
    }

    public void callVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.AVTPartXPath r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xpath.XPath $r2, $r4;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xalan.templates.AVTPartXPath;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $r2 = r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r4 = r0.<org.apache.xalan.templates.AVTPartXPath: org.apache.xpath.XPath m_xpath>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r4, r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.AVTPartXPath: long serialVersionUID> = -4460373807550527675L;

        return;
    }
}
