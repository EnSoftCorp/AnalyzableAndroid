public class org.apache.xalan.templates.OutputProperties extends org.apache.xalan.templates.ElemTemplateElement implements java.lang.Cloneable
{
    static final long serialVersionUID;
    private java.util.Properties m_properties;

    public void <init>()
    {
        org.apache.xalan.templates.OutputProperties r0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        specialinvoke r0.<org.apache.xalan.templates.OutputProperties: void <init>(java.lang.String)>("xml");

        return;
    }

    public void <init>(java.util.Properties)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.util.Properties r1, $r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties> = null;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>(java.util.Properties)>(r1);

        r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties> = $r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1;
        java.util.Properties $r2, $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties> = null;

        $r2 = new java.util.Properties;

        $r3 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>(r1);

        specialinvoke $r2.<java.util.Properties: void <init>(java.util.Properties)>($r3);

        r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties> = $r2;

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.xalan.templates.OutputProperties r0, r1;
        java.lang.Object $r2, $r4;
        java.util.Properties $r3, $r5;
        java.lang.CloneNotSupportedException $r6;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.xalan.templates.OutputProperties) $r2;

        $r3 = r1.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r4 = virtualinvoke $r3.<java.util.Properties: java.lang.Object clone()>();

        $r5 = (java.util.Properties) $r4;

        r1.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties> = $r5;

     label2:
        return r1;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public void setProperty(org.apache.xml.utils.QName, java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setProperty(java.lang.String,java.lang.String)>($r3, r2);

        return;
    }

    public void setProperty(java.lang.String, java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, r2, $r7;
        boolean $z0, $z1;
        java.util.Properties $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        int $i0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("method");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setMethodDefaults(java.lang.String)>(r2);

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("{http://xml.apache.org/xslt}");

        if $z1 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{http://xml.apache.org/xalan}");

        $i0 = <org.apache.xml.serializer.OutputPropertiesFactory: int S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN>;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r3 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getProperty(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        java.util.Properties $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        $r4 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

        return $r4;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, $r3, $r6;
        boolean $z0;
        java.util.Properties $r2;
        java.lang.StringBuilder $r4, $r5, $r7;
        int $i0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("{http://xml.apache.org/xslt}");

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{http://xml.apache.org/xalan}");

        $i0 = <org.apache.xml.serializer.OutputPropertiesFactory: int S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN>;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public void setBooleanProperty(org.apache.xml.utils.QName, boolean)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        boolean z0;
        java.util.Properties $r2;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        if z0 == 0 goto label1;

        $r5 = "yes";

        goto label2;

     label1:
        $r5 = "no";

     label2:
        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        return;
    }

    public void setBooleanProperty(java.lang.String, boolean)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, $r4;
        boolean z0;
        java.util.Properties $r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        if z0 == 0 goto label1;

        $r4 = "yes";

        goto label2;

     label1:
        $r4 = "no";

     label2:
        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return;
    }

    public boolean getBooleanProperty(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: boolean getBooleanProperty(java.lang.String)>($r2);

        return $z0;
    }

    public boolean getBooleanProperty(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1;
        java.util.Properties $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $z0 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)>(r1, $r2);

        return $z0;
    }

    public void setIntProperty(org.apache.xml.utils.QName, int)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setIntProperty(java.lang.String,int)>($r2, i0);

        return;
    }

    public void setIntProperty(java.lang.String, int)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, $r3;
        int i0;
        java.util.Properties $r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public int getIntProperty(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: int getIntProperty(java.lang.String)>($r2);

        return $i0;
    }

    public int getIntProperty(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1;
        java.util.Properties $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $i0 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: int getIntProperty(java.lang.String,java.util.Properties)>(r1, $r2);

        return $i0;
    }

    public void setQNameProperty(org.apache.xml.utils.QName, org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1, r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: org.apache.xml.utils.QName;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setQNameProperty(java.lang.String,org.apache.xml.utils.QName)>($r3, r2);

        return;
    }

    public void setMethodDefaults(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, r2;
        java.util.Properties r3, r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        r2 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("method");

        if null == r2 goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z1 == 0 goto label2;

     label1:
        r3 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        r4 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>(r1);

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>(java.util.Properties)>(r4);

        r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties> = $r6;

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties,boolean)>(r3, 0);

     label2:
        return;
    }

    public void setQNameProperty(java.lang.String, org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, $r3;
        org.apache.xml.utils.QName r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xml.utils.QName;

        $r3 = virtualinvoke r2.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setProperty(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    public org.apache.xml.utils.QName getQNameProperty(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        $r3 = virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(java.lang.String)>($r2);

        return $r3;
    }

    public org.apache.xml.utils.QName getQNameProperty(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1;
        java.util.Properties $r2;
        org.apache.xml.utils.QName $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r3 = staticinvoke <org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(java.lang.String,java.util.Properties)>(r1, $r2);

        return $r3;
    }

    public static org.apache.xml.utils.QName getQNameProperty(java.lang.String, java.util.Properties)
    {
        java.lang.String r0, r2;
        java.util.Properties r1;
        org.apache.xml.utils.QName $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Properties;

        r2 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        if null == r2 goto label1;

        $r3 = staticinvoke <org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)>(r2);

        return $r3;

     label1:
        return null;
    }

    public void setQNameProperties(org.apache.xml.utils.QName, java.util.Vector)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        java.util.Vector r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: java.util.Vector;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setQNameProperties(java.lang.String,java.util.Vector)>($r3, r2);

        return;
    }

    public void setQNameProperties(java.lang.String, java.util.Vector)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1, $r7, $r10;
        java.util.Vector r2;
        int i0, i1, $i2;
        org.apache.xml.utils.FastStringBuffer r3, $r5;
        org.apache.xml.utils.QName r4;
        java.util.Properties $r6;
        java.lang.Object $r9;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Vector;

        i0 = virtualinvoke r2.<java.util.Vector: int size()>();

        $r5 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r5.<org.apache.xml.utils.FastStringBuffer: void <init>(int,int)>(9, 9);

        r3 = $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r9 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xml.utils.QName) $r9;

        $r10 = virtualinvoke r4.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r10);

        $i2 = i0 - 1;

        if i1 >= $i2 goto label2;

        virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: void append(char)>(32);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r7 = virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        return;
    }

    public java.util.Vector getQNameProperties(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xml.utils.QName r1;
        java.lang.String $r2;
        java.util.Vector $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String toNamespacedString()>();

        $r3 = virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(java.lang.String)>($r2);

        return $r3;
    }

    public java.util.Vector getQNameProperties(java.lang.String)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.lang.String r1;
        java.util.Properties $r2;
        java.util.Vector $r3;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r3 = staticinvoke <org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(java.lang.String,java.util.Properties)>(r1, $r2);

        return $r3;
    }

    public static java.util.Vector getQNameProperties(java.lang.String, java.util.Properties)
    {
        java.lang.String r0, r2, $r8, $r9;
        java.util.Properties r1;
        java.util.Vector r3, $r6;
        int i0, i1, $i3, $i4;
        boolean z0, $z1;
        org.apache.xml.utils.FastStringBuffer r4, $r7;
        char c2;
        org.apache.xml.utils.QName r5, r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Properties;

        r2 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        if null == r2 goto label8;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r3 = $r6;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        z0 = 0;

        $r7 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r7.<org.apache.xml.utils.FastStringBuffer: void <init>()>();

        r4 = $r7;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c2);

        if $z1 == 0 goto label2;

        if z0 != 0 goto label4;

        $i4 = virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i4 <= 0 goto label5;

        $r9 = virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        r5 = staticinvoke <org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)>($r9);

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>(r5);

        virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: void reset()>();

        goto label5;

     label2:
        if 123 != c2 goto label3;

        z0 = 1;

        goto label4;

     label3:
        if 125 != c2 goto label4;

        z0 = 0;

     label4:
        virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: void append(char)>(c2);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        $i3 = virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i3 <= 0 goto label7;

        $r8 = virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        r10 = staticinvoke <org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)>($r8);

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>(r10);

        virtualinvoke r4.<org.apache.xml.utils.FastStringBuffer: void reset()>();

     label7:
        return r3;

     label8:
        return null;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: void recomposeOutput(org.apache.xalan.templates.OutputProperties)>(r0);

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.OutputProperties r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        return;
    }

    public java.util.Properties getProperties()
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.util.Properties $r1;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        $r1 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        return $r1;
    }

    public void copyFrom(java.util.Properties)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.util.Properties r1;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.util.Properties;

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties,boolean)>(r1, 1);

        return;
    }

    public void copyFrom(java.util.Properties, boolean)
    {
        org.apache.xalan.templates.OutputProperties r0;
        java.util.Properties r1, $r7, $r9, $r18;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Enumeration r2;
        java.lang.String r3, r5, $r11, $r15, $r17, $r23;
        java.lang.Object r4, $r6, $r12, $r19;
        java.lang.StringBuilder $r8, $r10, $r13, $r14;
        java.lang.Object[] $r21;
        java.lang.IllegalArgumentException $r22;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: java.util.Properties;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration keys()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r6;

        $z2 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r3);

        if $z2 != 0 goto label2;

        $r22 = new java.lang.IllegalArgumentException;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r3;

        $r23 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r21);

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label2:
        $r7 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        r4 = virtualinvoke $r7.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r3);

        if null != r4 goto label4;

        $r19 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.String) $r19;

        if z0 == 0 goto label3;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("method");

        if $z4 == 0 goto label3;

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void setMethodDefaults(java.lang.String)>(r5);

     label3:
        $r18 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        virtualinvoke $r18.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

        goto label5;

     label4:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("cdata-section-elements");

        if $z3 == 0 goto label5;

        $r9 = r0.<org.apache.xalan.templates.OutputProperties: java.util.Properties m_properties>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = (java.lang.String) r4;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r3);

        $r15 = (java.lang.String) $r12;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r17);

     label5:
        goto label1;

     label6:
        return;
    }

    public void copyFrom(org.apache.xalan.templates.OutputProperties) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.OutputProperties r0, r1;
        java.util.Properties $r2;

        r0 := @this: org.apache.xalan.templates.OutputProperties;

        r1 := @parameter0: org.apache.xalan.templates.OutputProperties;

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        virtualinvoke r0.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties)>($r2);

        return;
    }

    public static boolean isLegalPropertyKey(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int $i0, $i2, $i3, $i4, $i5;
        char $c1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("cdata-section-elements");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("doctype-public");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("doctype-system");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("encoding");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("indent");

        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("media-type");

        if $z5 != 0 goto label1;

        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("method");

        if $z6 != 0 goto label1;

        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("omit-xml-declaration");

        if $z7 != 0 goto label1;

        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("standalone");

        if $z8 != 0 goto label1;

        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("version");

        if $z9 != 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 123 goto label2;

        $i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(123);

        if $i2 != 0 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(125);

        if $i3 <= 0 goto label2;

        $i5 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(125);

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(125);

        if $i5 != $i4 goto label2;

     label1:
        $z10 = 1;

        goto label3;

     label2:
        $z10 = 0;

     label3:
        return $z10;
    }

    public static java.util.Properties getDefaultMethodProperties(java.lang.String)
    {
        java.lang.String r0;
        java.util.Properties $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.OutputProperties: long serialVersionUID> = -6975274363881785488L;

        return;
    }
}
