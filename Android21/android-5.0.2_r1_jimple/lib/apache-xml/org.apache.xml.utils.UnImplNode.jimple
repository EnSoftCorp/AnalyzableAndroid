public class org.apache.xml.utils.UnImplNode extends java.lang.Object implements org.w3c.dom.Node, org.w3c.dom.Element, org.w3c.dom.NodeList, org.w3c.dom.Document
{
    protected java.lang.String fDocumentURI;
    protected java.lang.String actualEncoding;
    private java.lang.String xmlEncoding;
    private boolean xmlStandalone;
    private java.lang.String xmlVersion;

    public void <init>()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void error(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, $r6, $r8, $r10;
        java.lang.StringBuilder $r2, $r4, $r7;
        java.io.PrintStream $r3;
        java.lang.Class $r5;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DOM ERROR! class: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = new java.lang.RuntimeException;

        $r10 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>(r1, null);

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public void error(java.lang.String, java.lang.Object[])
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, $r7, $r9, $r11;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r5, $r8;
        java.io.PrintStream $r4;
        java.lang.Class $r6;
        java.lang.RuntimeException $r10;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DOM ERROR! class: ");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = new java.lang.RuntimeException;

        $r11 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    public org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public boolean hasChildNodes()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public short getNodeType()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public org.w3c.dom.Node getParentNode()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.NodeList getChildNodes()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node getFirstChild()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node getLastChild()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node getNextSibling()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public int getLength()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.xml.utils.UnImplNode r0;
        int i0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Document getOwnerDocument()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public java.lang.String getTagName()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void normalize()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public org.w3c.dom.NodeList getElementsByTagName(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Attr;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Attr;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public boolean hasAttribute(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public boolean hasAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public org.w3c.dom.Attr getAttributeNode(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void removeAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public void setAttribute(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public boolean hasAttributes()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Attr;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Attr getAttributeNodeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void removeAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public void setAttributeNS(java.lang.String, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public java.lang.String getAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node getPreviousSibling()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node cloneNode(boolean)
    {
        org.apache.xml.utils.UnImplNode r0;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public java.lang.String getNodeValue() throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void setNodeValue(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public void setValue(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public org.w3c.dom.Element getOwnerElement()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public boolean getSpecified()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public org.w3c.dom.NamedNodeMap getAttributes()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node removeChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public boolean isSupported(java.lang.String, java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public java.lang.String getPrefix()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void setPrefix(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.DocumentType getDoctype()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.DOMImplementation getImplementation()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Element getDocumentElement()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Element createElement(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Text createTextNode(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.CDATASection createCDATASection(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Attr createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.EntityReference createEntityReference(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node importNode(org.w3c.dom.Node, boolean) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Element getElementById(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void setData(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public java.lang.String substringData(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        int i0, i1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void appendData(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public void insertData(int, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public void deleteData(int, int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        int i0, i1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public void replaceData(int, int, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public org.w3c.dom.Text splitText(int) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        int i0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public org.w3c.dom.Node adoptNode(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public java.lang.String getInputEncoding()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return null;
    }

    public void setInputEncoding(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public boolean getStrictErrorChecking()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return 0;
    }

    public void setStrictErrorChecking(boolean)
    {
        org.apache.xml.utils.UnImplNode r0;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void error(java.lang.String)>("ER_FUNCTION_NOT_SUPPORTED");

        return;
    }

    public java.lang.Object setUserData(java.lang.String, java.lang.Object, org.w3c.dom.UserDataHandler)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        org.w3c.dom.UserDataHandler r3;
        org.w3c.dom.Document $r4;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.w3c.dom.UserDataHandler;

        $r4 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.Document getOwnerDocument()>();

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)>(r1, r2, r3);

        return $r5;
    }

    public java.lang.Object getUserData(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;
        org.w3c.dom.Document $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.Document getOwnerDocument()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: java.lang.Object getUserData(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.Object getFeature(java.lang.String, java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0, $r3;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: boolean isSupported(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean isEqualNode(org.w3c.dom.Node)
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;
        short $s0, $s1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $s1 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: short getNodeType()>();

        if $s0 == $s1 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNodeName()>();

        if $r2 != null goto label03;

        $r21 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        if $r21 == null goto label04;

        return 0;

     label03:
        $r3 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNodeName()>();

        $r4 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        $r5 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getLocalName()>();

        if $r5 != null goto label05;

        $r19 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        if $r19 == null goto label06;

        return 0;

     label05:
        $r6 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getLocalName()>();

        $r7 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label06;

        return 0;

     label06:
        $r8 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNamespaceURI()>();

        if $r8 != null goto label07;

        $r20 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r20 == null goto label08;

        return 0;

     label07:
        $r9 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNamespaceURI()>();

        $r10 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label08;

        return 0;

     label08:
        $r12 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getPrefix()>();

        if $r12 != null goto label09;

        $r17 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        if $r17 == null goto label10;

        return 0;

     label09:
        $r11 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getPrefix()>();

        $r13 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 != 0 goto label10;

        return 0;

     label10:
        $r15 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNodeValue()>();

        if $r15 != null goto label11;

        $r18 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        if $r18 == null goto label12;

        return 0;

     label11:
        $r14 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNodeValue()>();

        $r16 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z4 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    public java.lang.String lookupNamespaceURI(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2, r3, r6, r7, $r8, $r9, $r11, r13;
        short s0, $s3;
        org.w3c.dom.NamedNodeMap r4;
        int i1, i2;
        org.w3c.dom.Node r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.w3c.dom.Element $r10, $r12;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        s0 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: short getNodeType()>();

        tableswitch(s0)
        {
            case 1: goto label01;
            case 2: goto label09;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label08;
            case 7: goto label11;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label08;
            default: goto label11;
        };

     label01:
        r2 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNamespaceURI()>();

        r3 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getPrefix()>();

        if r2 == null goto label03;

        if r1 != null goto label02;

        if r3 != r1 goto label02;

        return r2;

     label02:
        if r3 == null goto label03;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label03;

        return r2;

     label03:
        $z0 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: boolean hasAttributes()>();

        if $z0 == 0 goto label07;

        r4 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = interfaceinvoke r4.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i2 = 0;

     label04:
        if i2 >= i1 goto label07;

        r5 = interfaceinvoke r4.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        r6 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        r7 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        r13 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if r13 == null goto label06;

        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z1 == 0 goto label06;

        if r1 != null goto label05;

        $r9 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z5 == 0 goto label05;

        return r7;

     label05:
        if r6 == null goto label06;

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z2 == 0 goto label06;

        $r8 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label06;

        return r7;

     label06:
        i2 = i2 + 1;

        goto label04;

     label07:
        return null;

     label08:
        return null;

     label09:
        $r10 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getOwnerElement()>();

        $s3 = interfaceinvoke $r10.<org.w3c.dom.Element: short getNodeType()>();

        if $s3 != 1 goto label10;

        $r12 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getOwnerElement()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.Element: java.lang.String lookupNamespaceURI(java.lang.String)>(r1);

        return $r11;

     label10:
        return null;

     label11:
        return null;
    }

    public boolean isDefaultNamespace(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.String lookupPrefix(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, $r4;
        short s0, $s1;
        org.w3c.dom.Element $r2, $r3;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        s0 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: short getNodeType()>();

        tableswitch(s0)
        {
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label2;
            case 7: goto label5;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            default: goto label5;
        };

     label2:
        return null;

     label3:
        $r2 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getOwnerElement()>();

        $s1 = interfaceinvoke $r2.<org.w3c.dom.Element: short getNodeType()>();

        if $s1 != 1 goto label4;

        $r3 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getOwnerElement()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String lookupPrefix(java.lang.String)>(r1);

        return $r4;

     label4:
        return null;

     label5:
        return null;
    }

    public boolean isSameNode(org.w3c.dom.Node)
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setTextContent(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.utils.UnImplNode: void setNodeValue(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getTextContent() throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        $r1 = virtualinvoke r0.<org.apache.xml.utils.UnImplNode: java.lang.String getNodeValue()>();

        return $r1;
    }

    public short compareDocumentPosition(org.w3c.dom.Node) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        return 0;
    }

    public java.lang.String getBaseURI()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return null;
    }

    public org.w3c.dom.Node renameNode(org.w3c.dom.Node, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Node r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return r1;
    }

    public void normalizeDocument()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return;
    }

    public org.w3c.dom.DOMConfiguration getDomConfig()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return null;
    }

    public void setDocumentURI(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.utils.UnImplNode: java.lang.String fDocumentURI> = r1;

        return;
    }

    public java.lang.String getDocumentURI()
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        $r1 = r0.<org.apache.xml.utils.UnImplNode: java.lang.String fDocumentURI>;

        return $r1;
    }

    public java.lang.String getActualEncoding()
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        $r1 = r0.<org.apache.xml.utils.UnImplNode: java.lang.String actualEncoding>;

        return $r1;
    }

    public void setActualEncoding(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.utils.UnImplNode: java.lang.String actualEncoding> = r1;

        return;
    }

    public org.w3c.dom.Text replaceWholeText(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getWholeText()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return null;
    }

    public boolean isWhitespaceInElementContent()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return 0;
    }

    public void setIdAttribute(boolean)
    {
        org.apache.xml.utils.UnImplNode r0;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        z0 := @parameter0: boolean;

        return;
    }

    public void setIdAttribute(java.lang.String, boolean)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return;
    }

    public void setIdAttributeNode(org.w3c.dom.Attr, boolean)
    {
        org.apache.xml.utils.UnImplNode r0;
        org.w3c.dom.Attr r1;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: org.w3c.dom.Attr;

        z0 := @parameter1: boolean;

        return;
    }

    public void setIdAttributeNS(java.lang.String, java.lang.String, boolean)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return;
    }

    public org.w3c.dom.TypeInfo getSchemaTypeInfo()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return null;
    }

    public boolean isId()
    {
        org.apache.xml.utils.UnImplNode r0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        return 0;
    }

    public java.lang.String getXmlEncoding()
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        $r1 = r0.<org.apache.xml.utils.UnImplNode: java.lang.String xmlEncoding>;

        return $r1;
    }

    public void setXmlEncoding(java.lang.String)
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.utils.UnImplNode: java.lang.String xmlEncoding> = r1;

        return;
    }

    public boolean getXmlStandalone()
    {
        org.apache.xml.utils.UnImplNode r0;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        $z0 = r0.<org.apache.xml.utils.UnImplNode: boolean xmlStandalone>;

        return $z0;
    }

    public void setXmlStandalone(boolean) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        boolean z0;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        z0 := @parameter0: boolean;

        r0.<org.apache.xml.utils.UnImplNode: boolean xmlStandalone> = z0;

        return;
    }

    public java.lang.String getXmlVersion()
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        $r1 = r0.<org.apache.xml.utils.UnImplNode: java.lang.String xmlVersion>;

        return $r1;
    }

    public void setXmlVersion(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xml.utils.UnImplNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.utils.UnImplNode;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xml.utils.UnImplNode: java.lang.String xmlVersion> = r1;

        return;
    }
}
