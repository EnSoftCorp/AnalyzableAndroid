public class org.apache.xpath.axes.UnionChildIterator extends org.apache.xpath.axes.ChildTestIterator
{
    static final long serialVersionUID;
    private org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests;

    public void <init>()
    {
        org.apache.xpath.axes.UnionChildIterator r0;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        specialinvoke r0.<org.apache.xpath.axes.ChildTestIterator: void <init>(org.apache.xml.dtm.DTMAxisTraverser)>(null);

        r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests> = null;

        return;
    }

    public void addNodeTest(org.apache.xpath.axes.PredicatedNodeTest)
    {
        org.apache.xpath.axes.UnionChildIterator r0;
        org.apache.xpath.axes.PredicatedNodeTest r1;
        org.apache.xpath.axes.PredicatedNodeTest[] r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, $i1;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        r1 := @parameter0: org.apache.xpath.axes.PredicatedNodeTest;

        $r3 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        if null != $r3 goto label1;

        $r8 = newarray (org.apache.xpath.axes.PredicatedNodeTest)[1];

        r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests> = $r8;

        $r9 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r9[0] = r1;

        goto label2;

     label1:
        r2 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r4 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        i0 = lengthof $r4;

        $i1 = i0 + 1;

        $r5 = newarray (org.apache.xpath.axes.PredicatedNodeTest)[$i1];

        r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests> = $r5;

        $r6 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, i0);

        $r7 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r7[i0] = r1;

     label2:
        virtualinvoke r1.<org.apache.xpath.axes.PredicatedNodeTest: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.axes.UnionChildIterator r0;
        java.util.Vector r1;
        int i0, i1, $i2;
        org.apache.xpath.axes.PredicatedNodeTest[] $r2, $r3, $r4;
        org.apache.xpath.axes.PredicatedNodeTest $r5;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.axes.ChildTestIterator: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        if $r2 == null goto label2;

        i1 = 0;

     label1:
        $r3 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label2;

        $r4 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r5 = $r4[i1];

        virtualinvoke $r5.<org.apache.xpath.axes.PredicatedNodeTest: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public short acceptNode(int)
    {
        org.apache.xpath.axes.UnionChildIterator r0;
        int i0, i1, $i3, $i4;
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.axes.PredicatedNodeTest r2;
        org.apache.xpath.objects.XObject r3;
        byte b2, b5;
        java.lang.Throwable r4, $r10;
        org.apache.xpath.axes.PredicatedNodeTest[] $r5, $r6;
        org.apache.xpath.objects.XNumber $r7;
        boolean $z0;
        java.lang.RuntimeException $r8;
        javax.xml.transform.TransformerException $r9, r12;
        java.lang.String $r11;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.XPathContext getXPathContext()>();

     label01:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        i1 = 0;

     label02:
        $r5 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $i3 = lengthof $r5;

        if i1 >= $i3 goto label07;

        $r6 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        r2 = $r6[i1];

        r3 = virtualinvoke r2.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)>(r1, i0);

        $r7 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 == $r7 goto label06;

        $i4 = virtualinvoke r2.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        if $i4 <= 0 goto label04;

        $z0 = virtualinvoke r2.<org.apache.xpath.axes.PredicatedNodeTest: boolean executePredicates(int,org.apache.xpath.XPathContext)>(i0, r1);

        if $z0 == 0 goto label06;

        b2 = 1;

     label03:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return b2;

     label04:
        b5 = 1;

     label05:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return b5;

     label06:
        i1 = i1 + 1;

        goto label02;

     label07:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label11;

     label08:
        $r9 := @caughtexception;

        r12 = $r9;

        $r8 = new java.lang.RuntimeException;

        $r11 = virtualinvoke r12.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label09:
        $r10 := @caughtexception;

        r4 = $r10;

     label10:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r4;

     label11:
        return 3;

        catch javax.xml.transform.TransformerException from label01 to label03 with label08;
        catch javax.xml.transform.TransformerException from label04 to label05 with label08;
        catch javax.xml.transform.TransformerException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.UnionChildIterator: long serialVersionUID> = 3500298482193003495L;

        return;
    }
}
