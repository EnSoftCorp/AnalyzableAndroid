public class org.apache.xalan.templates.ElemAttribute extends org.apache.xalan.templates.ElemElement
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.ElemAttribute r0;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        specialinvoke r0.<org.apache.xalan.templates.ElemElement: void <init>()>();

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemAttribute r0;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        return 48;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemAttribute r0;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        return "attribute";
    }

    protected java.lang.String resolvePrefix(org.apache.xml.serializer.SerializationHandler, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemAttribute r0;
        org.apache.xml.serializer.SerializationHandler r1;
        java.lang.String r2, r3;
        org.apache.xml.serializer.NamespaceMappings r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        r1 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if null == r2 goto label4;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label4;

     label1:
        r2 = interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: java.lang.String getPrefix(java.lang.String)>(r3);

        if null == r2 goto label2;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 == 0 goto label2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label4;

     label2:
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        r4 = interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()>();

        r2 = virtualinvoke r4.<org.apache.xml.serializer.NamespaceMappings: java.lang.String generateNextPrefix()>();

        goto label4;

     label3:
        r2 = "";

     label4:
        return r2;
    }

    protected boolean validateNodeName(java.lang.String)
    {
        org.apache.xalan.templates.ElemAttribute r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        r1 := @parameter0: java.lang.String;

        if null != r1 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $z1 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidQName(java.lang.String)>(r1);

        return $z1;
    }

    void constructNode(java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemAttribute r0;
        java.lang.String r1, r2, r3, r6, r7;
        org.apache.xalan.transformer.TransformerImpl r4;
        org.apache.xml.serializer.SerializationHandler r5;
        int $i0, $i1;
        org.xml.sax.SAXException $r8;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.xalan.transformer.TransformerImpl;

        if null == r1 goto label5;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        r5 = virtualinvoke r4.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        r6 = virtualinvoke r4.<org.apache.xalan.transformer.TransformerImpl: java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)>(r0);

     label1:
        r7 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r1);

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        interfaceinvoke r5.<org.apache.xml.serializer.SerializationHandler: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r3, r7, r1, "CDATA", r6, 1);

        goto label3;

     label2:
        interfaceinvoke r5.<org.apache.xml.serializer.SerializationHandler: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("", r7, r1, "CDATA", r6, 1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch org.xml.sax.SAXException from label1 to label3 with label4;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemAttribute r0;
        org.apache.xalan.templates.ElemTemplateElement r1, $r2;
        int i0;
        java.lang.Object[] $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        lookupswitch(i0)
        {
            case 9: goto label1;
            case 17: goto label1;
            case 28: goto label1;
            case 30: goto label1;
            case 35: goto label1;
            case 36: goto label1;
            case 37: goto label1;
            case 42: goto label1;
            case 50: goto label1;
            case 72: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 75: goto label1;
            case 78: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r0.<org.apache.xalan.templates.ElemAttribute: java.lang.String getNodeName()>();

        $r3[1] = $r5;

        virtualinvoke r0.<org.apache.xalan.templates.ElemAttribute: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r3);

     label3:
        $r2 = specialinvoke r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $r2;
    }

    public void setName(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemAttribute r0;
        org.apache.xalan.templates.AVT r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.xalan.templates.ElemAttribute;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.AVT: java.lang.String getSimpleString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemElement: void setName(org.apache.xalan.templates.AVT)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemAttribute: long serialVersionUID> = 8817220961566919187L;

        return;
    }
}
