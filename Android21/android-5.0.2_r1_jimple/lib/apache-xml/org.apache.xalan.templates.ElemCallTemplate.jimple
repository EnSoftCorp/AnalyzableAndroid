public class org.apache.xalan.templates.ElemCallTemplate extends org.apache.xalan.templates.ElemForEach
{
    static final long serialVersionUID;
    public org.apache.xml.utils.QName m_templateName;
    private org.apache.xalan.templates.ElemTemplate m_template;
    protected org.apache.xalan.templates.ElemWithParam[] m_paramElems;

    public void <init>()
    {
        org.apache.xalan.templates.ElemCallTemplate r0;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        specialinvoke r0.<org.apache.xalan.templates.ElemForEach: void <init>()>();

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName> = null;

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template> = null;

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems> = null;

        return;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xml.utils.QName r1;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName> = r1;

        return;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xml.utils.QName $r1;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        $r1 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName>;

        return $r1;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemCallTemplate r0;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        return 17;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemCallTemplate r0;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        return "call-template";
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.templates.StylesheetRoot r1, $r7;
        int i0, i1, i2, $i3, i4, i5;
        org.apache.xalan.templates.ElemWithParam r2, r18;
        org.apache.xalan.templates.ElemTemplateElement r3;
        org.apache.xalan.templates.ElemParam r4;
        org.apache.xml.utils.QName $r5, $r8, $r12, $r13, $r14;
        org.apache.xalan.templates.ElemTemplate $r6, $r9, $r10, $r11;
        boolean $z0;
        java.lang.Object[] $r15;
        javax.xml.transform.TransformerException $r16;
        java.lang.String r17;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemForEach: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: int getParamElemCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam getParamElem(int)>(i1);

        virtualinvoke r2.<org.apache.xalan.templates.ElemWithParam: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName>;

        if null == $r5 goto label8;

        $r6 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        if null != $r6 goto label8;

        $r7 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $r8 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName>;

        $r9 = virtualinvoke $r7.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xml.utils.QName)>($r8);

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template> = $r9;

        $r10 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        if null != $r10 goto label3;

        $r15 = newarray (java.lang.Object)[1];

        $r14 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName>;

        $r15[0] = $r14;

        r17 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ELEMTEMPLATEELEM_ERR", $r15);

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r17, r0);

        throw $r16;

     label3:
        i4 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: int getParamElemCount()>();

        i5 = 0;

     label4:
        if i5 >= i4 goto label8;

        r18 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam getParamElem(int)>(i5);

        r18.<org.apache.xalan.templates.ElemWithParam: int m_index> = -1;

        i2 = 0;

        $r11 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        r3 = virtualinvoke $r11.<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

     label5:
        if null == r3 goto label7;

        $i3 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i3 != 41 goto label7;

        r4 = (org.apache.xalan.templates.ElemParam) r3;

        $r13 = virtualinvoke r4.<org.apache.xalan.templates.ElemParam: org.apache.xml.utils.QName getName()>();

        $r12 = virtualinvoke r18.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r13.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label6;

        r18.<org.apache.xalan.templates.ElemWithParam: int m_index> = i2;

     label6:
        i2 = i2 + 1;

        r3 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        goto label5;

     label7:
        i5 = i5 + 1;

        goto label4;

     label8:
        return;
    }

    public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        int i0, i1;
        org.apache.xalan.templates.ElemWithParam r2;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: int getParamElemCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam getParamElem(int)>(i1);

        virtualinvoke r2.<org.apache.xalan.templates.ElemWithParam: void endCompose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<org.apache.xalan.templates.ElemForEach: void endCompose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xpath.XPathContext r2;
        org.apache.xpath.VariableStack r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.xalan.templates.ElemWithParam r4;
        org.apache.xpath.objects.XObject r5;
        java.lang.Throwable r6, $r20;
        org.apache.xalan.templates.ElemTemplate $r7, $r11, $r12, $r13, $r14, $r15, $r16;
        org.apache.xalan.transformer.MsgMgr $r8;
        java.lang.Object[] $r9;
        org.apache.xml.utils.QName $r10;
        org.apache.xalan.templates.ElemWithParam[] $r17, $r18, $r19;
        javax.xml.transform.SourceLocator r21;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $r7 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        if null == $r7 goto label10;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        r3 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        i0 = virtualinvoke r3.<org.apache.xpath.VariableStack: int getStackFrame()>();

        $r11 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        $i5 = $r11.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        i1 = virtualinvoke r3.<org.apache.xpath.VariableStack: int link(int)>($i5);

        $r12 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        $i6 = $r12.<org.apache.xalan.templates.ElemTemplate: int m_inArgsSize>;

        if $i6 <= 0 goto label04;

        $r16 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        $i7 = $r16.<org.apache.xalan.templates.ElemTemplate: int m_inArgsSize>;

        virtualinvoke r3.<org.apache.xpath.VariableStack: void clearLocalSlots(int,int)>(0, $i7);

        $r17 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        if null == $r17 goto label04;

        i2 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        virtualinvoke r3.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i0);

        $r18 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        i3 = lengthof $r18;

        i4 = 0;

     label01:
        if i4 >= i3 goto label03;

        $r19 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        r4 = $r19[i4];

        $i8 = r4.<org.apache.xalan.templates.ElemWithParam: int m_index>;

        if $i8 < 0 goto label02;

        r5 = virtualinvoke r4.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)>(r1, i2);

        $i9 = r4.<org.apache.xalan.templates.ElemWithParam: int m_index>;

        virtualinvoke r3.<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject,int)>($i9, r5, i1);

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        virtualinvoke r3.<org.apache.xpath.VariableStack: void setStackFrame(int)>(i1);

     label04:
        r21 = virtualinvoke r2.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

     label05:
        $r13 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>($r13);

        $r15 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>($r15);

        $r14 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemTemplate m_template>;

        virtualinvoke $r14.<org.apache.xalan.templates.ElemTemplate: void execute(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label06:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r21);

        virtualinvoke r3.<org.apache.xpath.VariableStack: void unlink(int)>(i0);

        goto label09;

     label07:
        $r20 := @caughtexception;

        r6 = $r20;

     label08:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r21);

        virtualinvoke r3.<org.apache.xpath.VariableStack: void unlink(int)>(i0);

        throw r6;

     label09:
        goto label11;

     label10:
        $r8 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r9 = newarray (java.lang.Object)[1];

        $r10 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName m_templateName>;

        $r9[0] = $r10;

        virtualinvoke $r8.<org.apache.xalan.transformer.MsgMgr: void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r0, "ER_TEMPLATE_NOT_FOUND", $r9);

     label11:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public int getParamElemCount()
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.templates.ElemWithParam[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        $r1 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        $i0 = lengthof $r2;

     label2:
        return $i0;
    }

    public org.apache.xalan.templates.ElemWithParam getParamElem(int)
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        int i0;
        org.apache.xalan.templates.ElemWithParam[] $r1;
        org.apache.xalan.templates.ElemWithParam $r2;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        $r2 = $r1[i0];

        return $r2;
    }

    public void setParamElem(org.apache.xalan.templates.ElemWithParam)
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.templates.ElemWithParam r1;
        int i0, $i1;
        org.apache.xalan.templates.ElemWithParam[] r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xalan.templates.ElemWithParam;

        $r3 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        if null != $r3 goto label1;

        $r6 = newarray (org.apache.xalan.templates.ElemWithParam)[1];

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems> = $r6;

        $r7 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        $r7[0] = r1;

        goto label2;

     label1:
        $r4 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        i0 = lengthof $r4;

        $i1 = i0 + 1;

        r2 = newarray (org.apache.xalan.templates.ElemWithParam)[$i1];

        $r5 = r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, 0, i0);

        r0.<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam[] m_paramElems> = r2;

        r2[i0] = r1;

     label2:
        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.templates.ElemTemplateElement r1, $r2;
        int i0;
        org.apache.xalan.templates.ElemWithParam $r3;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 2 != i0 goto label1;

        $r3 = (org.apache.xalan.templates.ElemWithParam) r1;

        virtualinvoke r0.<org.apache.xalan.templates.ElemCallTemplate: void setParamElem(org.apache.xalan.templates.ElemWithParam)>($r3);

     label1:
        $r2 = specialinvoke r0.<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $r2;
    }

    public void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.ElemCallTemplate r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemCallTemplate;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xalan.templates.ElemForEach: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemCallTemplate: long serialVersionUID> = 5009634612916030591L;

        return;
    }
}
