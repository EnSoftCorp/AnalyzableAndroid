public class org.apache.xml.serializer.utils.XML11Char extends java.lang.Object
{
    private static final byte[] XML11CHARS;
    public static final int MASK_XML11_VALID;
    public static final int MASK_XML11_SPACE;
    public static final int MASK_XML11_NAME_START;
    public static final int MASK_XML11_NAME;
    public static final int MASK_XML11_CONTROL;
    public static final int MASK_XML11_CONTENT;
    public static final int MASK_XML11_NCNAME_START;
    public static final int MASK_XML11_NCNAME;
    public static final int MASK_XML11_CONTENT_INTERNAL;

    public void <init>()
    {
        org.apache.xml.serializer.utils.XML11Char r0;

        r0 := @this: org.apache.xml.serializer.utils.XML11Char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isXML11Space(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 2;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isXML11Valid(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 1;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11Invalid(int)
    {
        int i0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11Valid(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isXML11ValidLiteral(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0, $r1;
        byte $b1, $b2, $b3, $b4;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 1;

        if $b2 == 0 goto label1;

        $r1 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b3 = $r1[i0];

        $b4 = $b3 & 16;

        if $b4 == 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11Content(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 32;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11InternalEntityContent(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 48;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11NameStart(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 4;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 >= 983040 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11Name(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 8;

        if $b2 != 0 goto label2;

     label1:
        if i0 < 65536 goto label3;

        if i0 >= 983040 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11NCNameStart(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 64;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 >= 983040 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11NCName(int)
    {
        int i0;
        boolean $z0;
        byte[] $r0;
        byte $b1;
        short $s2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $b1 = $r0[i0];

        $s2 = $b1 & 128;

        if $s2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 >= 983040 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isXML11NameHighSurrogate(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 55296 > i0 goto label1;

        if i0 > 56191 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isXML11ValidName(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i4, $i5;
        char c2, c3, c6, c7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 != 0 goto label01;

        return 0;

     label01:
        i1 = 1;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameStart(int)>(c2);

        if $z0 != 0 goto label05;

        if i0 <= 1 goto label04;

        $z5 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameHighSurrogate(int)>(c2);

        if $z5 == 0 goto label04;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $z6 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: boolean isLowSurrogate(int)>(c3);

        if $z6 == 0 goto label02;

        $i5 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: int supplemental(char,char)>(c2, c3);

        $z7 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameStart(int)>($i5);

        if $z7 != 0 goto label03;

     label02:
        return 0;

     label03:
        i1 = 2;

        goto label05;

     label04:
        return 0;

     label05:
        if i1 >= i0 goto label10;

        c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11Name(int)>(c6);

        if $z1 != 0 goto label09;

        i1 = i1 + 1;

        if i1 >= i0 goto label08;

        $z2 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameHighSurrogate(int)>(c6);

        if $z2 == 0 goto label08;

        c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z3 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: boolean isLowSurrogate(int)>(c7);

        if $z3 == 0 goto label06;

        $i4 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: int supplemental(char,char)>(c6, c7);

        $z4 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11Name(int)>($i4);

        if $z4 != 0 goto label07;

     label06:
        return 0;

     label07:
        goto label09;

     label08:
        return 0;

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        return 1;
    }

    public static boolean isXML11ValidNCName(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i4, $i5;
        char c2, c3, c6, c7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 != 0 goto label01;

        return 0;

     label01:
        i1 = 1;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NCNameStart(int)>(c2);

        if $z0 != 0 goto label05;

        if i0 <= 1 goto label04;

        $z5 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameHighSurrogate(int)>(c2);

        if $z5 == 0 goto label04;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $z6 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: boolean isLowSurrogate(int)>(c3);

        if $z6 == 0 goto label02;

        $i5 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: int supplemental(char,char)>(c2, c3);

        $z7 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NCNameStart(int)>($i5);

        if $z7 != 0 goto label03;

     label02:
        return 0;

     label03:
        i1 = 2;

        goto label05;

     label04:
        return 0;

     label05:
        if i1 >= i0 goto label10;

        c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NCName(int)>(c6);

        if $z1 != 0 goto label09;

        i1 = i1 + 1;

        if i1 >= i0 goto label08;

        $z2 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameHighSurrogate(int)>(c6);

        if $z2 == 0 goto label08;

        c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z3 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: boolean isLowSurrogate(int)>(c7);

        if $z3 == 0 goto label06;

        $i4 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: int supplemental(char,char)>(c6, c7);

        $z4 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NCName(int)>($i4);

        if $z4 != 0 goto label07;

     label06:
        return 0;

     label07:
        goto label09;

     label08:
        return 0;

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        return 1;
    }

    public static boolean isXML11ValidNmtoken(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i4;
        char c2, c3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 != 0 goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11Name(int)>(c2);

        if $z0 != 0 goto label6;

        i1 = i1 + 1;

        if i1 >= i0 goto label5;

        $z1 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11NameHighSurrogate(int)>(c2);

        if $z1 == 0 goto label5;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z2 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: boolean isLowSurrogate(int)>(c3);

        if $z2 == 0 goto label3;

        $i4 = staticinvoke <org.apache.xml.serializer.utils.XMLChar: int supplemental(char,char)>(c2, c3);

        $z3 = staticinvoke <org.apache.xml.serializer.utils.XML11Char: boolean isXML11Name(int)>($i4);

        if $z3 != 0 goto label4;

     label3:
        return 0;

     label4:
        goto label6;

     label5:
        return 0;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        return 1;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_CONTENT_INTERNAL> = 48;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_NCNAME> = 128;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_NCNAME_START> = 64;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_CONTENT> = 32;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_CONTROL> = 16;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_NAME> = 8;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_NAME_START> = 4;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_SPACE> = 2;

        <org.apache.xml.serializer.utils.XML11Char: int MASK_XML11_VALID> = 1;

        $r0 = newarray (byte)[65536];

        <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS> = $r0;

        $r1 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r1, 1, 9, 17);

        $r2 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r2[9] = 35;

        $r3 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r3[10] = 3;

        $r4 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r4, 11, 13, 17);

        $r5 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r5[13] = 3;

        $r6 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r6, 14, 32, 17);

        $r7 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r7[32] = 35;

        $r8 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r8, 33, 38, 33);

        $r9 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r9[38] = 1;

        $r10 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r10, 39, 45, 33);

        $r11 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r11, 45, 47, -87);

        $r12 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r12[47] = 33;

        $r13 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r13, 48, 58, -87);

        $r14 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r14[58] = 45;

        $r15 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r15[59] = 33;

        $r17 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r17[60] = 1;

        $r16 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r16, 61, 65, 33);

        $r19 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r19, 65, 91, -19);

        $r18 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r18, 91, 93, 33);

        $r21 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r21[93] = 1;

        $r20 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r20[94] = 33;

        $r23 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r23[95] = -19;

        $r22 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r22[96] = 33;

        $r25 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r25, 97, 123, -19);

        $r24 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r24, 123, 127, 33);

        $r27 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r27, 127, 133, 17);

        $r26 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r26[133] = 35;

        $r29 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r29, 134, 160, 17);

        $r28 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r28, 160, 183, 33);

        $r31 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r31[183] = -87;

        $r30 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r30, 184, 192, 33);

        $r34 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r34, 192, 215, -19);

        $r35 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r35[215] = 33;

        $r32 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r32, 216, 247, -19);

        $r33 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r33[247] = 33;

        $r38 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r38, 248, 768, -19);

        $r39 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r39, 768, 880, -87);

        $r36 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r36, 880, 894, -19);

        $r37 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r37[894] = 33;

        $r42 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r42, 895, 8192, -19);

        $r43 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r43, 8192, 8204, 33);

        $r40 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r40, 8204, 8206, -19);

        $r41 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r41, 8206, 8232, 33);

        $r46 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        $r46[8232] = 35;

        $r47 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r47, 8233, 8255, 33);

        $r44 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r44, 8255, 8257, -87);

        $r45 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r45, 8257, 8304, 33);

        $r51 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r51, 8304, 8592, -19);

        $r50 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r50, 8592, 11264, 33);

        $r49 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r49, 11264, 12272, -19);

        $r48 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r48, 12272, 12289, 33);

        $r55 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r55, 12289, 55296, -19);

        $r54 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r54, 57344, 63744, 33);

        $r53 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r53, 63744, 64976, -19);

        $r52 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r52, 64976, 65008, 33);

        $r56 = <org.apache.xml.serializer.utils.XML11Char: byte[] XML11CHARS>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r56, 65008, 65534, -19);

        return;
    }
}
