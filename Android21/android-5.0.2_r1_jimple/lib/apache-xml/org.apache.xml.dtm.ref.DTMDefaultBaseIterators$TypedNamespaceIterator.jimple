public class org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator
{
    private final int _nodeType;
    final org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0;

    public void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseIterators;

        i0 := @parameter1: int;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator r0;
        int i0, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        org.apache.xml.dtm.ref.DTMDefaultBaseIterators $r1, $r2, $r3, $r4;
        short $s5;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator;

        i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _currentNode>;

     label1:
        if i0 == -1 goto label4;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: int getExpandedTypeID(int)>(i0);

        $i3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _nodeType>;

        if $i2 == $i3 goto label2;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $s5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: short getNodeType(int)>(i0);

        $i6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _nodeType>;

        if $s5 == $i6 goto label2;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i7 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: int getNamespaceType(int)>(i0);

        $i8 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _nodeType>;

        if $i7 != $i8 goto label3;

     label2:
        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _currentNode> = i0;

        $i4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int returnNode(int)>(i0);

        return $i4;

     label3:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: org.apache.xml.dtm.ref.DTMDefaultBaseIterators this$0>;

        $i9 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _startNode>;

        i0 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: int getNextNamespaceNode(int,int,boolean)>($i9, i0, 1);

        goto label1;

     label4:
        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator: int _currentNode> = -1;

        return -1;
    }
}
