class org.apache.xalan.templates.StylesheetRoot$ComposeState extends java.lang.Object
{
    private org.apache.xml.dtm.ref.ExpandedNameTable m_ent;
    private java.util.Vector m_variableNames;
    org.apache.xml.utils.IntStack m_marks;
    private int m_maxStackFrameSize;
    final org.apache.xalan.templates.StylesheetRoot this$0;

    void <init>(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        int i0, i1;
        org.apache.xalan.templates.ElemVariable r2;
        org.apache.xml.dtm.ref.ExpandedNameTable $r3;
        java.util.Vector $r4, $r6, $r7, $r9;
        org.apache.xml.utils.IntStack $r5;
        java.lang.Object $r8;
        org.apache.xml.utils.QName $r10;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xalan.templates.StylesheetRoot this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.xml.dtm.ref.ExpandedNameTable;

        specialinvoke $r3.<org.apache.xml.dtm.ref.ExpandedNameTable: void <init>()>();

        r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xml.dtm.ref.ExpandedNameTable m_ent> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames> = $r4;

        $r5 = new org.apache.xml.utils.IntStack;

        specialinvoke $r5.<org.apache.xml.utils.IntStack: void <init>()>();

        r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xml.utils.IntStack m_marks> = $r5;

        $r6 = staticinvoke <org.apache.xalan.templates.StylesheetRoot: java.util.Vector access$000(org.apache.xalan.templates.StylesheetRoot)>(r1);

        i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = staticinvoke <org.apache.xalan.templates.StylesheetRoot: java.util.Vector access$000(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.xalan.templates.ElemVariable) $r8;

        $r9 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        $r10 = virtualinvoke r2.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()>();

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int getQNameID(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        org.apache.xml.utils.QName r1;
        org.apache.xml.dtm.ref.ExpandedNameTable $r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xml.dtm.ref.ExpandedNameTable m_ent>;

        $r3 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String getNamespace()>();

        $r4 = virtualinvoke r1.<org.apache.xml.utils.QName: java.lang.String getLocalName()>();

        $i0 = virtualinvoke $r2.<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(java.lang.String,java.lang.String,int)>($r3, $r4, 1);

        return $i0;
    }

    int addVariableName(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        org.apache.xml.utils.QName r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Vector $r2, $r3, $r4;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $r3 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        $i2 = virtualinvoke $r4.<java.util.Vector: int size()>();

        $i3 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        i1 = $i2 - $i3;

        $i4 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int m_maxStackFrameSize>;

        if i1 <= $i4 goto label1;

        $i5 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int m_maxStackFrameSize>;

        $i6 = $i5 + 1;

        r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int m_maxStackFrameSize> = $i6;

     label1:
        return i0;
    }

    void resetStackFrameSize()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int m_maxStackFrameSize> = 0;

        return;
    }

    int getFrameSize()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        $i0 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int m_maxStackFrameSize>;

        return $i0;
    }

    int getCurrentStackFrameSize()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        java.util.Vector $r1;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        $r1 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    void setCurrentStackFrameSize(int)
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        int i0;
        java.util.Vector $r1;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        virtualinvoke $r1.<java.util.Vector: void setSize(int)>(i0);

        return;
    }

    int getGlobalsSize()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        org.apache.xalan.templates.StylesheetRoot $r1;
        java.util.Vector $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        $r1 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xalan.templates.StylesheetRoot this$0>;

        $r2 = staticinvoke <org.apache.xalan.templates.StylesheetRoot: java.util.Vector access$000(org.apache.xalan.templates.StylesheetRoot)>($r1);

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        return $i0;
    }

    void pushStackMark()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        org.apache.xml.utils.IntStack $r1;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        $r1 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xml.utils.IntStack m_marks>;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getCurrentStackFrameSize()>();

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int push(int)>($i0);

        return;
    }

    void popStackMark()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        int i0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        $r1 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: org.apache.xml.utils.IntStack m_marks>;

        i0 = virtualinvoke $r1.<org.apache.xml.utils.IntStack: int pop()>();

        virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: void setCurrentStackFrameSize(int)>(i0);

        return;
    }

    java.util.Vector getVariableNames()
    {
        org.apache.xalan.templates.StylesheetRoot$ComposeState r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.xalan.templates.StylesheetRoot$ComposeState;

        $r1 = r0.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector m_variableNames>;

        return $r1;
    }
}
