public class com.android.commands.wm.Wm extends com.android.internal.os.BaseCommand
{
    private android.view.IWindowManager mWm;

    public void <init>()
    {
        com.android.commands.wm.Wm r0;

        r0 := @this: com.android.commands.wm.Wm;

        specialinvoke r0.<com.android.internal.os.BaseCommand: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.wm.Wm $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.wm.Wm;

        specialinvoke $r1.<com.android.commands.wm.Wm: void <init>()>();

        virtualinvoke $r1.<com.android.commands.wm.Wm: void run(java.lang.String[])>(r0);

        return;
    }

    public void onShowUsage(java.io.PrintStream)
    {
        com.android.commands.wm.Wm r0;
        java.io.PrintStream r1;

        r0 := @this: com.android.commands.wm.Wm;

        r1 := @parameter0: java.io.PrintStream;

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("usage: wm [subcommand] [options]\n       wm size [reset|WxH]\n       wm density [reset|DENSITY]\n       wm overscan [reset|LEFT,TOP,RIGHT,BOTTOM]\n\nwm size: return or override display size.\n\nwm density: override display density.\n\nwm overscan: set overscan area for display.\n");

        return;
    }

    public void onRun() throws java.lang.Exception
    {
        com.android.commands.wm.Wm r0;
        java.lang.String r1, $r9;
        android.os.IBinder $r2;
        android.view.IWindowManager $r3, $r4;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.io.PrintStream $r10;
        android.util.AndroidException $r11;

        r0 := @this: com.android.commands.wm.Wm;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("window");

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm> = $r3;

        $r4 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        if $r4 != null goto label1;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error type 2");

        $r11 = new android.util.AndroidException;

        specialinvoke $r11.<android.util.AndroidException: void <init>(java.lang.String)>("Can\'t connect to window manager; is the system running?");

        throw $r11;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.wm.Wm: java.lang.String nextArgRequired()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("size");

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.commands.wm.Wm: void runDisplaySize()>();

        goto label5;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("density");

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.commands.wm.Wm: void runDisplayDensity()>();

        goto label5;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("overscan");

        if $z2 == 0 goto label4;

        specialinvoke r0.<com.android.commands.wm.Wm: void runDisplayOverscan()>();

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.commands.wm.Wm: void showError(java.lang.String)>($r9);

        return;

     label5:
        return;
    }

    private void runDisplaySize() throws java.lang.Exception
    {
        com.android.commands.wm.Wm r0;
        java.lang.String r1, $r6, $r11, $r23, $r34, $r35, r40, r41;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.graphics.Point r2, r3, $r14, $r15;
        java.lang.NumberFormatException r5, $r32;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r9, $r10, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r36, $r37;
        java.io.PrintStream $r8, $r18, $r27, $r38;
        android.view.IWindowManager $r12, $r13, $r16, $r17;
        android.os.RemoteException $r33, $r39;

        r0 := @this: com.android.commands.wm.Wm;

        r1 = virtualinvoke r0.<com.android.commands.wm.Wm: java.lang.String nextArg()>();

        if r1 != null goto label05;

        $r15 = new android.graphics.Point;

        specialinvoke $r15.<android.graphics.Point: void <init>()>();

        r2 = $r15;

        $r14 = new android.graphics.Point;

        specialinvoke $r14.<android.graphics.Point: void <init>()>();

        r3 = $r14;

     label01:
        $r17 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        interfaceinvoke $r17.<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>(0, r2);

        $r16 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        interfaceinvoke $r16.<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>(0, r3);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Physical size: ");

        $i5 = r2.<android.graphics.Point: int x>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i6 = r2.<android.graphics.Point: int y>;

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $z1 = virtualinvoke r2.<android.graphics.Point: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label02;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Override size: ");

        $i7 = r3.<android.graphics.Point: int x>;

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i8 = r3.<android.graphics.Point: int y>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label02:
        goto label04;

     label03:
        $r33 := @caughtexception;

     label04:
        return;

     label05:
        $r6 = "reset";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label06;

        i1 = -1;

        i0 = -1;

        goto label12;

     label06:
        i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(120);

        if i9 <= 0 goto label07;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if i9 < $i3 goto label08;

     label07:
        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad size ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

        return;

     label08:
        r40 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i9);

        $i4 = i9 + 1;

        r41 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

     label09:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r40);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r41);

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;

        r5 = $r32;

        $r38 = <java.lang.System: java.io.PrintStream err>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad number ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r35);

        return;

     label12:
        if i0 < 0 goto label13;

        if i1 < 0 goto label13;

        $r12 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        interfaceinvoke $r12.<android.view.IWindowManager: void setForcedDisplaySize(int,int,int)>(0, i0, i1);

        goto label14;

     label13:
        $r13 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        interfaceinvoke $r13.<android.view.IWindowManager: void clearForcedDisplaySize(int)>(0);

     label14:
        goto label16;

     label15:
        $r39 := @caughtexception;

     label16:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch android.os.RemoteException from label12 to label14 with label15;
    }

    private void runDisplayDensity() throws java.lang.Exception
    {
        com.android.commands.wm.Wm r0;
        java.lang.String r1, $r2, $r13, $r16, $r22;
        int i0, i1, i2;
        boolean $z0;
        android.view.IWindowManager $r3, $r4, $r6, $r7;
        java.io.PrintStream $r5, $r8, $r15, $r21;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r17, $r18, $r20, $r23;
        java.lang.NumberFormatException $r19, r27;
        android.os.RemoteException $r24, $r25;

        r0 := @this: com.android.commands.wm.Wm;

        r1 = virtualinvoke r0.<com.android.commands.wm.Wm: java.lang.String nextArg()>();

        if r1 != null goto label05;

     label01:
        $r6 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        i1 = interfaceinvoke $r6.<android.view.IWindowManager: int getInitialDisplayDensity(int)>(0);

        $r7 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        i2 = interfaceinvoke $r7.<android.view.IWindowManager: int getBaseDisplayDensity(int)>(0);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Physical density: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r13);

        if i1 == i2 goto label02;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Override density: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label02:
        goto label04;

     label03:
        $r25 := @caughtexception;

     label04:
        return;

     label05:
        $r2 = "reset";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label06;

        i0 = -1;

        goto label10;

     label06:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        r27 = $r19;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad number ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r22);

        return;

     label09:
        if i0 >= 72 goto label10;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: density must be >= 72");

        return;

     label10:
        if i0 <= 0 goto label11;

        $r4 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        interfaceinvoke $r4.<android.view.IWindowManager: void setForcedDisplayDensity(int,int)>(0, i0);

        goto label12;

     label11:
        $r3 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        interfaceinvoke $r3.<android.view.IWindowManager: void clearForcedDisplayDensity(int)>(0);

     label12:
        goto label14;

     label13:
        $r24 := @caughtexception;

     label14:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch android.os.RemoteException from label10 to label12 with label13;
    }

    private void runDisplayOverscan() throws java.lang.Exception
    {
        com.android.commands.wm.Wm r0;
        java.lang.String r1, $r6, $r7, $r8, $r9, $r10, $r17;
        android.graphics.Rect r2, $r5;
        java.util.regex.Pattern r3;
        java.util.regex.Matcher r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.IWindowManager $r11;
        java.io.PrintStream $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        android.os.RemoteException $r16;

        r0 := @this: com.android.commands.wm.Wm;

        r1 = virtualinvoke r0.<com.android.commands.wm.Wm: java.lang.String nextArgRequired()>();

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r2 = $r5;

        $r6 = "reset";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        goto label3;

     label1:
        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(-?\\d+),(-?\\d+),(-?\\d+),(-?\\d+)");

        r4 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke r4.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label2;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad rectangle arg: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

        return;

     label2:
        $r7 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        r2.<android.graphics.Rect: int left> = $i0;

        $r8 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        r2.<android.graphics.Rect: int top> = $i1;

        $r9 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        r2.<android.graphics.Rect: int right> = $i2;

        $r10 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        r2.<android.graphics.Rect: int bottom> = $i4;

     label3:
        $r11 = r0.<com.android.commands.wm.Wm: android.view.IWindowManager mWm>;

        $i7 = r2.<android.graphics.Rect: int left>;

        $i5 = r2.<android.graphics.Rect: int top>;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        interfaceinvoke $r11.<android.view.IWindowManager: void setOverscan(int,int,int,int,int)>(0, $i7, $i5, $i6, $i3);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }
}
