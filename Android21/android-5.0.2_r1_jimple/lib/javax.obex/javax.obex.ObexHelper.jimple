public final class javax.obex.ObexHelper extends java.lang.Object
{
    public static final int BASE_PACKET_LENGTH;
    public static final int MAX_PACKET_SIZE_INT;
    public static final int MAX_CLIENT_PACKET_SIZE;
    public static final int OBEX_OPCODE_CONNECT;
    public static final int OBEX_OPCODE_DISCONNECT;
    public static final int OBEX_OPCODE_PUT;
    public static final int OBEX_OPCODE_PUT_FINAL;
    public static final int OBEX_OPCODE_GET;
    public static final int OBEX_OPCODE_GET_FINAL;
    public static final int OBEX_OPCODE_RESERVED;
    public static final int OBEX_OPCODE_RESERVED_FINAL;
    public static final int OBEX_OPCODE_SETPATH;
    public static final int OBEX_OPCODE_ABORT;
    public static final int OBEX_AUTH_REALM_CHARSET_ASCII;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_1;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_2;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_3;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_4;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_5;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_6;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_7;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_8;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_9;
    public static final int OBEX_AUTH_REALM_CHARSET_UNICODE;

    private void <init>()
    {
        javax.obex.ObexHelper r0;

        r0 := @this: javax.obex.ObexHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] updateHeaderSet(javax.obex.HeaderSet, byte[]) throws java.io.IOException
    {
        javax.obex.HeaderSet r0, r3;
        byte[] r1, r2, $r8, $r9, $r13, $r14, $r15, $r16, r33, r36;
        int i0, $i2, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, i28, i30, i31, i32, i33, i34, i35, i36;
        short s1, $s4, $s11, $s26, s29;
        boolean z0;
        java.io.UnsupportedEncodingException r4, $r26, $r30, r35;
        java.util.Calendar r5, r37;
        byte $b3, $b8, $b9, $b10, $b16, $b27;
        java.util.Date $r6;
        long $l5, $l6, $l7;
        java.lang.Long $r7;
        java.lang.Byte $r10;
        java.lang.String $r11, $r12, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, r34;
        char $c23;
        java.util.TimeZone $r25;
        java.lang.Exception $r27, $r31;
        java.io.IOException $r28, $r29, $r32;

        r0 := @parameter0: javax.obex.HeaderSet;

        r1 := @parameter1: byte[];

        i0 = 0;

        r2 = null;

        r3 = r0;

     label01:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label32;

        $b3 = r1[i0];

        s1 = 255 & $b3;

        $s4 = s1 & 192;

        lookupswitch($s4)
        {
            case 0: goto label02;
            case 64: goto label02;
            case 128: goto label19;
            case 192: goto label24;
            default: goto label31;
        };

     label02:
        z0 = 1;

        i28 = i0 + 1;

        $b10 = r1[i28];

        s29 = 255 & $b10;

        i30 = s29 << 8;

        i31 = i28 + 1;

        $b9 = r1[i31];

        $s11 = 255 & $b9;

        i32 = i30 + $s11;

        i33 = i32 + -3;

        i34 = i31 + 1;

        r33 = newarray (byte)[i33];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i34, r33, 0, i33);

        if i33 == 0 goto label03;

        if i33 <= 0 goto label04;

        $i25 = i33 - 1;

        $b27 = r33[$i25];

        if $b27 == 0 goto label04;

     label03:
        z0 = 0;

     label04:
        tableswitch(s1)
        {
            case 66: goto label05;
            case 67: goto label16;
            case 68: goto label12;
            case 69: goto label16;
            case 70: goto label16;
            case 71: goto label16;
            case 72: goto label11;
            case 73: goto label11;
            case 74: goto label16;
            case 75: goto label16;
            case 76: goto label16;
            case 77: goto label09;
            case 78: goto label10;
            default: goto label16;
        };

     label05:
        if z0 != 0 goto label06;

        $r12 = new java.lang.String;

        $i14 = lengthof r33;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r33, 0, $i14, "ISO8859_1");

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r12);

        goto label07;

     label06:
        $r11 = new java.lang.String;

        $i13 = lengthof r33;

        $i12 = $i13 - 1;

        specialinvoke $r11.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r33, 0, $i12, "ISO8859_1");

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r11);

     label07:
        goto label18;

     label08:
        $r26 := @caughtexception;

        r4 = $r26;

        throw r4;

     label09:
        $r13 = newarray (byte)[i33];

        r3.<javax.obex.HeaderSet: byte[] mAuthChall> = $r13;

        $r14 = r3.<javax.obex.HeaderSet: byte[] mAuthChall>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i34, $r14, 0, i33);

        goto label18;

     label10:
        $r15 = newarray (byte)[i33];

        r3.<javax.obex.HeaderSet: byte[] mAuthResp> = $r15;

        $r16 = r3.<javax.obex.HeaderSet: byte[] mAuthResp>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i34, $r16, 0, i33);

        goto label18;

     label11:
        $i15 = i33 + 1;

        r2 = newarray (byte)[$i15];

        $b16 = (byte) s1;

        r2[0] = $b16;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i34, r2, 1, i33);

        goto label18;

     label12:
        $r17 = new java.lang.String;

        specialinvoke $r17.<java.lang.String: void <init>(byte[],java.lang.String)>(r33, "ISO8859_1");

        r34 = $r17;

        r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i18 = virtualinvoke r34.<java.lang.String: int length()>();

        if $i18 != 16 goto label13;

        $c23 = virtualinvoke r34.<java.lang.String: char charAt(int)>(15);

        if $c23 != 90 goto label13;

        $r25 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke r5.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r25);

     label13:
        $r18 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        virtualinvoke r5.<java.util.Calendar: void set(int,int)>(1, $i17);

        $r19 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        virtualinvoke r5.<java.util.Calendar: void set(int,int)>(2, $i19);

        $r21 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        virtualinvoke r5.<java.util.Calendar: void set(int,int)>(5, $i20);

        $r20 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(9, 11);

        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        virtualinvoke r5.<java.util.Calendar: void set(int,int)>(11, $i22);

        $r22 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(11, 13);

        $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        virtualinvoke r5.<java.util.Calendar: void set(int,int)>(12, $i21);

        $r23 = virtualinvoke r34.<java.lang.String: java.lang.String substring(int,int)>(13, 15);

        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        virtualinvoke r5.<java.util.Calendar: void set(int,int)>(13, $i24);

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(68, r5);

     label14:
        goto label18;

     label15:
        $r30 := @caughtexception;

        r35 = $r30;

        throw r35;

     label16:
        $s26 = s1 & 192;

        if $s26 != 0 goto label17;

        $r24 = staticinvoke <javax.obex.ObexHelper: java.lang.String convertToUnicode(byte[],boolean)>(r33, 1);

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r24);

        goto label18;

     label17:
        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, r33);

     label18:
        i0 = i34 + i33;

        goto label31;

     label19:
        i35 = i0 + 1;

     label20:
        $b8 = r1[i35];

        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b8);

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r10);

     label21:
        goto label23;

     label22:
        $r27 := @caughtexception;

     label23:
        i0 = i35 + 1;

        goto label31;

     label24:
        i36 = i0 + 1;

        r36 = newarray (byte)[4];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i36, r36, 0, 4);

     label25:
        if s1 == 196 goto label27;

        if s1 != 203 goto label26;

        $r9 = newarray (byte)[4];

        r3.<javax.obex.HeaderSet: byte[] mConnectionID> = $r9;

        $r8 = r3.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r36, 0, $r8, 0, 4);

        goto label28;

     label26:
        $l7 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>(r36);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r7);

        goto label28;

     label27:
        r37 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r6 = new java.util.Date;

        $l6 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>(r36);

        $l5 = $l6 * 1000L;

        specialinvoke $r6.<java.util.Date: void <init>(long)>($l5);

        virtualinvoke r37.<java.util.Calendar: void setTime(java.util.Date)>($r6);

        virtualinvoke r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(196, r37);

     label28:
        goto label30;

     label29:
        $r31 := @caughtexception;

        $r32 = new java.io.IOException;

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>("Header was not formatted properly");

        throw $r32;

     label30:
        i0 = i36 + 4;

     label31:
        goto label01;

     label32:
        goto label34;

     label33:
        $r28 := @caughtexception;

        $r29 = new java.io.IOException;

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>("Header was not formatted properly");

        throw $r29;

     label34:
        return r2;

        catch java.io.UnsupportedEncodingException from label05 to label07 with label08;
        catch java.io.UnsupportedEncodingException from label12 to label14 with label15;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label25 to label28 with label29;
        catch java.io.IOException from label01 to label32 with label33;
    }

    public static byte[] createHeader(javax.obex.HeaderSet, boolean)
    {
        javax.obex.HeaderSet r0, r50;
        boolean z0, $z1, $z2;
        byte[] r1, $r7, $r16, $r18, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r33, $r34, $r44, r52, r54, r56, r58, r61, r64, r66, r67, r68, r69, r70, r71, r73, r74, r77;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i24, $i25, $i26, $i29, $i31, $i32, $i33, $i34, $i36, $i38, $i39, $i40, $i41, $i42, $i44, $i46, $i48, $i49, $i50, $i52, $i54, $i56, $i58, $i59, $i60, $i62, $i63, $i64, $i65, $i67, $i69, $i70, $i72, $i73, $i74, $i76, $i79, $i82, $i83, $i84, $i86, $i88, $i89, $i90, $i92, $i95, $i97, $i98, $i100, i102, i103, i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116, i117, i118, i119, i120;
        java.io.ByteArrayOutputStream r2, $r5;
        java.io.UnsupportedEncodingException r3, $r41, $r45, r62;
        java.lang.Throwable r4, $r47;
        java.lang.Object $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r20, $r22, $r30, $r31, $r32, $r35, $r43;
        byte $b5, $b6, $b11, $b13, $b19, $b21, $b27, $b28, $b30, $b35, $b37, $b43, $b45, $b47, $b51, $b53, $b55, $b57, $b61, $b66, $b68, $b71, $b75, $b77, $b78, $b85, $b87, $b91, $b93, $b96, $b101;
        long $l23, $l80, $l81, $l94, $l99;
        java.util.Date $r36;
        java.lang.StringBuffer $r37, r60;
        java.util.TimeZone $r38;
        java.lang.String $r39, $r40, r53, r55, r65, r72;
        java.lang.Exception $r42, $r48, $r49;
        java.io.IOException $r46;
        java.lang.Long r51, r57, r76;
        java.util.Calendar r59, r63;
        java.lang.Byte r75;

        r0 := @parameter0: javax.obex.HeaderSet;

        z0 := @parameter1: boolean;

        r1 = newarray (byte)[2];

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r5;

        r50 = r0;

     label01:
        $r7 = r50.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r7 == null goto label02;

        $r43 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(70);

        if $r43 != null goto label02;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(-53);

        $r44 = r50.<javax.obex.HeaderSet: byte[] mConnectionID>;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r44);

     label02:
        $r6 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(192);

        r51 = (java.lang.Long) $r6;

        if r51 == null goto label03;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(-64);

        $l99 = virtualinvoke r51.<java.lang.Long: long longValue()>();

        r52 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l99);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r52);

        if z0 == 0 goto label03;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(192, null);

     label03:
        $r8 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(1);

        r53 = (java.lang.String) $r8;

        if r53 == null goto label04;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(1);

        r54 = staticinvoke <javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>(r53);

        $i97 = lengthof r54;

        i0 = $i97 + 3;

        $i98 = i0 >> 8;

        $i95 = 255 & $i98;

        $b96 = (byte) $i95;

        r1[0] = $b96;

        $i100 = 255 & i0;

        $b101 = (byte) $i100;

        r1[1] = $b101;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r54);

        if z0 == 0 goto label05;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(1, null);

        goto label05;

     label04:
        $z1 = virtualinvoke r50.<javax.obex.HeaderSet: boolean getEmptyNameHeader()>();

        if $z1 == 0 goto label05;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(1);

        r1[0] = 0;

        r1[1] = 3;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

     label05:
        $r10 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(66);

        r55 = (java.lang.String) $r10;

        if r55 == null goto label10;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(66);

     label06:
        r56 = virtualinvoke r55.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

     label07:
        goto label09;

     label08:
        $r45 := @caughtexception;

        r3 = $r45;

        throw r3;

     label09:
        $i90 = lengthof r56;

        i102 = $i90 + 4;

        $i89 = i102 >> 8;

        $i88 = 255 & $i89;

        $b93 = (byte) $i88;

        r1[0] = $b93;

        $i92 = 255 & i102;

        $b91 = (byte) $i92;

        r1[1] = $b91;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r56);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(0);

        if z0 == 0 goto label10;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(66, null);

     label10:
        $r9 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(195);

        r57 = (java.lang.Long) $r9;

        if r57 == null goto label11;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(-61);

        $l94 = virtualinvoke r57.<java.lang.Long: long longValue()>();

        r58 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l94);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r58);

        if z0 == 0 goto label11;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(195, null);

     label11:
        $r12 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(68);

        r59 = (java.util.Calendar) $r12;

        if r59 == null goto label23;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        r60 = $r37;

        i103 = virtualinvoke r59.<java.util.Calendar: int get(int)>(1);

        i1 = i103;

     label12:
        if i1 >= 1000 goto label13;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        i1 = i1 * 10;

        goto label12;

     label13:
        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i103);

        i104 = virtualinvoke r59.<java.util.Calendar: int get(int)>(2);

        if i104 >= 10 goto label14;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label14:
        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i104);

        i105 = virtualinvoke r59.<java.util.Calendar: int get(int)>(5);

        if i105 >= 10 goto label15;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label15:
        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i105);

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        i106 = virtualinvoke r59.<java.util.Calendar: int get(int)>(11);

        if i106 >= 10 goto label16;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label16:
        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i106);

        i107 = virtualinvoke r59.<java.util.Calendar: int get(int)>(12);

        if i107 >= 10 goto label17;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label17:
        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i107);

        i108 = virtualinvoke r59.<java.util.Calendar: int get(int)>(13);

        if i108 >= 10 goto label18;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label18:
        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i108);

        $r38 = virtualinvoke r59.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r39 = virtualinvoke $r38.<java.util.TimeZone: java.lang.String getID()>();

        $z2 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("UTC");

        if $z2 == 0 goto label19;

        virtualinvoke r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Z");

     label19:
        $r40 = virtualinvoke r60.<java.lang.StringBuffer: java.lang.String toString()>();

        r61 = virtualinvoke $r40.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

     label20:
        goto label22;

     label21:
        $r41 := @caughtexception;

        r62 = $r41;

        throw r62;

     label22:
        $i82 = lengthof r61;

        i109 = $i82 + 3;

        $i83 = i109 >> 8;

        $i84 = 255 & $i83;

        $b85 = (byte) $i84;

        r1[0] = $b85;

        $i86 = 255 & i109;

        $b87 = (byte) $i86;

        r1[1] = $b87;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(68);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r61);

        if z0 == 0 goto label23;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(68, null);

     label23:
        $r11 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(196);

        r63 = (java.util.Calendar) $r11;

        if r63 == null goto label24;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(196);

        $r36 = virtualinvoke r63.<java.util.Calendar: java.util.Date getTime()>();

        $l80 = virtualinvoke $r36.<java.util.Date: long getTime()>();

        $l81 = $l80 / 1000L;

        r64 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l81);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r64);

        if z0 == 0 goto label24;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(196, null);

     label24:
        $r14 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(5);

        r65 = (java.lang.String) $r14;

        if r65 == null goto label25;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(5);

        r66 = staticinvoke <javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>(r65);

        $i74 = lengthof r66;

        i110 = $i74 + 3;

        $i73 = i110 >> 8;

        $i72 = 255 & $i73;

        $b71 = (byte) $i72;

        r1[0] = $b71;

        $i79 = 255 & i110;

        $b78 = (byte) $i79;

        r1[1] = $b78;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r66);

        if z0 == 0 goto label25;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(5, null);

     label25:
        $r13 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(70);

        $r16 = (byte[]) $r13;

        r67 = (byte[]) $r16;

        if r67 == null goto label26;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(70);

        $i65 = lengthof r67;

        i111 = $i65 + 3;

        $i64 = i111 >> 8;

        $i63 = 255 & $i64;

        $b77 = (byte) $i63;

        r1[0] = $b77;

        $i76 = 255 & i111;

        $b75 = (byte) $i76;

        r1[1] = $b75;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r67);

        if z0 == 0 goto label26;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(70, null);

     label26:
        $r15 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(71);

        $r18 = (byte[]) $r15;

        r68 = (byte[]) $r18;

        if r68 == null goto label27;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(71);

        $i56 = lengthof r68;

        i112 = $i56 + 3;

        $i70 = i112 >> 8;

        $i69 = 255 & $i70;

        $b68 = (byte) $i69;

        r1[0] = $b68;

        $i67 = 255 & i112;

        $b66 = (byte) $i67;

        r1[1] = $b66;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r68);

        if z0 == 0 goto label27;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(71, null);

     label27:
        $r17 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(74);

        $r21 = (byte[]) $r17;

        r69 = (byte[]) $r21;

        if r69 == null goto label28;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(74);

        $i62 = lengthof r69;

        i113 = $i62 + 3;

        $i59 = i113 >> 8;

        $i60 = 255 & $i59;

        $b57 = (byte) $i60;

        r1[0] = $b57;

        $i58 = 255 & i113;

        $b55 = (byte) $i58;

        r1[1] = $b55;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r69);

        if z0 == 0 goto label28;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(74, null);

     label28:
        $r22 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(76);

        $r19 = (byte[]) $r22;

        r70 = (byte[]) $r19;

        if r70 == null goto label29;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(76);

        $i52 = lengthof r70;

        i114 = $i52 + 3;

        $i49 = i114 >> 8;

        $i50 = 255 & $i49;

        $b47 = (byte) $i50;

        r1[0] = $b47;

        $i48 = 255 & i114;

        $b61 = (byte) $i48;

        r1[1] = $b61;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r70);

        if z0 == 0 goto label29;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(76, null);

     label29:
        $r20 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(79);

        $r24 = (byte[]) $r20;

        r71 = (byte[]) $r24;

        if r71 == null goto label30;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(79);

        $i39 = lengthof r71;

        i115 = $i39 + 3;

        $i42 = i115 >> 8;

        $i41 = 255 & $i42;

        $b53 = (byte) $i41;

        r1[0] = $b53;

        $i54 = 255 & i115;

        $b51 = (byte) $i54;

        r1[1] = $b51;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r71);

        if z0 == 0 goto label30;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(79, null);

     label30:
        i116 = 0;

     label31:
        if i116 >= 16 goto label36;

        $i15 = i116 + 48;

        $r31 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i15);

        r72 = (java.lang.String) $r31;

        if r72 == null goto label32;

        $b37 = (byte) i116;

        $i32 = $b37 + 48;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i32);

        r73 = staticinvoke <javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>(r72);

        $i34 = lengthof r73;

        i117 = $i34 + 3;

        $i33 = i117 >> 8;

        $i44 = 255 & $i33;

        $b43 = (byte) $i44;

        r1[0] = $b43;

        $i46 = 255 & i117;

        $b45 = (byte) $i46;

        r1[1] = $b45;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r73);

        if z0 == 0 goto label32;

        $i40 = i116 + 48;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i40, null);

     label32:
        $i14 = i116 + 112;

        $r30 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i14);

        $r33 = (byte[]) $r30;

        r74 = (byte[]) $r33;

        if r74 == null goto label33;

        $b30 = (byte) i116;

        $i31 = $b30 + 112;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i31);

        $i24 = lengthof r74;

        i118 = $i24 + 3;

        $i25 = i118 >> 8;

        $i26 = 255 & $i25;

        $b27 = (byte) $i26;

        r1[0] = $b27;

        $i36 = 255 & i118;

        $b35 = (byte) $i36;

        r1[1] = $b35;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r74);

        if z0 == 0 goto label33;

        $i38 = i116 + 112;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i38, null);

     label33:
        $i17 = i116 + 176;

        $r32 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i17);

        r75 = (java.lang.Byte) $r32;

        if r75 == null goto label34;

        $b19 = (byte) i116;

        $i20 = $b19 + 176;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i20);

        $b28 = virtualinvoke r75.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($b28);

        if z0 == 0 goto label34;

        $i29 = i116 + 176;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i29, null);

     label34:
        $i16 = i116 + 240;

        $r35 = virtualinvoke r50.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i16);

        r76 = (java.lang.Long) $r35;

        if r76 == null goto label35;

        $b21 = (byte) i116;

        $i22 = $b21 + 240;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i22);

        $l23 = virtualinvoke r76.<java.lang.Long: long longValue()>();

        $r34 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l23);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r34);

        if z0 == 0 goto label35;

        $i18 = i116 + 240;

        virtualinvoke r50.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i18, null);

     label35:
        i116 = i116 + 1;

        goto label31;

     label36:
        $r25 = r50.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r25 == null goto label37;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(77);

        $r28 = r50.<javax.obex.HeaderSet: byte[] mAuthChall>;

        $i10 = lengthof $r28;

        i119 = $i10 + 3;

        $i9 = i119 >> 8;

        $i8 = 255 & $i9;

        $b13 = (byte) $i8;

        r1[0] = $b13;

        $i12 = 255 & i119;

        $b11 = (byte) $i12;

        r1[1] = $b11;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        $r29 = r50.<javax.obex.HeaderSet: byte[] mAuthChall>;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r29);

        if z0 == 0 goto label37;

        r50.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

     label37:
        $r23 = r50.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r23 == null goto label38;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(78);

        $r26 = r50.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i4 = lengthof $r26;

        i120 = $i4 + 3;

        $i2 = i120 >> 8;

        $i3 = 255 & $i2;

        $b6 = (byte) $i3;

        r1[0] = $b6;

        $i7 = 255 & i120;

        $b5 = (byte) $i7;

        r1[1] = $b5;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        $r27 = r50.<javax.obex.HeaderSet: byte[] mAuthResp>;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r27);

        if z0 == 0 goto label38;

        r50.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

     label38:
        r77 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label39:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label40:
        goto label53;

     label41:
        $r48 := @caughtexception;

        goto label53;

     label42:
        $r46 := @caughtexception;

     label43:
        r77 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label44:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label45:
        goto label53;

     label46:
        $r49 := @caughtexception;

        goto label53;

     label47:
        $r47 := @caughtexception;

        r4 = $r47;

     label48:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label49:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label50:
        goto label52;

     label51:
        $r42 := @caughtexception;

     label52:
        throw r4;

     label53:
        return r77;

        catch java.io.UnsupportedEncodingException from label06 to label07 with label08;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label21;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.io.IOException from label01 to label38 with label42;
        catch java.lang.Exception from label44 to label45 with label46;
        catch java.lang.Throwable from label01 to label38 with label47;
        catch java.lang.Throwable from label42 to label43 with label47;
        catch java.lang.Exception from label49 to label50 with label51;
        catch java.lang.Throwable from label47 to label48 with label47;
    }

    public static int findHeaderEnd(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i10, $i13, $i15, $i16, $i18, i20, i21, i22, i23, i24, i25, i26, i27;
        byte $b9, $b11, $b12, $b14, $b17, $b19;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        i3 = -1;

        i4 = i0;

     label01:
        if i2 >= i1 goto label12;

        $i8 = lengthof r0;

        if i4 >= $i8 goto label12;

        $b9 = r0[i4];

        if $b9 >= 0 goto label02;

        $b19 = r0[i4];

        $i18 = $b19 + 256;

        goto label03;

     label02:
        $i18 = r0[i4];

     label03:
        i5 = $i18;

        i3 = i2;

        $i10 = i5 & 192;

        lookupswitch($i10)
        {
            case 0: goto label04;
            case 64: goto label04;
            case 128: goto label09;
            case 192: goto label10;
            default: goto label11;
        };

     label04:
        i20 = i4 + 1;

        $b11 = r0[i20];

        if $b11 >= 0 goto label05;

        $b17 = r0[i20];

        $i16 = $b17 + 256;

        goto label06;

     label05:
        $i16 = r0[i20];

     label06:
        i21 = $i16;

        i22 = i21 << 8;

        i23 = i20 + 1;

        $b12 = r0[i23];

        if $b12 >= 0 goto label07;

        $b14 = r0[i23];

        $i13 = $b14 + 256;

        goto label08;

     label07:
        $i13 = r0[i23];

     label08:
        i24 = i22 + $i13;

        i25 = i24 + -3;

        i26 = i23 + 1;

        i4 = i26 + i25;

        $i15 = i25 + 3;

        i2 = i2 + $i15;

        goto label11;

     label09:
        i27 = i4 + 1;

        i4 = i27 + 1;

        i2 = i2 + 2;

        goto label11;

     label10:
        i4 = i4 + 5;

        i2 = i2 + 5;

     label11:
        goto label01;

     label12:
        if i3 != 0 goto label14;

        if i2 >= i1 goto label13;

        $i7 = lengthof r0;

        return $i7;

     label13:
        return -1;

     label14:
        $i6 = i3 + i0;

        return $i6;
    }

    public static long convertToLong(byte[])
    {
        byte[] r0;
        long l0, l2, $l8, l9;
        int i3, $i4, $i7;
        byte $b5, $b6;

        r0 := @parameter0: byte[];

        l0 = 0L;

        l2 = 0L;

        $i4 = lengthof r0;

        i3 = $i4 - 1;

     label1:
        if i3 < 0 goto label3;

        $b5 = r0[i3];

        l9 = (long) $b5;

        $b6 = l9 cmp 0L;

        if $b6 >= 0 goto label2;

        l9 = l9 + 256L;

     label2:
        $i7 = (int) l2;

        $l8 = l9 << $i7;

        l0 = l0 | $l8;

        l2 = l2 + 8L;

        i3 = i3 + -1;

        goto label1;

     label3:
        return l0;
    }

    public static byte[] convertToByteArray(long)
    {
        long l0, $l1, $l2, $l5, $l6, $l9, $l10, $l13;
        byte[] r0;
        int $i3, $i7, $i11, $i15;
        byte $b4, $b8, $b12, $b14;

        l0 := @parameter0: long;

        r0 = newarray (byte)[4];

        $l1 = l0 >> 24;

        $l2 = 255L & $l1;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        r0[0] = $b4;

        $l5 = l0 >> 16;

        $l6 = 255L & $l5;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        r0[1] = $b8;

        $l9 = l0 >> 8;

        $l10 = 255L & $l9;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        r0[2] = $b12;

        $l13 = 255L & l0;

        $i15 = (int) $l13;

        $b14 = (byte) $i15;

        r0[3] = $b14;

        return r0;
    }

    public static byte[] convertToUnicodeByteArray(java.lang.String)
    {
        java.lang.String r0;
        char[] r1;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i16;
        char $c9, $c10, $c15;
        byte $b11, $b14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof r1;

        $i2 = $i1 * 2;

        $i3 = $i2 + 2;

        r2 = newarray (byte)[$i3];

        i0 = 0;

     label2:
        $i4 = lengthof r1;

        if i0 >= $i4 goto label3;

        $i13 = i0 * 2;

        $c9 = r1[i0];

        $c10 = $c9 >> 8;

        $b11 = (byte) $c10;

        r2[$i13] = $b11;

        $i12 = i0 * 2;

        $i16 = $i12 + 1;

        $c15 = r1[i0];

        $b14 = (byte) $c15;

        r2[$i16] = $b14;

        i0 = i0 + 1;

        goto label2;

     label3:
        $i5 = lengthof r2;

        $i6 = $i5 - 2;

        r2[$i6] = 0;

        $i7 = lengthof r2;

        $i8 = $i7 - 1;

        r2[$i8] = 0;

        return r2;
    }

    public static byte[] getTagValue(byte, byte[])
    {
        byte b0, $b3;
        byte[] r0, r1;
        int i1, i4, i5;
        short s2;

        b0 := @parameter0: byte;

        r0 := @parameter1: byte[];

        i1 = staticinvoke <javax.obex.ObexHelper: int findTag(byte,byte[])>(b0, r0);

        if i1 != -1 goto label1;

        return null;

     label1:
        i4 = i1 + 1;

        $b3 = r0[i4];

        s2 = $b3 & 255;

        r1 = newarray (byte)[s2];

        i5 = i4 + 1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, i5, r1, 0, s2);

        return r1;
    }

    public static int findTag(byte, byte[])
    {
        byte b0, $b4, $b6;
        byte[] r0;
        int i1, $i2, $i3, $i5, $i7;
        short s8;

        b0 := @parameter0: byte;

        r0 := @parameter1: byte[];

        if r0 != null goto label1;

        return -1;

     label1:
        i1 = 0;

     label2:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label3;

        $b4 = r0[i1];

        if $b4 == b0 goto label3;

        $i5 = i1 + 1;

        $b6 = r0[$i5];

        s8 = $b6 & 255;

        $i7 = s8 + 2;

        i1 = i1 + $i7;

        goto label2;

     label3:
        $i3 = lengthof r0;

        if i1 < $i3 goto label4;

        return -1;

     label4:
        return i1;
    }

    public static java.lang.String convertToUnicode(byte[], boolean)
    {
        byte[] r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12;
        char[] r1;
        java.lang.String $r2, $r4;
        char $c11;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        $i4 = lengthof r0;

        if $i4 != 0 goto label2;

     label1:
        return null;

     label2:
        i0 = lengthof r0;

        $i5 = i0 % 2;

        if $i5 == 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Byte array not of a valid form");

        throw $r3;

     label3:
        i12 = i0 >> 1;

        if z0 == 0 goto label4;

        i12 = i12 + -1;

     label4:
        r1 = newarray (char)[i12];

        i1 = 0;

     label5:
        if i1 >= i12 goto label9;

        $i6 = 2 * i1;

        i2 = r0[$i6];

        $i7 = 2 * i1;

        $i8 = $i7 + 1;

        i3 = r0[$i8];

        if i2 >= 0 goto label6;

        i2 = i2 + 256;

     label6:
        if i3 >= 0 goto label7;

        i3 = i3 + 256;

     label7:
        if i2 != 0 goto label8;

        if i3 != 0 goto label8;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i1);

        return $r4;

     label8:
        $i9 = i2 << 8;

        $i10 = $i9 | i3;

        $c11 = (char) $i10;

        r1[i1] = $c11;

        i1 = i1 + 1;

        goto label5;

     label9:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public static byte[] computeMd5Hash(byte[])
    {
        byte[] r0, $r2;
        java.security.MessageDigest r1;
        java.security.NoSuchAlgorithmException $r3, r5;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: byte[];

     label1:
        r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static byte[] computeAuthenticationChallenge(byte[], java.lang.String, boolean, boolean) throws java.io.IOException
    {
        byte[] r0, $r2, r5;
        java.lang.String r1;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        byte $b6, $b8, $b9, $b10, $b11, $b12, $b13;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i0 = lengthof r0;

        if $i0 == 16 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Nonce must be 16 bytes long");

        throw $r3;

     label1:
        if r1 != null goto label2;

        r5 = newarray (byte)[21];

        goto label4;

     label2:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 < 255 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Realm must be less then 255 bytes");

        throw $r4;

     label3:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 24 + $i2;

        r5 = newarray (byte)[$i3];

        r5[21] = 2;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 + 1;

        $b6 = (byte) $i5;

        r5[22] = $b6;

        r5[23] = 1;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r2, 0, r5, 24, $i7);

     label4:
        r5[0] = 0;

        r5[1] = 16;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, 0, r5, 2, 16);

        r5[18] = 1;

        r5[19] = 1;

        r5[20] = 0;

        if z0 != 0 goto label5;

        $b10 = r5[20];

        $b13 = $b10 | 2;

        $b12 = (byte) $b13;

        r5[20] = $b12;

     label5:
        if z1 == 0 goto label6;

        $b9 = r5[20];

        $b8 = $b9 | 1;

        $b11 = (byte) $b8;

        r5[20] = $b11;

     label6:
        return r5;
    }

    public static void <clinit>()
    {
        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_UNICODE> = 255;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_9> = 9;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_8> = 8;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_7> = 7;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_6> = 6;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_5> = 5;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_4> = 4;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_3> = 3;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_2> = 2;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_1> = 1;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ASCII> = 0;

        <javax.obex.ObexHelper: int OBEX_OPCODE_ABORT> = 255;

        <javax.obex.ObexHelper: int OBEX_OPCODE_SETPATH> = 133;

        <javax.obex.ObexHelper: int OBEX_OPCODE_RESERVED_FINAL> = 132;

        <javax.obex.ObexHelper: int OBEX_OPCODE_RESERVED> = 4;

        <javax.obex.ObexHelper: int OBEX_OPCODE_GET_FINAL> = 131;

        <javax.obex.ObexHelper: int OBEX_OPCODE_GET> = 3;

        <javax.obex.ObexHelper: int OBEX_OPCODE_PUT_FINAL> = 130;

        <javax.obex.ObexHelper: int OBEX_OPCODE_PUT> = 2;

        <javax.obex.ObexHelper: int OBEX_OPCODE_DISCONNECT> = 129;

        <javax.obex.ObexHelper: int OBEX_OPCODE_CONNECT> = 128;

        <javax.obex.ObexHelper: int MAX_CLIENT_PACKET_SIZE> = 64512;

        <javax.obex.ObexHelper: int MAX_PACKET_SIZE_INT> = 65534;

        <javax.obex.ObexHelper: int BASE_PACKET_LENGTH> = 3;

        return;
    }
}
