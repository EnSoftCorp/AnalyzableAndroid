public final class javax.obex.ServerOperation extends java.lang.Object implements javax.obex.Operation, javax.obex.BaseStream
{
    public boolean isAborted;
    public javax.obex.HeaderSet requestHeader;
    public javax.obex.HeaderSet replyHeader;
    public boolean finalBitSet;
    private java.io.InputStream mInput;
    private javax.obex.ServerSession mParent;
    private int mMaxPacketLength;
    private int mResponseSize;
    private boolean mClosed;
    private boolean mGetOperation;
    private javax.obex.PrivateInputStream mPrivateInput;
    private javax.obex.PrivateOutputStream mPrivateOutput;
    private boolean mPrivateOutputOpen;
    private java.lang.String mExceptionString;
    private javax.obex.ServerRequestHandler mListener;
    private boolean mRequestFinished;
    private boolean mHasBody;
    private boolean mSendBodyHeader;

    public void <init>(javax.obex.ServerSession, java.io.InputStream, int, int, javax.obex.ServerRequestHandler) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.ServerSession r1, $r20, $r40, $r41, $r42;
        java.io.InputStream r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i16, $i17, $i19, i20;
        javax.obex.ServerRequestHandler r3, $r12, $r13, $r45;
        byte[] r4, r5, $r15, $r17, $r22, $r27, $r28, $r29, $r34, $r37, $r39, $r44;
        javax.obex.HeaderSet $r6, $r7, $r11, $r14, $r16, $r19, $r23, $r24, $r25, $r26, $r30, $r31, $r32, $r33, $r35, $r36, $r38;
        javax.obex.PrivateInputStream $r8, $r9, $r10, $r18, $r21;
        boolean $z0, $z1, $z2, $z3, $z7, $z8, $z10;
        byte $b11;
        long $l12, $l18;
        java.io.IOException $r43, $r46;

        r0 := @this: javax.obex.ServerOperation;

        r1 := @parameter0: javax.obex.ServerSession;

        r2 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: javax.obex.ServerRequestHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.obex.ServerOperation: boolean mSendBodyHeader> = 1;

        r0.<javax.obex.ServerOperation: boolean isAborted> = 0;

        r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent> = r1;

        r0.<javax.obex.ServerOperation: java.io.InputStream mInput> = r2;

        r0.<javax.obex.ServerOperation: int mMaxPacketLength> = i1;

        r0.<javax.obex.ServerOperation: boolean mClosed> = 0;

        $r6 = new javax.obex.HeaderSet;

        specialinvoke $r6.<javax.obex.HeaderSet: void <init>()>();

        r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader> = $r6;

        $r7 = new javax.obex.HeaderSet;

        specialinvoke $r7.<javax.obex.HeaderSet: void <init>()>();

        r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader> = $r7;

        $r8 = new javax.obex.PrivateInputStream;

        specialinvoke $r8.<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>(r0);

        r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput> = $r8;

        r0.<javax.obex.ServerOperation: int mResponseSize> = 3;

        r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener> = r3;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 0;

        r0.<javax.obex.ServerOperation: boolean mPrivateOutputOpen> = 0;

        r0.<javax.obex.ServerOperation: boolean mHasBody> = 0;

        if i0 == 2 goto label01;

        if i0 != 130 goto label03;

     label01:
        r0.<javax.obex.ServerOperation: boolean mGetOperation> = 0;

        $i4 = i0 & 128;

        if $i4 != 0 goto label02;

        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 0;

        goto label06;

     label02:
        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 1;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 1;

        goto label06;

     label03:
        if i0 == 3 goto label04;

        if i0 != 131 goto label05;

     label04:
        r0.<javax.obex.ServerOperation: boolean mGetOperation> = 1;

        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 0;

        if i0 != 131 goto label06;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 1;

        goto label06;

     label05:
        $r46 = new java.io.IOException;

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>("ServerOperation can not handle such request");

        throw $r46;

     label06:
        i3 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i5 = i3 << 8;

        $i6 = virtualinvoke r2.<java.io.InputStream: int read()>();

        i20 = $i5 + $i6;

        if i20 <= 65534 goto label07;

        $r42 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r42.<javax.obex.ServerSession: void sendResponse(int,byte[])>(206, null);

        $r43 = new java.io.IOException;

        specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>("Packet received was too large");

        throw $r43;

     label07:
        if i20 <= 3 goto label16;

        $i8 = i20 - 3;

        r4 = newarray (byte)[$i8];

        i2 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r4);

     label08:
        $i10 = lengthof r4;

        if i2 == $i10 goto label09;

        $i19 = lengthof r4;

        $i16 = $i19 - i2;

        $i17 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r4, i2, $i16);

        i2 = i2 + $i17;

        goto label08;

     label09:
        $r11 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        r5 = staticinvoke <javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>($r11, r4);

        if r5 == null goto label10;

        r0.<javax.obex.ServerOperation: boolean mHasBody> = 1;

     label10:
        $r13 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $l12 = virtualinvoke $r13.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b11 = $l12 cmp -1L;

        if $b11 == 0 goto label11;

        $r36 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r37 = $r36.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r37 == null goto label11;

        $r45 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $r38 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r44 = $r38.<javax.obex.HeaderSet: byte[] mConnectionID>;

        $l18 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>($r44);

        virtualinvoke $r45.<javax.obex.ServerRequestHandler: void setConnectionId(long)>($l18);

        goto label12;

     label11:
        $r12 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        virtualinvoke $r12.<javax.obex.ServerRequestHandler: void setConnectionId(long)>(1L);

     label12:
        $r16 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r17 = $r16.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r17 == null goto label13;

        $r40 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r31 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r39 = $r31.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $z10 = virtualinvoke $r40.<javax.obex.ServerSession: boolean handleAuthResp(byte[])>($r39);

        if $z10 != 0 goto label13;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Authentication Failed";

        $r41 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r41.<javax.obex.ServerSession: void sendResponse(int,byte[])>(193, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        $r35 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r35.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        return;

     label13:
        $r14 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r15 = $r14.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r15 == null goto label14;

        $r20 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r19 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        virtualinvoke $r20.<javax.obex.ServerSession: boolean handleAuthChall(javax.obex.HeaderSet)>($r19);

        $r26 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r23 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r22 = $r23.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i14 = lengthof $r22;

        $r27 = newarray (byte)[$i14];

        $r26.<javax.obex.HeaderSet: byte[] mAuthResp> = $r27;

        $r25 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r34 = $r25.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r24 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r28 = $r24.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r30 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r29 = $r30.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i15 = lengthof $r29;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r34, 0, $r28, 0, $i15);

        $r33 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r33.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        $r32 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r32.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

     label14:
        if r5 == null goto label15;

        $r21 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r21.<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>(r5, 1);

        goto label16;

     label15:
        $z7 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z7 != 0 goto label16;

        $z8 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z8 != 0 goto label16;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        $r18 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $i13 = virtualinvoke $r18.<javax.obex.PrivateInputStream: int available()>();

        if $i13 <= 0 goto label15;

        goto label16;

     label16:
        $z0 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z0 != 0 goto label17;

        $z3 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z3 != 0 goto label17;

        $r9 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $i7 = virtualinvoke $r9.<javax.obex.PrivateInputStream: int available()>();

        if $i7 != 0 goto label17;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        $r10 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $i9 = virtualinvoke $r10.<javax.obex.PrivateInputStream: int available()>();

        if $i9 <= 0 goto label16;

        goto label17;

     label17:
        $z2 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z2 == 0 goto label18;

        $z1 = r0.<javax.obex.ServerOperation: boolean mRequestFinished>;

        if $z1 != 0 goto label18;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        goto label17;

     label18:
        return;
    }

    public boolean isValidBody()
    {
        javax.obex.ServerOperation r0;
        boolean $z0;

        r0 := @this: javax.obex.ServerOperation;

        $z0 = r0.<javax.obex.ServerOperation: boolean mHasBody>;

        return $z0;
    }

    public synchronized boolean continueOperation(boolean, boolean) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        boolean z0, z1, $z2, $z4;
        int $i0, $i1;
        javax.obex.PrivateOutputStream $r1;

        r0 := @this: javax.obex.ServerOperation;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z2 != 0 goto label5;

        $z4 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z4 != 0 goto label4;

        if z0 == 0 goto label1;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        return 1;

     label1:
        $i0 = r0.<javax.obex.ServerOperation: int mResponseSize>;

        if $i0 > 3 goto label2;

        $r1 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $i1 = virtualinvoke $r1.<javax.obex.PrivateOutputStream: int size()>();

        if $i1 <= 0 goto label3;

     label2:
        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        return 1;

     label3:
        return 0;

     label4:
        return 0;

     label5:
        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        return 1;
    }

    public synchronized boolean sendReply(int) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        int i0, i1, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48, $i49, $i50, $i51, i52, i53, i55, i56, i57, i58;
        java.io.ByteArrayOutputStream r1, $r5;
        long l2, $l15, $l20;
        byte[] r2, r3, r4, $r9, $r11, $r22, $r24, $r29, $r30, $r31, $r37, $r39, $r40, $r43, $r45, r70, r71, r72;
        javax.obex.ServerRequestHandler $r6, $r17, $r19, $r52;
        javax.obex.HeaderSet $r7, $r8, $r18, $r20, $r23, $r25, $r27, $r28, $r32, $r33, $r34, $r35, $r36, $r41, $r42, $r44, $r46, $r48, $r66;
        byte $b7, $b16, $b25, $b26, $b27, $b35, $b37, $b38, $b47, b54;
        javax.obex.PrivateOutputStream $r10, $r59, $r60, $r64, $r65, $r68;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9;
        javax.obex.ServerSession $r12, $r26, $r38, $r47, $r51, $r55, $r57, $r62, $r67;
        java.io.InputStream $r13, $r14, $r15, $r16, $r49, $r53, $r58;
        javax.obex.PrivateInputStream $r21, $r63, $r69;
        java.io.IOException $r50, $r54, $r56, $r61;

        r0 := @this: javax.obex.ServerOperation;

        i0 := @parameter0: int;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r5;

        $r6 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        l2 = virtualinvoke $r6.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b7 = l2 cmp -1L;

        if $b7 != 0 goto label01;

        $r66 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r66.<javax.obex.HeaderSet: byte[] mConnectionID> = null;

        goto label02;

     label01:
        $r7 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r9 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>(l2);

        $r7.<javax.obex.HeaderSet: byte[] mConnectionID> = $r9;

     label02:
        $r8 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        r2 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r8, 1);

        i3 = -1;

        i4 = -1;

        $r10 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r10 == null goto label03;

        $r65 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        i3 = virtualinvoke $r65.<javax.obex.PrivateOutputStream: int size()>();

        i4 = i3;

     label03:
        $i9 = lengthof r2;

        $i10 = 3 + $i9;

        $i8 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        if $i10 <= $i8 goto label10;

        i5 = 0;

        i6 = 0;

     label04:
        $i40 = lengthof r2;

        if i5 == $i40 goto label08;

        $i49 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i48 = $i49 - 3;

        i5 = staticinvoke <javax.obex.ObexHelper: int findHeaderEnd(byte[],int,int)>(r2, i6, $i48);

        if i5 != -1 goto label07;

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        $r69 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r69 == null goto label05;

        $r63 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r63.<javax.obex.PrivateInputStream: void close()>();

     label05:
        $r68 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r68 == null goto label06;

        $r64 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        virtualinvoke $r64.<javax.obex.PrivateOutputStream: void close()>();

     label06:
        $r62 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r62.<javax.obex.ServerSession: void sendResponse(int,byte[])>(208, null);

        $r61 = new java.io.IOException;

        specialinvoke $r61.<java.io.IOException: void <init>(java.lang.String)>("OBEX Packet exceeds max packet size");

        throw $r61;

     label07:
        $i50 = i5 - i6;

        r3 = newarray (byte)[$i50];

        $i51 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, i6, r3, 0, $i51);

        $r67 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r67.<javax.obex.ServerSession: void sendResponse(int,byte[])>(i0, r3);

        i6 = i5;

        goto label04;

     label08:
        if i3 <= 0 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r2);

        $z0 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z0 == 0 goto label11;

        if i0 != 160 goto label11;

        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 1;

     label11:
        $z2 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z2 != 0 goto label12;

        $i41 = lengthof r2;

        $i43 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i42 = $i43 - 20;

        if $i41 >= $i42 goto label16;

     label12:
        if i3 <= 0 goto label16;

        $i34 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i33 = lengthof r2;

        $i31 = $i34 - $i33;

        $i32 = $i31 - 6;

        if i3 <= $i32 goto label13;

        $i45 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i46 = lengthof r2;

        $i44 = $i45 - $i46;

        i3 = $i44 - 6;

     label13:
        $r59 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        r70 = virtualinvoke $r59.<javax.obex.PrivateOutputStream: byte[] readBytes(int)>(i3);

        $z6 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z6 != 0 goto label14;

        $r60 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $z9 = virtualinvoke $r60.<javax.obex.PrivateOutputStream: boolean isClosed()>();

        if $z9 == 0 goto label15;

     label14:
        $z7 = r0.<javax.obex.ServerOperation: boolean mSendBodyHeader>;

        if $z7 != 1 goto label16;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(73);

        i52 = i3 + 3;

        $i39 = i52 >> 8;

        $b38 = (byte) $i39;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b38);

        $b37 = (byte) i52;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b37);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r70);

        goto label16;

     label15:
        $z8 = r0.<javax.obex.ServerOperation: boolean mSendBodyHeader>;

        if $z8 != 1 goto label16;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(72);

        i53 = i3 + 3;

        $i36 = i53 >> 8;

        $b35 = (byte) $i36;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b35);

        $b47 = (byte) i53;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b47);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r70);

     label16:
        $z1 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z1 == 0 goto label17;

        if i0 != 160 goto label17;

        if i4 > 0 goto label17;

        $z5 = r0.<javax.obex.ServerOperation: boolean mSendBodyHeader>;

        if $z5 != 1 goto label17;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(73);

        b54 = 3;

        $b27 = b54 >> 8;

        $b25 = (byte) $b27;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b25);

        $b26 = (byte) b54;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b26);

     label17:
        r0.<javax.obex.ServerOperation: int mResponseSize> = 3;

        $r12 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r11 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r12.<javax.obex.ServerSession: void sendResponse(int,byte[])>(i0, $r11);

        if i0 != 144 goto label34;

        $r13 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i55 = virtualinvoke $r13.<java.io.InputStream: int read()>();

        $r15 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i56 = virtualinvoke $r15.<java.io.InputStream: int read()>();

        $i11 = i56 << 8;

        $r14 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i12 = virtualinvoke $r14.<java.io.InputStream: int read()>();

        i57 = $i11 + $i12;

        if i55 == 2 goto label21;

        if i55 == 130 goto label21;

        if i55 == 3 goto label21;

        if i55 == 131 goto label21;

        if i57 <= 3 goto label19;

        $i23 = i57 - 3;

        r71 = newarray (byte)[$i23];

        $r53 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i1 = virtualinvoke $r53.<java.io.InputStream: int read(byte[])>(r71);

     label18:
        $i24 = lengthof r71;

        if i1 == $i24 goto label19;

        $r58 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i29 = lengthof r71;

        $i30 = $i29 - i1;

        $i28 = virtualinvoke $r58.<java.io.InputStream: int read(byte[],int,int)>(r71, i1, $i30);

        i1 = i1 + $i28;

        goto label18;

     label19:
        if i55 != 255 goto label20;

        $r57 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r57.<javax.obex.ServerSession: void sendResponse(int,byte[])>(160, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        r0.<javax.obex.ServerOperation: boolean isAborted> = 1;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Abort Received";

        $r56 = new java.io.IOException;

        specialinvoke $r56.<java.io.IOException: void <init>(java.lang.String)>("Abort Received");

        throw $r56;

     label20:
        $r55 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r55.<javax.obex.ServerSession: void sendResponse(int,byte[])>(192, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Bad Request Received";

        $r54 = new java.io.IOException;

        specialinvoke $r54.<java.io.IOException: void <init>(java.lang.String)>("Bad Request Received");

        throw $r54;

     label21:
        if i55 != 130 goto label22;

        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 1;

        goto label23;

     label22:
        if i55 != 131 goto label23;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 1;

     label23:
        if i57 <= 65534 goto label24;

        $r51 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r51.<javax.obex.ServerSession: void sendResponse(int,byte[])>(206, null);

        $r50 = new java.io.IOException;

        specialinvoke $r50.<java.io.IOException: void <init>(java.lang.String)>("Packet received was too large");

        throw $r50;

     label24:
        if i57 <= 3 goto label33;

        $i13 = i57 - 3;

        r72 = newarray (byte)[$i13];

        $r16 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i58 = virtualinvoke $r16.<java.io.InputStream: int read(byte[])>(r72);

     label25:
        $i14 = lengthof r72;

        if i58 == $i14 goto label26;

        $r49 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i22 = lengthof r72;

        $i21 = $i22 - i58;

        $i19 = virtualinvoke $r49.<java.io.InputStream: int read(byte[],int,int)>(r72, i58, $i21);

        i58 = i58 + $i19;

        goto label25;

     label26:
        $r18 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        r4 = staticinvoke <javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>($r18, r72);

        if r4 == null goto label27;

        r0.<javax.obex.ServerOperation: boolean mHasBody> = 1;

     label27:
        $r17 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $l15 = virtualinvoke $r17.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b16 = $l15 cmp -1L;

        if $b16 == 0 goto label28;

        $r42 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r43 = $r42.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r43 == null goto label28;

        $r52 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $r44 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r45 = $r44.<javax.obex.HeaderSet: byte[] mConnectionID>;

        $l20 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>($r45);

        virtualinvoke $r52.<javax.obex.ServerRequestHandler: void setConnectionId(long)>($l20);

        goto label29;

     label28:
        $r19 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        virtualinvoke $r19.<javax.obex.ServerRequestHandler: void setConnectionId(long)>(1L);

     label29:
        $r20 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r24 = $r20.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r24 == null goto label31;

        $r38 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r36 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r37 = $r36.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $z4 = virtualinvoke $r38.<javax.obex.ServerSession: boolean handleAuthResp(byte[])>($r37);

        if $z4 != 0 goto label30;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Authentication Failed";

        $r47 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r47.<javax.obex.ServerSession: void sendResponse(int,byte[])>(193, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        $r48 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r48.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        return 0;

     label30:
        $r46 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r46.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

     label31:
        $r23 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r22 = $r23.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r22 == null goto label32;

        $r26 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r27 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        virtualinvoke $r26.<javax.obex.ServerSession: boolean handleAuthChall(javax.obex.HeaderSet)>($r27);

        $r28 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r25 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r30 = $r25.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i17 = lengthof $r30;

        $r29 = newarray (byte)[$i17];

        $r28.<javax.obex.HeaderSet: byte[] mAuthResp> = $r29;

        $r34 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r40 = $r34.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r33 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r39 = $r33.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r32 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r31 = $r32.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i18 = lengthof $r31;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r40, 0, $r39, 0, $i18);

        $r41 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r41.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        $r35 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r35.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

     label32:
        if r4 == null goto label33;

        $r21 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r21.<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>(r4, 1);

     label33:
        return 1;

     label34:
        return 0;
    }

    public void abort() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Called from a server");

        throw $r1;
    }

    public javax.obex.HeaderSet getReceivedHeader() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.HeaderSet $r1;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        $r1 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        return $r1;
    }

    public void sendHeaders(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.HeaderSet r1, $r3;
        int[] r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ServerOperation;

        r1 := @parameter0: javax.obex.HeaderSet;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        if r1 != null goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Headers may not be null");

        throw $r5;

     label1:
        r2 = virtualinvoke r1.<javax.obex.HeaderSet: int[] getHeaderList()>();

        if r2 == null goto label3;

        i0 = 0;

     label2:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label3;

        $r3 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $i3 = r2[i0];

        $i2 = r2[i0];

        $r4 = virtualinvoke r1.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i2);

        virtualinvoke $r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i3, $r4);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public int getResponseCode() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Called from a server");

        throw $r1;
    }

    public java.lang.String getEncoding()
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        return null;
    }

    public java.lang.String getType()
    {
        javax.obex.ServerOperation r0;
        javax.obex.HeaderSet $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ServerOperation;

     label1:
        $r2 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r3 = virtualinvoke $r2.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(66);

        $r4 = (java.lang.String) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long getLength()
    {
        javax.obex.ServerOperation r0;
        java.lang.Long r1;
        javax.obex.HeaderSet $r2;
        java.lang.Object $r3;
        long $l0;
        java.io.IOException $r4;

        r0 := @this: javax.obex.ServerOperation;

     label1:
        $r2 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r3 = virtualinvoke $r2.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(195);

        r1 = (java.lang.Long) $r3;

        if r1 != null goto label3;

     label2:
        return -1L;

     label3:
        $l0 = virtualinvoke r1.<java.lang.Long: long longValue()>();

     label4:
        return $l0;

     label5:
        $r4 := @caughtexception;

        return -1L;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public int getMaxPacketSize()
    {
        javax.obex.ServerOperation r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: javax.obex.ServerOperation;

        $i0 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i1 = $i0 - 6;

        $i2 = virtualinvoke r0.<javax.obex.ServerOperation: int getHeaderLength()>();

        $i3 = $i1 - $i2;

        return $i3;
    }

    public int getHeaderLength()
    {
        javax.obex.ServerOperation r0;
        long l0;
        byte[] r1, $r4;
        javax.obex.ServerRequestHandler $r2;
        byte $b1;
        javax.obex.HeaderSet $r3, $r5, $r6;
        int $i2;

        r0 := @this: javax.obex.ServerOperation;

        $r2 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        l0 = virtualinvoke $r2.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r6 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r6.<javax.obex.HeaderSet: byte[] mConnectionID> = null;

        goto label2;

     label1:
        $r3 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r4 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>(l0);

        $r3.<javax.obex.HeaderSet: byte[] mConnectionID> = $r4;

     label2:
        $r5 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        r1 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r5, 0);

        $i2 = lengthof r1;

        return $i2;
    }

    public java.io.InputStream openInputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.PrivateInputStream $r1;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        $r1 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        return $r1;
    }

    public java.io.DataInputStream openDataInputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.DataInputStream $r1;
        java.io.InputStream $r2;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.DataInputStream;

        $r2 = virtualinvoke r0.<javax.obex.ServerOperation: java.io.InputStream openInputStream()>();

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        return $r1;
    }

    public java.io.OutputStream openOutputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        boolean $z0, $z1;
        javax.obex.PrivateOutputStream $r1, $r2, $r3;
        int $i0;
        java.io.IOException $r4, $r5;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        $z0 = r0.<javax.obex.ServerOperation: boolean mPrivateOutputOpen>;

        if $z0 == 0 goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("no more input streams available, stream already opened");

        throw $r5;

     label1:
        $z1 = r0.<javax.obex.ServerOperation: boolean mRequestFinished>;

        if $z1 != 0 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("no  output streams available ,request not finished");

        throw $r4;

     label2:
        $r1 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r1 != null goto label3;

        $r3 = new javax.obex.PrivateOutputStream;

        $i0 = virtualinvoke r0.<javax.obex.ServerOperation: int getMaxPacketSize()>();

        specialinvoke $r3.<javax.obex.PrivateOutputStream: void <init>(javax.obex.BaseStream,int)>(r0, $i0);

        r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput> = $r3;

     label3:
        r0.<javax.obex.ServerOperation: boolean mPrivateOutputOpen> = 1;

        $r2 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        return $r2;
    }

    public java.io.DataOutputStream openDataOutputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.DataOutputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.DataOutputStream;

        $r2 = virtualinvoke r0.<javax.obex.ServerOperation: java.io.OutputStream openOutputStream()>();

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        return;
    }

    public void ensureOpen() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.lang.String $r1, $r4;
        boolean $z0;
        java.io.IOException $r2, $r3;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = r0.<javax.obex.ServerOperation: java.lang.String mExceptionString>;

        if $r1 == null goto label1;

        $r3 = new java.io.IOException;

        $r4 = r0.<javax.obex.ServerOperation: java.lang.String mExceptionString>;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $z0 = r0.<javax.obex.ServerOperation: boolean mClosed>;

        if $z0 == 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Operation has already ended");

        throw $r2;

     label2:
        return;
    }

    public void ensureNotDone() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        return;
    }

    public void streamClosed(boolean) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        boolean z0;

        r0 := @this: javax.obex.ServerOperation;

        z0 := @parameter0: boolean;

        return;
    }

    public void noBodyHeader()
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        r0.<javax.obex.ServerOperation: boolean mSendBodyHeader> = 0;

        return;
    }
}
