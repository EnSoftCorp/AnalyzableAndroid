public final class javax.obex.ClientSession extends javax.obex.ObexSession
{
    private boolean mOpen;
    private boolean mObexConnected;
    private byte[] mConnectionId;
    private int maxPacketSize;
    private boolean mRequestActive;
    private final java.io.InputStream mInput;
    private final java.io.OutputStream mOutput;

    public void <init>(javax.obex.ObexTransport) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.ObexTransport r1;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.ObexTransport;

        specialinvoke r0.<javax.obex.ObexSession: void <init>()>();

        r0.<javax.obex.ClientSession: byte[] mConnectionId> = null;

        r0.<javax.obex.ClientSession: int maxPacketSize> = 256;

        $r2 = interfaceinvoke r1.<javax.obex.ObexTransport: java.io.InputStream openInputStream()>();

        r0.<javax.obex.ClientSession: java.io.InputStream mInput> = $r2;

        $r3 = interfaceinvoke r1.<javax.obex.ObexTransport: java.io.OutputStream openOutputStream()>();

        r0.<javax.obex.ClientSession: java.io.OutputStream mOutput> = $r3;

        r0.<javax.obex.ClientSession: boolean mOpen> = 1;

        r0.<javax.obex.ClientSession: boolean mRequestActive> = 0;

        return;
    }

    public javax.obex.HeaderSet connect(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.HeaderSet r1, r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5;
        byte[] r2, r3, $r7, $r8, $r9, $r10;
        boolean $z0;
        java.io.IOException $r6, $r11;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.HeaderSet;

        virtualinvoke r0.<javax.obex.ClientSession: void ensureOpen()>();

        $z0 = r0.<javax.obex.ClientSession: boolean mObexConnected>;

        if $z0 == 0 goto label1;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Already connected to server");

        throw $r11;

     label1:
        specialinvoke r0.<javax.obex.ClientSession: void setRequestActive()>();

        i0 = 4;

        r2 = null;

        if r1 == null goto label3;

        $r7 = r1.<javax.obex.HeaderSet: byte[] nonce>;

        if $r7 == null goto label2;

        $r8 = newarray (byte)[16];

        r0.<javax.obex.ClientSession: byte[] mChallengeDigest> = $r8;

        $r9 = r1.<javax.obex.HeaderSet: byte[] nonce>;

        $r10 = r0.<javax.obex.ClientSession: byte[] mChallengeDigest>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r9, 0, $r10, 0, 16);

     label2:
        r2 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>(r1, 0);

        $i5 = lengthof r2;

        i0 = i0 + $i5;

     label3:
        r3 = newarray (byte)[i0];

        r3[0] = 16;

        r3[1] = 0;

        r3[2] = -1;

        r3[3] = -2;

        if r2 == null goto label4;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, 4, $i4);

     label4:
        $i1 = lengthof r3;

        $i2 = $i1 + 3;

        if $i2 <= 65534 goto label5;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Packet size exceeds max packet size");

        throw $r6;

     label5:
        $r5 = new javax.obex.HeaderSet;

        specialinvoke $r5.<javax.obex.HeaderSet: void <init>()>();

        r4 = $r5;

        virtualinvoke r0.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(128, r3, r4, null);

        $i3 = r4.<javax.obex.HeaderSet: int responseCode>;

        if $i3 != 160 goto label6;

        r0.<javax.obex.ClientSession: boolean mObexConnected> = 1;

     label6:
        virtualinvoke r0.<javax.obex.ClientSession: void setRequestInactive()>();

        return r4;
    }

    public javax.obex.Operation get(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.HeaderSet r1, r2, $r12;
        boolean $z0;
        byte[] $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        javax.obex.ClientOperation $r5;
        int $i0;
        java.io.IOException $r13;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.HeaderSet;

        $z0 = r0.<javax.obex.ClientSession: boolean mObexConnected>;

        if $z0 != 0 goto label1;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Not connected to the server");

        throw $r13;

     label1:
        specialinvoke r0.<javax.obex.ClientSession: void setRequestActive()>();

        virtualinvoke r0.<javax.obex.ClientSession: void ensureOpen()>();

        if r1 != null goto label2;

        $r12 = new javax.obex.HeaderSet;

        specialinvoke $r12.<javax.obex.HeaderSet: void <init>()>();

        r2 = $r12;

        goto label3;

     label2:
        r2 = r1;

        $r3 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        if $r3 == null goto label3;

        $r9 = newarray (byte)[16];

        r0.<javax.obex.ClientSession: byte[] mChallengeDigest> = $r9;

        $r11 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        $r10 = r0.<javax.obex.ClientSession: byte[] mChallengeDigest>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r11, 0, $r10, 0, 16);

     label3:
        $r4 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        if $r4 == null goto label4;

        $r6 = newarray (byte)[4];

        r2.<javax.obex.HeaderSet: byte[] mConnectionID> = $r6;

        $r8 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        $r7 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r8, 0, $r7, 0, 4);

     label4:
        $r5 = new javax.obex.ClientOperation;

        $i0 = r0.<javax.obex.ClientSession: int maxPacketSize>;

        specialinvoke $r5.<javax.obex.ClientOperation: void <init>(int,javax.obex.ClientSession,javax.obex.HeaderSet,boolean)>($i0, r0, r2, 1);

        return $r5;
    }

    public void setConnectionID(long)
    {
        javax.obex.ClientSession r0;
        long l0;
        byte $b1, $b2;
        java.lang.IllegalArgumentException $r1;
        byte[] $r2;

        r0 := @this: javax.obex.ClientSession;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $b2 = l0 cmp 4294967295L;

        if $b2 <= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection ID is not in a valid range");

        throw $r1;

     label2:
        $r2 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>(l0);

        r0.<javax.obex.ClientSession: byte[] mConnectionId> = $r2;

        return;
    }

    public javax.obex.HeaderSet delete(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.HeaderSet r1, r3;
        javax.obex.Operation r2;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.HeaderSet;

        r2 = virtualinvoke r0.<javax.obex.ClientSession: javax.obex.Operation put(javax.obex.HeaderSet)>(r1);

        interfaceinvoke r2.<javax.obex.Operation: int getResponseCode()>();

        r3 = interfaceinvoke r2.<javax.obex.Operation: javax.obex.HeaderSet getReceivedHeader()>();

        interfaceinvoke r2.<javax.obex.Operation: void close()>();

        return r3;
    }

    public javax.obex.HeaderSet disconnect(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ClientSession r0, r4;
        javax.obex.HeaderSet r1, r3, $r7;
        byte[] r2, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Throwable r5, $r19;
        boolean $z0;
        int $i0, $i1, $i2;
        java.io.IOException $r12, $r20;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.HeaderSet;

        $z0 = r0.<javax.obex.ClientSession: boolean mObexConnected>;

        if $z0 != 0 goto label01;

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Not connected to the server");

        throw $r20;

     label01:
        specialinvoke r0.<javax.obex.ClientSession: void setRequestActive()>();

        virtualinvoke r0.<javax.obex.ClientSession: void ensureOpen()>();

        r2 = null;

        if r1 == null goto label04;

        $r10 = r1.<javax.obex.HeaderSet: byte[] nonce>;

        if $r10 == null goto label02;

        $r15 = newarray (byte)[16];

        r0.<javax.obex.ClientSession: byte[] mChallengeDigest> = $r15;

        $r17 = r1.<javax.obex.HeaderSet: byte[] nonce>;

        $r18 = r0.<javax.obex.ClientSession: byte[] mChallengeDigest>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r17, 0, $r18, 0, 16);

     label02:
        $r11 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        if $r11 == null goto label03;

        $r14 = newarray (byte)[4];

        r1.<javax.obex.HeaderSet: byte[] mConnectionID> = $r14;

        $r16 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        $r13 = r1.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r16, 0, $r13, 0, 4);

     label03:
        r2 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>(r1, 0);

        $i1 = lengthof r2;

        $i2 = $i1 + 3;

        $i0 = r0.<javax.obex.ClientSession: int maxPacketSize>;

        if $i2 <= $i0 goto label05;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Packet size exceeds max packet size");

        throw $r12;

     label04:
        $r6 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        if $r6 == null goto label05;

        r2 = newarray (byte)[5];

        r2[0] = -53;

        $r9 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r9, 0, r2, 1, 4);

     label05:
        $r7 = new javax.obex.HeaderSet;

        specialinvoke $r7.<javax.obex.HeaderSet: void <init>()>();

        r3 = $r7;

        virtualinvoke r0.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(129, r2, r3, null);

        r4 = r0;

        entermonitor r0;

     label06:
        r0.<javax.obex.ClientSession: boolean mObexConnected> = 0;

        virtualinvoke r0.<javax.obex.ClientSession: void setRequestInactive()>();

        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r4;

     label09:
        throw r5;

     label10:
        return r3;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public long getConnectionID()
    {
        javax.obex.ClientSession r0;
        byte[] $r1, $r2;
        long $l0;

        r0 := @this: javax.obex.ClientSession;

        $r1 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        if $r1 != null goto label1;

        return -1L;

     label1:
        $r2 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        $l0 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>($r2);

        return $l0;
    }

    public javax.obex.Operation put(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.HeaderSet r1, r2, $r12;
        boolean $z0;
        byte[] $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        javax.obex.ClientOperation $r5;
        int $i0;
        java.io.IOException $r13;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.HeaderSet;

        $z0 = r0.<javax.obex.ClientSession: boolean mObexConnected>;

        if $z0 != 0 goto label1;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Not connected to the server");

        throw $r13;

     label1:
        specialinvoke r0.<javax.obex.ClientSession: void setRequestActive()>();

        virtualinvoke r0.<javax.obex.ClientSession: void ensureOpen()>();

        if r1 != null goto label2;

        $r12 = new javax.obex.HeaderSet;

        specialinvoke $r12.<javax.obex.HeaderSet: void <init>()>();

        r2 = $r12;

        goto label3;

     label2:
        r2 = r1;

        $r3 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        if $r3 == null goto label3;

        $r9 = newarray (byte)[16];

        r0.<javax.obex.ClientSession: byte[] mChallengeDigest> = $r9;

        $r11 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        $r10 = r0.<javax.obex.ClientSession: byte[] mChallengeDigest>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r11, 0, $r10, 0, 16);

     label3:
        $r4 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        if $r4 == null goto label4;

        $r6 = newarray (byte)[4];

        r2.<javax.obex.HeaderSet: byte[] mConnectionID> = $r6;

        $r8 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        $r7 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r8, 0, $r7, 0, 4);

     label4:
        $r5 = new javax.obex.ClientOperation;

        $i0 = r0.<javax.obex.ClientSession: int maxPacketSize>;

        specialinvoke $r5.<javax.obex.ClientOperation: void <init>(int,javax.obex.ClientSession,javax.obex.HeaderSet,boolean)>($i0, r0, r2, 0);

        return $r5;
    }

    public void setAuthenticator(javax.obex.Authenticator) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.Authenticator r1;
        java.io.IOException $r2;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.Authenticator;

        if r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Authenticator may not be null");

        throw $r2;

     label1:
        r0.<javax.obex.ClientSession: javax.obex.Authenticator mAuthenticator> = r1;

        return;
    }

    public javax.obex.HeaderSet setPath(javax.obex.HeaderSet, boolean, boolean) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        javax.obex.HeaderSet r1, r2, r4, $r8, $r18;
        boolean z0, z1, $z2;
        int i0, $i1, $i3, $i4, i5;
        byte[] r3, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, r21;
        byte $b2;
        java.io.IOException $r9, $r20;

        r0 := @this: javax.obex.ClientSession;

        r1 := @parameter0: javax.obex.HeaderSet;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = r0.<javax.obex.ClientSession: boolean mObexConnected>;

        if $z2 != 0 goto label1;

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Not connected to the server");

        throw $r20;

     label1:
        specialinvoke r0.<javax.obex.ClientSession: void setRequestActive()>();

        virtualinvoke r0.<javax.obex.ClientSession: void ensureOpen()>();

        if r1 != null goto label2;

        $r18 = new javax.obex.HeaderSet;

        specialinvoke $r18.<javax.obex.HeaderSet: void <init>()>();

        r2 = $r18;

        goto label3;

     label2:
        r2 = r1;

        $r5 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        if $r5 == null goto label3;

        $r17 = newarray (byte)[16];

        r0.<javax.obex.ClientSession: byte[] mChallengeDigest> = $r17;

        $r19 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        $r16 = r0.<javax.obex.ClientSession: byte[] mChallengeDigest>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r19, 0, $r16, 0, 16);

     label3:
        $r6 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        if $r6 == null goto label4;

        $r12 = newarray (byte)[16];

        r0.<javax.obex.ClientSession: byte[] mChallengeDigest> = $r12;

        $r14 = r2.<javax.obex.HeaderSet: byte[] nonce>;

        $r15 = r0.<javax.obex.ClientSession: byte[] mChallengeDigest>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r14, 0, $r15, 0, 16);

     label4:
        $r7 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        if $r7 == null goto label5;

        $r11 = newarray (byte)[4];

        r2.<javax.obex.HeaderSet: byte[] mConnectionID> = $r11;

        $r13 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        $r10 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r13, 0, $r10, 0, 4);

     label5:
        r21 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>(r2, 0);

        $i1 = lengthof r21;

        i5 = 2 + $i1;

        $i3 = r0.<javax.obex.ClientSession: int maxPacketSize>;

        if i5 <= $i3 goto label6;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Packet size exceeds max packet size");

        throw $r9;

     label6:
        i0 = 0;

        if z0 == 0 goto label7;

        i0 = 1;

     label7:
        if z1 != 0 goto label8;

        i0 = i0 | 2;

     label8:
        r3 = newarray (byte)[i5];

        $b2 = (byte) i0;

        r3[0] = $b2;

        r3[1] = 0;

        if r2 == null goto label9;

        $i4 = lengthof r21;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r21, 0, r3, 2, $i4);

     label9:
        $r8 = new javax.obex.HeaderSet;

        specialinvoke $r8.<javax.obex.HeaderSet: void <init>()>();

        r4 = $r8;

        virtualinvoke r0.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(133, r3, r4, null);

        virtualinvoke r0.<javax.obex.ClientSession: void setRequestInactive()>();

        return r4;
    }

    public synchronized void ensureOpen() throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ClientSession;

        $z0 = r0.<javax.obex.ClientSession: boolean mOpen>;

        if $z0 != 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Connection closed");

        throw $r1;

     label1:
        return;
    }

    synchronized void setRequestInactive()
    {
        javax.obex.ClientSession r0;

        r0 := @this: javax.obex.ClientSession;

        r0.<javax.obex.ClientSession: boolean mRequestActive> = 0;

        return;
    }

    private synchronized void setRequestActive() throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ClientSession;

        $z0 = r0.<javax.obex.ClientSession: boolean mRequestActive>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("OBEX request is already being performed");

        throw $r1;

     label1:
        r0.<javax.obex.ClientSession: boolean mRequestActive> = 1;

        return;
    }

    public boolean sendRequest(int, byte[], javax.obex.HeaderSet, javax.obex.PrivateInputStream) throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43;
        byte[] r1, $r6, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, r34, r35, r36;
        javax.obex.HeaderSet r2;
        javax.obex.PrivateInputStream r3;
        java.io.ByteArrayOutputStream r4, $r5;
        byte $b3, $b8, $b9, $b23, $b26;
        java.io.OutputStream $r7, $r9;
        java.io.InputStream $r8, $r10, $r11, $r12, $r24, $r26, $r27, $r28, $r29, $r30, $r33;
        boolean $z0, $z1, $z2;
        java.io.IOException $r23, $r31, $r32;

        r0 := @this: javax.obex.ClientSession;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: javax.obex.HeaderSet;

        r3 := @parameter3: javax.obex.PrivateInputStream;

        if r1 == null goto label01;

        $i38 = lengthof r1;

        $i39 = $i38 + 3;

        if $i39 <= 65534 goto label01;

        $r32 = new java.io.IOException;

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>("header too large ");

        throw $r32;

     label01:
        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r4 = $r5;

        $b3 = (byte) i0;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>($b3);

        if r1 != null goto label02;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>(0);

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>(3);

        goto label03;

     label02:
        $i4 = lengthof r1;

        $i5 = $i4 + 3;

        $i6 = $i5 >> 8;

        $b8 = (byte) $i6;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>($b8);

        $i7 = lengthof r1;

        $i10 = $i7 + 3;

        $b9 = (byte) $i10;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>($b9);

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

     label03:
        $r7 = r0.<javax.obex.ClientSession: java.io.OutputStream mOutput>;

        $r6 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r6);

        $r9 = r0.<javax.obex.ClientSession: java.io.OutputStream mOutput>;

        virtualinvoke $r9.<java.io.OutputStream: void flush()>();

        $r8 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i11 = virtualinvoke $r8.<java.io.InputStream: int read()>();

        r2.<javax.obex.HeaderSet: int responseCode> = $i11;

        $r10 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i12 = virtualinvoke $r10.<java.io.InputStream: int read()>();

        $i14 = $i12 << 8;

        $r11 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i13 = virtualinvoke $r11.<java.io.InputStream: int read()>();

        i2 = $i14 | $i13;

        if i2 <= 65534 goto label04;

        $r31 = new java.io.IOException;

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>("Packet received exceeds packet size limit");

        throw $r31;

     label04:
        if i2 <= 3 goto label16;

        if i0 != 128 goto label09;

        $r28 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        virtualinvoke $r28.<java.io.InputStream: int read()>();

        $r29 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        virtualinvoke $r29.<java.io.InputStream: int read()>();

        $r26 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i30 = virtualinvoke $r26.<java.io.InputStream: int read()>();

        $i34 = $i30 << 8;

        $r27 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i35 = virtualinvoke $r27.<java.io.InputStream: int read()>();

        $i36 = $i34 + $i35;

        r0.<javax.obex.ClientSession: int maxPacketSize> = $i36;

        $i37 = r0.<javax.obex.ClientSession: int maxPacketSize>;

        if $i37 <= 64512 goto label05;

        r0.<javax.obex.ClientSession: int maxPacketSize> = 64512;

     label05:
        if i2 <= 7 goto label07;

        $i32 = i2 - 7;

        r34 = newarray (byte)[$i32];

        $r30 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        i1 = virtualinvoke $r30.<java.io.InputStream: int read(byte[])>(r34);

     label06:
        $i33 = i2 - 7;

        if i1 == $i33 goto label08;

        $r33 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i41 = lengthof r34;

        $i40 = $i41 - i1;

        $i42 = virtualinvoke $r33.<java.io.InputStream: int read(byte[],int,int)>(r34, i1, $i40);

        i1 = i1 + $i42;

        goto label06;

     label07:
        return 1;

     label08:
        goto label12;

     label09:
        $i15 = i2 - 3;

        r34 = newarray (byte)[$i15];

        $r12 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        i43 = virtualinvoke $r12.<java.io.InputStream: int read(byte[])>(r34);

     label10:
        $i16 = i2 - 3;

        if i43 == $i16 goto label11;

        $r24 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        $i29 = lengthof r34;

        $i28 = $i29 - i43;

        $i31 = virtualinvoke $r24.<java.io.InputStream: int read(byte[],int,int)>(r34, i43, $i28);

        i43 = i43 + $i31;

        goto label10;

     label11:
        if i0 != 255 goto label12;

        return 1;

     label12:
        r35 = staticinvoke <javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>(r2, r34);

        if r3 == null goto label13;

        if r35 == null goto label13;

        virtualinvoke r3.<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>(r35, 1);

     label13:
        $r13 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r13 == null goto label14;

        $r22 = newarray (byte)[4];

        r0.<javax.obex.ClientSession: byte[] mConnectionId> = $r22;

        $r25 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        $r21 = r0.<javax.obex.ClientSession: byte[] mConnectionId>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r25, 0, $r21, 0, 4);

     label14:
        $r15 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r15 == null goto label15;

        $r19 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $z2 = virtualinvoke r0.<javax.obex.ClientSession: boolean handleAuthResp(byte[])>($r19);

        if $z2 != 0 goto label15;

        virtualinvoke r0.<javax.obex.ClientSession: void setRequestInactive()>();

        $r23 = new java.io.IOException;

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>("Authentication Failed");

        throw $r23;

     label15:
        $i17 = r2.<javax.obex.HeaderSet: int responseCode>;

        if $i17 != 193 goto label16;

        $r14 = r2.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r14 == null goto label16;

        $z0 = virtualinvoke r0.<javax.obex.ClientSession: boolean handleAuthChall(javax.obex.HeaderSet)>(r2);

        if $z0 == 0 goto label16;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>(78);

        $r16 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i20 = lengthof $r16;

        $i18 = $i20 + 3;

        $i19 = $i18 >> 8;

        $b23 = (byte) $i19;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>($b23);

        $r17 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i21 = lengthof $r17;

        $i22 = $i21 + 3;

        $b26 = (byte) $i22;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(int)>($b26);

        $r18 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void write(byte[])>($r18);

        r2.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

        r2.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        $i25 = virtualinvoke r4.<java.io.ByteArrayOutputStream: int size()>();

        $i24 = $i25 - 3;

        r36 = newarray (byte)[$i24];

        $r20 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i27 = lengthof r36;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r20, 3, r36, 0, $i27);

        $z1 = virtualinvoke r0.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(i0, r36, r2, r3);

        return $z1;

     label16:
        return 1;
    }

    public void close() throws java.io.IOException
    {
        javax.obex.ClientSession r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: javax.obex.ClientSession;

        r0.<javax.obex.ClientSession: boolean mOpen> = 0;

        $r1 = r0.<javax.obex.ClientSession: java.io.InputStream mInput>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        $r2 = r0.<javax.obex.ClientSession: java.io.OutputStream mOutput>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }
}
