public final class com.android.commands.pm.Pm extends java.lang.Object
{
    private static final java.lang.String TAG;
    android.content.pm.IPackageManager mPm;
    android.content.pm.IPackageInstaller mInstaller;
    android.os.IUserManager mUm;
    private java.util.WeakHashMap mResourceCache;
    private java.lang.String[] mArgs;
    private int mNextArg;
    private java.lang.String mCurArgData;
    private static final java.lang.String PM_NOT_RUNNING_ERR;

    public void <init>()
    {
        com.android.commands.pm.Pm r0;
        java.util.WeakHashMap $r1;

        r0 := @this: com.android.commands.pm.Pm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.commands.pm.Pm: java.util.WeakHashMap mResourceCache> = $r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Exception r1, $r3;
        com.android.commands.pm.Pm $r2;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5, $r9;
        java.lang.String $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

     label1:
        $r2 = new com.android.commands.pm.Pm;

        specialinvoke $r2.<com.android.commands.pm.Pm: void <init>()>();

        virtualinvoke $r2.<com.android.commands.pm.Pm: void run(java.lang.String[])>(r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Pm", "Error", r1);

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $z0 = r1 instanceof android.os.RemoteException;

        if $z0 == 0 goto label4;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void run(java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        java.lang.String[] r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        java.lang.String r2, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r42, $r51, $r52, $r55;
        java.lang.Throwable r3, $r47;
        int $i0, $i1, $i2;
        android.os.IBinder $r4, $r6;
        android.os.IUserManager $r5;
        android.content.pm.IPackageManager $r7, $r8, $r9;
        android.content.pm.IPackageInstaller $r10;
        java.lang.StringBuilder $r37, $r44, $r45, $r46, $r50, $r53, $r54, $r56;
        java.io.PrintStream $r43, $r48, $r49;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.lang.String[];

        z0 = 0;

        $i0 = lengthof r1;

        if $i0 >= 1 goto label01;

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label01:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r5 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r4);

        r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm> = $r5;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r7 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r6);

        r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm> = $r7;

        $r8 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        if $r8 != null goto label02;

        $r48 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label02:
        $r9 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r10 = interfaceinvoke $r9.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller> = $r10;

        r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs> = r1;

        r2 = r1[0];

        r0.<com.android.commands.pm.Pm: int mNextArg> = 1;

        $r11 = "list";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label03;

        specialinvoke r0.<com.android.commands.pm.Pm: void runList()>();

        return;

     label03:
        $r12 = "path";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label04;

        specialinvoke r0.<com.android.commands.pm.Pm: void runPath()>();

        return;

     label04:
        $r13 = "dump";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label05;

        specialinvoke r0.<com.android.commands.pm.Pm: void runDump()>();

        return;

     label05:
        $r14 = "install";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label06;

        specialinvoke r0.<com.android.commands.pm.Pm: void runInstall()>();

        return;

     label06:
        $r15 = "install-create";

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label07;

        specialinvoke r0.<com.android.commands.pm.Pm: void runInstallCreate()>();

        return;

     label07:
        $r16 = "install-write";

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label08;

        specialinvoke r0.<com.android.commands.pm.Pm: void runInstallWrite()>();

        return;

     label08:
        $r17 = "install-commit";

        $z7 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label09;

        specialinvoke r0.<com.android.commands.pm.Pm: void runInstallCommit()>();

        return;

     label09:
        $r18 = "install-abandon";

        $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 != 0 goto label10;

        $r19 = "install-destroy";

        $z9 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label11;

     label10:
        specialinvoke r0.<com.android.commands.pm.Pm: void runInstallAbandon()>();

        return;

     label11:
        $r20 = "set-installer";

        $z11 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label12;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetInstaller()>();

        return;

     label12:
        $r22 = "uninstall";

        $z10 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label13;

        specialinvoke r0.<com.android.commands.pm.Pm: void runUninstall()>();

        return;

     label13:
        $r21 = "clear";

        $z13 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z13 == 0 goto label14;

        specialinvoke r0.<com.android.commands.pm.Pm: void runClear()>();

        return;

     label14:
        $r24 = "enable";

        $z12 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label15;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(1);

        return;

     label15:
        $r23 = "disable";

        $z15 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label16;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(2);

        return;

     label16:
        $r26 = "disable-user";

        $z14 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 == 0 goto label17;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(3);

        return;

     label17:
        $r25 = "disable-until-used";

        $z17 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 == 0 goto label18;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(4);

        return;

     label18:
        $r28 = "hide";

        $z16 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z16 == 0 goto label19;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetHiddenSetting(boolean)>(1);

        return;

     label19:
        $r27 = "unhide";

        $z19 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z19 == 0 goto label20;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetHiddenSetting(boolean)>(0);

        return;

     label20:
        $r30 = "grant";

        $z18 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z18 == 0 goto label21;

        specialinvoke r0.<com.android.commands.pm.Pm: void runGrantRevokePermission(boolean)>(1);

        return;

     label21:
        $r29 = "revoke";

        $z21 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z21 == 0 goto label22;

        specialinvoke r0.<com.android.commands.pm.Pm: void runGrantRevokePermission(boolean)>(0);

        return;

     label22:
        $r32 = "set-permission-enforced";

        $z20 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z20 == 0 goto label23;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetPermissionEnforced()>();

        return;

     label23:
        $r31 = "set-install-location";

        $z23 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z23 == 0 goto label24;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetInstallLocation()>();

        return;

     label24:
        $r34 = "get-install-location";

        $z22 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z22 == 0 goto label25;

        specialinvoke r0.<com.android.commands.pm.Pm: void runGetInstallLocation()>();

        return;

     label25:
        $r33 = "trim-caches";

        $z25 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z25 == 0 goto label26;

        specialinvoke r0.<com.android.commands.pm.Pm: void runTrimCaches()>();

        return;

     label26:
        $r36 = "create-user";

        $z24 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z24 == 0 goto label27;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runCreateUser()>();

        return;

     label27:
        $r35 = "remove-user";

        $z27 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z27 == 0 goto label28;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runRemoveUser()>();

        return;

     label28:
        $r38 = "get-max-users";

        $z28 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z28 == 0 goto label29;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runGetMaxUsers()>();

        return;

     label29:
        $r39 = "force-dex-opt";

        $z26 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z26 == 0 goto label30;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runForceDexOpt()>();

        return;

     label30:
        $i1 = lengthof r1;

        if $i1 != 1 goto label32;

        $r51 = r1[0];

        $z30 = virtualinvoke $r51.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-l");

        if $z30 == 0 goto label31;

        z0 = 1;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListPackages(boolean)>(0);

        goto label33;

     label31:
        $r52 = r1[0];

        $z31 = virtualinvoke $r52.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-lf");

        if $z31 == 0 goto label33;

        z0 = 1;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListPackages(boolean)>(1);

        goto label33;

     label32:
        $i2 = lengthof r1;

        if $i2 != 2 goto label33;

        $r41 = r1[0];

        $z29 = virtualinvoke $r41.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-p");

        if $z29 == 0 goto label33;

        z0 = 1;

        $r42 = r1[1];

        specialinvoke r0.<com.android.commands.pm.Pm: void displayPackageFilePath(java.lang.String)>($r42);

     label33:
        if z0 != 0 goto label39;

        if r2 == null goto label34;

        $r43 = <java.lang.System: java.io.PrintStream err>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r40 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label34:
        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        goto label39;

     label35:
        $r47 := @caughtexception;

        r3 = $r47;

     label36:
        if z0 != 0 goto label38;

        if r2 == null goto label37;

        $r49 = <java.lang.System: java.io.PrintStream err>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label37:
        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

     label38:
        throw r3;

     label39:
        return;

        catch java.lang.Throwable from label30 to label33 with label35;
        catch java.lang.Throwable from label35 to label36 with label35;
    }

    private void runList()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        java.io.PrintStream $r12, $r15;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label01;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: didn\'t specify type of data to list");

        return;

     label01:
        $r2 = "package";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label02;

        $r3 = "packages";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

     label02:
        specialinvoke r0.<com.android.commands.pm.Pm: void runListPackages(boolean)>(0);

        goto label10;

     label03:
        $r4 = "permission-groups";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label04;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListPermissionGroups()>();

        goto label10;

     label04:
        $r5 = "permissions";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label05;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListPermissions()>();

        goto label10;

     label05:
        $r6 = "features";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label06;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListFeatures()>();

        goto label10;

     label06:
        $r7 = "libraries";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label07;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListLibraries()>();

        goto label10;

     label07:
        $r8 = "instrumentation";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label08;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListInstrumentation()>();

        goto label10;

     label08:
        $r9 = "users";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label09;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runListUsers()>();

        goto label10;

     label09:
        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown list type \'");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label10:
        return;
    }

    private void runListPackages(boolean)
    {
        com.android.commands.pm.Pm r0;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        short s0;
        int i1, i2, i3, $i4, $i5;
        java.lang.String r1, $r4, $r8, $r12, $r16, $r18, $r23, $r26, $r27, $r35, $r38, $r40, r42;
        java.util.List r2;
        android.content.pm.PackageInfo r3;
        android.content.pm.IPackageManager $r5, $r15;
        android.content.pm.ApplicationInfo $r6, $r19, $r20, $r22;
        java.lang.Object $r7;
        java.io.PrintStream $r9, $r10, $r11, $r13, $r14, $r17, $r21, $r24, $r30, $r34, $r36;
        java.lang.StringBuilder $r25, $r28, $r29, $r31, $r37, $r39;
        java.lang.RuntimeException $r32, r41;
        android.os.RemoteException $r33, r43;

        r0 := @this: com.android.commands.pm.Pm;

        z0 := @parameter0: boolean;

        s0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        i1 = 0;

     label01:
        $r4 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r1 = $r4;

        if $r4 == null goto label13;

        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-l");

        if $z13 == 0 goto label02;

        goto label01;

     label02:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-lf");

        if $z14 == 0 goto label03;

        z0 = 1;

        goto label01;

     label03:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z11 == 0 goto label04;

        z0 = 1;

        goto label01;

     label04:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z12 == 0 goto label05;

        z1 = 1;

        goto label01;

     label05:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z18 == 0 goto label06;

        z2 = 1;

        goto label01;

     label06:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z17 == 0 goto label07;

        z3 = 1;

        goto label01;

     label07:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-3");

        if $z16 == 0 goto label08;

        z4 = 1;

        goto label01;

     label08:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z15 == 0 goto label09;

        z5 = 1;

        goto label01;

     label09:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z20 == 0 goto label10;

        $r26 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        goto label01;

     label10:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z19 == 0 goto label11;

        s0 = s0 | 8192;

        goto label01;

     label11:
        $r24 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label12:
        return;

     label13:
        goto label15;

     label14:
        $r32 := @caughtexception;

        r41 = $r32;

        $r30 = <java.lang.System: java.io.PrintStream err>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r38 = virtualinvoke r41.<java.lang.RuntimeException: java.lang.String toString()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r40);

        return;

     label15:
        r42 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

     label16:
        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.util.List getInstalledPackages(android.content.pm.IPackageManager,int,int)>($r5, s0, i1);

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

        i3 = 0;

     label17:
        if i3 >= i2 goto label28;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (android.content.pm.PackageInfo) $r7;

        if r42 == null goto label18;

        $r23 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z8 = virtualinvoke $r23.<java.lang.String: boolean contains(java.lang.CharSequence)>(r42);

        if $z8 != 0 goto label18;

        goto label27;

     label18:
        $r6 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r6.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i5 & 1;

        if $i4 == 0 goto label19;

        $z10 = 1;

        goto label20;

     label19:
        $z10 = 0;

     label20:
        z6 = $z10;

        if z1 == 0 goto label21;

        $r20 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z9 = $r20.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z9 != 0 goto label27;

     label21:
        if z2 == 0 goto label22;

        $r22 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z7 = $r22.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z7 == 0 goto label27;

     label22:
        if z3 == 0 goto label23;

        if z6 == 0 goto label27;

     label23:
        if z4 == 0 goto label24;

        if z6 != 0 goto label27;

     label24:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("package:");

        if z0 == 0 goto label25;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r19 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r16 = $r19.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke $r17.<java.io.PrintStream: void print(java.lang.String)>($r16);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void print(java.lang.String)>("=");

     label25:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r8 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r8);

        if z5 == 0 goto label26;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>("  installer=");

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r15 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r12 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r18 = interfaceinvoke $r15.<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r12);

        virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r18);

     label26:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println()>();

     label27:
        i3 = i3 + 1;

        goto label17;

     label28:
        goto label30;

     label29:
        $r33 := @caughtexception;

        r43 = $r33;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r35 = virtualinvoke r43.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label30:
        return;

        catch java.lang.RuntimeException from label01 to label12 with label14;
        catch android.os.RemoteException from label16 to label28 with label29;
    }

    private java.util.List getInstalledPackages(android.content.pm.IPackageManager, int, int) throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        android.content.pm.IPackageManager r1;
        int i0, i1;
        android.content.pm.ParceledListSlice r2;
        java.util.List $r3;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: android.content.pm.IPackageManager;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(i0, i1);

        $r3 = virtualinvoke r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        return $r3;
    }

    private void runListFeatures()
    {
        com.android.commands.pm.Pm r0;
        java.util.ArrayList r1, $r4;
        android.content.pm.FeatureInfo[] r2;
        int i0, i1, $i2, $i3, $i4, i5;
        android.content.pm.FeatureInfo r3, $r18;
        android.content.pm.IPackageManager $r5;
        com.android.commands.pm.Pm$1 $r6;
        java.lang.Object $r7;
        java.io.PrintStream $r8, $r11, $r17, $r19, $r21;
        java.lang.String $r9, $r14, $r15, $r16, $r22;
        java.lang.StringBuilder $r10, $r12, $r13;
        android.os.RemoteException $r20, r23;

        r0 := @this: com.android.commands.pm.Pm;

     label01:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r2 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>();

        i0 = 0;

     label02:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label03;

        $r18 = r2[i0];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18);

        i0 = i0 + 1;

        goto label02;

     label03:
        $r6 = new com.android.commands.pm.Pm$1;

        specialinvoke $r6.<com.android.commands.pm.Pm$1: void <init>(com.android.commands.pm.Pm)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r6);

        if r1 == null goto label04;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        goto label05;

     label04:
        $i4 = 0;

     label05:
        i5 = $i4;

        i1 = 0;

     label06:
        if i1 >= i5 goto label09;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.FeatureInfo) $r7;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>("feature:");

        $r9 = r3.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r9 == null goto label07;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r15 = r3.<android.content.pm.FeatureInfo: java.lang.String name>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r15);

        goto label08;

     label07:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reqGlEsVersion=0x");

        $i3 = r3.<android.content.pm.FeatureInfo: int reqGlEsVersion>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label08:
        i1 = i1 + 1;

        goto label06;

     label09:
        goto label11;

     label10:
        $r20 := @caughtexception;

        r23 = $r20;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r22 = virtualinvoke r23.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label11:
        return;

        catch android.os.RemoteException from label01 to label09 with label10;
    }

    private void runListLibraries()
    {
        com.android.commands.pm.Pm r0;
        java.util.ArrayList r1, $r4;
        java.lang.String[] r2;
        int i0, i1, $i2, $i3, i4;
        java.lang.String r3, $r10, $r12;
        android.content.pm.IPackageManager $r5;
        com.android.commands.pm.Pm$2 $r6;
        java.lang.Object $r7;
        java.io.PrintStream $r8, $r9, $r13, $r14;
        android.os.RemoteException $r11, r15;

        r0 := @this: com.android.commands.pm.Pm;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r2 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>();

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label3;

        $r10 = r2[i0];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = new com.android.commands.pm.Pm$2;

        specialinvoke $r6.<com.android.commands.pm.Pm$2: void <init>(com.android.commands.pm.Pm)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r6);

        if r1 == null goto label4;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        goto label5;

     label4:
        $i3 = 0;

     label5:
        i4 = $i3;

        i1 = 0;

     label6:
        if i1 >= i4 goto label7;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (java.lang.String) $r7;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>("library:");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(r3);

        i1 = i1 + 1;

        goto label6;

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        r15 = $r11;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = virtualinvoke r15.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label9:
        return;

        catch android.os.RemoteException from label1 to label7 with label8;
    }

    private void runListInstrumentation()
    {
        com.android.commands.pm.Pm r0;
        byte b0;
        boolean z0, $z1;
        java.lang.String r1, r2, $r5, $r11, $r12, $r13, $r15, $r20, $r24, $r29, $r35, $r36;
        int i1, i2, $i3;
        android.content.pm.InstrumentationInfo r3;
        android.content.ComponentName r4, $r10;
        android.content.pm.IPackageManager $r6;
        com.android.commands.pm.Pm$3 $r7;
        java.lang.Object $r8;
        java.io.PrintStream $r9, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r31, $r33, $r37;
        char $c4;
        java.lang.StringBuilder $r23, $r26, $r27, $r28, $r30, $r34;
        java.lang.RuntimeException $r25, r38;
        android.os.RemoteException $r32, r40;
        java.util.List r39;

        r0 := @this: com.android.commands.pm.Pm;

        b0 = 0;

        z0 = 0;

        r1 = null;

     label01:
        $r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        r2 = $r5;

        if $r5 == null goto label05;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z1 == 0 goto label02;

        z0 = 1;

        goto label01;

     label02:
        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c4 == 45 goto label03;

        r1 = r2;

        goto label01;

     label03:
        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label04:
        return;

     label05:
        goto label07;

     label06:
        $r25 := @caughtexception;

        r38 = $r25;

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r29 = virtualinvoke r38.<java.lang.RuntimeException: java.lang.String toString()>();

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r35);

        return;

     label07:
        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r39 = interfaceinvoke $r6.<android.content.pm.IPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>(r1, b0);

        $r7 = new com.android.commands.pm.Pm$3;

        specialinvoke $r7.<com.android.commands.pm.Pm$3: void <init>(com.android.commands.pm.Pm)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r39, $r7);

        if r39 == null goto label08;

        $i3 = interfaceinvoke r39.<java.util.List: int size()>();

        goto label09;

     label08:
        $i3 = 0;

     label09:
        i1 = $i3;

        i2 = 0;

     label10:
        if i2 >= i1 goto label12;

        $r8 = interfaceinvoke r39.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (android.content.pm.InstrumentationInfo) $r8;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("instrumentation:");

        if z0 == 0 goto label11;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r20 = r3.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir>;

        virtualinvoke $r19.<java.io.PrintStream: void print(java.lang.String)>($r20);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void print(java.lang.String)>("=");

     label11:
        $r10 = new android.content.ComponentName;

        $r11 = r3.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r12 = r3.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r12);

        r4 = $r10;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r13);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>(" (target=");

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r15 = r3.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        virtualinvoke $r18.<java.io.PrintStream: void print(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>(")");

        i2 = i2 + 1;

        goto label10;

     label12:
        goto label14;

     label13:
        $r32 := @caughtexception;

        r40 = $r32;

        $r33 = <java.lang.System: java.io.PrintStream err>;

        $r36 = virtualinvoke r40.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label14:
        return;

        catch java.lang.RuntimeException from label01 to label04 with label06;
        catch android.os.RemoteException from label07 to label12 with label13;
    }

    private void runListPermissionGroups()
    {
        com.android.commands.pm.Pm r0;
        java.util.List r1;
        int i0, i1;
        android.content.pm.PermissionGroupInfo r2;
        android.content.pm.IPackageManager $r3;
        java.lang.Object $r4;
        java.io.PrintStream $r5, $r7, $r9, $r11;
        java.lang.String $r6, $r10;
        android.os.RemoteException $r8, r12;

        r0 := @this: com.android.commands.pm.Pm;

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r1 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>(0);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.content.pm.PermissionGroupInfo) $r4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>("permission group:");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = r2.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r12 = $r8;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = virtualinvoke r12.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private java.lang.String loadText(android.content.pm.PackageItemInfo, int, java.lang.CharSequence)
    {
        com.android.commands.pm.Pm r0;
        android.content.pm.PackageItemInfo r1;
        int i0;
        java.lang.CharSequence r2;
        android.content.res.Resources r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: android.content.pm.PackageItemInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        if r2 == null goto label1;

        $r5 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        return $r5;

     label1:
        if i0 == 0 goto label2;

        r3 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r1);

        if r3 == null goto label2;

        $r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        return $r4;

     label2:
        return null;
    }

    private void runListPermissions()
    {
        com.android.commands.pm.Pm r0;
        boolean z0, z1, z2, z3, z4, $z7, $z9, $z10, $z11, $z12;
        java.lang.String r1, r2, $r5, $r17, $r24, $r25;
        java.util.ArrayList r3, $r6;
        java.util.List r4;
        int i0, $i1;
        java.io.PrintStream $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r22, $r23, $r27;
        android.content.pm.IPackageManager $r14;
        java.lang.Object $r16;
        android.content.pm.PermissionGroupInfo $r18;
        java.lang.StringBuilder $r19, $r20, $r21;
        android.os.RemoteException $r26, r28;

        r0 := @this: com.android.commands.pm.Pm;

     label01:
        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

     label02:
        $r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r1 = $r5;

        if $r5 == null goto label09;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z7 == 0 goto label03;

        z0 = 1;

        goto label02;

     label03:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-g");

        if $z11 == 0 goto label04;

        z1 = 1;

        goto label02;

     label04:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z12 == 0 goto label05;

        z1 = 1;

        z0 = 1;

        z3 = 1;

        goto label02;

     label05:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z9 == 0 goto label06;

        z2 = 1;

        goto label02;

     label06:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z10 == 0 goto label07;

        z4 = 1;

        goto label02;

     label07:
        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label08:
        return;

     label09:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        if z1 == 0 goto label12;

        $r14 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r4 = interfaceinvoke $r14.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>(0);

        i0 = 0;

     label10:
        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if i0 >= $i1 goto label11;

        $r16 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r18 = (android.content.pm.PermissionGroupInfo) $r16;

        $r17 = $r18.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        i0 = i0 + 1;

        goto label10;

     label11:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label13;

     label12:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label13:
        if z4 == 0 goto label14;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Dangerous Permissions:");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r3, z1, z0, z3, 1, 1);

        if z2 == 0 goto label16;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Normal Permissions:");

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r3, z1, z0, z3, 0, 0);

        goto label16;

     label14:
        if z2 == 0 goto label15;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Dangerous and Normal Permissions:");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r3, z1, z0, z3, 0, 1);

        goto label16;

     label15:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("All Permissions:");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r3, z1, z0, z3, -10000, 10000);

     label16:
        goto label18;

     label17:
        $r26 := @caughtexception;

        r28 = $r26;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r24 = virtualinvoke r28.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label18:
        return;

        catch android.os.RemoteException from label01 to label08 with label17;
        catch android.os.RemoteException from label09 to label16 with label17;
    }

    private void doListPermissions(java.util.ArrayList, boolean, boolean, boolean, int, int) throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        java.util.ArrayList r1;
        boolean z0, z1, z2, z3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        java.lang.String r2, r3, $r10, $r19, $r21, $r24, $r29, $r34, $r36, $r41, $r43, $r48, $r49, $r52, $r55, $r56, $r58, $r62, $r66, $r68, $r74, $r80, $r82, $r85, $r87, $r91, $r92, $r94, $r99, $r102, $r104, $r108;
        android.content.pm.PermissionGroupInfo r4;
        android.content.res.Resources r5, r7, r109, r111;
        android.content.pm.PermissionInfo r6;
        android.content.pm.IPackageManager $r8, $r61;
        java.lang.Object $r9, $r11, $r12;
        java.io.PrintStream $r13, $r16, $r25, $r31, $r40, $r46, $r50, $r54, $r59, $r65, $r70, $r73, $r76, $r83, $r97, $r103, $r107;
        java.lang.StringBuilder $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r26, $r27, $r28, $r30, $r32, $r33, $r35, $r38, $r39, $r42, $r44, $r45, $r47, $r53, $r57, $r63, $r64, $r67, $r69, $r71, $r72, $r75, $r77, $r78, $r79, $r81, $r84, $r86, $r88, $r90, $r93, $r98, $r100, $r101, $r105, $r106;
        java.lang.CharSequence $r37, $r51, $r60, $r89, $r95, $r96;
        java.util.List r110;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 = 0;

     label01:
        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i5 goto label28;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (java.lang.String) $r9;

        r3 = "";

        if z0 == 0 goto label13;

        if i2 <= 0 goto label02;

        $r107 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r107.<java.io.PrintStream: void println(java.lang.String)>("");

     label02:
        if r2 == null goto label09;

        $r61 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r4 = interfaceinvoke $r61.<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>(r2, 0);

        if z2 == 0 goto label05;

        r5 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r4);

        if r5 == null goto label03;

        $r97 = <java.lang.System: java.io.PrintStream out>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $i13 = r4.<android.content.pm.PermissionGroupInfo: int labelRes>;

        $r96 = r4.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r104 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r4, $i13, $r96);

        $r106 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r108 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r97.<java.io.PrintStream: void print(java.lang.String)>($r108);

        goto label04;

     label03:
        $r103 = <java.lang.System: java.io.PrintStream out>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r102 = r4.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r101 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r103.<java.io.PrintStream: void print(java.lang.String)>($r99);

     label04:
        goto label08;

     label05:
        $r73 = <java.lang.System: java.io.PrintStream out>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        if z1 == 0 goto label06;

        $r91 = "+ ";

        goto label07;

     label06:
        $r91 = "";

     label07:
        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("group:");

        $r74 = r4.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r69 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r68);

        if z1 == 0 goto label08;

        $r70 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  package:");

        $r82 = r4.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        $r79 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>($r80);

        r109 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r4);

        if r109 == null goto label08;

        $r76 = <java.lang.System: java.io.PrintStream out>;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  label:");

        $i11 = r4.<android.content.pm.PermissionGroupInfo: int labelRes>;

        $r89 = r4.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r87 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r4, $i11, $r89);

        $r88 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r85 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r85);

        $r83 = <java.lang.System: java.io.PrintStream out>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  description:");

        $i12 = r4.<android.content.pm.PermissionGroupInfo: int descriptionRes>;

        $r95 = r4.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedDescription>;

        $r94 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r4, $i12, $r95);

        $r93 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>($r92);

     label08:
        goto label12;

     label09:
        $r65 = <java.lang.System: java.io.PrintStream out>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        if z1 == 0 goto label10;

        if z2 != 0 goto label10;

        $r62 = "+ ";

        goto label11;

     label10:
        $r62 = "";

     label11:
        $r64 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r67 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ungrouped:");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r66);

     label12:
        r3 = "  ";

     label13:
        $r8 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (java.lang.String) $r11;

        r110 = interfaceinvoke $r8.<android.content.pm.IPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>($r10, 0);

        i14 = interfaceinvoke r110.<java.util.List: int size()>();

        z3 = 1;

        i3 = 0;

     label14:
        if i3 >= i14 goto label26;

        $r12 = interfaceinvoke r110.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = (android.content.pm.PermissionInfo) $r12;

        if z0 == 0 goto label15;

        if r2 != null goto label15;

        $r56 = r6.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r56 == null goto label15;

        goto label25;

     label15:
        $i6 = r6.<android.content.pm.PermissionInfo: int protectionLevel>;

        i4 = $i6 & 15;

        if i4 < i0 goto label25;

        if i4 <= i1 goto label16;

        goto label25;

     label16:
        if z2 == 0 goto label21;

        if z3 == 0 goto label17;

        z3 = 0;

        goto label18;

     label17:
        $r50 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r50.<java.io.PrintStream: void print(java.lang.String)>(", ");

     label18:
        r7 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r6);

        if r7 == null goto label19;

        $r54 = <java.lang.System: java.io.PrintStream out>;

        $i10 = r6.<android.content.pm.PermissionInfo: int labelRes>;

        $r60 = r6.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r55 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r6, $i10, $r60);

        virtualinvoke $r54.<java.io.PrintStream: void print(java.lang.String)>($r55);

        goto label20;

     label19:
        $r59 = <java.lang.System: java.io.PrintStream out>;

        $r58 = r6.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r59.<java.io.PrintStream: void print(java.lang.String)>($r58);

     label20:
        goto label25;

     label21:
        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        if z1 == 0 goto label22;

        $r49 = "+ ";

        goto label23;

     label22:
        $r49 = "";

     label23:
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permission:");

        $r21 = r6.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        if z1 == 0 goto label25;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  package:");

        $r24 = r6.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);

        r111 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r6);

        if r111 == null goto label24;

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  label:");

        $i8 = r6.<android.content.pm.PermissionInfo: int labelRes>;

        $r37 = r6.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r43 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r6, $i8, $r37);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r46 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  description:");

        $i9 = r6.<android.content.pm.PermissionInfo: int descriptionRes>;

        $r51 = r6.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedDescription>;

        $r52 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r6, $i9, $r51);

        $r53 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r48);

     label24:
        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  protectionLevel:");

        $i7 = r6.<android.content.pm.PermissionInfo: int protectionLevel>;

        $r36 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i7);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label25:
        i3 = i3 + 1;

        goto label14;

     label26:
        if z2 == 0 goto label27;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("");

     label27:
        i2 = i2 + 1;

        goto label01;

     label28:
        return;
    }

    private void runPath()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        java.io.PrintStream $r2;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        return;

     label1:
        specialinvoke r0.<com.android.commands.pm.Pm: void displayPackageFilePath(java.lang.String)>(r1);

        return;
    }

    private void runDump()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        java.io.FileDescriptor $r2;
        java.io.PrintStream $r3;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        return;

     label1:
        $r2 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        staticinvoke <android.app.ActivityManager: void dumpPackageStateStatic(java.io.FileDescriptor,java.lang.String)>($r2, r1);

        return;
    }

    private java.lang.String installFailureToString(com.android.commands.pm.Pm$LocalPackageInstallObserver)
    {
        com.android.commands.pm.Pm r0;
        com.android.commands.pm.Pm$LocalPackageInstallObserver r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.reflect.Field[] r2, r3;
        java.lang.reflect.Field r4;
        java.lang.String r5, $r8, $r12, $r14, $r15, $r19, $r21, $r22;
        java.lang.StringBuilder r6, $r11, $r16, $r17, $r18;
        java.lang.Class $r7, $r9, $r10;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r24;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: com.android.commands.pm.Pm$LocalPackageInstallObserver;

        i0 = r1.<com.android.commands.pm.Pm$LocalPackageInstallObserver: int result>;

        $r7 = class "android/content/pm/PackageManager";

        r2 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label9;

        r4 = r3[i2];

        $r9 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r9 != $r10 goto label8;

        i3 = virtualinvoke r4.<java.lang.reflect.Field: int getModifiers()>();

        $i4 = i3 & 16;

        if $i4 == 0 goto label8;

        $i6 = i3 & 1;

        if $i6 == 0 goto label8;

        $i5 = i3 & 8;

        if $i5 == 0 goto label8;

        r5 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("INSTALL_FAILED_");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("INSTALL_PARSE_FAILED_");

        if $z1 == 0 goto label8;

     label2:
        $i7 = virtualinvoke r4.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        if i0 != $i7 goto label6;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>(64);

        r6 = $r11;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = r1.<com.android.commands.pm.Pm$LocalPackageInstallObserver: java.lang.String extraPermission>;

        if $r12 == null goto label3;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" perm=");

        $r21 = r1.<com.android.commands.pm.Pm$LocalPackageInstallObserver: java.lang.String extraPermission>;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label3:
        $r15 = r1.<com.android.commands.pm.Pm$LocalPackageInstallObserver: java.lang.String extraPackage>;

        if $r15 == null goto label4;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r19 = r1.<com.android.commands.pm.Pm$LocalPackageInstallObserver: java.lang.String extraPackage>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label4:
        $r14 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return $r14;

     label6:
        goto label8;

     label7:
        $r24 := @caughtexception;

     label8:
        i2 = i2 + 1;

        goto label1;

     label9:
        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r8;

        catch java.lang.IllegalAccessException from label2 to label5 with label7;
    }

    private void runSetInstallLocation()
    {
        com.android.commands.pm.Pm r0;
        int i0;
        java.lang.String r1, $r10;
        android.content.pm.IPackageManager $r3;
        boolean $z0;
        java.io.PrintStream $r4, $r5, $r7, $r9, $r11;
        java.lang.NumberFormatException $r6;
        android.os.RemoteException $r8, r12;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: no install location specified.");

        return;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Error: install location has to be a number.");

        return;

     label4:
        $r3 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean setInstallLocation(int)>(i0);

        if $z0 != 0 goto label5;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Error: install location has to be a number.");

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        r12 = $r8;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = virtualinvoke r12.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label7:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void runGetInstallLocation()
    {
        com.android.commands.pm.Pm r0;
        int i0;
        java.lang.String r1, $r9, $r12;
        android.content.pm.IPackageManager $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;
        java.io.PrintStream $r4, $r11, $r13;
        android.os.RemoteException $r10, r14;

        r0 := @this: com.android.commands.pm.Pm;

     label1:
        $r2 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int getInstallLocation()>();

        r1 = "invalid";

        if i0 != 0 goto label2;

        r1 = "auto";

        goto label4;

     label2:
        if i0 != 1 goto label3;

        r1 = "internal";

        goto label4;

     label3:
        if i0 != 2 goto label4;

        r1 = "external";

     label4:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        r14 = $r10;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r12 = virtualinvoke r14.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label7:
        return;

        catch android.os.RemoteException from label1 to label5 with label6;
    }

    private void runInstall()
    {
        com.android.commands.pm.Pm r0;
        short s0;
        int i1, $i2;
        java.lang.String r1, r2, r3, r4, r5, r9, r10, $r16, $r21, $r31, $r32, $r37, $r43, $r44, $r48, $r57;
        android.net.Uri r6, r7, r8;
        com.android.commands.pm.Pm$LocalPackageInstallObserver r11, r13, $r23;
        android.content.pm.VerificationParams r12, $r22;
        java.lang.Throwable r14, $r50;
        java.io.PrintStream $r17, $r27, $r35, $r36, $r41, $r45, $r49, $r51, $r52, $r54, $r56;
        java.lang.StringBuilder $r18, $r19, $r20, $r28, $r29, $r30, $r33, $r34, $r39, $r40, $r42, $r46, $r47;
        android.content.pm.IPackageInstallObserver2 $r24;
        android.content.pm.IPackageManager $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.io.File $r38;
        java.lang.InterruptedException $r53;
        android.os.RemoteException $r55, r58;

        r0 := @this: com.android.commands.pm.Pm;

        s0 = 0;

        i1 = -1;

        r1 = null;

        r3 = null;

        r4 = null;

        r5 = null;

     label01:
        $r16 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r2 = $r16;

        if $r16 == null goto label13;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-l");

        if $z4 == 0 goto label02;

        s0 = s0 | 1;

        goto label01;

     label02:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z3 == 0 goto label03;

        s0 = s0 | 2;

        goto label01;

     label03:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z2 == 0 goto label04;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r1 != null goto label01;

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("Error: no value specified for -i");

        return;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-t");

        if $z1 == 0 goto label05;

        s0 = s0 | 4;

        goto label01;

     label05:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z8 == 0 goto label06;

        s0 = s0 | 8;

        goto label01;

     label06:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z7 == 0 goto label07;

        s0 = s0 | 16;

        goto label01;

     label07:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z6 == 0 goto label08;

        s0 = s0 | 128;

        goto label01;

     label08:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--originating-uri");

        if $z5 == 0 goto label09;

        r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r3 != null goto label01;

        $r52 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --originating-uri");

        return;

     label09:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--referrer");

        if $z11 == 0 goto label10;

        r4 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r4 != null goto label01;

        $r51 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --referrer");

        return;

     label10:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--abi");

        if $z10 == 0 goto label11;

        $r44 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        r5 = staticinvoke <com.android.commands.pm.Pm: java.lang.String checkAbiArgument(java.lang.String)>($r44);

        goto label01;

     label11:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z9 == 0 goto label12;

        $r43 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r43);

        goto label01;

     label12:
        $r45 = <java.lang.System: java.io.PrintStream err>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r48);

        return;

     label13:
        if i1 != -1 goto label14;

        i1 = 0;

        s0 = s0 | 64;

     label14:
        if r3 == null goto label15;

        r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r3);

        goto label16;

     label15:
        r7 = null;

     label16:
        if r4 == null goto label17;

        r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r4);

        goto label18;

     label17:
        r8 = null;

     label18:
        r9 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tpkg: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

        if r9 != null goto label19;

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        return;

     label19:
        r10 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r10 == null goto label20;

        $r35 = <java.lang.System: java.io.PrintStream err>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tver: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r37);

        $r38 = new java.io.File;

        specialinvoke $r38.<java.io.File: void <init>(java.lang.String)>(r10);

        r6 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r38);

        goto label21;

     label20:
        r6 = null;

     label21:
        $r23 = new com.android.commands.pm.Pm$LocalPackageInstallObserver;

        specialinvoke $r23.<com.android.commands.pm.Pm$LocalPackageInstallObserver: void <init>(com.android.commands.pm.Pm)>(r0);

        r11 = $r23;

     label22:
        $r22 = new android.content.pm.VerificationParams;

        specialinvoke $r22.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(r6, r7, r8, -1, null);

        r12 = $r22;

        $r25 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r24 = virtualinvoke r11.<com.android.commands.pm.Pm$LocalPackageInstallObserver: android.content.pm.IPackageInstallObserver2 getBinder()>();

        interfaceinvoke $r25.<android.content.pm.IPackageManager: void installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String,int)>(r9, $r24, s0, r1, r12, r5, i1);

        r13 = r11;

        entermonitor r11;

     label23:
        $z0 = r11.<com.android.commands.pm.Pm$LocalPackageInstallObserver: boolean finished>;

        if $z0 != 0 goto label27;

     label24:
        virtualinvoke r11.<java.lang.Object: void wait()>();

     label25:
        goto label23;

     label26:
        $r53 := @caughtexception;

        goto label23;

     label27:
        $i2 = r11.<com.android.commands.pm.Pm$LocalPackageInstallObserver: int result>;

        if $i2 != 1 goto label28;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("Success");

        goto label29;

     label28:
        $r27 = <java.lang.System: java.io.PrintStream err>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r32 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String installFailureToString(com.android.commands.pm.Pm$LocalPackageInstallObserver)>(r11);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label29:
        exitmonitor r13;

     label30:
        goto label33;

     label31:
        $r50 := @caughtexception;

        r14 = $r50;

        exitmonitor r13;

     label32:
        throw r14;

     label33:
        goto label35;

     label34:
        $r55 := @caughtexception;

        r58 = $r55;

        $r54 = <java.lang.System: java.io.PrintStream err>;

        $r57 = virtualinvoke r58.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);

        $r56 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label35:
        return;

        catch java.lang.InterruptedException from label24 to label25 with label26;
        catch java.lang.Throwable from label23 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch android.os.RemoteException from label22 to label33 with label34;
    }

    private void runInstallCreate() throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r1, r3, $r5, $r12, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r27;
        android.content.pm.PackageInstaller$SessionParams r2, $r4;
        android.content.pm.IPackageInstaller $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r14, $r16, $r17;
        java.io.PrintStream $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.IllegalArgumentException $r13, $r26, $r29;
        long $l4;
        android.net.Uri $r24, $r28;

        r0 := @this: com.android.commands.pm.Pm;

        i0 = -1;

        r1 = null;

        $r4 = new android.content.pm.PackageInstaller$SessionParams;

        specialinvoke $r4.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>(1);

        r2 = $r4;

     label01:
        $r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r3 = $r5;

        if $r5 == null goto label15;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-l");

        if $z1 == 0 goto label02;

        $i15 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i14 = $i15 | 1;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i14;

        goto label01;

     label02:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z0 == 0 goto label03;

        $i12 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i16 = $i12 | 2;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i16;

        goto label01;

     label03:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z3 == 0 goto label04;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label01;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing installer package");

        throw $r29;

     label04:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-t");

        if $z2 == 0 goto label05;

        $i8 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i13 = $i8 | 4;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i13;

        goto label01;

     label05:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z5 == 0 goto label06;

        $i10 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i9 = $i10 | 8;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i9;

        goto label01;

     label06:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z4 == 0 goto label07;

        $i5 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i11 = $i5 | 16;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i11;

        goto label01;

     label07:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z7 == 0 goto label08;

        $i7 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i6 = $i7 | 128;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i6;

        goto label01;

     label08:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("--originating-uri");

        if $z6 == 0 goto label09;

        $r25 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        $r28 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r25);

        r2.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = $r28;

        goto label01;

     label09:
        $z9 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("--referrer");

        if $z9 == 0 goto label10;

        $r27 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        $r24 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r27);

        r2.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = $r24;

        goto label01;

     label10:
        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z8 == 0 goto label11;

        r2.<android.content.pm.PackageInstaller$SessionParams: int mode> = 2;

        $r21 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = $r21;

        $r22 = r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        if $r22 != null goto label01;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing inherit package name");

        throw $r26;

     label11:
        $z11 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-S");

        if $z11 == 0 goto label12;

        $r23 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r23);

        virtualinvoke r2.<android.content.pm.PackageInstaller$SessionParams: void setSize(long)>($l4);

        goto label01;

     label12:
        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("--abi");

        if $z10 == 0 goto label13;

        $r18 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        $r19 = staticinvoke <com.android.commands.pm.Pm: java.lang.String checkAbiArgument(java.lang.String)>($r18);

        r2.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride> = $r19;

        goto label01;

     label13:
        $z12 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z12 == 0 goto label14;

        $r20 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        goto label01;

     label14:
        $r13 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option ");

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r13;

     label15:
        if i0 != -1 goto label16;

        i0 = 0;

        $i3 = r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i2 = $i3 | 64;

        r2.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i2;

     label16:
        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller>;

        i1 = interfaceinvoke $r6.<android.content.pm.IPackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>(r2, r1, i0);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: created install session [");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        return;
    }

    private void runInstallWrite() throws java.io.IOException, android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        long l0, $l5, $l7;
        java.lang.String r1, r2, r3, $r10, $r11, $r12, $r24, $r32, $r33;
        int i1, i2, i3, $i4;
        java.io.File r4, $r26;
        android.content.pm.PackageInstaller$Session r5, $r14;
        java.io.InputStream r6, $r17;
        java.io.OutputStream r7;
        byte[] r8;
        float f0, $f1, $f2;
        java.lang.Throwable r9, $r31;
        android.content.pm.IPackageInstaller $r13, $r16;
        boolean $z0, $z1, $z2;
        android.content.pm.IPackageInstallerSession $r15;
        com.android.internal.util.SizedInputStream $r18;
        java.lang.StringBuilder $r19, $r20, $r21, $r23, $r27, $r28, $r29;
        java.io.PrintStream $r22;
        byte $b6;
        java.io.FileInputStream $r25;
        java.lang.IllegalArgumentException $r30;
        android.content.pm.PackageInstaller$SessionInfo r34;

        r0 := @this: com.android.commands.pm.Pm;

        l0 = -1L;

     label01:
        $r11 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r1 = $r11;

        if $r11 == null goto label03;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-S");

        if $z1 == 0 goto label02;

        $r32 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r32);

        goto label01;

     label02:
        $r30 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33);

        throw $r30;

     label03:
        $r10 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        $r12 = "-";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label04;

        r3 = null;

        goto label05;

     label04:
        if r3 == null goto label05;

        $r26 = new java.io.File;

        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = $r26;

        $z2 = virtualinvoke r4.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label05;

        l0 = virtualinvoke r4.<java.io.File: long length()>();

     label05:
        $r13 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller>;

        r34 = interfaceinvoke $r13.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i1);

        r5 = null;

        r6 = null;

        r7 = null;

     label06:
        $r14 = new android.content.pm.PackageInstaller$Session;

        $r16 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller>;

        $r15 = interfaceinvoke $r16.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i1);

        specialinvoke $r14.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r15);

        r5 = $r14;

        if r3 == null goto label07;

        $r25 = new java.io.FileInputStream;

        specialinvoke $r25.<java.io.FileInputStream: void <init>(java.lang.String)>(r3);

        r6 = $r25;

        goto label08;

     label07:
        $r18 = new com.android.internal.util.SizedInputStream;

        $r17 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r18.<com.android.internal.util.SizedInputStream: void <init>(java.io.InputStream,long)>($r17, l0);

        r6 = $r18;

     label08:
        r7 = virtualinvoke r5.<android.content.pm.PackageInstaller$Session: java.io.OutputStream openWrite(java.lang.String,long,long)>(r2, 0L, l0);

        i2 = 0;

        r8 = newarray (byte)[65536];

     label09:
        $i4 = virtualinvoke r6.<java.io.InputStream: int read(byte[])>(r8);

        i3 = $i4;

        if $i4 == -1 goto label10;

        i2 = i2 + i3;

        virtualinvoke r7.<java.io.OutputStream: void write(byte[],int,int)>(r8, 0, i3);

        $l5 = r34.<android.content.pm.PackageInstaller$SessionInfo: long sizeBytes>;

        $b6 = $l5 cmp 0L;

        if $b6 <= 0 goto label09;

        $f1 = (float) i3;

        $l7 = r34.<android.content.pm.PackageInstaller$SessionInfo: long sizeBytes>;

        $f2 = (float) $l7;

        f0 = $f1 / $f2;

        virtualinvoke r5.<android.content.pm.PackageInstaller$Session: void addProgress(float)>(f0);

        goto label09;

     label10:
        virtualinvoke r5.<android.content.pm.PackageInstaller$Session: void fsync(java.io.OutputStream)>(r7);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: streamed ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        goto label14;

     label12:
        $r31 := @caughtexception;

        r9 = $r31;

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        throw r9;

     label14:
        return;

        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void runInstallCommit() throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        int i0, i1;
        android.content.pm.PackageInstaller$Session r1, $r6;
        com.android.commands.pm.Pm$LocalIntentReceiver r2, $r9;
        android.content.Intent r3;
        java.lang.Throwable r4, $r23;
        java.lang.String $r5, $r14, $r20, $r21;
        android.content.pm.IPackageInstaller $r7;
        android.content.pm.IPackageInstallerSession $r8;
        android.content.IntentSender $r10;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r19, $r22;
        android.os.Bundle $r12;
        java.io.PrintStream $r18, $r24;

        r0 := @this: com.android.commands.pm.Pm;

        $r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        r1 = null;

     label1:
        $r6 = new android.content.pm.PackageInstaller$Session;

        $r7 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller>;

        $r8 = interfaceinvoke $r7.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke $r6.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r8);

        r1 = $r6;

        $r9 = new com.android.commands.pm.Pm$LocalIntentReceiver;

        specialinvoke $r9.<com.android.commands.pm.Pm$LocalIntentReceiver: void <init>(com.android.commands.pm.Pm$1)>(null);

        r2 = $r9;

        $r10 = virtualinvoke r2.<com.android.commands.pm.Pm$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        virtualinvoke r1.<android.content.pm.PackageInstaller$Session: void commit(android.content.IntentSender)>($r10);

        r3 = virtualinvoke r2.<com.android.commands.pm.Pm$LocalIntentReceiver: android.content.Intent getResult()>();

        i1 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

        if i1 != 0 goto label2;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("Success");

        goto label4;

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure details: ");

        $r12 = virtualinvoke r3.<android.content.Intent: android.os.Bundle getExtras()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Pm", $r14);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r20 = virtualinvoke r3.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.content.pm.extra.STATUS_MESSAGE");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label7;

     label5:
        $r23 := @caughtexception;

        r4 = $r23;

     label6:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void runInstallAbandon() throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        int i0;
        android.content.pm.PackageInstaller$Session r1, $r4;
        java.lang.Throwable r2, $r8;
        java.lang.String $r3;
        android.content.pm.IPackageInstaller $r5;
        android.content.pm.IPackageInstallerSession $r6;
        java.io.PrintStream $r7;

        r0 := @this: com.android.commands.pm.Pm;

        $r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        r1 = null;

     label1:
        $r4 = new android.content.pm.PackageInstaller$Session;

        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller>;

        $r6 = interfaceinvoke $r5.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke $r4.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r6);

        r1 = $r4;

        virtualinvoke r1.<android.content.pm.PackageInstaller$Session: void abandon()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Success");

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void runSetInstaller() throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;
        android.content.pm.IPackageManager $r4;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("must provide both target and installer package names");

        throw $r3;

     label2:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Success");

        return;
    }

    public void runCreateUser()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, r2, r3, $r4, $r10, $r13, $r15, $r19, $r24, r26;
        int i0, $i2;
        byte b1;
        android.os.IUserManager $r5, $r12;
        java.io.PrintStream $r6, $r8, $r14, $r18, $r21, $r23, $r25;
        java.lang.StringBuilder $r7, $r9, $r11, $r16, $r17, $r20;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r22, r28;
        android.content.pm.UserInfo r27;

        r0 := @this: com.android.commands.pm.Pm;

        i0 = -1;

        b1 = 0;

     label01:
        $r4 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r2 = $r4;

        if $r4 == null goto label06;

        $r13 = "--profileOf";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label04;

        r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r3 == null goto label02;

        $z2 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r3);

        if $z2 != 0 goto label03;

     label02:
        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label03:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        goto label01;

     label04:
        $r15 = "--managed";

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label05;

        b1 = b1 | 32;

        goto label01;

     label05:
        $r18 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown option ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label06:
        r26 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r26 != null goto label07;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: no user name specified.");

        return;

     label07:
        r1 = r26;

     label08:
        if i0 >= 0 goto label09;

        $r12 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        r27 = interfaceinvoke $r12.<android.os.IUserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>(r1, b1);

        goto label10;

     label09:
        $r5 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        r27 = interfaceinvoke $r5.<android.os.IUserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>(r1, b1, i0);

     label10:
        if r27 == null goto label11;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: created user id ");

        $i2 = r27.<android.content.pm.UserInfo: int id>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label12;

     label11:
        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Error: couldn\'t create User.");

     label12:
        goto label14;

     label13:
        $r22 := @caughtexception;

        r28 = $r22;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r24 = virtualinvoke r28.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label14:
        return;

        catch android.os.RemoteException from label08 to label12 with label13;
    }

    public void runRemoveUser()
    {
        com.android.commands.pm.Pm r0;
        int i0;
        java.lang.String r1, $r8, $r16, $r21;
        android.os.IUserManager $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r6, $r7, $r13, $r14, $r15, $r17;
        java.io.PrintStream $r5, $r9, $r10, $r12, $r18, $r20;
        java.lang.NumberFormatException $r11;
        android.os.RemoteException $r19, r22;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: no user id specified.");

        return;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: user id \'");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not a number.");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

        return;

     label4:
        $r3 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        $z0 = interfaceinvoke $r3.<android.os.IUserManager: boolean removeUser(int)>(i0);

        if $z0 == 0 goto label5;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Success: removed user");

        goto label6;

     label5:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: couldn\'t remove user id ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label6:
        goto label8;

     label7:
        $r19 := @caughtexception;

        r22 = $r19;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        $r21 = virtualinvoke r22.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label8:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label6 with label7;
    }

    public void runListUsers()
    {
        com.android.commands.pm.Pm r0;
        android.app.IActivityManager r1;
        java.util.List r2;
        int i0, $i1, $i2;
        java.lang.String r3, $r12, $r16, $r17, $r20;
        android.os.IUserManager $r4;
        java.io.PrintStream $r5, $r9, $r19, $r21, $r22;
        java.lang.Object $r6, $r10;
        android.content.pm.UserInfo $r7, $r13;
        boolean $z0;
        java.lang.StringBuilder $r8, $r11, $r14, $r15;
        android.os.RemoteException $r18, r23;

        r0 := @this: com.android.commands.pm.Pm;

     label1:
        r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r4 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        r2 = interfaceinvoke $r4.<android.os.IUserManager: java.util.List getUsers(boolean)>(0);

        if r2 != null goto label2;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Error: couldn\'t get users");

        goto label6;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Users:");

        i0 = 0;

     label3:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label6;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (android.content.pm.UserInfo) $r6;

        $i2 = $r7.<android.content.pm.UserInfo: int id>;

        $z0 = interfaceinvoke r1.<android.app.IActivityManager: boolean isUserRunning(int,boolean)>($i2, 0);

        if $z0 == 0 goto label4;

        $r16 = " running";

        goto label5;

     label4:
        $r16 = "";

     label5:
        r3 = $r16;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r13 = (android.content.pm.UserInfo) $r10;

        $r12 = virtualinvoke $r13.<android.content.pm.UserInfo: java.lang.String toString()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r17);

        i0 = i0 + 1;

        goto label3;

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        r23 = $r18;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r20 = virtualinvoke r23.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label8:
        return;

        catch android.os.RemoteException from label1 to label6 with label7;
    }

    public void runGetMaxUsers()
    {
        com.android.commands.pm.Pm r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.commands.pm.Pm;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum supported users: ");

        $i0 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void runForceDexOpt()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void forceDexOpt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = virtualinvoke r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void runUninstall() throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        byte b0;
        int i1, i2, $i3, $i4;
        java.lang.String r1, r2, $r5, $r14, $r20, $r23, $r28, $r35, $r36, $r40, r44;
        android.content.pm.PackageInfo r3;
        android.os.RemoteException r4, $r42;
        android.content.pm.IPackageManager $r6;
        android.content.pm.ApplicationInfo $r7;
        com.android.commands.pm.Pm$LocalIntentReceiver $r8, r45;
        android.content.IntentSender $r9;
        android.content.pm.IPackageInstaller $r10;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r19, $r22, $r24, $r25, $r26, $r30, $r31, $r32, $r34, $r37, $r38;
        android.os.Bundle $r12;
        java.io.PrintStream $r18, $r21, $r27, $r29, $r33, $r39, $r41, $r43;
        boolean $z0, $z1, $z2, $z3, z4;
        android.content.Intent r46;

        r0 := @this: com.android.commands.pm.Pm;

        b0 = 0;

        i1 = -1;

     label01:
        $r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        r1 = $r5;

        if $r5 == null goto label06;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-k");

        if $z1 == 0 goto label02;

        b0 = b0 | 1;

        goto label01;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z2 == 0 goto label05;

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        $z3 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r2);

        if $z3 == 0 goto label03;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        goto label04;

     label03:
        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        $r39 = <java.lang.System: java.io.PrintStream err>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Invalid user: ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r36);

        return;

     label04:
        goto label01;

     label05:
        $r33 = <java.lang.System: java.io.PrintStream err>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r35);

        return;

     label06:
        r44 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r44 != null goto label07;

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label07:
        if i1 != -1 goto label08;

        i1 = 0;

        b0 = b0 | 2;

        goto label15;

     label08:
        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r3 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r44, 0, i1);

     label09:
        goto label11;

     label10:
        $r42 := @caughtexception;

        r4 = $r42;

        $r41 = <java.lang.System: java.io.PrintStream err>;

        $r40 = virtualinvoke r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r40);

        $r43 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label11:
        if r3 != null goto label12;

        $r27 = <java.lang.System: java.io.PrintStream err>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure - not installed for ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r28);

        return;

     label12:
        $r7 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r7.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label13;

        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        z4 = $z0;

        if z4 == 0 goto label15;

        b0 = b0 | 4;

     label15:
        $r8 = new com.android.commands.pm.Pm$LocalIntentReceiver;

        specialinvoke $r8.<com.android.commands.pm.Pm$LocalIntentReceiver: void <init>(com.android.commands.pm.Pm$1)>(null);

        r45 = $r8;

        $r10 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageInstaller mInstaller>;

        $r9 = virtualinvoke r45.<com.android.commands.pm.Pm$LocalIntentReceiver: android.content.IntentSender getIntentSender()>();

        interfaceinvoke $r10.<android.content.pm.IPackageInstaller: void uninstall(java.lang.String,int,android.content.IntentSender,int)>(r44, b0, $r9, i1);

        r46 = virtualinvoke r45.<com.android.commands.pm.Pm$LocalIntentReceiver: android.content.Intent getResult()>();

        i2 = virtualinvoke r46.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.STATUS", 1);

        if i2 != 0 goto label16;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("Success");

        goto label17;

     label16:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure details: ");

        $r12 = virtualinvoke r46.<android.content.Intent: android.os.Bundle getExtras()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Pm", $r14);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r20 = virtualinvoke r46.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.content.pm.extra.STATUS_MESSAGE");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label17:
        return;

        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private void runClear()
    {
        com.android.commands.pm.Pm r0;
        int i0;
        java.lang.String r1, r2, $r15, r20;
        com.android.commands.pm.Pm$ClearDataObserver r3, r4, $r7;
        java.lang.Throwable r6, $r19;
        android.app.IActivityManager $r8;
        boolean $z1, $z2, $z3, $z4;
        java.io.PrintStream $r10, $r11, $r12, $r13, $r16, $r18;
        android.os.RemoteException $r14, r21;
        java.lang.InterruptedException $r17;

        r0 := @this: com.android.commands.pm.Pm;

        i0 = 0;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        if r1 == null goto label03;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label03;

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r2 == null goto label01;

        $z4 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r2);

        if $z4 != 0 goto label02;

     label01:
        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label02:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label03:
        r20 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r20 != null goto label04;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label04:
        $r7 = new com.android.commands.pm.Pm$ClearDataObserver;

        specialinvoke $r7.<com.android.commands.pm.Pm$ClearDataObserver: void <init>()>();

        r3 = $r7;

     label05:
        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r8.<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r20, r3, i0);

        r4 = r3;

        entermonitor r3;

     label06:
        $z1 = r3.<com.android.commands.pm.Pm$ClearDataObserver: boolean finished>;

        if $z1 != 0 goto label10;

     label07:
        virtualinvoke r3.<java.lang.Object: void wait()>();

     label08:
        goto label06;

     label09:
        $r17 := @caughtexception;

        goto label06;

     label10:
        exitmonitor r4;

     label11:
        goto label14;

     label12:
        $r19 := @caughtexception;

        r6 = $r19;

        exitmonitor r4;

     label13:
        throw r6;

     label14:
        $z2 = r3.<com.android.commands.pm.Pm$ClearDataObserver: boolean result>;

        if $z2 == 0 goto label15;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Success");

        goto label16;

     label15:
        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Failed");

     label16:
        goto label18;

     label17:
        $r14 := @caughtexception;

        r21 = $r14;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r15 = virtualinvoke r21.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label18:
        return;

        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label05 to label16 with label17;
    }

    private static java.lang.String enabledSettingToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label1:
        return "default";

     label2:
        return "enabled";

     label3:
        return "disabled";

     label4:
        return "disabled-user";

     label5:
        return "disabled-until-used";

     label6:
        return "unknown";
    }

    private static boolean isNumber(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void runSetEnabledSetting(int)
    {
        com.android.commands.pm.Pm r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r1, r2, $r9, $r13, $r14, $r21, $r27, $r29, $r33, $r35, r40;
        android.content.ComponentName r3;
        android.os.RemoteException r4, $r34, $r37, r41;
        android.content.pm.IPackageManager $r5, $r11, $r16, $r24;
        java.lang.StringBuilder $r6, $r8, $r10, $r12, $r15, $r17, $r18, $r19, $r20, $r22, $r25, $r26, $r30;
        java.io.PrintStream $r7, $r23, $r28, $r31, $r32, $r36, $r38, $r39;
        boolean $z0, $z1;

        r0 := @this: com.android.commands.pm.Pm;

        i0 := @parameter0: int;

        i1 = 0;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        if r1 == null goto label03;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z1 == 0 goto label03;

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r2 == null goto label01;

        $z0 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r2);

        if $z0 != 0 goto label02;

     label01:
        $r31 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label02:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label03:
        r40 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r40 != null goto label04;

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("Error: no package or component specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label04:
        r3 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r40);

        if r3 != null goto label08;

     label05:
        $r16 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shell:");

        $i3 = staticinvoke <android.os.Process: int myUid()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>(r40, i0, 0, i1, $r21);

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new state: ");

        $r24 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $i4 = interfaceinvoke $r24.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r40, i1);

        $r29 = staticinvoke <com.android.commands.pm.Pm: java.lang.String enabledSettingToString(int)>($i4);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label06:
        goto label11;

     label07:
        $r34 := @caughtexception;

        r4 = $r34;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        $r33 = virtualinvoke r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        goto label11;

     label08:
        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>(r3, i0, 0, i1);

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component ");

        $r9 = virtualinvoke r3.<android.content.ComponentName: java.lang.String toShortString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new state: ");

        $r11 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $i2 = interfaceinvoke $r11.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>(r3, i1);

        $r13 = staticinvoke <com.android.commands.pm.Pm: java.lang.String enabledSettingToString(int)>($i2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label09:
        goto label11;

     label10:
        $r37 := @caughtexception;

        r41 = $r37;

        $r36 = <java.lang.System: java.io.PrintStream err>;

        $r35 = virtualinvoke r41.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r39 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label11:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private void runSetHiddenSetting(boolean)
    {
        com.android.commands.pm.Pm r0;
        boolean z0, $z2, $z3, $z4;
        int i0;
        java.lang.String r1, r2, $r13, $r16, r19;
        android.os.RemoteException r3, $r15;
        android.content.pm.IPackageManager $r4, $r10;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11;
        java.io.PrintStream $r6, $r12, $r14, $r17, $r18;

        r0 := @this: com.android.commands.pm.Pm;

        z0 := @parameter0: boolean;

        i0 = 0;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        if r1 == null goto label3;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label3;

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r2 == null goto label1;

        $z4 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r2);

        if $z4 != 0 goto label2;

     label1:
        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label3:
        r19 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r19 != null goto label4;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: no package or component specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label4:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>(r19, z0, i0);

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new hidden state: ");

        $r10 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $z2 = interfaceinvoke $r10.<android.content.pm.IPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>(r19, i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        r3 = $r15;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r16 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void runGrantRevokePermission(boolean)
    {
        com.android.commands.pm.Pm r0;
        boolean z0;
        java.lang.String r1, r2, $r12, $r13, $r18, $r24, $r25;
        android.os.RemoteException r3, $r16;
        android.content.pm.IPackageManager $r4, $r5;
        java.io.PrintStream $r6, $r7, $r10, $r15, $r17, $r22;
        java.lang.IllegalArgumentException $r8, r26;
        java.lang.StringBuilder $r9, $r11, $r14, $r19, $r21, $r23;
        java.lang.SecurityException $r20, r27;

        r0 := @this: com.android.commands.pm.Pm;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label1:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label2;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Error: no permission specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label2:
        if z0 == 0 goto label3;

        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void grantPermission(java.lang.String,java.lang.String)>(r1, r2);

        goto label4;

     label3:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void revokePermission(java.lang.String,java.lang.String)>(r1, r2);

     label4:
        goto label8;

     label5:
        $r16 := @caughtexception;

        r3 = $r16;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r18 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        goto label8;

     label6:
        $r8 := @caughtexception;

        r26 = $r8;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r12 = virtualinvoke r26.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        goto label8;

     label7:
        $r20 := @caughtexception;

        r27 = $r20;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not allowed: ");

        $r24 = virtualinvoke r27.<java.lang.SecurityException: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label8:
        return;

        catch android.os.RemoteException from label2 to label4 with label5;
        catch java.lang.IllegalArgumentException from label2 to label4 with label6;
        catch java.lang.SecurityException from label2 to label4 with label7;
    }

    private void runSetPermissionEnforced()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, r2, $r9, $r14, $r16, $r23, $r24;
        boolean z0;
        android.os.RemoteException r3, $r7;
        android.content.pm.IPackageManager $r4;
        java.io.PrintStream $r5, $r6, $r8, $r10, $r12, $r21;
        java.lang.IllegalArgumentException $r11, r25;
        java.lang.StringBuilder $r13, $r15, $r17, $r18, $r20, $r22;
        java.lang.SecurityException $r19, r26;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Error: no permission specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label1:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label2;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: no enforcement specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label2:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

     label3:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setPermissionEnforced(java.lang.String,boolean)>(r1, z0);

     label4:
        goto label8;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r9 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        goto label8;

     label6:
        $r11 := @caughtexception;

        r25 = $r11;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r14 = virtualinvoke r25.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        goto label8;

     label7:
        $r19 := @caughtexception;

        r26 = $r19;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not allowed: ");

        $r23 = virtualinvoke r26.<java.lang.SecurityException: java.lang.String toString()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label8:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label6;
        catch java.lang.SecurityException from label3 to label4 with label7;
    }

    private void runTrimCaches()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r12, $r19, $r21, $r26, $r28, $r34, $r39;
        int i0, $i4, $i5;
        long l1, $l3, l6;
        char c2;
        com.android.commands.pm.Pm$ClearDataObserver r3, $r6, r41;
        java.lang.Throwable r5, $r27;
        android.content.pm.IPackageManager $r7;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r13, $r17, $r18, $r20, $r23, $r25, $r29, $r30, $r35, $r36;
        java.io.PrintStream $r11, $r15, $r16, $r22, $r31, $r38, $r40;
        java.lang.IllegalArgumentException $r14, r43;
        java.lang.SecurityException $r24, r44;
        java.lang.NumberFormatException $r32;
        android.os.RemoteException $r33, r42;
        java.lang.InterruptedException $r37;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label01;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: no size specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label01:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        l1 = 1L;

        if i0 <= 1 goto label09;

        $i4 = i0 - 1;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        if c2 == 75 goto label02;

        if c2 != 107 goto label03;

     label02:
        l1 = 1024L;

        goto label08;

     label03:
        if c2 == 77 goto label04;

        if c2 != 109 goto label05;

     label04:
        l1 = 1048576L;

        goto label08;

     label05:
        if c2 == 71 goto label06;

        if c2 != 103 goto label07;

     label06:
        l1 = 1073741824L;

        goto label08;

     label07:
        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid suffix: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r12);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label08:
        $i5 = i0 - 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

     label09:
        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        l6 = $l3 * l1;

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected number at: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label12:
        $r6 = new com.android.commands.pm.Pm$ClearDataObserver;

        specialinvoke $r6.<com.android.commands.pm.Pm$ClearDataObserver: void <init>()>();

        r41 = $r6;

     label13:
        $r7 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r7.<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>(l6, r41);

        r3 = r41;

        entermonitor r41;

     label14:
        $z0 = r41.<com.android.commands.pm.Pm$ClearDataObserver: boolean finished>;

        if $z0 != 0 goto label18;

     label15:
        virtualinvoke r41.<java.lang.Object: void wait()>();

     label16:
        goto label14;

     label17:
        $r37 := @caughtexception;

        goto label14;

     label18:
        exitmonitor r3;

     label19:
        goto label22;

     label20:
        $r27 := @caughtexception;

        r5 = $r27;

        exitmonitor r3;

     label21:
        throw r5;

     label22:
        goto label26;

     label23:
        $r33 := @caughtexception;

        r42 = $r33;

        $r40 = <java.lang.System: java.io.PrintStream err>;

        $r39 = virtualinvoke r42.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        goto label26;

     label24:
        $r14 := @caughtexception;

        r43 = $r14;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r21 = virtualinvoke r43.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        goto label26;

     label25:
        $r24 := @caughtexception;

        r44 = $r24;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not allowed: ");

        $r28 = virtualinvoke r44.<java.lang.SecurityException: java.lang.String toString()>();

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label26:
        return;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
        catch java.lang.InterruptedException from label15 to label16 with label17;
        catch java.lang.Throwable from label14 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch android.os.RemoteException from label13 to label22 with label23;
        catch java.lang.IllegalArgumentException from label13 to label22 with label24;
        catch java.lang.SecurityException from label13 to label22 with label25;
    }

    private void displayPackageFilePath(java.lang.String)
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, r4, $r9, $r19;
        android.content.pm.PackageInfo r2;
        java.lang.String[] r3, $r12;
        int i0, i1;
        android.content.pm.IPackageManager $r5;
        android.content.pm.ApplicationInfo $r6, $r8, $r11, $r13;
        java.io.PrintStream $r7, $r10, $r14, $r15, $r16, $r18;
        boolean $z0;
        android.os.RemoteException $r17, r20;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r2 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, 0);

        if r2 == null goto label3;

        $r6 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r6 == null goto label3;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>("package:");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r8 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r11 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r12);

        if $z0 != 0 goto label3;

        $r13 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = $r13.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>("package:");

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(r4);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        r20 = $r17;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r19 = virtualinvoke r20.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private android.content.res.Resources getResources(android.content.pm.PackageItemInfo)
    {
        com.android.commands.pm.Pm r0;
        android.content.pm.PackageItemInfo r1;
        android.content.res.Resources r2, $r12, r20;
        android.content.pm.ApplicationInfo r3;
        android.content.res.AssetManager r4, $r10;
        java.lang.String $r5, $r8, $r11, $r13, $r19;
        java.util.WeakHashMap $r6, $r15;
        java.lang.Object $r7;
        android.content.pm.IPackageManager $r9;
        java.io.PrintStream $r16, $r18;
        android.os.RemoteException $r17, r21;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: android.content.pm.PackageItemInfo;

        $r6 = r0.<com.android.commands.pm.Pm: java.util.WeakHashMap mResourceCache>;

        $r5 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (android.content.res.Resources) $r7;

        if r2 == null goto label1;

        return r2;

     label1:
        $r9 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r8 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        r3 = interfaceinvoke $r9.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r8, 0, 0);

        $r10 = new android.content.res.AssetManager;

        specialinvoke $r10.<android.content.res.AssetManager: void <init>()>();

        r4 = $r10;

        $r11 = r3.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        virtualinvoke r4.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>($r11);

        $r12 = new android.content.res.Resources;

        specialinvoke $r12.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r4, null, null);

        r20 = $r12;

        $r15 = r0.<com.android.commands.pm.Pm: java.util.WeakHashMap mResourceCache>;

        $r13 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r15.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r20);

     label2:
        return r20;

     label3:
        $r17 := @caughtexception;

        r21 = $r17;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r19 = virtualinvoke r21.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static java.lang.String checkAbiArgument(java.lang.String)
    {
        java.lang.String r0, r3, $r4, $r10;
        java.lang.String[] r1, r2;
        int i0, i1;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r5, $r11;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing ABI argument");

        throw $r11;

     label1:
        $r4 = "-";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        r1 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r3 = r2[i1];

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        return r0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ABI ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported on this device");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r4, $r5;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0, $z1;
        char $c6;

        r0 := @this: com.android.commands.pm.Pm;

        $i1 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $r2 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        r1 = $r3[$i2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i3 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.pm.Pm: int mNextArg> = $i4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z1 == 0 goto label3;

        return null;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 <= 1 goto label5;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c6 == 45 goto label5;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i7 <= 2 goto label4;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData> = $r4;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r5;

     label4:
        r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData> = null;

        return r1;

     label5:
        r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData> = null;

        return r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r2, $r5;
        java.lang.String[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.pm.Pm;

        $r2 = r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData>;

        return $r5;

     label1:
        $i1 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $r3 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r4 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        r1 = $r4[$i2];

        $i3 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.pm.Pm: int mNextArg> = $i4;

        return r1;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.pm.Pm;

        $i1 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $r2 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        r1 = $r3[$i2];

        $i3 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.pm.Pm: int mNextArg> = $i4;

        return r1;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("       pm list permission-groups");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("       pm list permissions [-g] [-f] [-d] [-u] [GROUP]");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("       pm list instrumentation [-f] [TARGET-PACKAGE]");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("       pm list features");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("       pm list libraries");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("       pm list users");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("       pm path PACKAGE");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("       pm dump PACKAGE");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("       pm install [-lrtsfd] [-i PACKAGE] [PATH]");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("       pm install-create [-lrtsfdp] [-i PACKAGE] [-S BYTES]");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("       pm install-write [-S BYTES] SESSION_ID SPLIT_NAME [PATH]");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("       pm install-commit SESSION_ID");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("       pm install-abandon SESSION_ID");

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("       pm uninstall [-k] [--user USER_ID] PACKAGE");

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("       pm set-installer PACKAGE INSTALLER");

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("       pm clear [--user USER_ID] PACKAGE");

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("       pm enable [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("       pm disable [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("       pm disable-user [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("       pm disable-until-used [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("       pm hide [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r23 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("       pm unhide [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("       pm grant PACKAGE PERMISSION");

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("       pm revoke PACKAGE PERMISSION");

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("       pm set-install-location [0/auto] [1/internal] [2/external]");

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("       pm get-install-location");

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("       pm set-permission-enforced PERMISSION [true|false]");

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("       pm trim-caches DESIRED_FREE_SPACE");

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("       pm create-user [--profileOf USER_ID] [--managed] USER_NAME");

        $r31 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("       pm remove-user USER_ID");

        $r30 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("       pm get-max-users");

        $r34 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("");

        $r35 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("pm list packages: prints all packages, optionally only");

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("  those whose package name contains the text in FILTER.  Options:");

        $r33 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("    -f: see their associated file.");

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("    -d: filter to only show disbled packages.");

        $r39 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("    -e: filter to only show enabled packages.");

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("    -s: filter to only show system packages.");

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("    -3: filter to only show third party packages.");

        $r42 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("    -i: see the installer for the packages.");

        $r43 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("    -u: also include uninstalled packages.");

        $r40 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("");

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("pm list permission-groups: prints all known permission groups.");

        $r46 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("");

        $r47 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("pm list permissions: prints all known permissions, optionally only");

        $r44 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("  those in GROUP.  Options:");

        $r45 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("    -g: organize by group.");

        $r51 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("    -f: print all information.");

        $r50 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("    -s: short summary.");

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("    -d: only list dangerous permissions.");

        $r48 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("    -u: list only the permissions users will see.");

        $r55 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("");

        $r54 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("pm list instrumentation: use to list all test packages; optionally");

        $r53 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("  supply <TARGET-PACKAGE> to list the test packages for a particular");

        $r52 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("  application.  Options:");

        $r59 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>("    -f: list the .apk file for the test package.");

        $r58 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("");

        $r57 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("pm list features: prints all features of the system.");

        $r56 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("");

        $r63 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("pm list users: prints all users on the system.");

        $r62 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("");

        $r61 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>("pm path: print the path to the .apk of the given PACKAGE.");

        $r60 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("");

        $r68 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>("pm dump: print system state associated with the given PACKAGE.");

        $r69 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>("");

        $r70 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>("pm install: install a single legacy package");

        $r71 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>("pm install-create: create an install session");

        $r64 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("    -l: forward lock application");

        $r65 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("    -r: replace existing application");

        $r66 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>("    -t: allow test packages");

        $r67 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("    -i: specify the installer package name");

        $r76 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>("    -s: install application on sdcard");

        $r77 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>("    -f: install application on internal flash");

        $r78 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>("    -d: allow version code downgrade");

        $r79 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>("    -p: partial application install");

        $r72 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>("    -S: size in bytes of entire session");

        $r73 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>("");

        $r74 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>("pm install-write: write a package into existing session; path may");

        $r75 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>("  be \'-\' to read from stdin");

        $r85 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>("    -S: size in bytes of package, required for stdin");

        $r84 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>("");

        $r87 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>("pm install-commit: perform install of fully staged session");

        $r86 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>("pm install-abandon: abandon session");

        $r81 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>("");

        $r80 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>("pm set-installer: set installer package name");

        $r83 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>("");

        $r82 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>("pm uninstall: removes a package from the system. Options:");

        $r93 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>("    -k: keep the data and cache directories around after package removal.");

        $r92 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>("");

        $r95 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>("pm clear: deletes all data associated with a package.");

        $r94 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>("");

        $r89 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>("pm enable, disable, disable-user, disable-until-used: these commands");

        $r88 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>("  change the enabled state of a given package or component (written");

        $r91 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r91.<java.io.PrintStream: void println(java.lang.String)>("  as \"package/class\").");

        $r90 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>("");

        $r102 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r102.<java.io.PrintStream: void println(java.lang.String)>("pm grant, revoke: these commands either grant or revoke permissions");

        $r103 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r103.<java.io.PrintStream: void println(java.lang.String)>("  to applications.  Only optional permissions the application has");

        $r100 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>("  declared can be granted or revoked.");

        $r101 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>("");

        $r98 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r98.<java.io.PrintStream: void println(java.lang.String)>("pm get-install-location: returns the current install location.");

        $r99 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>("    0 [auto]: Let system decide the best location");

        $r96 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r96.<java.io.PrintStream: void println(java.lang.String)>("    1 [internal]: Install on internal device storage");

        $r97 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>("    2 [external]: Install on external media");

        $r110 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>("");

        $r111 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r111.<java.io.PrintStream: void println(java.lang.String)>("pm set-install-location: changes the default install location.");

        $r108 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r108.<java.io.PrintStream: void println(java.lang.String)>("  NOTE: this is only intended for debugging; using this can cause");

        $r109 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r109.<java.io.PrintStream: void println(java.lang.String)>("  applications to break and other undersireable behavior.");

        $r106 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>("    0 [auto]: Let system decide the best location");

        $r107 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r107.<java.io.PrintStream: void println(java.lang.String)>("    1 [internal]: Install on internal device storage");

        $r104 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r104.<java.io.PrintStream: void println(java.lang.String)>("    2 [external]: Install on external media");

        $r105 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r105.<java.io.PrintStream: void println(java.lang.String)>("");

        $r119 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>("pm trim-caches: trim cache files to reach the given free space.");

        $r118 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r118.<java.io.PrintStream: void println(java.lang.String)>("");

        $r117 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r117.<java.io.PrintStream: void println(java.lang.String)>("pm create-user: create a new user with the given USER_NAME,");

        $r116 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r116.<java.io.PrintStream: void println(java.lang.String)>("  printing the new user identifier of the user.");

        $r115 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>("");

        $r114 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r114.<java.io.PrintStream: void println(java.lang.String)>("pm remove-user: remove the user with the given USER_IDENTIFIER,");

        $r113 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r113.<java.io.PrintStream: void println(java.lang.String)>("  deleting all data associated with that user");

        $r112 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r112.<java.io.PrintStream: void println(java.lang.String)>("");

        return;
    }

    public static void <clinit>()
    {
        <com.android.commands.pm.Pm: java.lang.String PM_NOT_RUNNING_ERR> = "Error: Could not access the Package Manager.  Is the system running?";

        <com.android.commands.pm.Pm: java.lang.String TAG> = "Pm";

        return;
    }
}
