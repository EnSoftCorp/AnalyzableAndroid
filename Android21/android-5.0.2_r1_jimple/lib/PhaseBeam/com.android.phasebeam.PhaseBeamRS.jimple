public class com.android.phasebeam.PhaseBeamRS extends java.lang.Object
{
    public static java.lang.String LOG_TAG;
    public static final int DOT_COUNT;
    private android.content.res.Resources mRes;
    private android.renderscript.RenderScriptGL mRS;
    private com.android.phasebeam.ScriptC_phasebeam mScript;
    int mHeight;
    int mWidth;
    private com.android.phasebeam.ScriptField_VpConsts mPvConsts;
    private android.renderscript.Allocation mDotAllocation;
    private android.renderscript.Allocation mBeamAllocation;
    private com.android.phasebeam.ScriptField_Particle mDotParticles;
    private android.renderscript.Mesh mDotMesh;
    private com.android.phasebeam.ScriptField_Particle mBeamParticles;
    private android.renderscript.Mesh mBeamMesh;
    private com.android.phasebeam.ScriptField_VertexColor_s mVertexColors;
    private int mDensityDPI;
    boolean mInited;

    public void <init>()
    {
        com.android.phasebeam.PhaseBeamRS r0;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.phasebeam.PhaseBeamRS: boolean mInited> = 0;

        return;
    }

    public void init(int, android.renderscript.RenderScriptGL, android.content.res.Resources, int, int)
    {
        com.android.phasebeam.PhaseBeamRS r0;
        int i0, i1, i2, $i3;
        android.renderscript.RenderScriptGL r1, $r6, $r8, $r17, $r19, $r26, $r37, $r38;
        android.content.res.Resources r2, $r27;
        android.renderscript.Mesh$AllocationBuilder r3, r4, $r7, $r16;
        boolean $z0;
        com.android.phasebeam.ScriptField_Particle $r5, $r9, $r14, $r18, $r32, $r34;
        android.renderscript.Allocation $r10, $r21;
        android.renderscript.Mesh$Primitive $r13, $r23;
        android.renderscript.Mesh $r15, $r25, $r28, $r30;
        com.android.phasebeam.ScriptC_phasebeam $r24, $r29, $r31, $r33, $r35, $r39, $r40, $r41;
        float $f0;
        com.android.phasebeam.ScriptField_VpConsts $r36;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.RenderScriptGL;

        r2 := @parameter2: android.content.res.Resources;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = r0.<com.android.phasebeam.PhaseBeamRS: boolean mInited>;

        if $z0 != 0 goto label1;

        r0.<com.android.phasebeam.PhaseBeamRS: int mDensityDPI> = i0;

        r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS> = r1;

        r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes> = r2;

        r0.<com.android.phasebeam.PhaseBeamRS: int mWidth> = i1;

        r0.<com.android.phasebeam.PhaseBeamRS: int mHeight> = i2;

        $r5 = new com.android.phasebeam.ScriptField_Particle;

        $r6 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r5.<com.android.phasebeam.ScriptField_Particle: void <init>(android.renderscript.RenderScript,int)>($r6, 28);

        r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_Particle mDotParticles> = $r5;

        $r7 = new android.renderscript.Mesh$AllocationBuilder;

        $r8 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r7.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r8);

        r3 = $r7;

        $r9 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_Particle mDotParticles>;

        $r10 = virtualinvoke $r9.<com.android.phasebeam.ScriptField_Particle: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r3.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r10);

        $r13 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive POINT>;

        virtualinvoke r3.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r13);

        $r15 = virtualinvoke r3.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Mesh mDotMesh> = $r15;

        $r14 = new com.android.phasebeam.ScriptField_Particle;

        $r17 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r14.<com.android.phasebeam.ScriptField_Particle: void <init>(android.renderscript.RenderScript,int)>($r17, 28);

        r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_Particle mBeamParticles> = $r14;

        $r16 = new android.renderscript.Mesh$AllocationBuilder;

        $r19 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r16.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r19);

        r4 = $r16;

        $r18 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_Particle mBeamParticles>;

        $r21 = virtualinvoke $r18.<com.android.phasebeam.ScriptField_Particle: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r4.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r21);

        $r23 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive POINT>;

        virtualinvoke r4.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r23);

        $r25 = virtualinvoke r4.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Mesh mBeamMesh> = $r25;

        $r24 = new com.android.phasebeam.ScriptC_phasebeam;

        $r26 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r27 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        specialinvoke $r24.<com.android.phasebeam.ScriptC_phasebeam: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>($r26, $r27, 2131034117);

        r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript> = $r24;

        $r31 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r30 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Mesh mDotMesh>;

        virtualinvoke $r31.<com.android.phasebeam.ScriptC_phasebeam: void set_dotMesh(android.renderscript.Mesh)>($r30);

        $r29 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r28 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Mesh mBeamMesh>;

        virtualinvoke $r29.<com.android.phasebeam.ScriptC_phasebeam: void set_beamMesh(android.renderscript.Mesh)>($r28);

        $r35 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r34 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_Particle mDotParticles>;

        virtualinvoke $r35.<com.android.phasebeam.ScriptC_phasebeam: void bind_dotParticles(com.android.phasebeam.ScriptField_Particle)>($r34);

        $r33 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r32 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_Particle mBeamParticles>;

        virtualinvoke $r33.<com.android.phasebeam.ScriptC_phasebeam: void bind_beamParticles(com.android.phasebeam.ScriptField_Particle)>($r32);

        $r36 = new com.android.phasebeam.ScriptField_VpConsts;

        $r37 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r36.<com.android.phasebeam.ScriptField_VpConsts: void <init>(android.renderscript.RenderScript,int)>($r37, 1);

        r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VpConsts mPvConsts> = $r36;

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void createProgramVertex()>();

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void createProgramRaster()>();

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void createProgramFragmentStore()>();

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void createProgramFragment()>();

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void createBackgroundMesh()>();

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void loadTextures()>();

        $r40 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $i3 = r0.<com.android.phasebeam.PhaseBeamRS: int mDensityDPI>;

        $f0 = (float) $i3;

        virtualinvoke $r40.<com.android.phasebeam.ScriptC_phasebeam: void set_densityDPI(float)>($f0);

        $r38 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r41 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r38.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>($r41);

        $r39 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r39.<com.android.phasebeam.ScriptC_phasebeam: void invoke_positionParticles()>();

        r0.<com.android.phasebeam.PhaseBeamRS: boolean mInited> = 1;

     label1:
        return;
    }

    private android.renderscript.Matrix4f getProjectionNormalized(int, int)
    {
        com.android.phasebeam.PhaseBeamRS r0;
        int i0, i1;
        android.renderscript.Matrix4f r1, r2, $r3, $r4;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new android.renderscript.Matrix4f;

        specialinvoke $r3.<android.renderscript.Matrix4f: void <init>()>();

        r1 = $r3;

        $r4 = new android.renderscript.Matrix4f;

        specialinvoke $r4.<android.renderscript.Matrix4f: void <init>()>();

        r2 = $r4;

        if i0 <= i1 goto label1;

        $f5 = (float) i0;

        $f4 = (float) i1;

        f0 = $f5 / $f4;

        $f6 = neg f0;

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>($f6, f0, -1.0F, 1.0F, 1.0F, 100.0F);

        goto label2;

     label1:
        $f2 = (float) i1;

        $f1 = (float) i0;

        f7 = $f2 / $f1;

        $f3 = neg f7;

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>(-1.0F, 1.0F, $f3, f7, 1.0F, 100.0F);

     label2:
        virtualinvoke r2.<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>(180.0F, 0.0F, 1.0F, 0.0F);

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>(r1, r2);

        virtualinvoke r2.<android.renderscript.Matrix4f: void loadScale(float,float,float)>(-1.0F, 1.0F, 1.0F);

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>(r1, r2);

        virtualinvoke r2.<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>(0.0F, 0.0F, 1.0F);

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>(r1, r2);

        return r1;
    }

    private void updateProjectionMatrices()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.Matrix4f r1;
        com.android.phasebeam.ScriptField_VpConsts$Item r2, $r3;
        int $i0, $i1, $i2;
        float $f0, $f1;
        com.android.phasebeam.ScriptField_VpConsts $r4;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $i1 = r0.<com.android.phasebeam.PhaseBeamRS: int mWidth>;

        $i0 = r0.<com.android.phasebeam.PhaseBeamRS: int mHeight>;

        r1 = specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Matrix4f getProjectionNormalized(int,int)>($i1, $i0);

        $r3 = new com.android.phasebeam.ScriptField_VpConsts$Item;

        specialinvoke $r3.<com.android.phasebeam.ScriptField_VpConsts$Item: void <init>()>();

        r2 = $r3;

        r2.<com.android.phasebeam.ScriptField_VpConsts$Item: android.renderscript.Matrix4f MVP> = r1;

        $i2 = r0.<com.android.phasebeam.PhaseBeamRS: int mDensityDPI>;

        $f0 = (float) $i2;

        $f1 = $f0 / 240.0F;

        r2.<com.android.phasebeam.ScriptField_VpConsts$Item: float scaleSize> = $f1;

        $r4 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VpConsts mPvConsts>;

        virtualinvoke $r4.<com.android.phasebeam.ScriptField_VpConsts: void set(com.android.phasebeam.ScriptField_VpConsts$Item,int,boolean)>(r2, 0, 1);

        return;
    }

    private void createBackgroundMesh()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        java.util.ArrayList r1, $r8;
        java.io.InputStream r2;
        java.io.BufferedReader r3, $r11;
        java.lang.String r4, $r12, $r30, $r32, $r33, $r34, $r37, $r43, $r45, $r47, $r50, r54;
        java.lang.Throwable r5, $r48;
        java.lang.String[] r7;
        float f0, f1, f2, f3, f4;
        android.content.res.Resources $r9;
        java.io.InputStreamReader $r10;
        android.renderscript.RenderScriptGL $r13, $r18;
        com.android.phasebeam.ScriptField_VertexColor_s $r14, $r16, $r19, $r26, $r39, $r41;
        android.renderscript.Mesh$AllocationBuilder $r15, r55;
        android.renderscript.Mesh$Primitive $r17;
        android.renderscript.Allocation $r22;
        android.renderscript.Mesh $r23;
        com.android.phasebeam.ScriptC_phasebeam $r24, $r27;
        java.lang.Object $r25;
        java.lang.Float $r28, $r29, $r31, $r35, $r38;
        android.renderscript.Float3 $r36;
        android.renderscript.Float4 $r40;
        java.io.IOException $r42, $r44, $r46, $r49;
        int i4, i5;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r1 = $r8;

        $r9 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        r2 = virtualinvoke $r9.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(2131034114);

        $r11 = new java.io.BufferedReader;

        $r10 = new java.io.InputStreamReader;

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

        r3 = $r11;

     label01:
        $r12 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r4 = $r12;

        if $r12 == null goto label02;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label01;

     label02:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label03:
        goto label14;

     label04:
        $r44 := @caughtexception;

        $r43 = <com.android.phasebeam.PhaseBeamRS: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r43, "Unable to close background mesh csv file.");

        goto label14;

     label05:
        $r46 := @caughtexception;

        $r45 = <com.android.phasebeam.PhaseBeamRS: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r45, "Unable to load background mesh from csv file.");

     label06:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label07:
        goto label14;

     label08:
        $r49 := @caughtexception;

        $r50 = <com.android.phasebeam.PhaseBeamRS: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r50, "Unable to close background mesh csv file.");

        goto label14;

     label09:
        $r48 := @caughtexception;

        r5 = $r48;

     label10:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r42 := @caughtexception;

        $r47 = <com.android.phasebeam.PhaseBeamRS: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r47, "Unable to close background mesh csv file.");

     label13:
        throw r5;

     label14:
        i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r14 = new com.android.phasebeam.ScriptField_VertexColor_s;

        $r13 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r14.<com.android.phasebeam.ScriptField_VertexColor_s: void <init>(android.renderscript.RenderScript,int)>($r13, i4);

        r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VertexColor_s mVertexColors> = $r14;

        i5 = 0;

     label15:
        if i5 >= i4 goto label16;

        $r25 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r54 = (java.lang.String) $r25;

        r7 = virtualinvoke r54.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r29 = new java.lang.Float;

        $r30 = r7[0];

        specialinvoke $r29.<java.lang.Float: void <init>(java.lang.String)>($r30);

        f0 = virtualinvoke $r29.<java.lang.Float: float floatValue()>();

        $r28 = new java.lang.Float;

        $r33 = r7[1];

        specialinvoke $r28.<java.lang.Float: void <init>(java.lang.String)>($r33);

        f1 = virtualinvoke $r28.<java.lang.Float: float floatValue()>();

        $r31 = new java.lang.Float;

        $r32 = r7[2];

        specialinvoke $r31.<java.lang.Float: void <init>(java.lang.String)>($r32);

        f2 = virtualinvoke $r31.<java.lang.Float: float floatValue()>();

        $r35 = new java.lang.Float;

        $r34 = r7[3];

        specialinvoke $r35.<java.lang.Float: void <init>(java.lang.String)>($r34);

        f3 = virtualinvoke $r35.<java.lang.Float: float floatValue()>();

        $r38 = new java.lang.Float;

        $r37 = r7[4];

        specialinvoke $r38.<java.lang.Float: void <init>(java.lang.String)>($r37);

        f4 = virtualinvoke $r38.<java.lang.Float: float floatValue()>();

        $r41 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VertexColor_s mVertexColors>;

        $r36 = new android.renderscript.Float3;

        specialinvoke $r36.<android.renderscript.Float3: void <init>(float,float,float)>(f0, f1, 0.0F);

        virtualinvoke $r41.<com.android.phasebeam.ScriptField_VertexColor_s: void set_position(int,android.renderscript.Float3,boolean)>(i5, $r36, 0);

        $r39 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VertexColor_s mVertexColors>;

        $r40 = new android.renderscript.Float4;

        specialinvoke $r40.<android.renderscript.Float4: void <init>(float,float,float,float)>(f2, f3, f4, 1.0F);

        virtualinvoke $r39.<com.android.phasebeam.ScriptField_VertexColor_s: void set_color(int,android.renderscript.Float4,boolean)>(i5, $r40, 0);

        i5 = i5 + 1;

        goto label15;

     label16:
        $r16 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VertexColor_s mVertexColors>;

        virtualinvoke $r16.<com.android.phasebeam.ScriptField_VertexColor_s: void copyAll()>();

        $r15 = new android.renderscript.Mesh$AllocationBuilder;

        $r18 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r15.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r18);

        r55 = $r15;

        $r17 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive TRIANGLE>;

        virtualinvoke r55.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r17);

        $r19 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VertexColor_s mVertexColors>;

        $r22 = virtualinvoke $r19.<com.android.phasebeam.ScriptField_VertexColor_s: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r55.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r22);

        $r24 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r23 = virtualinvoke r55.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        virtualinvoke $r24.<com.android.phasebeam.ScriptC_phasebeam: void set_gBackgroundMesh(android.renderscript.Mesh)>($r23);

        $r27 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r26 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VertexColor_s mVertexColors>;

        virtualinvoke $r27.<com.android.phasebeam.ScriptC_phasebeam: void bind_vertexColors(com.android.phasebeam.ScriptField_VertexColor_s)>($r26);

        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private android.renderscript.Allocation loadTexture(int)
    {
        com.android.phasebeam.PhaseBeamRS r0;
        int i0;
        android.renderscript.Allocation r1;
        android.renderscript.Allocation$MipmapControl $r2;
        android.content.res.Resources $r3;
        android.renderscript.RenderScriptGL $r4;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r3 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        $r2 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        r1 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r4, $r3, i0, $r2, 2);

        return r1;
    }

    private void loadTextures()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.Allocation $r1, $r2, $r3, $r5;
        com.android.phasebeam.ScriptC_phasebeam $r4, $r6;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r1 = specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Allocation loadTexture(int)>(2130837505);

        r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Allocation mDotAllocation> = $r1;

        $r2 = specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Allocation loadTexture(int)>(2130837504);

        r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Allocation mBeamAllocation> = $r2;

        $r4 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r3 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Allocation mDotAllocation>;

        virtualinvoke $r4.<com.android.phasebeam.ScriptC_phasebeam: void set_textureDot(android.renderscript.Allocation)>($r3);

        $r6 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        $r5 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Allocation mBeamAllocation>;

        virtualinvoke $r6.<com.android.phasebeam.ScriptC_phasebeam: void set_textureBeam(android.renderscript.Allocation)>($r5);

        return;
    }

    private void createProgramVertex()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.ProgramVertex$Builder r1, r3, $r5, $r13;
        android.renderscript.ProgramVertex r2, r4;
        android.renderscript.RenderScriptGL $r6, $r9, $r14, $r26;
        android.content.res.Resources $r7, $r16;
        android.renderscript.Element $r10, $r24;
        com.android.phasebeam.ScriptC_phasebeam $r12, $r28;
        android.renderscript.Type $r17, $r21;
        com.android.phasebeam.ScriptField_VpConsts $r18, $r25;
        android.renderscript.Mesh $r19;
        android.renderscript.Allocation $r22, $r27;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r5 = new android.renderscript.ProgramVertex$Builder;

        $r6 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r5.<android.renderscript.ProgramVertex$Builder: void <init>(android.renderscript.RenderScript)>($r6);

        r1 = $r5;

        $r7 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        virtualinvoke r1.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r7, 2131034113);

        $r9 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r10 = staticinvoke <com.android.phasebeam.ScriptField_VertexColor_s: android.renderscript.Element createElement(android.renderscript.RenderScript)>($r9);

        virtualinvoke r1.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex$Builder addInput(android.renderscript.Element)>($r10);

        r2 = virtualinvoke r1.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex create()>();

        $r12 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r12.<com.android.phasebeam.ScriptC_phasebeam: void set_vertBg(android.renderscript.ProgramVertex)>(r2);

        specialinvoke r0.<com.android.phasebeam.PhaseBeamRS: void updateProjectionMatrices()>();

        $r13 = new android.renderscript.ProgramVertex$Builder;

        $r14 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r13.<android.renderscript.ProgramVertex$Builder: void <init>(android.renderscript.RenderScript)>($r14);

        r3 = $r13;

        $r16 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        virtualinvoke r3.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r16, 2131034116);

        $r18 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VpConsts mPvConsts>;

        $r17 = virtualinvoke $r18.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        virtualinvoke r3.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$BaseProgramBuilder addConstant(android.renderscript.Type)>($r17);

        $r19 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.Mesh mDotMesh>;

        $r22 = virtualinvoke $r19.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        $r21 = virtualinvoke $r22.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        $r24 = virtualinvoke $r21.<android.renderscript.Type: android.renderscript.Element getElement()>();

        virtualinvoke r3.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex$Builder addInput(android.renderscript.Element)>($r24);

        r4 = virtualinvoke r3.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex create()>();

        $r25 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptField_VpConsts mPvConsts>;

        $r27 = virtualinvoke $r25.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r4.<android.renderscript.ProgramVertex: void bindConstants(android.renderscript.Allocation,int)>($r27, 0);

        $r26 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        virtualinvoke $r26.<android.renderscript.RenderScriptGL: void bindProgramVertex(android.renderscript.ProgramVertex)>(r4);

        $r28 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r28.<com.android.phasebeam.ScriptC_phasebeam: void set_vertDots(android.renderscript.ProgramVertex)>(r4);

        return;
    }

    private void createProgramFragment()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.ProgramFragment$Builder r1, r3, $r5, $r10;
        android.renderscript.ProgramFragment r2, r4;
        android.renderscript.RenderScriptGL $r6, $r11, $r17;
        android.content.res.Resources $r7, $r12;
        com.android.phasebeam.ScriptC_phasebeam $r9, $r18;
        android.renderscript.Program$TextureType $r14;
        android.renderscript.Sampler $r16;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r5 = new android.renderscript.ProgramFragment$Builder;

        $r6 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r5.<android.renderscript.ProgramFragment$Builder: void <init>(android.renderscript.RenderScript)>($r6);

        r1 = $r5;

        $r7 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        virtualinvoke r1.<android.renderscript.ProgramFragment$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r7, 2131034112);

        r2 = virtualinvoke r1.<android.renderscript.ProgramFragment$Builder: android.renderscript.ProgramFragment create()>();

        $r9 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r9.<com.android.phasebeam.ScriptC_phasebeam: void set_fragBg(android.renderscript.ProgramFragment)>(r2);

        $r10 = new android.renderscript.ProgramFragment$Builder;

        $r11 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r10.<android.renderscript.ProgramFragment$Builder: void <init>(android.renderscript.RenderScript)>($r11);

        r3 = $r10;

        $r12 = r0.<com.android.phasebeam.PhaseBeamRS: android.content.res.Resources mRes>;

        virtualinvoke r3.<android.renderscript.ProgramFragment$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r12, 2131034115);

        $r14 = <android.renderscript.Program$TextureType: android.renderscript.Program$TextureType TEXTURE_2D>;

        virtualinvoke r3.<android.renderscript.ProgramFragment$Builder: android.renderscript.Program$BaseProgramBuilder addTexture(android.renderscript.Program$TextureType)>($r14);

        r4 = virtualinvoke r3.<android.renderscript.ProgramFragment$Builder: android.renderscript.ProgramFragment create()>();

        $r17 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r16 = staticinvoke <android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>($r17);

        virtualinvoke r4.<android.renderscript.ProgramFragment: void bindSampler(android.renderscript.Sampler,int)>($r16, 0);

        $r18 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r18.<com.android.phasebeam.ScriptC_phasebeam: void set_fragDots(android.renderscript.ProgramFragment)>(r4);

        return;
    }

    private void createProgramRaster()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.ProgramRaster$Builder r1, $r3;
        android.renderscript.ProgramRaster r2;
        android.renderscript.RenderScriptGL $r4, $r6;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r3 = new android.renderscript.ProgramRaster$Builder;

        $r4 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r3.<android.renderscript.ProgramRaster$Builder: void <init>(android.renderscript.RenderScript)>($r4);

        r1 = $r3;

        virtualinvoke r1.<android.renderscript.ProgramRaster$Builder: android.renderscript.ProgramRaster$Builder setPointSpriteEnabled(boolean)>(1);

        r2 = virtualinvoke r1.<android.renderscript.ProgramRaster$Builder: android.renderscript.ProgramRaster create()>();

        $r6 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        virtualinvoke $r6.<android.renderscript.RenderScriptGL: void bindProgramRaster(android.renderscript.ProgramRaster)>(r2);

        return;
    }

    private void createProgramFragmentStore()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.ProgramStore$Builder r1, $r2;
        android.renderscript.RenderScriptGL $r3, $r7;
        android.renderscript.ProgramStore$BlendDstFunc $r4;
        android.renderscript.ProgramStore$BlendSrcFunc $r5;
        android.renderscript.ProgramStore $r8;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r2 = new android.renderscript.ProgramStore$Builder;

        $r3 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r2.<android.renderscript.ProgramStore$Builder: void <init>(android.renderscript.RenderScript)>($r3);

        r1 = $r2;

        $r5 = <android.renderscript.ProgramStore$BlendSrcFunc: android.renderscript.ProgramStore$BlendSrcFunc SRC_ALPHA>;

        $r4 = <android.renderscript.ProgramStore$BlendDstFunc: android.renderscript.ProgramStore$BlendDstFunc ONE>;

        virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setBlendFunc(android.renderscript.ProgramStore$BlendSrcFunc,android.renderscript.ProgramStore$BlendDstFunc)>($r5, $r4);

        $r7 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r8 = virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore create()>();

        virtualinvoke $r7.<android.renderscript.RenderScriptGL: void bindProgramStore(android.renderscript.ProgramStore)>($r8);

        return;
    }

    public void start()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        com.android.phasebeam.ScriptC_phasebeam $r1;
        android.renderscript.RenderScriptGL $r2;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r2 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        $r1 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r2.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>($r1);

        return;
    }

    public void stop()
    {
        com.android.phasebeam.PhaseBeamRS r0;
        android.renderscript.RenderScriptGL $r1;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        $r1 = r0.<com.android.phasebeam.PhaseBeamRS: android.renderscript.RenderScriptGL mRS>;

        virtualinvoke $r1.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>(null);

        return;
    }

    public void setOffset(float, float, int, int)
    {
        com.android.phasebeam.PhaseBeamRS r0;
        float f0, f1;
        int i0, i1;
        com.android.phasebeam.ScriptC_phasebeam $r1;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = r0.<com.android.phasebeam.PhaseBeamRS: com.android.phasebeam.ScriptC_phasebeam mScript>;

        virtualinvoke $r1.<com.android.phasebeam.ScriptC_phasebeam: void set_xOffset(float)>(f0);

        return;
    }

    public void resize(int, int)
    {
        com.android.phasebeam.PhaseBeamRS r0;
        int i0, i1;

        r0 := @this: com.android.phasebeam.PhaseBeamRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    static void <clinit>()
    {
        <com.android.phasebeam.PhaseBeamRS: int DOT_COUNT> = 28;

        <com.android.phasebeam.PhaseBeamRS: java.lang.String LOG_TAG> = "PhaseBeam";

        return;
    }
}
