public class com.android.phasebeam.ScriptField_VpConsts extends android.renderscript.Script$FieldBase
{
    private com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray;
    private android.renderscript.FieldPacker mIOBuffer;
    private static java.lang.ref.WeakReference mElementCache;

    public static android.renderscript.Element createElement(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element$Builder r1, $r2;
        android.renderscript.Element $r3, $r5, $r7;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r2 = new android.renderscript.Element$Builder;

        specialinvoke $r2.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        r1 = $r2;

        $r3 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>(r0);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r3, "MVP");

        $r5 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>(r0);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r5, "scaleSize");

        $r7 = virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        return $r7;
    }

    private void <init>(android.renderscript.RenderScript)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        android.renderscript.RenderScript r1;
        android.renderscript.Element $r2;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        r1 := @parameter0: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.Script$FieldBase: void <init>()>();

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = null;

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = null;

        $r2 = staticinvoke <com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element createElement(android.renderscript.RenderScript)>(r1);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement> = $r2;

        return;
    }

    public void <init>(android.renderscript.RenderScript, int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        android.renderscript.RenderScript r1;
        int i0;
        android.renderscript.Element $r2;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        specialinvoke r0.<android.renderscript.Script$FieldBase: void <init>()>();

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = null;

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = null;

        $r2 = staticinvoke <com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element createElement(android.renderscript.RenderScript)>(r1);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement> = $r2;

        virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: void init(android.renderscript.RenderScript,int)>(r1, i0);

        return;
    }

    public void <init>(android.renderscript.RenderScript, int, int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        android.renderscript.RenderScript r1;
        int i0, i1;
        android.renderscript.Element $r2;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.renderscript.Script$FieldBase: void <init>()>();

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = null;

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = null;

        $r2 = staticinvoke <com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element createElement(android.renderscript.RenderScript)>(r1);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement> = $r2;

        virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: void init(android.renderscript.RenderScript,int,int)>(r1, i0, i1);

        return;
    }

    public static com.android.phasebeam.ScriptField_VpConsts create1D(android.renderscript.RenderScript, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        com.android.phasebeam.ScriptField_VpConsts r1, $r2;
        android.renderscript.Element $r3;
        android.renderscript.Allocation $r4;

        r0 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new com.android.phasebeam.ScriptField_VpConsts;

        specialinvoke $r2.<com.android.phasebeam.ScriptField_VpConsts: void <init>(android.renderscript.RenderScript)>(r0);

        r1 = $r2;

        $r3 = r1.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $r4 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>(r0, $r3, i0, i1);

        r1.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation> = $r4;

        return r1;
    }

    public static com.android.phasebeam.ScriptField_VpConsts create1D(android.renderscript.RenderScript, int)
    {
        android.renderscript.RenderScript r0;
        int i0;
        com.android.phasebeam.ScriptField_VpConsts $r1;

        r0 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts create1D(android.renderscript.RenderScript,int,int)>(r0, i0, 1);

        return $r1;
    }

    public static com.android.phasebeam.ScriptField_VpConsts create2D(android.renderscript.RenderScript, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1;
        com.android.phasebeam.ScriptField_VpConsts $r1;

        r0 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts create2D(android.renderscript.RenderScript,int,int,int)>(r0, i0, i1, 1);

        return $r1;
    }

    public static com.android.phasebeam.ScriptField_VpConsts create2D(android.renderscript.RenderScript, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2;
        com.android.phasebeam.ScriptField_VpConsts r1, $r4;
        android.renderscript.Type$Builder r2, $r5;
        android.renderscript.Type r3;
        android.renderscript.Element $r6;
        android.renderscript.Allocation $r9;

        r0 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r4 = new com.android.phasebeam.ScriptField_VpConsts;

        specialinvoke $r4.<com.android.phasebeam.ScriptField_VpConsts: void <init>(android.renderscript.RenderScript)>(r0);

        r1 = $r4;

        $r5 = new android.renderscript.Type$Builder;

        $r6 = r1.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        specialinvoke $r5.<android.renderscript.Type$Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>(r0, $r6);

        r2 = $r5;

        virtualinvoke r2.<android.renderscript.Type$Builder: android.renderscript.Type$Builder setX(int)>(i0);

        virtualinvoke r2.<android.renderscript.Type$Builder: android.renderscript.Type$Builder setY(int)>(i1);

        r3 = virtualinvoke r2.<android.renderscript.Type$Builder: android.renderscript.Type create()>();

        $r9 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>(r0, r3, i2);

        r1.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation> = $r9;

        return r1;
    }

    public static android.renderscript.Type$Builder createTypeBuilder(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        android.renderscript.Type$Builder $r2;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 = staticinvoke <com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element createElement(android.renderscript.RenderScript)>(r0);

        $r2 = new android.renderscript.Type$Builder;

        specialinvoke $r2.<android.renderscript.Type$Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>(r0, r1);

        return $r2;
    }

    public static com.android.phasebeam.ScriptField_VpConsts createCustom(android.renderscript.RenderScript, android.renderscript.Type$Builder, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Type$Builder r1;
        int i0;
        com.android.phasebeam.ScriptField_VpConsts r2, $r4;
        android.renderscript.Type r3;
        android.renderscript.Element $r5, $r6;
        android.renderscript.Allocation $r7;
        android.renderscript.RSIllegalArgumentException $r8;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Type$Builder;

        i0 := @parameter2: int;

        $r4 = new com.android.phasebeam.ScriptField_VpConsts;

        specialinvoke $r4.<com.android.phasebeam.ScriptField_VpConsts: void <init>(android.renderscript.RenderScript)>(r0);

        r2 = $r4;

        r3 = virtualinvoke r1.<android.renderscript.Type$Builder: android.renderscript.Type create()>();

        $r5 = virtualinvoke r3.<android.renderscript.Type: android.renderscript.Element getElement()>();

        $r6 = r2.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        if $r5 == $r6 goto label1;

        $r8 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r8.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Type.Builder did not match expected element type.");

        throw $r8;

     label1:
        $r7 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>(r0, r3, i0);

        r2.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation> = $r7;

        return r2;
    }

    private void copyToArrayLocal(com.android.phasebeam.ScriptField_VpConsts$Item, android.renderscript.FieldPacker)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        com.android.phasebeam.ScriptField_VpConsts$Item r1;
        android.renderscript.FieldPacker r2;
        android.renderscript.Matrix4f $r3;
        float $f0;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        r1 := @parameter0: com.android.phasebeam.ScriptField_VpConsts$Item;

        r2 := @parameter1: android.renderscript.FieldPacker;

        $r3 = r1.<com.android.phasebeam.ScriptField_VpConsts$Item: android.renderscript.Matrix4f MVP>;

        virtualinvoke r2.<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>($r3);

        $f0 = r1.<com.android.phasebeam.ScriptField_VpConsts$Item: float scaleSize>;

        virtualinvoke r2.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        return;
    }

    private void copyToArray(com.android.phasebeam.ScriptField_VpConsts$Item, int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        com.android.phasebeam.ScriptField_VpConsts$Item r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.renderscript.FieldPacker $r2, $r4, $r5, $r6;
        android.renderscript.Element $r3, $r7;
        android.renderscript.Type $r8;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        r1 := @parameter0: com.android.phasebeam.ScriptField_VpConsts$Item;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        if $r2 != null goto label1;

        $r6 = new android.renderscript.FieldPacker;

        $r7 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i3 = virtualinvoke $r7.<android.renderscript.Element: int getBytesSize()>();

        $r8 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i4 = virtualinvoke $r8.<android.renderscript.Type: int getX()>();

        $i5 = $i3 * $i4;

        specialinvoke $r6.<android.renderscript.FieldPacker: void <init>(int)>($i5);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = $r6;

     label1:
        $r4 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        $r3 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i1 = virtualinvoke $r3.<android.renderscript.Element: int getBytesSize()>();

        $i2 = i0 * $i1;

        virtualinvoke $r4.<android.renderscript.FieldPacker: void reset(int)>($i2);

        $r5 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        specialinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: void copyToArrayLocal(com.android.phasebeam.ScriptField_VpConsts$Item,android.renderscript.FieldPacker)>(r1, $r5);

        return;
    }

    public synchronized void set(com.android.phasebeam.ScriptField_VpConsts$Item, int, boolean)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        com.android.phasebeam.ScriptField_VpConsts$Item r1;
        int i0, $i1, $i2;
        boolean z0;
        android.renderscript.FieldPacker r2, $r5;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r3, $r4, $r9;
        android.renderscript.Element $r6;
        android.renderscript.Allocation $r7;
        android.renderscript.Type $r8;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        r1 := @parameter0: com.android.phasebeam.ScriptField_VpConsts$Item;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r3 != null goto label1;

        $r8 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i2 = virtualinvoke $r8.<android.renderscript.Type: int getX()>();

        $r9 = newarray (com.android.phasebeam.ScriptField_VpConsts$Item)[$i2];

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = $r9;

     label1:
        $r4 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r4[i0] = r1;

        if z0 == 0 goto label2;

        specialinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: void copyToArray(com.android.phasebeam.ScriptField_VpConsts$Item,int)>(r1, i0);

        $r5 = new android.renderscript.FieldPacker;

        $r6 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i1 = virtualinvoke $r6.<android.renderscript.Element: int getBytesSize()>();

        specialinvoke $r5.<android.renderscript.FieldPacker: void <init>(int)>($i1);

        r2 = $r5;

        specialinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: void copyToArrayLocal(com.android.phasebeam.ScriptField_VpConsts$Item,android.renderscript.FieldPacker)>(r1, r2);

        $r7 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation>;

        virtualinvoke $r7.<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>(i0, r2);

     label2:
        return;
    }

    public synchronized com.android.phasebeam.ScriptField_VpConsts$Item get(int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r1, $r2;
        com.android.phasebeam.ScriptField_VpConsts$Item $r3;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r3 = $r2[i0];

        return $r3;
    }

    public synchronized void set_MVP(int, android.renderscript.Matrix4f, boolean)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.renderscript.Matrix4f r1;
        boolean z0;
        android.renderscript.FieldPacker r2, $r3, $r10, $r11, $r13, $r17;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r4, $r5, $r7, $r14, $r18;
        com.android.phasebeam.ScriptField_VpConsts$Item $r6, $r8, $r15;
        android.renderscript.Element $r9, $r19;
        android.renderscript.Allocation $r12;
        android.renderscript.Type $r16, $r20;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.Matrix4f;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        if $r3 != null goto label1;

        $r17 = new android.renderscript.FieldPacker;

        $r19 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i4 = virtualinvoke $r19.<android.renderscript.Element: int getBytesSize()>();

        $r20 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i5 = virtualinvoke $r20.<android.renderscript.Type: int getX()>();

        $i6 = $i4 * $i5;

        specialinvoke $r17.<android.renderscript.FieldPacker: void <init>(int)>($i6);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = $r17;

     label1:
        $r4 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r4 != null goto label2;

        $r16 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i3 = virtualinvoke $r16.<android.renderscript.Type: int getX()>();

        $r18 = newarray (com.android.phasebeam.ScriptField_VpConsts$Item)[$i3];

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = $r18;

     label2:
        $r5 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r6 = $r5[i0];

        if $r6 != null goto label3;

        $r14 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r15 = new com.android.phasebeam.ScriptField_VpConsts$Item;

        specialinvoke $r15.<com.android.phasebeam.ScriptField_VpConsts$Item: void <init>()>();

        $r14[i0] = $r15;

     label3:
        $r7 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r8 = $r7[i0];

        $r8.<com.android.phasebeam.ScriptField_VpConsts$Item: android.renderscript.Matrix4f MVP> = r1;

        if z0 == 0 goto label4;

        $r10 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        $r9 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i1 = virtualinvoke $r9.<android.renderscript.Element: int getBytesSize()>();

        $i2 = i0 * $i1;

        virtualinvoke $r10.<android.renderscript.FieldPacker: void reset(int)>($i2);

        $r11 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        virtualinvoke $r11.<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>(r1);

        $r13 = new android.renderscript.FieldPacker;

        specialinvoke $r13.<android.renderscript.FieldPacker: void <init>(int)>(64);

        r2 = $r13;

        virtualinvoke r2.<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>(r1);

        $r12 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation>;

        virtualinvoke $r12.<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>(i0, 0, r2);

     label4:
        return;
    }

    public synchronized void set_scaleSize(int, float, boolean)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0;
        boolean z0;
        android.renderscript.FieldPacker r1, $r2, $r9, $r10, $r11, $r18;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r3, $r4, $r6, $r15, $r16;
        com.android.phasebeam.ScriptField_VpConsts$Item $r5, $r7, $r12;
        android.renderscript.Element $r8, $r17;
        android.renderscript.Allocation $r13;
        android.renderscript.Type $r14, $r19;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        if $r2 != null goto label1;

        $r18 = new android.renderscript.FieldPacker;

        $r17 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i5 = virtualinvoke $r17.<android.renderscript.Element: int getBytesSize()>();

        $r19 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i7 = virtualinvoke $r19.<android.renderscript.Type: int getX()>();

        $i6 = $i5 * $i7;

        specialinvoke $r18.<android.renderscript.FieldPacker: void <init>(int)>($i6);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = $r18;

     label1:
        $r3 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r3 != null goto label2;

        $r14 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i4 = virtualinvoke $r14.<android.renderscript.Type: int getX()>();

        $r16 = newarray (com.android.phasebeam.ScriptField_VpConsts$Item)[$i4];

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = $r16;

     label2:
        $r4 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r5 = $r4[i0];

        if $r5 != null goto label3;

        $r15 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r12 = new com.android.phasebeam.ScriptField_VpConsts$Item;

        specialinvoke $r12.<com.android.phasebeam.ScriptField_VpConsts$Item: void <init>()>();

        $r15[i0] = $r12;

     label3:
        $r6 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r7 = $r6[i0];

        $r7.<com.android.phasebeam.ScriptField_VpConsts$Item: float scaleSize> = f0;

        if z0 == 0 goto label4;

        $r9 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        $r8 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i1 = virtualinvoke $r8.<android.renderscript.Element: int getBytesSize()>();

        $i2 = i0 * $i1;

        $i3 = $i2 + 64;

        virtualinvoke $r9.<android.renderscript.FieldPacker: void reset(int)>($i3);

        $r11 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        virtualinvoke $r11.<android.renderscript.FieldPacker: void addF32(float)>(f0);

        $r10 = new android.renderscript.FieldPacker;

        specialinvoke $r10.<android.renderscript.FieldPacker: void <init>(int)>(4);

        r1 = $r10;

        virtualinvoke r1.<android.renderscript.FieldPacker: void addF32(float)>(f0);

        $r13 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation>;

        virtualinvoke $r13.<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>(i0, 1, r1);

     label4:
        return;
    }

    public synchronized android.renderscript.Matrix4f get_MVP(int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r1, $r2;
        com.android.phasebeam.ScriptField_VpConsts$Item $r3;
        android.renderscript.Matrix4f $r4;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r3 = $r2[i0];

        $r4 = $r3.<com.android.phasebeam.ScriptField_VpConsts$Item: android.renderscript.Matrix4f MVP>;

        return $r4;
    }

    public synchronized float get_scaleSize(int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r1, $r2;
        com.android.phasebeam.ScriptField_VpConsts$Item $r3;
        float $f0;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r1 != null goto label1;

        return 0.0F;

     label1:
        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r3 = $r2[i0];

        $f0 = $r3.<com.android.phasebeam.ScriptField_VpConsts$Item: float scaleSize>;

        return $f0;
    }

    public synchronized void copyAll()
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0, $i1;
        com.android.phasebeam.ScriptField_VpConsts$Item[] $r1, $r4;
        android.renderscript.FieldPacker $r2;
        android.renderscript.Allocation $r3;
        com.android.phasebeam.ScriptField_VpConsts$Item $r5;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 = 0;

     label1:
        $r1 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r4 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        $r5 = $r4[i0];

        specialinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: void copyToArray(com.android.phasebeam.ScriptField_VpConsts$Item,int)>($r5, i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation>;

        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        virtualinvoke $r3.<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>(0, $r2);

        return;
    }

    public synchronized void resize(int)
    {
        com.android.phasebeam.ScriptField_VpConsts r0;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.phasebeam.ScriptField_VpConsts$Item[] r1, $r2, $r8, $r9;
        android.renderscript.Allocation $r3;
        android.renderscript.FieldPacker $r4, $r5;
        android.renderscript.Element $r6;
        android.renderscript.Type $r7;

        r0 := @this: com.android.phasebeam.ScriptField_VpConsts;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        if $r2 == null goto label2;

        $r8 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        i1 = lengthof $r8;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i0);

        if i0 != i1 goto label1;

        return;

     label1:
        r1 = newarray (com.android.phasebeam.ScriptField_VpConsts$Item)[i0];

        $r9 = r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r1, 0, i2);

        r0.<com.android.phasebeam.ScriptField_VpConsts: com.android.phasebeam.ScriptField_VpConsts$Item[] mItemArray> = r1;

     label2:
        $r3 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Allocation mAllocation>;

        virtualinvoke $r3.<android.renderscript.Allocation: void resize(int)>(i0);

        $r4 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer>;

        if $r4 == null goto label3;

        $r5 = new android.renderscript.FieldPacker;

        $r6 = r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Element mElement>;

        $i3 = virtualinvoke $r6.<android.renderscript.Element: int getBytesSize()>();

        $r7 = virtualinvoke r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.Type getType()>();

        $i4 = virtualinvoke $r7.<android.renderscript.Type: int getX()>();

        $i5 = $i3 * $i4;

        specialinvoke $r5.<android.renderscript.FieldPacker: void <init>(int)>($i5);

        r0.<com.android.phasebeam.ScriptField_VpConsts: android.renderscript.FieldPacker mIOBuffer> = $r5;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0;

        $r0 = new java.lang.ref.WeakReference;

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(null);

        <com.android.phasebeam.ScriptField_VpConsts: java.lang.ref.WeakReference mElementCache> = $r0;

        return;
    }
}
