public class android.net.wifi.WifiSsid extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    public final java.io.ByteArrayOutputStream octets;
    private static final int HEX_RADIX;
    public static final java.lang.String NONE;
    public static final android.os.Parcelable$Creator CREATOR;

    private void <init>()
    {
        android.net.wifi.WifiSsid r0;
        java.io.ByteArrayOutputStream $r1;

        r0 := @this: android.net.wifi.WifiSsid;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(32);

        r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets> = $r1;

        return;
    }

    public static android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)
    {
        java.lang.String r0;
        android.net.wifi.WifiSsid r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new android.net.wifi.WifiSsid;

        specialinvoke $r2.<android.net.wifi.WifiSsid: void <init>()>();

        r1 = $r2;

        specialinvoke r1.<android.net.wifi.WifiSsid: void convertToBytes(java.lang.String)>(r0);

        return r1;
    }

    public static android.net.wifi.WifiSsid createFromHex(java.lang.String)
    {
        java.lang.String r0, $r4;
        android.net.wifi.WifiSsid r1, $r3;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        java.io.ByteArrayOutputStream $r5;
        java.lang.NumberFormatException $r6;

        r0 := @parameter0: java.lang.String;

        $r3 = new android.net.wifi.WifiSsid;

        specialinvoke $r3.<android.net.wifi.WifiSsid: void <init>()>();

        r1 = $r3;

        if r0 != null goto label1;

        return r1;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0X");

        if $z1 == 0 goto label3;

     label2:
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

     label3:
        i0 = 0;

     label4:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if i0 >= $i3 goto label9;

     label5:
        $i4 = i0 + 2;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i4);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        i1 = 0;

     label8:
        $r5 = r1.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(int)>(i1);

        i0 = i0 + 2;

        goto label4;

     label9:
        return r1;

        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    private void convertToBytes(java.lang.String)
    {
        android.net.wifi.WifiSsid r0;
        java.lang.String r1, $r3;
        int i0, $i2, $i4, $i11, $i13, $i15, $i16, i17, i18, i19;
        char c1, $c3, $c5, $c6, $c7, $c8, $c9, $c10, $c12, $c14;
        java.io.ByteArrayOutputStream $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        java.lang.NumberFormatException $r13;

        r0 := @this: android.net.wifi.WifiSsid;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label01:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i2 goto label22;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        lookupswitch(c1)
        {
            case 92: goto label02;
            default: goto label20;
        };

     label02:
        i0 = i0 + 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        lookupswitch($c3)
        {
            case 34: goto label04;
            case 48: goto label16;
            case 49: goto label16;
            case 50: goto label16;
            case 51: goto label16;
            case 52: goto label16;
            case 53: goto label16;
            case 54: goto label16;
            case 55: goto label16;
            case 92: goto label03;
            case 101: goto label08;
            case 110: goto label05;
            case 114: goto label06;
            case 116: goto label07;
            case 120: goto label09;
            default: goto label19;
        };

     label03:
        $r10 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(int)>(92);

        i0 = i0 + 1;

        goto label21;

     label04:
        $r14 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r14.<java.io.ByteArrayOutputStream: void write(int)>(34);

        i0 = i0 + 1;

        goto label21;

     label05:
        $r9 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(int)>(10);

        i0 = i0 + 1;

        goto label21;

     label06:
        $r6 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(int)>(13);

        i0 = i0 + 1;

        goto label21;

     label07:
        $r7 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(int)>(9);

        i0 = i0 + 1;

        goto label21;

     label08:
        $r8 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(int)>(27);

        i0 = i0 + 1;

        goto label21;

     label09:
        i0 = i0 + 1;

     label10:
        $i4 = i0 + 2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i4);

        i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        i17 = -1;

     label13:
        if i17 >= 0 goto label15;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        i18 = staticinvoke <java.lang.Character: int digit(char,int)>($c5, 16);

        if i18 >= 0 goto label14;

        goto label21;

     label14:
        $r5 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(int)>(i18);

        i0 = i0 + 1;

        goto label21;

     label15:
        $r4 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i17);

        i0 = i0 + 2;

        goto label21;

     label16:
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        i19 = $c6 - 48;

        i0 = i0 + 1;

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c8 < 48 goto label17;

        $c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c12 > 55 goto label17;

        $i15 = i19 * 8;

        $c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i16 = $i15 + $c14;

        i19 = $i16 - 48;

        i0 = i0 + 1;

     label17:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c7 < 48 goto label18;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c9 > 55 goto label18;

        $i11 = i19 * 8;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i13 = $i11 + $c10;

        i19 = $i13 - 48;

        i0 = i0 + 1;

     label18:
        $r11 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void write(int)>(i19);

        goto label21;

     label19:
        goto label21;

     label20:
        $r12 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        virtualinvoke $r12.<java.io.ByteArrayOutputStream: void write(int)>(c1);

        i0 = i0 + 1;

     label21:
        goto label01;

     label22:
        return;

        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    public java.lang.String toString()
    {
        android.net.wifi.WifiSsid r0;
        byte[] r1;
        java.nio.charset.Charset r2;
        java.nio.charset.CharsetDecoder r3, $r8, $r10;
        java.nio.CharBuffer r4;
        java.nio.charset.CoderResult r5;
        java.io.ByteArrayOutputStream $r6, $r7;
        int $i0;
        boolean $z0, $z1;
        java.nio.charset.CodingErrorAction $r9, $r11;
        java.nio.ByteBuffer $r12;
        java.lang.String $r14;

        r0 := @this: android.net.wifi.WifiSsid;

        $r6 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        r1 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        $i0 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = specialinvoke r0.<android.net.wifi.WifiSsid: boolean isArrayAllZeroes(byte[])>(r1);

        if $z0 == 0 goto label2;

     label1:
        return "";

     label2:
        r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r8 = virtualinvoke r2.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r9 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r10 = virtualinvoke $r8.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r9);

        $r11 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        r3 = virtualinvoke $r10.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r11);

        r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(32);

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r5 = virtualinvoke r3.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r12, r4, 1);

        virtualinvoke r4.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        $z1 = virtualinvoke r5.<java.nio.charset.CoderResult: boolean isError()>();

        if $z1 == 0 goto label3;

        return "<unknown ssid>";

     label3:
        $r14 = virtualinvoke r4.<java.nio.CharBuffer: java.lang.String toString()>();

        return $r14;
    }

    private boolean isArrayAllZeroes(byte[])
    {
        android.net.wifi.WifiSsid r0;
        byte[] r1;
        int i0, $i1;
        byte $b2;

        r0 := @this: android.net.wifi.WifiSsid;

        r1 := @parameter0: byte[];

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $b2 = r1[i0];

        if $b2 == 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public boolean isHidden()
    {
        android.net.wifi.WifiSsid r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiSsid;

        $r1 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $z0 = specialinvoke r0.<android.net.wifi.WifiSsid: boolean isArrayAllZeroes(byte[])>($r2);

        return $z0;
    }

    public byte[] getOctets()
    {
        android.net.wifi.WifiSsid r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;

        r0 := @this: android.net.wifi.WifiSsid;

        $r1 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public java.lang.String getHexString()
    {
        android.net.wifi.WifiSsid r0;
        java.lang.String r1, $r9;
        byte[] r2;
        int i0, $i1;
        java.io.ByteArrayOutputStream $r3;
        java.lang.StringBuilder $r4, $r5, $r10;
        java.lang.Object[] $r6;
        byte $b2;
        java.util.Locale $r7;
        java.lang.Byte $r8;

        r0 := @this: android.net.wifi.WifiSsid;

        r1 = "0x";

        r2 = virtualinvoke r0.<android.net.wifi.WifiSsid: byte[] getOctets()>();

        i0 = 0;

     label1:
        $r3 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        $i1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[1];

        $b2 = r2[i0];

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "%02x", $r6);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int describeContents()
    {
        android.net.wifi.WifiSsid r0;

        r0 := @this: android.net.wifi.WifiSsid;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.WifiSsid r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.io.ByteArrayOutputStream $r2, $r3;
        byte[] $r4;

        r0 := @this: android.net.wifi.WifiSsid;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        $i1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r3 = r0.<android.net.wifi.WifiSsid: java.io.ByteArrayOutputStream octets>;

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r4);

        return;
    }

    void <init>(android.net.wifi.WifiSsid$1)
    {
        android.net.wifi.WifiSsid r0;
        android.net.wifi.WifiSsid$1 r1;

        r0 := @this: android.net.wifi.WifiSsid;

        r1 := @parameter0: android.net.wifi.WifiSsid$1;

        specialinvoke r0.<android.net.wifi.WifiSsid: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        android.net.wifi.WifiSsid$1 $r0;

        <android.net.wifi.WifiSsid: java.lang.String NONE> = "<unknown ssid>";

        <android.net.wifi.WifiSsid: int HEX_RADIX> = 16;

        <android.net.wifi.WifiSsid: java.lang.String TAG> = "WifiSsid";

        $r0 = new android.net.wifi.WifiSsid$1;

        specialinvoke $r0.<android.net.wifi.WifiSsid$1: void <init>()>();

        <android.net.wifi.WifiSsid: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
