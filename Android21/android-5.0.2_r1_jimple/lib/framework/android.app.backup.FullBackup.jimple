public class android.app.backup.FullBackup extends java.lang.Object
{
    static final java.lang.String TAG;
    public static final java.lang.String APK_TREE_TOKEN;
    public static final java.lang.String OBB_TREE_TOKEN;
    public static final java.lang.String ROOT_TREE_TOKEN;
    public static final java.lang.String DATA_TREE_TOKEN;
    public static final java.lang.String NO_BACKUP_TREE_TOKEN;
    public static final java.lang.String DATABASE_TREE_TOKEN;
    public static final java.lang.String SHAREDPREFS_TREE_TOKEN;
    public static final java.lang.String MANAGED_EXTERNAL_TREE_TOKEN;
    public static final java.lang.String CACHE_TREE_TOKEN;
    public static final java.lang.String SHARED_STORAGE_TOKEN;
    public static final java.lang.String APPS_PREFIX;
    public static final java.lang.String SHARED_PREFIX;
    public static final java.lang.String FULL_BACKUP_INTENT_ACTION;
    public static final java.lang.String FULL_RESTORE_INTENT_ACTION;
    public static final java.lang.String CONF_TOKEN_INTENT_EXTRA;

    public void <init>()
    {
        android.app.backup.FullBackup r0;

        r0 := @this: android.app.backup.FullBackup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native int backupToTar(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.backup.BackupDataOutput);

    public static void restoreFile(android.os.ParcelFileDescriptor, long, int, long, long, java.io.File) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        long l0, l2, l3, l4, $l10, $l13, $l14, l19;
        int i1, i5, i6, $i9, $i11, $i15;
        java.io.File r1, r3;
        java.io.FileOutputStream r2, $r15;
        java.io.FileInputStream r4, $r5;
        java.io.IOException r6, $r16, $r24, r30;
        byte $b7, $b8, $b12;
        java.io.FileDescriptor $r7;
        java.lang.String $r8, $r14, $r21, $r25, $r27, $r29;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r17, $r20, $r22, $r23, $r26, $r28;
        boolean $z3;
        android.system.ErrnoException $r18, r32;
        byte[] r31;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r1 := @parameter5: java.io.File;

        if i1 != 2 goto label01;

        if r1 == null goto label16;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        goto label16;

     label01:
        r2 = null;

     label02:
        if r1 == null goto label04;

        r3 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $z3 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label03;

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

     label03:
        $r15 = new java.io.FileOutputStream;

        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r15;

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        r30 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create/open file ");

        $r21 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FullBackup", $r25, r30);

     label06:
        r31 = newarray (byte)[32768];

        l4 = l0;

        $r5 = new java.io.FileInputStream;

        $r7 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r7);

        r4 = $r5;

     label07:
        $b7 = l0 cmp 0L;

        if $b7 <= 0 goto label15;

        $i11 = lengthof r31;

        $l10 = (long) $i11;

        $b12 = l0 cmp $l10;

        if $b12 <= 0 goto label08;

        $i15 = lengthof r31;

        goto label09;

     label08:
        $i15 = (int) l0;

     label09:
        i5 = $i15;

        i6 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[],int,int)>(r31, 0, i5);

        if i6 > 0 goto label10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete read: expected ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");

        $l14 = l4 - l0;

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FullBackup", $r14);

        goto label15;

     label10:
        if r2 == null goto label14;

     label11:
        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r31, 0, i6);

     label12:
        goto label14;

     label13:
        $r24 := @caughtexception;

        r6 = $r24;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write to file ");

        $r27 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FullBackup", $r29, r6);

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        r2 = null;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label14:
        $l13 = (long) i6;

        l0 = l0 - $l13;

        goto label07;

     label15:
        if r2 == null goto label16;

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label16:
        $b8 = l2 cmp 0L;

        if $b8 < 0 goto label21;

        if r1 == null goto label21;

     label17:
        l19 = l2 & 448L;

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $i9 = (int) l19;

        staticinvoke <android.system.Os: void chmod(java.lang.String,int)>($r8, $i9);

     label18:
        goto label20;

     label19:
        $r18 := @caughtexception;

        r32 = $r18;

        virtualinvoke r32.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

     label20:
        virtualinvoke r1.<java.io.File: boolean setLastModified(long)>(l3);

     label21:
        return;

        catch java.io.IOException from label02 to label04 with label05;
        catch java.io.IOException from label11 to label12 with label13;
        catch android.system.ErrnoException from label17 to label18 with label19;
    }

    public static void <clinit>()
    {
        <android.app.backup.FullBackup: java.lang.String CONF_TOKEN_INTENT_EXTRA> = "conftoken";

        <android.app.backup.FullBackup: java.lang.String FULL_RESTORE_INTENT_ACTION> = "fullrest";

        <android.app.backup.FullBackup: java.lang.String FULL_BACKUP_INTENT_ACTION> = "fullback";

        <android.app.backup.FullBackup: java.lang.String SHARED_PREFIX> = "shared/";

        <android.app.backup.FullBackup: java.lang.String APPS_PREFIX> = "apps/";

        <android.app.backup.FullBackup: java.lang.String SHARED_STORAGE_TOKEN> = "shared";

        <android.app.backup.FullBackup: java.lang.String CACHE_TREE_TOKEN> = "c";

        <android.app.backup.FullBackup: java.lang.String MANAGED_EXTERNAL_TREE_TOKEN> = "ef";

        <android.app.backup.FullBackup: java.lang.String SHAREDPREFS_TREE_TOKEN> = "sp";

        <android.app.backup.FullBackup: java.lang.String DATABASE_TREE_TOKEN> = "db";

        <android.app.backup.FullBackup: java.lang.String NO_BACKUP_TREE_TOKEN> = "nb";

        <android.app.backup.FullBackup: java.lang.String DATA_TREE_TOKEN> = "f";

        <android.app.backup.FullBackup: java.lang.String ROOT_TREE_TOKEN> = "r";

        <android.app.backup.FullBackup: java.lang.String OBB_TREE_TOKEN> = "obb";

        <android.app.backup.FullBackup: java.lang.String APK_TREE_TOKEN> = "a";

        <android.app.backup.FullBackup: java.lang.String TAG> = "FullBackup";

        return;
    }
}
