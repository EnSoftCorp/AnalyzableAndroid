class android.inputmethodservice.IInputMethodWrapper extends com.android.internal.view.IInputMethod$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private static final java.lang.String TAG;
    private static final int DO_DUMP;
    private static final int DO_ATTACH_TOKEN;
    private static final int DO_SET_INPUT_CONTEXT;
    private static final int DO_UNSET_INPUT_CONTEXT;
    private static final int DO_START_INPUT;
    private static final int DO_RESTART_INPUT;
    private static final int DO_CREATE_SESSION;
    private static final int DO_SET_SESSION_ENABLED;
    private static final int DO_REVOKE_SESSION;
    private static final int DO_SHOW_SOFT_INPUT;
    private static final int DO_HIDE_SOFT_INPUT;
    private static final int DO_CHANGE_INPUTMETHOD_SUBTYPE;
    final java.lang.ref.WeakReference mTarget;
    final android.content.Context mContext;
    final com.android.internal.os.HandlerCaller mCaller;
    final java.lang.ref.WeakReference mInputMethod;
    final int mTargetSdkVersion;

    public void <init>(android.inputmethodservice.AbstractInputMethodService, android.view.inputmethod.InputMethod)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.inputmethodservice.AbstractInputMethodService r1;
        android.view.inputmethod.InputMethod r2;
        java.lang.ref.WeakReference $r3, $r7;
        android.content.Context $r4, $r6;
        com.android.internal.os.HandlerCaller $r5;
        android.content.pm.ApplicationInfo $r8;
        int $i0;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.inputmethodservice.AbstractInputMethodService;

        r2 := @parameter1: android.view.inputmethod.InputMethod;

        specialinvoke r0.<com.android.internal.view.IInputMethod$Stub: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget> = $r3;

        $r4 = virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: android.content.Context getApplicationContext()>();

        r0.<android.inputmethodservice.IInputMethodWrapper: android.content.Context mContext> = $r4;

        $r5 = new com.android.internal.os.HandlerCaller;

        $r6 = r0.<android.inputmethodservice.IInputMethodWrapper: android.content.Context mContext>;

        specialinvoke $r5.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>($r6, null, r0, 1);

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller> = $r5;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod> = $r7;

        $r8 = virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r8.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion> = $i0;

        return;
    }

    public android.view.inputmethod.InputMethod getInternalInputMethod()
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethod $r3;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.inputmethod.InputMethod) $r2;

        return $r3;
    }

    public void executeMessage(android.os.Message)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.Message r1;
        android.view.inputmethod.InputMethod r2;
        android.inputmethodservice.AbstractInputMethodService r3;
        com.android.internal.os.SomeArgs r4, r68, r72, r76;
        java.lang.RuntimeException r5, $r63;
        java.lang.Throwable r6, $r65;
        java.lang.ref.WeakReference $r7, $r40;
        java.lang.Object $r8, $r9, $r11, $r13, $r16, $r17, $r20, $r21, $r22, $r25, $r28, $r29, $r30, $r31, $r32, $r34, $r36, $r37, $r38, $r42, $r43, $r44, $r45, $r51, $r64, r67;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        android.view.inputmethod.InputMethodSubtype $r10;
        android.os.ResultReceiver $r12, $r14;
        android.view.inputmethod.InputMethodSession $r15, $r18;
        boolean $z0;
        android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper $r19;
        android.view.InputChannel $r23;
        com.android.internal.view.IInputSessionCallback $r24;
        android.content.Context $r26;
        com.android.internal.view.InputConnectionWrapper $r27, $r35, r70, r74;
        android.view.inputmethod.InputBinding $r33;
        android.os.IBinder $r39;
        java.lang.String[] $r41, $r48;
        java.io.FileDescriptor $r46;
        java.io.PrintWriter $r47, $r59;
        java.lang.StringBuilder $r49, $r52, $r53, $r54, $r55, $r57, $r58, $r60, $r61;
        java.util.concurrent.CountDownLatch $r50;
        java.lang.String $r56, $r62, $r66;
        com.android.internal.view.IInputContext r69, r73;
        android.view.inputmethod.EditorInfo r71, r75;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.Message;

        $r7 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.inputmethod.InputMethod) $r8;

        if r2 != null goto label01;

        $i9 = r1.<android.os.Message: int what>;

        if $i9 == 1 goto label01;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method reference was null, ignoring message: ");

        $i7 = r1.<android.os.Message: int what>;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r62);

        return;

     label01:
        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 10: goto label13;
            case 20: goto label14;
            case 30: goto label15;
            case 32: goto label16;
            case 34: goto label19;
            case 40: goto label22;
            case 45: goto label23;
            case 50: goto label26;
            case 60: goto label27;
            case 70: goto label28;
            case 80: goto label29;
            default: goto label30;
        };

     label02:
        $r40 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r37 = virtualinvoke $r40.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.inputmethodservice.AbstractInputMethodService) $r37;

        if r3 != null goto label03;

        return;

     label03:
        $r38 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (com.android.internal.os.SomeArgs) $r38;

     label04:
        $r44 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r46 = (java.io.FileDescriptor) $r44;

        $r43 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r47 = (java.io.PrintWriter) $r43;

        $r42 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r41 = (java.lang.String[]) $r42;

        $r48 = (java.lang.String[]) $r41;

        virtualinvoke r3.<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r46, $r47, $r48);

     label05:
        goto label07;

     label06:
        $r63 := @caughtexception;

        r5 = $r63;

        $r64 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r59 = (java.io.PrintWriter) $r64;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r66 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r59.<java.io.PrintWriter: void println(java.lang.String)>($r66);

     label07:
        $r45 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r67 = $r45;

        entermonitor $r45;

     label08:
        $r51 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        $r50 = (java.util.concurrent.CountDownLatch) $r51;

        virtualinvoke $r50.<java.util.concurrent.CountDownLatch: void countDown()>();

        exitmonitor r67;

     label09:
        goto label12;

     label10:
        $r65 := @caughtexception;

        r6 = $r65;

        exitmonitor r67;

     label11:
        throw r6;

     label12:
        virtualinvoke r4.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label13:
        $r34 = r1.<android.os.Message: java.lang.Object obj>;

        $r39 = (android.os.IBinder) $r34;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>($r39);

        return;

     label14:
        $r36 = r1.<android.os.Message: java.lang.Object obj>;

        $r33 = (android.view.inputmethod.InputBinding) $r36;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>($r33);

        return;

     label15:
        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void unbindInput()>();

        return;

     label16:
        $r31 = r1.<android.os.Message: java.lang.Object obj>;

        r68 = (com.android.internal.os.SomeArgs) $r31;

        $r32 = r68.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r69 = (com.android.internal.view.IInputContext) $r32;

        if r69 == null goto label17;

        $r35 = new com.android.internal.view.InputConnectionWrapper;

        specialinvoke $r35.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>(r69);

        goto label18;

     label17:
        $r35 = null;

     label18:
        r70 = $r35;

        $r30 = r68.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r71 = (android.view.inputmethod.EditorInfo) $r30;

        $i5 = r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion>;

        virtualinvoke r71.<android.view.inputmethod.EditorInfo: void makeCompatible(int)>($i5);

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>(r70, r71);

        virtualinvoke r68.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label19:
        $r25 = r1.<android.os.Message: java.lang.Object obj>;

        r72 = (com.android.internal.os.SomeArgs) $r25;

        $r28 = r72.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r73 = (com.android.internal.view.IInputContext) $r28;

        if r73 == null goto label20;

        $r27 = new com.android.internal.view.InputConnectionWrapper;

        specialinvoke $r27.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>(r73);

        goto label21;

     label20:
        $r27 = null;

     label21:
        r74 = $r27;

        $r29 = r72.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r75 = (android.view.inputmethod.EditorInfo) $r29;

        $i4 = r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion>;

        virtualinvoke r75.<android.view.inputmethod.EditorInfo: void makeCompatible(int)>($i4);

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>(r74, r75);

        virtualinvoke r72.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label22:
        $r20 = r1.<android.os.Message: java.lang.Object obj>;

        r76 = (com.android.internal.os.SomeArgs) $r20;

        $r19 = new android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper;

        $r26 = r0.<android.inputmethodservice.IInputMethodWrapper: android.content.Context mContext>;

        $r22 = r76.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r23 = (android.view.InputChannel) $r22;

        $r21 = r76.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r24 = (com.android.internal.view.IInputSessionCallback) $r21;

        specialinvoke $r19.<android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper: void <init>(android.content.Context,android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>($r26, $r23, $r24);

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod$SessionCallback)>($r19);

        virtualinvoke r76.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label23:
        $r17 = r1.<android.os.Message: java.lang.Object obj>;

        $r18 = (android.view.inputmethod.InputMethodSession) $r17;

        $i3 = r1.<android.os.Message: int arg1>;

        if $i3 == 0 goto label24;

        $z0 = 1;

        goto label25;

     label24:
        $z0 = 0;

     label25:
        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>($r18, $z0);

        return;

     label26:
        $r16 = r1.<android.os.Message: java.lang.Object obj>;

        $r15 = (android.view.inputmethod.InputMethodSession) $r16;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>($r15);

        return;

     label27:
        $i2 = r1.<android.os.Message: int arg1>;

        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        $r14 = (android.os.ResultReceiver) $r13;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>($i2, $r14);

        return;

     label28:
        $i1 = r1.<android.os.Message: int arg1>;

        $r11 = r1.<android.os.Message: java.lang.Object obj>;

        $r12 = (android.os.ResultReceiver) $r11;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>($i1, $r12);

        return;

     label29:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        $r10 = (android.view.inputmethod.InputMethodSubtype) $r9;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>($r10);

        return;

     label30:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i6 = r1.<android.os.Message: int what>;

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r56 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r56);

        return;

        catch java.lang.RuntimeException from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.inputmethodservice.AbstractInputMethodService r4;
        java.util.concurrent.CountDownLatch r5, $r9;
        java.lang.ref.WeakReference $r7;
        java.lang.Object $r8;
        int $i0, $i1, $i2;
        com.android.internal.os.HandlerCaller $r10, $r11;
        android.os.Message $r12;
        java.util.concurrent.TimeUnit $r13;
        boolean $z0;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19;
        java.lang.String $r18;
        java.lang.InterruptedException $r20;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r7 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.inputmethodservice.AbstractInputMethodService) $r8;

        if r4 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r4.<android.inputmethodservice.AbstractInputMethodService: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump InputMethodManager from from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        return;

     label2:
        $r9 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r9.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r5 = $r9;

        $r11 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r10 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r12 = virtualinvoke $r10.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r1, r2, r3, r5);

        virtualinvoke $r11.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r12);

     label3:
        $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r13);

        if $z0 != 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Timeout waiting for dump");

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Interrupted waiting for dump");

     label6:
        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    public void attachToken(android.os.IBinder)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.IBinder r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(10, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void bindInput(android.view.inputmethod.InputBinding)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.inputmethod.InputBinding r1, r3, $r7;
        com.android.internal.view.InputConnectionWrapper r2, $r4;
        android.os.IBinder $r5;
        com.android.internal.view.IInputContext $r6;
        com.android.internal.os.HandlerCaller $r8, $r9;
        android.os.Message $r10;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.inputmethod.InputBinding;

        $r4 = new com.android.internal.view.InputConnectionWrapper;

        $r5 = virtualinvoke r1.<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>();

        $r6 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>($r5);

        specialinvoke $r4.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>($r6);

        r2 = $r4;

        $r7 = new android.view.inputmethod.InputBinding;

        specialinvoke $r7.<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>(r2, r1);

        r3 = $r7;

        $r9 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r8 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r10 = virtualinvoke $r8.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(20, r3);

        virtualinvoke $r9.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r10);

        return;
    }

    public void unbindInput()
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.os.Message $r3;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r1 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(30);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void startInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(32, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void restartInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(34, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void createSession(android.view.InputChannel, com.android.internal.view.IInputSessionCallback)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.InputChannel r1;
        com.android.internal.view.IInputSessionCallback r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.InputChannel;

        r2 := @parameter1: com.android.internal.view.IInputSessionCallback;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(40, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void setSessionEnabled(com.android.internal.view.IInputMethodSession, boolean)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputMethodSession r1;
        boolean z0;
        android.view.inputmethod.InputMethodSession r2;
        android.inputmethodservice.IInputMethodSessionWrapper $r3;
        com.android.internal.os.HandlerCaller $r4, $r5;
        android.os.Message $r6;
        byte $b0;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r13, $r15;
        java.lang.String $r10, $r14;
        java.lang.ClassCastException $r12, r16;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

        z0 := @parameter1: boolean;

     label1:
        $r3 = (android.inputmethodservice.IInputMethodSessionWrapper) r1;

        r2 = virtualinvoke $r3.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

        if r2 != null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is already finished: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r10);

     label2:
        return;

     label3:
        $r5 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        if z0 == 0 goto label4;

        $b0 = 1;

        goto label5;

     label4:
        $b0 = 0;

     label5:
        $r6 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(45, $b0, r2);

        virtualinvoke $r5.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r6);

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        r16 = $r12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r14, r16);

     label8:
        return;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label6 with label7;
    }

    public void revokeSession(com.android.internal.view.IInputMethodSession)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputMethodSession r1;
        android.view.inputmethod.InputMethodSession r2;
        android.inputmethodservice.IInputMethodSessionWrapper $r3;
        com.android.internal.os.HandlerCaller $r4, $r5;
        android.os.Message $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r15;
        java.lang.String $r10, $r14;
        java.lang.ClassCastException $r11, r16;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

     label1:
        $r3 = (android.inputmethodservice.IInputMethodSessionWrapper) r1;

        r2 = virtualinvoke $r3.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

        if r2 != null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is already finished: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r10);

     label2:
        return;

     label3:
        $r5 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r6 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(50, r2);

        virtualinvoke $r5.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r6);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        r16 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r14, r16);

     label6:
        return;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    public void showSoftInput(int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        int i0;
        android.os.ResultReceiver r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(60, i0, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void hideSoftInput(int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        int i0;
        android.os.ResultReceiver r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(70, i0, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.inputmethod.InputMethodSubtype r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(80, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.IInputMethodWrapper: int DO_CHANGE_INPUTMETHOD_SUBTYPE> = 80;

        <android.inputmethodservice.IInputMethodWrapper: int DO_HIDE_SOFT_INPUT> = 70;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SHOW_SOFT_INPUT> = 60;

        <android.inputmethodservice.IInputMethodWrapper: int DO_REVOKE_SESSION> = 50;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_SESSION_ENABLED> = 45;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CREATE_SESSION> = 40;

        <android.inputmethodservice.IInputMethodWrapper: int DO_RESTART_INPUT> = 34;

        <android.inputmethodservice.IInputMethodWrapper: int DO_START_INPUT> = 32;

        <android.inputmethodservice.IInputMethodWrapper: int DO_UNSET_INPUT_CONTEXT> = 30;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_INPUT_CONTEXT> = 20;

        <android.inputmethodservice.IInputMethodWrapper: int DO_ATTACH_TOKEN> = 10;

        <android.inputmethodservice.IInputMethodWrapper: int DO_DUMP> = 1;

        <android.inputmethodservice.IInputMethodWrapper: java.lang.String TAG> = "InputMethodWrapper";

        return;
    }
}
