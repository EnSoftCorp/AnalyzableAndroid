public class android.net.NetworkStatsHistory$DataStreamUtils extends java.lang.Object
{

    public void <init>()
    {
        android.net.NetworkStatsHistory$DataStreamUtils r0;

        r0 := @this: android.net.NetworkStatsHistory$DataStreamUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long[] readFullLongArray(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2;
        long[] r1;
        long $l3;
        java.net.ProtocolException $r2;

        r0 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        if i0 >= 0 goto label1;

        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("negative array size");

        throw $r2;

     label1:
        r1 = newarray (long)[i0];

        i1 = 0;

     label2:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label3;

        $l3 = virtualinvoke r0.<java.io.DataInputStream: long readLong()>();

        r1[i1] = $l3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static long readVarLong(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        long l1, $l4, $l5;
        byte b2, $b3;
        java.net.ProtocolException $r1;
        short $s6;

        r0 := @parameter0: java.io.DataInputStream;

        i0 = 0;

        l1 = 0L;

     label1:
        if i0 >= 64 goto label3;

        b2 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();

        $b3 = b2 & 127;

        $l4 = (long) $b3;

        $l5 = $l4 << i0;

        l1 = l1 | $l5;

        $s6 = b2 & 128;

        if $s6 != 0 goto label2;

        return l1;

     label2:
        i0 = i0 + 7;

        goto label1;

     label3:
        $r1 = new java.net.ProtocolException;

        specialinvoke $r1.<java.net.ProtocolException: void <init>(java.lang.String)>("malformed long");

        throw $r1;
    }

    public static void writeVarLong(java.io.DataOutputStream, long) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        long l0, $l1;
        byte $b2;
        int $i3, $i4, $i5, $i6;

        r0 := @parameter0: java.io.DataOutputStream;

        l0 := @parameter1: long;

     label1:
        $l1 = l0 & -128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        $i6 = (int) l0;

        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i6);

        return;

     label2:
        $i3 = (int) l0;

        $i4 = $i3 & 127;

        $i5 = $i4 | 128;

        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i5);

        l0 = l0 >>> 7;

        goto label1;
    }

    public static long[] readVarLongArray(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i2;
        long[] r1;
        long $l3;
        java.net.ProtocolException $r2;

        r0 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        if i0 != -1 goto label1;

        return null;

     label1:
        if i0 >= 0 goto label2;

        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("negative array size");

        throw $r2;

     label2:
        r1 = newarray (long)[i0];

        i1 = 0;

     label3:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label4;

        $l3 = staticinvoke <android.net.NetworkStatsHistory$DataStreamUtils: long readVarLong(java.io.DataInputStream)>(r0);

        r1[i1] = $l3;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r1;
    }

    public static void writeVarLongArray(java.io.DataOutputStream, long[], int) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        long[] r1;
        int i0, i1, $i2;
        long $l3;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>(-1);

        return;

     label1:
        $i2 = lengthof r1;

        if i0 <= $i2 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size larger than length");

        throw $r2;

     label2:
        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $l3 = r1[i1];

        staticinvoke <android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>(r0, $l3);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
}
