class android.speech.tts.TextToSpeech$17 extends java.lang.Object implements android.speech.tts.TextToSpeech$Action
{
    final java.io.File val$file;
    final java.lang.CharSequence val$text;
    final android.os.Bundle val$params;
    final java.lang.String val$utteranceId;
    final android.speech.tts.TextToSpeech this$0;

    void <init>(android.speech.tts.TextToSpeech, java.io.File, java.lang.CharSequence, android.os.Bundle, java.lang.String)
    {
        android.speech.tts.TextToSpeech$17 r0;
        android.speech.tts.TextToSpeech r1;
        java.io.File r2;
        java.lang.CharSequence r3;
        android.os.Bundle r4;
        java.lang.String r5;

        r0 := @this: android.speech.tts.TextToSpeech$17;

        r1 := @parameter0: android.speech.tts.TextToSpeech;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: java.lang.String;

        r0.<android.speech.tts.TextToSpeech$17: android.speech.tts.TextToSpeech this$0> = r1;

        r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file> = r2;

        r0.<android.speech.tts.TextToSpeech$17: java.lang.CharSequence val$text> = r3;

        r0.<android.speech.tts.TextToSpeech$17: android.os.Bundle val$params> = r4;

        r0.<android.speech.tts.TextToSpeech$17: java.lang.String val$utteranceId> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Integer run(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech$17 r0;
        android.speech.tts.ITextToSpeechService r1;
        android.os.ParcelFileDescriptor r2;
        int i0;
        java.io.FileNotFoundException r3, $r22;
        java.io.File $r4, $r5, $r14, $r16, $r26, $r31;
        boolean $z0, $z1;
        android.speech.tts.TextToSpeech $r6, $r9;
        android.os.IBinder $r7;
        android.os.Bundle $r8, $r11;
        java.lang.CharSequence $r10;
        java.lang.String $r12, $r18, $r25, $r36;
        java.lang.Integer $r13, $r20, $r30, $r34;
        java.lang.StringBuilder $r15, $r17, $r19, $r21, $r23, $r24, $r27, $r29, $r32, $r33, $r35;
        java.io.IOException $r28, r37;

        r0 := @this: android.speech.tts.TextToSpeech$17;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file>;

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $r14 = r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file>;

        $z1 = virtualinvoke $r14.<java.io.File: boolean canWrite()>();

        if $z1 != 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t write to ");

        $r16 = r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", $r18);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

     label2:
        return $r20;

     label3:
        $r5 = r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file>;

        r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r5, 738197504);

        $r6 = r0.<android.speech.tts.TextToSpeech$17: android.speech.tts.TextToSpeech this$0>;

        $r7 = staticinvoke <android.speech.tts.TextToSpeech: android.os.IBinder access$100(android.speech.tts.TextToSpeech)>($r6);

        $r10 = r0.<android.speech.tts.TextToSpeech$17: java.lang.CharSequence val$text>;

        $r9 = r0.<android.speech.tts.TextToSpeech$17: android.speech.tts.TextToSpeech this$0>;

        $r8 = r0.<android.speech.tts.TextToSpeech$17: android.os.Bundle val$params>;

        $r11 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$500(android.speech.tts.TextToSpeech,android.os.Bundle)>($r9, $r8);

        $r12 = r0.<android.speech.tts.TextToSpeech$17: java.lang.String val$utteranceId>;

        i0 = interfaceinvoke r1.<android.speech.tts.ITextToSpeechService: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>($r7, $r10, r2, $r11, $r12);

        virtualinvoke r2.<android.os.ParcelFileDescriptor: void close()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

     label4:
        return $r13;

     label5:
        $r22 := @caughtexception;

        r3 = $r22;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening file ");

        $r26 = r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file>;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r25, r3);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        return $r30;

     label6:
        $r28 := @caughtexception;

        r37 = $r28;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing file ");

        $r31 = r0.<android.speech.tts.TextToSpeech$17: java.io.File val$file>;

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r36, r37);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        return $r34;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    public volatile java.lang.Object run(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech$17 r0;
        android.speech.tts.ITextToSpeechService r1;
        java.lang.Integer $r2;

        r0 := @this: android.speech.tts.TextToSpeech$17;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        $r2 = virtualinvoke r0.<android.speech.tts.TextToSpeech$17: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>(r1);

        return $r2;
    }
}
