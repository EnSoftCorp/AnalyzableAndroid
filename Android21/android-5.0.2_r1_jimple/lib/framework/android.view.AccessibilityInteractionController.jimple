final class android.view.AccessibilityInteractionController extends java.lang.Object
{
    private static final boolean ENFORCE_NODE_TREE_CONSISTENT;
    private final java.util.ArrayList mTempAccessibilityNodeInfoList;
    private final android.os.Handler mHandler;
    private final android.view.ViewRootImpl mViewRootImpl;
    private final android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher;
    private final long mMyLooperThreadId;
    private final int mMyProcessId;
    private final java.util.ArrayList mTempArrayList;
    private final android.graphics.Point mTempPoint;
    private final android.graphics.Rect mTempRect;
    private final android.graphics.Rect mTempRect1;
    private final android.graphics.Rect mTempRect2;
    private android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId;

    public void <init>(android.view.ViewRootImpl)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl r1;
        android.os.Looper r2;
        java.util.ArrayList $r3, $r4;
        android.graphics.Point $r5;
        android.graphics.Rect $r6, $r7, $r8;
        android.view.ViewRootImpl$ViewRootHandler $r9;
        java.lang.Thread $r10;
        long $l0;
        int $i1;
        android.view.AccessibilityInteractionController$PrivateHandler $r11;
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher $r12;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempArrayList> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect2> = $r8;

        $r9 = r1.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        r2 = virtualinvoke $r9.<android.view.ViewRootImpl$ViewRootHandler: android.os.Looper getLooper()>();

        $r10 = virtualinvoke r2.<android.os.Looper: java.lang.Thread getThread()>();

        $l0 = virtualinvoke $r10.<java.lang.Thread: long getId()>();

        r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId> = $l0;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        r0.<android.view.AccessibilityInteractionController: int mMyProcessId> = $i1;

        $r11 = new android.view.AccessibilityInteractionController$PrivateHandler;

        specialinvoke $r11.<android.view.AccessibilityInteractionController$PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>(r0, r2);

        r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler> = $r11;

        r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl> = r1;

        $r12 = new android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        specialinvoke $r12.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>(r0, null);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher> = $r12;

        return;
    }

    private boolean isShown(android.view.View)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        android.view.View$AttachInfo $r2, $r3;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.View;

        $r2 = r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r3.<android.view.View$AttachInfo: int mWindowVisibility>;

        if $i0 != 0 goto label1;

        $z0 = virtualinvoke r1.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void findAccessibilityNodeInfoByAccessibilityIdClientThread(long, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4, $l8;
        android.graphics.Region r1;
        int i1, i2, i3, $i5, $i6, $i7;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.os.Handler $r6, $r7;
        android.view.accessibility.AccessibilityInteractionClient $r8;
        byte $b9;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.Region;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        r3 := @parameter7: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 2;

        r4.<android.os.Message: int arg1> = i2;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi1> = $i6;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi2> = $i5;

        r5.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        $i7 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i3 != $i7 goto label1;

        $l8 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b9 = l4 cmp $l8;

        if $b9 != 0 goto label1;

        $r8 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l4);

        virtualinvoke $r8.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r4);

        goto label2;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

     label2:
        return;
    }

    private void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.graphics.Region r5;
        java.util.ArrayList r6;
        java.lang.Throwable r7, $r27;
        java.lang.Object $r8, $r9, $r10, $r11;
        android.view.View $r12, r30;
        android.view.ViewRootImpl $r13, $r15, $r17, $r19, $r20, $r22, $r24;
        android.view.View$AttachInfo $r14, $r16, $r18, $r21, $r25;
        boolean $z0;
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher $r23;
        android.os.RemoteException $r26, $r28, $r29;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        $r8 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r8;

        i1 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r9 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r9;

        $r11 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r11;

        $r10 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (android.graphics.Region) $r10;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r6 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r6.<java.util.List: void clear()>();

     label01:
        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r12 = $r13.<android.view.ViewRootImpl: android.view.View mView>;

        if $r12 == null goto label02;

        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r17.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r16 != null goto label07;

     label02:
        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r14 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r14.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label03;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label03:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i3);

        interfaceinvoke r6.<java.util.List: void clear()>();

     label04:
        goto label06;

     label05:
        $r26 := @caughtexception;

     label06:
        return;

     label07:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r18 = $r19.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r18.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        if i1 != 2147483647 goto label08;

        $r22 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r30 = $r22.<android.view.ViewRootImpl: android.view.View mView>;

        goto label09;

     label08:
        r30 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label09:
        if r30 == null goto label10;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r30);

        if $z0 == 0 goto label10;

        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher>;

        virtualinvoke $r23.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List)>(r30, i2, i0, r6);

     label10:
        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r21 = $r20.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r21.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label11;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label11:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i3);

        interfaceinvoke r6.<java.util.List: void clear()>();

     label12:
        goto label20;

     label13:
        $r28 := @caughtexception;

        goto label20;

     label14:
        $r27 := @caughtexception;

        r7 = $r27;

     label15:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r25 = $r24.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r25.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label16;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label16:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i3);

        interfaceinvoke r6.<java.util.List: void clear()>();

     label17:
        goto label19;

     label18:
        $r29 := @caughtexception;

     label19:
        throw r7;

     label20:
        return;

        catch android.os.RemoteException from label02 to label04 with label05;
        catch android.os.RemoteException from label10 to label12 with label13;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label07 to label10 with label14;
        catch android.os.RemoteException from label15 to label17 with label18;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void findAccessibilityNodeInfosByViewIdClientThread(long, java.lang.String, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4, $l7;
        java.lang.String r1;
        android.graphics.Region r2;
        int i1, i2, i3, $i5, $i6;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.os.Message r5;
        com.android.internal.os.SomeArgs r6;
        android.os.Handler $r7, $r8;
        android.view.accessibility.AccessibilityInteractionClient $r9;
        byte $b8;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Region;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        l4 := @parameter7: long;

        r4 := @parameter8: android.view.MagnificationSpec;

        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r5 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage()>();

        r5.<android.os.Message: int what> = 3;

        r5.<android.os.Message: int arg1> = i2;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<android.os.Message: int arg2> = $i5;

        r6 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r6.<com.android.internal.os.SomeArgs: int argi1> = i1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r3;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r4;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r2;

        r5.<android.os.Message: java.lang.Object obj> = r6;

        $i6 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i3 != $i6 goto label1;

        $l7 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b8 = l4 cmp $l7;

        if $b8 != 0 goto label1;

        $r9 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l4);

        virtualinvoke $r9.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r5);

        goto label2;

     label1:
        $r8 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r5);

     label2:
        return;
    }

    private void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        java.lang.String r5;
        android.graphics.Region r6;
        java.util.ArrayList r7;
        java.lang.Throwable r8, $r35;
        java.lang.Object $r9, $r10, $r11, $r12, $r14;
        android.view.ViewRootImpl $r13, $r15, $r17, $r19, $r21, $r24, $r33, $r40;
        android.view.View $r16, r41;
        android.view.View$AttachInfo $r18, $r20, $r22, $r23, $r31, $r39;
        android.view.AccessibilityInteractionController$AddNodeInfosForViewId $r25, $r28, $r29, $r30, $r32;
        android.content.Context $r26;
        android.content.res.Resources $r27;
        android.os.RemoteException $r34, $r36, $r37, $r38;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r10 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r10;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        $r9 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r9;

        $r12 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r12;

        $r11 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (java.lang.String) $r11;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r6 = (android.graphics.Region) $r14;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r7 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r7.<java.util.List: void clear()>();

     label01:
        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r13.<android.view.ViewRootImpl: android.view.View mView>;

        if $r16 == null goto label02;

        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r20 = $r17.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r20 != null goto label07;

     label02:
        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r18 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r18.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r4);

        if r4 == null goto label03;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label03:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i2);

     label04:
        goto label06;

     label05:
        $r36 := @caughtexception;

     label06:
        return;

     label07:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r19.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        if i1 == 2147483647 goto label08;

        r41 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

        goto label09;

     label08:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r41 = $r21.<android.view.ViewRootImpl: android.view.View mView>;

     label09:
        if r41 == null goto label17;

        $r26 = virtualinvoke r41.<android.view.View: android.content.Context getContext()>();

        $r27 = virtualinvoke $r26.<android.content.Context: android.content.res.Resources getResources()>();

        i3 = virtualinvoke $r27.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r5, null, null);

        if i3 > 0 goto label15;

     label10:
        $r33 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r31 = $r33.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r31.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r4);

        if r4 == null goto label11;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label11:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i2);

     label12:
        goto label14;

     label13:
        $r34 := @caughtexception;

     label14:
        return;

     label15:
        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        if $r25 != null goto label16;

        $r32 = new android.view.AccessibilityInteractionController$AddNodeInfosForViewId;

        specialinvoke $r32.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>(r0, null);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId> = $r32;

     label16:
        $r29 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke $r29.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void init(int,java.util.List)>(i3, r7);

        $r30 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke r41.<android.view.View: android.view.View findViewByPredicate(com.android.internal.util.Predicate)>($r30);

        $r28 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke $r28.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void reset()>();

     label17:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r23 = $r24.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r23.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r4);

        if r4 == null goto label18;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label18:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i2);

     label19:
        goto label27;

     label20:
        $r37 := @caughtexception;

        goto label27;

     label21:
        $r35 := @caughtexception;

        r8 = $r35;

     label22:
        $r40 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r39 = $r40.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r39.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r4);

        if r4 == null goto label23;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label23:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i2);

     label24:
        goto label26;

     label25:
        $r38 := @caughtexception;

     label26:
        throw r8;

     label27:
        return;

        catch android.os.RemoteException from label02 to label04 with label05;
        catch android.os.RemoteException from label10 to label12 with label13;
        catch android.os.RemoteException from label17 to label19 with label20;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label07 to label10 with label21;
        catch java.lang.Throwable from label15 to label17 with label21;
        catch android.os.RemoteException from label22 to label24 with label25;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public void findAccessibilityNodeInfosByTextClientThread(long, java.lang.String, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4, $l9;
        java.lang.String r1;
        android.graphics.Region r2;
        int i1, i2, i3, $i5, $i6, $i7;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.os.Message r5;
        com.android.internal.os.SomeArgs r6;
        android.os.Handler $r7, $r8;
        byte $b8;
        android.view.accessibility.AccessibilityInteractionClient $r9;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Region;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        l4 := @parameter7: long;

        r4 := @parameter8: android.view.MagnificationSpec;

        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r5 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage()>();

        r5.<android.os.Message: int what> = 4;

        r5.<android.os.Message: int arg1> = i2;

        r6 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r4;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r6.<com.android.internal.os.SomeArgs: int argi1> = $i5;

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r6.<com.android.internal.os.SomeArgs: int argi2> = $i7;

        r6.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r6.<com.android.internal.os.SomeArgs: java.lang.Object arg4> = r2;

        r5.<android.os.Message: java.lang.Object obj> = r6;

        $i6 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i3 != $i6 goto label1;

        $l9 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b8 = l4 cmp $l9;

        if $b8 != 0 goto label1;

        $r9 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l4);

        virtualinvoke $r9.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r5);

        goto label2;

     label1:
        $r8 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r5);

     label2:
        return;
    }

    private void findAccessibilityNodeInfosByTextUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3, i4, i5;
        com.android.internal.os.SomeArgs r2;
        java.lang.String r3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r4;
        android.view.MagnificationSpec r5;
        android.graphics.Region r6;
        java.util.List r7, r12;
        android.view.accessibility.AccessibilityNodeProvider r8, r38;
        java.util.ArrayList r9;
        android.view.View r10, $r18, r37;
        java.lang.Throwable r11, $r35;
        java.lang.Object $r13, $r14, $r15, $r16, $r17, $r29;
        android.view.ViewRootImpl $r19, $r21, $r23, $r24, $r25, $r26, $r34;
        android.view.View$AttachInfo $r20, $r22, $r27, $r28, $r33;
        boolean $z0, $z1, $z2;
        android.view.accessibility.AccessibilityNodeInfo $r30;
        android.os.RemoteException $r31, $r32, $r36;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r13;

        $r15 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (java.lang.String) $r15;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r14;

        $r17 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (android.view.MagnificationSpec) $r17;

        i1 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r16 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        r6 = (android.graphics.Region) $r16;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r7 = null;

     label01:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r18 = $r19.<android.view.ViewRootImpl: android.view.View mView>;

        if $r18 == null goto label02;

        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r23.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r22 != null goto label07;

     label02:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r20 = $r21.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r20.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r5);

        if r5 == null goto label03;

        virtualinvoke r5.<android.view.MagnificationSpec: void recycle()>();

     label03:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r4.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i3);

     label04:
        goto label06;

     label05:
        $r36 := @caughtexception;

     label06:
        return;

     label07:
        $r26 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r27 = $r26.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r27.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        if i1 == 2147483647 goto label08;

        r37 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

        goto label09;

     label08:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r37 = $r24.<android.view.ViewRootImpl: android.view.View mView>;

     label09:
        if r37 == null goto label16;

        $z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r37);

        if $z1 == 0 goto label16;

        r8 = virtualinvoke r37.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r8 == null goto label11;

        if i2 == 2147483647 goto label10;

        r7 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r3, i2);

        goto label16;

     label10:
        r7 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r3, -1);

        goto label16;

     label11:
        if i2 != 2147483647 goto label16;

        r9 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempArrayList>;

        virtualinvoke r9.<java.util.ArrayList: void clear()>();

        virtualinvoke r37.<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>(r9, r3, 7);

        $z0 = virtualinvoke r9.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label16;

        r7 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r7.<java.util.List: void clear()>();

        i4 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        i5 = 0;

     label12:
        if i5 >= i4 goto label16;

        $r29 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r10 = (android.view.View) $r29;

        $z2 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r10);

        if $z2 == 0 goto label15;

        r38 = virtualinvoke r10.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r38 == null goto label14;

        r12 = virtualinvoke r38.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r3, -1);

        if r12 == null goto label13;

        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>(r12);

     label13:
        goto label15;

     label14:
        $r30 = virtualinvoke r10.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r30);

     label15:
        i5 = i5 + 1;

        goto label12;

     label16:
        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r28 = $r25.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r28.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r5);

        if r5 == null goto label17;

        virtualinvoke r5.<android.view.MagnificationSpec: void recycle()>();

     label17:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r4.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i3);

     label18:
        goto label26;

     label19:
        $r31 := @caughtexception;

        goto label26;

     label20:
        $r35 := @caughtexception;

        r11 = $r35;

     label21:
        $r34 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r33 = $r34.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r33.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r7, r5);

        if r5 == null goto label22;

        virtualinvoke r5.<android.view.MagnificationSpec: void recycle()>();

     label22:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(java.util.List,android.graphics.Region)>(r7, r6);

        interfaceinvoke r4.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r7, i3);

     label23:
        goto label25;

     label24:
        $r32 := @caughtexception;

     label25:
        throw r11;

     label26:
        return;

        catch android.os.RemoteException from label02 to label04 with label05;
        catch android.os.RemoteException from label16 to label18 with label19;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label07 to label16 with label20;
        catch android.os.RemoteException from label21 to label23 with label24;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void findFocusClientThread(long, int, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5, $l10;
        int i1, i2, i3, i4, $i6, $i7, $i8;
        android.graphics.Region r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.os.Handler $r6, $r7;
        byte $b9;
        android.view.accessibility.AccessibilityInteractionClient $r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Region;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        r3 := @parameter8: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 5;

        r4.<android.os.Message: int arg1> = i3;

        r4.<android.os.Message: int arg2> = i1;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r5.<com.android.internal.os.SomeArgs: int argi1> = i2;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi2> = $i6;

        $i8 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi3> = $i8;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        $i7 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i4 != $i7 goto label1;

        $l10 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b9 = l5 cmp $l10;

        if $b9 != 0 goto label1;

        $r8 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l5);

        virtualinvoke $r8.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r4);

        goto label2;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

     label2:
        return;
    }

    private void findFocusUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3, i4;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.graphics.Region r5;
        android.view.accessibility.AccessibilityNodeInfo r6, $r27, $r29;
        android.view.View r7, $r16, r41, r42;
        android.view.accessibility.AccessibilityNodeProvider r8, r43;
        java.lang.Throwable r9, $r40;
        java.lang.Object $r10, $r11, $r12, $r14;
        android.view.ViewRootImpl $r13, $r15, $r17, $r19, $r21, $r24, $r25, $r26, $r28, $r39;
        android.view.View$AttachInfo $r18, $r20, $r22, $r23, $r38;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r30, $r31, $r32;
        java.lang.IllegalArgumentException $r33;
        android.os.RemoteException $r34, $r35, $r37;
        java.lang.String $r36;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r10 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r10;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i4 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r12 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r12;

        $r11 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r11;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (android.graphics.Region) $r14;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r6 = null;

     label01:
        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r13.<android.view.ViewRootImpl: android.view.View mView>;

        if $r16 == null goto label02;

        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r20 = $r17.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r20 != null goto label07;

     label02:
        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r18 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r18.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label03;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label03:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r6, i2);

     label04:
        goto label06;

     label05:
        $r34 := @caughtexception;

     label06:
        return;

     label07:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r19.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        if i3 == 2147483647 goto label08;

        r41 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i3);

        goto label09;

     label08:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r41 = $r21.<android.view.ViewRootImpl: android.view.View mView>;

     label09:
        if r41 == null goto label20;

        $z2 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r41);

        if $z2 == 0 goto label20;

        lookupswitch(i1)
        {
            case 1: goto label15;
            case 2: goto label10;
            default: goto label19;
        };

     label10:
        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r7 = $r25.<android.view.ViewRootImpl: android.view.View mAccessibilityFocusedHost>;

        if r7 == null goto label20;

        $z0 = staticinvoke <android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>(r7, r41);

        if $z0 != 0 goto label11;

        goto label20;

     label11:
        $z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r7);

        if $z1 != 0 goto label12;

        goto label20;

     label12:
        r8 = virtualinvoke r7.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r8 == null goto label13;

        $r26 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r27 = $r26.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

        if $r27 == null goto label14;

        $r28 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r29 = $r28.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

        r6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>($r29);

        goto label14;

     label13:
        if i4 != 2147483647 goto label14;

        r6 = virtualinvoke r7.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label14:
        goto label20;

     label15:
        r42 = virtualinvoke r41.<android.view.View: android.view.View findFocus()>();

        if r42 == null goto label20;

        $z3 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r42);

        if $z3 != 0 goto label16;

        goto label20;

     label16:
        r43 = virtualinvoke r42.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r43 == null goto label17;

        r6 = virtualinvoke r43.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>(i1);

     label17:
        if r6 != null goto label18;

        r6 = virtualinvoke r42.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label18:
        goto label20;

     label19:
        $r33 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown focus type: ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r33;

     label20:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r23 = $r24.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r23.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label21;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label21:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r6, i2);

     label22:
        goto label30;

     label23:
        $r35 := @caughtexception;

        goto label30;

     label24:
        $r40 := @caughtexception;

        r9 = $r40;

     label25:
        $r39 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r38 = $r39.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r38.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label26;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label26:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r6, i2);

     label27:
        goto label29;

     label28:
        $r37 := @caughtexception;

     label29:
        throw r9;

     label30:
        return;

        catch android.os.RemoteException from label02 to label04 with label05;
        catch android.os.RemoteException from label20 to label22 with label23;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label07 to label20 with label24;
        catch android.os.RemoteException from label25 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public void focusSearchClientThread(long, int, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5, $l8;
        int i1, i2, i3, i4, $i6, $i7;
        android.graphics.Region r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.os.Handler $r6, $r7;
        android.view.accessibility.AccessibilityInteractionClient $r8;
        byte $b9;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Region;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        r3 := @parameter8: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 6;

        r4.<android.os.Message: int arg1> = i3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r4.<android.os.Message: int arg2> = $i6;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r5.<com.android.internal.os.SomeArgs: int argi2> = i1;

        r5.<com.android.internal.os.SomeArgs: int argi3> = i2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        $i7 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i4 != $i7 goto label1;

        $l8 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b9 = l5 cmp $l8;

        if $b9 != 0 goto label1;

        $r8 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l5);

        virtualinvoke $r8.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r4);

        goto label2;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

     label2:
        return;
    }

    private void focusSearchUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.graphics.Region r5;
        android.view.accessibility.AccessibilityNodeInfo r6;
        android.view.View r7, $r15, r30;
        java.lang.Throwable r8, $r24;
        java.lang.Object $r9, $r10, $r11, $r13;
        android.view.ViewRootImpl $r12, $r14, $r16, $r18, $r20, $r23, $r25;
        android.view.View$AttachInfo $r17, $r19, $r21, $r22, $r28;
        boolean $z0;
        android.os.RemoteException $r26, $r27, $r29;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r9;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r11 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r11;

        $r10 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r10;

        $r13 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (android.graphics.Region) $r13;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r6 = null;

     label01:
        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r15 = $r12.<android.view.ViewRootImpl: android.view.View mView>;

        if $r15 == null goto label02;

        $r16 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r19 = $r16.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r19 != null goto label07;

     label02:
        $r14 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r17 = $r14.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r17.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label03;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label03:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r6, i3);

     label04:
        goto label06;

     label05:
        $r29 := @caughtexception;

     label06:
        return;

     label07:
        $r18 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r21 = $r18.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r21.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        if i1 == 2147483647 goto label08;

        r30 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

        goto label09;

     label08:
        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r30 = $r20.<android.view.ViewRootImpl: android.view.View mView>;

     label09:
        if r30 == null goto label10;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r30);

        if $z0 == 0 goto label10;

        r7 = virtualinvoke r30.<android.view.View: android.view.View focusSearch(int)>(i2);

        if r7 == null goto label10;

        r6 = virtualinvoke r7.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label10:
        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r23.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label11;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label11:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r6, i3);

     label12:
        goto label20;

     label13:
        $r26 := @caughtexception;

        goto label20;

     label14:
        $r24 := @caughtexception;

        r8 = $r24;

     label15:
        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r28 = $r25.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r28.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r6, r4);

        if r4 == null goto label16;

        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label16:
        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r6, r5);

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r6, i3);

     label17:
        goto label19;

     label18:
        $r27 := @caughtexception;

     label19:
        throw r8;

     label20:
        return;

        catch android.os.RemoteException from label02 to label04 with label05;
        catch android.os.RemoteException from label10 to label12 with label13;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label07 to label10 with label14;
        catch android.os.RemoteException from label15 to label17 with label18;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void performAccessibilityActionClientThread(long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5, $l9;
        int i1, i2, i3, i4, $i6, $i7, $i8;
        android.os.Bundle r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.os.Message r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Handler $r5, $r6;
        android.view.accessibility.AccessibilityInteractionClient $r7;
        byte $b10;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r3 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 1;

        r3.<android.os.Message: int arg1> = i3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r3.<android.os.Message: int arg2> = $i6;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi1> = $i7;

        r4.<com.android.internal.os.SomeArgs: int argi2> = i1;

        r4.<com.android.internal.os.SomeArgs: int argi3> = i2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $i8 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i4 != $i8 goto label1;

        $l9 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b10 = l5 cmp $l9;

        if $b10 != 0 goto label1;

        $r7 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l5);

        virtualinvoke $r7.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r3);

        goto label2;

     label1:
        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

     label2:
        return;
    }

    private void perfromAccessibilityActionUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3, i4;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.os.Bundle r4;
        boolean z0, $z1;
        android.view.accessibility.AccessibilityNodeProvider r5;
        java.lang.Throwable r6, $r22;
        java.lang.Object $r7, $r8, $r9;
        android.view.View $r10, r27;
        android.view.ViewRootImpl $r11, $r13, $r15, $r17, $r18, $r19, $r23;
        android.view.View$AttachInfo $r12, $r14, $r16, $r20, $r26;
        android.os.RemoteException $r21, $r24, $r25;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r7 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r7;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i4 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r9 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r9;

        $r8 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.os.Bundle) $r8;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        z0 = 0;

     label01:
        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r10 = $r11.<android.view.ViewRootImpl: android.view.View mView>;

        if $r10 == null goto label02;

        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r14 = $r15.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r14 != null goto label06;

     label02:
        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r12 = $r13.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r12.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(0, i4);

     label03:
        goto label05;

     label04:
        $r24 := @caughtexception;

     label05:
        return;

     label06:
        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r17.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r16.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

        if i1 == 2147483647 goto label07;

        r27 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

        goto label08;

     label07:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r27 = $r19.<android.view.ViewRootImpl: android.view.View mView>;

     label08:
        if r27 == null goto label11;

        $z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r27);

        if $z1 == 0 goto label11;

        r5 = virtualinvoke r27.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r5 == null goto label10;

        if i2 == 2147483647 goto label09;

        z0 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>(i2, i3, r4);

        goto label11;

     label09:
        z0 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>(-1, i3, r4);

        goto label11;

     label10:
        if i2 != 2147483647 goto label11;

        z0 = virtualinvoke r27.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i3, r4);

     label11:
        $r18 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r20 = $r18.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r20.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(z0, i4);

     label12:
        goto label19;

     label13:
        $r21 := @caughtexception;

        goto label19;

     label14:
        $r22 := @caughtexception;

        r6 = $r22;

     label15:
        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r26 = $r23.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r26.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(z0, i4);

     label16:
        goto label18;

     label17:
        $r25 := @caughtexception;

     label18:
        throw r6;

     label19:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label06 to label11 with label14;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void computeClickPointInScreenClientThread(long, android.graphics.Region, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l3, $l8;
        android.graphics.Region r1;
        int i1, i2, $i4, $i5, $i6;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.os.Handler $r6, $r7;
        byte $b7;
        android.view.accessibility.AccessibilityInteractionClient $r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: android.graphics.Region;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        l3 := @parameter5: long;

        r3 := @parameter6: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 7;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i4 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi1> = $i4;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi2> = $i6;

        r5.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        $i5 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i2 != $i5 goto label1;

        $l8 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b7 = l3 cmp $l8;

        if $b7 != 0 goto label1;

        $r8 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l3);

        virtualinvoke $r8.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r4);

        goto label2;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

     label2:
        return;
    }

    private void computeClickPointInScreenUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        com.android.internal.os.SomeArgs r2;
        int i0, i1, i2, $i3, $i4;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.graphics.Region r5;
        boolean z0, $z1;
        android.graphics.Point r6, r7, r12, r27;
        android.view.accessibility.AccessibilityNodeProvider r8;
        android.graphics.Rect r9;
        java.lang.Throwable r10, $r24;
        java.lang.Object $r11, $r13, $r14, $r16;
        android.view.ViewRootImpl $r15, $r17, $r19;
        android.view.View $r18, r25;
        android.view.View$AttachInfo $r20;
        android.os.RemoteException $r21, $r22, $r23;
        android.view.accessibility.AccessibilityNodeInfo r26;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        $r11 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r11;

        i0 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i1 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r14;

        $r13 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r13;

        $r16 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (android.graphics.Region) $r16;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        z0 = 0;

        r6 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

     label01:
        $r15 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r18 = $r15.<android.view.ViewRootImpl: android.view.View mView>;

        if $r18 == null goto label02;

        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r20 = $r17.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        if $r20 != null goto label07;

     label02:
        r7 = null;

        goto label03;

     label03:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setComputeClickPointInScreenActionResult(android.graphics.Point,int)>(r7, i2);

     label04:
        goto label06;

     label05:
        $r23 := @caughtexception;

     label06:
        return;

     label07:
        if i0 == 2147483647 goto label08;

        r25 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i0);

        goto label09;

     label08:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r25 = $r19.<android.view.ViewRootImpl: android.view.View mView>;

     label09:
        if r25 == null goto label14;

        $z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r25);

        if $z1 == 0 goto label14;

        r8 = virtualinvoke r25.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r8 == null goto label13;

        if i1 == 2147483647 goto label10;

        r26 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i1);

        goto label11;

     label10:
        r26 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label11:
        if r26 == null goto label12;

        z0 = 1;

        r9 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        virtualinvoke r26.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r9);

        $i4 = virtualinvoke r9.<android.graphics.Rect: int centerX()>();

        $i3 = virtualinvoke r9.<android.graphics.Rect: int centerY()>();

        virtualinvoke r6.<android.graphics.Point: void set(int,int)>($i4, $i3);

     label12:
        goto label14;

     label13:
        if i1 != 2147483647 goto label14;

        z0 = virtualinvoke r25.<android.view.View: boolean computeClickPointInScreenForAccessibility(android.graphics.Region,android.graphics.Point)>(r5, r6);

     label14:
        r27 = null;

        if z0 == 0 goto label15;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.graphics.Point,android.view.MagnificationSpec)>(r6, r4);

        r27 = r6;

     label15:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setComputeClickPointInScreenActionResult(android.graphics.Point,int)>(r27, i2);

     label16:
        goto label24;

     label17:
        $r21 := @caughtexception;

        goto label24;

     label18:
        $r24 := @caughtexception;

        r10 = $r24;

     label19:
        r12 = null;

        if z0 == 0 goto label20;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.graphics.Point,android.view.MagnificationSpec)>(r6, r4);

        r12 = r6;

     label20:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setComputeClickPointInScreenActionResult(android.graphics.Point,int)>(r12, i2);

     label21:
        goto label23;

     label22:
        $r22 := @caughtexception;

     label23:
        throw r10;

     label24:
        return;

        catch android.os.RemoteException from label02 to label04 with label05;
        catch android.os.RemoteException from label14 to label16 with label17;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label07 to label14 with label18;
        catch android.os.RemoteException from label19 to label21 with label22;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private android.view.View findViewByAccessibilityId(int)
    {
        android.view.AccessibilityInteractionController r0;
        int i0;
        android.view.View r1, r2;
        android.view.ViewRootImpl $r3;
        boolean $z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        i0 := @parameter0: int;

        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r1 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<android.view.View: android.view.View findViewByAccessibilityId(int)>(i0);

        if r2 == null goto label2;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r2);

        if $z0 != 0 goto label2;

        return null;

     label2:
        return r2;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        android.view.MagnificationSpec r2;
        float f0;
        int i0, i1;
        android.view.accessibility.AccessibilityNodeInfo r3;
        android.view.ViewRootImpl $r4;
        android.view.View$AttachInfo $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.view.MagnificationSpec;

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        f0 = $r5.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>(f0, r2);

        if $z0 == 0 goto label3;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.view.accessibility.AccessibilityNodeInfo) $r6;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r3, r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void adjustIsVisibleToUserIfNeeded(java.util.List, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        android.graphics.Region r2;
        int i0, i1;
        android.view.accessibility.AccessibilityNodeInfo r3;
        java.lang.Object $r4;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.graphics.Region;

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.view.accessibility.AccessibilityNodeInfo) $r4;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Region)>(r3, r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    private void adjustIsVisibleToUserIfNeeded(android.view.accessibility.AccessibilityNodeInfo, android.graphics.Region)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Region r2;
        android.graphics.Rect r3;
        boolean $z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.graphics.Region;

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        r3 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r3);

        $z0 = virtualinvoke r2.<android.graphics.Region: boolean quickReject(android.graphics.Rect)>(r3);

        if $z0 == 0 goto label3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>(0);

     label3:
        return;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(android.graphics.Point, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        android.graphics.Point r1;
        android.view.MagnificationSpec r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        android.view.ViewRootImpl $r3;
        android.view.View$AttachInfo $r4;
        boolean $z0;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.graphics.Point;

        r2 := @parameter1: android.view.MagnificationSpec;

        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        f0 = $r4.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>(f0, r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label2;

        $i11 = r1.<android.graphics.Point: int x>;

        $f9 = (float) $i11;

        $f10 = $f9 * f0;

        $i12 = (int) $f10;

        r1.<android.graphics.Point: int x> = $i12;

        $i13 = r1.<android.graphics.Point: int y>;

        $f11 = (float) $i13;

        $f12 = $f11 * f0;

        $i14 = (int) $f12;

        r1.<android.graphics.Point: int y> = $i14;

     label2:
        if r2 == null goto label3;

        $i1 = r1.<android.graphics.Point: int x>;

        $f2 = (float) $i1;

        $f1 = r2.<android.view.MagnificationSpec: float scale>;

        $f3 = $f2 * $f1;

        $i2 = (int) $f3;

        r1.<android.graphics.Point: int x> = $i2;

        $i3 = r1.<android.graphics.Point: int y>;

        $f5 = (float) $i3;

        $f4 = r2.<android.view.MagnificationSpec: float scale>;

        $f6 = $f5 * $f4;

        $i4 = (int) $f6;

        r1.<android.graphics.Point: int y> = $i4;

        $i7 = r1.<android.graphics.Point: int x>;

        $f7 = r2.<android.view.MagnificationSpec: float offsetX>;

        $i5 = (int) $f7;

        $i6 = $i7 + $i5;

        r1.<android.graphics.Point: int x> = $i6;

        $i10 = r1.<android.graphics.Point: int y>;

        $f8 = r2.<android.view.MagnificationSpec: float offsetY>;

        $i8 = (int) $f8;

        $i9 = $i10 + $i8;

        r1.<android.graphics.Point: int y> = $i9;

     label3:
        return;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.view.MagnificationSpec r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.graphics.Rect r3, r4, r6, r7;
        android.view.View$AttachInfo r5, $r9;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.view.ViewRootImpl $r8, $r11, $r12, $r13;
        boolean $z0, $z2;
        byte $b2;
        android.view.Display $r10, $r16;
        android.graphics.Point $r14, $r15, $r17;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.MagnificationSpec;

        if r1 != null goto label1;

        return;

     label1:
        $r8 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r9 = $r8.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        f0 = $r9.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>(f0, r2);

        if $z0 != 0 goto label2;

        return;

     label2:
        r3 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        r4 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r4);

        $b2 = f0 cmpl 1.0F;

        if $b2 == 0 goto label3;

        virtualinvoke r3.<android.graphics.Rect: void scale(float)>(f0);

        virtualinvoke r4.<android.graphics.Rect: void scale(float)>(f0);

     label3:
        if r2 == null goto label4;

        $f21 = r2.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r3.<android.graphics.Rect: void scale(float)>($f21);

        $f20 = r2.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r4.<android.graphics.Rect: void scale(float)>($f20);

        $f23 = r2.<android.view.MagnificationSpec: float offsetX>;

        $i17 = (int) $f23;

        $f22 = r2.<android.view.MagnificationSpec: float offsetY>;

        $i18 = (int) $f22;

        virtualinvoke r4.<android.graphics.Rect: void offset(int,int)>($i17, $i18);

     label4:
        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>(r4);

        if r2 == null goto label6;

        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r5 = $r11.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r10 = r5.<android.view.View$AttachInfo: android.view.Display mDisplay>;

        if $r10 != null goto label5;

        return;

     label5:
        $f2 = r5.<android.view.View$AttachInfo: float mApplicationScale>;

        $f3 = r2.<android.view.MagnificationSpec: float scale>;

        f1 = $f2 * $f3;

        r6 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1>;

        $i3 = r5.<android.view.View$AttachInfo: int mWindowLeft>;

        $f4 = (float) $i3;

        $f5 = $f4 * f1;

        $f6 = r2.<android.view.MagnificationSpec: float offsetX>;

        $f7 = $f5 + $f6;

        $i4 = (int) $f7;

        r6.<android.graphics.Rect: int left> = $i4;

        $i5 = r5.<android.view.View$AttachInfo: int mWindowTop>;

        $f8 = (float) $i5;

        $f9 = $f8 * f1;

        $f10 = r2.<android.view.MagnificationSpec: float offsetY>;

        $f11 = $f9 + $f10;

        $i6 = (int) $f11;

        r6.<android.graphics.Rect: int top> = $i6;

        $i8 = r6.<android.graphics.Rect: int left>;

        $f15 = (float) $i8;

        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $i7 = $r12.<android.view.ViewRootImpl: int mWidth>;

        $f12 = (float) $i7;

        $f14 = $f12 * f1;

        $f13 = $f15 + $f14;

        $i9 = (int) $f13;

        r6.<android.graphics.Rect: int right> = $i9;

        $i11 = r6.<android.graphics.Rect: int top>;

        $f19 = (float) $i11;

        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $i10 = $r13.<android.view.ViewRootImpl: int mHeight>;

        $f16 = (float) $i10;

        $f18 = $f16 * f1;

        $f17 = $f19 + $f18;

        $i12 = (int) $f17;

        r6.<android.graphics.Rect: int bottom> = $i12;

        $r16 = r5.<android.view.View$AttachInfo: android.view.Display mDisplay>;

        $r17 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

        virtualinvoke $r16.<android.view.Display: void getRealSize(android.graphics.Point)>($r17);

        $r15 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

        i0 = $r15.<android.graphics.Point: int x>;

        $r14 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

        i1 = $r14.<android.graphics.Point: int y>;

        r7 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect2>;

        virtualinvoke r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r6.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r7);

        $i16 = r4.<android.graphics.Rect: int left>;

        $i13 = r4.<android.graphics.Rect: int top>;

        $i14 = r4.<android.graphics.Rect: int right>;

        $i15 = r4.<android.graphics.Rect: int bottom>;

        $z2 = virtualinvoke r6.<android.graphics.Rect: boolean intersects(int,int,int,int)>($i16, $i13, $i14, $i15);

        if $z2 != 0 goto label6;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>(0);

     label6:
        return;
    }

    private boolean shouldApplyAppScaleAndMagnificationSpec(float, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        float f0;
        android.view.MagnificationSpec r1;
        byte $b0;
        boolean $z0, $z1;

        r0 := @this: android.view.AccessibilityInteractionController;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.MagnificationSpec;

        $b0 = f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<android.view.MagnificationSpec: boolean isNop()>();

        if $z1 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl $r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        $r1 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        return $r1;
    }

    static boolean access$300(android.view.AccessibilityInteractionController, android.view.View)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        boolean $z0;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.view.View;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r1);

        return $z0;
    }

    static void access$400(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$500(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void perfromAccessibilityActionUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$600(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$700(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$800(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findFocusUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$900(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void focusSearchUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$1000(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void computeClickPointInScreenUiThread(android.os.Message)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.view.AccessibilityInteractionController: boolean ENFORCE_NODE_TREE_CONSISTENT> = 0;

        return;
    }
}
