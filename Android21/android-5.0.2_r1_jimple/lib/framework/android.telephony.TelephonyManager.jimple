public class android.telephony.TelephonyManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static com.android.internal.telephony.ITelephonyRegistry sRegistry;
    private final android.content.Context mContext;
    private static java.lang.String multiSimConfig;
    private static android.telephony.TelephonyManager sInstance;
    public static final java.lang.String ACTION_PHONE_STATE_CHANGED;
    public static final java.lang.String ACTION_RESPOND_VIA_MESSAGE;
    public static final java.lang.String EXTRA_STATE;
    public static final java.lang.String EXTRA_STATE_IDLE;
    public static final java.lang.String EXTRA_STATE_RINGING;
    public static final java.lang.String EXTRA_STATE_OFFHOOK;
    public static final java.lang.String EXTRA_INCOMING_NUMBER;
    public static final java.lang.String ACTION_PRECISE_CALL_STATE_CHANGED;
    public static final java.lang.String EXTRA_RINGING_CALL_STATE;
    public static final java.lang.String EXTRA_FOREGROUND_CALL_STATE;
    public static final java.lang.String EXTRA_BACKGROUND_CALL_STATE;
    public static final java.lang.String EXTRA_DISCONNECT_CAUSE;
    public static final java.lang.String EXTRA_PRECISE_DISCONNECT_CAUSE;
    public static final java.lang.String ACTION_PRECISE_DATA_CONNECTION_STATE_CHANGED;
    public static final java.lang.String EXTRA_DATA_STATE;
    public static final java.lang.String EXTRA_DATA_NETWORK_TYPE;
    public static final java.lang.String EXTRA_DATA_APN_TYPE;
    public static final java.lang.String EXTRA_DATA_APN;
    public static final java.lang.String EXTRA_DATA_CHANGE_REASON;
    public static final java.lang.String EXTRA_DATA_LINK_PROPERTIES_KEY;
    public static final java.lang.String EXTRA_DATA_FAILURE_CAUSE;
    public static final int PHONE_TYPE_NONE;
    public static final int PHONE_TYPE_GSM;
    public static final int PHONE_TYPE_CDMA;
    public static final int PHONE_TYPE_SIP;
    private static final java.lang.String sKernelCmdLine;
    private static final java.util.regex.Pattern sProductTypePattern;
    private static final java.lang.String sLteOnCdmaProductType;
    public static final int NETWORK_TYPE_UNKNOWN;
    public static final int NETWORK_TYPE_GPRS;
    public static final int NETWORK_TYPE_EDGE;
    public static final int NETWORK_TYPE_UMTS;
    public static final int NETWORK_TYPE_CDMA;
    public static final int NETWORK_TYPE_EVDO_0;
    public static final int NETWORK_TYPE_EVDO_A;
    public static final int NETWORK_TYPE_1xRTT;
    public static final int NETWORK_TYPE_HSDPA;
    public static final int NETWORK_TYPE_HSUPA;
    public static final int NETWORK_TYPE_HSPA;
    public static final int NETWORK_TYPE_IDEN;
    public static final int NETWORK_TYPE_EVDO_B;
    public static final int NETWORK_TYPE_LTE;
    public static final int NETWORK_TYPE_EHRPD;
    public static final int NETWORK_TYPE_HSPAP;
    public static final int NETWORK_TYPE_GSM;
    public static final int NETWORK_CLASS_UNKNOWN;
    public static final int NETWORK_CLASS_2_G;
    public static final int NETWORK_CLASS_3_G;
    public static final int NETWORK_CLASS_4_G;
    public static final int SIM_STATE_UNKNOWN;
    public static final int SIM_STATE_ABSENT;
    public static final int SIM_STATE_PIN_REQUIRED;
    public static final int SIM_STATE_PUK_REQUIRED;
    public static final int SIM_STATE_NETWORK_LOCKED;
    public static final int SIM_STATE_READY;
    public static final int SIM_STATE_CARD_IO_ERROR;
    public static final int CALL_STATE_IDLE;
    public static final int CALL_STATE_RINGING;
    public static final int CALL_STATE_OFFHOOK;
    public static final int DATA_ACTIVITY_NONE;
    public static final int DATA_ACTIVITY_IN;
    public static final int DATA_ACTIVITY_OUT;
    public static final int DATA_ACTIVITY_INOUT;
    public static final int DATA_ACTIVITY_DORMANT;
    public static final int DATA_UNKNOWN;
    public static final int DATA_DISCONNECTED;
    public static final int DATA_CONNECTING;
    public static final int DATA_CONNECTED;
    public static final int DATA_SUSPENDED;
    public static final int CARRIER_PRIVILEGE_STATUS_HAS_ACCESS;
    public static final int CARRIER_PRIVILEGE_STATUS_NO_ACCESS;
    public static final int CARRIER_PRIVILEGE_STATUS_RULES_NOT_LOADED;
    public static final int CARRIER_PRIVILEGE_STATUS_ERROR_LOADING_RULES;

    public void <init>(android.content.Context)
    {
        android.telephony.TelephonyManager r0;
        android.content.Context r1, r2;
        com.android.internal.telephony.ITelephonyRegistry $r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        if r2 == null goto label1;

        r0.<android.telephony.TelephonyManager: android.content.Context mContext> = r2;

        goto label2;

     label1:
        r0.<android.telephony.TelephonyManager: android.content.Context mContext> = r1;

     label2:
        $r3 = <android.telephony.TelephonyManager: com.android.internal.telephony.ITelephonyRegistry sRegistry>;

        if $r3 != null goto label3;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("telephony.registry");

        $r5 = staticinvoke <com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)>($r4);

        <android.telephony.TelephonyManager: com.android.internal.telephony.ITelephonyRegistry sRegistry> = $r5;

     label3:
        return;
    }

    private void <init>()
    {
        android.telephony.TelephonyManager r0;

        r0 := @this: android.telephony.TelephonyManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.TelephonyManager: android.content.Context mContext> = null;

        return;
    }

    public static android.telephony.TelephonyManager getDefault()
    {
        android.telephony.TelephonyManager $r0;

        $r0 = <android.telephony.TelephonyManager: android.telephony.TelephonyManager sInstance>;

        return $r0;
    }

    public android.telephony.TelephonyManager$MultiSimVariants getMultiSimConfiguration()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        android.telephony.TelephonyManager$MultiSimVariants $r2, $r3, $r4, $r5;

        r0 := @this: android.telephony.TelephonyManager;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.radio.multisim.config");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("dsds");

        if $z0 == 0 goto label1;

        $r5 = <android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants DSDS>;

        return $r5;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("dsda");

        if $z1 == 0 goto label2;

        $r4 = <android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants DSDA>;

        return $r4;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("tsts");

        if $z2 == 0 goto label3;

        $r3 = <android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants TSTS>;

        return $r3;

     label3:
        $r2 = <android.telephony.TelephonyManager$MultiSimVariants: android.telephony.TelephonyManager$MultiSimVariants UNKNOWN>;

        return $r2;
    }

    public int getPhoneCount()
    {
        android.telephony.TelephonyManager r0;
        byte b0;
        int[] $r1;
        android.telephony.TelephonyManager$MultiSimVariants $r2;
        int $i1, $i2;

        r0 := @this: android.telephony.TelephonyManager;

        b0 = 1;

        $r1 = <android.telephony.TelephonyManager$1: int[] $SwitchMap$android$telephony$TelephonyManager$MultiSimVariants>;

        $r2 = virtualinvoke r0.<android.telephony.TelephonyManager: android.telephony.TelephonyManager$MultiSimVariants getMultiSimConfiguration()>();

        $i1 = virtualinvoke $r2.<android.telephony.TelephonyManager$MultiSimVariants: int ordinal()>();

        $i2 = $r1[$i1];

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            default: goto label3;
        };

     label1:
        b0 = 2;

        goto label3;

     label2:
        b0 = 3;

     label3:
        return b0;
    }

    public static android.telephony.TelephonyManager 'from'(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        return $r2;
    }

    public boolean isMultiSimEnabled()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = <android.telephony.TelephonyManager: java.lang.String multiSimConfig>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("dsds");

        if $z0 != 0 goto label1;

        $r2 = <android.telephony.TelephonyManager: java.lang.String multiSimConfig>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("dsda");

        if $z1 != 0 goto label1;

        $r3 = <android.telephony.TelephonyManager: java.lang.String multiSimConfig>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("tsts");

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public java.lang.String getDeviceSoftwareVersion()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvn()>();

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getDeviceId()
    {
        android.telephony.TelephonyManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDefaultSim()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>($i0);

        return $r1;
    }

    public java.lang.String getDeviceId(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        long[] r1;
        com.android.internal.telephony.IPhoneSubInfo $r3;
        long $l1;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.telephony.SubscriptionManager: long[] getSubId(int)>(i0);

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $l1 = r1[0];

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceIdForSubscriber(long)>($l1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getImei()
    {
        android.telephony.TelephonyManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDefaultSim()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getImei(int)>($i0);

        return $r1;
    }

    public java.lang.String getImei(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        long[] r1;
        com.android.internal.telephony.IPhoneSubInfo $r3;
        long $l1;
        java.lang.String $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.telephony.SubscriptionManager: long[] getSubId(int)>(i0);

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $l1 = r1[0];

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getImeiForSubscriber(long)>($l1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public android.telephony.CellLocation getCellLocation()
    {
        android.telephony.TelephonyManager r0;
        android.os.Bundle r1;
        android.telephony.CellLocation r2;
        com.android.internal.telephony.ITelephony $r3;
        boolean $z0, $z1;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r1 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()>();

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        return null;

     label3:
        r2 = staticinvoke <android.telephony.CellLocation: android.telephony.CellLocation newFromBundle(android.os.Bundle)>(r1);

        $z1 = virtualinvoke r2.<android.telephony.CellLocation: boolean isEmpty()>();

        if $z1 == 0 goto label5;

     label4:
        return null;

     label5:
        return r2;

     label6:
        $r4 := @caughtexception;

        return null;

     label7:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
    }

    public void enableLocationUpdates()
    {
        android.telephony.TelephonyManager r0;
        long $l0;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        virtualinvoke r0.<android.telephony.TelephonyManager: void enableLocationUpdates(long)>($l0);

        return;
    }

    public void enableLocationUpdates(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.NullPointerException $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void enableLocationUpdatesForSubscriber(long)>(l0);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public void disableLocationUpdates()
    {
        android.telephony.TelephonyManager r0;
        long $l0;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        virtualinvoke r0.<android.telephony.TelephonyManager: void disableLocationUpdates(long)>($l0);

        return;
    }

    public void disableLocationUpdates(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.NullPointerException $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void disableLocationUpdatesForSubscriber(long)>(l0);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.util.List getNeighboringCellInfo()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        java.util.List $r5;
        android.os.RemoteException $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r3 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $r5 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo(java.lang.String)>($r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getCurrentPhoneType()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getCurrentPhoneType(long)>($l0);

        return $i1;
    }

    public int getCurrentPhoneType(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony r1;
        int $i1, $i2, $i3, $i4;
        android.os.RemoteException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        r1 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label3;

        $i2 = interfaceinvoke r1.<com.android.internal.telephony.ITelephony: int getActivePhoneTypeForSubscriber(long)>(l0);

     label2:
        return $i2;

     label3:
        $i1 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty(long)>(l0);

     label4:
        return $i1;

     label5:
        $r2 := @caughtexception;

        $i3 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty(long)>(l0);

        return $i3;

     label6:
        $r3 := @caughtexception;

        $i4 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty(long)>(l0);

        return $i4;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label1 to label2 with label6;
        catch java.lang.NullPointerException from label3 to label4 with label6;
    }

    public int getPhoneType()
    {
        android.telephony.TelephonyManager r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.telephony.TelephonyManager;

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean isVoiceCapable()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getCurrentPhoneType()>();

        return $i0;
    }

    private int getPhoneTypeFromProperty()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty(long)>($l0);

        return $i1;
    }

    private int getPhoneTypeFromProperty(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String r1;
        int $i1, $i2;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.current.phone-type", l0, null);

        if r1 == null goto label1;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i2;

     label1:
        $i1 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromNetworkType(long)>(l0);

        return $i1;
    }

    private int getPhoneTypeFromNetworkType()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromNetworkType(long)>($l0);

        return $i1;
    }

    private int getPhoneTypeFromNetworkType(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String r1;
        int $i1, $i2;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("ro.telephony.default_network", l0, null);

        if r1 == null goto label1;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $i2 = staticinvoke <android.telephony.TelephonyManager: int getPhoneType(int)>($i1);

        return $i2;

     label1:
        return 0;
    }

    public static int getPhoneType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label4;
            case 12: goto label2;
            default: goto label6;
        };

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        $i1 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        if $i1 != 1 goto label5;

        return 2;

     label5:
        return 1;

     label6:
        return 1;
    }

    private static java.lang.String getProcCmdLine()
    {
        java.lang.String r0, $r9, $r10, $r17;
        java.io.FileInputStream r1, $r5;
        byte[] r2;
        int i0;
        java.lang.Throwable r3, $r19;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r16, $r18;
        java.io.IOException $r11, $r12, $r13, $r15, r21;

        r0 = "";

        r1 = null;

     label01:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>("/proc/cmdline");

        r1 = $r5;

        r2 = newarray (byte)[2048];

        i0 = virtualinvoke r1.<java.io.FileInputStream: int read(byte[])>(r2);

        if i0 <= 0 goto label02;

        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(byte[],int,int)>(r2, 0, i0);

        r0 = $r10;

     label02:
        if r1 == null goto label17;

     label03:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label04:
        goto label17;

     label05:
        $r12 := @caughtexception;

        goto label17;

     label06:
        $r15 := @caughtexception;

        r21 = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No /proc/cmdline exception=");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r17);

     label07:
        if r1 == null goto label17;

     label08:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label09:
        goto label17;

     label10:
        $r11 := @caughtexception;

        goto label17;

     label11:
        $r19 := @caughtexception;

        r3 = $r19;

     label12:
        if r1 == null goto label16;

     label13:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r13 := @caughtexception;

     label16:
        throw r3;

     label17:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/cmdline=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r9);

        return r0;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static int getLteOnCdmaModeStatic()
    {
        int i0, i1;
        java.lang.String r0, $r10, $r12, $r14, $r16;
        java.util.regex.Matcher r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r13;
        java.util.regex.Pattern $r15;
        boolean $z0, $z1;

        r0 = "";

        i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("telephony.lteOnCdmaDevice", -1);

        i0 = i1;

        if i0 != -1 goto label3;

        $r15 = <android.telephony.TelephonyManager: java.util.regex.Pattern sProductTypePattern>;

        $r14 = <android.telephony.TelephonyManager: java.lang.String sKernelCmdLine>;

        r1 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r14);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        r0 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r16 = <android.telephony.TelephonyManager: java.lang.String sLteOnCdmaProductType>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        i0 = 1;

        goto label3;

     label1:
        i0 = 0;

        goto label3;

     label2:
        i0 = 0;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getLteOnCdmaMode=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curVal=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" product_type=\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' lteOnCdmaProductType=\'");

        $r10 = <android.telephony.TelephonyManager: java.lang.String sLteOnCdmaProductType>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r12);

        return i0;
    }

    public java.lang.String getNetworkOperatorName()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName(long)>($l0);

        return $r1;
    }

    public java.lang.String getNetworkOperatorName(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.operator.alpha", l0, "");

        return $r1;
    }

    public java.lang.String getNetworkOperator()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator(long)>($l0);

        return $r1;
    }

    public java.lang.String getNetworkOperator(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.operator.numeric", l0, "");

        return $r1;
    }

    public boolean isNetworkRoaming()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean isNetworkRoaming(long)>($l0);

        return $z0;
    }

    public boolean isNetworkRoaming(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        $r1 = "true";

        $r2 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.operator.isroaming", l0, null);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.String getNetworkCountryIso()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso(long)>($l0);

        return $r1;
    }

    public java.lang.String getNetworkCountryIso(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.operator.iso-country", l0, "");

        return $r1;
    }

    public int getNetworkType()
    {
        android.telephony.TelephonyManager r0;
        int $i0;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDataNetworkType()>();

        return $i0;
    }

    public int getNetworkType(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony r1;
        int $i1;
        android.os.RemoteException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        r1 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label3;

        $i1 = interfaceinvoke r1.<com.android.internal.telephony.ITelephony: int getNetworkTypeForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        return 0;

     label4:
        $r2 := @caughtexception;

        return 0;

     label5:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label5;
    }

    public int getDataNetworkType()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDataNetworkType(long)>($l0);

        return $i1;
    }

    public int getDataNetworkType(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony r1;
        int $i1;
        java.lang.NullPointerException $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        r1 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label3;

        $i1 = interfaceinvoke r1.<com.android.internal.telephony.ITelephony: int getDataNetworkTypeForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

     label5:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label5;
    }

    public int getVoiceNetworkType()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getVoiceNetworkType(long)>($l0);

        return $i1;
    }

    public int getVoiceNetworkType(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony r1;
        int $i1;
        java.lang.NullPointerException $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        r1 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if r1 == null goto label3;

        $i1 = interfaceinvoke r1.<com.android.internal.telephony.ITelephony: int getVoiceNetworkTypeForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

     label5:
        $r2 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label5;
    }

    public static int getNetworkClass(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label1;
            case 12: goto label2;
            case 13: goto label3;
            case 14: goto label2;
            case 15: goto label2;
            case 16: goto label1;
            default: goto label4;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return 0;
    }

    public java.lang.String getNetworkTypeName()
    {
        android.telephony.TelephonyManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getNetworkType()>();

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>($i0);

        return $r1;
    }

    public static java.lang.String getNetworkTypeName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label11;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label06;
            case 11: goto label14;
            case 12: goto label10;
            case 13: goto label12;
            case 14: goto label13;
            case 15: goto label15;
            case 16: goto label16;
            default: goto label17;
        };

     label01:
        return "GPRS";

     label02:
        return "EDGE";

     label03:
        return "UMTS";

     label04:
        return "HSDPA";

     label05:
        return "HSUPA";

     label06:
        return "HSPA";

     label07:
        return "CDMA";

     label08:
        return "CDMA - EvDo rev. 0";

     label09:
        return "CDMA - EvDo rev. A";

     label10:
        return "CDMA - EvDo rev. B";

     label11:
        return "CDMA - 1xRTT";

     label12:
        return "LTE";

     label13:
        return "CDMA - eHRPD";

     label14:
        return "iDEN";

     label15:
        return "HSPA+";

     label16:
        return "GSM";

     label17:
        return "UNKNOWN";
    }

    public boolean hasIccCard()
    {
        android.telephony.TelephonyManager r0;
        int $i0;
        long $l1;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDefaultSim()>();

        $l1 = (long) $i0;

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean hasIccCard(long)>($l1);

        return $z0;
    }

    public boolean hasIccCard(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean hasIccCardUsingSlotId(long)>(l0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getSimState()
    {
        android.telephony.TelephonyManager r0;
        int $i0, $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDefaultSim()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getSimState(int)>($i0);

        return $i1;
    }

    public int getSimState(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        long[] r1;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7, $r8;
        long $l1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.telephony.SubscriptionManager: long[] getSubId(int)>(i0);

        if r1 != null goto label1;

        return 1;

     label1:
        $l1 = r1[0];

        r2 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.sim.state", $l1, "");

        $r3 = "ABSENT";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r4 = "PIN_REQUIRED";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        return 2;

     label3:
        $r5 = "PUK_REQUIRED";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

        return 3;

     label4:
        $r6 = "NETWORK_LOCKED";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

        return 4;

     label5:
        $r7 = "READY";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label6;

        return 5;

     label6:
        $r8 = "CARD_IO_ERROR";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label7;

        return 6;

     label7:
        return 0;
    }

    public java.lang.String getSimOperator()
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSimOperator(): default subId=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r4);

        $r5 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getSimOperator(long)>(l0);

        return $r5;
    }

    public java.lang.String getSimOperator(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.sim.operator.numeric", l0, "");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSimOperator: subId=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operator=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r7);

        return r1;
    }

    public java.lang.String getSimOperatorName()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getSimOperatorName(long)>($l0);

        return $r1;
    }

    public java.lang.String getSimOperatorName(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.sim.operator.alpha", l0, "");

        return $r1;
    }

    public java.lang.String getSimCountryIso()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso(long)>($l0);

        return $r1;
    }

    public java.lang.String getSimCountryIso(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.sim.operator.iso-country", l0, "");

        return $r1;
    }

    public java.lang.String getSimSerialNumber()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber(long)>($l0);

        return $r1;
    }

    public java.lang.String getSimSerialNumber(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumberForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getLteOnCdmaMode()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getLteOnCdmaMode(long)>($l0);

        return $i1;
    }

    public int getLteOnCdmaMode(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        int $i1;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getLteOnCdmaModeForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        return -1;

     label4:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getSubscriberId()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getSubscriberId(long)>($l0);

        return $r1;
    }

    public java.lang.String getSubscriberId(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberIdForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getGroupIdLevel1()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1()>();

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getGroupIdLevel1(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1ForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getLine1Number()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getLine1NumberForSubscriber(long)>($l0);

        return $r1;
    }

    public java.lang.String getLine1NumberForSubscriber(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String r1, $r5;
        com.android.internal.telephony.ITelephony $r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r6, $r7;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        r1 = null;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r1 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.lang.String getLine1NumberForDisplay(long)>(l0);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        if r1 == null goto label6;

        return r1;

     label6:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1NumberForSubscriber(long)>(l0);

     label7:
        return $r5;

     label8:
        $r6 := @caughtexception;

        return null;

     label9:
        $r8 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.NullPointerException from label6 to label7 with label9;
    }

    public void setLine1NumberForDisplay(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        long $l0;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        virtualinvoke r0.<android.telephony.TelephonyManager: void setLine1NumberForDisplayForSubscriber(long,java.lang.String,java.lang.String)>($l0, r1, r2);

        return;
    }

    public void setLine1NumberForDisplayForSubscriber(long, java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String r1, r2;
        com.android.internal.telephony.ITelephony $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void setLine1NumberForDisplayForSubscriber(long,java.lang.String,java.lang.String)>(l0, r1, r2);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getLine1AlphaTag()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTagForSubscriber(long)>($l0);

        return $r1;
    }

    public java.lang.String getLine1AlphaTagForSubscriber(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        java.lang.String r1, $r5;
        com.android.internal.telephony.ITelephony $r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r6, $r9;
        java.lang.NullPointerException $r7, $r8;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        r1 = null;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r1 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.lang.String getLine1AlphaTagForDisplay(long)>(l0);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        if r1 == null goto label6;

        return r1;

     label6:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTagForSubscriber(long)>(l0);

     label7:
        return $r5;

     label8:
        $r9 := @caughtexception;

        return null;

     label9:
        $r8 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.NullPointerException from label6 to label7 with label9;
    }

    public java.lang.String getMsisdn()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getMsisdn(long)>($l0);

        return $r1;
    }

    public java.lang.String getMsisdn(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdnForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getVoiceMailNumber()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber(long)>($l0);

        return $r1;
    }

    public java.lang.String getVoiceMailNumber(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumberForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getCompleteVoiceMailNumber()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber(long)>($l0);

        return $r1;
    }

    public java.lang.String getCompleteVoiceMailNumber(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getCompleteVoiceMailNumberForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getVoiceMessageCount()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getVoiceMessageCount(long)>($l0);

        return $i1;
    }

    public int getVoiceMessageCount(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        int $i1;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getVoiceMessageCountForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag(long)>($l0);

        return $r1;
    }

    public java.lang.String getVoiceMailAlphaTag(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTagForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIsimImpi()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimImpi()>();

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIsimDomain()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimDomain()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String[] getIsimImpu()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String[] $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String[] getIsimImpu()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    private com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()
    {
        android.telephony.TelephonyManager r0;
        android.os.IBinder $r1;
        com.android.internal.telephony.IPhoneSubInfo $r2;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("iphonesubinfo");

        $r2 = staticinvoke <com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public int getCallState()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telecom.ITelecomService $r2;
        int $i0;
        java.lang.Exception $r3;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getCallState()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public int getCallState(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        int $i1;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getCallStateForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getDataActivity()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony $r2;
        int $i0;
        java.lang.NullPointerException $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getDataActivity()>();

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getDataState()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony $r2;
        int $i0;
        java.lang.NullPointerException $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getDataState()>();

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    private com.android.internal.telephony.ITelephony getITelephony()
    {
        android.telephony.TelephonyManager r0;
        android.os.IBinder $r1;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("phone");

        $r2 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    private com.android.internal.telecom.ITelecomService getTelecomService()
    {
        android.telephony.TelephonyManager r0;
        android.os.IBinder $r1;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("telecom");

        $r2 = staticinvoke <com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public void listen(android.telephony.PhoneStateListener, int)
    {
        android.telephony.TelephonyManager r0;
        android.telephony.PhoneStateListener r1;
        int i0;
        java.lang.String r2, $r9;
        java.lang.Boolean r3;
        android.content.Context $r4, $r8;
        com.android.internal.telephony.ITelephony $r5;
        com.android.internal.telephony.ITelephonyRegistry $r6;
        long $l1;
        com.android.internal.telephony.IPhoneStateListener $r7;
        boolean $z0, $z1;
        android.os.RemoteException $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.telephony.PhoneStateListener;

        i0 := @parameter1: int;

        $r4 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r4 == null goto label1;

        $r8 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        goto label2;

     label1:
        $r9 = "<unknown>";

     label2:
        r2 = $r9;

     label3:
        $r5 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        if $r5 == null goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r6 = <android.telephony.TelephonyManager: com.android.internal.telephony.ITelephonyRegistry sRegistry>;

        $l1 = r1.<android.telephony.PhoneStateListener: long mSubId>;

        $r7 = r1.<android.telephony.PhoneStateListener: com.android.internal.telephony.IPhoneStateListener callback>;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephonyRegistry: void listenForSubscriber(long,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>($l1, r2, $r7, i0, $z0);

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        goto label9;

     label8:
        $r11 := @caughtexception;

     label9:
        return;

        catch android.os.RemoteException from label3 to label6 with label7;
        catch java.lang.NullPointerException from label3 to label6 with label8;
    }

    public int getCdmaEriIconIndex()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getCdmaEriIconIndex(long)>($l0);

        return $i1;
    }

    public int getCdmaEriIconIndex(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        int $i1;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getCdmaEriIconIndexForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        return -1;

     label4:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getCdmaEriIconMode()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        int $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $i1 = virtualinvoke r0.<android.telephony.TelephonyManager: int getCdmaEriIconMode(long)>($l0);

        return $i1;
    }

    public int getCdmaEriIconMode(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        int $i1;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getCdmaEriIconModeForSubscriber(long)>(l0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        return -1;

     label4:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getCdmaEriText()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getCdmaEriText(long)>($l0);

        return $r1;
    }

    public java.lang.String getCdmaEriText(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaEriTextForSubscriber(long)>(l0);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean isVoiceCapable()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17956931);

        return $z0;
    }

    public boolean isSmsCapable()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17956932);

        return $z0;
    }

    public java.util.List getAllCellInfo()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony $r2;
        java.util.List $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public void setCellInfoListRate(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r2;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void setCellInfoListRate(int)>(i0);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getMmsUserAgent()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039409);

        return $r4;
    }

    public java.lang.String getMmsUAProfUrl()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039410);

        return $r4;
    }

    public android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        com.android.internal.telephony.ITelephony $r3;
        android.telephony.IccOpenLogicalChannelResponse $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean iccCloseLogicalChannel(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean iccCloseLogicalChannel(int)>(i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String iccTransmitApduLogicalChannel(int, int, int, int, int, int, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, $r4;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, i5, r1);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return "";

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String iccTransmitApduBasicChannel(int, int, int, int, int, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, $r4;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return "";

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public byte[] iccExchangeSimIO(int, int, int, int, int, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1;
        com.android.internal.telephony.ITelephony $r3;
        byte[] $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: byte[] iccExchangeSimIO(int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, r1);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String sendEnvelopeWithStatus(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, $r4;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.lang.String sendEnvelopeWithStatus(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return "";

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String nvReadItem(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r5, r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: java.lang.String nvReadItem(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvReadItem RemoteException", r1);

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvReadItem NPE", r6);

     label5:
        return "";

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean nvWriteItem(int, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;
        boolean $z0;
        java.lang.NullPointerException $r5, r6;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean nvWriteItem(int,java.lang.String)>(i0, r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvWriteItem RemoteException", r2);

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvWriteItem NPE", r6);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean nvWriteCdmaPrl(byte[])
    {
        android.telephony.TelephonyManager r0;
        byte[] r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;
        boolean $z0;
        java.lang.NullPointerException $r5, r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: byte[];

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean nvWriteCdmaPrl(byte[])>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvWriteCdmaPrl RemoteException", r2);

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvWriteCdmaPrl NPE", r6);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean nvResetConfig(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;
        java.lang.NullPointerException $r4, r5;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean nvResetConfig(int)>(i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvResetConfig RemoteException", r1);

        goto label5;

     label4:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "nvResetConfig NPE", r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    private static long getDefaultSubscription()
    {
        long $l0;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultSubId()>();

        return $l0;
    }

    public int getDefaultSim()
    {
        android.telephony.TelephonyManager r0;

        r0 := @this: android.telephony.TelephonyManager;

        return 0;
    }

    public static void setTelephonyProperty(java.lang.String, long, java.lang.String)
    {
        java.lang.String r0, r1, r2, r4, r5, $r13, $r21, $r22, r30;
        long l0;
        java.lang.String[] r3;
        int i1, i2, $i3, $i4, $i6, $i8, i9;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 = "";

        r3 = null;

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>(r0);

        i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        if r1 != null goto label01;

        r1 = "";

     label01:
        if r4 == null goto label02;

        r3 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label02:
        if i1 >= 0 goto label03;

        return;

     label03:
        i2 = 0;

     label04:
        if i2 >= i1 goto label06;

        r5 = "";

        if r3 == null goto label05;

        $i8 = lengthof r3;

        if i2 >= $i8 goto label05;

        r5 = r3[i2];

     label05:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        r2 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label04;

     label06:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r30 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        if r3 == null goto label08;

        i9 = i1 + 1;

     label07:
        $i6 = lengthof r3;

        if i9 >= $i6 goto label08;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r22 = r3[i9];

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        i9 = i9 + 1;

        goto label07;

     label08:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 > 31 goto label09;

        $i4 = virtualinvoke r30.<java.lang.String: int length()>();

        if $i4 <= 91 goto label10;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setTelephonyProperty length too long:");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r13);

        return;

     label10:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setTelephonyProperty property=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" propVal=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r21);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r0, r30);

        return;
    }

    public static int getIntAtIndex(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, $r6, $r7;
        int i0, $i1, $i2;
        java.lang.String[] r3;
        android.provider.Settings$SettingNotFoundException $r5;
        java.lang.NumberFormatException $r8;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

        if r2 == null goto label4;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        if i0 < 0 goto label4;

        $i1 = lengthof r3;

        if i0 >= $i1 goto label4;

        $r6 = r3[i0];

        if $r6 == null goto label4;

     label1:
        $r7 = r3[i0];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

     label2:
        return $i2;

     label3:
        $r8 := @caughtexception;

     label4:
        $r5 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r5.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static boolean putIntAtIndex(android.content.ContentResolver, java.lang.String, int, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r4, r5, $r11, r18;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.String[] r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = "";

        r3 = null;

        r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

        if r4 == null goto label1;

        r3 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r5 = "";

        if r3 == null goto label3;

        $i4 = lengthof r3;

        if i2 >= $i4 goto label3;

        r5 = r3[i2];

     label3:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        r2 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label2;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r18 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        if r3 == null goto label6;

        i5 = i0 + 1;

     label5:
        $i3 = lengthof r3;

        if i5 >= $i3 goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r11 = r3[i5];

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = i5 + 1;

        goto label5;

     label6:
        $z0 = staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, r1, r18);

        return $z0;
    }

    public static java.lang.String getTelephonyProperty(java.lang.String, long, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, $r5, $r6;
        long l0;
        int i1, $i2, $i3;
        java.lang.String[] r4;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 = null;

        i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>(r0);

        if r3 == null goto label1;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 <= 0 goto label1;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        if i1 < 0 goto label1;

        $i3 = lengthof r4;

        if i1 >= $i3 goto label1;

        $r6 = r4[i1];

        if $r6 == null goto label1;

        r2 = r4[i1];

     label1:
        if r2 != null goto label2;

        $r5 = r1;

        goto label3;

     label2:
        $r5 = r2;

     label3:
        return $r5;
    }

    public int getSimCount()
    {
        android.telephony.TelephonyManager r0;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean isMultiSimEnabled()>();

        if $z0 == 0 goto label1;

        return 2;

     label1:
        return 1;
    }

    public java.lang.String getIsimIst()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimIst()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String[] getIsimPcscf()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.IPhoneSubInfo $r2;
        java.lang.String[] $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String[] getIsimPcscf()>();

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIsimChallengeResponse(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, $r4;
        com.android.internal.telephony.IPhoneSubInfo $r3;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimChallengeResponse(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIccSimChallengeResponse(long, int, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        int i1;
        java.lang.String r1, $r4;
        com.android.internal.telephony.IPhoneSubInfo $r3;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSimChallengeResponse(long,int,java.lang.String)>(l0, i1, r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIccSimChallengeResponse(int, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        java.lang.String r1, $r2;
        long $l1;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $l1 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r2 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getIccSimChallengeResponse(long,int,java.lang.String)>($l1, i0, r1);

        return $r2;
    }

    public java.lang.String[] getPcscfAddress(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.String[] $r4, $r6;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.lang.String[] getPcscfAddress(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = newarray (java.lang.String)[0];

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setImsRegistrationState(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void setImsRegistrationState(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPreferredNetworkType()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r4;
        com.android.internal.telephony.ITelephony $r2;
        int $i0;
        java.lang.NullPointerException $r3, r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int getPreferredNetworkType()>();

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "getPreferredNetworkType RemoteException", r1);

        goto label5;

     label4:
        $r3 := @caughtexception;

        r5 = $r3;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "getPreferredNetworkType NPE", r5);

     label5:
        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean setPreferredNetworkType(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;
        java.lang.NullPointerException $r3, r5;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean setPreferredNetworkType(int)>(i0);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "setPreferredNetworkType RemoteException", r1);

        goto label5;

     label4:
        $r3 := @caughtexception;

        r5 = $r3;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "setPreferredNetworkType NPE", r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean setGlobalPreferredNetworkType()
    {
        android.telephony.TelephonyManager r0;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean setPreferredNetworkType(int)>(10);

        return $z0;
    }

    public int hasCarrierPrivileges()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r4;
        com.android.internal.telephony.ITelephony $r2;
        int $i0;
        java.lang.NullPointerException $r3, r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: int hasCarrierPrivileges()>();

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "hasCarrierPrivileges RemoteException", r1);

        goto label5;

     label4:
        $r3 := @caughtexception;

        r5 = $r3;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "hasCarrierPrivileges NPE", r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean setOperatorBrandOverride(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;
        boolean $z0;
        java.lang.NullPointerException $r5, r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean setOperatorBrandOverride(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "setOperatorBrandOverride RemoteException", r2);

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "setOperatorBrandOverride NPE", r6);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getCdmaMdn()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getCdmaMdn(long)>($l0);

        return $r1;
    }

    public java.lang.String getCdmaMdn(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaMdn(long)>(l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getCdmaMin()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $r1 = virtualinvoke r0.<android.telephony.TelephonyManager: java.lang.String getCdmaMin(long)>($l0);

        return $r1;
    }

    public java.lang.String getCdmaMin(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaMin(long)>(l0);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int checkCarrierPrivilegesForPackage(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;
        int $i0;
        java.lang.NullPointerException $r5, r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int checkCarrierPrivilegesForPackage(java.lang.String)>(r1);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "hasCarrierPrivileges RemoteException", r2);

        goto label5;

     label4:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "hasCarrierPrivileges NPE", r6);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.util.List getCarrierPackageNamesForIntent(android.content.Intent)
    {
        android.telephony.TelephonyManager r0;
        android.content.Intent r1;
        android.os.RemoteException r2, $r6;
        com.android.internal.telephony.ITelephony $r3;
        java.util.List $r4;
        java.lang.NullPointerException $r5, r7;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.content.Intent;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: java.util.List getCarrierPackageNamesForIntent(android.content.Intent)>(r1);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "getCarrierPackageNamesForIntent RemoteException", r2);

        goto label5;

     label4:
        $r5 := @caughtexception;

        r7 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "getCarrierPackageNamesForIntent NPE", r7);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public void dial(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: void dial(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#dial", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void call(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        com.android.internal.telephony.ITelephony $r4;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void call(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#call", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean endCall()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean endCall()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#endCall", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void answerRingingCall()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void answerRingingCall()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#answerRingingCall", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void silenceRinger()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void silenceRinger()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelecomService#silenceRinger", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOffhook()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isOffhook()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isOffhook", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRinging()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isRinging()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isRinging", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isIdle()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isIdle()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isIdle", r1);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRadioOn()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isRadioOn()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isRadioOn", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSimPinEnabled()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isSimPinEnabled()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isSimPinEnabled", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean supplyPin(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean supplyPin(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#supplyPin", r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean supplyPuk(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        com.android.internal.telephony.ITelephony $r4;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean supplyPuk(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#supplyPuk", r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] supplyPinReportResult(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r5;
        com.android.internal.telephony.ITelephony $r3;
        int[] $r4, $r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int[] supplyPinReportResult(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#supplyPinReportResult", r2);

        $r6 = newarray (int)[0];

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] supplyPukReportResult(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r6;
        com.android.internal.telephony.ITelephony $r4;
        int[] $r5, $r7;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: int[] supplyPukReportResult(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#]", r3);

        $r7 = newarray (int)[0];

        return $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean handlePinMmi(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean handlePinMmi(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#handlePinMmi", r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void toggleRadioOnOff()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void toggleRadioOnOff()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#toggleRadioOnOff", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRadio(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0, $z1;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean setRadio(boolean)>(z0);

     label2:
        return $z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#setRadio", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRadioPower(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0, $z1;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean setRadioPower(boolean)>(z0);

     label2:
        return $z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#setRadioPower", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateServiceLocation()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void updateServiceLocation()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#updateServiceLocation", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enableDataConnectivity()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean enableDataConnectivity()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#enableDataConnectivity", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disableDataConnectivity()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean disableDataConnectivity()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#disableDataConnectivity", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isDataConnectivityPossible()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isDataConnectivityPossible()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isDataConnectivityPossible", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean needsOtaServiceProvisioning()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean needsOtaServiceProvisioning()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#needsOtaServiceProvisioning", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDataEnabled(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void setDataEnabled(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#setDataEnabled", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getDataEnabled()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean getDataEnabled()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#getDataEnabled", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableSimplifiedNetworkSettings(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0;
        long $l0;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        virtualinvoke r0.<android.telephony.TelephonyManager: void enableSimplifiedNetworkSettingsForSubscriber(long,boolean)>($l0, z0);

        return;
    }

    public void enableSimplifiedNetworkSettingsForSubscriber(long, boolean)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;
        java.lang.NullPointerException $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void enableSimplifiedNetworkSettingsForSubscriber(long,boolean)>(l0, z0);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean getSimplifiedNetworkSettingsEnabled()
    {
        android.telephony.TelephonyManager r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $l0 = staticinvoke <android.telephony.TelephonyManager: long getDefaultSubscription()>();

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean getSimplifiedNetworkSettingsEnabledForSubscriber(long)>($l0);

        return $z0;
    }

    public boolean getSimplifiedNetworkSettingsEnabledForSubscriber(long)
    {
        android.telephony.TelephonyManager r0;
        long l0;
        com.android.internal.telephony.ITelephony $r2;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.telephony.TelephonyManager;

        l0 := @parameter0: long;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean getSimplifiedNetworkSettingsEnabledForSubscriber(long)>(l0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int invokeOemRilRequestRaw(byte[], byte[])
    {
        android.telephony.TelephonyManager r0;
        byte[] r1, r2;
        com.android.internal.telephony.ITelephony $r4;
        int $i0;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $i0 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: int invokeOemRilRequestRaw(byte[],byte[])>(r1, r2);

     label2:
        return $i0;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r3, $r5, $r7, $r8, $r10;
        android.telephony.TelephonyManager $r1;
        com.android.internal.telephony.PhoneConstants$State $r2, $r4, $r6;
        java.util.regex.Pattern $r9;

        <android.telephony.TelephonyManager: int CARRIER_PRIVILEGE_STATUS_ERROR_LOADING_RULES> = -2;

        <android.telephony.TelephonyManager: int CARRIER_PRIVILEGE_STATUS_RULES_NOT_LOADED> = -1;

        <android.telephony.TelephonyManager: int CARRIER_PRIVILEGE_STATUS_NO_ACCESS> = 0;

        <android.telephony.TelephonyManager: int CARRIER_PRIVILEGE_STATUS_HAS_ACCESS> = 1;

        <android.telephony.TelephonyManager: int DATA_SUSPENDED> = 3;

        <android.telephony.TelephonyManager: int DATA_CONNECTED> = 2;

        <android.telephony.TelephonyManager: int DATA_CONNECTING> = 1;

        <android.telephony.TelephonyManager: int DATA_DISCONNECTED> = 0;

        <android.telephony.TelephonyManager: int DATA_UNKNOWN> = -1;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_DORMANT> = 4;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_INOUT> = 3;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_OUT> = 2;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_IN> = 1;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_NONE> = 0;

        <android.telephony.TelephonyManager: int CALL_STATE_OFFHOOK> = 2;

        <android.telephony.TelephonyManager: int CALL_STATE_RINGING> = 1;

        <android.telephony.TelephonyManager: int CALL_STATE_IDLE> = 0;

        <android.telephony.TelephonyManager: int SIM_STATE_CARD_IO_ERROR> = 6;

        <android.telephony.TelephonyManager: int SIM_STATE_READY> = 5;

        <android.telephony.TelephonyManager: int SIM_STATE_NETWORK_LOCKED> = 4;

        <android.telephony.TelephonyManager: int SIM_STATE_PUK_REQUIRED> = 3;

        <android.telephony.TelephonyManager: int SIM_STATE_PIN_REQUIRED> = 2;

        <android.telephony.TelephonyManager: int SIM_STATE_ABSENT> = 1;

        <android.telephony.TelephonyManager: int SIM_STATE_UNKNOWN> = 0;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_4_G> = 3;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_3_G> = 2;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_2_G> = 1;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_UNKNOWN> = 0;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_GSM> = 16;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSPAP> = 15;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EHRPD> = 14;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_LTE> = 13;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EVDO_B> = 12;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_IDEN> = 11;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSPA> = 10;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSUPA> = 9;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSDPA> = 8;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_1xRTT> = 7;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EVDO_A> = 6;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EVDO_0> = 5;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_CDMA> = 4;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_UMTS> = 3;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EDGE> = 2;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_GPRS> = 1;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_UNKNOWN> = 0;

        <android.telephony.TelephonyManager: int PHONE_TYPE_SIP> = 3;

        <android.telephony.TelephonyManager: int PHONE_TYPE_CDMA> = 2;

        <android.telephony.TelephonyManager: int PHONE_TYPE_GSM> = 1;

        <android.telephony.TelephonyManager: int PHONE_TYPE_NONE> = 0;

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_FAILURE_CAUSE> = "failCause";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_LINK_PROPERTIES_KEY> = "linkProperties";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_CHANGE_REASON> = "reason";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_APN> = "apn";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_APN_TYPE> = "apnType";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_NETWORK_TYPE> = "networkType";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DATA_STATE> = "state";

        <android.telephony.TelephonyManager: java.lang.String ACTION_PRECISE_DATA_CONNECTION_STATE_CHANGED> = "android.intent.action.PRECISE_DATA_CONNECTION_STATE_CHANGED";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_PRECISE_DISCONNECT_CAUSE> = "precise_disconnect_cause";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_DISCONNECT_CAUSE> = "disconnect_cause";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_BACKGROUND_CALL_STATE> = "background_state";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_FOREGROUND_CALL_STATE> = "foreground_state";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_RINGING_CALL_STATE> = "ringing_state";

        <android.telephony.TelephonyManager: java.lang.String ACTION_PRECISE_CALL_STATE_CHANGED> = "android.intent.action.PRECISE_CALL_STATE";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_INCOMING_NUMBER> = "incoming_number";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE> = "state";

        <android.telephony.TelephonyManager: java.lang.String ACTION_RESPOND_VIA_MESSAGE> = "android.intent.action.RESPOND_VIA_MESSAGE";

        <android.telephony.TelephonyManager: java.lang.String ACTION_PHONE_STATE_CHANGED> = "android.intent.action.PHONE_STATE";

        <android.telephony.TelephonyManager: java.lang.String TAG> = "TelephonyManager";

        $r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.radio.multisim.config");

        <android.telephony.TelephonyManager: java.lang.String multiSimConfig> = $r0;

        $r1 = new android.telephony.TelephonyManager;

        specialinvoke $r1.<android.telephony.TelephonyManager: void <init>()>();

        <android.telephony.TelephonyManager: android.telephony.TelephonyManager sInstance> = $r1;

        $r2 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE> = $r3;

        $r4 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_RINGING> = $r5;

        $r6 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_OFFHOOK> = $r7;

        $r8 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getProcCmdLine()>();

        <android.telephony.TelephonyManager: java.lang.String sKernelCmdLine> = $r8;

        $r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\sproduct_type\\s*=\\s*(\\w+)");

        <android.telephony.TelephonyManager: java.util.regex.Pattern sProductTypePattern> = $r9;

        $r10 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("telephony.lteOnCdmaProductType", "");

        <android.telephony.TelephonyManager: java.lang.String sLteOnCdmaProductType> = $r10;

        return;
    }
}
