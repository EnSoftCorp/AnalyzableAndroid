public abstract class android.filterpacks.imageproc.ImageCombineFilter extends android.filterfw.core.Filter
{
    protected android.filterfw.core.Program mProgram;
    protected java.lang.String[] mInputNames;
    protected java.lang.String mOutputName;
    protected java.lang.String mParameterName;
    protected int mCurrentTarget;

    public void <init>(java.lang.String, java.lang.String[], java.lang.String, java.lang.String)
    {
        android.filterpacks.imageproc.ImageCombineFilter r0;
        java.lang.String r1, r3, r4;
        java.lang.String[] r2;

        r0 := @this: android.filterpacks.imageproc.ImageCombineFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.ImageCombineFilter: int mCurrentTarget> = 0;

        r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames> = r2;

        r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mOutputName> = r3;

        r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mParameterName> = r4;

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.ImageCombineFilter r0;
        java.lang.reflect.Field r1;
        int i0, i1;
        java.lang.String r2, $r3, $r5, $r6, $r10, $r11;
        java.lang.String[] $r4, r15;
        android.filterfw.core.MutableFrameFormat $r7;
        java.lang.Class $r8, $r9;
        java.lang.NoSuchFieldException $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: android.filterpacks.imageproc.ImageCombineFilter;

        $r3 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mParameterName>;

        if $r3 == null goto label4;

     label1:
        $r8 = class "android/filterpacks/imageproc/ImageCombineFilter";

        r1 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mProgram");

        $r11 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mParameterName>;

        $r10 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mParameterName>;

        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)>($r11, $r10, r1, $r9, 0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal Error: mProgram field not found!");

        throw $r13;

     label4:
        r15 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames>;

        i0 = lengthof r15;

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        r2 = r15[i1];

        $r7 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>(r2, $r7);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r6 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mOutputName>;

        $r4 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames>;

        $r5 = $r4[0];

        virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>($r6, $r5);

        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ImageCombineFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.ImageCombineFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    private void assertAllInputTargetsMatch()
    {
        android.filterpacks.imageproc.ImageCombineFilter r0;
        int i0, i1, i2, $i3;
        java.lang.String[] r1, $r3;
        java.lang.String r2, $r4, $r11;
        android.filterfw.core.FrameFormat $r5, $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12;

        r0 := @this: android.filterpacks.imageproc.ImageCombineFilter;

        $r3 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames>;

        $r4 = $r3[0];

        $r5 = virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>($r4);

        i0 = virtualinvoke $r5.<android.filterfw.core.FrameFormat: int getTarget()>();

        r1 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r2 = r1[i2];

        $r6 = virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>(r2);

        $i3 = virtualinvoke $r6.<android.filterfw.core.FrameFormat: int getTarget()>();

        if i0 == $i3 goto label2;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type mismatch of input formats in filter ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". All input frames must have the same target!");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.ImageCombineFilter r0;
        android.filterfw.core.FilterContext r1;
        int i0, i1, i2, $i3, $i4, $i5;
        android.filterfw.core.Frame[] r2;
        java.lang.String[] r3, $r5;
        java.lang.String r4, $r13;
        android.filterfw.core.FrameManager $r6;
        android.filterfw.core.Frame $r7, $r9, $r14, r15;
        android.filterfw.core.FrameFormat $r8, $r10;
        android.filterfw.core.Program $r11;

        r0 := @this: android.filterpacks.imageproc.ImageCombineFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 = 0;

        $r5 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames>;

        $i3 = lengthof $r5;

        r2 = newarray (android.filterfw.core.Frame)[$i3];

        r3 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String[] mInputNames>;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r4 = r3[i2];

        $i5 = i0;

        i0 = i0 + 1;

        $r14 = virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Frame pullInput(java.lang.String)>(r4);

        r2[$i5] = $r14;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r7 = r2[0];

        $r8 = virtualinvoke $r7.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        r15 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r8);

        $r9 = r2[0];

        $r10 = virtualinvoke $r9.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i4 = virtualinvoke $r10.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void updateProgramWithTarget(int,android.filterfw.core.FilterContext)>($i4, r1);

        $r11 = r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r11.<android.filterfw.core.Program: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>(r2, r15);

        $r13 = r0.<android.filterpacks.imageproc.ImageCombineFilter: java.lang.String mOutputName>;

        virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>($r13, r15);

        virtualinvoke r15.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    protected void updateProgramWithTarget(int, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.ImageCombineFilter r0;
        int i0, $i1;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Program $r2, $r3, $r4, $r11;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.filterpacks.imageproc.ImageCombineFilter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.filterfw.core.FilterContext;

        $i1 = r0.<android.filterpacks.imageproc.ImageCombineFilter: int mCurrentTarget>;

        if i0 == $i1 goto label6;

        lookupswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label2;
            default: goto label3;
        };

     label1:
        $r11 = virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program mProgram> = $r11;

        goto label4;

     label2:
        $r2 = virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program mProgram> = $r2;

        goto label4;

     label3:
        r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program mProgram> = null;

     label4:
        $r3 = r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program mProgram>;

        if $r3 != null goto label5;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create a program for image filter ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label5:
        $r4 = r0.<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>($r4, r1);

        r0.<android.filterpacks.imageproc.ImageCombineFilter: int mCurrentTarget> = i0;

     label6:
        return;
    }

    protected abstract android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext);

    protected abstract android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext);
}
