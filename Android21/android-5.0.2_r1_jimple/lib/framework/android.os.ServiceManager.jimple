public final class android.os.ServiceManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static android.os.IServiceManager sServiceManager;
    private static java.util.HashMap sCache;

    public void <init>()
    {
        android.os.ServiceManager r0;

        r0 := @this: android.os.ServiceManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.os.IServiceManager getIServiceManager()
    {
        android.os.IServiceManager $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        if $r0 == null goto label1;

        $r4 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        return $r4;

     label1:
        $r1 = staticinvoke <com.android.internal.os.BinderInternal: android.os.IBinder getContextObject()>();

        $r2 = staticinvoke <android.os.ServiceManagerNative: android.os.IServiceManager asInterface(android.os.IBinder)>($r1);

        <android.os.ServiceManager: android.os.IServiceManager sServiceManager> = $r2;

        $r3 = <android.os.ServiceManager: android.os.IServiceManager sServiceManager>;

        return $r3;
    }

    public static android.os.IBinder getService(java.lang.String)
    {
        java.lang.String r0;
        android.os.IBinder r1, $r5;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.os.IServiceManager $r4;
        android.os.RemoteException $r6, r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = <android.os.ServiceManager: java.util.HashMap sCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (android.os.IBinder) $r3;

        if r1 == null goto label3;

     label2:
        return r1;

     label3:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r5 = interfaceinvoke $r4.<android.os.IServiceManager: android.os.IBinder getService(java.lang.String)>(r0);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in getService", r7);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static void addService(java.lang.String, android.os.IBinder)
    {
        java.lang.String r0;
        android.os.IBinder r1;
        android.os.RemoteException r2, $r4;
        android.os.IServiceManager $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        interfaceinvoke $r3.<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>(r0, r1, 0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in addService", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void addService(java.lang.String, android.os.IBinder, boolean)
    {
        java.lang.String r0;
        android.os.IBinder r1;
        boolean z0;
        android.os.RemoteException r2, $r4;
        android.os.IServiceManager $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        interfaceinvoke $r3.<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>(r0, r1, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in addService", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.os.IBinder checkService(java.lang.String)
    {
        java.lang.String r0;
        android.os.IBinder r1, $r5;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.os.IServiceManager $r4;
        android.os.RemoteException $r6, r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = <android.os.ServiceManager: java.util.HashMap sCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (android.os.IBinder) $r3;

        if r1 == null goto label3;

     label2:
        return r1;

     label3:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r5 = interfaceinvoke $r4.<android.os.IServiceManager: android.os.IBinder checkService(java.lang.String)>(r0);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in checkService", r7);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static java.lang.String[] listServices() throws android.os.RemoteException
    {
        android.os.RemoteException r0, $r3;
        android.os.IServiceManager $r1;
        java.lang.String[] $r2;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IServiceManager getIServiceManager()>();

        $r2 = interfaceinvoke $r1.<android.os.IServiceManager: java.lang.String[] listServices()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceManager", "error in listServices", r0);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void initServiceCache(java.util.Map)
    {
        java.util.Map r0;
        java.util.HashMap $r1, $r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @parameter0: java.util.Map;

        $r1 = <android.os.ServiceManager: java.util.HashMap sCache>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        if $i0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setServiceCache may only be called once");

        throw $r3;

     label1:
        $r2 = <android.os.ServiceManager: java.util.HashMap sCache>;

        virtualinvoke $r2.<java.util.HashMap: void putAll(java.util.Map)>(r0);

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <android.os.ServiceManager: java.lang.String TAG> = "ServiceManager";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.os.ServiceManager: java.util.HashMap sCache> = $r0;

        return;
    }
}
