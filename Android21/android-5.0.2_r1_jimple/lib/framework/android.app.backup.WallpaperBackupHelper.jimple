public class android.app.backup.WallpaperBackupHelper extends android.app.backup.FileBackupHelperBase implements android.app.backup.BackupHelper
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean REJECT_OUTSIZED_RESTORE;
    private static final double MAX_HEIGHT_RATIO;
    private static final double MIN_HEIGHT_RATIO;
    public static final java.lang.String WALLPAPER_IMAGE;
    public static final java.lang.String WALLPAPER_INFO;
    public static final java.lang.String WALLPAPER_IMAGE_KEY;
    public static final java.lang.String WALLPAPER_INFO_KEY;
    private static final java.lang.String STAGE_FILE;
    android.content.Context mContext;
    java.lang.String[] mFiles;
    java.lang.String[] mKeys;
    double mDesiredMinWidth;
    double mDesiredMinHeight;

    public void <init>(android.content.Context, java.lang.String[], java.lang.String[])
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.content.Context r1;
        java.lang.String[] r2, r3;
        android.view.WindowManager r4;
        android.app.WallpaperManager r5;
        android.view.Display r6;
        android.graphics.Point r7, $r10;
        java.lang.Object $r8, $r9;
        int $i0, $i1, $i3;
        double $d0, $d1, $d2, $d3;
        byte $b2;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<android.app.backup.FileBackupHelperBase: void <init>(android.content.Context)>(r1);

        r0.<android.app.backup.WallpaperBackupHelper: android.content.Context mContext> = r1;

        r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mFiles> = r2;

        r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mKeys> = r3;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r4 = (android.view.WindowManager) $r8;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wallpaper");

        r5 = (android.app.WallpaperManager) $r9;

        r6 = interfaceinvoke r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r10 = new android.graphics.Point;

        specialinvoke $r10.<android.graphics.Point: void <init>()>();

        r7 = $r10;

        virtualinvoke r6.<android.view.Display: void getSize(android.graphics.Point)>(r7);

        $i0 = r7.<android.graphics.Point: int x>;

        $d0 = (double) $i0;

        r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinWidth> = $d0;

        $i1 = virtualinvoke r5.<android.app.WallpaperManager: int getDesiredMinimumHeight()>();

        $d1 = (double) $i1;

        r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinHeight> = $d1;

        $d2 = r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinHeight>;

        $b2 = $d2 cmpg 0.0;

        if $b2 > 0 goto label1;

        $i3 = r7.<android.graphics.Point: int y>;

        $d3 = (double) $i3;

        r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinHeight> = $d3;

     label1:
        return;
    }

    public void performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.os.ParcelFileDescriptor r1, r3;
        android.app.backup.BackupDataOutput r2;
        java.lang.String[] $r4, $r5;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        $r5 = r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mFiles>;

        $r4 = r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mKeys>;

        staticinvoke <android.app.backup.WallpaperBackupHelper: void performBackup_checked(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,java.lang.String[],java.lang.String[])>(r1, r2, r3, $r5, $r4);

        return;
    }

    public void restoreEntity(android.app.backup.BackupDataInputStream)
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.app.backup.BackupDataInputStream r1;
        java.lang.String r2, $r7, $r9, $r10, $r22, $r24;
        java.io.File r3, $r6, $r8, $r25, r26;
        android.graphics.BitmapFactory$Options r4, $r11;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.String[] $r5;
        boolean $z0, $z1, $z2, $z4;
        int $i0, $i1, $i3, $i4;
        byte $b2, $b5, $b6;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.app.backup.BackupDataInputStream;

        r2 = virtualinvoke r1.<android.app.backup.BackupDataInputStream: java.lang.String getKey()>();

        $r5 = r0.<android.app.backup.WallpaperBackupHelper: java.lang.String[] mKeys>;

        $z0 = virtualinvoke r0.<android.app.backup.WallpaperBackupHelper: boolean isKeyInList(java.lang.String,java.lang.String[])>(r2, $r5);

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("/data/data/com.android.settings/files/wallpaper");

        if $z1 == 0 goto label4;

        $r8 = new java.io.File;

        $r9 = <android.app.backup.WallpaperBackupHelper: java.lang.String STAGE_FILE>;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);

        r3 = $r8;

        $z4 = virtualinvoke r0.<android.app.backup.WallpaperBackupHelper: boolean writeFile(java.io.File,android.app.backup.BackupDataInputStream)>(r3, r1);

        if $z4 == 0 goto label3;

        $r11 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r11.<android.graphics.BitmapFactory$Options: void <init>()>();

        r4 = $r11;

        r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r10 = <android.app.backup.WallpaperBackupHelper: java.lang.String STAGE_FILE>;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r10, r4);

        $d1 = r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinHeight>;

        $i0 = r4.<android.graphics.BitmapFactory$Options: int outHeight>;

        $d2 = (double) $i0;

        d0 = $d1 / $d2;

        $i1 = r4.<android.graphics.BitmapFactory$Options: int outWidth>;

        $d4 = (double) $i1;

        $d3 = r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinWidth>;

        $b2 = $d4 cmpg $d3;

        if $b2 < 0 goto label1;

        $b5 = d0 cmpl 1.35;

        if $b5 >= 0 goto label1;

        $b6 = d0 cmpg 0.0;

        if $b6 > 0 goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restored image dimensions (w=");

        $i3 = r4.<android.graphics.BitmapFactory$Options: int outWidth>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", h=");

        $i4 = r4.<android.graphics.BitmapFactory$Options: int outHeight>;

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") too far off target (tw=");

        $d5 = r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinWidth>;

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", th=");

        $d6 = r0.<android.app.backup.WallpaperBackupHelper: double mDesiredMinHeight>;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); falling back to default wallpaper.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WallpaperBackupHelper", $r22);

        virtualinvoke r3.<java.io.File: boolean delete()>();

        return;

     label2:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("WallpaperBackupHelper", "Applying restored wallpaper image.");

        $r25 = new java.io.File;

        $r24 = <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_IMAGE>;

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>($r24);

        virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>($r25);

     label3:
        goto label5;

     label4:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("/data/system/wallpaper_info.xml");

        if $z2 == 0 goto label5;

        $r6 = new java.io.File;

        $r7 = <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_INFO>;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7);

        r26 = $r6;

        virtualinvoke r0.<android.app.backup.WallpaperBackupHelper: boolean writeFile(java.io.File,android.app.backup.BackupDataInputStream)>(r26, r1);

     label5:
        return;
    }

    public volatile void writeNewStateDescription(android.os.ParcelFileDescriptor)
    {
        android.app.backup.WallpaperBackupHelper r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: android.app.backup.WallpaperBackupHelper;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        specialinvoke r0.<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.io.File $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_INFO_KEY> = "/data/system/wallpaper_info.xml";

        <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_IMAGE_KEY> = "/data/data/com.android.settings/files/wallpaper";

        <android.app.backup.WallpaperBackupHelper: double MIN_HEIGHT_RATIO> = 0.0;

        <android.app.backup.WallpaperBackupHelper: double MAX_HEIGHT_RATIO> = 1.35;

        <android.app.backup.WallpaperBackupHelper: boolean REJECT_OUTSIZED_RESTORE> = 1;

        <android.app.backup.WallpaperBackupHelper: boolean DEBUG> = 0;

        <android.app.backup.WallpaperBackupHelper: java.lang.String TAG> = "WallpaperBackupHelper";

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "wallpaper");

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_IMAGE> = $r2;

        $r3 = new java.io.File;

        $r4 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "wallpaper_info.xml");

        $r5 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_INFO> = $r5;

        $r6 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(0);

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "wallpaper-tmp");

        $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.app.backup.WallpaperBackupHelper: java.lang.String STAGE_FILE> = $r8;

        return;
    }
}
