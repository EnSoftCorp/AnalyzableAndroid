class android.os.AsyncTask$SerialExecutor extends java.lang.Object implements java.util.concurrent.Executor
{
    final java.util.ArrayDeque mTasks;
    java.lang.Runnable mActive;

    private void <init>()
    {
        android.os.AsyncTask$SerialExecutor r0;
        java.util.ArrayDeque $r1;

        r0 := @this: android.os.AsyncTask$SerialExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<android.os.AsyncTask$SerialExecutor: java.util.ArrayDeque mTasks> = $r1;

        return;
    }

    public synchronized void execute(java.lang.Runnable)
    {
        android.os.AsyncTask$SerialExecutor r0;
        java.lang.Runnable r1, $r4;
        android.os.AsyncTask$SerialExecutor$1 $r2;
        java.util.ArrayDeque $r3;

        r0 := @this: android.os.AsyncTask$SerialExecutor;

        r1 := @parameter0: java.lang.Runnable;

        $r3 = r0.<android.os.AsyncTask$SerialExecutor: java.util.ArrayDeque mTasks>;

        $r2 = new android.os.AsyncTask$SerialExecutor$1;

        specialinvoke $r2.<android.os.AsyncTask$SerialExecutor$1: void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable)>(r0, r1);

        virtualinvoke $r3.<java.util.ArrayDeque: boolean offer(java.lang.Object)>($r2);

        $r4 = r0.<android.os.AsyncTask$SerialExecutor: java.lang.Runnable mActive>;

        if $r4 != null goto label1;

        virtualinvoke r0.<android.os.AsyncTask$SerialExecutor: void scheduleNext()>();

     label1:
        return;
    }

    protected synchronized void scheduleNext()
    {
        android.os.AsyncTask$SerialExecutor r0;
        java.util.ArrayDeque $r1;
        java.lang.Object $r2;
        java.lang.Runnable $r3, $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: android.os.AsyncTask$SerialExecutor;

        $r1 = r0.<android.os.AsyncTask$SerialExecutor: java.util.ArrayDeque mTasks>;

        $r2 = virtualinvoke $r1.<java.util.ArrayDeque: java.lang.Object poll()>();

        $r3 = (java.lang.Runnable) $r2;

        r0.<android.os.AsyncTask$SerialExecutor: java.lang.Runnable mActive> = $r3;

        if $r3 == null goto label1;

        $r5 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r4 = r0.<android.os.AsyncTask$SerialExecutor: java.lang.Runnable mActive>;

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    void <init>(android.os.AsyncTask$1)
    {
        android.os.AsyncTask$SerialExecutor r0;
        android.os.AsyncTask$1 r1;

        r0 := @this: android.os.AsyncTask$SerialExecutor;

        r1 := @parameter0: android.os.AsyncTask$1;

        specialinvoke r0.<android.os.AsyncTask$SerialExecutor: void <init>()>();

        return;
    }
}
