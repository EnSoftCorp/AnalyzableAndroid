public final class android.util.EventLog$Event extends java.lang.Object
{
    private final java.nio.ByteBuffer mBuffer;
    private static final int LENGTH_OFFSET;
    private static final int HEADER_SIZE_OFFSET;
    private static final int PROCESS_OFFSET;
    private static final int THREAD_OFFSET;
    private static final int SECONDS_OFFSET;
    private static final int NANOSECONDS_OFFSET;
    private static final int V1_PAYLOAD_START;
    private static final int DATA_OFFSET;
    private static final byte INT_TYPE;
    private static final byte LONG_TYPE;
    private static final byte STRING_TYPE;
    private static final byte LIST_TYPE;

    void <init>(byte[])
    {
        android.util.EventLog$Event r0;
        byte[] r1;
        java.nio.ByteBuffer $r2, $r3;
        java.nio.ByteOrder $r4;

        r0 := @this: android.util.EventLog$Event;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer> = $r2;

        $r3 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r4 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r4);

        return;
    }

    public int getProcessId()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(4);

        return $i0;
    }

    public int getThreadId()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(8);

        return $i0;
    }

    public long getTimeNanos()
    {
        android.util.EventLog$Event r0;
        java.nio.ByteBuffer $r1, $r2;
        int $i0, $i3;
        long $l1, $l2, $l4, $l5;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt(int)>(12);

        $l1 = (long) $i0;

        $l2 = $l1 * 1000000000L;

        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt(int)>(16);

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        return $l5;
    }

    public int getTag()
    {
        android.util.EventLog$Event r0;
        short s0;
        java.nio.ByteBuffer $r1, $r2;
        int $i1;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort(int)>(2);

        if s0 != 0 goto label1;

        s0 = 20;

     label1:
        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt(int)>(s0);

        return $i1;
    }

    public synchronized java.lang.Object getData()
    {
        android.util.EventLog$Event r0;
        short s0, $s1;
        java.nio.ByteBuffer $r1, $r2, $r3, $r5;
        int $i2, $i3, $i4, $i6;
        java.lang.Object $r7;
        java.lang.IllegalArgumentException $r8, r18;
        java.lang.StringBuilder $r9, $r10, $r12, $r14, $r15, $r17;
        java.lang.String $r11, $r16;
        java.nio.BufferUnderflowException $r13, r19;

        r0 := @this: android.util.EventLog$Event;

     label1:
        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort(int)>(2);

        if s0 != 0 goto label2;

        s0 = 20;

     label2:
        $r3 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $s1 = virtualinvoke $r2.<java.nio.ByteBuffer: short getShort(int)>(0);

        $i2 = s0 + $s1;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i2);

        $r5 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i3 = s0 + 4;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i3);

        $r7 = specialinvoke r0.<android.util.EventLog$Event: java.lang.Object decodeObject()>();

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;

        r18 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal entry payload: tag=");

        $i4 = virtualinvoke r0.<android.util.EventLog$Event: int getTag()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", $r11, r18);

        return null;

     label5:
        $r13 := @caughtexception;

        r19 = $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Truncated entry payload: tag=");

        $i6 = virtualinvoke r0.<android.util.EventLog$Event: int getTag()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", $r16, r19);

        return null;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
        catch java.nio.BufferUnderflowException from label1 to label3 with label5;
    }

    private java.lang.Object decodeObject()
    {
        android.util.EventLog$Event r0;
        byte b0;
        int i1, i2, i3, $i4, $i5, i8;
        java.nio.ByteBuffer $r1, $r2, $r4, $r6, $r7, $r9, $r10, $r12;
        java.lang.Integer $r3;
        java.lang.Object $r5;
        java.lang.String $r11, $r20;
        byte[] $r13;
        java.lang.Long $r14;
        long $l6;
        java.lang.StringBuilder $r15, $r17, $r18;
        java.lang.IllegalArgumentException $r16;
        java.io.UnsupportedEncodingException $r19, r21;
        java.lang.Object[] r22;

        r0 := @this: android.util.EventLog$Event;

        $r1 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

        tableswitch(b0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            default: goto label10;
        };

     label01:
        $r2 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i4 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r3;

     label02:
        $r12 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $l6 = virtualinvoke $r12.<java.nio.ByteBuffer: long getLong()>();

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        return $r14;

     label03:
        $r6 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i1 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt()>();

        $r7 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i2 = virtualinvoke $r7.<java.nio.ByteBuffer: int position()>();

        $r9 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $i5 = i2 + i1;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i5);

        $r11 = new java.lang.String;

        $r10 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        $r13 = virtualinvoke $r10.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r11.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r13, i2, i1, "UTF-8");

     label04:
        return $r11;

     label05:
        $r19 := @caughtexception;

        r21 = $r19;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", "UTF-8 is not supported", r21);

        return null;

     label06:
        $r4 = r0.<android.util.EventLog$Event: java.nio.ByteBuffer mBuffer>;

        i8 = virtualinvoke $r4.<java.nio.ByteBuffer: byte get()>();

        if i8 >= 0 goto label07;

        i8 = i8 + 256;

     label07:
        r22 = newarray (java.lang.Object)[i8];

        i3 = 0;

     label08:
        if i3 >= i8 goto label09;

        $r5 = specialinvoke r0.<android.util.EventLog$Event: java.lang.Object decodeObject()>();

        r22[i3] = $r5;

        i3 = i3 + 1;

        goto label08;

     label09:
        return r22;

     label10:
        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown entry type: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label05;
    }

    public static void <clinit>()
    {
        <android.util.EventLog$Event: byte LIST_TYPE> = 3;

        <android.util.EventLog$Event: byte STRING_TYPE> = 2;

        <android.util.EventLog$Event: byte LONG_TYPE> = 1;

        <android.util.EventLog$Event: byte INT_TYPE> = 0;

        <android.util.EventLog$Event: int DATA_OFFSET> = 4;

        <android.util.EventLog$Event: int V1_PAYLOAD_START> = 20;

        <android.util.EventLog$Event: int NANOSECONDS_OFFSET> = 16;

        <android.util.EventLog$Event: int SECONDS_OFFSET> = 12;

        <android.util.EventLog$Event: int THREAD_OFFSET> = 8;

        <android.util.EventLog$Event: int PROCESS_OFFSET> = 4;

        <android.util.EventLog$Event: int HEADER_SIZE_OFFSET> = 2;

        <android.util.EventLog$Event: int LENGTH_OFFSET> = 0;

        return;
    }
}
