public class android.graphics.drawable.InsetDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private final android.graphics.Rect mTmpRect;
    private android.graphics.drawable.InsetDrawable$InsetState mInsetState;
    private boolean mMutated;

    void <init>()
    {
        android.graphics.drawable.InsetDrawable r0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(null, null);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>(r1, i0, i0, i0, i0);

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, i2, i3;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(null, null);

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable> = r1;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft> = i0;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r4.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop> = i1;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r5.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight> = i2;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r6.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom> = i3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label1:
        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int i0, $i1;
        android.graphics.drawable.Drawable r6, $r10;
        int[] $r7;
        android.graphics.drawable.InsetDrawable$InsetState $r8, $r9, $r11;
        java.lang.StringBuilder $r12, $r14, $r16, $r17;
        org.xmlpull.v1.XmlPullParserException $r13;
        java.lang.String $r15, $r18;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r7 = <com.android.internal.R$styleable: int[] InsetDrawable>;

        r5 = staticinvoke <android.graphics.drawable.InsetDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r7);

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 0);

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r8.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable> = null;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        $r9 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r10 = $r9.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        if $r10 != null goto label4;

     label1:
        $i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 != 4 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r13 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <inset> tag requires a \'drawable\' attribute or ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child tag defining a drawable");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label3:
        r6 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r11 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r11.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable> = r6;

        virtualinvoke r6.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label4:
        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void verifyRequiredAttributes(android.content.res.TypedArray) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r4, $r13;
        android.graphics.drawable.Drawable $r3;
        int[] $r5, $r14;
        org.xmlpull.v1.XmlPullParserException $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        java.lang.String $r8, $r12;
        int $i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        if $r3 != null goto label2;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r5 = $r4.<android.graphics.drawable.InsetDrawable$InsetState: int[] mThemeAttrs>;

        if $r5 == null goto label1;

        $r13 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r14 = $r13.<android.graphics.drawable.InsetDrawable$InsetState: int[] mThemeAttrs>;

        $i0 = $r14[1];

        if $i0 != 0 goto label2;

     label1:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <inset> tag requires a \'drawable\' attribute or ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child tag defining a drawable");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label2:
        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.InsetDrawable$InsetState r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.drawable.Drawable r3;
        int[] $r4;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i4 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int mChangingConfigurations>;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i6 = $i4 | $i5;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mChangingConfigurations> = $i6;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int[] mThemeAttrs> = $r4;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getIndexCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getIndex(int)>(i1);

        tableswitch(i2)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label7;
            case 6: goto label3;
            default: goto label8;
        };

     label2:
        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        if r3 == null goto label8;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable> = r3;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        goto label8;

     label3:
        i3 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i2, -2147483648);

        if i3 == -2147483648 goto label8;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft> = i3;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop> = i3;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight> = i3;

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom> = i3;

        goto label8;

     label4:
        $i14 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft>;

        $i13 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i2, $i14);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft> = $i13;

        goto label8;

     label5:
        $i10 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop>;

        $i9 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i2, $i10);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop> = $i9;

        goto label8;

     label6:
        $i12 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight>;

        $i11 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i2, $i12);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight> = $i11;

        goto label8;

     label7:
        $i8 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom>;

        $i7 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i2, $i8);

        r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom> = $i7;

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.InsetDrawable$InsetState r2;
        android.content.res.TypedArray r3;
        org.xmlpull.v1.XmlPullParserException r4, $r9;
        java.lang.Throwable r5, $r11;
        int[] $r6, $r7, $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        if r2 == null goto label1;

        $r6 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int[] mThemeAttrs>;

        if $r6 != null goto label2;

     label1:
        return;

     label2:
        $r8 = r2.<android.graphics.drawable.InsetDrawable$InsetState: int[] mThemeAttrs>;

        $r7 = <com.android.internal.R$styleable: int[] InsetDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r8, $r7);

     label3:
        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void verifyRequiredAttributes(android.content.res.TypedArray)>(r3);

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label8;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r10;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

     label7:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r5;

     label8:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1, $r2;
        int[] $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        if $r1 == null goto label1;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: int[] mThemeAttrs>;

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.Drawable$Callback r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r2 == null goto label1;

        interfaceinvoke r2.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>(r0);

     label1:
        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        r3 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r0, r2, l0);

     label1:
        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        r3 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r0, r2);

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.InsetDrawable r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.InsetDrawable$InsetState $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i1 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $i3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        return $i4;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Rect r1;
        boolean z0, $z1;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        android.graphics.drawable.Drawable $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        $i1 = r1.<android.graphics.Rect: int left>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i0 = $r4.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft>;

        $i2 = $i1 + $i0;

        r1.<android.graphics.Rect: int left> = $i2;

        $i4 = r1.<android.graphics.Rect: int right>;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i3 = $r5.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight>;

        $i5 = $i4 + $i3;

        r1.<android.graphics.Rect: int right> = $i5;

        $i8 = r1.<android.graphics.Rect: int top>;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i6 = $r6.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop>;

        $i7 = $i8 + $i6;

        r1.<android.graphics.Rect: int top> = $i7;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i9 = $r7.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom>;

        $i10 = $i11 + $i9;

        r1.<android.graphics.Rect: int bottom> = $i10;

        if z0 != 0 goto label1;

        $r9 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i12 = $r9.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft>;

        $r8 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i13 = $r8.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight>;

        $i15 = $i12 | $i13;

        $r10 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i14 = $r10.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop>;

        $i16 = $i15 | $i14;

        $r11 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i17 = $r11.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom>;

        $i18 = $i16 | $i17;

        if $i18 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Insets r1, $r6;
        android.graphics.drawable.InsetDrawable$InsetState $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        $i1 = r1.<android.graphics.Insets: int left>;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i0 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft>;

        $i11 = $i1 + $i0;

        $i3 = r1.<android.graphics.Insets: int top>;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i2 = $r3.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop>;

        $i9 = $i3 + $i2;

        $i5 = r1.<android.graphics.Insets: int right>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i4 = $r4.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight>;

        $i10 = $i5 + $i4;

        $i7 = r1.<android.graphics.Insets: int bottom>;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i6 = $r5.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom>;

        $i8 = $i7 + $i6;

        $r6 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i11, $i9, $i10, $i8);

        return $r6;
    }

    public void setHotspot(float, float)
    {
        android.graphics.drawable.InsetDrawable r0;
        float f0, f1;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void getHotspotBounds(android.graphics.Rect)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>(r1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.InsetDrawable r0;
        boolean z0, z1, $z3;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $z3 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        return $z3;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i0;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>(r1);

        return;
    }

    public void setLayoutDirection(int)
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

        return;
    }

    public int getOpacity()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        return $z0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.InsetDrawable r0;
        int[] r1;
        boolean z0;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;
        android.graphics.Rect $r4;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        $r4 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>($r4);

        return z0;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.InsetDrawable r0;
        int i0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Rect r1, r2;
        android.graphics.drawable.InsetDrawable$InsetState $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.drawable.Drawable $r8;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpRect>;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $i1 = r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i0 = $r3.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetLeft>;

        $i2 = $i1 + $i0;

        r2.<android.graphics.Rect: int left> = $i2;

        $i4 = r2.<android.graphics.Rect: int top>;

        $r4 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i3 = $r4.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetTop>;

        $i5 = $i4 + $i3;

        r2.<android.graphics.Rect: int top> = $i5;

        $i7 = r2.<android.graphics.Rect: int right>;

        $r5 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i6 = $r5.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetRight>;

        $i8 = $i7 - $i6;

        r2.<android.graphics.Rect: int right> = $i8;

        $i9 = r2.<android.graphics.Rect: int bottom>;

        $r6 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i10 = $r6.<android.graphics.drawable.InsetDrawable$InsetState: int mInsetBottom>;

        $i11 = $i9 - $i10;

        r2.<android.graphics.Rect: int bottom> = $i11;

        $r7 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r8 = $r7.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $i14 = r2.<android.graphics.Rect: int left>;

        $i15 = r2.<android.graphics.Rect: int top>;

        $i12 = r2.<android.graphics.Rect: int right>;

        $i13 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i14, $i15, $i12, $i13);

        return;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.InsetDrawable$InsetState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        return;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.InsetDrawable$InsetState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.InsetDrawable$InsetState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.InsetDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.drawable.InsetDrawable$InsetState $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $z0 = r0.<android.graphics.drawable.InsetDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r3 = $r2.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.graphics.drawable.InsetDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        $r1 = r0.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState>;

        $r2 = $r1.<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable mDrawable>;

        return $r2;
    }

    private void <init>(android.graphics.drawable.InsetDrawable$InsetState, android.content.res.Resources)
    {
        android.graphics.drawable.InsetDrawable$InsetState $r0, r2;
        android.graphics.drawable.InsetDrawable r1;
        android.content.res.Resources r3;
        android.graphics.Rect $r4;

        r1 := @this: android.graphics.drawable.InsetDrawable;

        r2 := @parameter0: android.graphics.drawable.InsetDrawable$InsetState;

        r3 := @parameter1: android.content.res.Resources;

        specialinvoke r1.<android.graphics.drawable.Drawable: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r1.<android.graphics.drawable.InsetDrawable: android.graphics.Rect mTmpRect> = $r4;

        $r0 = new android.graphics.drawable.InsetDrawable$InsetState;

        specialinvoke $r0.<android.graphics.drawable.InsetDrawable$InsetState: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources)>(r2, r1, r3);

        r1.<android.graphics.drawable.InsetDrawable: android.graphics.drawable.InsetDrawable$InsetState mInsetState> = $r0;

        return;
    }

    void <init>(android.graphics.drawable.InsetDrawable$InsetState, android.content.res.Resources, android.graphics.drawable.InsetDrawable$1)
    {
        android.graphics.drawable.InsetDrawable r0;
        android.graphics.drawable.InsetDrawable$InsetState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.InsetDrawable$1 r3;

        r0 := @this: android.graphics.drawable.InsetDrawable;

        r1 := @parameter0: android.graphics.drawable.InsetDrawable$InsetState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.InsetDrawable$1;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources)>(r1, r2);

        return;
    }
}
