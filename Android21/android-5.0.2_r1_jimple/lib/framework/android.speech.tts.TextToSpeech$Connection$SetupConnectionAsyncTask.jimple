class android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask extends android.os.AsyncTask
{
    private final android.content.ComponentName mName;
    final android.speech.tts.TextToSpeech$Connection this$1;

    public void <init>(android.speech.tts.TextToSpeech$Connection, android.content.ComponentName)
    {
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r0;
        android.speech.tts.TextToSpeech$Connection r1;
        android.content.ComponentName r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        r2 := @parameter1: android.content.ComponentName;

        r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.content.ComponentName mName> = r2;

        return;
    }

    protected transient java.lang.Integer doInBackground(java.lang.Void[])
    {
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r0;
        java.lang.Void[] r1;
        java.lang.Object r2, $r8;
        java.lang.String[] r3;
        java.lang.String r4, $r17, $r22, $r28, $r32, $r36, $r39, $r40, $r45;
        java.lang.Throwable r5, $r46;
        android.speech.tts.TextToSpeech$Connection $r6, $r9, $r11, $r13, $r16, $r25, $r29, $r33, $r37, $r41, $r44;
        android.speech.tts.TextToSpeech $r7, $r15, $r30, $r34, $r38, $r43;
        boolean $z0;
        android.speech.tts.ITextToSpeechService $r10, $r26, $r42;
        android.os.IBinder $r12;
        android.speech.tts.ITextToSpeechCallback$Stub $r14;
        android.os.Bundle $r18, $r27, $r31, $r35, $r47;
        java.lang.StringBuilder $r19, $r21, $r23;
        android.content.ComponentName $r20;
        java.lang.Integer $r24, $r48;
        android.os.RemoteException $r49;

        r0 := @this: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r1 := @parameter0: java.lang.Void[];

        $r6 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r7 = $r6.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r8 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$900(android.speech.tts.TextToSpeech)>($r7);

        r2 = $r8;

        entermonitor $r8;

     label01:
        $z0 = virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: boolean isCancelled()>();

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return null;

     label03:
        $r9 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r10 = staticinvoke <android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService access$1100(android.speech.tts.TextToSpeech$Connection)>($r9);

        $r11 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r12 = virtualinvoke $r11.<android.speech.tts.TextToSpeech$Connection: android.os.IBinder getCallerIdentity()>();

        $r13 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r14 = staticinvoke <android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub access$1000(android.speech.tts.TextToSpeech$Connection)>($r13);

        interfaceinvoke $r10.<android.speech.tts.ITextToSpeechService: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>($r12, $r14);

        $r16 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r15 = $r16.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r18 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$700(android.speech.tts.TextToSpeech)>($r15);

        $r17 = virtualinvoke $r18.<android.os.Bundle: java.lang.String getString(java.lang.String)>("language");

        if $r17 != null goto label04;

        $r25 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r26 = staticinvoke <android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService access$1100(android.speech.tts.TextToSpeech$Connection)>($r25);

        r3 = interfaceinvoke $r26.<android.speech.tts.ITextToSpeechService: java.lang.String[] getClientDefaultLanguage()>();

        $r29 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r30 = $r29.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r27 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$700(android.speech.tts.TextToSpeech)>($r30);

        $r28 = r3[0];

        virtualinvoke $r27.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("language", $r28);

        $r33 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r34 = $r33.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r31 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$700(android.speech.tts.TextToSpeech)>($r34);

        $r32 = r3[1];

        virtualinvoke $r31.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("country", $r32);

        $r37 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r38 = $r37.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r35 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$700(android.speech.tts.TextToSpeech)>($r38);

        $r36 = r3[2];

        virtualinvoke $r35.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("variant", $r36);

        $r41 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r42 = staticinvoke <android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService access$1100(android.speech.tts.TextToSpeech$Connection)>($r41);

        $r45 = r3[0];

        $r40 = r3[1];

        $r39 = r3[2];

        r4 = interfaceinvoke $r42.<android.speech.tts.ITextToSpeechService: java.lang.String getDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>($r45, $r40, $r39);

        $r44 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r43 = $r44.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r47 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$700(android.speech.tts.TextToSpeech)>($r43);

        virtualinvoke $r47.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("voiceName", r4);

     label04:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set up connection to ");

        $r20 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.content.ComponentName mName>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r22);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label05:
        exitmonitor r2;

     label06:
        return $r24;

     label07:
        $r49 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", "Error connecting to service, setCallback() failed");

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        exitmonitor r2;

     label08:
        return $r48;

     label09:
        $r46 := @caughtexception;

        r5 = $r46;

        exitmonitor r2;

     label10:
        throw r5;

        catch android.os.RemoteException from label03 to label05 with label07;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected void onPostExecute(java.lang.Integer)
    {
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r0, $r8;
        java.lang.Integer r1;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r13;
        android.speech.tts.TextToSpeech$Connection $r4, $r7, $r9, $r10, $r12;
        android.speech.tts.TextToSpeech $r5, $r11;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r1 := @parameter0: java.lang.Integer;

        $r4 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r5 = $r4.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r6 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$900(android.speech.tts.TextToSpeech)>($r5);

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r8 = staticinvoke <android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask access$1200(android.speech.tts.TextToSpeech$Connection)>($r7);

        if $r8 != r0 goto label2;

        $r12 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        staticinvoke <android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask access$1202(android.speech.tts.TextToSpeech$Connection,android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask)>($r12, null);

     label2:
        $r9 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        staticinvoke <android.speech.tts.TextToSpeech$Connection: boolean access$1302(android.speech.tts.TextToSpeech$Connection,boolean)>($r9, 1);

        $r10 = r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.speech.tts.TextToSpeech$Connection this$1>;

        $r11 = $r10.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        staticinvoke <android.speech.tts.TextToSpeech: void access$1400(android.speech.tts.TextToSpeech,int)>($r11, $i0);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Integer) r1;

        virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: void onPostExecute(java.lang.Integer)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Integer $r3;

        r0 := @this: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: java.lang.Integer doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
