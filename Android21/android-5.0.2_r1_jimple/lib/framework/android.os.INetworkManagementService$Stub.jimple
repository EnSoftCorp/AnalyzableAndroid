public abstract class android.os.INetworkManagementService$Stub extends android.os.Binder implements android.os.INetworkManagementService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_registerObserver;
    static final int TRANSACTION_unregisterObserver;
    static final int TRANSACTION_listInterfaces;
    static final int TRANSACTION_getInterfaceConfig;
    static final int TRANSACTION_setInterfaceConfig;
    static final int TRANSACTION_clearInterfaceAddresses;
    static final int TRANSACTION_setInterfaceDown;
    static final int TRANSACTION_setInterfaceUp;
    static final int TRANSACTION_setInterfaceIpv6PrivacyExtensions;
    static final int TRANSACTION_disableIpv6;
    static final int TRANSACTION_enableIpv6;
    static final int TRANSACTION_getRoutes;
    static final int TRANSACTION_addRoute;
    static final int TRANSACTION_removeRoute;
    static final int TRANSACTION_setMtu;
    static final int TRANSACTION_shutdown;
    static final int TRANSACTION_getIpForwardingEnabled;
    static final int TRANSACTION_setIpForwardingEnabled;
    static final int TRANSACTION_startTethering;
    static final int TRANSACTION_stopTethering;
    static final int TRANSACTION_isTetheringStarted;
    static final int TRANSACTION_tetherInterface;
    static final int TRANSACTION_untetherInterface;
    static final int TRANSACTION_listTetheredInterfaces;
    static final int TRANSACTION_setDnsForwarders;
    static final int TRANSACTION_getDnsForwarders;
    static final int TRANSACTION_enableNat;
    static final int TRANSACTION_disableNat;
    static final int TRANSACTION_listTtys;
    static final int TRANSACTION_attachPppd;
    static final int TRANSACTION_detachPppd;
    static final int TRANSACTION_wifiFirmwareReload;
    static final int TRANSACTION_startAccessPoint;
    static final int TRANSACTION_stopAccessPoint;
    static final int TRANSACTION_setAccessPoint;
    static final int TRANSACTION_getNetworkStatsSummaryDev;
    static final int TRANSACTION_getNetworkStatsSummaryXt;
    static final int TRANSACTION_getNetworkStatsDetail;
    static final int TRANSACTION_getNetworkStatsUidDetail;
    static final int TRANSACTION_getNetworkStatsTethering;
    static final int TRANSACTION_setInterfaceQuota;
    static final int TRANSACTION_removeInterfaceQuota;
    static final int TRANSACTION_setInterfaceAlert;
    static final int TRANSACTION_removeInterfaceAlert;
    static final int TRANSACTION_setGlobalAlert;
    static final int TRANSACTION_setUidNetworkRules;
    static final int TRANSACTION_isBandwidthControlEnabled;
    static final int TRANSACTION_addIdleTimer;
    static final int TRANSACTION_removeIdleTimer;
    static final int TRANSACTION_setDnsServersForNetwork;
    static final int TRANSACTION_flushNetworkDnsCache;
    static final int TRANSACTION_setFirewallEnabled;
    static final int TRANSACTION_isFirewallEnabled;
    static final int TRANSACTION_setFirewallInterfaceRule;
    static final int TRANSACTION_setFirewallEgressSourceRule;
    static final int TRANSACTION_setFirewallEgressDestRule;
    static final int TRANSACTION_setFirewallUidRule;
    static final int TRANSACTION_addVpnUidRanges;
    static final int TRANSACTION_removeVpnUidRanges;
    static final int TRANSACTION_startClatd;
    static final int TRANSACTION_stopClatd;
    static final int TRANSACTION_isClatdStarted;
    static final int TRANSACTION_registerNetworkActivityListener;
    static final int TRANSACTION_unregisterNetworkActivityListener;
    static final int TRANSACTION_isNetworkActive;
    static final int TRANSACTION_createPhysicalNetwork;
    static final int TRANSACTION_createVirtualNetwork;
    static final int TRANSACTION_removeNetwork;
    static final int TRANSACTION_addInterfaceToNetwork;
    static final int TRANSACTION_removeInterfaceFromNetwork;
    static final int TRANSACTION_addLegacyRouteForNetId;
    static final int TRANSACTION_setDefaultNetId;
    static final int TRANSACTION_clearDefaultNetId;
    static final int TRANSACTION_setPermission;
    static final int TRANSACTION_clearPermission;
    static final int TRANSACTION_allowProtect;
    static final int TRANSACTION_denyProtect;
    static final int TRANSACTION_addInterfaceToLocalNetwork;
    static final int TRANSACTION_removeInterfaceFromLocalNetwork;

    public void <init>()
    {
        android.os.INetworkManagementService$Stub r0;

        r0 := @this: android.os.INetworkManagementService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.os.INetworkManagementService");

        return;
    }

    public static android.os.INetworkManagementService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.os.INetworkManagementService$Stub$Proxy $r2;
        boolean $z0;
        android.os.INetworkManagementService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.os.INetworkManagementService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.os.INetworkManagementService;

        if $z0 == 0 goto label2;

        $r3 = (android.os.INetworkManagementService) r1;

        return $r3;

     label2:
        $r2 = new android.os.INetworkManagementService$Stub$Proxy;

        specialinvoke $r2.<android.os.INetworkManagementService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.os.INetworkManagementService$Stub r0;

        r0 := @this: android.os.INetworkManagementService$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.INetworkManagementService$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i18, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50;
        android.os.Parcel r1, r2;
        android.net.INetworkManagementEventObserver r3, r31;
        android.net.InterfaceConfiguration r4, r35;
        java.lang.String r5, r6, r7, r33, r34, r36, r37, r38, r39, r40, r41, r42, r46, r48, r49, r54, r55, r56, r57, r59, r60, r61, r62, r63, r65, r66, r68, r74, r75, r76, r77, r78, r79, r81, r82, r83, r84, r87, r90, r91, r93, r96, r98;
        android.os.Parcelable$Creator $r8, $r10, $r14, $r16, $r17, $r20, $r21, $r23, $r25, $r28;
        java.lang.Object $r9, $r18, $r19, $r22, $r24, $r26, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26;
        android.os.IBinder $r11, $r12, $r29, $r30;
        byte $b5, $b6, $b11, $b13, $b17, $b19;
        java.lang.Object[] $r13, $r15;
        java.lang.String[] r32, r47, r50, r52, r53, r58, r80;
        android.net.RouteInfo[] r43;
        android.net.RouteInfo r44, r45, r92;
        android.net.Network r51;
        android.net.wifi.WifiConfiguration r64, r67;
        android.net.NetworkStats r69, r70, r71, r72, r73;
        long l29, l30, l31;
        android.net.UidRange[] r85, r86;
        android.os.INetworkActivityListener r88, r89;
        int[] r94, r95;
        java.util.ArrayList r97;

        r0 := @this: android.os.INetworkManagementService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label002;
            case 2: goto label003;
            case 3: goto label004;
            case 4: goto label005;
            case 5: goto label008;
            case 6: goto label011;
            case 7: goto label012;
            case 8: goto label013;
            case 9: goto label014;
            case 10: goto label017;
            case 11: goto label018;
            case 12: goto label019;
            case 13: goto label020;
            case 14: goto label023;
            case 15: goto label026;
            case 16: goto label027;
            case 17: goto label028;
            case 18: goto label031;
            case 19: goto label034;
            case 20: goto label035;
            case 21: goto label036;
            case 22: goto label039;
            case 23: goto label040;
            case 24: goto label041;
            case 25: goto label042;
            case 26: goto label045;
            case 27: goto label046;
            case 28: goto label047;
            case 29: goto label048;
            case 30: goto label049;
            case 31: goto label050;
            case 32: goto label051;
            case 33: goto label052;
            case 34: goto label055;
            case 35: goto label056;
            case 36: goto label059;
            case 37: goto label062;
            case 38: goto label065;
            case 39: goto label068;
            case 40: goto label071;
            case 41: goto label074;
            case 42: goto label075;
            case 43: goto label076;
            case 44: goto label077;
            case 45: goto label078;
            case 46: goto label079;
            case 47: goto label082;
            case 48: goto label085;
            case 49: goto label086;
            case 50: goto label087;
            case 51: goto label088;
            case 52: goto label089;
            case 53: goto label092;
            case 54: goto label095;
            case 55: goto label098;
            case 56: goto label101;
            case 57: goto label104;
            case 58: goto label107;
            case 59: goto label108;
            case 60: goto label109;
            case 61: goto label110;
            case 62: goto label111;
            case 63: goto label114;
            case 64: goto label115;
            case 65: goto label116;
            case 66: goto label119;
            case 67: goto label120;
            case 68: goto label125;
            case 69: goto label126;
            case 70: goto label127;
            case 71: goto label128;
            case 72: goto label131;
            case 73: goto label132;
            case 74: goto label133;
            case 75: goto label134;
            case 76: goto label135;
            case 77: goto label136;
            case 78: goto label137;
            case 79: goto label138;
            case 1598968902: goto label001;
            default: goto label139;
        };

     label001:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.os.INetworkManagementService");

        return 1;

     label002:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r30 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r3 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r30);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void registerObserver(android.net.INetworkManagementEventObserver)>(r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label003:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r29 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r31 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r29);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void unregisterObserver(android.net.INetworkManagementEventObserver)>(r31);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label004:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r32 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listInterfaces()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r32);

        return 1;

     label005:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r33 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>(r33);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r4 == null goto label006;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label007;

     label006:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label007:
        return 1;

     label008:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r34 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i23 goto label009;

        $r28 = <android.net.InterfaceConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r27 = interfaceinvoke $r28.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r35 = (android.net.InterfaceConfiguration) $r27;

        goto label010;

     label009:
        r35 = null;

     label010:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(r34, r35);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label011:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r36 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearInterfaceAddresses(java.lang.String)>(r36);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label012:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r37 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceDown(java.lang.String)>(r37);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label013:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r38 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceUp(java.lang.String)>(r38);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label014:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r39 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i24 goto label015;

        $z9 = 1;

        goto label016;

     label015:
        $z9 = 0;

     label016:
        z11 = $z9;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>(r39, z11);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label017:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r40 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void disableIpv6(java.lang.String)>(r40);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label018:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r41 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void enableIpv6(java.lang.String)>(r41);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label019:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r42 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r43 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.RouteInfo[] getRoutes(java.lang.String)>(r42);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r43, 1);

        return 1;

     label020:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i21 goto label021;

        $r23 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r24 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r44 = (android.net.RouteInfo) $r24;

        goto label022;

     label021:
        r44 = null;

     label022:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addRoute(int,android.net.RouteInfo)>(i25, r44);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label023:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i22 goto label024;

        $r25 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r26 = interfaceinvoke $r25.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r45 = (android.net.RouteInfo) $r26;

        goto label025;

     label024:
        r45 = null;

     label025:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeRoute(int,android.net.RouteInfo)>(i26, r45);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label026:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r46 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setMtu(java.lang.String,int)>(r46, i27);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label027:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void shutdown()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label028:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z12 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean getIpForwardingEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z12 == 0 goto label029;

        $b19 = 1;

        goto label030;

     label029:
        $b19 = 0;

     label030:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b19);

        return 1;

     label031:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i18 goto label032;

        $z8 = 1;

        goto label033;

     label032:
        $z8 = 0;

     label033:
        z13 = $z8;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setIpForwardingEnabled(boolean)>(z13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label034:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r47 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startTethering(java.lang.String[])>(r47);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label035:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopTethering()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label036:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z14 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isTetheringStarted()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z14 == 0 goto label037;

        $b17 = 1;

        goto label038;

     label037:
        $b17 = 0;

     label038:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b17);

        return 1;

     label039:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r48 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void tetherInterface(java.lang.String)>(r48);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label040:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r49 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void untetherInterface(java.lang.String)>(r49);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label041:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r50 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listTetheredInterfaces()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r50);

        return 1;

     label042:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i20 goto label043;

        $r21 = <android.net.Network: android.os.Parcelable$Creator CREATOR>;

        $r22 = interfaceinvoke $r21.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r51 = (android.net.Network) $r22;

        goto label044;

     label043:
        r51 = null;

     label044:
        r52 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsForwarders(android.net.Network,java.lang.String[])>(r51, r52);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label045:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r53 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] getDnsForwarders()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r53);

        return 1;

     label046:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r54 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r55 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void enableNat(java.lang.String,java.lang.String)>(r54, r55);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label047:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r56 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r57 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void disableNat(java.lang.String,java.lang.String)>(r56, r57);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label048:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r58 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listTtys()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r58);

        return 1;

     label049:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r59 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r60 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r59, r60, r5, r6, r7);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label050:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r61 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void detachPppd(java.lang.String)>(r61);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label051:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r62 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r63 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void wifiFirmwareReload(java.lang.String,java.lang.String)>(r62, r63);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label052:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i15 goto label053;

        $r20 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r19 = interfaceinvoke $r20.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r64 = (android.net.wifi.WifiConfiguration) $r19;

        goto label054;

     label053:
        r64 = null;

     label054:
        r65 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>(r64, r65);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label055:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r66 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopAccessPoint(java.lang.String)>(r66);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label056:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i16 goto label057;

        $r17 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r18 = interfaceinvoke $r17.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r67 = (android.net.wifi.WifiConfiguration) $r18;

        goto label058;

     label057:
        r67 = null;

     label058:
        r68 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>(r67, r68);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label059:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r69 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsSummaryDev()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r69 == null goto label060;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r69.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label061;

     label060:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label061:
        return 1;

     label062:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r70 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsSummaryXt()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r70 == null goto label063;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r70.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label064;

     label063:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label064:
        return 1;

     label065:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r71 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsDetail()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r71 == null goto label066;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r71.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label067;

     label066:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label067:
        return 1;

     label068:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r72 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsUidDetail(int)>(i28);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r72 == null goto label069;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r72.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label070;

     label069:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label070:
        return 1;

     label071:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r73 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsTethering()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r73 == null goto label072;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r73.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label073;

     label072:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label073:
        return 1;

     label074:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r74 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        l29 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceQuota(java.lang.String,long)>(r74, l29);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label075:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r75 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceQuota(java.lang.String)>(r75);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label076:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r76 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        l30 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceAlert(java.lang.String,long)>(r76, l30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label077:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r77 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceAlert(java.lang.String)>(r77);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label078:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        l31 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setGlobalAlert(long)>(l31);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label079:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i32 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i14 goto label080;

        $z7 = 1;

        goto label081;

     label080:
        $z7 = 0;

     label081:
        z15 = $z7;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setUidNetworkRules(int,boolean)>(i32, z15);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label082:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z16 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isBandwidthControlEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z16 == 0 goto label083;

        $b13 = 1;

        goto label084;

     label083:
        $b13 = 0;

     label084:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b13);

        return 1;

     label085:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r78 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i34 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addIdleTimer(java.lang.String,int,int)>(r78, i33, i34);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label086:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r79 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeIdleTimer(java.lang.String)>(r79);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label087:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r80 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        r81 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>(i35, r80, r81);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label088:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i36 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void flushNetworkDnsCache(int)>(i36);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label089:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i12 goto label090;

        $z6 = 1;

        goto label091;

     label090:
        $z6 = 0;

     label091:
        z17 = $z6;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEnabled(boolean)>(z17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z18 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isFirewallEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z18 == 0 goto label093;

        $b11 = 1;

        goto label094;

     label093:
        $b11 = 0;

     label094:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b11);

        return 1;

     label095:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r82 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label096;

        $z4 = 1;

        goto label097;

     label096:
        $z4 = 0;

     label097:
        z19 = $z4;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallInterfaceRule(java.lang.String,boolean)>(r82, z19);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label098:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r83 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i10 goto label099;

        $z5 = 1;

        goto label100;

     label099:
        $z5 = 0;

     label100:
        z20 = $z5;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEgressSourceRule(java.lang.String,boolean)>(r83, z20);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label101:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r84 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i37 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label102;

        $z3 = 1;

        goto label103;

     label102:
        $z3 = 0;

     label103:
        z21 = $z3;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEgressDestRule(java.lang.String,int,boolean)>(r84, i37, z21);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label104:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i38 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label105;

        $z2 = 1;

        goto label106;

     label105:
        $z2 = 0;

     label106:
        z22 = $z2;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallUidRule(int,boolean)>(i38, z22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label107:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i39 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r16 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r16);

        r85 = (android.net.UidRange[]) $r15;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addVpnUidRanges(int,android.net.UidRange[])>(i39, r85);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label108:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i40 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r14 = <android.net.UidRange: android.os.Parcelable$Creator CREATOR>;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r14);

        r86 = (android.net.UidRange[]) $r13;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeVpnUidRanges(int,android.net.UidRange[])>(i40, r86);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label109:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r87 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startClatd(java.lang.String)>(r87);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label110:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopClatd()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label111:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z23 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isClatdStarted()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z23 == 0 goto label112;

        $b6 = 1;

        goto label113;

     label112:
        $b6 = 0;

     label113:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b6);

        return 1;

     label114:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r88 = staticinvoke <android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>($r11);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void registerNetworkActivityListener(android.os.INetworkActivityListener)>(r88);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label115:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r89 = staticinvoke <android.os.INetworkActivityListener$Stub: android.os.INetworkActivityListener asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>(r89);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label116:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z24 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isNetworkActive()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z24 == 0 goto label117;

        $b5 = 1;

        goto label118;

     label117:
        $b5 = 0;

     label118:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b5);

        return 1;

     label119:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i41 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void createPhysicalNetwork(int)>(i41);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label120:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label121;

        $z1 = 1;

        goto label122;

     label121:
        $z1 = 0;

     label122:
        z25 = $z1;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label123;

        $z0 = 1;

        goto label124;

     label123:
        $z0 = 0;

     label124:
        z26 = $z0;

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void createVirtualNetwork(int,boolean,boolean)>(i42, z25, z26);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label125:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeNetwork(int)>(i43);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label126:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r90 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i44 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addInterfaceToNetwork(java.lang.String,int)>(r90, i44);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label127:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r91 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i45 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceFromNetwork(java.lang.String,int)>(r91, i45);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label128:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i46 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label129;

        $r10 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r92 = (android.net.RouteInfo) $r9;

        goto label130;

     label129:
        r92 = null;

     label130:
        i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>(i46, r92, i47);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label131:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDefaultNetId(int)>(i48);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label132:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearDefaultNetId()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label133:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r93 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r94 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setPermission(java.lang.String,int[])>(r93, r94);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label134:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r95 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearPermission(int[])>(r95);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label135:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i49 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void allowProtect(int)>(i49);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label136:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i50 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void denyProtect(int)>(i50);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label137:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r96 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r8 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        r97 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r8);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>(r96, r97);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label138:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r98 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceFromLocalNetwork(java.lang.String)>(r98);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label139:
        $z10 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z10;
    }

    public static void <clinit>()
    {
        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceFromLocalNetwork> = 79;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addInterfaceToLocalNetwork> = 78;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_denyProtect> = 77;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_allowProtect> = 76;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearPermission> = 75;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setPermission> = 74;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearDefaultNetId> = 73;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDefaultNetId> = 72;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addLegacyRouteForNetId> = 71;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceFromNetwork> = 70;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addInterfaceToNetwork> = 69;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeNetwork> = 68;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_createVirtualNetwork> = 67;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_createPhysicalNetwork> = 66;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isNetworkActive> = 65;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterNetworkActivityListener> = 64;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerNetworkActivityListener> = 63;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isClatdStarted> = 62;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopClatd> = 61;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startClatd> = 60;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeVpnUidRanges> = 59;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addVpnUidRanges> = 58;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallUidRule> = 57;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEgressDestRule> = 56;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEgressSourceRule> = 55;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallInterfaceRule> = 54;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isFirewallEnabled> = 53;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEnabled> = 52;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_flushNetworkDnsCache> = 51;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsServersForNetwork> = 50;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeIdleTimer> = 49;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addIdleTimer> = 48;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isBandwidthControlEnabled> = 47;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidNetworkRules> = 46;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setGlobalAlert> = 45;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceAlert> = 44;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceAlert> = 43;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceQuota> = 42;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceQuota> = 41;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsTethering> = 40;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsUidDetail> = 39;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsDetail> = 38;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsSummaryXt> = 37;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsSummaryDev> = 36;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setAccessPoint> = 35;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopAccessPoint> = 34;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startAccessPoint> = 33;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_wifiFirmwareReload> = 32;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_detachPppd> = 31;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_attachPppd> = 30;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTtys> = 29;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableNat> = 28;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableNat> = 27;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getDnsForwarders> = 26;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsForwarders> = 25;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTetheredInterfaces> = 24;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_untetherInterface> = 23;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_tetherInterface> = 22;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isTetheringStarted> = 21;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopTethering> = 20;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startTethering> = 19;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setIpForwardingEnabled> = 18;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getIpForwardingEnabled> = 17;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_shutdown> = 16;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setMtu> = 15;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeRoute> = 14;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addRoute> = 13;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getRoutes> = 12;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableIpv6> = 11;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableIpv6> = 10;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceIpv6PrivacyExtensions> = 9;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceUp> = 8;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceDown> = 7;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearInterfaceAddresses> = 6;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceConfig> = 5;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getInterfaceConfig> = 4;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listInterfaces> = 3;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterObserver> = 2;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerObserver> = 1;

        <android.os.INetworkManagementService$Stub: java.lang.String DESCRIPTOR> = "android.os.INetworkManagementService";

        return;
    }
}
