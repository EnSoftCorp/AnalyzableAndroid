public class com.android.internal.util.NotificationColorUtil extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.Object sLock;
    private static com.android.internal.util.NotificationColorUtil sInstance;
    private final com.android.internal.util.ImageUtils mImageUtils;
    private final java.util.WeakHashMap mGrayscaleBitmapCache;
    private final int mGrayscaleIconMaxSize;

    public static com.android.internal.util.NotificationColorUtil getInstance(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        com.android.internal.util.NotificationColorUtil $r4, $r5, $r6;

        r0 := @parameter0: android.content.Context;

        $r3 = <com.android.internal.util.NotificationColorUtil: java.lang.Object sLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.internal.util.NotificationColorUtil: com.android.internal.util.NotificationColorUtil sInstance>;

        if $r4 != null goto label2;

        $r6 = new com.android.internal.util.NotificationColorUtil;

        specialinvoke $r6.<com.android.internal.util.NotificationColorUtil: void <init>(android.content.Context)>(r0);

        <com.android.internal.util.NotificationColorUtil: com.android.internal.util.NotificationColorUtil sInstance> = $r6;

     label2:
        $r5 = <com.android.internal.util.NotificationColorUtil: com.android.internal.util.NotificationColorUtil sInstance>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void <init>(android.content.Context)
    {
        com.android.internal.util.NotificationColorUtil r0;
        android.content.Context r1;
        com.android.internal.util.ImageUtils $r2;
        java.util.WeakHashMap $r3;
        android.content.res.Resources $r4;
        int $i0;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.internal.util.ImageUtils;

        specialinvoke $r2.<com.android.internal.util.ImageUtils: void <init>()>();

        r0.<com.android.internal.util.NotificationColorUtil: com.android.internal.util.ImageUtils mImageUtils> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.internal.util.NotificationColorUtil: java.util.WeakHashMap mGrayscaleBitmapCache> = $r3;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104901);

        r0.<com.android.internal.util.NotificationColorUtil: int mGrayscaleIconMaxSize> = $i0;

        return;
    }

    public boolean isGrayscaleIcon(android.graphics.Bitmap)
    {
        com.android.internal.util.NotificationColorUtil r0;
        android.graphics.Bitmap r1;
        java.lang.Object r2, $r7, $r9, $r13, $r18, $r20, r26;
        android.util.Pair r3, $r17;
        java.lang.Throwable r4, r5, r6, $r21, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.util.WeakHashMap $r8, $r12;
        com.android.internal.util.ImageUtils $r10, $r11, r25;
        java.lang.Integer $r14, $r19;
        java.lang.Boolean $r15, $r22;
        boolean $z0, z1;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        r1 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = r0.<com.android.internal.util.NotificationColorUtil: int mGrayscaleIconMaxSize>;

        if $i0 > $i1 goto label01;

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i3 = r0.<com.android.internal.util.NotificationColorUtil: int mGrayscaleIconMaxSize>;

        if $i2 <= $i3 goto label02;

     label01:
        return 0;

     label02:
        $r7 = <com.android.internal.util.NotificationColorUtil: java.lang.Object sLock>;

        r2 = $r7;

        entermonitor $r7;

     label03:
        $r8 = r0.<com.android.internal.util.NotificationColorUtil: java.util.WeakHashMap mGrayscaleBitmapCache>;

        $r9 = virtualinvoke $r8.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.util.Pair) $r9;

        if r3 == null goto label05;

        $r18 = r3.<android.util.Pair: java.lang.Object second>;

        $r19 = (java.lang.Integer) $r18;

        $i4 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getGenerationId()>();

        if $i4 != $i5 goto label05;

        $r20 = r3.<android.util.Pair: java.lang.Object first>;

        $r22 = (java.lang.Boolean) $r20;

        $z0 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        exitmonitor r2;

     label04:
        return $z0;

     label05:
        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r23 := @caughtexception;

        r4 = $r23;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        $r10 = r0.<com.android.internal.util.NotificationColorUtil: com.android.internal.util.ImageUtils mImageUtils>;

        r25 = $r10;

        entermonitor $r10;

     label10:
        $r11 = r0.<com.android.internal.util.NotificationColorUtil: com.android.internal.util.ImageUtils mImageUtils>;

        z1 = virtualinvoke $r11.<com.android.internal.util.ImageUtils: boolean isGrayscale(android.graphics.Bitmap)>(r1);

        i6 = virtualinvoke r1.<android.graphics.Bitmap: int getGenerationId()>();

        exitmonitor r25;

     label11:
        goto label14;

     label12:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r25;

     label13:
        throw r5;

     label14:
        $r13 = <com.android.internal.util.NotificationColorUtil: java.lang.Object sLock>;

        r26 = $r13;

        entermonitor $r13;

     label15:
        $r12 = r0.<com.android.internal.util.NotificationColorUtil: java.util.WeakHashMap mGrayscaleBitmapCache>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r17 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r15, $r14);

        virtualinvoke $r12.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r17);

        exitmonitor r26;

     label16:
        goto label19;

     label17:
        $r24 := @caughtexception;

        r6 = $r24;

        exitmonitor r26;

     label18:
        throw r6;

     label19:
        return z1;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean isGrayscaleIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.util.NotificationColorUtil r0;
        android.graphics.drawable.Drawable r1, $r3;
        android.graphics.drawable.BitmapDrawable r2;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.graphics.Bitmap $r4, $r5;
        android.graphics.drawable.AnimationDrawable r6;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = r1 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label4;

        r2 = (android.graphics.drawable.BitmapDrawable) r1;

        $r4 = virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $z5 = virtualinvoke r0.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.graphics.Bitmap)>($r5);

        if $z5 == 0 goto label2;

        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        return $z6;

     label4:
        $z1 = r1 instanceof android.graphics.drawable.AnimationDrawable;

        if $z1 == 0 goto label7;

        r6 = (android.graphics.drawable.AnimationDrawable) r1;

        i0 = virtualinvoke r6.<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>();

        if i0 <= 0 goto label5;

        $r3 = virtualinvoke r6.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>(0);

        $z3 = virtualinvoke r0.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.graphics.drawable.Drawable)>($r3);

        if $z3 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;

     label7:
        $z2 = r1 instanceof android.graphics.drawable.VectorDrawable;

        if $z2 == 0 goto label8;

        return 1;

     label8:
        return 0;
    }

    public boolean isGrayscaleIcon(android.content.Context, int)
    {
        com.android.internal.util.NotificationColorUtil r0;
        android.content.Context r1;
        int i0;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if i0 == 0 goto label4;

     label1:
        $r3 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.graphics.drawable.Drawable)>($r3);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Drawable not found: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NotificationColorUtil", $r8);

        return 0;

     label4:
        return 0;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    public java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence)
    {
        com.android.internal.util.NotificationColorUtil r0;
        java.lang.CharSequence r1;
        android.text.Spanned r2;
        java.lang.Object[] r3, r5;
        android.text.SpannableStringBuilder r4, $r8;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r6, r7;
        boolean $z0, $z1;
        java.lang.String $r9;
        android.text.style.TextAppearanceSpan $r10;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        r2 = (android.text.Spanned) r1;

        $i2 = interfaceinvoke r2.<android.text.Spanned: int length()>();

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "java/lang/Object");

        $r8 = new android.text.SpannableStringBuilder;

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r9);

        r4 = $r8;

        r5 = r3;

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r6 = r5[i1];

        r7 = r6;

        $z1 = r6 instanceof android.text.style.TextAppearanceSpan;

        if $z1 == 0 goto label2;

        $r10 = (android.text.style.TextAppearanceSpan) r6;

        r7 = specialinvoke r0.<com.android.internal.util.NotificationColorUtil: android.text.style.TextAppearanceSpan processTextAppearanceSpan(android.text.style.TextAppearanceSpan)>($r10);

     label2:
        $i3 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r6);

        $i5 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r6);

        $i4 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r6);

        virtualinvoke r4.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r7, $i3, $i5, $i4);

        i1 = i1 + 1;

        goto label1;

     label3:
        return r4;

     label4:
        return r1;
    }

    private android.text.style.TextAppearanceSpan processTextAppearanceSpan(android.text.style.TextAppearanceSpan)
    {
        com.android.internal.util.NotificationColorUtil r0;
        android.text.style.TextAppearanceSpan r1, $r4;
        android.content.res.ColorStateList r2, $r6, $r8;
        int[] r3;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r5;
        int[][] $r7;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        r1 := @parameter0: android.text.style.TextAppearanceSpan;

        r2 = virtualinvoke r1.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>();

        if r2 == null goto label5;

        r3 = virtualinvoke r2.<android.content.res.ColorStateList: int[] getColors()>();

        z0 = 0;

        i0 = 0;

     label1:
        $i1 = lengthof r3;

        if i0 >= $i1 goto label4;

        $i4 = r3[i0];

        $z1 = staticinvoke <com.android.internal.util.ImageUtils: boolean isGrayscale(int)>($i4);

        if $z1 == 0 goto label3;

        if z0 != 0 goto label2;

        $i7 = lengthof r3;

        r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r3, $i7);

     label2:
        $i6 = r3[i0];

        $i5 = specialinvoke r0.<com.android.internal.util.NotificationColorUtil: int processColor(int)>($i6);

        r3[i0] = $i5;

        z0 = 1;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        $r4 = new android.text.style.TextAppearanceSpan;

        $r5 = virtualinvoke r1.<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>();

        $i2 = virtualinvoke r1.<android.text.style.TextAppearanceSpan: int getTextStyle()>();

        $i3 = virtualinvoke r1.<android.text.style.TextAppearanceSpan: int getTextSize()>();

        $r6 = new android.content.res.ColorStateList;

        $r7 = virtualinvoke r2.<android.content.res.ColorStateList: int[][] getStates()>();

        specialinvoke $r6.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r7, r3);

        $r8 = virtualinvoke r1.<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>();

        specialinvoke $r4.<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>($r5, $i2, $i3, $r6, $r8);

        return $r4;

     label5:
        return r1;
    }

    private int processColor(int)
    {
        com.android.internal.util.NotificationColorUtil r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.android.internal.util.NotificationColorUtil;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i3 = 255 - $i2;

        $i4 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i5 = 255 - $i4;

        $i6 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $i7 = 255 - $i6;

        $i8 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i1, $i3, $i5, $i7);

        return $i8;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.internal.util.NotificationColorUtil: java.lang.String TAG> = "NotificationColorUtil";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.util.NotificationColorUtil: java.lang.Object sLock> = $r0;

        return;
    }
}
