public class android.net.http.SslCertificate extends java.lang.Object
{
    private static java.lang.String ISO_8601_DATE_FORMAT;
    private final android.net.http.SslCertificate$DName mIssuedTo;
    private final android.net.http.SslCertificate$DName mIssuedBy;
    private final java.util.Date mValidNotBefore;
    private final java.util.Date mValidNotAfter;
    private final java.security.cert.X509Certificate mX509Certificate;
    private static final java.lang.String ISSUED_TO;
    private static final java.lang.String ISSUED_BY;
    private static final java.lang.String VALID_NOT_BEFORE;
    private static final java.lang.String VALID_NOT_AFTER;
    private static final java.lang.String X509_CERTIFICATE;

    public static android.os.Bundle saveState(android.net.http.SslCertificate)
    {
        android.net.http.SslCertificate r0;
        android.os.Bundle r1, $r4;
        java.security.cert.X509Certificate r2;
        android.net.http.SslCertificate$DName $r5, $r7;
        java.lang.String $r6, $r8, $r9, $r10;
        java.security.cert.CertificateEncodingException $r11;
        byte[] $r12;

        r0 := @parameter0: android.net.http.SslCertificate;

        if r0 != null goto label1;

        return null;

     label1:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r1 = $r4;

        $r5 = virtualinvoke r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>();

        $r6 = virtualinvoke $r5.<android.net.http.SslCertificate$DName: java.lang.String getDName()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("issued-to", $r6);

        $r7 = virtualinvoke r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>();

        $r8 = virtualinvoke $r7.<android.net.http.SslCertificate$DName: java.lang.String getDName()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("issued-by", $r8);

        $r9 = virtualinvoke r0.<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("valid-not-before", $r9);

        $r10 = virtualinvoke r0.<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("valid-not-after", $r10);

        r2 = r0.<android.net.http.SslCertificate: java.security.cert.X509Certificate mX509Certificate>;

        if r2 == null goto label5;

     label2:
        $r12 = virtualinvoke r2.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("x509-certificate", $r12);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        return r1;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }

    public static android.net.http.SslCertificate restoreState(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.security.cert.X509Certificate r1;
        byte[] r2;
        java.security.cert.CertificateFactory r3;
        java.security.cert.Certificate r4;
        java.io.ByteArrayInputStream $r5;
        android.net.http.SslCertificate $r6;
        java.lang.String $r7, $r8, $r9, $r11;
        java.util.Date $r10, $r12;
        java.security.cert.CertificateException $r13;

        r0 := @parameter0: android.os.Bundle;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r0.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("x509-certificate");

        if r2 != null goto label2;

        r1 = null;

        goto label5;

     label2:
        r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        r4 = virtualinvoke r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r5);

        r1 = (java.security.cert.X509Certificate) r4;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r1 = null;

     label5:
        $r6 = new android.net.http.SslCertificate;

        $r7 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("issued-to");

        $r8 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("issued-by");

        $r9 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("valid-not-before");

        $r10 = staticinvoke <android.net.http.SslCertificate: java.util.Date parseDate(java.lang.String)>($r9);

        $r11 = virtualinvoke r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("valid-not-after");

        $r12 = staticinvoke <android.net.http.SslCertificate: java.util.Date parseDate(java.lang.String)>($r11);

        specialinvoke $r6.<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.security.cert.X509Certificate)>($r7, $r8, $r10, $r12, r1);

        return $r6;

        catch java.security.cert.CertificateException from label2 to label3 with label4;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.net.http.SslCertificate r0;
        java.lang.String r1, r2, r3, r4;
        java.util.Date $r5, $r6;

        r0 := @this: android.net.http.SslCertificate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = staticinvoke <android.net.http.SslCertificate: java.util.Date parseDate(java.lang.String)>(r3);

        $r6 = staticinvoke <android.net.http.SslCertificate: java.util.Date parseDate(java.lang.String)>(r4);

        specialinvoke r0.<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.security.cert.X509Certificate)>(r1, r2, $r5, $r6, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.util.Date, java.util.Date)
    {
        android.net.http.SslCertificate r0;
        java.lang.String r1, r2;
        java.util.Date r3, r4;

        r0 := @this: android.net.http.SslCertificate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Date;

        r4 := @parameter3: java.util.Date;

        specialinvoke r0.<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.security.cert.X509Certificate)>(r1, r2, r3, r4, null);

        return;
    }

    public void <init>(java.security.cert.X509Certificate)
    {
        android.net.http.SslCertificate r0;
        java.security.cert.X509Certificate r1;
        java.security.Principal $r2, $r4;
        java.lang.String $r3, $r5;
        java.util.Date $r6, $r7;

        r0 := @this: android.net.http.SslCertificate;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = virtualinvoke r1.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r3 = interfaceinvoke $r2.<java.security.Principal: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r5 = interfaceinvoke $r4.<java.security.Principal: java.lang.String getName()>();

        $r6 = virtualinvoke r1.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        $r7 = virtualinvoke r1.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        specialinvoke r0.<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.security.cert.X509Certificate)>($r3, $r5, $r6, $r7, r1);

        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.util.Date, java.util.Date, java.security.cert.X509Certificate)
    {
        android.net.http.SslCertificate r0;
        java.lang.String r1, r2;
        java.util.Date r3, r4, $r8, $r9;
        java.security.cert.X509Certificate r5;
        android.net.http.SslCertificate$DName $r6, $r7;

        r0 := @this: android.net.http.SslCertificate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Date;

        r4 := @parameter3: java.util.Date;

        r5 := @parameter4: java.security.cert.X509Certificate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.net.http.SslCertificate$DName;

        specialinvoke $r6.<android.net.http.SslCertificate$DName: void <init>(android.net.http.SslCertificate,java.lang.String)>(r0, r1);

        r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName mIssuedTo> = $r6;

        $r7 = new android.net.http.SslCertificate$DName;

        specialinvoke $r7.<android.net.http.SslCertificate$DName: void <init>(android.net.http.SslCertificate,java.lang.String)>(r0, r2);

        r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName mIssuedBy> = $r7;

        $r8 = staticinvoke <android.net.http.SslCertificate: java.util.Date cloneDate(java.util.Date)>(r3);

        r0.<android.net.http.SslCertificate: java.util.Date mValidNotBefore> = $r8;

        $r9 = staticinvoke <android.net.http.SslCertificate: java.util.Date cloneDate(java.util.Date)>(r4);

        r0.<android.net.http.SslCertificate: java.util.Date mValidNotAfter> = $r9;

        r0.<android.net.http.SslCertificate: java.security.cert.X509Certificate mX509Certificate> = r5;

        return;
    }

    public java.util.Date getValidNotBeforeDate()
    {
        android.net.http.SslCertificate r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = r0.<android.net.http.SslCertificate: java.util.Date mValidNotBefore>;

        $r2 = staticinvoke <android.net.http.SslCertificate: java.util.Date cloneDate(java.util.Date)>($r1);

        return $r2;
    }

    public java.lang.String getValidNotBefore()
    {
        android.net.http.SslCertificate r0;
        java.util.Date $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = r0.<android.net.http.SslCertificate: java.util.Date mValidNotBefore>;

        $r2 = staticinvoke <android.net.http.SslCertificate: java.lang.String formatDate(java.util.Date)>($r1);

        return $r2;
    }

    public java.util.Date getValidNotAfterDate()
    {
        android.net.http.SslCertificate r0;
        java.util.Date $r1, $r2;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = r0.<android.net.http.SslCertificate: java.util.Date mValidNotAfter>;

        $r2 = staticinvoke <android.net.http.SslCertificate: java.util.Date cloneDate(java.util.Date)>($r1);

        return $r2;
    }

    public java.lang.String getValidNotAfter()
    {
        android.net.http.SslCertificate r0;
        java.util.Date $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = r0.<android.net.http.SslCertificate: java.util.Date mValidNotAfter>;

        $r2 = staticinvoke <android.net.http.SslCertificate: java.lang.String formatDate(java.util.Date)>($r1);

        return $r2;
    }

    public android.net.http.SslCertificate$DName getIssuedTo()
    {
        android.net.http.SslCertificate r0;
        android.net.http.SslCertificate$DName $r1;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName mIssuedTo>;

        return $r1;
    }

    public android.net.http.SslCertificate$DName getIssuedBy()
    {
        android.net.http.SslCertificate r0;
        android.net.http.SslCertificate$DName $r1;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName mIssuedBy>;

        return $r1;
    }

    private static java.lang.String getSerialNumber(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.math.BigInteger r1;
        byte[] $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.security.cert.X509Certificate;

        if r0 != null goto label1;

        return "";

     label1:
        r1 = virtualinvoke r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        if r1 != null goto label2;

        return "";

     label2:
        $r2 = virtualinvoke r1.<java.math.BigInteger: byte[] toByteArray()>();

        $r3 = staticinvoke <android.net.http.SslCertificate: java.lang.String fingerprint(byte[])>($r2);

        return $r3;
    }

    private static java.lang.String getDigest(java.security.cert.X509Certificate, java.lang.String)
    {
        java.security.cert.X509Certificate r0;
        java.lang.String r1, $r5;
        byte[] r2, r4;
        java.security.MessageDigest r3;
        java.security.cert.CertificateEncodingException $r6;
        java.security.NoSuchAlgorithmException $r7;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        r2 = virtualinvoke r0.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1);

        r4 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r2);

        $r5 = staticinvoke <android.net.http.SslCertificate: java.lang.String fingerprint(byte[])>(r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return "";

     label4:
        $r7 := @caughtexception;

        return "";

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    private static final java.lang.String fingerprint(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i2, $i3, $i4;
        byte b1;
        java.lang.String $r3;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label2:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label4;

        b1 = r0[i0];

        staticinvoke <java.lang.IntegralToString: java.lang.StringBuilder appendByteAsHex(java.lang.StringBuilder,byte,boolean)>(r1, b1, 1);

        $i4 = i0 + 1;

        $i3 = lengthof r0;

        if $i4 == $i3 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        android.net.http.SslCertificate r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r7, $r10, $r11;
        android.net.http.SslCertificate$DName $r3, $r8;
        java.lang.String $r4, $r9, $r12;

        r0 := @this: android.net.http.SslCertificate;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issued to: ");

        $r3 = r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName mIssuedTo>;

        $r4 = virtualinvoke $r3.<android.net.http.SslCertificate$DName: java.lang.String getDName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issued by: ");

        $r8 = r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName mIssuedBy>;

        $r9 = virtualinvoke $r8.<android.net.http.SslCertificate$DName: java.lang.String getDName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private static java.util.Date parseDate(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.text.SimpleDateFormat $r2;
        java.util.Date $r4;
        java.text.ParseException $r5;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new java.text.SimpleDateFormat;

        $r3 = <android.net.http.SslCertificate: java.lang.String ISO_8601_DATE_FORMAT>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    private static java.lang.String formatDate(java.util.Date)
    {
        java.util.Date r0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = new java.text.SimpleDateFormat;

        $r2 = <android.net.http.SslCertificate: java.lang.String ISO_8601_DATE_FORMAT>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r3;
    }

    private static java.util.Date cloneDate(java.util.Date)
    {
        java.util.Date r0, $r2;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.util.Date: java.lang.Object clone()>();

        $r2 = (java.util.Date) $r1;

        return $r2;
    }

    public android.view.View inflateCertificateView(android.content.Context)
    {
        android.net.http.SslCertificate r0;
        android.content.Context r1;
        android.view.LayoutInflater r2;
        android.view.View r3, $r8, $r14, $r17, $r19, $r23, $r27, $r28, $r30, $r37, $r39, $r40;
        android.net.http.SslCertificate$DName r4, r5;
        java.lang.String r6, r7, $r11, $r20, $r24, $r26, $r33, $r35, $r36, $r38, $r42;
        java.security.cert.X509Certificate $r9, $r18, $r22;
        android.widget.TextView $r10, $r13, $r16, $r21, $r25, $r29, $r31, $r32, $r34, $r41, $r43;
        java.util.Date $r12, $r15;

        r0 := @this: android.net.http.SslCertificate;

        r1 := @parameter0: android.content.Context;

        r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        r3 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367246, null);

        r4 = virtualinvoke r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>();

        if r4 == null goto label1;

        $r37 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909202);

        $r34 = (android.widget.TextView) $r37;

        $r35 = virtualinvoke r4.<android.net.http.SslCertificate$DName: java.lang.String getCName()>();

        virtualinvoke $r34.<android.widget.TextView: void setText(java.lang.CharSequence)>($r35);

        $r40 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909204);

        $r41 = (android.widget.TextView) $r40;

        $r38 = virtualinvoke r4.<android.net.http.SslCertificate$DName: java.lang.String getOName()>();

        virtualinvoke $r41.<android.widget.TextView: void setText(java.lang.CharSequence)>($r38);

        $r39 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909206);

        $r43 = (android.widget.TextView) $r39;

        $r42 = virtualinvoke r4.<android.net.http.SslCertificate$DName: java.lang.String getUName()>();

        virtualinvoke $r43.<android.widget.TextView: void setText(java.lang.CharSequence)>($r42);

     label1:
        $r8 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909208);

        $r10 = (android.widget.TextView) $r8;

        $r9 = r0.<android.net.http.SslCertificate: java.security.cert.X509Certificate mX509Certificate>;

        $r11 = staticinvoke <android.net.http.SslCertificate: java.lang.String getSerialNumber(java.security.cert.X509Certificate)>($r9);

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

        r5 = virtualinvoke r0.<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>();

        if r5 == null goto label2;

        $r28 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909210);

        $r29 = (android.widget.TextView) $r28;

        $r26 = virtualinvoke r5.<android.net.http.SslCertificate$DName: java.lang.String getCName()>();

        virtualinvoke $r29.<android.widget.TextView: void setText(java.lang.CharSequence)>($r26);

        $r27 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909212);

        $r32 = (android.widget.TextView) $r27;

        $r33 = virtualinvoke r5.<android.net.http.SslCertificate$DName: java.lang.String getOName()>();

        virtualinvoke $r32.<android.widget.TextView: void setText(java.lang.CharSequence)>($r33);

        $r30 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909214);

        $r31 = (android.widget.TextView) $r30;

        $r36 = virtualinvoke r5.<android.net.http.SslCertificate$DName: java.lang.String getUName()>();

        virtualinvoke $r31.<android.widget.TextView: void setText(java.lang.CharSequence)>($r36);

     label2:
        $r12 = virtualinvoke r0.<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>();

        r6 = specialinvoke r0.<android.net.http.SslCertificate: java.lang.String formatCertificateDate(android.content.Context,java.util.Date)>(r1, $r12);

        $r14 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909217);

        $r13 = (android.widget.TextView) $r14;

        virtualinvoke $r13.<android.widget.TextView: void setText(java.lang.CharSequence)>(r6);

        $r15 = virtualinvoke r0.<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>();

        r7 = specialinvoke r0.<android.net.http.SslCertificate: java.lang.String formatCertificateDate(android.content.Context,java.util.Date)>(r1, $r15);

        $r17 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909219);

        $r16 = (android.widget.TextView) $r17;

        virtualinvoke $r16.<android.widget.TextView: void setText(java.lang.CharSequence)>(r7);

        $r19 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909222);

        $r21 = (android.widget.TextView) $r19;

        $r18 = r0.<android.net.http.SslCertificate: java.security.cert.X509Certificate mX509Certificate>;

        $r20 = staticinvoke <android.net.http.SslCertificate: java.lang.String getDigest(java.security.cert.X509Certificate,java.lang.String)>($r18, "SHA256");

        virtualinvoke $r21.<android.widget.TextView: void setText(java.lang.CharSequence)>($r20);

        $r23 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(16909224);

        $r25 = (android.widget.TextView) $r23;

        $r22 = r0.<android.net.http.SslCertificate: java.security.cert.X509Certificate mX509Certificate>;

        $r24 = staticinvoke <android.net.http.SslCertificate: java.lang.String getDigest(java.security.cert.X509Certificate,java.lang.String)>($r22, "SHA1");

        virtualinvoke $r25.<android.widget.TextView: void setText(java.lang.CharSequence)>($r24);

        return r3;
    }

    private java.lang.String formatCertificateDate(android.content.Context, java.util.Date)
    {
        android.net.http.SslCertificate r0;
        android.content.Context r1;
        java.util.Date r2;
        java.text.DateFormat $r3;
        java.lang.String $r4;

        r0 := @this: android.net.http.SslCertificate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Date;

        if r2 != null goto label1;

        return "";

     label1:
        $r3 = staticinvoke <android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>(r1);

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r2);

        return $r4;
    }

    static void <clinit>()
    {
        <android.net.http.SslCertificate: java.lang.String X509_CERTIFICATE> = "x509-certificate";

        <android.net.http.SslCertificate: java.lang.String VALID_NOT_AFTER> = "valid-not-after";

        <android.net.http.SslCertificate: java.lang.String VALID_NOT_BEFORE> = "valid-not-before";

        <android.net.http.SslCertificate: java.lang.String ISSUED_BY> = "issued-by";

        <android.net.http.SslCertificate: java.lang.String ISSUED_TO> = "issued-to";

        <android.net.http.SslCertificate: java.lang.String ISO_8601_DATE_FORMAT> = "yyyy-MM-dd HH:mm:ssZ";

        return;
    }
}
