public class android.hardware.usb.UsbRequest extends java.lang.Object
{
    private static final java.lang.String TAG;
    private long mNativeContext;
    private android.hardware.usb.UsbEndpoint mEndpoint;
    private java.nio.ByteBuffer mBuffer;
    private int mLength;
    private java.lang.Object mClientData;

    public void <init>()
    {
        android.hardware.usb.UsbRequest r0;

        r0 := @this: android.hardware.usb.UsbRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean initialize(android.hardware.usb.UsbDeviceConnection, android.hardware.usb.UsbEndpoint)
    {
        android.hardware.usb.UsbRequest r0;
        android.hardware.usb.UsbDeviceConnection r1;
        android.hardware.usb.UsbEndpoint r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.hardware.usb.UsbRequest;

        r1 := @parameter0: android.hardware.usb.UsbDeviceConnection;

        r2 := @parameter1: android.hardware.usb.UsbEndpoint;

        r0.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint mEndpoint> = r2;

        $i0 = virtualinvoke r2.<android.hardware.usb.UsbEndpoint: int getAddress()>();

        $i1 = virtualinvoke r2.<android.hardware.usb.UsbEndpoint: int getAttributes()>();

        $i2 = virtualinvoke r2.<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>();

        $i3 = virtualinvoke r2.<android.hardware.usb.UsbEndpoint: int getInterval()>();

        $z0 = specialinvoke r0.<android.hardware.usb.UsbRequest: boolean native_init(android.hardware.usb.UsbDeviceConnection,int,int,int,int)>(r1, $i0, $i1, $i2, $i3);

        return $z0;
    }

    public void close()
    {
        android.hardware.usb.UsbRequest r0;

        r0 := @this: android.hardware.usb.UsbRequest;

        r0.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint mEndpoint> = null;

        specialinvoke r0.<android.hardware.usb.UsbRequest: void native_close()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.hardware.usb.UsbRequest r0;
        java.lang.Throwable r1, $r7;
        android.hardware.usb.UsbEndpoint $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.hardware.usb.UsbRequest;

     label1:
        $r2 = r0.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint mEndpoint>;

        if $r2 == null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endpoint still open in finalize(): ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("UsbRequest", $r6);

        virtualinvoke r0.<android.hardware.usb.UsbRequest: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.hardware.usb.UsbEndpoint getEndpoint()
    {
        android.hardware.usb.UsbRequest r0;
        android.hardware.usb.UsbEndpoint $r1;

        r0 := @this: android.hardware.usb.UsbRequest;

        $r1 = r0.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint mEndpoint>;

        return $r1;
    }

    public java.lang.Object getClientData()
    {
        android.hardware.usb.UsbRequest r0;
        java.lang.Object $r1;

        r0 := @this: android.hardware.usb.UsbRequest;

        $r1 = r0.<android.hardware.usb.UsbRequest: java.lang.Object mClientData>;

        return $r1;
    }

    public void setClientData(java.lang.Object)
    {
        android.hardware.usb.UsbRequest r0;
        java.lang.Object r1;

        r0 := @this: android.hardware.usb.UsbRequest;

        r1 := @parameter0: java.lang.Object;

        r0.<android.hardware.usb.UsbRequest: java.lang.Object mClientData> = r1;

        return;
    }

    public boolean queue(java.nio.ByteBuffer, int)
    {
        android.hardware.usb.UsbRequest r0;
        java.nio.ByteBuffer r1;
        int i0, $i1;
        boolean z0, z1, $z2, $z3, $z4;
        android.hardware.usb.UsbEndpoint $r2;
        java.lang.IllegalArgumentException $r3;
        byte[] $r4;

        r0 := @this: android.hardware.usb.UsbRequest;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $r2 = r0.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint mEndpoint>;

        $i1 = virtualinvoke $r2.<android.hardware.usb.UsbEndpoint: int getDirection()>();

        if $i1 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $z2 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z2 == 0 goto label3;

        z1 = specialinvoke r0.<android.hardware.usb.UsbRequest: boolean native_queue_direct(java.nio.ByteBuffer,int,boolean)>(r1, i0, z0);

        goto label5;

     label3:
        $z3 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z3 == 0 goto label4;

        $r4 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        z1 = specialinvoke r0.<android.hardware.usb.UsbRequest: boolean native_queue_array(byte[],int,boolean)>($r4, i0, z0);

        goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("buffer is not direct and has no array");

        throw $r3;

     label5:
        if z1 == 0 goto label6;

        r0.<android.hardware.usb.UsbRequest: java.nio.ByteBuffer mBuffer> = r1;

        r0.<android.hardware.usb.UsbRequest: int mLength> = i0;

     label6:
        return z1;
    }

    void dequeue()
    {
        android.hardware.usb.UsbRequest r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, $i4;
        android.hardware.usb.UsbEndpoint $r1;
        java.nio.ByteBuffer $r2, $r3, $r5;
        byte[] $r4;

        r0 := @this: android.hardware.usb.UsbRequest;

        $r1 = r0.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint mEndpoint>;

        $i1 = virtualinvoke $r1.<android.hardware.usb.UsbEndpoint: int getDirection()>();

        if $i1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r2 = r0.<android.hardware.usb.UsbRequest: java.nio.ByteBuffer mBuffer>;

        $z1 = virtualinvoke $r2.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label3;

        i0 = specialinvoke r0.<android.hardware.usb.UsbRequest: int native_dequeue_direct()>();

        goto label4;

     label3:
        $r3 = r0.<android.hardware.usb.UsbRequest: java.nio.ByteBuffer mBuffer>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: byte[] array()>();

        $i2 = r0.<android.hardware.usb.UsbRequest: int mLength>;

        i0 = specialinvoke r0.<android.hardware.usb.UsbRequest: int native_dequeue_array(byte[],int,boolean)>($r4, $i2, z0);

     label4:
        if i0 < 0 goto label5;

        $r5 = r0.<android.hardware.usb.UsbRequest: java.nio.ByteBuffer mBuffer>;

        $i3 = r0.<android.hardware.usb.UsbRequest: int mLength>;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

     label5:
        r0.<android.hardware.usb.UsbRequest: java.nio.ByteBuffer mBuffer> = null;

        r0.<android.hardware.usb.UsbRequest: int mLength> = 0;

        return;
    }

    public boolean cancel()
    {
        android.hardware.usb.UsbRequest r0;
        boolean $z0;

        r0 := @this: android.hardware.usb.UsbRequest;

        $z0 = specialinvoke r0.<android.hardware.usb.UsbRequest: boolean native_cancel()>();

        return $z0;
    }

    private native boolean native_init(android.hardware.usb.UsbDeviceConnection, int, int, int, int);

    private native void native_close();

    private native boolean native_queue_array(byte[], int, boolean);

    private native int native_dequeue_array(byte[], int, boolean);

    private native boolean native_queue_direct(java.nio.ByteBuffer, int, boolean);

    private native int native_dequeue_direct();

    private native boolean native_cancel();

    public static void <clinit>()
    {
        <android.hardware.usb.UsbRequest: java.lang.String TAG> = "UsbRequest";

        return;
    }
}
