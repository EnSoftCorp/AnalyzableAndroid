class android.widget.DatePickerCalendarDelegate extends android.widget.DatePicker$AbstractDatePickerDelegate implements android.view.View$OnClickListener, android.widget.DatePickerController
{
    private static final int USE_LOCALE;
    private static final int UNINITIALIZED;
    private static final int MONTH_AND_DAY_VIEW;
    private static final int YEAR_VIEW;
    private static final int DEFAULT_START_YEAR;
    private static final int DEFAULT_END_YEAR;
    private static final int ANIMATION_DURATION;
    private static final int MONTH_INDEX;
    private static final int DAY_INDEX;
    private static final int YEAR_INDEX;
    private java.text.SimpleDateFormat mYearFormat;
    private java.text.SimpleDateFormat mDayFormat;
    private android.widget.TextView mDayOfWeekView;
    private android.widget.LinearLayout mMonthDayYearLayout;
    private android.widget.LinearLayout mMonthAndDayLayout;
    private android.widget.TextView mHeaderMonthTextView;
    private android.widget.TextView mHeaderDayOfMonthTextView;
    private android.widget.TextView mHeaderYearTextView;
    private android.widget.DayPickerView mDayPickerView;
    private android.widget.YearPickerView mYearPickerView;
    private boolean mIsEnabled;
    private java.lang.String mDayPickerDescription;
    private java.lang.String mSelectDay;
    private java.lang.String mYearPickerDescription;
    private java.lang.String mSelectYear;
    private com.android.internal.widget.AccessibleDateAnimator mAnimator;
    private android.widget.DatePicker$OnDateChangedListener mDateChangedListener;
    private int mCurrentView;
    private java.util.Calendar mCurrentDate;
    private java.util.Calendar mTempDate;
    private java.util.Calendar mMinDate;
    private java.util.Calendar mMaxDate;
    private int mFirstDayOfWeek;
    private java.util.HashSet mListeners;

    public void <init>(android.widget.DatePicker, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.widget.DatePicker r1, $r26, $r32;
        android.content.Context r2, $r29, $r31, $r65, $r70;
        android.util.AttributeSet r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
        java.util.Locale r4, $r15, $r16;
        android.content.res.Resources r5;
        android.content.res.TypedArray r6;
        android.view.LayoutInflater r7;
        android.view.View r8, $r34, $r35, $r37, $r40, $r43, $r45, $r48, $r83;
        android.widget.LinearLayout r9, $r38, $r39, $r41;
        android.content.res.ColorStateList r10, $r53, $r54, $r58, $r62, $r63, $r68, $r76;
        android.view.animation.AlphaAnimation r11, r12, $r89, $r91;
        java.text.SimpleDateFormat $r13, $r14;
        java.util.HashSet $r17;
        java.util.Calendar $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r77;
        int[] $r30;
        java.lang.Object $r33;
        android.widget.TextView $r36, $r42, $r44, $r46, $r49, $r50, $r51, $r52, $r56, $r57, $r59, $r60, $r61, $r85, $r86, $r87, $r92;
        android.graphics.drawable.Drawable $r47, $r55;
        android.widget.YearPickerView $r64, $r66, $r69, $r79;
        android.widget.DayPickerView $r67, $r75, $r81;
        java.lang.String $r71, $r72, $r73, $r74;
        com.android.internal.widget.AccessibleDateAnimator $r78, $r80, $r82, $r84, $r88, $r90;
        long $l11;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.widget.DatePicker;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<android.widget.DatePicker$AbstractDatePickerDelegate: void <init>(android.widget.DatePicker,android.content.Context)>(r1, r2);

        $r13 = new java.text.SimpleDateFormat;

        $r15 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("y", $r15);

        r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mYearFormat> = $r13;

        $r14 = new java.text.SimpleDateFormat;

        $r16 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("d", $r16);

        r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mDayFormat> = $r14;

        r0.<android.widget.DatePickerCalendarDelegate: boolean mIsEnabled> = 1;

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = -1;

        r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek> = 0;

        $r17 = new java.util.HashSet;

        specialinvoke $r17.<java.util.HashSet: void <init>()>();

        r0.<android.widget.DatePickerCalendarDelegate: java.util.HashSet mListeners> = $r17;

        r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r20 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $r21 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r20, r4);

        r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate> = $r21;

        $r18 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $r19 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r18, r4);

        r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate> = $r19;

        $r24 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $r25 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r24, r4);

        r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate> = $r25;

        $r22 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r23 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r22, r4);

        r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate> = $r23;

        $r27 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        virtualinvoke $r27.<java.util.Calendar: void set(int,int,int)>(1900, 1, 1);

        $r28 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        virtualinvoke $r28.<java.util.Calendar: void set(int,int,int)>(2100, 12, 31);

        $r26 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        r5 = virtualinvoke $r26.<android.widget.DatePicker: android.content.res.Resources getResources()>();

        $r31 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        $r30 = <com.android.internal.R$styleable: int[] DatePicker>;

        r6 = virtualinvoke $r31.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r30, i0, i1);

        $r29 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        $r33 = virtualinvoke $r29.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r7 = (android.view.LayoutInflater) $r33;

        i2 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(17, 17367105);

        r8 = virtualinvoke r7.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i2, null);

        $r32 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        virtualinvoke $r32.<android.widget.DatePicker: void addView(android.view.View)>(r8);

        $r37 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909033);

        $r36 = (android.widget.TextView) $r37;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mDayOfWeekView> = $r36;

        $r35 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909032);

        r9 = (android.widget.LinearLayout) $r35;

        $r34 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909034);

        $r41 = (android.widget.LinearLayout) $r34;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthDayYearLayout> = $r41;

        $r40 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909035);

        $r39 = (android.widget.LinearLayout) $r40;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout> = $r39;

        $r38 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r38.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r45 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909036);

        $r44 = (android.widget.TextView) $r45;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView> = $r44;

        $r43 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909037);

        $r42 = (android.widget.TextView) $r43;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView> = $r42;

        $r48 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909038);

        $r49 = (android.widget.TextView) $r48;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView> = $r49;

        $r50 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r50.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r51 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        i3 = virtualinvoke $r51.<android.widget.TextView: int getHighlightColor()>();

        i4 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(9, -1);

        if i4 == -1 goto label1;

        $r92 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mDayOfWeekView>;

        virtualinvoke $r92.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i4);

     label1:
        $r46 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mDayOfWeekView>;

        $r47 = virtualinvoke r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(8);

        virtualinvoke $r46.<android.widget.TextView: void setBackground(android.graphics.drawable.Drawable)>($r47);

        $r55 = virtualinvoke r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r9.<android.widget.LinearLayout: void setBackground(android.graphics.drawable.Drawable)>($r55);

        i5 = virtualinvoke r6.<android.content.res.TypedArray: int getColor(int,int)>(20, i3);

        i7 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(10, -1);

        if i7 == -1 goto label2;

        $r85 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView>;

        virtualinvoke $r85.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i7);

     label2:
        $r52 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView>;

        $r56 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView>;

        $r53 = virtualinvoke $r56.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $r54 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>($r53, 16842913, i5);

        virtualinvoke $r52.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r54);

        i6 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(11, -1);

        if i6 == -1 goto label3;

        $r86 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView>;

        virtualinvoke $r86.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i6);

     label3:
        $r60 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView>;

        $r61 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView>;

        $r63 = virtualinvoke $r61.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $r62 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>($r63, 16842913, i5);

        virtualinvoke $r60.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r62);

        i9 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(12, -1);

        if i9 == -1 goto label4;

        $r87 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r87.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i9);

     label4:
        $r59 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        $r57 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        $r58 = virtualinvoke $r57.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $r68 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>($r58, 16842913, i5);

        virtualinvoke $r59.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r68);

        $r67 = new android.widget.DayPickerView;

        $r70 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        specialinvoke $r67.<android.widget.DayPickerView: void <init>(android.content.Context,android.widget.DatePickerController)>($r70, r0);

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView> = $r67;

        $r69 = new android.widget.YearPickerView;

        $r65 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        specialinvoke $r69.<android.widget.YearPickerView: void <init>(android.content.Context)>($r65);

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView> = $r69;

        $r64 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r64.<android.widget.YearPickerView: void init(android.widget.DatePickerController)>(r0);

        i8 = virtualinvoke r6.<android.content.res.TypedArray: int getColor(int,int)>(14, i3);

        $r66 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r66.<android.widget.YearPickerView: void setYearSelectedCircleColor(int)>(i8);

        r10 = virtualinvoke r6.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(15);

        i10 = virtualinvoke r6.<android.content.res.TypedArray: int getColor(int,int)>(18, i3);

        $r75 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r76 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>(r10, 16842913, i10);

        virtualinvoke $r75.<android.widget.DayPickerView: void setCalendarTextColor(android.content.res.ColorStateList)>($r76);

        $r73 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17040999);

        r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mDayPickerDescription> = $r73;

        $r74 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17041001);

        r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectDay> = $r74;

        $r71 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17041000);

        r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mYearPickerDescription> = $r71;

        $r72 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17041002);

        r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectYear> = $r72;

        $r83 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909039);

        $r84 = (com.android.internal.widget.AccessibleDateAnimator) $r83;

        r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator> = $r84;

        $r82 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r81 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r82.<com.android.internal.widget.AccessibleDateAnimator: void addView(android.view.View)>($r81);

        $r80 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r79 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r80.<com.android.internal.widget.AccessibleDateAnimator: void addView(android.view.View)>($r79);

        $r78 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r77 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $l11 = virtualinvoke $r77.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r78.<com.android.internal.widget.AccessibleDateAnimator: void setDateMillis(long)>($l11);

        $r91 = new android.view.animation.AlphaAnimation;

        specialinvoke $r91.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        r12 = $r91;

        virtualinvoke r12.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r90 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r90.<com.android.internal.widget.AccessibleDateAnimator: void setInAnimation(android.view.animation.Animation)>(r12);

        $r89 = new android.view.animation.AlphaAnimation;

        specialinvoke $r89.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        r11 = $r89;

        virtualinvoke r11.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r88 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r88.<com.android.internal.widget.AccessibleDateAnimator: void setOutAnimation(android.view.animation.Animation)>(r11);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(0);

        return;
    }

    private java.util.Calendar getCalendarForLocale(java.util.Calendar, java.util.Locale)
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar r1, r3, $r4;
        java.util.Locale r2;
        long l0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: java.util.Calendar;

        r2 := @parameter1: java.util.Locale;

        if r1 != null goto label1;

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r2);

        return $r4;

     label1:
        l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r2);

        virtualinvoke r3.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        return r3;
    }

    private int[] getMonthDayYearIndexes(java.lang.String)
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.lang.String r1, r3;
        int[] r2;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: java.lang.String;

        r2 = newarray (int)[3];

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\'.*?\'", "");

        i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(100);

        i1 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("M");

        if i1 == -1 goto label1;

        $i4 = i1;

        goto label2;

     label1:
        $i4 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("L");

     label2:
        i2 = $i4;

        i3 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("y");

        if i3 >= i2 goto label4;

        r2[2] = 0;

        if i2 >= i0 goto label3;

        r2[0] = 1;

        r2[1] = 2;

        goto label6;

     label3:
        r2[0] = 2;

        r2[1] = 1;

        goto label6;

     label4:
        r2[2] = 2;

        if i2 >= i0 goto label5;

        r2[0] = 0;

        r2[1] = 1;

        goto label6;

     label5:
        r2[0] = 1;

        r2[1] = 0;

     label6:
        return r2;
    }

    private void updateDisplay(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;
        java.lang.String r1, r3, r4, $r19, $r24, $r25, $r30, $r50;
        int[] r2;
        long l0;
        byte b1, b5;
        android.widget.TextView $r5, $r9, $r14, $r16, $r18, $r22, $r31, $r38, $r40, $r44, $r47;
        java.util.Locale $r6, $r20, $r23, $r49;
        android.widget.LinearLayout $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r37, $r39, $r42, $r43, $r45, $r48;
        int $i2, $i3, $i4;
        java.util.Calendar $r17, $r21, $r26, $r35, $r46;
        java.text.SimpleDateFormat $r27, $r32;
        java.util.Date $r28, $r29;
        com.android.internal.widget.AccessibleDateAnimator $r33, $r41;
        android.content.Context $r34, $r36;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mDayOfWeekView>;

        if $r5 == null goto label1;

        $r47 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mDayOfWeekView>;

        $r46 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r49 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r50 = virtualinvoke $r46.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(7, 2, $r49);

        virtualinvoke $r47.<android.widget.TextView: void setText(java.lang.CharSequence)>($r50);

     label1:
        $r6 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Locale mCurrentLocale>;

        r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r6, "yMMMd");

        r2 = specialinvoke r0.<android.widget.DatePickerCalendarDelegate: int[] getMonthDayYearIndexes(java.lang.String)>(r1);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthDayYearLayout>;

        virtualinvoke $r7.<android.widget.LinearLayout: void removeAllViews()>();

        $i2 = r2[2];

        if $i2 != 0 goto label2;

        $r43 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthDayYearLayout>;

        $r44 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r43.<android.widget.LinearLayout: void addView(android.view.View)>($r44);

        $r48 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthDayYearLayout>;

        $r42 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r48.<android.widget.LinearLayout: void addView(android.view.View)>($r42);

        goto label3;

     label2:
        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthDayYearLayout>;

        $r8 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r10.<android.widget.LinearLayout: void addView(android.view.View)>($r8);

        $r12 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthDayYearLayout>;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r12.<android.widget.LinearLayout: void addView(android.view.View)>($r9);

     label3:
        $r11 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r11.<android.widget.LinearLayout: void removeAllViews()>();

        $i3 = r2[0];

        $i4 = r2[1];

        if $i3 <= $i4 goto label4;

        $r39 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        $r40 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView>;

        virtualinvoke $r39.<android.widget.LinearLayout: void addView(android.view.View)>($r40);

        $r45 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        $r38 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView>;

        virtualinvoke $r45.<android.widget.LinearLayout: void addView(android.view.View)>($r38);

        goto label5;

     label4:
        $r13 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        $r14 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView>;

        virtualinvoke $r13.<android.widget.LinearLayout: void addView(android.view.View)>($r14);

        $r15 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        $r16 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView>;

        virtualinvoke $r15.<android.widget.LinearLayout: void addView(android.view.View)>($r16);

     label5:
        $r18 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderMonthTextView>;

        $r17 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r20 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r19 = virtualinvoke $r17.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(2, 1, $r20);

        $r23 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r24 = virtualinvoke $r19.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r23);

        virtualinvoke $r18.<android.widget.TextView: void setText(java.lang.CharSequence)>($r24);

        $r22 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderDayOfMonthTextView>;

        $r27 = r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mDayFormat>;

        $r21 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r28 = virtualinvoke $r21.<java.util.Calendar: java.util.Date getTime()>();

        $r25 = virtualinvoke $r27.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r28);

        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r25);

        $r31 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        $r32 = r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mYearFormat>;

        $r26 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r29 = virtualinvoke $r26.<java.util.Calendar: java.util.Date getTime()>();

        $r30 = virtualinvoke $r32.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r29);

        virtualinvoke $r31.<android.widget.TextView: void setText(java.lang.CharSequence)>($r30);

        $r35 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        l0 = virtualinvoke $r35.<java.util.Calendar: long getTimeInMillis()>();

        $r33 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r33.<com.android.internal.widget.AccessibleDateAnimator: void setDateMillis(long)>(l0);

        b1 = 24;

        $r34 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        r3 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r34, l0, b1);

        $r37 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r37.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>(r3);

        if z0 == 0 goto label6;

        b5 = 20;

        $r36 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r36, l0, b5);

        $r41 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r41.<com.android.internal.widget.AccessibleDateAnimator: void announceForAccessibility(java.lang.CharSequence)>(r4);

     label6:
        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updatePickers()>();

        return;
    }

    private void setCurrentView(int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, $i3, $i4;
        long l1;
        java.lang.String r1, r2, $r10, $r13, $r14, $r25, $r29, $r30;
        java.util.Calendar $r3;
        android.widget.YearPickerView $r4;
        java.text.SimpleDateFormat $r5;
        java.lang.Long $r6;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r22, $r23, $r24, $r26;
        com.android.internal.widget.AccessibleDateAnimator $r8, $r16, $r17, $r21, $r27, $r32;
        android.widget.LinearLayout $r15, $r28;
        android.widget.TextView $r18, $r31;
        android.widget.DayPickerView $r19;
        android.content.Context $r20;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        l1 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label5;
        };

     label1:
        $r19 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r19.<android.widget.DayPickerView: void onDateChanged()>();

        $i4 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i4 == i0 goto label2;

        $r28 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r28.<android.widget.LinearLayout: void setSelected(boolean)>(1);

        $r31 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r31.<android.widget.TextView: void setSelected(boolean)>(0);

        $r32 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r32.<com.android.internal.widget.AccessibleDateAnimator: void setDisplayedChild(int)>(0);

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = i0;

     label2:
        $r20 = r0.<android.widget.DatePickerCalendarDelegate: android.content.Context mContext>;

        r1 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r20, l1, 16);

        $r21 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mDayPickerDescription>;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<com.android.internal.widget.AccessibleDateAnimator: void setContentDescription(java.lang.CharSequence)>($r29);

        $r27 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r30 = r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectDay>;

        virtualinvoke $r27.<com.android.internal.widget.AccessibleDateAnimator: void announceForAccessibility(java.lang.CharSequence)>($r30);

        goto label5;

     label3:
        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        virtualinvoke $r4.<android.widget.YearPickerView: void onDateChanged()>();

        $i3 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i3 == i0 goto label4;

        $r15 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r15.<android.widget.LinearLayout: void setSelected(boolean)>(0);

        $r18 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r18.<android.widget.TextView: void setSelected(boolean)>(1);

        $r17 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r17.<com.android.internal.widget.AccessibleDateAnimator: void setDisplayedChild(int)>(1);

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = i0;

     label4:
        $r5 = r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mYearFormat>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r2 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r6);

        $r8 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mYearPickerDescription>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<com.android.internal.widget.AccessibleDateAnimator: void setContentDescription(java.lang.CharSequence)>($r14);

        $r16 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        $r13 = r0.<android.widget.DatePickerCalendarDelegate: java.lang.String mSelectYear>;

        virtualinvoke $r16.<com.android.internal.widget.AccessibleDateAnimator: void announceForAccessibility(java.lang.CharSequence)>($r13);

     label5:
        return;
    }

    public void init(int, int, int, android.widget.DatePicker$OnDateChangedListener)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2;
        android.widget.DatePicker$OnDateChangedListener r1;
        java.util.Calendar $r2, $r3, $r4;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.widget.DatePicker$OnDateChangedListener;

        r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mDateChangedListener> = r1;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(1, i0);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(2, i1);

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(5, i2);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(0);

        return;
    }

    public void updateDate(int, int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2;
        java.util.Calendar $r1, $r2, $r3;
        android.widget.DatePicker$OnDateChangedListener $r4, $r6;
        android.widget.DatePicker $r5;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, i0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(2, i1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(5, i2);

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mDateChangedListener>;

        if $r4 == null goto label1;

        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker$OnDateChangedListener mDateChangedListener>;

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        interfaceinvoke $r6.<android.widget.DatePicker$OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>($r5, i0, i1, i2);

     label1:
        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(0);

        return;
    }

    public int getYear()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public int getMonth()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public int getDayOfMonth()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public void setMinDate(long)
    {
        android.widget.DatePickerCalendarDelegate r0;
        long l0;
        java.util.Calendar $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        android.widget.DayPickerView $r7;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        $i3 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(6);

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $i4 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(6);

        if $i3 == $i4 goto label1;

        return;

     label1:
        $r5 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        $z0 = virtualinvoke $r5.<java.util.Calendar: boolean before(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r9.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updatePickers()>();

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(0);

     label2:
        $r6 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        virtualinvoke $r6.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r8 = virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar getSelectedDay()>();

        virtualinvoke $r7.<android.widget.DayPickerView: boolean goTo(java.util.Calendar,boolean,boolean,boolean)>($r8, 0, 1, 1);

        return;
    }

    public java.util.Calendar getMinDate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        return $r1;
    }

    public void setMaxDate(long)
    {
        android.widget.DatePickerCalendarDelegate r0;
        long l0;
        java.util.Calendar $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        android.widget.DayPickerView $r7;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        $i3 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(6);

        $r11 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $i4 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(6);

        if $i3 == $i4 goto label1;

        return;

     label1:
        $r5 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mTempDate>;

        $z0 = virtualinvoke $r5.<java.util.Calendar: boolean after(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r9.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updatePickers()>();

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(0);

     label2:
        $r6 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        virtualinvoke $r6.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        $r8 = virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar getSelectedDay()>();

        virtualinvoke $r7.<android.widget.DayPickerView: boolean goTo(java.util.Calendar,boolean,boolean,boolean)>($r8, 0, 1, 1);

        return;
    }

    public java.util.Calendar getMaxDate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        return $r1;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek> = i0;

        return;
    }

    public int getFirstDayOfWeek()
    {
        android.widget.DatePickerCalendarDelegate r0;
        int $i0, $i1, $i2;
        java.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $i0 = r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.widget.DatePickerCalendarDelegate: int mFirstDayOfWeek>;

        return $i2;

     label1:
        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        return $i1;
    }

    public int getMinYear()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public int getMaxYear()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public int getMinMonth()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public int getMaxMonth()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public int getMinDay()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public int getMaxDay()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public void setEnabled(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;
        android.widget.LinearLayout $r1;
        android.widget.TextView $r2;
        com.android.internal.widget.AccessibleDateAnimator $r3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.LinearLayout mMonthAndDayLayout>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.TextView mHeaderYearTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setEnabled(boolean)>(z0);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: com.android.internal.widget.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r3.<com.android.internal.widget.AccessibleDateAnimator: void setEnabled(boolean)>(z0);

        r0.<android.widget.DatePickerCalendarDelegate: boolean mIsEnabled> = z0;

        return;
    }

    public boolean isEnabled()
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $z0 = r0.<android.widget.DatePickerCalendarDelegate: boolean mIsEnabled>;

        return $z0;
    }

    public android.widget.CalendarView getCalendarView()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("CalendarView does not exists for the new DatePicker");

        throw $r1;
    }

    public void setCalendarViewShown(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getCalendarViewShown()
    {
        android.widget.DatePickerCalendarDelegate r0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        return 0;
    }

    public void setSpinnersShown(boolean)
    {
        android.widget.DatePickerCalendarDelegate r0;
        boolean z0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getSpinnersShown()
    {
        android.widget.DatePickerCalendarDelegate r0;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        return 0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.content.res.Configuration r1;
        java.text.SimpleDateFormat $r2, $r4;
        java.util.Locale $r3, $r5;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("y", $r3);

        r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mYearFormat> = $r2;

        $r4 = new java.text.SimpleDateFormat;

        $r5 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("d", $r5);

        r0.<android.widget.DatePickerCalendarDelegate: java.text.SimpleDateFormat mDayFormat> = $r4;

        return;
    }

    public android.os.Parcelable onSaveInstanceState(android.os.Parcelable)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.os.Parcelable r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i9;
        java.util.Calendar $r2, $r3, $r4, $r6, $r7;
        android.widget.DatePickerCalendarDelegate$SavedState $r5;
        long $l7, $l8;
        android.widget.YearPickerView $r8, $r9;
        android.widget.DayPickerView $r10;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        i2 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(5);

        i3 = -1;

        i4 = -1;

        $i5 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i5 != 0 goto label1;

        $r10 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        i3 = virtualinvoke $r10.<android.widget.DayPickerView: int getMostVisiblePosition()>();

        goto label2;

     label1:
        $i6 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i6 != 1 goto label2;

        $r8 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        i3 = virtualinvoke $r8.<android.widget.YearPickerView: int getFirstVisiblePosition()>();

        $r9 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        i4 = virtualinvoke $r9.<android.widget.YearPickerView: int getFirstPositionOffset()>();

     label2:
        $r5 = new android.widget.DatePickerCalendarDelegate$SavedState;

        $r6 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $l7 = virtualinvoke $r6.<java.util.Calendar: long getTimeInMillis()>();

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $l8 = virtualinvoke $r7.<java.util.Calendar: long getTimeInMillis()>();

        $i9 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        specialinvoke $r5.<android.widget.DatePickerCalendarDelegate$SavedState: void <init>(android.os.Parcelable,int,int,int,long,long,int,int,int,android.widget.DatePickerCalendarDelegate$1)>(r1, i0, i1, i2, $l7, $l8, $i9, i3, i4, null);

        return $r5;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.os.Parcelable r1;
        android.widget.DatePickerCalendarDelegate$SavedState r2;
        int i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10;
        java.util.Calendar $r3, $r4, $r5;
        long $l5, $l6;
        android.widget.YearPickerView $r6;
        android.widget.DayPickerView $r7;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.DatePickerCalendarDelegate$SavedState) r1;

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $i1 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: int getSelectedYear()>();

        $i2 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: int getSelectedMonth()>();

        $i3 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: int getSelectedDay()>();

        virtualinvoke $r3.<java.util.Calendar: void set(int,int,int)>($i1, $i2, $i3);

        $i4 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: int getCurrentView()>();

        r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView> = $i4;

        $r4 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMinDate>;

        $l5 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: long getMinDate()>();

        virtualinvoke $r4.<java.util.Calendar: void setTimeInMillis(long)>($l5);

        $r5 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mMaxDate>;

        $l6 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: long getMaxDate()>();

        virtualinvoke $r5.<java.util.Calendar: void setTimeInMillis(long)>($l6);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(0);

        $i7 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>($i7);

        i0 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: int getListPosition()>();

        if i0 == -1 goto label2;

        $i8 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i8 != 0 goto label1;

        $r7 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DayPickerView mDayPickerView>;

        virtualinvoke $r7.<android.widget.DayPickerView: void postSetSelection(int)>(i0);

        goto label2;

     label1:
        $i9 = r0.<android.widget.DatePickerCalendarDelegate: int mCurrentView>;

        if $i9 != 1 goto label2;

        $r6 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.YearPickerView mYearPickerView>;

        $i10 = virtualinvoke r2.<android.widget.DatePickerCalendarDelegate$SavedState: int getListPositionOffset()>();

        virtualinvoke $r6.<android.widget.YearPickerView: void postSetSelectionFromTop(int,int)>(i0, $i10);

     label2:
        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.util.List $r2;
        java.util.Calendar $r3;
        java.util.Date $r4;
        java.lang.String $r5;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke $r4.<java.util.Date: java.lang.String toString()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = class "android/widget/DatePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = class "android/widget/DatePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onYearSelected(int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, $i1;
        java.util.Calendar $r1, $r2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void adjustDayInMonthIfNeeded(int,int)>($i1, i0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(1, i0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updatePickers()>();

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(0);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(1);

        return;
    }

    private void adjustDayInMonthIfNeeded(int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2, i3;
        java.util.Calendar $r1, $r2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        i2 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        i3 = staticinvoke <android.widget.DatePickerCalendarDelegate: int getDaysInMonth(int,int)>(i0, i1);

        if i2 <= i3 goto label1;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(5, i3);

     label1:
        return;
    }

    public static int getDaysInMonth(int, int)
    {
        int i0, i1, $i2;
        byte $b3;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label1;
            default: goto label6;
        };

     label1:
        return 31;

     label2:
        return 30;

     label3:
        $i2 = i1 % 4;

        if $i2 != 0 goto label4;

        $b3 = 29;

        goto label5;

     label4:
        $b3 = 28;

     label5:
        return $b3;

     label6:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Month");

        throw $r0;
    }

    public void onDayOfMonthSelected(int, int, int)
    {
        android.widget.DatePickerCalendarDelegate r0;
        int i0, i1, i2;
        java.util.Calendar $r1, $r2, $r3;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, i0);

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(2, i1);

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(5, i2);

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updatePickers()>();

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>(1);

        return;
    }

    private void updatePickers()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Iterator r1;
        android.widget.OnDateChangedListener r2;
        java.util.HashSet $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r3 = r0.<android.widget.DatePickerCalendarDelegate: java.util.HashSet mListeners>;

        r1 = virtualinvoke $r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.widget.OnDateChangedListener) $r4;

        interfaceinvoke r2.<android.widget.OnDateChangedListener: void onDateChanged()>();

        goto label1;

     label2:
        return;
    }

    public void registerOnDateChangedListener(android.widget.OnDateChangedListener)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.widget.OnDateChangedListener r1;
        java.util.HashSet $r2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.widget.OnDateChangedListener;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.HashSet mListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void unregisterOnDateChangedListener(android.widget.OnDateChangedListener)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.widget.OnDateChangedListener r1;
        java.util.HashSet $r2;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.widget.OnDateChangedListener;

        $r2 = r0.<android.widget.DatePickerCalendarDelegate: java.util.HashSet mListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.util.Calendar getSelectedDay()
    {
        android.widget.DatePickerCalendarDelegate r0;
        java.util.Calendar $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: java.util.Calendar mCurrentDate>;

        return $r1;
    }

    public void tryVibrate()
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.widget.DatePicker $r1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        $r1 = r0.<android.widget.DatePickerCalendarDelegate: android.widget.DatePicker mDelegator>;

        virtualinvoke $r1.<android.widget.DatePicker: boolean performHapticFeedback(int)>(5);

        return;
    }

    public void onClick(android.view.View)
    {
        android.widget.DatePickerCalendarDelegate r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: android.widget.DatePickerCalendarDelegate;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.widget.DatePickerCalendarDelegate: void tryVibrate()>();

        $i0 = virtualinvoke r1.<android.view.View: int getId()>();

        if $i0 != 16909038 goto label1;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(1);

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<android.view.View: int getId()>();

        if $i1 != 16909035 goto label2;

        specialinvoke r0.<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>(0);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.widget.DatePickerCalendarDelegate: int YEAR_INDEX> = 2;

        <android.widget.DatePickerCalendarDelegate: int DAY_INDEX> = 1;

        <android.widget.DatePickerCalendarDelegate: int MONTH_INDEX> = 0;

        <android.widget.DatePickerCalendarDelegate: int ANIMATION_DURATION> = 300;

        <android.widget.DatePickerCalendarDelegate: int DEFAULT_END_YEAR> = 2100;

        <android.widget.DatePickerCalendarDelegate: int DEFAULT_START_YEAR> = 1900;

        <android.widget.DatePickerCalendarDelegate: int YEAR_VIEW> = 1;

        <android.widget.DatePickerCalendarDelegate: int MONTH_AND_DAY_VIEW> = 0;

        <android.widget.DatePickerCalendarDelegate: int UNINITIALIZED> = -1;

        <android.widget.DatePickerCalendarDelegate: int USE_LOCALE> = 0;

        return;
    }
}
