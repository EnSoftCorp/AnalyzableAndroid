public abstract class android.media.VolumeProvider extends java.lang.Object
{
    public static final int VOLUME_CONTROL_FIXED;
    public static final int VOLUME_CONTROL_RELATIVE;
    public static final int VOLUME_CONTROL_ABSOLUTE;
    private final int mControlType;
    private final int mMaxVolume;
    private int mCurrentVolume;
    private android.media.VolumeProvider$Callback mCallback;

    public void <init>(int, int, int)
    {
        android.media.VolumeProvider r0;
        int i0, i1, i2;

        r0 := @this: android.media.VolumeProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.VolumeProvider: int mControlType> = i0;

        r0.<android.media.VolumeProvider: int mMaxVolume> = i1;

        r0.<android.media.VolumeProvider: int mCurrentVolume> = i2;

        return;
    }

    public final int getVolumeControl()
    {
        android.media.VolumeProvider r0;
        int $i0;

        r0 := @this: android.media.VolumeProvider;

        $i0 = r0.<android.media.VolumeProvider: int mControlType>;

        return $i0;
    }

    public final int getMaxVolume()
    {
        android.media.VolumeProvider r0;
        int $i0;

        r0 := @this: android.media.VolumeProvider;

        $i0 = r0.<android.media.VolumeProvider: int mMaxVolume>;

        return $i0;
    }

    public final int getCurrentVolume()
    {
        android.media.VolumeProvider r0;
        int $i0;

        r0 := @this: android.media.VolumeProvider;

        $i0 = r0.<android.media.VolumeProvider: int mCurrentVolume>;

        return $i0;
    }

    public final void setCurrentVolume(int)
    {
        android.media.VolumeProvider r0;
        int i0;
        android.media.VolumeProvider$Callback $r1, $r2;

        r0 := @this: android.media.VolumeProvider;

        i0 := @parameter0: int;

        r0.<android.media.VolumeProvider: int mCurrentVolume> = i0;

        $r1 = r0.<android.media.VolumeProvider: android.media.VolumeProvider$Callback mCallback>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.VolumeProvider: android.media.VolumeProvider$Callback mCallback>;

        virtualinvoke $r2.<android.media.VolumeProvider$Callback: void onVolumeChanged(android.media.VolumeProvider)>(r0);

     label1:
        return;
    }

    public void onSetVolumeTo(int)
    {
        android.media.VolumeProvider r0;
        int i0;

        r0 := @this: android.media.VolumeProvider;

        i0 := @parameter0: int;

        return;
    }

    public void onAdjustVolume(int)
    {
        android.media.VolumeProvider r0;
        int i0;

        r0 := @this: android.media.VolumeProvider;

        i0 := @parameter0: int;

        return;
    }

    public void setCallback(android.media.VolumeProvider$Callback)
    {
        android.media.VolumeProvider r0;
        android.media.VolumeProvider$Callback r1;

        r0 := @this: android.media.VolumeProvider;

        r1 := @parameter0: android.media.VolumeProvider$Callback;

        r0.<android.media.VolumeProvider: android.media.VolumeProvider$Callback mCallback> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.media.VolumeProvider: int VOLUME_CONTROL_ABSOLUTE> = 2;

        <android.media.VolumeProvider: int VOLUME_CONTROL_RELATIVE> = 1;

        <android.media.VolumeProvider: int VOLUME_CONTROL_FIXED> = 0;

        return;
    }
}
