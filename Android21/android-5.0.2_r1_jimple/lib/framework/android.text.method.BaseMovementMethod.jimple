public class android.text.method.BaseMovementMethod extends java.lang.Object implements android.text.method.MovementMethod
{

    public void <init>()
    {
        android.text.method.BaseMovementMethod r0;

        r0 := @this: android.text.method.BaseMovementMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean canSelectArbitrarily()
    {
        android.text.method.BaseMovementMethod r0;

        r0 := @this: android.text.method.BaseMovementMethod;

        return 0;
    }

    public void initialize(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return;
    }

    public boolean onKeyDown(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1;
        android.view.KeyEvent r3;
        boolean z0;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        i1 = virtualinvoke r0.<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>(r2, r3);

        z0 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>(r1, r2, i0, i1, r3);

        if z0 == 0 goto label1;

        staticinvoke <android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>(r2);

     label1:
        return z0;
    }

    public boolean onKeyOther(android.widget.TextView, android.text.Spannable, android.view.KeyEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.view.KeyEvent r3;
        int i0, i1, i2, i3, $i4;
        boolean z0, $z1;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 := @parameter2: android.view.KeyEvent;

        i0 = virtualinvoke r0.<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>(r2, r3);

        i1 = virtualinvoke r3.<android.view.KeyEvent: int getKeyCode()>();

        if i1 == 0 goto label5;

        $i4 = virtualinvoke r3.<android.view.KeyEvent: int getAction()>();

        if $i4 != 2 goto label5;

        i2 = virtualinvoke r3.<android.view.KeyEvent: int getRepeatCount()>();

        z0 = 0;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $z1 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>(r1, r2, i1, i0, r3);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        z0 = 1;

        i3 = i3 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        staticinvoke <android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>(r2);

     label4:
        return z0;

     label5:
        return 0;
    }

    public boolean onKeyUp(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0;
        android.view.KeyEvent r3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        return 0;
    }

    public void onTakeFocus(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        return;
    }

    public boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.view.MotionEvent r3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 := @parameter2: android.view.MotionEvent;

        return 0;
    }

    public boolean onTrackballEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.view.MotionEvent r3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 := @parameter2: android.view.MotionEvent;

        return 0;
    }

    public boolean onGenericMotionEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.view.MotionEvent r3;
        float f0, f1, $f2, $f3, $f4;
        boolean z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i9, $i10, $i11, $i12;
        byte $b5, $b6, $b7, $b8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 := @parameter2: android.view.MotionEvent;

        $i0 = virtualinvoke r3.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label8;

        $i2 = virtualinvoke r3.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i2)
        {
            case 8: goto label1;
            default: goto label8;
        };

     label1:
        $i3 = virtualinvoke r3.<android.view.MotionEvent: int getMetaState()>();

        $i4 = $i3 & 1;

        if $i4 == 0 goto label2;

        f0 = 0.0F;

        f1 = virtualinvoke r3.<android.view.MotionEvent: float getAxisValue(int)>(9);

        goto label3;

     label2:
        $f2 = virtualinvoke r3.<android.view.MotionEvent: float getAxisValue(int)>(9);

        f0 = neg $f2;

        f1 = virtualinvoke r3.<android.view.MotionEvent: float getAxisValue(int)>(10);

     label3:
        z0 = 0;

        $b5 = f1 cmpg 0.0F;

        if $b5 >= 0 goto label4;

        $f4 = neg f1;

        $d6 = (double) $f4;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        $i12 = (int) $d7;

        $z4 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean scrollLeft(android.widget.TextView,android.text.Spannable,int)>(r1, r2, $i12);

        z0 = z0 | $z4;

        goto label5;

     label4:
        $b6 = f1 cmpl 0.0F;

        if $b6 <= 0 goto label5;

        $d4 = (double) f1;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $i11 = (int) $d5;

        $z3 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean scrollRight(android.widget.TextView,android.text.Spannable,int)>(r1, r2, $i11);

        z0 = z0 | $z3;

     label5:
        $b8 = f0 cmpg 0.0F;

        if $b8 >= 0 goto label6;

        $f3 = neg f0;

        $d2 = (double) $f3;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i10 = (int) $d3;

        $z2 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean scrollUp(android.widget.TextView,android.text.Spannable,int)>(r1, r2, $i10);

        z0 = z0 | $z2;

        goto label7;

     label6:
        $b7 = f0 cmpl 0.0F;

        if $b7 <= 0 goto label7;

        $d1 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i9 = (int) $d0;

        $z1 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean scrollDown(android.widget.TextView,android.text.Spannable,int)>(r1, r2, $i9);

        z0 = z0 | $z1;

     label7:
        return z0;

     label8:
        return 0;
    }

    protected int getMovementMetaState(android.text.Spannable, android.view.KeyEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.text.Spannable r1;
        android.view.KeyEvent r2;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: android.view.KeyEvent;

        $i1 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)>(r1, r2);

        i0 = $i1 & -1537;

        $i2 = staticinvoke <android.view.KeyEvent: int normalizeMetaState(int)>(i0);

        $i3 = $i2 & -194;

        return $i3;
    }

    protected boolean handleMovementKey(android.widget.TextView, android.text.Spannable, int, int, android.view.KeyEvent)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1;
        android.view.KeyEvent r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.KeyEvent;

        lookupswitch(i0)
        {
            case 19: goto label07;
            case 20: goto label09;
            case 21: goto label01;
            case 22: goto label04;
            case 92: goto label11;
            case 93: goto label13;
            case 122: goto label15;
            case 123: goto label17;
            default: goto label19;
        };

     label01:
        $z23 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z23 == 0 goto label02;

        $z29 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z29;

     label02:
        $z22 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 4096);

        if $z22 == 0 goto label03;

        $z28 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z28;

     label03:
        $z25 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 2);

        if $z25 == 0 goto label19;

        $z24 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z24;

     label04:
        $z17 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z17 == 0 goto label05;

        $z20 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z20;

     label05:
        $z16 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 4096);

        if $z16 == 0 goto label06;

        $z21 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z21;

     label06:
        $z19 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 2);

        if $z19 == 0 goto label19;

        $z18 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z18;

     label07:
        $z30 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z30 == 0 goto label08;

        $z35 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z35;

     label08:
        $z31 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 2);

        if $z31 == 0 goto label19;

        $z34 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z34;

     label09:
        $z26 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z26 == 0 goto label10;

        $z33 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z33;

     label10:
        $z27 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 2);

        if $z27 == 0 goto label19;

        $z32 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z32;

     label11:
        $z13 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z13 == 0 goto label12;

        $z14 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z14;

     label12:
        $z12 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 2);

        if $z12 == 0 goto label19;

        $z15 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z15;

     label13:
        $z8 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z8 == 0 goto label14;

        $z10 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z10;

     label14:
        $z9 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 2);

        if $z9 == 0 goto label19;

        $z11 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z11;

     label15:
        $z4 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z4 == 0 goto label16;

        $z7 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z7;

     label16:
        $z5 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 4096);

        if $z5 == 0 goto label19;

        $z6 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z6;

     label17:
        $z0 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z0 == 0 goto label18;

        $z3 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z3;

     label18:
        $z1 = staticinvoke <android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>(i1, 4096);

        if $z1 == 0 goto label19;

        $z2 = virtualinvoke r0.<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z2;

     label19:
        return 0;
    }

    protected boolean left(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean right(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean up(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean down(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean pageUp(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean pageDown(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean top(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean bottom(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean lineStart(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean lineEnd(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean leftWord(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean rightWord(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean home(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    protected boolean end(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        return 0;
    }

    private int getTopLine(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Layout $r2;
        int $i0, $i1;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        $r2 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i0 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineForVertical(int)>($i0);

        return $i1;
    }

    private int getBottomLine(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Layout $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        $r2 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i0 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        $i1 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)>(r1);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke $r2.<android.text.Layout: int getLineForVertical(int)>($i2);

        return $i3;
    }

    private int getInnerWidth(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        $i0 = virtualinvoke r1.<android.widget.TextView: int getWidth()>();

        $i1 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingRight()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    private int getInnerHeight(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        $i0 = virtualinvoke r1.<android.widget.TextView: int getHeight()>();

        $i1 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingTop()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    private int getCharacterWidth(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.TextPaint $r2;
        float $f0;
        double $d0, $d1;
        int $i0;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        $r2 = virtualinvoke r1.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $f0 = virtualinvoke $r2.<android.text.TextPaint: float getFontSpacing()>();

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        return $i0;
    }

    private int getScrollBoundsLeft(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Layout r2;
        int i0, i1, i2, i3, i4;
        float $f0;
        double $d0, $d1;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i0 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getTopLine(android.widget.TextView)>(r1);

        i1 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getBottomLine(android.widget.TextView)>(r1);

        if i0 <= i1 goto label1;

        return 0;

     label1:
        i2 = 2147483647;

        i3 = i0;

     label2:
        if i3 > i1 goto label4;

        $f0 = virtualinvoke r2.<android.text.Layout: float getLineLeft(int)>(i3);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i4 = (int) $d1;

        if i4 >= i2 goto label3;

        i2 = i4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return i2;
    }

    private int getScrollBoundsRight(android.widget.TextView)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Layout r2;
        int i0, i1, i2, i3, i4;
        float $f0;
        double $d0, $d1;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i0 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getTopLine(android.widget.TextView)>(r1);

        i1 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getBottomLine(android.widget.TextView)>(r1);

        if i0 <= i1 goto label1;

        return 0;

     label1:
        i2 = -2147483648;

        i3 = i0;

     label2:
        if i3 > i1 goto label4;

        $f0 = virtualinvoke r2.<android.text.Layout: float getLineRight(int)>(i3);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i4 = (int) $d1;

        if i4 <= i2 goto label3;

        i2 = i4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return i2;
    }

    protected boolean scrollLeft(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        i1 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getScrollBoundsLeft(android.widget.TextView)>(r1);

        i2 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        if i2 <= i1 goto label1;

        $i3 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getCharacterWidth(android.widget.TextView)>(r1);

        $i4 = $i3 * i0;

        $i5 = i2 - $i4;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, i1);

        $i6 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        virtualinvoke r1.<android.widget.TextView: void scrollTo(int,int)>(i7, $i6);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollRight(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        $i3 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getScrollBoundsRight(android.widget.TextView)>(r1);

        $i4 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerWidth(android.widget.TextView)>(r1);

        i1 = $i3 - $i4;

        i2 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        if i2 >= i1 goto label1;

        $i5 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getCharacterWidth(android.widget.TextView)>(r1);

        $i6 = $i5 * i0;

        $i7 = i2 + $i6;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i1);

        $i8 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        virtualinvoke r1.<android.widget.TextView: void scrollTo(int,int)>(i9, $i8);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollUp(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.text.Layout r3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i1 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        i2 = virtualinvoke r3.<android.text.Layout: int getLineForVertical(int)>(i1);

        $i3 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>(i2);

        if $i3 != i1 goto label1;

        i2 = i2 + -1;

     label1:
        if i2 < 0 goto label2;

        $i4 = i2 - i0;

        $i5 = $i4 + 1;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 0);

        $i6 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        $i7 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>(i8);

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r1, r3, $i6, $i7);

        return 1;

     label2:
        return 0;
    }

    protected boolean scrollDown(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        android.text.Layout r3;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i1 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)>(r1);

        $i5 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        i2 = $i5 + i1;

        i3 = virtualinvoke r3.<android.text.Layout: int getLineForVertical(int)>(i2);

        $i6 = i3 + 1;

        $i7 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>($i6);

        $i8 = i2 + 1;

        if $i7 >= $i8 goto label1;

        i3 = i3 + 1;

     label1:
        $i10 = virtualinvoke r3.<android.text.Layout: int getLineCount()>();

        i4 = $i10 - 1;

        if i3 > i4 goto label2;

        $i9 = i3 + i0;

        $i11 = $i9 - 1;

        i16 = staticinvoke <java.lang.Math: int min(int,int)>($i11, i4);

        $i13 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        $i12 = i16 + 1;

        $i15 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>($i12);

        $i14 = $i15 - i1;

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r1, r3, $i13, $i14);

        return 1;

     label2:
        return 0;
    }

    protected boolean scrollPageUp(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i2 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        $i3 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)>(r1);

        i0 = $i2 - $i3;

        i1 = virtualinvoke r3.<android.text.Layout: int getLineForVertical(int)>(i0);

        if i1 < 0 goto label1;

        $i4 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        $i5 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>(i1);

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r1, r3, $i4, $i5);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollPageDown(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i0 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)>(r1);

        $i3 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        $i4 = $i3 + i0;

        i1 = $i4 + i0;

        i2 = virtualinvoke r3.<android.text.Layout: int getLineForVertical(int)>(i1);

        $i5 = virtualinvoke r3.<android.text.Layout: int getLineCount()>();

        $i6 = $i5 - 1;

        if i2 > $i6 goto label1;

        $i7 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        $i8 = i2 + 1;

        $i10 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>($i8);

        $i9 = $i10 - i0;

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r1, r3, $i7, $i9);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollTop(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        int $i0, $i1, $i2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i0 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getTopLine(android.widget.TextView)>(r1);

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        $i2 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>(0);

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r1, r3, $i1, $i2);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollBottom(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i0 = virtualinvoke r3.<android.text.Layout: int getLineCount()>();

        $i1 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getBottomLine(android.widget.TextView)>(r1);

        $i2 = i0 - 1;

        if $i1 > $i2 goto label1;

        $i3 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        $i4 = virtualinvoke r3.<android.text.Layout: int getLineTop(int)>(i0);

        $i5 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)>(r1);

        $i6 = $i4 - $i5;

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r1, r3, $i3, $i6);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollLineStart(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, $i2;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getScrollBoundsLeft(android.widget.TextView)>(r1);

        i1 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        if i1 <= i0 goto label1;

        $i2 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        virtualinvoke r1.<android.widget.TextView: void scrollTo(int,int)>(i0, $i2);

        return 1;

     label1:
        return 0;
    }

    protected boolean scrollLineEnd(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.BaseMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.text.method.BaseMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $i2 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getScrollBoundsRight(android.widget.TextView)>(r1);

        $i3 = specialinvoke r0.<android.text.method.BaseMovementMethod: int getInnerWidth(android.widget.TextView)>(r1);

        i0 = $i2 - $i3;

        i1 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        if i1 >= i0 goto label1;

        $i4 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        virtualinvoke r1.<android.widget.TextView: void scrollTo(int,int)>(i0, $i4);

        return 1;

     label1:
        return 0;
    }
}
