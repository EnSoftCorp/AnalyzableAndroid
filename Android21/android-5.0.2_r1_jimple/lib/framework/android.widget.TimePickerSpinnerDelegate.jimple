class android.widget.TimePickerSpinnerDelegate extends android.widget.TimePicker$AbstractTimePickerDelegate implements android.widget.RadialTimePickerView$OnValueSelectedListener
{
    private static final java.lang.String TAG;
    private static final int HOUR_INDEX;
    private static final int MINUTE_INDEX;
    private static final int AMPM_INDEX;
    private static final int ENABLE_PICKER_INDEX;
    private static final int AM;
    private static final int PM;
    private static final boolean DEFAULT_ENABLED_STATE;
    private boolean mIsEnabled;
    private static final int HOURS_IN_HALF_DAY;
    private android.view.View mHeaderView;
    private android.widget.TextView mHourView;
    private android.widget.TextView mMinuteView;
    private android.widget.TextView mAmPmTextView;
    private android.widget.RadialTimePickerView mRadialTimePickerView;
    private android.widget.TextView mSeparatorView;
    private java.lang.String mAmText;
    private java.lang.String mPmText;
    private boolean mAllowAutoAdvance;
    private int mInitialHourOfDay;
    private int mInitialMinute;
    private boolean mIs24HourView;
    private char mPlaceholderText;
    private java.lang.String mDoublePlaceholderText;
    private java.lang.String mDeletedKeyFormat;
    private boolean mInKbMode;
    private java.util.ArrayList mTypedTimes;
    private android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree;
    private int mAmKeyCode;
    private int mPmKeyCode;
    private java.lang.String mHourPickerDescription;
    private java.lang.String mSelectHours;
    private java.lang.String mMinutePickerDescription;
    private java.lang.String mSelectMinutes;
    private java.util.Calendar mTempCalendar;
    private final android.view.View$OnKeyListener mKeyListener;
    private final android.view.View$OnFocusChangeListener mFocusListener;

    public void <init>(android.widget.TimePicker, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePicker r1, $r26;
        android.content.Context r2, $r14, $r16, $r17;
        android.util.AttributeSet r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        android.content.res.TypedArray r4;
        android.view.LayoutInflater r5;
        android.content.res.Resources r6;
        java.lang.String[] r7;
        android.view.View r8, $r24, $r27, $r29, $r31, $r39, $r43, $r45;
        java.util.Calendar r9;
        android.widget.TimePickerSpinnerDelegate$4 $r10;
        java.util.ArrayList $r11;
        int[] $r12;
        android.widget.TimePickerSpinnerDelegate$5 $r13;
        java.lang.Object $r15;
        java.lang.String $r18, $r19, $r20, $r21, $r22, $r23, $r47, $r48, $r49;
        android.widget.TextView $r25, $r28, $r30, $r32, $r33, $r34, $r35, $r36, $r50, $r51, $r52, $r53;
        android.content.res.ColorStateList $r37, $r38, $r40, $r41;
        android.widget.RadialTimePickerView $r42;
        android.graphics.drawable.Drawable $r44;
        java.util.Locale $r46;
        char $c10;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.widget.TimePicker;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: void <init>(android.widget.TimePicker,android.content.Context)>(r1, r2);

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsEnabled> = 1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes> = $r11;

        $r10 = new android.widget.TimePickerSpinnerDelegate$4;

        specialinvoke $r10.<android.widget.TimePickerSpinnerDelegate$4: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        r0.<android.widget.TimePickerSpinnerDelegate: android.view.View$OnKeyListener mKeyListener> = $r10;

        $r13 = new android.widget.TimePickerSpinnerDelegate$5;

        specialinvoke $r13.<android.widget.TimePickerSpinnerDelegate$5: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        r0.<android.widget.TimePickerSpinnerDelegate: android.view.View$OnFocusChangeListener mFocusListener> = $r13;

        $r14 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r12 = <com.android.internal.R$styleable: int[] TimePicker>;

        r4 = virtualinvoke $r14.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r12, i0, i1);

        $r16 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r15 = virtualinvoke $r16.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r5 = (android.view.LayoutInflater) $r15;

        $r17 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        r6 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $r19 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(17040995);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mHourPickerDescription> = $r19;

        $r18 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(17040997);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mSelectHours> = $r18;

        $r21 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(17040996);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mMinutePickerDescription> = $r21;

        $r20 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(17040998);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mSelectMinutes> = $r20;

        r7 = staticinvoke <android.widget.TimePickerClockDelegate: java.lang.String[] getAmPmStrings(android.content.Context)>(r2);

        $r23 = r7[0];

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mAmText> = $r23;

        $r22 = r7[1];

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mPmText> = $r22;

        i2 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(9, 17367264);

        r8 = virtualinvoke r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i2, null);

        $r26 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r26.<android.widget.TimePicker: void addView(android.view.View)>(r8);

        $r24 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909230);

        $r25 = (android.widget.TextView) $r24;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView> = $r25;

        $r29 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909231);

        $r30 = (android.widget.TextView) $r29;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mSeparatorView> = $r30;

        $r27 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909232);

        $r28 = (android.widget.TextView) $r27;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView> = $r28;

        $r31 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909233);

        $r32 = (android.widget.TextView) $r31;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView> = $r32;

        i3 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i3 == 0 goto label1;

        $r52 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        virtualinvoke $r52.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i3);

        $r53 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mSeparatorView>;

        virtualinvoke $r53.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i3);

        $r50 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        virtualinvoke $r50.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i3);

     label1:
        $i8 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>(17170669);

        i4 = virtualinvoke r4.<android.content.res.TypedArray: int getColor(int,int)>(11, $i8);

        $r33 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        $r34 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        $r38 = virtualinvoke $r34.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $r37 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>($r38, 16842913, i4);

        virtualinvoke $r33.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r37);

        $r35 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        $r36 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        $r41 = virtualinvoke $r36.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $r40 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>($r41, 16842913, i4);

        virtualinvoke $r35.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r40);

        i5 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(2, 0);

        if i5 == 0 goto label2;

        $r51 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r51.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, i5);

     label2:
        $r39 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909229);

        r0.<android.widget.TimePickerSpinnerDelegate: android.view.View mHeaderView> = $r39;

        $r45 = r0.<android.widget.TimePickerSpinnerDelegate: android.view.View mHeaderView>;

        $r44 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r45.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r44);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r43 = virtualinvoke r8.<android.view.View: android.view.View findViewById(int)>(16909235);

        $r42 = (android.widget.RadialTimePickerView) $r43;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView> = $r42;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setupListeners()>();

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mAllowAutoAdvance> = 1;

        $r47 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(17041006);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDoublePlaceholderText> = $r47;

        $r48 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(17041004);

        r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDeletedKeyFormat> = $r48;

        $r49 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDoublePlaceholderText>;

        $c10 = virtualinvoke $r49.<java.lang.String: char charAt(int)>(0);

        r0.<android.widget.TimePickerSpinnerDelegate: char mPlaceholderText> = $c10;

        r0.<android.widget.TimePickerSpinnerDelegate: int mPmKeyCode> = -1;

        r0.<android.widget.TimePickerSpinnerDelegate: int mAmKeyCode> = -1;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void generateLegalTimesTree()>();

        $r46 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        r9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r46);

        i7 = virtualinvoke r9.<java.util.Calendar: int get(int)>(11);

        i6 = virtualinvoke r9.<java.util.Calendar: int get(int)>(12);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void initialize(int,int,boolean,int)>(i7, i6, 0, 0);

        return;
    }

    private void initialize(int, int, boolean, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay> = i0;

        r0.<android.widget.TimePickerSpinnerDelegate: int mInitialMinute> = i1;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView> = z0;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode> = 0;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateUI(int)>(i2);

        return;
    }

    private void setupListeners()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.View$OnKeyListener $r1;
        android.view.View $r2, $r4, $r5;
        android.view.View$OnFocusChangeListener $r3;
        android.widget.RadialTimePickerView $r6;
        android.widget.TimePickerSpinnerDelegate$1 $r7;
        android.widget.TextView $r8, $r10;
        android.widget.TimePickerSpinnerDelegate$2 $r9;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.view.View mHeaderView>;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.view.View$OnKeyListener mKeyListener>;

        virtualinvoke $r2.<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>($r1);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.view.View mHeaderView>;

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.view.View$OnFocusChangeListener mFocusListener>;

        virtualinvoke $r4.<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>($r3);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.view.View mHeaderView>;

        virtualinvoke $r5.<android.view.View: void setFocusable(boolean)>(1);

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r6.<android.widget.RadialTimePickerView: void setOnValueSelectedListener(android.widget.RadialTimePickerView$OnValueSelectedListener)>(r0);

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        $r7 = new android.widget.TimePickerSpinnerDelegate$1;

        specialinvoke $r7.<android.widget.TimePickerSpinnerDelegate$1: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke $r8.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r7);

        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        $r9 = new android.widget.TimePickerSpinnerDelegate$2;

        specialinvoke $r9.<android.widget.TimePickerSpinnerDelegate$2: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke $r10.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r9);

        return;
    }

    private void updateUI(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1, $i2;
        android.widget.TimePicker $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateRadialPicker(int)>(i0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderAmPm()>();

        $i1 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderHour(int,boolean)>($i1, 1);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderSeparator()>();

        $i2 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialMinute>;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderMinute(int)>($i2);

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: void invalidate()>();

        return;
    }

    private void updateRadialPicker(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1, $i2;
        boolean $z0;
        android.widget.RadialTimePickerView $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i2 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay>;

        $i1 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialMinute>;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        virtualinvoke $r1.<android.widget.RadialTimePickerView: void initialize(int,int,boolean)>($i2, $i1, $z0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentItemShowing(int,boolean,boolean)>(i0, 0, 1);

        return;
    }

    private int computeMaxWidthOfNumbers(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1, i2, $i3;
        android.widget.TextView r1, $r4;
        android.view.ViewGroup$LayoutParams r2, $r7;
        java.lang.String r3;
        android.content.Context $r5, $r6;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        $r4 = new android.widget.TextView;

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        specialinvoke $r4.<android.widget.TextView: void <init>(android.content.Context)>($r5);

        r1 = $r4;

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        virtualinvoke r1.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r6, 16974879);

        $r7 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r7.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        r2 = $r7;

        virtualinvoke r1.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8[0] = $r9;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r8);

        virtualinvoke r1.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        virtualinvoke r1.<android.widget.TextView: void measure(int,int)>(0, 0);

        $i3 = virtualinvoke r1.<android.widget.TextView: int getMeasuredWidth()>();

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return i1;
    }

    private void updateHeaderAmPm()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        android.widget.RelativeLayout$LayoutParams r2;
        android.widget.TextView $r3, $r6, $r9, $r10;
        java.util.Locale $r4, $r5;
        int $i0, $i1, $i2, $i4;
        android.view.ViewGroup$LayoutParams $r7;
        android.widget.TimePickerSpinnerDelegate$3 $r8;
        byte $b3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z1 == 0 goto label1;

        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

        goto label9;

     label1:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(0);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r4, "hm");

        z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("a");

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        $i0 = staticinvoke <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>($r5);

        if $i0 != 1 goto label4;

        if z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.RelativeLayout$LayoutParams) $r7;

        if z0 == 0 goto label5;

        $i4 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int computeMaxWidthOfNumbers(int)>(12);

        r2.<android.widget.RelativeLayout$LayoutParams: int rightMargin> = $i4;

        virtualinvoke r2.<android.widget.RelativeLayout$LayoutParams: void removeRule(int)>(1);

        virtualinvoke r2.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(0, 16909231);

        goto label6;

     label5:
        $i1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int computeMaxWidthOfNumbers(int)>(60);

        r2.<android.widget.RelativeLayout$LayoutParams: int leftMargin> = $i1;

        virtualinvoke r2.<android.widget.RelativeLayout$LayoutParams: void removeRule(int)>(0);

        virtualinvoke r2.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(1, 16909231);

     label6:
        $i2 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay>;

        if $i2 >= 12 goto label7;

        $b3 = 0;

        goto label8;

     label7:
        $b3 = 1;

     label8:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmDisplay(int)>($b3);

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        $r8 = new android.widget.TimePickerSpinnerDelegate$3;

        specialinvoke $r8.<android.widget.TimePickerSpinnerDelegate$3: void <init>(android.widget.TimePickerSpinnerDelegate)>(r0);

        virtualinvoke $r9.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r8);

     label9:
        return;
    }

    public void setCurrentHour(java.lang.Integer)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.lang.Integer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.RadialTimePickerView $r2, $r3;
        android.widget.TimePicker $r4;
        byte $b6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: java.lang.Integer;

        $i0 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay>;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay> = $i2;

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderHour(int,boolean)>($i3, 1);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderAmPm()>();

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.widget.RadialTimePickerView: void setCurrentHour(int)>($i4);

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i5 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay>;

        if $i5 >= 12 goto label2;

        $b6 = 0;

        goto label3;

     label2:
        $b6 = 1;

     label3:
        virtualinvoke $r3.<android.widget.RadialTimePickerView: void setAmOrPm(int)>($b6);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r4.<android.widget.TimePicker: void invalidate()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>();

        return;
    }

    public java.lang.Integer getCurrentHour()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1, $i2, $i3, $i4;
        android.widget.RadialTimePickerView $r1, $r2;
        boolean $z0;
        java.lang.Integer $r3, $r4, $r5;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r5;

     label1:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i1 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getAmOrPm()>();

        lookupswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label3;
        };

     label2:
        $i2 = i0 % 12;

        $i3 = $i2 + 12;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r3;

     label3:
        $i4 = i0 % 12;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r4;
    }

    public void setCurrentMinute(java.lang.Integer)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.lang.Integer r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.RadialTimePickerView $r2;
        android.widget.TimePicker $r3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: java.lang.Integer;

        $i0 = r0.<android.widget.TimePickerSpinnerDelegate: int mInitialMinute>;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        r0.<android.widget.TimePickerSpinnerDelegate: int mInitialMinute> = $i2;

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderMinute(int)>($i3);

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r2.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>($i4);

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r3.<android.widget.TimePicker: void invalidate()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onTimeChanged()>();

        return;
    }

    public java.lang.Integer getCurrentMinute()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.RadialTimePickerView $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public void setIs24HourView(java.lang.Boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.lang.Boolean r1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        android.widget.RadialTimePickerView $r2, $r3;
        android.widget.TimePicker $r4;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: java.lang.Boolean;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        $z2 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView> = $z2;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void generateLegalTimesTree()>();

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i0 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        r0.<android.widget.TimePickerSpinnerDelegate: int mInitialHourOfDay> = i0;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderHour(int,boolean)>(i0, 0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderAmPm()>();

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i1 = virtualinvoke $r3.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateRadialPicker(int)>($i1);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r4.<android.widget.TimePicker: void invalidate()>();

        return;
    }

    public boolean is24HourView()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        return $z0;
    }

    public void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePicker$OnTimeChangedListener r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.widget.TimePicker$OnTimeChangedListener;

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener> = r1;

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0;
        android.widget.TextView $r1, $r2, $r3;
        android.widget.RadialTimePickerView $r4;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        virtualinvoke $r1.<android.widget.TextView: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        virtualinvoke $r2.<android.widget.TextView: void setEnabled(boolean)>(z0);

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setEnabled(boolean)>(z0);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void setEnabled(boolean)>(z0);

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsEnabled> = z0;

        return;
    }

    public boolean isEnabled()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIsEnabled>;

        return $z0;
    }

    public int getBaseline()
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        return -1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.content.res.Configuration r1;
        android.widget.RadialTimePickerView $r2;
        int $i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i0 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateUI(int)>($i0);

        return;
    }

    public android.os.Parcelable onSaveInstanceState(android.os.Parcelable)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.os.Parcelable r1;
        android.widget.TimePickerSpinnerDelegate$SavedState $r2;
        java.lang.Integer $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.ArrayList $r5;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = new android.widget.TimePickerSpinnerDelegate$SavedState;

        $r3 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentHour()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentMinute()>();

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $z0 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean is24HourView()>();

        $z1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean inKbMode()>();

        $r5 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList getTypedTimes()>();

        $i2 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getCurrentItemShowing()>();

        specialinvoke $r2.<android.widget.TimePickerSpinnerDelegate$SavedState: void <init>(android.os.Parcelable,int,int,boolean,boolean,java.util.ArrayList,int,android.widget.TimePickerSpinnerDelegate$1)>(r1, $i0, $i1, $z0, $z1, $r5, $i2, null);

        return $r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.os.Parcelable r1;
        android.widget.TimePickerSpinnerDelegate$SavedState r2;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2;
        android.widget.RadialTimePickerView $r4;
        android.widget.TextView $r5;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.TimePickerSpinnerDelegate$SavedState) r1;

        $z0 = virtualinvoke r2.<android.widget.TimePickerSpinnerDelegate$SavedState: boolean inKbMode()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setInKbMode(boolean)>($z0);

        $r3 = virtualinvoke r2.<android.widget.TimePickerSpinnerDelegate$SavedState: java.util.ArrayList getTypesTimes()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setTypedTimes(java.util.ArrayList)>($r3);

        $i0 = virtualinvoke r2.<android.widget.TimePickerSpinnerDelegate$SavedState: int getHour()>();

        $i1 = virtualinvoke r2.<android.widget.TimePickerSpinnerDelegate$SavedState: int getMinute()>();

        $z1 = virtualinvoke r2.<android.widget.TimePickerSpinnerDelegate$SavedState: boolean is24HourMode()>();

        $i2 = virtualinvoke r2.<android.widget.TimePickerSpinnerDelegate$SavedState: int getCurrentItemShowing()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void initialize(int,int,boolean,int)>($i0, $i1, $z1, $i2);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void invalidate()>();

        $z2 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode>;

        if $z2 == 0 goto label1;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void tryStartingKbMode(int)>(-1);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        virtualinvoke $r5.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setCurrentLocale(java.util.Locale)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.util.Locale r1;
        java.util.Calendar $r2;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<android.widget.TimePicker$AbstractTimePickerDelegate: void setCurrentLocale(java.util.Locale)>(r1);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r1);

        r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar> = $r2;

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        short s0, s4;
        java.lang.String r2;
        boolean $z0;
        java.util.Calendar $r3, $r5, $r7;
        java.lang.Integer $r4, $r6;
        int $i1, $i2;
        android.content.Context $r8;
        long $l3;
        java.util.List $r9;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        s0 = 1;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        s4 = s0 | 128;

        goto label2;

     label1:
        s4 = s0 | 64;

     label2:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $r4 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentHour()>();

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(11, $i1);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $r6 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentMinute()>();

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(12, $i2);

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: android.content.Context mContext>;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Calendar mTempCalendar>;

        $l3 = virtualinvoke $r7.<java.util.Calendar: long getTimeInMillis()>();

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r8, $l3, s4);

        $r9 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = class "android/widget/TimePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = class "android/widget/TimePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    private void setInKbMode(boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode> = z0;

        return;
    }

    private boolean inKbMode()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode>;

        return $z0;
    }

    private void setTypedTimes(java.util.ArrayList)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.util.ArrayList r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: java.util.ArrayList;

        r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes> = r1;

        return;
    }

    private java.util.ArrayList getTypedTimes()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.util.ArrayList $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        return $r1;
    }

    private int getCurrentItemShowing()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.RadialTimePickerView $r1;
        int $i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i0 = virtualinvoke $r1.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        return $i0;
    }

    private void onTimeChanged()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePicker $r1, $r4;
        android.widget.TimePicker$OnTimeChangedListener $r2, $r3;
        java.lang.Integer $r5, $r6;
        int $i0, $i1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: void sendAccessibilityEvent(int)>(4);

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        $r5 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentHour()>();

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: java.lang.Integer getCurrentMinute()>();

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r3.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>($r4, $i0, $i1);

     label1:
        return;
    }

    private void tryVibrate()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePicker $r1;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePicker mDelegator>;

        virtualinvoke $r1.<android.widget.TimePicker: boolean performHapticFeedback(int)>(4);

        return;
    }

    private void updateAmPmDisplay(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;
        java.lang.String $r1, $r3, $r5, $r7, $r9;
        android.widget.TextView $r2, $r4, $r8;
        android.widget.RadialTimePickerView $r6, $r10;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mAmText>;

        virtualinvoke $r8.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mAmText>;

        virtualinvoke $r10.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>($r9);

        goto label3;

     label1:
        if i0 != 1 goto label2;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mPmText>;

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mPmText>;

        virtualinvoke $r6.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>($r5);

        goto label3;

     label2:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mAmPmTextView>;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDoublePlaceholderText>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label3:
        return;
    }

    public void onValueSelected(int, int, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1;
        boolean z0, $z1, $z2;
        java.lang.String r1, $r5, $r9, $r15, $r19, $r22;
        java.util.ArrayList $r2;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24;
        android.widget.RadialTimePickerView $r4, $r12, $r18;
        java.lang.Object[] $r10;
        java.lang.Integer $r11;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 0 goto label3;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderHour(int,boolean)>(i1, 0);

        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[0] = $r11;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r10);

        $z2 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mAllowAutoAdvance>;

        if $z2 == 0 goto label1;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentItemShowing(int,boolean,boolean)>(1, 1, 0);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r22 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mSelectMinutes>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r1 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r12 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mHourPickerDescription>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<android.widget.RadialTimePickerView: void setContentDescription(java.lang.CharSequence)>($r19);

     label2:
        $r18 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r18.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>(r1);

        goto label7;

     label3:
        if i0 != 1 goto label4;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderMinute(int)>(i1);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mMinutePickerDescription>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void setContentDescription(java.lang.CharSequence)>($r9);

        goto label7;

     label4:
        if i0 != 2 goto label5;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmDisplay(int)>(i1);

        goto label7;

     label5:
        if i0 != 3 goto label7;

        $z1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>();

        if $z1 != 0 goto label6;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label6:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void finishKbMode()>();

     label7:
        return;
    }

    private void updateHeaderHour(int, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1, i3, $i5, $i7;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.String r1, $r7, r8, r9;
        char c2, c4, $c6;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        android.widget.TextView $r5;
        android.widget.RadialTimePickerView $r6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        $z2 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z2 == 0 goto label01;

        $r7 = "Hm";

        goto label02;

     label01:
        $r7 = "hm";

     label02:
        r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r2, $r7);

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        z1 = 0;

        c2 = 0;

        i3 = 0;

     label03:
        if i3 >= i1 goto label06;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c4 == 72 goto label04;

        if c4 == 104 goto label04;

        if c4 == 75 goto label04;

        if c4 != 107 goto label05;

     label04:
        c2 = c4;

        $i5 = i3 + 1;

        if $i5 >= i1 goto label06;

        $i7 = i3 + 1;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);

        if c4 != $c6 goto label06;

        z1 = 1;

        goto label06;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        if z1 == 0 goto label07;

        r8 = "%02d";

        goto label08;

     label07:
        r8 = "%d";

     label08:
        $z3 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z3 == 0 goto label09;

        if c2 != 107 goto label12;

        if i0 != 0 goto label12;

        i0 = 24;

        goto label12;

     label09:
        if c2 != 75 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        i0 = staticinvoke <android.widget.TimePickerSpinnerDelegate: int modulo12(int,boolean)>(i0, $z4);

     label12:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r8, $r3);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r9);

        if z0 == 0 goto label13;

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r6.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>(r9);

     label13:
        return;
    }

    private static int modulo12(int, boolean)
    {
        int i0, i1;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = i0 % 12;

        if i1 != 0 goto label1;

        if z0 != 0 goto label1;

        i1 = 12;

     label1:
        return i1;
    }

    private void updateHeaderSeparator()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        java.lang.String r1, r2, $r7;
        char[] r3, $r5;
        int i0, $i1;
        boolean $z0;
        java.util.Locale $r4;
        char $c2;
        android.widget.TextView $r6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        $r7 = "Hm";

        goto label2;

     label1:
        $r7 = "hm";

     label2:
        r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r4, $r7);

        $r5 = newarray (char)[4];

        $r5[0] = 72;

        $r5[1] = 104;

        $r5[2] = 75;

        $r5[3] = 107;

        r3 = $r5;

        i0 = staticinvoke <android.widget.TimePickerSpinnerDelegate: int lastIndexOfAny(java.lang.String,char[])>(r1, r3);

        if i0 != -1 goto label3;

        r2 = ":";

        goto label4;

     label3:
        $i1 = i0 + 1;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i1);

        r2 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c2);

     label4:
        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mSeparatorView>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        return;
    }

    private static int lastIndexOfAny(java.lang.String, char[])
    {
        java.lang.String r0;
        char[] r1;
        int i0, i1, i3, $i4;
        char c2, $c5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i0 = lengthof r1;

        if i0 <= 0 goto label5;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = $i4 - 1;

     label1:
        if i1 < 0 goto label5;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $c5 = r1[i3];

        if c2 != $c5 goto label3;

        return i1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i1 = i1 + -1;

        goto label1;

     label5:
        return -1;
    }

    private void updateHeaderMinute(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        java.util.Locale $r3;
        java.lang.Integer $r4;
        android.widget.RadialTimePickerView $r5;
        android.widget.TextView $r6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        if i0 != 60 goto label1;

        i0 = 0;

     label1:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        $r2 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "%02d", $r2);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r5.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>(r1);

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    private void setCurrentItemShowing(int, boolean, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1, i2;
        boolean z0, z1, $z2, $z3, $z4;
        android.widget.RadialTimePickerView $r1, $r2, $r4, $r13, $r14, $r15, $r23;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r16, $r17, $r19, $r20;
        java.lang.String $r5, $r9, $r12, $r18, $r21, $r22;
        android.widget.TextView $r10, $r11;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r1.<android.widget.RadialTimePickerView: void setCurrentItemShowing(int,boolean)>(i0, z0);

        if i0 != 0 goto label3;

        $r13 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i1 = virtualinvoke $r13.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        $z4 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z4 != 0 goto label1;

        i1 = i1 % 12;

     label1:
        $r15 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mHourPickerDescription>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<android.widget.RadialTimePickerView: void setContentDescription(java.lang.CharSequence)>($r22);

        if z1 == 0 goto label2;

        $r23 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r21 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mSelectHours>;

        virtualinvoke $r23.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>($r21);

     label2:
        goto label4;

     label3:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i2 = virtualinvoke $r2.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mMinutePickerDescription>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void setContentDescription(java.lang.CharSequence)>($r9);

        if z1 == 0 goto label4;

        $r14 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r12 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mSelectMinutes>;

        virtualinvoke $r14.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>($r12);

     label4:
        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        if i0 != 0 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        virtualinvoke $r10.<android.widget.TextView: void setSelected(boolean)>($z3);

        $r11 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        if i0 != 1 goto label7;

        $z2 = 1;

        goto label8;

     label7:
        $z2 = 0;

     label8:
        virtualinvoke $r11.<android.widget.TextView: void setSelected(boolean)>($z2);

        return;
    }

    private boolean processKeyUp(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.RadialTimePickerView $r2, $r10;
        java.util.ArrayList $r3, $r4;
        java.lang.Object[] $r5, $r8;
        java.lang.Integer $r6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        if i0 != 67 goto label4;

        $z3 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode>;

        if $z3 == 0 goto label9;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $z4 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 != 0 goto label9;

        i1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int deleteLastTypedKey()>();

        $i6 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(0);

        if i1 != $i6 goto label1;

        r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mAmText>;

        goto label3;

     label1:
        $i5 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(1);

        if i1 != $i5 goto label2;

        r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mPmText>;

        goto label3;

     label2:
        $r5 = newarray (java.lang.Object)[1];

        $i7 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getValFromKeyCode(int)>(i1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r5[0] = $r6;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r5);

     label3:
        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDeletedKeyFormat>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r1;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);

        virtualinvoke $r10.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>($r9);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateDisplay(boolean)>(1);

        goto label9;

     label4:
        if i0 == 7 goto label5;

        if i0 == 8 goto label5;

        if i0 == 9 goto label5;

        if i0 == 10 goto label5;

        if i0 == 11 goto label5;

        if i0 == 12 goto label5;

        if i0 == 13 goto label5;

        if i0 == 14 goto label5;

        if i0 == 15 goto label5;

        if i0 == 16 goto label5;

        $z2 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z2 != 0 goto label9;

        $i3 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(0);

        if i0 == $i3 goto label5;

        $i4 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(1);

        if i0 != $i4 goto label9;

     label5:
        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode>;

        if $z0 != 0 goto label7;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        if $r2 != null goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimePickerDelegate", "Unable to initiate keyboard mode, TimePicker was null.");

        return 1;

     label6:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void tryStartingKbMode(int)>(i0);

        return 1;

     label7:
        $z1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean addKeyIfLegal(int)>(i0);

        if $z1 == 0 goto label8;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateDisplay(boolean)>(0);

     label8:
        return 1;

     label9:
        return 0;
    }

    private void tryStartingKbMode(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;
        android.widget.RadialTimePickerView $r1;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        if i0 == -1 goto label1;

        $z0 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean addKeyIfLegal(int)>(i0);

        if $z0 == 0 goto label2;

     label1:
        r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode> = 1;

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onValidationChanged(boolean)>(0);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateDisplay(boolean)>(0);

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r1.<android.widget.RadialTimePickerView: void setInputEnabled(boolean)>(0);

     label2:
        return;
    }

    private boolean addKeyIfLegal(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        java.util.ArrayList $r1, $r7, $r8, $r9, $r10, $r12, $r14;
        java.lang.Integer $r2, $r5, $r11, $r13;
        java.lang.Object[] $r3;
        android.widget.RadialTimePickerView $r4;
        java.lang.String $r6;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        $r14 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i8 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i8 == 4 goto label2;

     label1:
        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z1 != 0 goto label3;

        $z6 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>();

        if $z6 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeLegalSoFar()>();

        if $z3 != 0 goto label4;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int deleteLastTypedKey()>();

        return 0;

     label4:
        i1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getValFromKeyCode(int)>(i0);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r3);

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void announceForAccessibility(java.lang.CharSequence)>($r6);

        $z5 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>();

        if $z5 == 0 goto label6;

        $z4 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z4 != 0 goto label5;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i2 > 3 goto label5;

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i4 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i3 = $i4 - 1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r8.<java.util.ArrayList: void add(int,java.lang.Object)>($i3, $r11);

        $r12 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $r10 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i5 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r12.<java.util.ArrayList: void add(int,java.lang.Object)>($i6, $r13);

     label5:
        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onValidationChanged(boolean)>(1);

     label6:
        return 1;
    }

    private boolean isTypedTimeLegalSoFar()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePickerSpinnerDelegate$Node r1;
        java.util.Iterator r2;
        int i0;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree>;

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r1 = virtualinvoke r1.<android.widget.TimePickerSpinnerDelegate$Node: android.widget.TimePickerSpinnerDelegate$Node canReach(int)>(i0);

        if r1 != null goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    private boolean isTypedTimeFullyLegal()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int[] r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r3, $r5;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label3;

        r1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int[] getEnteredTime(boolean[])>(null);

        $i2 = r1[0];

        if $i2 < 0 goto label1;

        $i3 = r1[1];

        if $i3 < 0 goto label1;

        $i4 = r1[1];

        if $i4 >= 60 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i0 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label4;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z2 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r5);

        if $z2 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    private int deleteLastTypedKey()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, $i1, $i2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i2);

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $z0 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onValidationChanged(boolean)>(0);

     label1:
        return i0;
    }

    private void finishKbMode()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int[] r1;
        java.util.ArrayList $r2, $r6;
        boolean $z0, $z1;
        android.widget.RadialTimePickerView $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode> = 0;

        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int[] getEnteredTime(boolean[])>(null);

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i0 = r1[0];

        virtualinvoke $r4.<android.widget.RadialTimePickerView: void setCurrentHour(int)>($i0);

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i1 = r1[1];

        virtualinvoke $r5.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>($i1);

        $z1 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z1 != 0 goto label1;

        $r7 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i2 = r1[2];

        virtualinvoke $r7.<android.widget.RadialTimePickerView: void setAmOrPm(int)>($i2);

     label1:
        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

     label2:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateDisplay(boolean)>(0);

        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        virtualinvoke $r3.<android.widget.RadialTimePickerView: void setInputEnabled(boolean)>(1);

        return;
    }

    private void updateDisplay(boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, $i5, $i6, $i8, $i9;
        java.lang.String r1, r2, r3, r4, $r7, $r9, $r11, $r13, $r18, $r19;
        boolean[] $r5, r24;
        java.lang.Object[] $r6, $r10;
        java.lang.Integer $r8, $r12;
        char $c4, $c7;
        android.widget.TextView $r14, $r15, $r16, $r17;
        android.widget.RadialTimePickerView $r20, $r22, $r23;
        java.util.ArrayList $r21;
        byte $b10;
        int[] r25;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label04;

        $r21 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $z4 = virtualinvoke $r21.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label04;

        $r20 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i0 = virtualinvoke $r20.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        $r23 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        i1 = virtualinvoke $r23.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderHour(int,boolean)>(i0, 1);

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateHeaderMinute(int)>(i1);

        $z5 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z5 != 0 goto label03;

        if i0 >= 12 goto label01;

        $b10 = 0;

        goto label02;

     label01:
        $b10 = 1;

     label02:
        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmDisplay(int)>($b10);

     label03:
        $r22 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        $i9 = virtualinvoke $r22.<android.widget.RadialTimePickerView: int getCurrentItemShowing()>();

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentItemShowing(int,boolean,boolean)>($i9, 1, 1);

        virtualinvoke r0.<android.widget.TimePickerSpinnerDelegate: void onValidationChanged(boolean)>(1);

        goto label13;

     label04:
        $r5 = newarray (boolean)[2];

        $r5[0] = 0;

        $r5[1] = 0;

        r24 = $r5;

        r25 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int[] getEnteredTime(boolean[])>(r24);

        $z1 = r24[0];

        if $z1 == 0 goto label05;

        $r19 = "%02d";

        goto label06;

     label05:
        $r19 = "%2d";

     label06:
        r1 = $r19;

        $z2 = r24[1];

        if $z2 == 0 goto label07;

        $r18 = "%02d";

        goto label08;

     label07:
        $r18 = "%2d";

     label08:
        r2 = $r18;

        $i2 = r25[0];

        if $i2 != -1 goto label09;

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDoublePlaceholderText>;

        goto label10;

     label09:
        $r6 = newarray (java.lang.Object)[1];

        $i3 = r25[0];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[0] = $r8;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r6);

        $c4 = r0.<android.widget.TimePickerSpinnerDelegate: char mPlaceholderText>;

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(char,char)>(32, $c4);

     label10:
        r3 = $r9;

        $i5 = r25[1];

        if $i5 != -1 goto label11;

        $r13 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mDoublePlaceholderText>;

        goto label12;

     label11:
        $r10 = newarray (java.lang.Object)[1];

        $i6 = r25[1];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r10[0] = $r12;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r10);

        $c7 = r0.<android.widget.TimePickerSpinnerDelegate: char mPlaceholderText>;

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(char,char)>(32, $c7);

     label12:
        r4 = $r13;

        $r15 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        virtualinvoke $r15.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        $r14 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mHourView>;

        virtualinvoke $r14.<android.widget.TextView: void setSelected(boolean)>(0);

        $r17 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>(r4);

        $r16 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TextView mMinuteView>;

        virtualinvoke $r16.<android.widget.TextView: void setSelected(boolean)>(0);

        $z3 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z3 != 0 goto label13;

        $i8 = r25[2];

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmDisplay(int)>($i8);

     label13:
        return;
    }

    private int getValFromKeyCode(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 7: goto label01;
            case 8: goto label02;
            case 9: goto label03;
            case 10: goto label04;
            case 11: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 14: goto label08;
            case 15: goto label09;
            case 16: goto label10;
            default: goto label11;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 4;

     label06:
        return 5;

     label07:
        return 6;

     label08:
        return 7;

     label09:
        return 8;

     label10:
        return 9;

     label11:
        return -1;
    }

    private int[] getEnteredTime(boolean[])
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean[] r1;
        byte b0, b1;
        int i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r4, $r5, $r8, $r9;
        int[] $r3;
        java.lang.Integer $r6, $r10;
        java.lang.Object $r7, $r11;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        r1 := @parameter0: boolean[];

        b0 = -1;

        b1 = 1;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 != 0 goto label3;

        $z1 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>();

        if $z1 == 0 goto label3;

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i16 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i15 = $i16 - 1;

        $r11 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i15);

        $r10 = (java.lang.Integer) $r11;

        i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i18 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(0);

        if i2 != $i18 goto label1;

        b0 = 0;

        goto label2;

     label1:
        $i17 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(1);

        if i2 != $i17 goto label2;

        b0 = 1;

     label2:
        b1 = 2;

     label3:
        i19 = -1;

        i3 = -1;

        i4 = b1;

     label4:
        $r2 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i6 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i4 > $i6 goto label9;

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.ArrayList mTypedTimes>;

        $i7 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i8 = $i7 - i4;

        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r6 = (java.lang.Integer) $r7;

        $i9 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        i5 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getValFromKeyCode(int)>($i9);

        if i4 != b1 goto label5;

        i19 = i5;

        goto label8;

     label5:
        $i11 = b1 + 1;

        if i4 != $i11 goto label6;

        $i14 = 10 * i5;

        i19 = i19 + $i14;

        if r1 == null goto label8;

        if i5 != 0 goto label8;

        r1[1] = 1;

        goto label8;

     label6:
        $i10 = b1 + 2;

        if i4 != $i10 goto label7;

        i3 = i5;

        goto label8;

     label7:
        $i13 = b1 + 3;

        if i4 != $i13 goto label8;

        $i12 = 10 * i5;

        i3 = i3 + $i12;

        if r1 == null goto label8;

        if i5 != 0 goto label8;

        r1[0] = 1;

     label8:
        i4 = i4 + 1;

        goto label4;

     label9:
        $r3 = newarray (int)[3];

        $r3[0] = i3;

        $r3[1] = i19;

        $r3[2] = b0;

        return $r3;
    }

    private int getAmOrPmKeyCode(int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14;
        android.view.KeyCharacterMap r1;
        char c1, c2;
        android.view.KeyEvent[] r2;
        java.lang.String $r3, $r4, $r5, $r7, $r8, $r10;
        java.util.Locale $r6, $r9;
        char[] $r11;
        android.view.KeyEvent $r12, $r13;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter0: int;

        $i4 = r0.<android.widget.TimePickerSpinnerDelegate: int mAmKeyCode>;

        if $i4 == -1 goto label1;

        $i14 = r0.<android.widget.TimePickerSpinnerDelegate: int mPmKeyCode>;

        if $i14 != -1 goto label5;

     label1:
        r1 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        i3 = 0;

     label2:
        $r3 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mAmText>;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mPmText>;

        $i6 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        if i3 >= $i7 goto label5;

        $r5 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mAmText>;

        $r6 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        c1 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i3);

        $r8 = r0.<android.widget.TimePickerSpinnerDelegate: java.lang.String mPmText>;

        $r9 = r0.<android.widget.TimePickerSpinnerDelegate: java.util.Locale mCurrentLocale>;

        $r10 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(i3);

        if c1 == c2 goto label4;

        $r11 = newarray (char)[2];

        $r11[0] = c1;

        $r11[1] = c2;

        r2 = virtualinvoke r1.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r11);

        if r2 == null goto label3;

        $i10 = lengthof r2;

        if $i10 != 4 goto label3;

        $r12 = r2[0];

        $i12 = virtualinvoke $r12.<android.view.KeyEvent: int getKeyCode()>();

        r0.<android.widget.TimePickerSpinnerDelegate: int mAmKeyCode> = $i12;

        $r13 = r2[2];

        $i13 = virtualinvoke $r13.<android.view.KeyEvent: int getKeyCode()>();

        r0.<android.widget.TimePickerSpinnerDelegate: int mPmKeyCode> = $i13;

        goto label5;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimePickerDelegate", "Unable to find keycodes for AM and PM.");

        goto label5;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        if i0 != 0 goto label6;

        $i9 = r0.<android.widget.TimePickerSpinnerDelegate: int mAmKeyCode>;

        return $i9;

     label6:
        if i0 != 1 goto label7;

        $i8 = r0.<android.widget.TimePickerSpinnerDelegate: int mPmKeyCode>;

        return $i8;

     label7:
        return -1;
    }

    private void generateLegalTimesTree()
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.TimePickerSpinnerDelegate$Node r1, r2, r3, r4, r5, $r7, $r8, $r10, $r11, $r14, $r16, $r17, $r19, $r21, $r23, $r25, $r26, $r27, $r30, $r32, $r33, $r35, $r38, $r39, $r42, $r44, $r45, $r46, $r48, $r50, $r52, $r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70;
        int[] $r6, $r9, $r12, $r13, $r15, $r18, $r20, $r22, $r24, $r28, $r29, $r31, $r34, $r36, $r37, $r40, $r41, $r43, $r47, $r49, $r51, $r53;
        boolean $z0;
        int $i10, $i11;

        r0 := @this: android.widget.TimePickerSpinnerDelegate;

        $r7 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r6 = newarray (int)[0];

        specialinvoke $r7.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r6);

        r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree> = $r7;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mIs24HourView>;

        if $z0 == 0 goto label1;

        $r30 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r36 = newarray (int)[6];

        $r36[0] = 7;

        $r36[1] = 8;

        $r36[2] = 9;

        $r36[3] = 10;

        $r36[4] = 11;

        $r36[5] = 12;

        specialinvoke $r30.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r36);

        r1 = $r30;

        $r35 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r34 = newarray (int)[10];

        $r34[0] = 7;

        $r34[1] = 8;

        $r34[2] = 9;

        $r34[3] = 10;

        $r34[4] = 11;

        $r34[5] = 12;

        $r34[6] = 13;

        $r34[7] = 14;

        $r34[8] = 15;

        $r34[9] = 16;

        specialinvoke $r35.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r34);

        r2 = $r35;

        virtualinvoke r1.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r2);

        $r33 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r40 = newarray (int)[2];

        $r40[0] = 7;

        $r40[1] = 8;

        specialinvoke $r33.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r40);

        r3 = $r33;

        $r39 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree>;

        virtualinvoke $r39.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r3);

        $r38 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r37 = newarray (int)[6];

        $r37[0] = 7;

        $r37[1] = 8;

        $r37[2] = 9;

        $r37[3] = 10;

        $r37[4] = 11;

        $r37[5] = 12;

        specialinvoke $r38.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r37);

        r4 = $r38;

        virtualinvoke r3.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r4);

        virtualinvoke r4.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r1);

        $r44 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r43 = newarray (int)[4];

        $r43[0] = 13;

        $r43[1] = 14;

        $r43[2] = 15;

        $r43[3] = 16;

        specialinvoke $r44.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r43);

        r5 = $r44;

        virtualinvoke r4.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r5);

        $r42 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r41 = newarray (int)[4];

        $r41[0] = 13;

        $r41[1] = 14;

        $r41[2] = 15;

        $r41[3] = 16;

        specialinvoke $r42.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r41);

        r55 = $r42;

        virtualinvoke r3.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r55);

        virtualinvoke r55.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r1);

        $r48 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r47 = newarray (int)[1];

        $r47[0] = 9;

        specialinvoke $r48.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r47);

        r56 = $r48;

        $r46 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree>;

        virtualinvoke $r46.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r56);

        $r45 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r51 = newarray (int)[4];

        $r51[0] = 7;

        $r51[1] = 8;

        $r51[2] = 9;

        $r51[3] = 10;

        specialinvoke $r45.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r51);

        r57 = $r45;

        virtualinvoke r56.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r57);

        virtualinvoke r57.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r1);

        $r52 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r53 = newarray (int)[2];

        $r53[0] = 11;

        $r53[1] = 12;

        specialinvoke $r52.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r53);

        r58 = $r52;

        virtualinvoke r56.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r58);

        virtualinvoke r58.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r2);

        $r54 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r49 = newarray (int)[7];

        $r49[0] = 10;

        $r49[1] = 11;

        $r49[2] = 12;

        $r49[3] = 13;

        $r49[4] = 14;

        $r49[5] = 15;

        $r49[6] = 16;

        specialinvoke $r54.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r49);

        r59 = $r54;

        $r50 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree>;

        virtualinvoke $r50.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r59);

        virtualinvoke r59.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r1);

        goto label2;

     label1:
        $r8 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r9 = newarray (int)[2];

        $i10 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(0);

        $r9[0] = $i10;

        $i11 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: int getAmOrPmKeyCode(int)>(1);

        $r9[1] = $i11;

        specialinvoke $r8.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r9);

        r60 = $r8;

        $r10 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r12 = newarray (int)[1];

        $r12[0] = 8;

        specialinvoke $r10.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r12);

        r61 = $r10;

        $r11 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree>;

        virtualinvoke $r11.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r61);

        virtualinvoke r61.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r14 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r13 = newarray (int)[3];

        $r13[0] = 7;

        $r13[1] = 8;

        $r13[2] = 9;

        specialinvoke $r14.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r13);

        r62 = $r14;

        virtualinvoke r61.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r62);

        virtualinvoke r62.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r16 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r15 = newarray (int)[6];

        $r15[0] = 7;

        $r15[1] = 8;

        $r15[2] = 9;

        $r15[3] = 10;

        $r15[4] = 11;

        $r15[5] = 12;

        specialinvoke $r16.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r15);

        r63 = $r16;

        virtualinvoke r62.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r63);

        virtualinvoke r63.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r19 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r20 = newarray (int)[10];

        $r20[0] = 7;

        $r20[1] = 8;

        $r20[2] = 9;

        $r20[3] = 10;

        $r20[4] = 11;

        $r20[5] = 12;

        $r20[6] = 13;

        $r20[7] = 14;

        $r20[8] = 15;

        $r20[9] = 16;

        specialinvoke $r19.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r20);

        r64 = $r19;

        virtualinvoke r63.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r64);

        virtualinvoke r64.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r17 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r18 = newarray (int)[4];

        $r18[0] = 13;

        $r18[1] = 14;

        $r18[2] = 15;

        $r18[3] = 16;

        specialinvoke $r17.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r18);

        r65 = $r17;

        virtualinvoke r62.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r65);

        virtualinvoke r65.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r23 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r24 = newarray (int)[3];

        $r24[0] = 10;

        $r24[1] = 11;

        $r24[2] = 12;

        specialinvoke $r23.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r24);

        r66 = $r23;

        virtualinvoke r61.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r66);

        $r21 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r22 = newarray (int)[10];

        $r22[0] = 7;

        $r22[1] = 8;

        $r22[2] = 9;

        $r22[3] = 10;

        $r22[4] = 11;

        $r22[5] = 12;

        $r22[6] = 13;

        $r22[7] = 14;

        $r22[8] = 15;

        $r22[9] = 16;

        specialinvoke $r21.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r22);

        r67 = $r21;

        virtualinvoke r66.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r67);

        virtualinvoke r67.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r27 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r28 = newarray (int)[8];

        $r28[0] = 9;

        $r28[1] = 10;

        $r28[2] = 11;

        $r28[3] = 12;

        $r28[4] = 13;

        $r28[5] = 14;

        $r28[6] = 15;

        $r28[7] = 16;

        specialinvoke $r27.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r28);

        r68 = $r27;

        $r25 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.TimePickerSpinnerDelegate$Node mLegalTimesTree>;

        virtualinvoke $r25.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r68);

        virtualinvoke r68.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

        $r26 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r31 = newarray (int)[6];

        $r31[0] = 7;

        $r31[1] = 8;

        $r31[2] = 9;

        $r31[3] = 10;

        $r31[4] = 11;

        $r31[5] = 12;

        specialinvoke $r26.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r31);

        r69 = $r26;

        virtualinvoke r68.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r69);

        $r32 = new android.widget.TimePickerSpinnerDelegate$Node;

        $r29 = newarray (int)[10];

        $r29[0] = 7;

        $r29[1] = 8;

        $r29[2] = 9;

        $r29[3] = 10;

        $r29[4] = 11;

        $r29[5] = 12;

        $r29[6] = 13;

        $r29[7] = 14;

        $r29[8] = 15;

        $r29[9] = 16;

        specialinvoke $r32.<android.widget.TimePickerSpinnerDelegate$Node: void <init>(android.widget.TimePickerSpinnerDelegate,int[])>(r0, $r29);

        r70 = $r32;

        virtualinvoke r69.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r70);

        virtualinvoke r70.<android.widget.TimePickerSpinnerDelegate$Node: void addChild(android.widget.TimePickerSpinnerDelegate$Node)>(r60);

     label2:
        return;
    }

    static void access$000(android.widget.TimePickerSpinnerDelegate, int, boolean, boolean)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;
        boolean z0, z1;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void setCurrentItemShowing(int,boolean,boolean)>(i0, z0, z1);

        return;
    }

    static void access$100(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void tryVibrate()>();

        return;
    }

    static android.widget.RadialTimePickerView access$200(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        android.widget.RadialTimePickerView $r1;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        $r1 = r0.<android.widget.TimePickerSpinnerDelegate: android.widget.RadialTimePickerView mRadialTimePickerView>;

        return $r1;
    }

    static void access$300(android.widget.TimePickerSpinnerDelegate, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void updateAmPmDisplay(int)>(i0);

        return;
    }

    static boolean access$600(android.widget.TimePickerSpinnerDelegate, int)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean processKeyUp(int)>(i0);

        return $z0;
    }

    static boolean access$700(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        $z0 = r0.<android.widget.TimePickerSpinnerDelegate: boolean mInKbMode>;

        return $z0;
    }

    static boolean access$800(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        $z0 = specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: boolean isTypedTimeFullyLegal()>();

        return $z0;
    }

    static void access$900(android.widget.TimePickerSpinnerDelegate)
    {
        android.widget.TimePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.TimePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.TimePickerSpinnerDelegate: void finishKbMode()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.TimePickerSpinnerDelegate: int HOURS_IN_HALF_DAY> = 12;

        <android.widget.TimePickerSpinnerDelegate: boolean DEFAULT_ENABLED_STATE> = 1;

        <android.widget.TimePickerSpinnerDelegate: int PM> = 1;

        <android.widget.TimePickerSpinnerDelegate: int AM> = 0;

        <android.widget.TimePickerSpinnerDelegate: int ENABLE_PICKER_INDEX> = 3;

        <android.widget.TimePickerSpinnerDelegate: int AMPM_INDEX> = 2;

        <android.widget.TimePickerSpinnerDelegate: int MINUTE_INDEX> = 1;

        <android.widget.TimePickerSpinnerDelegate: int HOUR_INDEX> = 0;

        <android.widget.TimePickerSpinnerDelegate: java.lang.String TAG> = "TimePickerDelegate";

        return;
    }
}
