public class android.filterpacks.base.FrameBranch extends android.filterfw.core.Filter
{
    private int mNumberOfOutputs;

    public void <init>(java.lang.String)
    {
        android.filterpacks.base.FrameBranch r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.base.FrameBranch;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.base.FrameBranch: int mNumberOfOutputs> = 2;

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.base.FrameBranch r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: android.filterpacks.base.FrameBranch;

        virtualinvoke r0.<android.filterpacks.base.FrameBranch: void addInputPort(java.lang.String)>("in");

        i0 = 0;

     label1:
        $i1 = r0.<android.filterpacks.base.FrameBranch: int mNumberOfOutputs>;

        if i0 >= $i1 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.filterpacks.base.FrameBranch: void addOutputBasedOnInput(java.lang.String,java.lang.String)>($r4, "in");

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.base.FrameBranch r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.base.FrameBranch;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.base.FrameBranch r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.filterpacks.base.FrameBranch;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.base.FrameBranch: android.filterfw.core.Frame pullInput(java.lang.String)>("in");

        i0 = 0;

     label1:
        $i1 = r0.<android.filterpacks.base.FrameBranch: int mNumberOfOutputs>;

        if i0 >= $i1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.filterpacks.base.FrameBranch: void pushOutput(java.lang.String,android.filterfw.core.Frame)>($r6, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
