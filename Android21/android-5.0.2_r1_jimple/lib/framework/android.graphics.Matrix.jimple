public class android.graphics.Matrix extends java.lang.Object
{
    public static final int MSCALE_X;
    public static final int MSKEW_X;
    public static final int MTRANS_X;
    public static final int MSKEW_Y;
    public static final int MSCALE_Y;
    public static final int MTRANS_Y;
    public static final int MPERSP_0;
    public static final int MPERSP_1;
    public static final int MPERSP_2;
    public static android.graphics.Matrix IDENTITY_MATRIX;
    public long native_instance;

    public void <init>()
    {
        android.graphics.Matrix r0;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = staticinvoke <android.graphics.Matrix: long native_create(long)>(0L);

        r0.<android.graphics.Matrix: long native_instance> = $l0;

        return;
    }

    public void <init>(android.graphics.Matrix)
    {
        android.graphics.Matrix r0, r1;
        long $l0, $l1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.Matrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $l1 = r1.<android.graphics.Matrix: long native_instance>;

        goto label2;

     label1:
        $l1 = 0L;

     label2:
        $l0 = staticinvoke <android.graphics.Matrix: long native_create(long)>($l1);

        r0.<android.graphics.Matrix: long native_instance> = $l0;

        return;
    }

    public boolean isIdentity()
    {
        android.graphics.Matrix r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_isIdentity(long)>($l0);

        return $z0;
    }

    public boolean isAffine()
    {
        android.graphics.Matrix r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_isAffine(long)>($l0);

        return $z0;
    }

    public boolean rectStaysRect()
    {
        android.graphics.Matrix r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_rectStaysRect(long)>($l0);

        return $z0;
    }

    public void set(android.graphics.Matrix)
    {
        android.graphics.Matrix r0, r1;
        long $l0, $l1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 != null goto label1;

        virtualinvoke r0.<android.graphics.Matrix: void reset()>();

        goto label2;

     label1:
        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        $l0 = r1.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_set(long,long)>($l1, $l0);

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.graphics.Matrix r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.graphics.Matrix;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        $r2 = (android.graphics.Matrix) r1;

        $l0 = $r2.<android.graphics.Matrix: long native_instance>;

        $z1 = staticinvoke <android.graphics.Matrix: boolean native_equals(long,long)>($l1, $l0);

        return $z1;
    }

    public int hashCode()
    {
        android.graphics.Matrix r0;

        r0 := @this: android.graphics.Matrix;

        return 44;
    }

    public void reset()
    {
        android.graphics.Matrix r0;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_reset(long)>($l0);

        return;
    }

    public void setTranslate(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setTranslate(long,float,float)>($l0, f0, f1);

        return;
    }

    public void setScale(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setScale(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return;
    }

    public void setScale(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setScale(long,float,float)>($l0, f0, f1);

        return;
    }

    public void setRotate(float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setRotate(long,float,float,float)>($l0, f0, f1, f2);

        return;
    }

    public void setRotate(float)
    {
        android.graphics.Matrix r0;
        float f0;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setRotate(long,float)>($l0, f0);

        return;
    }

    public void setSinCos(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSinCos(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return;
    }

    public void setSinCos(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSinCos(long,float,float)>($l0, f0, f1);

        return;
    }

    public void setSkew(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSkew(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return;
    }

    public void setSkew(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setSkew(long,float,float)>($l0, f0, f1);

        return;
    }

    public boolean setConcat(android.graphics.Matrix, android.graphics.Matrix)
    {
        android.graphics.Matrix r0, r1, r2;
        long $l0, $l1, $l2;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: android.graphics.Matrix;

        $l2 = r0.<android.graphics.Matrix: long native_instance>;

        $l1 = r1.<android.graphics.Matrix: long native_instance>;

        $l0 = r2.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setConcat(long,long,long)>($l2, $l1, $l0);

        return 1;
    }

    public boolean preTranslate(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preTranslate(long,float,float)>($l0, f0, f1);

        return 1;
    }

    public boolean preScale(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preScale(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return 1;
    }

    public boolean preScale(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preScale(long,float,float)>($l0, f0, f1);

        return 1;
    }

    public boolean preRotate(float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preRotate(long,float,float,float)>($l0, f0, f1, f2);

        return 1;
    }

    public boolean preRotate(float)
    {
        android.graphics.Matrix r0;
        float f0;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preRotate(long,float)>($l0, f0);

        return 1;
    }

    public boolean preSkew(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preSkew(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return 1;
    }

    public boolean preSkew(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preSkew(long,float,float)>($l0, f0, f1);

        return 1;
    }

    public boolean preConcat(android.graphics.Matrix)
    {
        android.graphics.Matrix r0, r1;
        long $l0, $l1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.Matrix;

        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        $l0 = r1.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_preConcat(long,long)>($l1, $l0);

        return 1;
    }

    public boolean postTranslate(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postTranslate(long,float,float)>($l0, f0, f1);

        return 1;
    }

    public boolean postScale(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postScale(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return 1;
    }

    public boolean postScale(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postScale(long,float,float)>($l0, f0, f1);

        return 1;
    }

    public boolean postRotate(float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postRotate(long,float,float,float)>($l0, f0, f1, f2);

        return 1;
    }

    public boolean postRotate(float)
    {
        android.graphics.Matrix r0;
        float f0;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postRotate(long,float)>($l0, f0);

        return 1;
    }

    public boolean postSkew(float, float, float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1, f2, f3;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postSkew(long,float,float,float,float)>($l0, f0, f1, f2, f3);

        return 1;
    }

    public boolean postSkew(float, float)
    {
        android.graphics.Matrix r0;
        float f0, f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postSkew(long,float,float)>($l0, f0, f1);

        return 1;
    }

    public boolean postConcat(android.graphics.Matrix)
    {
        android.graphics.Matrix r0, r1;
        long $l0, $l1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.Matrix;

        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        $l0 = r1.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_postConcat(long,long)>($l1, $l0);

        return 1;
    }

    public boolean setRectToRect(android.graphics.RectF, android.graphics.RectF, android.graphics.Matrix$ScaleToFit)
    {
        android.graphics.Matrix r0;
        android.graphics.RectF r1, r2;
        android.graphics.Matrix$ScaleToFit r3;
        java.lang.NullPointerException $r4;
        int $i0;
        long $l1;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.RectF;

        r3 := @parameter2: android.graphics.Matrix$ScaleToFit;

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label2:
        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        $i0 = r3.<android.graphics.Matrix$ScaleToFit: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int)>($l1, r1, r2, $i0);

        return $z0;
    }

    private static void checkPointArrays(float[], int, float[], int, int)
    {
        float[] r0, r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        r1 := @parameter2: float[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $i5 = i2 << 1;

        i3 = i0 + $i5;

        $i6 = i2 << 1;

        i4 = i1 + $i6;

        $i7 = i2 | i0;

        $i8 = $i7 | i1;

        $i9 = $i8 | i3;

        $i10 = $i9 | i4;

        if $i10 < 0 goto label1;

        $i11 = lengthof r0;

        if i3 > $i11 goto label1;

        $i12 = lengthof r1;

        if i4 <= $i12 goto label2;

     label1:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    public boolean setPolyToPoly(float[], int, float[], int, int)
    {
        android.graphics.Matrix r0;
        float[] r1, r2;
        int i0, i1, i2;
        long $l3;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if i2 <= 4 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        staticinvoke <android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>(r1, i0, r2, i1, i2);

        $l3 = r0.<android.graphics.Matrix: long native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_setPolyToPoly(long,float[],int,float[],int,int)>($l3, r1, i0, r2, i1, i2);

        return $z0;
    }

    public boolean invert(android.graphics.Matrix)
    {
        android.graphics.Matrix r0, r1;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.Matrix;

        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        $l0 = r1.<android.graphics.Matrix: long native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_invert(long,long)>($l1, $l0);

        return $z0;
    }

    public void mapPoints(float[], int, float[], int, int)
    {
        android.graphics.Matrix r0;
        float[] r1, r2;
        int i0, i1, i2;
        long $l3;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        staticinvoke <android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>(r2, i1, r1, i0, i2);

        $l3 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_mapPoints(long,float[],int,float[],int,int,boolean)>($l3, r1, i0, r2, i1, i2, 1);

        return;
    }

    public void mapVectors(float[], int, float[], int, int)
    {
        android.graphics.Matrix r0;
        float[] r1, r2;
        int i0, i1, i2;
        long $l3;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        staticinvoke <android.graphics.Matrix: void checkPointArrays(float[],int,float[],int,int)>(r2, i1, r1, i0, i2);

        $l3 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_mapPoints(long,float[],int,float[],int,int,boolean)>($l3, r1, i0, r2, i1, i2, 0);

        return;
    }

    public void mapPoints(float[], float[])
    {
        android.graphics.Matrix r0;
        float[] r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i2 = lengthof r1;

        $i3 = $i2 >> 1;

        virtualinvoke r0.<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>(r1, 0, r2, 0, $i3);

        return;
    }

    public void mapVectors(float[], float[])
    {
        android.graphics.Matrix r0;
        float[] r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i2 = lengthof r1;

        $i3 = $i2 >> 1;

        virtualinvoke r0.<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>(r1, 0, r2, 0, $i3);

        return;
    }

    public void mapPoints(float[])
    {
        android.graphics.Matrix r0;
        float[] r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        $i0 = lengthof r1;

        $i1 = $i0 >> 1;

        virtualinvoke r0.<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>(r1, 0, r1, 0, $i1);

        return;
    }

    public void mapVectors(float[])
    {
        android.graphics.Matrix r0;
        float[] r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        $i0 = lengthof r1;

        $i1 = $i0 >> 1;

        virtualinvoke r0.<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>(r1, 0, r1, 0, $i1);

        return;
    }

    public boolean mapRect(android.graphics.RectF, android.graphics.RectF)
    {
        android.graphics.Matrix r0;
        android.graphics.RectF r1, r2;
        java.lang.NullPointerException $r3;
        long $l0;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.RectF;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        $z0 = staticinvoke <android.graphics.Matrix: boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF)>($l0, r1, r2);

        return $z0;
    }

    public boolean mapRect(android.graphics.RectF)
    {
        android.graphics.Matrix r0;
        android.graphics.RectF r1;
        boolean $z0;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: android.graphics.RectF;

        $z0 = virtualinvoke r0.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>(r1, r1);

        return $z0;
    }

    public float mapRadius(float)
    {
        android.graphics.Matrix r0;
        float f0, $f1;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        f0 := @parameter0: float;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        $f1 = staticinvoke <android.graphics.Matrix: float native_mapRadius(long,float)>($l0, f0);

        return $f1;
    }

    public void getValues(float[])
    {
        android.graphics.Matrix r0;
        float[] r1;
        int $i0;
        long $l1;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        $i0 = lengthof r1;

        if $i0 >= 9 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_getValues(long,float[])>($l1, r1);

        return;
    }

    public void setValues(float[])
    {
        android.graphics.Matrix r0;
        float[] r1;
        int $i0;
        long $l1;
        java.lang.ArrayIndexOutOfBoundsException $r2;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: float[];

        $i0 = lengthof r1;

        if $i0 >= 9 goto label1;

        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $l1 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void native_setValues(long,float[])>($l1, r1);

        return;
    }

    public java.lang.String toString()
    {
        android.graphics.Matrix r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r5;

        r0 := @this: android.graphics.Matrix;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Matrix{");

        virtualinvoke r0.<android.graphics.Matrix: void toShortString(java.lang.StringBuilder)>(r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String toShortString()
    {
        android.graphics.Matrix r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.graphics.Matrix;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        r1 = $r2;

        virtualinvoke r0.<android.graphics.Matrix: void toShortString(java.lang.StringBuilder)>(r1);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void toShortString(java.lang.StringBuilder)
    {
        android.graphics.Matrix r0;
        java.lang.StringBuilder r1;
        float[] r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 = newarray (float)[9];

        virtualinvoke r0.<android.graphics.Matrix: void getValues(float[])>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $f0 = r2[0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f1 = r2[1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f2 = r2[2];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $f3 = r2[3];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f4 = r2[4];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f5 = r2[5];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $f6 = r2[6];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f7 = r2[7];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f8 = r2[8];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        return;
    }

    public void printShortString(java.io.PrintWriter)
    {
        android.graphics.Matrix r0;
        java.io.PrintWriter r1;
        float[] r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.graphics.Matrix;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = newarray (float)[9];

        virtualinvoke r0.<android.graphics.Matrix: void getValues(float[])>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(91);

        $f0 = r2[0];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f1 = r2[1];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f2 = r2[2];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("][");

        $f3 = r2[3];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f4 = r2[4];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f5 = r2[5];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("][");

        $f6 = r2[6];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f7 = r2[7];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f8 = r2[8];

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f8);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(93);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Matrix r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: android.graphics.Matrix;

     label1:
        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        staticinvoke <android.graphics.Matrix: void finalizer(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    final long ni()
    {
        android.graphics.Matrix r0;
        long $l0;

        r0 := @this: android.graphics.Matrix;

        $l0 = r0.<android.graphics.Matrix: long native_instance>;

        return $l0;
    }

    private static native long native_create(long);

    private static native boolean native_isIdentity(long);

    private static native boolean native_isAffine(long);

    private static native boolean native_rectStaysRect(long);

    private static native void native_reset(long);

    private static native void native_set(long, long);

    private static native void native_setTranslate(long, float, float);

    private static native void native_setScale(long, float, float, float, float);

    private static native void native_setScale(long, float, float);

    private static native void native_setRotate(long, float, float, float);

    private static native void native_setRotate(long, float);

    private static native void native_setSinCos(long, float, float, float, float);

    private static native void native_setSinCos(long, float, float);

    private static native void native_setSkew(long, float, float, float, float);

    private static native void native_setSkew(long, float, float);

    private static native void native_setConcat(long, long, long);

    private static native void native_preTranslate(long, float, float);

    private static native void native_preScale(long, float, float, float, float);

    private static native void native_preScale(long, float, float);

    private static native void native_preRotate(long, float, float, float);

    private static native void native_preRotate(long, float);

    private static native void native_preSkew(long, float, float, float, float);

    private static native void native_preSkew(long, float, float);

    private static native void native_preConcat(long, long);

    private static native void native_postTranslate(long, float, float);

    private static native void native_postScale(long, float, float, float, float);

    private static native void native_postScale(long, float, float);

    private static native void native_postRotate(long, float, float, float);

    private static native void native_postRotate(long, float);

    private static native void native_postSkew(long, float, float, float, float);

    private static native void native_postSkew(long, float, float);

    private static native void native_postConcat(long, long);

    private static native boolean native_setRectToRect(long, android.graphics.RectF, android.graphics.RectF, int);

    private static native boolean native_setPolyToPoly(long, float[], int, float[], int, int);

    private static native boolean native_invert(long, long);

    private static native void native_mapPoints(long, float[], int, float[], int, int, boolean);

    private static native boolean native_mapRect(long, android.graphics.RectF, android.graphics.RectF);

    private static native float native_mapRadius(long, float);

    private static native void native_getValues(long, float[]);

    private static native void native_setValues(long, float[]);

    private static native boolean native_equals(long, long);

    private static native void finalizer(long);

    static void <clinit>()
    {
        android.graphics.Matrix$1 $r0;

        <android.graphics.Matrix: int MPERSP_2> = 8;

        <android.graphics.Matrix: int MPERSP_1> = 7;

        <android.graphics.Matrix: int MPERSP_0> = 6;

        <android.graphics.Matrix: int MTRANS_Y> = 5;

        <android.graphics.Matrix: int MSCALE_Y> = 4;

        <android.graphics.Matrix: int MSKEW_Y> = 3;

        <android.graphics.Matrix: int MTRANS_X> = 2;

        <android.graphics.Matrix: int MSKEW_X> = 1;

        <android.graphics.Matrix: int MSCALE_X> = 0;

        $r0 = new android.graphics.Matrix$1;

        specialinvoke $r0.<android.graphics.Matrix$1: void <init>()>();

        <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX> = $r0;

        return;
    }
}
