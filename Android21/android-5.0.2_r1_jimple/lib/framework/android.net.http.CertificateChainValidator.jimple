public class android.net.http.CertificateChainValidator extends java.lang.Object
{
    private static final java.lang.String TAG;
    private javax.net.ssl.X509TrustManager mTrustManager;

    public static android.net.http.CertificateChainValidator getInstance()
    {
        android.net.http.CertificateChainValidator $r0;

        $r0 = staticinvoke <android.net.http.CertificateChainValidator$NoPreloadHolder: android.net.http.CertificateChainValidator access$100()>();

        return $r0;
    }

    private void <init>()
    {
        android.net.http.CertificateChainValidator r0;
        javax.net.ssl.TrustManagerFactory r1;
        javax.net.ssl.TrustManager[] r2;
        int i0, i1;
        javax.net.ssl.TrustManager r3;
        java.security.KeyStore $r4;
        javax.net.ssl.X509TrustManager $r5, $r7;
        java.lang.RuntimeException $r6, $r9, $r11;
        boolean $z0;
        java.security.NoSuchAlgorithmException $r8, r12;
        java.security.KeyStoreException $r10, r13;

        r0 := @this: android.net.http.CertificateChainValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>("X.509");

        $r4 = (java.security.KeyStore) null;

        virtualinvoke r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4);

        r2 = virtualinvoke r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 == 0 goto label3;

        $r7 = (javax.net.ssl.X509TrustManager) r3;

        r0.<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager mTrustManager> = $r7;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r12 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("X.509 TrustManagerFactory must be available", r12);

        throw $r9;

     label6:
        $r10 := @caughtexception;

        r13 = $r10;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("X.509 TrustManagerFactory cannot be initialized", r13);

        throw $r11;

     label7:
        $r5 = r0.<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager mTrustManager>;

        if $r5 != null goto label8;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("None of the X.509 TrustManagers are X509TrustManager");

        throw $r6;

     label8:
        return;

        catch java.security.NoSuchAlgorithmException from label1 to label4 with label5;
        catch java.security.KeyStoreException from label1 to label4 with label6;
    }

    public android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection, javax.net.ssl.SSLSocket, java.lang.String) throws java.io.IOException
    {
        android.net.http.CertificateChainValidator r0;
        android.net.http.HttpsConnection r1;
        javax.net.ssl.SSLSocket r2;
        java.lang.String r3;
        javax.net.ssl.SSLSession r4, $r6;
        java.security.cert.Certificate[] r5;
        boolean $z0;
        java.security.cert.X509Certificate[] $r7, $r8;
        android.net.http.SslError $r9;
        int $i0;
        java.security.cert.Certificate $r10, $r13;
        android.net.http.SslCertificate $r11;
        java.security.cert.X509Certificate $r12;

        r0 := @this: android.net.http.CertificateChainValidator;

        r1 := @parameter0: android.net.http.HttpsConnection;

        r2 := @parameter1: javax.net.ssl.SSLSocket;

        r3 := @parameter2: java.lang.String;

        r4 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $z0 = interfaceinvoke r4.<javax.net.ssl.SSLSession: boolean isValid()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>(r2, "failed to perform SSL handshake");

     label1:
        $r6 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        r5 = interfaceinvoke $r6.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        if r5 == null goto label2;

        $i0 = lengthof r5;

        if $i0 != 0 goto label3;

     label2:
        specialinvoke r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>(r2, "failed to retrieve peer certificates");

        goto label4;

     label3:
        if r1 == null goto label4;

        $r10 = r5[0];

        if $r10 == null goto label4;

        $r11 = new android.net.http.SslCertificate;

        $r13 = r5[0];

        $r12 = (java.security.cert.X509Certificate) $r13;

        specialinvoke $r11.<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>($r12);

        virtualinvoke r1.<android.net.http.HttpsConnection: void setCertificate(android.net.http.SslCertificate)>($r11);

     label4:
        $r7 = (java.security.cert.X509Certificate[]) r5;

        $r8 = (java.security.cert.X509Certificate[]) $r7;

        $r9 = staticinvoke <android.net.http.CertificateChainValidator: android.net.http.SslError verifyServerDomainAndCertificates(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>($r8, r3, "RSA");

        return $r9;
    }

    public static android.net.http.SslError verifyServerCertificates(byte[][], java.lang.String, java.lang.String) throws java.io.IOException
    {
        byte[][] r0;
        java.lang.String r1, r2;
        java.security.cert.X509Certificate[] r3;
        java.security.cert.CertificateFactory r4;
        int i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r5;
        android.net.http.SslError $r6;
        java.io.ByteArrayInputStream $r7;
        byte[] $r8;
        java.security.cert.Certificate $r9;
        java.security.cert.X509Certificate $r10;
        java.io.IOException $r11;
        java.security.cert.CertificateException $r12, r13;

        r0 := @parameter0: byte[][];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        $i1 = lengthof r0;

        if $i1 != 0 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad certificate chain");

        throw $r5;

     label2:
        $i2 = lengthof r0;

        r3 = newarray (java.security.cert.X509Certificate)[$i2];

     label3:
        r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        i0 = 0;

     label4:
        $i3 = lengthof r0;

        if i0 >= $i3 goto label5;

        $r7 = new java.io.ByteArrayInputStream;

        $r8 = r0[i0];

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);

        $r9 = virtualinvoke r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r7);

        $r10 = (java.security.cert.X509Certificate) $r9;

        r3[i0] = $r10;

        i0 = i0 + 1;

        goto label4;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r13 = $r12;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("can\'t read certificate", r13);

        throw $r11;

     label7:
        $r6 = staticinvoke <android.net.http.CertificateChainValidator: android.net.http.SslError verifyServerDomainAndCertificates(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>(r3, r1, r2);

        return $r6;

        catch java.security.cert.CertificateException from label3 to label5 with label6;
    }

    public static void handleTrustStorageUpdate()
    {
        javax.net.ssl.TrustManagerFactory r0;
        boolean z0;
        javax.net.ssl.TrustManager[] r2, r14;
        int i0, i1;
        javax.net.ssl.TrustManager r3;
        java.lang.reflect.Method r4;
        java.security.KeyStore $r5;
        java.lang.Class $r6;
        java.lang.Class[] $r7;
        java.lang.Object[] $r8;
        java.lang.Exception $r9;
        java.security.KeyStoreException $r11, r13;
        java.security.NoSuchAlgorithmException $r12;

     label01:
        r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>("X.509");

        $r5 = (java.security.KeyStore) null;

        virtualinvoke r0.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5);

     label02:
        goto label05;

     label03:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CertificateChainValidator", "Couldn\'t find default X.509 TrustManagerFactory");

        return;

     label04:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("CertificateChainValidator", "Couldn\'t initialize default X.509 TrustManagerFactory", r13);

        return;

     label05:
        r14 = virtualinvoke r0.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        z0 = 0;

        r2 = r14;

        i0 = lengthof r2;

        i1 = 0;

     label06:
        if i1 >= i0 goto label11;

        r3 = r2[i1];

     label07:
        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = newarray (java.lang.Class)[0];

        r4 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("handleTrustStorageUpdate", $r7);

        virtualinvoke r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r8);

        z0 = 1;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

     label10:
        i1 = i1 + 1;

        goto label06;

     label11:
        if z0 != 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CertificateChainValidator", "Didn\'t find a TrustManager to handle CA list update");

     label12:
        return;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label03;
        catch java.security.KeyStoreException from label01 to label02 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private static android.net.http.SslError verifyServerDomainAndCertificates(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509Certificate[] r0;
        java.lang.String r1, r2;
        java.security.cert.X509Certificate r3;
        boolean z0, $z1, $z2, $z3, $z4;
        javax.net.ssl.X509TrustManager r4;
        com.android.org.conscrypt.TrustManagerImpl r5;
        android.net.http.SslError $r7, $r12;
        javax.net.ssl.HostnameVerifier $r8;
        android.net.http.DelegatingSSLSession$CertificateWrap $r9;
        java.security.GeneralSecurityException $r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @parameter0: java.security.cert.X509Certificate[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = r0[0];

        if r3 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("certificate for this site is null");

        throw $r11;

     label1:
        if r1 == null goto label2;

        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r8 = staticinvoke <android.net.http.CertificateChainValidator$NoPreloadHolder: javax.net.ssl.HostnameVerifier access$200()>();

        $r9 = new android.net.http.DelegatingSSLSession$CertificateWrap;

        specialinvoke $r9.<android.net.http.DelegatingSSLSession$CertificateWrap: void <init>(java.security.cert.Certificate)>(r3);

        $z3 = interfaceinvoke $r8.<javax.net.ssl.HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>(r1, $r9);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        if z0 != 0 goto label4;

        $r7 = new android.net.http.SslError;

        specialinvoke $r7.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(2, r3);

        return $r7;

     label4:
        r4 = staticinvoke <com.android.org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultX509TrustManager()>();

        $z1 = r4 instanceof com.android.org.conscrypt.TrustManagerImpl;

        if $z1 == 0 goto label5;

        r5 = (com.android.org.conscrypt.TrustManagerImpl) r4;

        virtualinvoke r5.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>(r0, r2, r1);

        goto label6;

     label5:
        interfaceinvoke r4.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>(r0, r2);

     label6:
        return null;

     label7:
        $r10 := @caughtexception;

        $r12 = new android.net.http.SslError;

        specialinvoke $r12.<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>(3, r3);

        return $r12;

        catch java.security.GeneralSecurityException from label4 to label6 with label7;
    }

    private javax.net.ssl.X509TrustManager getTrustManager()
    {
        android.net.http.CertificateChainValidator r0;
        javax.net.ssl.X509TrustManager $r1;

        r0 := @this: android.net.http.CertificateChainValidator;

        $r1 = r0.<android.net.http.CertificateChainValidator: javax.net.ssl.X509TrustManager mTrustManager>;

        return $r1;
    }

    private void closeSocketThrowException(javax.net.ssl.SSLSocket, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.net.http.CertificateChainValidator r0;
        javax.net.ssl.SSLSocket r1;
        java.lang.String r2, r3, $r4;

        r0 := @this: android.net.http.CertificateChainValidator;

        r1 := @parameter0: javax.net.ssl.SSLSocket;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        specialinvoke r0.<android.net.http.CertificateChainValidator: void closeSocketThrowException(javax.net.ssl.SSLSocket,java.lang.String)>(r1, $r4);

        return;
    }

    private void closeSocketThrowException(javax.net.ssl.SSLSocket, java.lang.String) throws java.io.IOException
    {
        android.net.http.CertificateChainValidator r0;
        javax.net.ssl.SSLSocket r1;
        java.lang.String r2;
        javax.net.ssl.SSLSession r3;
        javax.net.ssl.SSLHandshakeException $r4;

        r0 := @this: android.net.http.CertificateChainValidator;

        r1 := @parameter0: javax.net.ssl.SSLSocket;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label2;

        r3 = virtualinvoke r1.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<javax.net.ssl.SSLSession: void invalidate()>();

     label1:
        virtualinvoke r1.<javax.net.ssl.SSLSocket: void close()>();

     label2:
        $r4 = new javax.net.ssl.SSLHandshakeException;

        specialinvoke $r4.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>(r2);

        throw $r4;
    }

    void <init>(android.net.http.CertificateChainValidator$1)
    {
        android.net.http.CertificateChainValidator r0;
        android.net.http.CertificateChainValidator$1 r1;

        r0 := @this: android.net.http.CertificateChainValidator;

        r1 := @parameter0: android.net.http.CertificateChainValidator$1;

        specialinvoke r0.<android.net.http.CertificateChainValidator: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <android.net.http.CertificateChainValidator: java.lang.String TAG> = "CertificateChainValidator";

        return;
    }
}
