public abstract class android.service.media.MediaBrowserService extends android.app.Service
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    public static final java.lang.String SERVICE_INTERFACE;
    private final android.util.ArrayMap mConnections;
    private final android.os.Handler mHandler;
    private android.service.media.MediaBrowserService$ServiceBinder mBinder;
    android.media.session.MediaSession$Token mSession;

    public void <init>()
    {
        android.service.media.MediaBrowserService r0;
        android.util.ArrayMap $r1;
        android.os.Handler $r2;

        r0 := @this: android.service.media.MediaBrowserService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.media.MediaBrowserService: android.util.ArrayMap mConnections> = $r1;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler> = $r2;

        return;
    }

    public void onCreate()
    {
        android.service.media.MediaBrowserService r0;
        android.service.media.MediaBrowserService$ServiceBinder $r1;

        r0 := @this: android.service.media.MediaBrowserService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = new android.service.media.MediaBrowserService$ServiceBinder;

        specialinvoke $r1.<android.service.media.MediaBrowserService$ServiceBinder: void <init>(android.service.media.MediaBrowserService,android.service.media.MediaBrowserService$1)>(r0, null);

        r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ServiceBinder mBinder> = $r1;

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.media.MediaBrowserService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.service.media.MediaBrowserService$ServiceBinder $r4;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.media.browse.MediaBrowserService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService$ServiceBinder mBinder>;

        return $r4;

     label1:
        return null;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.media.MediaBrowserService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        return;
    }

    public abstract android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String, int, android.os.Bundle);

    public abstract void onLoadChildren(java.lang.String, android.service.media.MediaBrowserService$Result);

    public void setSessionToken(android.media.session.MediaSession$Token)
    {
        android.service.media.MediaBrowserService r0;
        android.media.session.MediaSession$Token r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: android.media.session.MediaSession$Token;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".onCreateSession() set invalid MediaSession.Token");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        r0.<android.service.media.MediaBrowserService: android.media.session.MediaSession$Token mSession> = r1;

        return;
    }

    public android.media.session.MediaSession$Token getSessionToken()
    {
        android.service.media.MediaBrowserService r0;
        android.media.session.MediaSession$Token $r1;

        r0 := @this: android.service.media.MediaBrowserService;

        $r1 = r0.<android.service.media.MediaBrowserService: android.media.session.MediaSession$Token mSession>;

        return $r1;
    }

    public void notifyChildrenChanged(java.lang.String)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$1 $r2;
        android.os.Handler $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parentId cannot be null in notifyChildrenChanged");

        throw $r4;

     label1:
        $r3 = r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler>;

        $r2 = new android.service.media.MediaBrowserService$1;

        specialinvoke $r2.<android.service.media.MediaBrowserService$1: void <init>(android.service.media.MediaBrowserService,java.lang.String)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private boolean isValidPackage(java.lang.String, int)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1, $r4;
        int i0, i1, i2;
        android.content.pm.PackageManager r2;
        java.lang.String[] r3;
        boolean $z0;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<android.service.media.MediaBrowserService: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke r2.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $r4 = r3[i2];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    private void addSubscription(java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        boolean z0;
        java.util.HashSet $r3;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        $r3 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.util.HashSet subscriptions>;

        z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        specialinvoke r0.<android.service.media.MediaBrowserService: void performLoadChildren(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord)>(r1, r2);

     label1:
        return;
    }

    private void performLoadChildren(java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1, $r8, $r12;
        android.service.media.MediaBrowserService$ConnectionRecord r2;
        android.service.media.MediaBrowserService$2 r3, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11;

        r0 := @this: android.service.media.MediaBrowserService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.media.MediaBrowserService$ConnectionRecord;

        $r4 = new android.service.media.MediaBrowserService$2;

        specialinvoke $r4.<android.service.media.MediaBrowserService$2: void <init>(android.service.media.MediaBrowserService,java.lang.Object,java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord)>(r0, r1, r1, r2);

        r3 = $r4;

        virtualinvoke r0.<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result)>(r1, r3);

        $z0 = virtualinvoke r3.<android.service.media.MediaBrowserService$Result: boolean isDone()>();

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onLoadChildren must call detach() or sendResult() before returning for package=");

        $r8 = r2.<android.service.media.MediaBrowserService$ConnectionRecord: java.lang.String pkg>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label1:
        return;
    }

    static boolean access$000(android.service.media.MediaBrowserService, java.lang.String, int)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.service.media.MediaBrowserService: boolean isValidPackage(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static android.util.ArrayMap access$100(android.service.media.MediaBrowserService)
    {
        android.service.media.MediaBrowserService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        $r1 = r0.<android.service.media.MediaBrowserService: android.util.ArrayMap mConnections>;

        return $r1;
    }

    static android.os.Handler access$300(android.service.media.MediaBrowserService)
    {
        android.service.media.MediaBrowserService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        $r1 = r0.<android.service.media.MediaBrowserService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$400(android.service.media.MediaBrowserService, java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.service.media.MediaBrowserService$ConnectionRecord;

        specialinvoke r0.<android.service.media.MediaBrowserService: void addSubscription(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord)>(r1, r2);

        return;
    }

    static void access$600(android.service.media.MediaBrowserService, java.lang.String, android.service.media.MediaBrowserService$ConnectionRecord)
    {
        android.service.media.MediaBrowserService r0;
        java.lang.String r1;
        android.service.media.MediaBrowserService$ConnectionRecord r2;

        r0 := @parameter0: android.service.media.MediaBrowserService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.service.media.MediaBrowserService$ConnectionRecord;

        specialinvoke r0.<android.service.media.MediaBrowserService: void performLoadChildren(java.lang.String,android.service.media.MediaBrowserService$ConnectionRecord)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <android.service.media.MediaBrowserService: java.lang.String SERVICE_INTERFACE> = "android.media.browse.MediaBrowserService";

        <android.service.media.MediaBrowserService: boolean DBG> = 0;

        <android.service.media.MediaBrowserService: java.lang.String TAG> = "MediaBrowserService";

        return;
    }
}
