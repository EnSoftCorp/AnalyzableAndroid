public final class android.os.PowerManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int PARTIAL_WAKE_LOCK;
    public static final int SCREEN_DIM_WAKE_LOCK;
    public static final int SCREEN_BRIGHT_WAKE_LOCK;
    public static final int FULL_WAKE_LOCK;
    public static final int PROXIMITY_SCREEN_OFF_WAKE_LOCK;
    public static final int DOZE_WAKE_LOCK;
    public static final int WAKE_LOCK_LEVEL_MASK;
    public static final int ACQUIRE_CAUSES_WAKEUP;
    public static final int ON_AFTER_RELEASE;
    public static final int UNIMPORTANT_FOR_LOGGING;
    public static final int RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY;
    public static final int BRIGHTNESS_ON;
    public static final int BRIGHTNESS_OFF;
    public static final int BRIGHTNESS_DEFAULT;
    public static final int USER_ACTIVITY_EVENT_OTHER;
    public static final int USER_ACTIVITY_EVENT_BUTTON;
    public static final int USER_ACTIVITY_EVENT_TOUCH;
    public static final int USER_ACTIVITY_FLAG_NO_CHANGE_LIGHTS;
    public static final int USER_ACTIVITY_FLAG_INDIRECT;
    public static final int GO_TO_SLEEP_REASON_APPLICATION;
    public static final int GO_TO_SLEEP_REASON_DEVICE_ADMIN;
    public static final int GO_TO_SLEEP_REASON_TIMEOUT;
    public static final int GO_TO_SLEEP_REASON_LID_SWITCH;
    public static final int GO_TO_SLEEP_REASON_POWER_BUTTON;
    public static final int GO_TO_SLEEP_REASON_HDMI;
    public static final int GO_TO_SLEEP_FLAG_NO_DOZE;
    public static final java.lang.String REBOOT_RECOVERY;
    final android.content.Context mContext;
    final android.os.IPowerManager mService;
    final android.os.Handler mHandler;
    public static final java.lang.String ACTION_POWER_SAVE_MODE_CHANGED;
    public static final java.lang.String ACTION_POWER_SAVE_MODE_CHANGING;
    public static final java.lang.String EXTRA_POWER_SAVE_MODE;

    public void <init>(android.content.Context, android.os.IPowerManager, android.os.Handler)
    {
        android.os.PowerManager r0;
        android.content.Context r1;
        android.os.IPowerManager r2;
        android.os.Handler r3;

        r0 := @this: android.os.PowerManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IPowerManager;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.PowerManager: android.content.Context mContext> = r1;

        r0.<android.os.PowerManager: android.os.IPowerManager mService> = r2;

        r0.<android.os.PowerManager: android.os.Handler mHandler> = r3;

        return;
    }

    public int getMinimumScreenBrightnessSetting()
    {
        android.os.PowerManager r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: android.os.PowerManager;

        $r1 = r0.<android.os.PowerManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694795);

        return $i0;
    }

    public int getMaximumScreenBrightnessSetting()
    {
        android.os.PowerManager r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: android.os.PowerManager;

        $r1 = r0.<android.os.PowerManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694796);

        return $i0;
    }

    public int getDefaultScreenBrightnessSetting()
    {
        android.os.PowerManager r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: android.os.PowerManager;

        $r1 = r0.<android.os.PowerManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694797);

        return $i0;
    }

    public static boolean useTwilightAdjustmentFeature()
    {
        boolean $z0;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.power.usetwilightadj", 0);

        return $z0;
    }

    public android.os.PowerManager$WakeLock newWakeLock(int, java.lang.String)
    {
        android.os.PowerManager r0;
        int i0;
        java.lang.String r1, $r4;
        android.os.PowerManager$WakeLock $r2;
        android.content.Context $r3;

        r0 := @this: android.os.PowerManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        staticinvoke <android.os.PowerManager: void validateWakeLockParameters(int,java.lang.String)>(i0, r1);

        $r2 = new android.os.PowerManager$WakeLock;

        $r3 = r0.<android.os.PowerManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        specialinvoke $r2.<android.os.PowerManager$WakeLock: void <init>(android.os.PowerManager,int,java.lang.String,java.lang.String)>(r0, i0, r1, $r4);

        return $r2;
    }

    public static void validateWakeLockParameters(int, java.lang.String)
    {
        int i0, $i1;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1, $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = i0 & 65535;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 6: goto label1;
            case 10: goto label1;
            case 26: goto label1;
            case 32: goto label1;
            case 64: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify a valid wake lock level.");

        throw $r2;

     label3:
        if r0 != null goto label4;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The tag must not be null.");

        throw $r1;

     label4:
        return;
    }

    public void userActivity(long, boolean)
    {
        android.os.PowerManager r0;
        long l0;
        boolean z0;
        byte $b1;

        r0 := @this: android.os.PowerManager;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke r0.<android.os.PowerManager: void userActivity(long,int,int)>(l0, 0, $b1);

        return;
    }

    public void userActivity(long, int, int)
    {
        android.os.PowerManager r0;
        long l0;
        int i1, i2;
        android.os.IPowerManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        interfaceinvoke $r2.<android.os.IPowerManager: void userActivity(long,int,int)>(l0, i1, i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void goToSleep(long)
    {
        android.os.PowerManager r0;
        long l0;

        r0 := @this: android.os.PowerManager;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.os.PowerManager: void goToSleep(long,int,int)>(l0, 0, 0);

        return;
    }

    public void goToSleep(long, int, int)
    {
        android.os.PowerManager r0;
        long l0;
        int i1, i2;
        android.os.IPowerManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        interfaceinvoke $r2.<android.os.IPowerManager: void goToSleep(long,int,int)>(l0, i1, i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void wakeUp(long)
    {
        android.os.PowerManager r0;
        long l0;
        android.os.IPowerManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        interfaceinvoke $r2.<android.os.IPowerManager: void wakeUp(long)>(l0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void nap(long)
    {
        android.os.PowerManager r0;
        long l0;
        android.os.IPowerManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        interfaceinvoke $r2.<android.os.IPowerManager: void nap(long)>(l0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBacklightBrightness(int)
    {
        android.os.PowerManager r0;
        int i0;
        android.os.IPowerManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        interfaceinvoke $r2.<android.os.IPowerManager: void setTemporaryScreenBrightnessSettingOverride(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isWakeLockLevelSupported(int)
    {
        android.os.PowerManager r0;
        int i0;
        android.os.IPowerManager $r2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IPowerManager: boolean isWakeLockLevelSupported(int)>(i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isScreenOn()
    {
        android.os.PowerManager r0;
        boolean $z0;

        r0 := @this: android.os.PowerManager;

        $z0 = virtualinvoke r0.<android.os.PowerManager: boolean isInteractive()>();

        return $z0;
    }

    public boolean isInteractive()
    {
        android.os.PowerManager r0;
        android.os.IPowerManager $r2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IPowerManager: boolean isInteractive()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void reboot(java.lang.String)
    {
        android.os.PowerManager r0;
        java.lang.String r1;
        android.os.IPowerManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.os.PowerManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        interfaceinvoke $r3.<android.os.IPowerManager: void reboot(boolean,java.lang.String,boolean)>(0, r1, 1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isPowerSaveMode()
    {
        android.os.PowerManager r0;
        android.os.IPowerManager $r2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IPowerManager: boolean isPowerSaveMode()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setPowerSaveMode(boolean)
    {
        android.os.PowerManager r0;
        boolean z0, $z1;
        android.os.IPowerManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.os.PowerManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.os.PowerManager: android.os.IPowerManager mService>;

        $z1 = interfaceinvoke $r2.<android.os.IPowerManager: boolean setPowerSaveMode(boolean)>(z0);

     label2:
        return $z1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.os.PowerManager: java.lang.String EXTRA_POWER_SAVE_MODE> = "mode";

        <android.os.PowerManager: java.lang.String ACTION_POWER_SAVE_MODE_CHANGING> = "android.os.action.POWER_SAVE_MODE_CHANGING";

        <android.os.PowerManager: java.lang.String ACTION_POWER_SAVE_MODE_CHANGED> = "android.os.action.POWER_SAVE_MODE_CHANGED";

        <android.os.PowerManager: java.lang.String REBOOT_RECOVERY> = "recovery";

        <android.os.PowerManager: int GO_TO_SLEEP_FLAG_NO_DOZE> = 1;

        <android.os.PowerManager: int GO_TO_SLEEP_REASON_HDMI> = 5;

        <android.os.PowerManager: int GO_TO_SLEEP_REASON_POWER_BUTTON> = 4;

        <android.os.PowerManager: int GO_TO_SLEEP_REASON_LID_SWITCH> = 3;

        <android.os.PowerManager: int GO_TO_SLEEP_REASON_TIMEOUT> = 2;

        <android.os.PowerManager: int GO_TO_SLEEP_REASON_DEVICE_ADMIN> = 1;

        <android.os.PowerManager: int GO_TO_SLEEP_REASON_APPLICATION> = 0;

        <android.os.PowerManager: int USER_ACTIVITY_FLAG_INDIRECT> = 2;

        <android.os.PowerManager: int USER_ACTIVITY_FLAG_NO_CHANGE_LIGHTS> = 1;

        <android.os.PowerManager: int USER_ACTIVITY_EVENT_TOUCH> = 2;

        <android.os.PowerManager: int USER_ACTIVITY_EVENT_BUTTON> = 1;

        <android.os.PowerManager: int USER_ACTIVITY_EVENT_OTHER> = 0;

        <android.os.PowerManager: int BRIGHTNESS_DEFAULT> = -1;

        <android.os.PowerManager: int BRIGHTNESS_OFF> = 0;

        <android.os.PowerManager: int BRIGHTNESS_ON> = 255;

        <android.os.PowerManager: int RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY> = 1;

        <android.os.PowerManager: int UNIMPORTANT_FOR_LOGGING> = 1073741824;

        <android.os.PowerManager: int ON_AFTER_RELEASE> = 536870912;

        <android.os.PowerManager: int ACQUIRE_CAUSES_WAKEUP> = 268435456;

        <android.os.PowerManager: int WAKE_LOCK_LEVEL_MASK> = 65535;

        <android.os.PowerManager: int DOZE_WAKE_LOCK> = 64;

        <android.os.PowerManager: int PROXIMITY_SCREEN_OFF_WAKE_LOCK> = 32;

        <android.os.PowerManager: int FULL_WAKE_LOCK> = 26;

        <android.os.PowerManager: int SCREEN_BRIGHT_WAKE_LOCK> = 10;

        <android.os.PowerManager: int SCREEN_DIM_WAKE_LOCK> = 6;

        <android.os.PowerManager: int PARTIAL_WAKE_LOCK> = 1;

        <android.os.PowerManager: java.lang.String TAG> = "PowerManager";

        return;
    }
}
