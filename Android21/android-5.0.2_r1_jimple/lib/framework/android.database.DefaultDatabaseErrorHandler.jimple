public final class android.database.DefaultDatabaseErrorHandler extends java.lang.Object implements android.database.DatabaseErrorHandler
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.database.DefaultDatabaseErrorHandler r0;

        r0 := @this: android.database.DefaultDatabaseErrorHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onCorruption(android.database.sqlite.SQLiteDatabase)
    {
        android.database.DefaultDatabaseErrorHandler r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.util.List r2;
        android.util.Pair r4, r7;
        java.lang.Throwable r5, $r21;
        java.util.Iterator r6, r26;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12, $r13, $r16, $r17, $r20, $r24;
        boolean $z0, $z1, $z2;
        java.lang.Object $r14, $r15, $r22, $r23;
        android.database.sqlite.SQLiteException $r18, $r19;

        r0 := @this: android.database.DefaultDatabaseErrorHandler;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corruption reported by sqlite on database: ");

        $r10 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultDatabaseErrorHandler", $r12);

        $z0 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label01;

        $r16 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r16);

        return;

     label01:
        r2 = null;

     label02:
        r2 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>();

     label03:
        goto label05;

     label04:
        $r19 := @caughtexception;

     label05:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label06:
        goto label08;

     label07:
        $r18 := @caughtexception;

     label08:
        if r2 == null goto label11;

        r26 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r15 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r15;

        $r14 = r4.<android.util.Pair: java.lang.Object second>;

        $r17 = (java.lang.String) $r14;

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r17);

        goto label09;

     label10:
        goto label18;

     label11:
        $r13 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r13);

        goto label18;

     label12:
        $r21 := @caughtexception;

        r5 = $r21;

     label13:
        if r2 == null goto label16;

        r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.util.Pair) $r23;

        $r22 = r7.<android.util.Pair: java.lang.Object second>;

        $r24 = (java.lang.String) $r22;

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r24);

        goto label14;

     label15:
        goto label17;

     label16:
        $r20 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r20);

     label17:
        throw r5;

     label18:
        return;

        catch android.database.sqlite.SQLiteException from label02 to label03 with label04;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label07;
        catch java.lang.Throwable from label02 to label08 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void deleteDatabaseFile(java.lang.String)
    {
        android.database.DefaultDatabaseErrorHandler r0;
        java.lang.String r1, $r3, $r7, $r13, $r14;
        java.lang.Exception r2, $r9;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12;
        java.io.File $r8;

        r0 := @this: android.database.DefaultDatabaseErrorHandler;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(":memory:");

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting the database file: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultDatabaseErrorHandler", $r7);

     label3:
        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r1);

        staticinvoke <android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>($r8);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete failed: ");

        $r13 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultDatabaseErrorHandler", $r14);

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <android.database.DefaultDatabaseErrorHandler: java.lang.String TAG> = "DefaultDatabaseErrorHandler";

        return;
    }
}
