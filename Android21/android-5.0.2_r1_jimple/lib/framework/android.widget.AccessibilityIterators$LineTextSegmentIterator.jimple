class android.widget.AccessibilityIterators$LineTextSegmentIterator extends android.view.AccessibilityIterators$AbstractTextSegmentIterator
{
    private static android.widget.AccessibilityIterators$LineTextSegmentIterator sLineInstance;
    protected static final int DIRECTION_START;
    protected static final int DIRECTION_END;
    protected android.text.Layout mLayout;

    void <init>()
    {
        android.widget.AccessibilityIterators$LineTextSegmentIterator r0;

        r0 := @this: android.widget.AccessibilityIterators$LineTextSegmentIterator;

        specialinvoke r0.<android.view.AccessibilityIterators$AbstractTextSegmentIterator: void <init>()>();

        return;
    }

    public static android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()
    {
        android.widget.AccessibilityIterators$LineTextSegmentIterator $r0, $r1, $r2;

        $r0 = <android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator sLineInstance>;

        if $r0 != null goto label1;

        $r2 = new android.widget.AccessibilityIterators$LineTextSegmentIterator;

        specialinvoke $r2.<android.widget.AccessibilityIterators$LineTextSegmentIterator: void <init>()>();

        <android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator sLineInstance> = $r2;

     label1:
        $r1 = <android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator sLineInstance>;

        return $r1;
    }

    public void initialize(android.text.Spannable, android.text.Layout)
    {
        android.widget.AccessibilityIterators$LineTextSegmentIterator r0;
        android.text.Spannable r1;
        android.text.Layout r2;
        java.lang.String $r3;

        r0 := @this: android.widget.AccessibilityIterators$LineTextSegmentIterator;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: android.text.Layout;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: java.lang.String mText> = $r3;

        r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout> = r2;

        return;
    }

    public int[] following(int)
    {
        android.widget.AccessibilityIterators$LineTextSegmentIterator r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String $r1, $r2;
        android.text.Layout $r3, $r4, $r6;
        int[] $r5;

        r0 := @this: android.widget.AccessibilityIterators$LineTextSegmentIterator;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: java.lang.String mText>;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 > 0 goto label1;

        return null;

     label1:
        $r2 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: java.lang.String mText>;

        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 < $i5 goto label2;

        return null;

     label2:
        if i0 >= 0 goto label3;

        $r6 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        i2 = virtualinvoke $r6.<android.text.Layout: int getLineForOffset(int)>(0);

        goto label5;

     label3:
        $r3 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        i3 = virtualinvoke $r3.<android.text.Layout: int getLineForOffset(int)>(i0);

        $i6 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>(i3, -1);

        if $i6 != i0 goto label4;

        i2 = i3;

        goto label5;

     label4:
        i2 = i3 + 1;

     label5:
        $r4 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        $i7 = virtualinvoke $r4.<android.text.Layout: int getLineCount()>();

        if i2 < $i7 goto label6;

        return null;

     label6:
        i9 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>(i2, -1);

        $i8 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>(i2, 1);

        i4 = $i8 + 1;

        $r5 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] getRange(int,int)>(i9, i4);

        return $r5;
    }

    public int[] preceding(int)
    {
        android.widget.AccessibilityIterators$LineTextSegmentIterator r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String $r1, $r2, $r4;
        android.text.Layout $r3, $r6;
        int[] $r5;

        r0 := @this: android.widget.AccessibilityIterators$LineTextSegmentIterator;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: java.lang.String mText>;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 > 0 goto label1;

        return null;

     label1:
        if i0 > 0 goto label2;

        return null;

     label2:
        $r2 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: java.lang.String mText>;

        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 <= $i5 goto label3;

        $r6 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        $r4 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: java.lang.String mText>;

        $i9 = virtualinvoke $r4.<java.lang.String: int length()>();

        i2 = virtualinvoke $r6.<android.text.Layout: int getLineForOffset(int)>($i9);

        goto label5;

     label3:
        $r3 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        i3 = virtualinvoke $r3.<android.text.Layout: int getLineForOffset(int)>(i0);

        $i6 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>(i3, 1);

        $i7 = $i6 + 1;

        if $i7 != i0 goto label4;

        i2 = i3;

        goto label5;

     label4:
        i2 = i3 - 1;

     label5:
        if i2 >= 0 goto label6;

        return null;

     label6:
        i10 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>(i2, -1);

        $i8 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>(i2, 1);

        i4 = $i8 + 1;

        $r5 = virtualinvoke r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] getRange(int,int)>(i10, i4);

        return $r5;
    }

    protected int getLineEdgeIndex(int, int)
    {
        android.widget.AccessibilityIterators$LineTextSegmentIterator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.text.Layout $r1, $r2, $r3;

        r0 := @this: android.widget.AccessibilityIterators$LineTextSegmentIterator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        i2 = virtualinvoke $r1.<android.text.Layout: int getParagraphDirection(int)>(i0);

        $i3 = i1 * i2;

        if $i3 >= 0 goto label1;

        $r3 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r3.<android.text.Layout: int getLineStart(int)>(i0);

        return $i6;

     label1:
        $r2 = r0.<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r2.<android.text.Layout: int getLineEnd(int)>(i0);

        $i5 = $i4 - 1;

        return $i5;
    }

    public static void <clinit>()
    {
        <android.widget.AccessibilityIterators$LineTextSegmentIterator: int DIRECTION_END> = 1;

        <android.widget.AccessibilityIterators$LineTextSegmentIterator: int DIRECTION_START> = -1;

        return;
    }
}
