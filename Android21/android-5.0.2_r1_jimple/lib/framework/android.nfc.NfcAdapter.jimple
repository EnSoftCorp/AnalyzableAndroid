public final class android.nfc.NfcAdapter extends java.lang.Object
{
    static final java.lang.String TAG;
    public static final java.lang.String ACTION_NDEF_DISCOVERED;
    public static final java.lang.String ACTION_TECH_DISCOVERED;
    public static final java.lang.String ACTION_TAG_DISCOVERED;
    public static final java.lang.String ACTION_TAG_LEFT_FIELD;
    public static final java.lang.String EXTRA_TAG;
    public static final java.lang.String EXTRA_NDEF_MESSAGES;
    public static final java.lang.String EXTRA_ID;
    public static final java.lang.String ACTION_ADAPTER_STATE_CHANGED;
    public static final java.lang.String EXTRA_ADAPTER_STATE;
    public static final int STATE_OFF;
    public static final int STATE_TURNING_ON;
    public static final int STATE_ON;
    public static final int STATE_TURNING_OFF;
    public static final int FLAG_READER_NFC_A;
    public static final int FLAG_READER_NFC_B;
    public static final int FLAG_READER_NFC_F;
    public static final int FLAG_READER_NFC_V;
    public static final int FLAG_READER_NFC_BARCODE;
    public static final int FLAG_READER_SKIP_NDEF_CHECK;
    public static final int FLAG_READER_NO_PLATFORM_SOUNDS;
    public static final java.lang.String EXTRA_READER_PRESENCE_CHECK_DELAY;
    public static final int FLAG_NDEF_PUSH_NO_CONFIRM;
    public static final java.lang.String ACTION_HANDOVER_TRANSFER_STARTED;
    public static final java.lang.String ACTION_HANDOVER_TRANSFER_DONE;
    public static final java.lang.String EXTRA_HANDOVER_TRANSFER_STATUS;
    public static final int HANDOVER_TRANSFER_STATUS_SUCCESS;
    public static final int HANDOVER_TRANSFER_STATUS_FAILURE;
    public static final java.lang.String EXTRA_HANDOVER_TRANSFER_URI;
    static boolean sIsInitialized;
    static android.nfc.INfcAdapter sService;
    static android.nfc.INfcTag sTagService;
    static android.nfc.INfcCardEmulation sCardEmulationService;
    static java.util.HashMap sNfcAdapters;
    static android.nfc.NfcAdapter sNullContextNfcAdapter;
    final android.nfc.NfcActivityManager mNfcActivityManager;
    final android.content.Context mContext;
    final java.util.HashMap mNfcUnlockHandlers;
    final java.lang.Object mLock;
    android.app.OnActivityPausedListener mForegroundDispatchListener;

    private static boolean hasNfcFeature()
    {
        android.content.pm.IPackageManager r0;
        android.os.RemoteException r1, $r2;
        boolean $z0;

        r0 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        if r0 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "Cannot get package manager, assuming no NFC feature");

        return 0;

     label1:
        $z0 = interfaceinvoke r0.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.nfc");

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Package manager query failed, assuming no NFC feature", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static synchronized android.nfc.NfcAdapter getNfcAdapter(android.content.Context)
    {
        android.content.Context r0;
        boolean $z0, $z1;
        java.util.HashMap $r2, $r5;
        java.lang.Object $r3;
        android.nfc.NfcAdapter $r4, $r7, $r8, $r9, r23;
        android.nfc.INfcAdapter $r10, $r11, $r12, $r15;
        android.nfc.INfcTag $r13;
        android.nfc.INfcCardEmulation $r14;
        java.lang.UnsupportedOperationException $r16, $r17, $r20, $r21;
        android.os.RemoteException $r18, $r19;

        r0 := @parameter0: android.content.Context;

        $z0 = <android.nfc.NfcAdapter: boolean sIsInitialized>;

        if $z0 != 0 goto label09;

        $z1 = staticinvoke <android.nfc.NfcAdapter: boolean hasNfcFeature()>();

        if $z1 != 0 goto label01;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NFC", "this device does not have NFC support");

        $r17 = new java.lang.UnsupportedOperationException;

        specialinvoke $r17.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r17;

     label01:
        $r10 = staticinvoke <android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService> = $r10;

        $r11 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        if $r11 != null goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC service");

        $r16 = new java.lang.UnsupportedOperationException;

        specialinvoke $r16.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r16;

     label02:
        $r12 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r13 = interfaceinvoke $r12.<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService> = $r13;

     label03:
        goto label05;

     label04:
        $r19 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC Tag service");

        $r21 = new java.lang.UnsupportedOperationException;

        specialinvoke $r21.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r21;

     label05:
        $r15 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r14 = interfaceinvoke $r15.<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService> = $r14;

     label06:
        goto label08;

     label07:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve card emulation service");

        $r20 = new java.lang.UnsupportedOperationException;

        specialinvoke $r20.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r20;

     label08:
        <android.nfc.NfcAdapter: boolean sIsInitialized> = 1;

     label09:
        if r0 != null goto label11;

        $r7 = <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter>;

        if $r7 != null goto label10;

        $r9 = new android.nfc.NfcAdapter;

        specialinvoke $r9.<android.nfc.NfcAdapter: void <init>(android.content.Context)>(null);

        <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter> = $r9;

     label10:
        $r8 = <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter>;

        return $r8;

     label11:
        $r2 = <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r23 = (android.nfc.NfcAdapter) $r3;

        if r23 != null goto label12;

        $r4 = new android.nfc.NfcAdapter;

        specialinvoke $r4.<android.nfc.NfcAdapter: void <init>(android.content.Context)>(r0);

        r23 = $r4;

        $r5 = <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r23);

     label12:
        return r23;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label05 to label06 with label07;
    }

    private static android.nfc.INfcAdapter getServiceInterface()
    {
        android.os.IBinder r0;
        android.nfc.INfcAdapter $r1;

        r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("nfc");

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter asInterface(android.os.IBinder)>(r0);

        return $r1;
    }

    public static android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)
    {
        android.content.Context r0, r6;
        android.nfc.NfcManager r1;
        java.lang.Object $r2;
        android.nfc.NfcAdapter $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: android.content.Context;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context cannot be null");

        throw $r5;

     label1:
        r6 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        if r6 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context not associated with any application (using a mock context?)");

        throw $r4;

     label2:
        $r2 = virtualinvoke r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("nfc");

        r1 = (android.nfc.NfcManager) $r2;

        if r1 != null goto label3;

        return null;

     label3:
        $r3 = virtualinvoke r1.<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>();

        return $r3;
    }

    public static android.nfc.NfcAdapter getDefaultAdapter()
    {
        java.lang.Exception $r0;
        android.nfc.NfcAdapter $r1;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "WARNING: NfcAdapter.getDefaultAdapter() is deprecated, use NfcAdapter.getDefaultAdapter(Context) instead", $r0);

        $r1 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>(null);

        return $r1;
    }

    void <init>(android.content.Context)
    {
        android.nfc.NfcAdapter r0;
        android.content.Context r1;
        android.nfc.NfcAdapter$1 $r2;
        android.nfc.NfcActivityManager $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.nfc.NfcAdapter$1;

        specialinvoke $r2.<android.nfc.NfcAdapter$1: void <init>(android.nfc.NfcAdapter)>(r0);

        r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener> = $r2;

        r0.<android.nfc.NfcAdapter: android.content.Context mContext> = r1;

        $r3 = new android.nfc.NfcActivityManager;

        specialinvoke $r3.<android.nfc.NfcActivityManager: void <init>(android.nfc.NfcAdapter)>(r0);

        r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.nfc.NfcAdapter: java.lang.Object mLock> = $r5;

        return;
    }

    public android.content.Context getContext()
    {
        android.nfc.NfcAdapter r0;
        android.content.Context $r1;

        r0 := @this: android.nfc.NfcAdapter;

        $r1 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        return $r1;
    }

    public android.nfc.INfcAdapter getService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcAdapter $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        return $r1;
    }

    public android.nfc.INfcTag getTagService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcTag $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService>;

        return $r1;
    }

    public android.nfc.INfcCardEmulation getCardEmulationService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcCardEmulation $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService>;

        return $r1;
    }

    public void attemptDeadServiceRecovery(java.lang.Exception)
    {
        android.nfc.NfcAdapter r0;
        java.lang.Exception r1;
        android.nfc.INfcAdapter r2;
        android.nfc.INfcTag $r4;
        android.nfc.INfcCardEmulation $r5;
        android.os.RemoteException $r6, $r7;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: java.lang.Exception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead - attempting to recover", r1);

        r2 = staticinvoke <android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()>();

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC service during service recovery");

        return;

     label1:
        <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService> = r2;

     label2:
        $r4 = interfaceinvoke r2.<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService> = $r4;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC tag service during service recovery");

        return;

     label5:
        $r5 = interfaceinvoke r2.<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService> = $r5;

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC card emulation service during service recovery");

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public boolean isEnabled()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $i0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: int getState()>();

        if $i0 != 3 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public int getAdapterState()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        int $i0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $i0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: int getState()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enable()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        boolean $z0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean enable()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disable()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        boolean $z0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disable(boolean)>(1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disable(boolean)
    {
        android.nfc.NfcAdapter r0;
        boolean z0, $z1;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

        z0 := @parameter0: boolean;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $z1 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disable(boolean)>(z0);

     label2:
        return $z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void pausePolling(int)
    {
        android.nfc.NfcAdapter r0;
        int i0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

        i0 := @parameter0: int;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void pausePolling(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void resumePolling()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void resumePolling()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBeamPushUris(android.net.Uri[], android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.net.Uri[] r1, r3;
        android.app.Activity r2;
        int i0, i1;
        android.net.Uri r4;
        java.lang.String r5;
        android.nfc.NfcActivityManager $r6;
        java.lang.IllegalArgumentException $r7;
        boolean $z0, $z1;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.net.Uri[];

        r2 := @parameter1: android.app.Activity;

        if r2 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label1:
        if r1 == null goto label6;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r4 = r3[i1];

        if r4 != null goto label3;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Uri not allowed to be null");

        throw $r8;

     label3:
        r5 = virtualinvoke r4.<android.net.Uri: java.lang.String getScheme()>();

        if r5 == null goto label4;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("content");

        if $z1 != 0 goto label5;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI needs to have either scheme file or scheme content");

        throw $r7;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>(r2, r1);

        return;
    }

    public void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback, android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateBeamUrisCallback r1;
        android.app.Activity r2;
        android.nfc.NfcActivityManager $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateBeamUrisCallback;

        r2 := @parameter1: android.app.Activity;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r4;

     label1:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>(r2, r1);

        return;
    }

    public transient void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NdefMessage r1;
        android.app.Activity r2, r5;
        android.app.Activity[] r3, r4;
        int i0, i1, i2;
        android.nfc.NfcActivityManager $r6, $r7;
        java.lang.NullPointerException $r8, $r9;
        java.lang.IllegalStateException $r10, r11;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NdefMessage;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.app.Activity[];

        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label2:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r2, r1, 0);

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        r5 = r4[i2];

        if r5 != null goto label4;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw $r8;

     label4:
        $r7 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r7.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r5, r1, 0);

        i2 = i2 + 1;

        goto label3;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r11 = $r10;

        if i0 >= 16 goto label7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", r11);

        goto label8;

     label7:
        throw r11;

     label8:
        return;

        catch java.lang.IllegalStateException from label1 to label5 with label6;
    }

    public void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, int)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NdefMessage r1;
        android.app.Activity r2;
        int i0;
        android.nfc.NfcActivityManager $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NdefMessage;

        r2 := @parameter1: android.app.Activity;

        i0 := @parameter2: int;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r4;

     label1:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r2, r1, i0);

        return;
    }

    public transient void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateNdefMessageCallback r1;
        android.app.Activity r2, r5;
        android.app.Activity[] r3, r4;
        int i0, i1, i2;
        android.nfc.NfcActivityManager $r6, $r7;
        java.lang.NullPointerException $r8, $r9;
        java.lang.IllegalStateException $r10, r11;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateNdefMessageCallback;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.app.Activity[];

        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label2:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r2, r1, 0);

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        r5 = r4[i2];

        if r5 != null goto label4;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw $r8;

     label4:
        $r7 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r7.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r5, r1, 0);

        i2 = i2 + 1;

        goto label3;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r11 = $r10;

        if i0 >= 16 goto label7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", r11);

        goto label8;

     label7:
        throw r11;

     label8:
        return;

        catch java.lang.IllegalStateException from label1 to label5 with label6;
    }

    public void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, int)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateNdefMessageCallback r1;
        android.app.Activity r2;
        int i0;
        android.nfc.NfcActivityManager $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateNdefMessageCallback;

        r2 := @parameter1: android.app.Activity;

        i0 := @parameter2: int;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r4;

     label1:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r2, r1, i0);

        return;
    }

    public transient void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$OnNdefPushCompleteCallback r1;
        android.app.Activity r2, r5;
        android.app.Activity[] r3, r4;
        int i0, i1, i2;
        android.nfc.NfcActivityManager $r6, $r7;
        java.lang.NullPointerException $r8, $r9;
        java.lang.IllegalStateException $r10, r11;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$OnNdefPushCompleteCallback;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.app.Activity[];

        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label2:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r2, r1);

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        r5 = r4[i2];

        if r5 != null goto label4;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw $r8;

     label4:
        $r7 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r7.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r5, r1);

        i2 = i2 + 1;

        goto label3;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r11 = $r10;

        if i0 >= 16 goto label7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", r11);

        goto label8;

     label7:
        throw r11;

     label8:
        return;

        catch java.lang.IllegalStateException from label1 to label5 with label6;
    }

    public void enableForegroundDispatch(android.app.Activity, android.app.PendingIntent, android.content.IntentFilter[], java.lang.String[][])
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.app.PendingIntent r2;
        android.content.IntentFilter[] r3;
        java.lang.String[][] r4;
        android.nfc.TechListParcel r5, $r10;
        java.lang.NullPointerException $r6;
        boolean $z0;
        android.app.ActivityThread $r7;
        android.app.OnActivityPausedListener $r8;
        android.nfc.INfcAdapter $r9;
        int $i0;
        java.lang.IllegalStateException $r11;
        android.os.RemoteException $r12, r13;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: android.content.IntentFilter[];

        r4 := @parameter3: java.lang.String[][];

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();

        throw $r6;

     label2:
        $z0 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z0 != 0 goto label3;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Foreground dispatch can only be enabled when your activity is resumed");

        throw $r11;

     label3:
        r5 = null;

        if r4 == null goto label4;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label4;

        $r10 = new android.nfc.TechListParcel;

        specialinvoke $r10.<android.nfc.TechListParcel: void <init>(java.lang.String[][])>(r4);

        r5 = $r10;

     label4:
        $r7 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r8 = r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener>;

        virtualinvoke $r7.<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>(r1, $r8);

        $r9 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r9.<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>(r2, r3, r5);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r13 = $r12;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r13);

     label7:
        return;

        catch android.os.RemoteException from label3 to label5 with label6;
    }

    public void disableForegroundDispatch(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.app.ActivityThread $r2;
        android.app.OnActivityPausedListener $r3;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $r2 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r3 = r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener>;

        virtualinvoke $r2.<android.app.ActivityThread: void unregisterOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>(r1, $r3);

        virtualinvoke r0.<android.nfc.NfcAdapter: void disableForegroundDispatchInternal(android.app.Activity,boolean)>(r1, 0);

        return;
    }

    void disableForegroundDispatchInternal(android.app.Activity, boolean)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        boolean z0, $z1;
        android.os.RemoteException r2, $r5;
        android.nfc.INfcAdapter $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        z0 := @parameter1: boolean;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r3.<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>(null, null, null);

        if z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must disable foreground dispatching while your activity is still resumed");

        throw $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableReaderMode(android.app.Activity, android.nfc.NfcAdapter$ReaderCallback, int, android.os.Bundle)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NfcAdapter$ReaderCallback r2;
        int i0;
        android.os.Bundle r3;
        android.nfc.NfcActivityManager $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.nfc.NfcAdapter$ReaderCallback;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter$ReaderCallback,int,android.os.Bundle)>(r1, r2, i0, r3);

        return;
    }

    public void disableReaderMode(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NfcActivityManager $r2;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void disableReaderMode(android.app.Activity)>(r1);

        return;
    }

    public boolean invokeBeam(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.os.RemoteException r2, $r5;
        android.nfc.INfcAdapter $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity may not be null.");

        throw $r4;

     label1:
        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r1);

     label2:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r3.<android.nfc.INfcAdapter: void invokeBeam()>();

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "invokeBeam: NFC process has died.");

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r2);

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean invokeBeam(android.nfc.BeamShareData)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.BeamShareData r1;
        android.os.RemoteException r2, $r4;
        android.nfc.INfcAdapter $r3;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.BeamShareData;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "invokeBeamInternal()");

        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r3.<android.nfc.INfcAdapter: void invokeBeamInternal(android.nfc.BeamShareData)>(r1);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "invokeBeam: NFC process has died.");

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableForegroundNdefPush(android.app.Activity, android.nfc.NdefMessage)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NdefMessage r2;
        java.lang.NullPointerException $r3;
        android.nfc.NfcActivityManager $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.nfc.NdefMessage;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r1);

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r1, r2, 0);

        return;
    }

    public void disableForegroundNdefPush(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NfcActivityManager $r2, $r3, $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r1);

        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r1, null, 0);

        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r1, null, 0);

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r1, null);

        return;
    }

    public boolean enableNdefPush()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        boolean $z0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean enableNdefPush()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disableNdefPush()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        boolean $z0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disableNdefPush()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isNdefPushEnabled()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;
        boolean $z0;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean isNdefPushEnabled()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatch(android.nfc.Tag)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.Tag r1;
        android.os.RemoteException r2, $r5;
        android.nfc.INfcAdapter $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.Tag;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag cannot be null");

        throw $r4;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r3.<android.nfc.INfcAdapter: void dispatch(android.nfc.Tag)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setP2pModes(int, int)
    {
        android.nfc.NfcAdapter r0;
        int i0, i1;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void setP2pModes(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addNfcUnlockHandler(android.nfc.NfcAdapter$NfcUnlockHandler, java.lang.String[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$NfcUnlockHandler r1;
        java.lang.String[] r2;
        java.lang.Object r3, $r6, $r16;
        android.nfc.NfcAdapter$2 r4, $r8;
        java.lang.Throwable r5, $r21;
        int $i0;
        java.util.HashMap $r7, $r11, $r14, $r18;
        boolean $z0;
        android.nfc.INfcAdapter $r9, $r13;
        int[] $r10;
        android.nfc.INfcUnlockHandler $r15;
        java.lang.IllegalArgumentException $r19, r23;
        android.os.RemoteException $r20, r22;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$NfcUnlockHandler;

        r2 := @parameter1: java.lang.String[];

        $i0 = lengthof r2;

        if $i0 != 0 goto label01;

        return 0;

     label01:
        $r6 = r0.<android.nfc.NfcAdapter: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label03;

        $r13 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r14 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r15 = (android.nfc.INfcUnlockHandler) $r16;

        interfaceinvoke $r13.<android.nfc.INfcAdapter: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>($r15);

        $r18 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label03:
        $r8 = new android.nfc.NfcAdapter$2;

        specialinvoke $r8.<android.nfc.NfcAdapter$2: void <init>(android.nfc.NfcAdapter,android.nfc.NfcAdapter$NfcUnlockHandler)>(r0, r1);

        r4 = $r8;

        $r9 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r10 = staticinvoke <android.nfc.Tag: int[] getTechCodesFromStrings(java.lang.String[])>(r2);

        interfaceinvoke $r9.<android.nfc.INfcAdapter: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>(r4, $r10);

        $r11 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r21 := @caughtexception;

        r5 = $r21;

        exitmonitor r3;

     label06:
        throw r5;

     label07:
        goto label10;

     label08:
        $r20 := @caughtexception;

        r22 = $r20;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r22);

        return 0;

     label09:
        $r19 := @caughtexception;

        r23 = $r19;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Unable to register LockscreenDispatch", r23);

        return 0;

     label10:
        return 1;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label01 to label07 with label08;
        catch java.lang.IllegalArgumentException from label01 to label07 with label09;
    }

    public boolean removeNfcUnlockHandler(android.nfc.NfcAdapter$NfcUnlockHandler)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$NfcUnlockHandler r1;
        java.lang.Object r2, $r4, $r8;
        java.lang.Throwable r3, $r11;
        java.util.HashMap $r5, $r6;
        boolean $z0;
        android.nfc.INfcAdapter $r7;
        android.nfc.INfcUnlockHandler $r9;
        android.os.RemoteException $r10, r12;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$NfcUnlockHandler;

     label1:
        $r4 = r0.<android.nfc.NfcAdapter: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r7 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r6 = r0.<android.nfc.NfcAdapter: java.util.HashMap mNfcUnlockHandlers>;

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r9 = (android.nfc.INfcUnlockHandler) $r8;

        interfaceinvoke $r7.<android.nfc.INfcAdapter: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>($r9);

     label3:
        exitmonitor r2;

     label4:
        return 1;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r10 := @caughtexception;

        r12 = $r10;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r12);

        return 0;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch android.os.RemoteException from label1 to label4 with label7;
        catch android.os.RemoteException from label5 to label7 with label7;
    }

    public android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r8;
        android.content.Context $r2, $r3;
        android.nfc.INfcAdapter $r4;
        java.lang.String $r5;
        android.nfc.INfcAdapterExtras $r6;
        java.lang.UnsupportedOperationException $r7;

        r0 := @this: android.nfc.NfcAdapter;

        $r2 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if $r2 != null goto label1;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("You need a context on NfcAdapter to use the  NFC extras APIs");

        throw $r7;

     label1:
        $r4 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r3 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = interfaceinvoke $r4.<android.nfc.INfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>($r5);

     label2:
        return $r6;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void enforceResumed(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $z0 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("API cannot be called while activity is paused");

        throw $r2;

     label1:
        return;
    }

    int getSdkVersion()
    {
        android.nfc.NfcAdapter r0;
        android.content.Context $r1, $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0;

        r0 := @this: android.nfc.NfcAdapter;

        $r1 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if $r1 != null goto label1;

        return 9;

     label1:
        $r2 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        return $i0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <android.nfc.NfcAdapter: java.lang.String EXTRA_HANDOVER_TRANSFER_URI> = "android.nfc.extra.HANDOVER_TRANSFER_URI";

        <android.nfc.NfcAdapter: int HANDOVER_TRANSFER_STATUS_FAILURE> = 1;

        <android.nfc.NfcAdapter: int HANDOVER_TRANSFER_STATUS_SUCCESS> = 0;

        <android.nfc.NfcAdapter: java.lang.String EXTRA_HANDOVER_TRANSFER_STATUS> = "android.nfc.extra.HANDOVER_TRANSFER_STATUS";

        <android.nfc.NfcAdapter: java.lang.String ACTION_HANDOVER_TRANSFER_DONE> = "android.nfc.action.HANDOVER_TRANSFER_DONE";

        <android.nfc.NfcAdapter: java.lang.String ACTION_HANDOVER_TRANSFER_STARTED> = "android.nfc.action.HANDOVER_TRANSFER_STARTED";

        <android.nfc.NfcAdapter: int FLAG_NDEF_PUSH_NO_CONFIRM> = 1;

        <android.nfc.NfcAdapter: java.lang.String EXTRA_READER_PRESENCE_CHECK_DELAY> = "presence";

        <android.nfc.NfcAdapter: int FLAG_READER_NO_PLATFORM_SOUNDS> = 256;

        <android.nfc.NfcAdapter: int FLAG_READER_SKIP_NDEF_CHECK> = 128;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_BARCODE> = 16;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_V> = 8;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_F> = 4;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_B> = 2;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_A> = 1;

        <android.nfc.NfcAdapter: int STATE_TURNING_OFF> = 4;

        <android.nfc.NfcAdapter: int STATE_ON> = 3;

        <android.nfc.NfcAdapter: int STATE_TURNING_ON> = 2;

        <android.nfc.NfcAdapter: int STATE_OFF> = 1;

        <android.nfc.NfcAdapter: java.lang.String EXTRA_ADAPTER_STATE> = "android.nfc.extra.ADAPTER_STATE";

        <android.nfc.NfcAdapter: java.lang.String ACTION_ADAPTER_STATE_CHANGED> = "android.nfc.action.ADAPTER_STATE_CHANGED";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_ID> = "android.nfc.extra.ID";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_NDEF_MESSAGES> = "android.nfc.extra.NDEF_MESSAGES";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_TAG> = "android.nfc.extra.TAG";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TAG_LEFT_FIELD> = "android.nfc.action.TAG_LOST";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TAG_DISCOVERED> = "android.nfc.action.TAG_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TECH_DISCOVERED> = "android.nfc.action.TECH_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_NDEF_DISCOVERED> = "android.nfc.action.NDEF_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String TAG> = "NFC";

        <android.nfc.NfcAdapter: boolean sIsInitialized> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters> = $r0;

        return;
    }
}
