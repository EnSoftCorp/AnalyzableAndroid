class android.media.SoundPool$SoundPoolImpl extends java.lang.Object implements android.media.SoundPool$SoundPoolDelegate
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private long mNativeContext;
    private android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler;
    private android.media.SoundPool$OnLoadCompleteListener mOnLoadCompleteListener;
    private android.media.SoundPool mProxy;
    private final java.lang.Object mLock;
    private final android.media.AudioAttributes mAttributes;
    private final com.android.internal.app.IAppOpsService mAppOps;
    private static final int SAMPLE_LOADED;

    public void <init>(android.media.SoundPool, int, android.media.AudioAttributes)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        android.media.SoundPool r1;
        int i0, $i1;
        android.media.AudioAttributes r2;
        android.os.IBinder r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        com.android.internal.app.IAppOpsService $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        r1 := @parameter0: android.media.SoundPool;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.AudioAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        $i1 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: int native_setup(java.lang.Object,int,java.lang.Object)>($r4, i0, r2);

        if $i1 == 0 goto label1;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Native setup failed");

        throw $r7;

     label1:
        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.media.SoundPool$SoundPoolImpl: java.lang.Object mLock> = $r5;

        r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool mProxy> = r1;

        r0.<android.media.SoundPool$SoundPoolImpl: android.media.AudioAttributes mAttributes> = r2;

        r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appops");

        $r6 = staticinvoke <com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>(r3);

        r0.<android.media.SoundPool$SoundPoolImpl: com.android.internal.app.IAppOpsService mAppOps> = $r6;

        return;
    }

    public int load(java.lang.String, int)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        java.lang.String r1, $r9;
        int i0, i1, $i3;
        java.io.File r2, $r4;
        android.os.ParcelFileDescriptor r3;
        boolean $z0;
        java.io.FileDescriptor $r5;
        long $l2;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z0 == 0 goto label1;

        $i3 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: int _load(java.lang.String,int)>(r1, i0);

        return $i3;

     label1:
        i1 = 0;

     label2:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = $r4;

        r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r2, 268435456);

        if r3 == null goto label3;

        $r5 = virtualinvoke r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l2 = virtualinvoke r2.<java.io.File: long length()>();

        i1 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: int _load(java.io.FileDescriptor,long,long,int)>($r5, 0L, $l2, i0);

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error loading ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SoundPool", $r9);

     label5:
        return i1;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public int load(android.content.Context, int, int)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        android.content.Context r1;
        int i0, i1, i2;
        android.content.res.AssetFileDescriptor r2;
        android.content.res.Resources $r4;
        java.io.FileDescriptor $r5;
        long $l3, $l4;
        java.io.IOException $r6;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(i0);

        i2 = 0;

        if r2 == null goto label4;

        $r5 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l3 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l4 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: long getLength()>();

        i2 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: int _load(java.io.FileDescriptor,long,long,int)>($r5, $l3, $l4, i1);

     label1:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return i2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int load(android.content.res.AssetFileDescriptor, int)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        android.content.res.AssetFileDescriptor r1;
        int i0, $i4;
        long l1, $l3;
        byte $b2;
        java.io.FileDescriptor $r2;
        android.util.AndroidRuntimeException $r3;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        r1 := @parameter0: android.content.res.AssetFileDescriptor;

        i0 := @parameter1: int;

        if r1 == null goto label2;

        l1 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getLength()>();

        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label1;

        $r3 = new android.util.AndroidRuntimeException;

        specialinvoke $r3.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("no length for fd");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l3 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $i4 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: int _load(java.io.FileDescriptor,long,long,int)>($r2, $l3, l1, i0);

        return $i4;

     label2:
        return 0;
    }

    public int load(java.io.FileDescriptor, long, long, int)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        java.io.FileDescriptor r1;
        long l0, l1;
        int i2, $i3;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        r1 := @parameter0: java.io.FileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        $i3 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: int _load(java.io.FileDescriptor,long,long,int)>(r1, l0, l1, i2);

        return $i3;
    }

    private final native int _load(java.lang.String, int);

    private final native int _load(java.io.FileDescriptor, long, long, int);

    public final native boolean unload(int);

    public final int play(int, float, float, int, int, float)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        int i0, i1, i2, $i3;
        float f0, f1, f2;
        boolean $z0;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        f2 := @parameter5: float;

        $z0 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        f1 = 0.0F;

        f0 = 0.0F;

     label1:
        $i3 = virtualinvoke r0.<android.media.SoundPool$SoundPoolImpl: int _play(int,float,float,int,int,float)>(i0, f0, f1, i1, i2, f2);

        return $i3;
    }

    public final native int _play(int, float, float, int, int, float);

    private boolean isRestricted()
    {
        android.media.SoundPool$SoundPoolImpl r0;
        int i0, $i1, $i2;
        android.media.AudioAttributes $r1;
        com.android.internal.app.IAppOpsService $r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

     label1:
        $r2 = r0.<android.media.SoundPool$SoundPoolImpl: com.android.internal.app.IAppOpsService mAppOps>;

        $r1 = r0.<android.media.SoundPool$SoundPoolImpl: android.media.AudioAttributes mAttributes>;

        $i1 = virtualinvoke $r1.<android.media.AudioAttributes: int getUsage()>();

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        i0 = interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>(28, $i1, $i2, $r3);

        if i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public final native void pause(int);

    public final native void resume(int);

    public final native void autoPause();

    public final native void autoResume();

    public final native void stop(int);

    public final void setVolume(int, float, float)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        int i0;
        float f0, f1;
        boolean $z0;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.media.SoundPool$SoundPoolImpl: void _setVolume(int,float,float)>(i0, f0, f1);

        return;
    }

    private final native void _setVolume(int, float, float);

    public void setVolume(int, float)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        int i0;
        float f0;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.media.SoundPool$SoundPoolImpl: void setVolume(int,float,float)>(i0, f0, f0);

        return;
    }

    public final native void setPriority(int, int);

    public final native void setLoop(int, int);

    public final native void setRate(int, float);

    public void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        android.media.SoundPool$OnLoadCompleteListener r1;
        java.lang.Object r2, $r5;
        android.os.Looper r3, $r6, $r7, r13;
        java.lang.Throwable r4, $r12;
        android.media.SoundPool$SoundPoolImpl$EventHandler $r8, $r10;
        android.media.SoundPool $r9, $r11;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        r1 := @parameter0: android.media.SoundPool$OnLoadCompleteListener;

        $r5 = r0.<android.media.SoundPool$SoundPoolImpl: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        if r1 == null goto label05;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r3 = $r6;

        if $r6 == null goto label02;

        $r10 = new android.media.SoundPool$SoundPoolImpl$EventHandler;

        $r11 = r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool mProxy>;

        specialinvoke $r10.<android.media.SoundPool$SoundPoolImpl$EventHandler: void <init>(android.media.SoundPool$SoundPoolImpl,android.media.SoundPool,android.os.Looper)>(r0, $r11, r3);

        r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler> = $r10;

        goto label04;

     label02:
        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r13 = $r7;

        if $r7 == null goto label03;

        $r8 = new android.media.SoundPool$SoundPoolImpl$EventHandler;

        $r9 = r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool mProxy>;

        specialinvoke $r8.<android.media.SoundPool$SoundPoolImpl$EventHandler: void <init>(android.media.SoundPool$SoundPoolImpl,android.media.SoundPool,android.os.Looper)>(r0, $r9, r13);

        r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler> = $r8;

        goto label04;

     label03:
        r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler> = null;

     label04:
        goto label06;

     label05:
        r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler> = null;

     label06:
        r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$OnLoadCompleteListener mOnLoadCompleteListener> = r1;

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        java.lang.Object r0, r1, $r5;
        int i0, i1, i2;
        android.media.SoundPool$SoundPoolImpl r2;
        android.os.Message r3;
        java.lang.ref.WeakReference $r4;
        android.media.SoundPool$SoundPoolImpl$EventHandler $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $r4 = (java.lang.ref.WeakReference) r0;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.media.SoundPool$SoundPoolImpl) $r5;

        if r2 != null goto label1;

        return;

     label1:
        $r6 = r2.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler>;

        if $r6 == null goto label2;

        $r7 = r2.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler>;

        r3 = virtualinvoke $r7.<android.media.SoundPool$SoundPoolImpl$EventHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        $r8 = r2.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$SoundPoolImpl$EventHandler mEventHandler>;

        virtualinvoke $r8.<android.media.SoundPool$SoundPoolImpl$EventHandler: boolean sendMessage(android.os.Message)>(r3);

     label2:
        return;
    }

    public final native void release();

    private final native int native_setup(java.lang.Object, int, java.lang.Object);

    protected void finalize()
    {
        android.media.SoundPool$SoundPoolImpl r0;

        r0 := @this: android.media.SoundPool$SoundPoolImpl;

        virtualinvoke r0.<android.media.SoundPool$SoundPoolImpl: void release()>();

        return;
    }

    static java.lang.Object access$100(android.media.SoundPool$SoundPoolImpl)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.SoundPool$SoundPoolImpl;

        $r1 = r0.<android.media.SoundPool$SoundPoolImpl: java.lang.Object mLock>;

        return $r1;
    }

    static android.media.SoundPool$OnLoadCompleteListener access$200(android.media.SoundPool$SoundPoolImpl)
    {
        android.media.SoundPool$SoundPoolImpl r0;
        android.media.SoundPool$OnLoadCompleteListener $r1;

        r0 := @parameter0: android.media.SoundPool$SoundPoolImpl;

        $r1 = r0.<android.media.SoundPool$SoundPoolImpl: android.media.SoundPool$OnLoadCompleteListener mOnLoadCompleteListener>;

        return $r1;
    }

    static void <clinit>()
    {
        <android.media.SoundPool$SoundPoolImpl: int SAMPLE_LOADED> = 1;

        <android.media.SoundPool$SoundPoolImpl: boolean DEBUG> = 0;

        <android.media.SoundPool$SoundPoolImpl: java.lang.String TAG> = "SoundPool";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("soundpool");

        return;
    }
}
