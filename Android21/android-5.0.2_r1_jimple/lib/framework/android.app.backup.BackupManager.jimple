public class android.app.backup.BackupManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.content.Context mContext;
    private static android.app.backup.IBackupManager sService;

    private static void checkServiceBinder()
    {
        android.app.backup.IBackupManager $r0, $r2;
        android.os.IBinder $r1;

        $r0 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r2 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r1);

        <android.app.backup.BackupManager: android.app.backup.IBackupManager sService> = $r2;

     label1:
        return;
    }

    public void <init>(android.content.Context)
    {
        android.app.backup.BackupManager r0;
        android.content.Context r1;

        r0 := @this: android.app.backup.BackupManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.backup.BackupManager: android.content.Context mContext> = r1;

        return;
    }

    public void dataChanged()
    {
        android.app.backup.BackupManager r0;
        android.app.backup.IBackupManager $r2, $r4;
        android.content.Context $r3;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.backup.BackupManager;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r4 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        $r3 = r0.<android.app.backup.BackupManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r4.<android.app.backup.IBackupManager: void dataChanged(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BackupManager", "dataChanged() couldn\'t connect");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void dataChanged(java.lang.String)
    {
        java.lang.String r0;
        android.app.backup.IBackupManager $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void dataChanged(java.lang.String)>(r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "dataChanged(pkg) couldn\'t connect");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int requestRestore(android.app.backup.RestoreObserver)
    {
        android.app.backup.BackupManager r0;
        android.app.backup.RestoreObserver r1;
        int i0;
        android.app.backup.RestoreSession r2, $r9;
        android.app.backup.IRestoreSession r3;
        java.lang.Throwable r4, $r14;
        android.app.backup.IBackupManager $r5, $r7;
        android.content.Context $r6, $r10, $r11;
        java.lang.String $r8, $r12;
        android.os.RemoteException $r13;

        r0 := @this: android.app.backup.BackupManager;

        r1 := @parameter0: android.app.backup.RestoreObserver;

        i0 = -1;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r5 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r5 == null goto label8;

        r2 = null;

     label1:
        $r7 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        $r6 = r0.<android.app.backup.BackupManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        r3 = interfaceinvoke $r7.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>($r8, null);

        if r3 == null goto label2;

        $r9 = new android.app.backup.RestoreSession;

        $r10 = r0.<android.app.backup.BackupManager: android.content.Context mContext>;

        specialinvoke $r9.<android.app.backup.RestoreSession: void <init>(android.content.Context,android.app.backup.IRestoreSession)>($r10, r3);

        r2 = $r9;

        $r11 = r0.<android.app.backup.BackupManager: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getPackageName()>();

        i0 = virtualinvoke r2.<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>($r12, r1);

     label2:
        if r2 == null goto label8;

        virtualinvoke r2.<android.app.backup.RestoreSession: void endRestoreSession()>();

        goto label8;

     label3:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "restoreSelf() unable to contact service");

     label4:
        if r2 == null goto label8;

        virtualinvoke r2.<android.app.backup.RestoreSession: void endRestoreSession()>();

        goto label8;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

     label6:
        if r2 == null goto label7;

        virtualinvoke r2.<android.app.backup.RestoreSession: void endRestoreSession()>();

     label7:
        throw r4;

     label8:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.app.backup.RestoreSession beginRestoreSession()
    {
        android.app.backup.BackupManager r0;
        android.app.backup.RestoreSession r1, $r5;
        android.app.backup.IRestoreSession r2;
        android.app.backup.IBackupManager $r3, $r4;
        android.content.Context $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.app.backup.BackupManager;

        r1 = null;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r3 == null goto label4;

     label1:
        $r4 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        r2 = interfaceinvoke $r4.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>(null, null);

        if r2 == null goto label2;

        $r5 = new android.app.backup.RestoreSession;

        $r6 = r0.<android.app.backup.BackupManager: android.content.Context mContext>;

        specialinvoke $r5.<android.app.backup.RestoreSession: void <init>(android.content.Context,android.app.backup.IRestoreSession)>($r6, r2);

        r1 = $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "beginRestoreSession() couldn\'t connect");

     label4:
        return r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBackupEnabled(boolean)
    {
        android.app.backup.BackupManager r0;
        boolean z0;
        android.app.backup.IBackupManager $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.backup.BackupManager;

        z0 := @parameter0: boolean;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void setBackupEnabled(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "setBackupEnabled() couldn\'t connect");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isBackupEnabled()
    {
        android.app.backup.BackupManager r0;
        android.app.backup.IBackupManager $r2, $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.app.backup.BackupManager;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        $z0 = interfaceinvoke $r3.<android.app.backup.IBackupManager: boolean isBackupEnabled()>();

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "isBackupEnabled() couldn\'t connect");

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAutoRestore(boolean)
    {
        android.app.backup.BackupManager r0;
        boolean z0;
        android.app.backup.IBackupManager $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.backup.BackupManager;

        z0 := @parameter0: boolean;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void setAutoRestore(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "setAutoRestore() couldn\'t connect");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getCurrentTransport()
    {
        android.app.backup.BackupManager r0;
        android.app.backup.IBackupManager $r2, $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.backup.BackupManager;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        $r4 = interfaceinvoke $r3.<android.app.backup.IBackupManager: java.lang.String getCurrentTransport()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "getCurrentTransport() couldn\'t connect");

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] listAllTransports()
    {
        android.app.backup.BackupManager r0;
        android.app.backup.IBackupManager $r2, $r3;
        java.lang.String[] $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.backup.BackupManager;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        $r4 = interfaceinvoke $r3.<android.app.backup.IBackupManager: java.lang.String[] listAllTransports()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "listAllTransports() couldn\'t connect");

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String selectBackupTransport(java.lang.String)
    {
        android.app.backup.BackupManager r0;
        java.lang.String r1, $r5;
        android.app.backup.IBackupManager $r3, $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.app.backup.BackupManager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r3 == null goto label4;

     label1:
        $r4 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        $r5 = interfaceinvoke $r4.<android.app.backup.IBackupManager: java.lang.String selectBackupTransport(java.lang.String)>(r1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "selectBackupTransport() couldn\'t connect");

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void backupNow()
    {
        android.app.backup.BackupManager r0;
        android.app.backup.IBackupManager $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.backup.BackupManager;

        staticinvoke <android.app.backup.BackupManager: void checkServiceBinder()>();

        $r2 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        if $r2 == null goto label4;

     label1:
        $r3 = <android.app.backup.BackupManager: android.app.backup.IBackupManager sService>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void backupNow()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BackupManager", "backupNow() couldn\'t connect");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.app.backup.BackupManager: java.lang.String TAG> = "BackupManager";

        return;
    }
}
