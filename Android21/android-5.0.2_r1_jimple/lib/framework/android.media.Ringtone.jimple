public class android.media.Ringtone extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean LOGD;
    private static final java.lang.String[] MEDIA_COLUMNS;
    private final android.content.Context mContext;
    private final android.media.AudioManager mAudioManager;
    private final boolean mAllowRemote;
    private final android.media.IRingtonePlayer mRemotePlayer;
    private final android.os.Binder mRemoteToken;
    private android.media.MediaPlayer mLocalPlayer;
    private android.net.Uri mUri;
    private java.lang.String mTitle;
    private android.media.AudioAttributes mAudioAttributes;

    public void <init>(android.content.Context, boolean)
    {
        android.media.Ringtone r0;
        android.content.Context r1, $r6;
        boolean z0;
        android.media.AudioAttributes$Builder $r2, $r3, $r4;
        android.media.AudioAttributes $r5;
        java.lang.Object $r7;
        android.media.AudioManager $r8, $r10;
        android.os.Binder $r9;
        android.media.IRingtonePlayer $r11;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.media.AudioAttributes$Builder;

        specialinvoke $r2.<android.media.AudioAttributes$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(6);

        $r4 = virtualinvoke $r3.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes> = $r5;

        r0.<android.media.Ringtone: android.content.Context mContext> = r1;

        $r6 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r8 = (android.media.AudioManager) $r7;

        r0.<android.media.Ringtone: android.media.AudioManager mAudioManager> = $r8;

        r0.<android.media.Ringtone: boolean mAllowRemote> = z0;

        if z0 == 0 goto label1;

        $r10 = r0.<android.media.Ringtone: android.media.AudioManager mAudioManager>;

        $r11 = virtualinvoke $r10.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

        goto label2;

     label1:
        $r11 = null;

     label2:
        r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer> = $r11;

        if z0 == 0 goto label3;

        $r9 = new android.os.Binder;

        specialinvoke $r9.<android.os.Binder: void <init>()>();

        goto label4;

     label3:
        $r9 = null;

     label4:
        r0.<android.media.Ringtone: android.os.Binder mRemoteToken> = $r9;

        return;
    }

    public void setStreamType(int)
    {
        android.media.Ringtone r0;
        int i0;
        android.media.AudioAttributes$Builder $r1, $r2;
        android.media.AudioAttributes $r3;

        r0 := @this: android.media.Ringtone;

        i0 := @parameter0: int;

        $r1 = new android.media.AudioAttributes$Builder;

        specialinvoke $r1.<android.media.AudioAttributes$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setInternalLegacyStreamType(int)>(i0);

        $r3 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        virtualinvoke r0.<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>($r3);

        return;
    }

    public int getStreamType()
    {
        android.media.Ringtone r0;
        android.media.AudioAttributes $r1;
        int $i0;

        r0 := @this: android.media.Ringtone;

        $r1 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        $i0 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r1);

        return $i0;
    }

    public void setAudioAttributes(android.media.AudioAttributes) throws java.lang.IllegalArgumentException
    {
        android.media.Ringtone r0;
        android.media.AudioAttributes r1;
        android.net.Uri $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.media.AudioAttributes;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid null AudioAttributes for Ringtone");

        throw $r3;

     label1:
        r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes> = r1;

        $r2 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        virtualinvoke r0.<android.media.Ringtone: void setUri(android.net.Uri)>($r2);

        return;
    }

    public android.media.AudioAttributes getAudioAttributes()
    {
        android.media.Ringtone r0;
        android.media.AudioAttributes $r1;

        r0 := @this: android.media.Ringtone;

        $r1 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        return $r1;
    }

    public java.lang.String getTitle(android.content.Context)
    {
        android.media.Ringtone r0;
        android.content.Context r1;
        java.lang.String $r2, $r4, $r5;
        android.net.Uri $r3;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.Ringtone: java.lang.String mTitle>;

        if $r2 == null goto label1;

        $r5 = r0.<android.media.Ringtone: java.lang.String mTitle>;

        return $r5;

     label1:
        $r3 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        $r4 = staticinvoke <android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)>(r1, $r3, 1);

        r0.<android.media.Ringtone: java.lang.String mTitle> = $r4;

        return $r4;
    }

    private static java.lang.String getTitle(android.content.Context, android.net.Uri, boolean)
    {
        android.content.Context r0;
        android.net.Uri r1, r6;
        boolean z0, $z1, $z2;
        android.database.Cursor r2;
        android.content.ContentResolver r3;
        java.lang.String r4, r5, r7, $r9, $r10, r16;
        java.lang.Throwable r8, $r13;
        int $i0, $i1;
        java.lang.String[] $r11;
        java.lang.Object[] $r12;
        java.lang.SecurityException $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        r2 = null;

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = null;

        if r1 == null goto label12;

        r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r9 = "settings";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label01;

        if z0 == 0 goto label12;

        $i1 = staticinvoke <android.media.RingtoneManager: int getDefaultType(android.net.Uri)>(r1);

        r6 = staticinvoke <android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>(r0, $i1);

        r7 = staticinvoke <android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)>(r0, r6, 0);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r7;

        r4 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17040545, $r12);

        goto label12;

     label01:
        $r10 = "media";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label02;

        $r11 = <android.media.Ringtone: java.lang.String[] MEDIA_COLUMNS>;

        r2 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r11, null, null, null);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

     label04:
        if r2 == null goto label07;

        $i0 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        if $i0 != 1 goto label07;

        interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        r16 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(2);

     label05:
        if r2 == null goto label06;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label06:
        return r16;

     label07:
        r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

     label08:
        if r2 == null goto label12;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label12;

     label09:
        $r13 := @caughtexception;

        r8 = $r13;

     label10:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label11:
        throw r8;

     label12:
        if r4 != null goto label13;

        r4 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(17040548);

        if r4 != null goto label13;

        r4 = "";

     label13:
        return r4;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void setUri(android.net.Uri)
    {
        android.media.Ringtone r0;
        android.net.Uri r1, $r3, $r5;
        java.lang.SecurityException r2, $r12;
        android.media.MediaPlayer $r4, $r7, $r9, $r10, $r11;
        android.content.Context $r6;
        android.media.AudioAttributes $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r19, $r20;
        java.lang.String $r16, $r21;
        java.io.IOException $r17, r22;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        r0.<android.media.Ringtone: android.net.Uri mUri> = r1;

        $r3 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = new android.media.MediaPlayer;

        specialinvoke $r4.<android.media.MediaPlayer: void <init>()>();

        r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer> = $r4;

     label2:
        $r7 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r6 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r5 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        virtualinvoke $r7.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>($r6, $r5);

        $r9 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r8 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        virtualinvoke $r9.<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>($r8);

        $r10 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r10.<android.media.MediaPlayer: void prepare()>();

     label3:
        goto label7;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 != 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote playback not allowed: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r16);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        r22 = $r17;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        $z1 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z1 != 0 goto label7;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote playback not allowed: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r21);

     label7:
        $r11 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r11 == null goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Ringtone", "Successfully created local player");

        goto label9;

     label8:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Ringtone", "Problem opening; delegating to remote player");

     label9:
        return;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label6;
    }

    public android.net.Uri getUri()
    {
        android.media.Ringtone r0;
        android.net.Uri $r1;

        r0 := @this: android.media.Ringtone;

        $r1 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        return $r1;
    }

    public void play()
    {
        android.media.Ringtone r0;
        android.net.Uri r1, $r5;
        android.os.RemoteException r2, $r12;
        android.media.MediaPlayer $r3, $r11;
        boolean $z0, $z1, $z2;
        android.media.IRingtonePlayer $r4, $r8;
        android.media.AudioAttributes $r6, $r9;
        android.os.Binder $r7;
        android.media.AudioManager $r10;
        int $i1, $i2;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r16;

        r0 := @this: android.media.Ringtone;

        $r3 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r3 == null goto label1;

        $r10 = r0.<android.media.Ringtone: android.media.AudioManager mAudioManager>;

        $r9 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        $i1 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r9);

        $i2 = virtualinvoke $r10.<android.media.AudioManager: int getStreamVolume(int)>($i1);

        if $i2 == 0 goto label7;

        $r11 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r11.<android.media.MediaPlayer: void start()>();

        goto label7;

     label1:
        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 == 0 goto label6;

        $r4 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        if $r4 == null goto label6;

        $r5 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        r1 = virtualinvoke $r5.<android.net.Uri: android.net.Uri getCanonicalUri()>();

     label2:
        $r8 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        $r7 = r0.<android.media.Ringtone: android.os.Binder mRemoteToken>;

        $r6 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        interfaceinvoke $r8.<android.media.IRingtonePlayer: void play(android.os.IBinder,android.net.Uri,android.media.AudioAttributes)>($r7, r1, $r6);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        $z2 = specialinvoke r0.<android.media.Ringtone: boolean playFallbackRingtone()>();

        if $z2 != 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem playing ringtone: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r16);

     label5:
        goto label7;

     label6:
        $z1 = specialinvoke r0.<android.media.Ringtone: boolean playFallbackRingtone()>();

        if $z1 != 0 goto label7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", "Neither local nor remote playback available");

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void stop()
    {
        android.media.Ringtone r0;
        android.os.RemoteException r1, $r6;
        android.media.MediaPlayer $r2;
        boolean $z0;
        android.media.IRingtonePlayer $r3, $r5;
        android.os.Binder $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.media.Ringtone;

        $r2 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        goto label5;

     label1:
        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        if $r3 == null goto label5;

     label2:
        $r5 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        $r4 = r0.<android.media.Ringtone: android.os.Binder mRemoteToken>;

        interfaceinvoke $r5.<android.media.IRingtonePlayer: void stop(android.os.IBinder)>($r4);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem stopping ringtone: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r10);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void destroyLocalPlayer()
    {
        android.media.Ringtone r0;
        android.media.MediaPlayer $r1, $r2, $r3;

        r0 := @this: android.media.Ringtone;

        $r1 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void reset()>();

        $r3 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

        r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer> = null;

     label1:
        return;
    }

    public boolean isPlaying()
    {
        android.media.Ringtone r0;
        android.os.RemoteException r1, $r7;
        android.media.MediaPlayer $r2, $r6;
        boolean $z0, $z1, $z2;
        android.media.IRingtonePlayer $r3, $r5;
        android.os.Binder $r4;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.media.Ringtone;

        $r2 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r2 == null goto label1;

        $r6 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $z2 = virtualinvoke $r6.<android.media.MediaPlayer: boolean isPlaying()>();

        return $z2;

     label1:
        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 == 0 goto label5;

        $r3 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        if $r3 == null goto label5;

     label2:
        $r5 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        $r4 = r0.<android.media.Ringtone: android.os.Binder mRemoteToken>;

        $z1 = interfaceinvoke $r5.<android.media.IRingtonePlayer: boolean isPlaying(android.os.IBinder)>($r4);

     label3:
        return $z1;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem checking ringtone: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r11);

        return 0;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", "Neither local nor remote playback available");

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private boolean playFallbackRingtone()
    {
        android.media.Ringtone r0;
        int i0, $i1, $i2;
        android.content.res.AssetFileDescriptor r1;
        android.media.AudioAttributes $r2, $r11;
        android.media.AudioManager $r3;
        android.net.Uri $r4, $r16, $r19;
        android.content.Context $r5, $r17;
        android.content.res.Resources $r6;
        android.media.MediaPlayer $r7, $r9, $r10, $r12, $r13, $r15;
        long $l4, $l6, $l7;
        byte $b5;
        java.io.FileDescriptor $r8, $r14;
        java.lang.StringBuilder $r18, $r20, $r22;
        android.content.res.Resources$NotFoundException $r21;
        java.lang.String $r23;
        java.io.IOException $r24;

        r0 := @this: android.media.Ringtone;

        $r3 = r0.<android.media.Ringtone: android.media.AudioManager mAudioManager>;

        $r2 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        $i1 = staticinvoke <android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>($r2);

        $i2 = virtualinvoke $r3.<android.media.AudioManager: int getStreamVolume(int)>($i1);

        if $i2 == 0 goto label10;

        $r4 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        i0 = staticinvoke <android.media.RingtoneManager: int getDefaultType(android.net.Uri)>($r4);

        if i0 == -1 goto label01;

        $r17 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r16 = staticinvoke <android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>($r17, i0);

        if $r16 == null goto label09;

     label01:
        $r5 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(17825797);

        if r1 == null goto label05;

        $r7 = new android.media.MediaPlayer;

        specialinvoke $r7.<android.media.MediaPlayer: void <init>()>();

        r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer> = $r7;

        $l4 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label02;

        $r15 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r14 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke $r15.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>($r14);

        goto label03;

     label02:
        $r9 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r8 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l7 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l6 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        virtualinvoke $r9.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r8, $l7, $l6);

     label03:
        $r10 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r11 = r0.<android.media.Ringtone: android.media.AudioAttributes mAudioAttributes>;

        virtualinvoke $r10.<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>($r11);

        $r13 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r13.<android.media.MediaPlayer: void prepare()>();

        $r12 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r12.<android.media.MediaPlayer: void start()>();

        virtualinvoke r1.<android.content.res.AssetFileDescriptor: void close()>();

     label04:
        return 1;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Ringtone", "Could not load fallback ringtone");

     label06:
        goto label10;

     label07:
        $r24 := @caughtexception;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Ringtone", "Failed to open fallback ringtone");

        goto label10;

     label08:
        $r21 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Ringtone", "Fallback ringtone does not exist");

        goto label10;

     label09:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not playing fallback for ");

        $r19 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r23);

     label10:
        return 0;

        catch java.io.IOException from label01 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch android.content.res.Resources$NotFoundException from label01 to label04 with label08;
        catch android.content.res.Resources$NotFoundException from label05 to label06 with label08;
    }

    void setTitle(java.lang.String)
    {
        android.media.Ringtone r0;
        java.lang.String r1;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.Ringtone: java.lang.String mTitle> = r1;

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.media.Ringtone: boolean LOGD> = 1;

        <android.media.Ringtone: java.lang.String TAG> = "Ringtone";

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "title";

        <android.media.Ringtone: java.lang.String[] MEDIA_COLUMNS> = $r0;

        return;
    }
}
