class android.media.AudioService$RmtSbmxFullVolDeathHandler extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private android.os.IBinder mICallback;
    final android.media.AudioService this$0;

    void <init>(android.media.AudioService, android.os.IBinder)
    {
        android.media.AudioService$RmtSbmxFullVolDeathHandler r0;
        android.media.AudioService r1;
        android.os.IBinder r2;
        android.os.RemoteException r3, $r4;

        r0 := @this: android.media.AudioService$RmtSbmxFullVolDeathHandler;

        r1 := @parameter0: android.media.AudioService;

        r2 := @parameter1: android.os.IBinder;

        r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.media.AudioService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.os.IBinder mICallback> = r2;

     label1:
        interfaceinvoke r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AudioService", "can\'t link to death", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean isHandlerFor(android.os.IBinder)
    {
        android.media.AudioService$RmtSbmxFullVolDeathHandler r0;
        android.os.IBinder r1, $r2;
        boolean $z0;

        r0 := @this: android.media.AudioService$RmtSbmxFullVolDeathHandler;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.os.IBinder mICallback>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    void forget()
    {
        android.media.AudioService$RmtSbmxFullVolDeathHandler r0;
        java.util.NoSuchElementException r1, $r3;
        android.os.IBinder $r2;

        r0 := @this: android.media.AudioService$RmtSbmxFullVolDeathHandler;

     label1:
        $r2 = r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.os.IBinder mICallback>;

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AudioService", "error unlinking to death", r1);

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void binderDied()
    {
        android.media.AudioService$RmtSbmxFullVolDeathHandler r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        android.os.IBinder $r3, $r6;
        java.lang.String $r5;
        android.media.AudioService $r7;

        r0 := @this: android.media.AudioService$RmtSbmxFullVolDeathHandler;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recorder with remote submix at full volume died ");

        $r3 = r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.os.IBinder mICallback>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioService", $r5);

        $r7 = r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.media.AudioService this$0>;

        $r6 = r0.<android.media.AudioService$RmtSbmxFullVolDeathHandler: android.os.IBinder mICallback>;

        virtualinvoke $r7.<android.media.AudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>(0, $r6);

        return;
    }
}
