public class android.filterpacks.imageproc.FixedRotationFilter extends android.filterfw.core.Filter
{
    private int mRotation;
    private android.filterfw.core.ShaderProgram mProgram;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.FixedRotationFilter: int mRotation> = 0;

        r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram> = null;

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.FixedRotationFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r10;
        android.filterfw.core.FrameFormat r3;
        android.filterfw.core.MutableFrameFormat r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.filterfw.geometry.Point r5, r6, r7, r8, $r12, $r13, $r14, $r15;
        android.filterfw.geometry.Quad r9, $r16, $r19, $r23, $r24;
        android.filterfw.core.ShaderProgram $r11, $r20, $r21, $r22;
        float $f0, $f1;
        android.filterfw.core.FrameManager $r17;

        r0 := @this: android.filterpacks.imageproc.FixedRotationFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        $i2 = r0.<android.filterpacks.imageproc.FixedRotationFilter: int mRotation>;

        if $i2 != 0 goto label1;

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r2);

        return;

     label1:
        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r11 = r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram>;

        if $r11 != null goto label2;

        $r22 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram> = $r22;

     label2:
        r4 = virtualinvoke r3.<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>();

        i0 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        i1 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $r13 = new android.filterfw.geometry.Point;

        specialinvoke $r13.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 0.0F);

        r5 = $r13;

        $r12 = new android.filterfw.geometry.Point;

        specialinvoke $r12.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 0.0F);

        r6 = $r12;

        $r15 = new android.filterfw.geometry.Point;

        specialinvoke $r15.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 1.0F);

        r7 = $r15;

        $r14 = new android.filterfw.geometry.Point;

        specialinvoke $r14.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 1.0F);

        r8 = $r14;

        $i3 = r0.<android.filterpacks.imageproc.FixedRotationFilter: int mRotation>;

        $f0 = (float) $i3;

        $f1 = $f0 / 90.0F;

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i5 = $i4 % 4;

        tableswitch($i5)
        {
            case 0: goto label6;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r16 = new android.filterfw.geometry.Quad;

        specialinvoke $r16.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>(r7, r5, r8, r6);

        r9 = $r16;

        virtualinvoke r4.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>(i1, i0);

        goto label7;

     label4:
        $r23 = new android.filterfw.geometry.Quad;

        specialinvoke $r23.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>(r8, r7, r6, r5);

        r9 = $r23;

        goto label7;

     label5:
        $r19 = new android.filterfw.geometry.Quad;

        specialinvoke $r19.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>(r6, r8, r5, r7);

        r9 = $r19;

        virtualinvoke r4.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>(i1, i0);

        goto label7;

     label6:
        $r24 = new android.filterfw.geometry.Quad;

        specialinvoke $r24.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>(r5, r6, r7, r8);

        r9 = $r24;

     label7:
        $r17 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r10 = virtualinvoke $r17.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r4);

        $r20 = r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r20.<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>(r9);

        $r21 = r0.<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r21.<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r10);

        virtualinvoke r0.<android.filterpacks.imageproc.FixedRotationFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r10);

        virtualinvoke r10.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }
}
