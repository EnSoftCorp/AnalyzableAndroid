public final class android.media.tv.TvInputInfo extends java.lang.Object implements android.os.Parcelable
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    public static final int TYPE_TUNER;
    public static final int TYPE_OTHER;
    public static final int TYPE_COMPOSITE;
    public static final int TYPE_SVIDEO;
    public static final int TYPE_SCART;
    public static final int TYPE_COMPONENT;
    public static final int TYPE_VGA;
    public static final int TYPE_DVI;
    public static final int TYPE_HDMI;
    public static final int TYPE_DISPLAY_PORT;
    public static final java.lang.String EXTRA_INPUT_ID;
    private static android.util.SparseIntArray sHardwareTypeToTvInputType;
    private static final java.lang.String XML_START_TAG_NAME;
    private static final java.lang.String DELIMITER_INFO_IN_ID;
    private static final java.lang.String PREFIX_HDMI_DEVICE;
    private static final java.lang.String PREFIX_HARDWARE_DEVICE;
    private static final int LENGTH_HDMI_PHYSICAL_ADDRESS;
    private static final int LENGTH_HDMI_DEVICE_ID;
    private final android.content.pm.ResolveInfo mService;
    private final java.lang.String mId;
    private final java.lang.String mParentId;
    private java.lang.String mSetupActivity;
    private java.lang.String mSettingsActivity;
    private int mType;
    private android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo;
    private java.lang.String mLabel;
    private android.net.Uri mIconUri;
    private boolean mIsConnectedToHdmiSwitch;
    public static final android.os.Parcelable$Creator CREATOR;

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        android.content.pm.ResolveInfo r1;
        android.content.ComponentName $r2;
        android.content.pm.ServiceInfo $r3, $r4;
        java.lang.String $r5, $r6, $r7;
        android.media.tv.TvInputInfo $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.ResolveInfo;

        $r2 = new android.content.ComponentName;

        $r3 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r4 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r5 = $r4.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r6, $r5);

        $r7 = staticinvoke <android.media.tv.TvInputInfo: java.lang.String generateInputIdForComponentName(android.content.ComponentName)>($r2);

        $r8 = staticinvoke <android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int,java.lang.String,android.net.Uri,boolean)>(r0, r1, $r7, null, 0, null, null, 0);

        return $r8;
    }

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, android.hardware.hdmi.HdmiDeviceInfo, java.lang.String, java.lang.String, android.net.Uri) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        android.content.pm.ResolveInfo r1;
        android.hardware.hdmi.HdmiDeviceInfo r2;
        java.lang.String r3, r4, $r10, $r11, $r12;
        android.net.Uri r5;
        boolean z0, $z1;
        android.media.tv.TvInputInfo r6;
        int $i0, $i1;
        android.content.ComponentName $r7;
        android.content.pm.ServiceInfo $r8, $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.ResolveInfo;

        r2 := @parameter2: android.hardware.hdmi.HdmiDeviceInfo;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.net.Uri;

        $i0 = virtualinvoke r2.<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>();

        $i1 = $i0 & 4095;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r7 = new android.content.ComponentName;

        $r8 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r11 = $r8.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r9 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r10 = $r9.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r10);

        $r12 = staticinvoke <android.media.tv.TvInputInfo: java.lang.String generateInputIdForHdmiDevice(android.content.ComponentName,android.hardware.hdmi.HdmiDeviceInfo)>($r7, r2);

        r6 = staticinvoke <android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int,java.lang.String,android.net.Uri,boolean)>(r0, r1, $r12, r3, 1007, r4, r5, z0);

        r6.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo> = r2;

        return r6;
    }

    public static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, android.media.tv.TvInputHardwareInfo, java.lang.String, android.net.Uri) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        android.content.pm.ResolveInfo r1;
        android.media.tv.TvInputHardwareInfo r2;
        java.lang.String r3, $r9, $r10, $r11;
        android.net.Uri r4;
        int i0, $i1;
        android.util.SparseIntArray $r5;
        android.content.ComponentName $r6;
        android.content.pm.ServiceInfo $r7, $r8;
        android.media.tv.TvInputInfo $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.ResolveInfo;

        r2 := @parameter2: android.media.tv.TvInputHardwareInfo;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.Uri;

        $r5 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        $i1 = virtualinvoke r2.<android.media.tv.TvInputHardwareInfo: int getType()>();

        i0 = virtualinvoke $r5.<android.util.SparseIntArray: int get(int,int)>($i1, 0);

        $r6 = new android.content.ComponentName;

        $r7 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r10 = $r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r8 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r9 = $r8.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r6.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r9);

        $r11 = staticinvoke <android.media.tv.TvInputInfo: java.lang.String generateInputIdForHardware(android.content.ComponentName,android.media.tv.TvInputHardwareInfo)>($r6, r2);

        $r12 = staticinvoke <android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int,java.lang.String,android.net.Uri,boolean)>(r0, r1, $r11, null, i0, r3, r4, 0);

        return $r12;
    }

    private static android.media.tv.TvInputInfo createTvInputInfo(android.content.Context, android.content.pm.ResolveInfo, java.lang.String, java.lang.String, int, java.lang.String, android.net.Uri, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        android.content.pm.ResolveInfo r1;
        java.lang.String r2, r3, r4, r11, $r17, $r20, $r23, $r25, $r27, $r29, $r35, $r37, $r39;
        int i0, i1, $i2;
        android.net.Uri r5;
        boolean z0, $z1;
        android.content.pm.ServiceInfo r6;
        android.content.pm.PackageManager r7;
        android.content.res.XmlResourceParser r8;
        android.content.res.Resources r9;
        android.util.AttributeSet r10;
        android.media.tv.TvInputInfo r12, r13, $r19;
        android.content.res.TypedArray r14;
        java.lang.Throwable r15, $r41;
        android.content.pm.ApplicationInfo $r16;
        int[] $r18;
        java.lang.StringBuilder $r21, $r22, $r28, $r30, $r31, $r32, $r34, $r38, $r40;
        org.xmlpull.v1.XmlPullParserException $r24, $r26, $r33;
        android.content.pm.PackageManager$NameNotFoundException $r36;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.pm.ResolveInfo;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: android.net.Uri;

        z0 := @parameter7: boolean;

        r6 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r7 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r8 = null;

     label01:
        r8 = virtualinvoke r6.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r7, "android.media.tv.input");

        if r8 != null goto label02;

        $r26 = new org.xmlpull.v1.XmlPullParserException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No android.media.tv.input meta-data for ");

        $r29 = r6.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r35);

        throw $r26;

     label02:
        $r16 = r6.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r9 = virtualinvoke r7.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r16);

        r10 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r8);

     label03:
        $i2 = interfaceinvoke r8.<android.content.res.XmlResourceParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label04;

        if i1 == 2 goto label04;

        goto label03;

     label04:
        r11 = interfaceinvoke r8.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r17 = "tv-input";

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z1 != 0 goto label05;

        $r24 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Meta-data does not start with tv-input-service tag in ");

        $r27 = r6.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label05:
        $r19 = new android.media.tv.TvInputInfo;

        specialinvoke $r19.<android.media.tv.TvInputInfo: void <init>(android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int)>(r1, r2, r3, i0);

        r12 = $r19;

        $r18 = <com.android.internal.R$styleable: int[] TvInputService>;

        r14 = virtualinvoke r9.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r10, $r18);

        $r20 = virtualinvoke r14.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        r12.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity> = $r20;

        $r23 = virtualinvoke r14.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        r12.<android.media.tv.TvInputInfo: java.lang.String mSettingsActivity> = $r23;

        virtualinvoke r14.<android.content.res.TypedArray: void recycle()>();

        r12.<android.media.tv.TvInputInfo: java.lang.String mLabel> = r4;

        r12.<android.media.tv.TvInputInfo: android.net.Uri mIconUri> = r5;

        r12.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch> = z0;

        r13 = r12;

     label06:
        if r8 == null goto label07;

        interfaceinvoke r8.<android.content.res.XmlResourceParser: void close()>();

     label07:
        return r13;

     label08:
        $r36 := @caughtexception;

        $r33 = new org.xmlpull.v1.XmlPullParserException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create context for: ");

        $r39 = r6.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r37);

        throw $r33;

     label09:
        $r41 := @caughtexception;

        r15 = $r41;

     label10:
        if r8 == null goto label11;

        interfaceinvoke r8.<android.content.res.XmlResourceParser: void close()>();

     label11:
        throw r15;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label06 with label08;
        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    private void <init>(android.content.pm.ResolveInfo, java.lang.String, java.lang.String, int)
    {
        android.media.tv.TvInputInfo r0;
        android.content.pm.ResolveInfo r1;
        java.lang.String r2, r3;
        int i0;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvInputInfo: int mType> = 0;

        r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService> = r1;

        r0.<android.media.tv.TvInputInfo: java.lang.String mId> = r2;

        r0.<android.media.tv.TvInputInfo: java.lang.String mParentId> = r3;

        r0.<android.media.tv.TvInputInfo: int mType> = i0;

        return;
    }

    public java.lang.String getId()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        return $r1;
    }

    public java.lang.String getParentId()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: java.lang.String mParentId>;

        return $r1;
    }

    public android.content.pm.ServiceInfo getServiceInfo()
    {
        android.media.tv.TvInputInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        return $r2;
    }

    public android.content.ComponentName getComponent()
    {
        android.media.tv.TvInputInfo r0;
        android.content.ComponentName $r1;
        android.content.pm.ResolveInfo $r2, $r4;
        android.content.pm.ServiceInfo $r3, $r5;
        java.lang.String $r6, $r7;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        return $r1;
    }

    public android.content.Intent createSetupIntent()
    {
        android.media.tv.TvInputInfo r0;
        android.content.Intent r1, $r3;
        java.lang.String $r2, $r6, $r7, $r9;
        boolean $z0;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.ServiceInfo $r5;

        r0 := @this: android.media.tv.TvInputInfo;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r1 = $r3;

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r5.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r6 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r7, $r6);

        $r9 = virtualinvoke r0.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.tv.extra.INPUT_ID", $r9);

        return r1;

     label1:
        return null;
    }

    public android.content.Intent createSettingsIntent()
    {
        android.media.tv.TvInputInfo r0;
        android.content.Intent r1, $r3;
        java.lang.String $r2, $r6, $r7, $r9;
        boolean $z0;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.ServiceInfo $r5;

        r0 := @this: android.media.tv.TvInputInfo;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mSettingsActivity>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r1 = $r3;

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r5.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r6 = r0.<android.media.tv.TvInputInfo: java.lang.String mSettingsActivity>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r7, $r6);

        $r9 = virtualinvoke r0.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.media.tv.extra.INPUT_ID", $r9);

        return r1;

     label1:
        return null;
    }

    public int getType()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mType>;

        return $i0;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;
        android.hardware.hdmi.HdmiDeviceInfo $r1;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mType>;

        if $i0 != 1007 goto label1;

        $r1 = r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo>;

        return $r1;

     label1:
        return null;
    }

    public boolean isPassthroughInput()
    {
        android.media.tv.TvInputInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        $i0 = r0.<android.media.tv.TvInputInfo: int mType>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isConnectedToHdmiSwitch()
    {
        android.media.tv.TvInputInfo r0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        $z0 = r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch>;

        return $z0;
    }

    public boolean isHidden(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: boolean access$000(android.content.Context,java.lang.String,int)>(r1, $r2, $i0);

        return $z0;
    }

    public java.lang.CharSequence loadLabel(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.content.pm.ResolveInfo $r4;
        android.content.pm.PackageManager $r5;
        java.lang.CharSequence $r6;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mLabel>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r4.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r5);

        return $r6;

     label1:
        $r3 = r0.<android.media.tv.TvInputInfo: java.lang.String mLabel>;

        return $r3;
    }

    public java.lang.CharSequence loadCustomLabel(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r3 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String access$100(android.content.Context,java.lang.String,int)>(r1, $r2, $i0);

        return $r3;
    }

    public android.graphics.drawable.Drawable loadIcon(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        java.io.InputStream r2;
        java.lang.Throwable r3, r6, r7, r8, $r13, $r14, $r21, $r23, $r24, r26, r27;
        android.graphics.drawable.Drawable r4, r5, $r12, $r22, r25;
        android.net.Uri $r9, $r11, $r19;
        android.content.ContentResolver $r10;
        java.lang.StringBuilder $r15, $r17, $r18;
        java.io.IOException $r16, r28;
        java.lang.String $r20;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r9 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        if $r9 != null goto label01;

        $r12 = specialinvoke r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)>(r1);

        return $r12;

     label01:
        $r10 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        r2 = virtualinvoke $r10.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r11);

        r3 = null;

     label02:
        r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>(r2, null);

        if r4 != null goto label09;

        r5 = specialinvoke r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)>(r1);

     label03:
        if r2 == null goto label08;

        if r3 == null goto label07;

     label04:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label05:
        goto label08;

     label06:
        $r14 := @caughtexception;

        r6 = $r14;

        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6);

        goto label08;

     label07:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label08:
        return r5;

     label09:
        r25 = r4;

     label10:
        if r2 == null goto label15;

        if r3 == null goto label14;

     label11:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r24 := @caughtexception;

        r26 = $r24;

        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r26);

        goto label15;

     label14:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label15:
        return r25;

     label16:
        $r13 := @caughtexception;

        r27 = $r13;

        r3 = r27;

        throw r27;

     label17:
        $r21 := @caughtexception;

        r7 = $r21;

     label18:
        if r2 == null goto label23;

        if r3 == null goto label22;

     label19:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label20:
        goto label23;

     label21:
        $r23 := @caughtexception;

        r8 = $r23;

        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r8);

        goto label23;

     label22:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label23:
        throw r7;

     label24:
        $r16 := @caughtexception;

        r28 = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading the default icon due to a failure on loading ");

        $r19 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputInfo", $r20, r28);

        $r22 = specialinvoke r0.<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)>(r1);

        return $r22;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label18 with label17;
        catch java.io.IOException from label01 to label08 with label24;
        catch java.io.IOException from label09 to label15 with label24;
        catch java.io.IOException from label16 to label24 with label24;
    }

    public int describeContents()
    {
        android.media.tv.TvInputInfo r0;

        r0 := @this: android.media.tv.TvInputInfo;

        return 0;
    }

    public int hashCode()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.tv.TvInputInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.media.tv.TvInputInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (android.media.tv.TvInputInfo) r1;

        $r4 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $r3 = r2.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.String toString()
    {
        android.media.tv.TvInputInfo r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r9, $r10, $r14, $r15;
        java.lang.String $r3, $r8, $r13, $r16;
        android.content.pm.ResolveInfo $r6, $r11;
        android.content.pm.ServiceInfo $r7, $r12;

        r0 := @this: android.media.tv.TvInputInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TvInputInfo{id=");

        $r3 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pkg=");

        $r6 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r8 = $r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", service=");

        $r11 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r12 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r13 = $r12.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.media.tv.TvInputInfo r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2, $r3, $r5, $r6, $r9;
        android.content.pm.ResolveInfo $r4;
        android.hardware.hdmi.HdmiDeviceInfo $r7;
        android.net.Uri $r8;
        boolean $z0;
        byte $b2;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.media.tv.TvInputInfo: java.lang.String mId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.media.tv.TvInputInfo: java.lang.String mParentId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        virtualinvoke $r4.<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r5 = r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<android.media.tv.TvInputInfo: java.lang.String mSettingsActivity>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $i1 = r0.<android.media.tv.TvInputInfo: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r7 = r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r7, i0);

        $r8 = r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r8, i0);

        $r9 = r0.<android.media.tv.TvInputInfo: java.lang.String mLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $z0 = r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch>;

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b2);

        return;
    }

    private android.graphics.drawable.Drawable loadServiceIcon(android.content.Context)
    {
        android.media.tv.TvInputInfo r0;
        android.content.Context r1;
        android.content.pm.ResolveInfo $r2, $r4, $r8;
        android.content.pm.ServiceInfo $r3, $r5, $r9;
        int $i0, $i1;
        android.content.pm.PackageManager $r6;
        android.graphics.drawable.Drawable $r7;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $i0 = $r3.<android.content.pm.ServiceInfo: int icon>;

        if $i0 != 0 goto label1;

        $r8 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r10 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r10.<android.content.pm.ApplicationInfo: int icon>;

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r5.<android.content.pm.ServiceInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r6);

        return $r7;
    }

    private static final java.lang.String generateInputIdForComponentName(android.content.ComponentName)
    {
        android.content.ComponentName r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.ComponentName;

        $r1 = virtualinvoke r0.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        return $r1;
    }

    private static final java.lang.String generateInputIdForHdmiDevice(android.content.ComponentName, android.hardware.hdmi.HdmiDeviceInfo)
    {
        android.content.ComponentName r0;
        android.hardware.hdmi.HdmiDeviceInfo r1;
        java.lang.String r2, $r7, $r13, $r14;
        java.lang.Object[] $r3, $r9;
        java.lang.Integer $r4, $r5, $r10, $r11;
        java.lang.StringBuilder $r6, $r8, $r12;
        int $i0, $i1;

        r0 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.hardware.hdmi.HdmiDeviceInfo;

        $r3 = newarray (java.lang.Object)[4];

        $r3[0] = "/";

        $r3[1] = "HDMI";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r3[3] = $r5;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s%%0%sX%%0%sX", $r3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r0.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke r1.<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9[0] = $r10;

        $i1 = virtualinvoke r1.<android.hardware.hdmi.HdmiDeviceInfo: int getId()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r9[1] = $r11;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r9);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private static final java.lang.String generateInputIdForHardware(android.content.ComponentName, android.media.tv.TvInputHardwareInfo)
    {
        android.content.ComponentName r0;
        android.media.tv.TvInputHardwareInfo r1;
        java.lang.StringBuilder $r2, $r4, $r8;
        java.lang.String $r3, $r7, $r9;
        java.lang.Object[] $r5;
        int $i0;
        java.lang.Integer $r6;

        r0 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.media.tv.TvInputHardwareInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = "/";

        $r5[1] = "HW";

        $i0 = virtualinvoke r1.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s%d", $r5);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void <init>(android.os.Parcel)
    {
        android.media.tv.TvInputInfo r0;
        android.os.Parcel r1;
        java.lang.String $r2, $r3, $r7, $r8, $r13;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.content.pm.ResolveInfo $r6;
        int $i0;
        android.os.Parcelable $r9, $r11;
        android.hardware.hdmi.HdmiDeviceInfo $r10;
        android.net.Uri $r12;
        byte $b1;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvInputInfo: int mType> = 0;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mId> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mParentId> = $r3;

        $r4 = <android.content.pm.ResolveInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r6 = (android.content.pm.ResolveInfo) $r5;

        r0.<android.media.tv.TvInputInfo: android.content.pm.ResolveInfo mService> = $r6;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mSetupActivity> = $r7;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mSettingsActivity> = $r8;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.media.tv.TvInputInfo: int mType> = $i0;

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r10 = (android.hardware.hdmi.HdmiDeviceInfo) $r9;

        r0.<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo mHdmiDeviceInfo> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r12 = (android.net.Uri) $r11;

        r0.<android.media.tv.TvInputInfo: android.net.Uri mIconUri> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.media.tv.TvInputInfo: java.lang.String mLabel> = $r13;

        $b1 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<android.media.tv.TvInputInfo: boolean mIsConnectedToHdmiSwitch> = $z0;

        return;
    }

    void <init>(android.os.Parcel, android.media.tv.TvInputInfo$1)
    {
        android.media.tv.TvInputInfo r0;
        android.os.Parcel r1;
        android.media.tv.TvInputInfo$1 r2;

        r0 := @this: android.media.tv.TvInputInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.media.tv.TvInputInfo$1;

        specialinvoke r0.<android.media.tv.TvInputInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.util.SparseIntArray $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        android.media.tv.TvInputInfo$1 $r11;

        <android.media.tv.TvInputInfo: int LENGTH_HDMI_DEVICE_ID> = 2;

        <android.media.tv.TvInputInfo: int LENGTH_HDMI_PHYSICAL_ADDRESS> = 4;

        <android.media.tv.TvInputInfo: java.lang.String PREFIX_HARDWARE_DEVICE> = "HW";

        <android.media.tv.TvInputInfo: java.lang.String PREFIX_HDMI_DEVICE> = "HDMI";

        <android.media.tv.TvInputInfo: java.lang.String DELIMITER_INFO_IN_ID> = "/";

        <android.media.tv.TvInputInfo: java.lang.String XML_START_TAG_NAME> = "tv-input";

        <android.media.tv.TvInputInfo: java.lang.String EXTRA_INPUT_ID> = "android.media.tv.extra.INPUT_ID";

        <android.media.tv.TvInputInfo: int TYPE_DISPLAY_PORT> = 1008;

        <android.media.tv.TvInputInfo: int TYPE_HDMI> = 1007;

        <android.media.tv.TvInputInfo: int TYPE_DVI> = 1006;

        <android.media.tv.TvInputInfo: int TYPE_VGA> = 1005;

        <android.media.tv.TvInputInfo: int TYPE_COMPONENT> = 1004;

        <android.media.tv.TvInputInfo: int TYPE_SCART> = 1003;

        <android.media.tv.TvInputInfo: int TYPE_SVIDEO> = 1002;

        <android.media.tv.TvInputInfo: int TYPE_COMPOSITE> = 1001;

        <android.media.tv.TvInputInfo: int TYPE_OTHER> = 1000;

        <android.media.tv.TvInputInfo: int TYPE_TUNER> = 0;

        <android.media.tv.TvInputInfo: java.lang.String TAG> = "TvInputInfo";

        <android.media.tv.TvInputInfo: boolean DEBUG> = 0;

        $r0 = new android.util.SparseIntArray;

        specialinvoke $r0.<android.util.SparseIntArray: void <init>()>();

        <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType> = $r0;

        $r1 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r1.<android.util.SparseIntArray: void put(int,int)>(1, 1000);

        $r2 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(2, 0);

        $r3 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(3, 1001);

        $r4 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(4, 1002);

        $r5 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(5, 1003);

        $r6 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r6.<android.util.SparseIntArray: void put(int,int)>(6, 1004);

        $r7 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(7, 1005);

        $r8 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r8.<android.util.SparseIntArray: void put(int,int)>(8, 1006);

        $r9 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r9.<android.util.SparseIntArray: void put(int,int)>(9, 1007);

        $r10 = <android.media.tv.TvInputInfo: android.util.SparseIntArray sHardwareTypeToTvInputType>;

        virtualinvoke $r10.<android.util.SparseIntArray: void put(int,int)>(10, 1008);

        $r11 = new android.media.tv.TvInputInfo$1;

        specialinvoke $r11.<android.media.tv.TvInputInfo$1: void <init>()>();

        <android.media.tv.TvInputInfo: android.os.Parcelable$Creator CREATOR> = $r11;

        return;
    }
}
