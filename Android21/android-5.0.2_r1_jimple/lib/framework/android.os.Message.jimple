public final class android.os.Message extends java.lang.Object implements android.os.Parcelable
{
    public int what;
    public int arg1;
    public int arg2;
    public java.lang.Object obj;
    public android.os.Messenger replyTo;
    public int sendingUid;
    static final int FLAG_IN_USE;
    static final int FLAG_ASYNCHRONOUS;
    static final int FLAGS_TO_CLEAR_ON_COPY_FROM;
    int flags;
    long when;
    android.os.Bundle data;
    android.os.Handler target;
    java.lang.Runnable callback;
    android.os.Message next;
    private static final java.lang.Object sPoolSync;
    private static android.os.Message sPool;
    private static int sPoolSize;
    private static final int MAX_POOL_SIZE;
    private static boolean gCheckRecycle;
    public static final android.os.Parcelable$Creator CREATOR;

    public static android.os.Message obtain()
    {
        java.lang.Object r0, $r3;
        android.os.Message r1, $r4, $r5, $r6;
        java.lang.Throwable r2, $r7;
        int $i0, $i1;

        $r3 = <android.os.Message: java.lang.Object sPoolSync>;

        r0 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.os.Message: android.os.Message sPool>;

        if $r4 == null goto label3;

        r1 = <android.os.Message: android.os.Message sPool>;

        $r6 = r1.<android.os.Message: android.os.Message next>;

        <android.os.Message: android.os.Message sPool> = $r6;

        r1.<android.os.Message: android.os.Message next> = null;

        r1.<android.os.Message: int flags> = 0;

        $i0 = <android.os.Message: int sPoolSize>;

        $i1 = $i0 - 1;

        <android.os.Message: int sPoolSize> = $i1;

        exitmonitor r0;

     label2:
        return r1;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r0;

     label6:
        throw r2;

     label7:
        $r5 = new android.os.Message;

        specialinvoke $r5.<android.os.Message: void <init>()>();

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.os.Message obtain(android.os.Message)
    {
        android.os.Message r0, r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        android.os.Messenger $r3;
        android.os.Bundle $r4, $r7, $r8;
        android.os.Handler $r5;
        java.lang.Runnable $r6;

        r0 := @parameter0: android.os.Message;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $i0 = r0.<android.os.Message: int what>;

        r1.<android.os.Message: int what> = $i0;

        $i1 = r0.<android.os.Message: int arg1>;

        r1.<android.os.Message: int arg1> = $i1;

        $i2 = r0.<android.os.Message: int arg2>;

        r1.<android.os.Message: int arg2> = $i2;

        $r2 = r0.<android.os.Message: java.lang.Object obj>;

        r1.<android.os.Message: java.lang.Object obj> = $r2;

        $r3 = r0.<android.os.Message: android.os.Messenger replyTo>;

        r1.<android.os.Message: android.os.Messenger replyTo> = $r3;

        $i3 = r0.<android.os.Message: int sendingUid>;

        r1.<android.os.Message: int sendingUid> = $i3;

        $r4 = r0.<android.os.Message: android.os.Bundle data>;

        if $r4 == null goto label1;

        $r7 = new android.os.Bundle;

        $r8 = r0.<android.os.Message: android.os.Bundle data>;

        specialinvoke $r7.<android.os.Bundle: void <init>(android.os.Bundle)>($r8);

        r1.<android.os.Message: android.os.Bundle data> = $r7;

     label1:
        $r5 = r0.<android.os.Message: android.os.Handler target>;

        r1.<android.os.Message: android.os.Handler target> = $r5;

        $r6 = r0.<android.os.Message: java.lang.Runnable callback>;

        r1.<android.os.Message: java.lang.Runnable callback> = $r6;

        return r1;
    }

    public static android.os.Message obtain(android.os.Handler)
    {
        android.os.Handler r0;
        android.os.Message r1;

        r0 := @parameter0: android.os.Handler;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: android.os.Handler target> = r0;

        return r1;
    }

    public static android.os.Message obtain(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;
        android.os.Message r2;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: android.os.Handler target> = r0;

        r2.<android.os.Message: java.lang.Runnable callback> = r1;

        return r2;
    }

    public static android.os.Message obtain(android.os.Handler, int)
    {
        android.os.Handler r0;
        int i0;
        android.os.Message r1;

        r0 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: android.os.Handler target> = r0;

        r1.<android.os.Message: int what> = i0;

        return r1;
    }

    public static android.os.Message obtain(android.os.Handler, int, java.lang.Object)
    {
        android.os.Handler r0;
        int i0;
        java.lang.Object r1;
        android.os.Message r2;

        r0 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: android.os.Handler target> = r0;

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        return r2;
    }

    public static android.os.Message obtain(android.os.Handler, int, int, int)
    {
        android.os.Handler r0;
        int i0, i1, i2;
        android.os.Message r1;

        r0 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: android.os.Handler target> = r0;

        r1.<android.os.Message: int what> = i0;

        r1.<android.os.Message: int arg1> = i1;

        r1.<android.os.Message: int arg2> = i2;

        return r1;
    }

    public static android.os.Message obtain(android.os.Handler, int, int, int, java.lang.Object)
    {
        android.os.Handler r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.Message r2;

        r0 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: android.os.Handler target> = r0;

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        return r2;
    }

    public static void updateCheckRecycle(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 >= 21 goto label1;

        <android.os.Message: boolean gCheckRecycle> = 0;

     label1:
        return;
    }

    public void recycle()
    {
        android.os.Message r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.os.Message;

        $z0 = virtualinvoke r0.<android.os.Message: boolean isInUse()>();

        if $z0 == 0 goto label2;

        $z1 = <android.os.Message: boolean gCheckRecycle>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This message cannot be recycled because it is still in use.");

        throw $r1;

     label1:
        return;

     label2:
        virtualinvoke r0.<android.os.Message: void recycleUnchecked()>();

        return;
    }

    void recycleUnchecked()
    {
        android.os.Message r0, $r4;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        int $i0, $i1, $i2;

        r0 := @this: android.os.Message;

        r0.<android.os.Message: int flags> = 1;

        r0.<android.os.Message: int what> = 0;

        r0.<android.os.Message: int arg1> = 0;

        r0.<android.os.Message: int arg2> = 0;

        r0.<android.os.Message: java.lang.Object obj> = null;

        r0.<android.os.Message: android.os.Messenger replyTo> = null;

        r0.<android.os.Message: int sendingUid> = -1;

        r0.<android.os.Message: long when> = 0L;

        r0.<android.os.Message: android.os.Handler target> = null;

        r0.<android.os.Message: java.lang.Runnable callback> = null;

        r0.<android.os.Message: android.os.Bundle data> = null;

        $r3 = <android.os.Message: java.lang.Object sPoolSync>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = <android.os.Message: int sPoolSize>;

        if $i0 >= 50 goto label2;

        $r4 = <android.os.Message: android.os.Message sPool>;

        r0.<android.os.Message: android.os.Message next> = $r4;

        <android.os.Message: android.os.Message sPool> = r0;

        $i1 = <android.os.Message: int sPoolSize>;

        $i2 = $i1 + 1;

        <android.os.Message: int sPoolSize> = $i2;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void copyFrom(android.os.Message)
    {
        android.os.Message r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r2, $r6;
        android.os.Messenger $r3;
        android.os.Bundle $r4, $r5, $r7;

        r0 := @this: android.os.Message;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int flags>;

        $i1 = $i0 & -2;

        r0.<android.os.Message: int flags> = $i1;

        $i2 = r1.<android.os.Message: int what>;

        r0.<android.os.Message: int what> = $i2;

        $i3 = r1.<android.os.Message: int arg1>;

        r0.<android.os.Message: int arg1> = $i3;

        $i4 = r1.<android.os.Message: int arg2>;

        r0.<android.os.Message: int arg2> = $i4;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        r0.<android.os.Message: java.lang.Object obj> = $r2;

        $r3 = r1.<android.os.Message: android.os.Messenger replyTo>;

        r0.<android.os.Message: android.os.Messenger replyTo> = $r3;

        $i5 = r1.<android.os.Message: int sendingUid>;

        r0.<android.os.Message: int sendingUid> = $i5;

        $r4 = r1.<android.os.Message: android.os.Bundle data>;

        if $r4 == null goto label1;

        $r5 = r1.<android.os.Message: android.os.Bundle data>;

        $r6 = virtualinvoke $r5.<android.os.Bundle: java.lang.Object clone()>();

        $r7 = (android.os.Bundle) $r6;

        r0.<android.os.Message: android.os.Bundle data> = $r7;

        goto label2;

     label1:
        r0.<android.os.Message: android.os.Bundle data> = null;

     label2:
        return;
    }

    public long getWhen()
    {
        android.os.Message r0;
        long $l0;

        r0 := @this: android.os.Message;

        $l0 = r0.<android.os.Message: long when>;

        return $l0;
    }

    public void setTarget(android.os.Handler)
    {
        android.os.Message r0;
        android.os.Handler r1;

        r0 := @this: android.os.Message;

        r1 := @parameter0: android.os.Handler;

        r0.<android.os.Message: android.os.Handler target> = r1;

        return;
    }

    public android.os.Handler getTarget()
    {
        android.os.Message r0;
        android.os.Handler $r1;

        r0 := @this: android.os.Message;

        $r1 = r0.<android.os.Message: android.os.Handler target>;

        return $r1;
    }

    public java.lang.Runnable getCallback()
    {
        android.os.Message r0;
        java.lang.Runnable $r1;

        r0 := @this: android.os.Message;

        $r1 = r0.<android.os.Message: java.lang.Runnable callback>;

        return $r1;
    }

    public android.os.Bundle getData()
    {
        android.os.Message r0;
        android.os.Bundle $r1, $r2, $r3;

        r0 := @this: android.os.Message;

        $r1 = r0.<android.os.Message: android.os.Bundle data>;

        if $r1 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.os.Message: android.os.Bundle data> = $r3;

     label1:
        $r2 = r0.<android.os.Message: android.os.Bundle data>;

        return $r2;
    }

    public android.os.Bundle peekData()
    {
        android.os.Message r0;
        android.os.Bundle $r1;

        r0 := @this: android.os.Message;

        $r1 = r0.<android.os.Message: android.os.Bundle data>;

        return $r1;
    }

    public void setData(android.os.Bundle)
    {
        android.os.Message r0;
        android.os.Bundle r1;

        r0 := @this: android.os.Message;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.os.Message: android.os.Bundle data> = r1;

        return;
    }

    public void sendToTarget()
    {
        android.os.Message r0;
        android.os.Handler $r1;

        r0 := @this: android.os.Message;

        $r1 = r0.<android.os.Message: android.os.Handler target>;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>(r0);

        return;
    }

    public boolean isAsynchronous()
    {
        android.os.Message r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.os.Message;

        $i0 = r0.<android.os.Message: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setAsynchronous(boolean)
    {
        android.os.Message r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.os.Message;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.os.Message: int flags>;

        $i3 = $i2 | 2;

        r0.<android.os.Message: int flags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<android.os.Message: int flags>;

        $i1 = $i0 & -3;

        r0.<android.os.Message: int flags> = $i1;

     label2:
        return;
    }

    boolean isInUse()
    {
        android.os.Message r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.os.Message;

        $i0 = r0.<android.os.Message: int flags>;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void markInUse()
    {
        android.os.Message r0;
        int $i0, $i1;

        r0 := @this: android.os.Message;

        $i0 = r0.<android.os.Message: int flags>;

        $i1 = $i0 | 1;

        r0.<android.os.Message: int flags> = $i1;

        return;
    }

    public void <init>()
    {
        android.os.Message r0;

        r0 := @this: android.os.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.Message: int sendingUid> = -1;

        return;
    }

    public java.lang.String toString()
    {
        android.os.Message r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.os.Message;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = virtualinvoke r0.<android.os.Message: java.lang.String toString(long)>($l0);

        return $r1;
    }

    java.lang.String toString(long)
    {
        android.os.Message r0;
        long l0, $l1, $l2;
        java.lang.StringBuilder r1, $r2;
        android.os.Handler $r4, $r15;
        int $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r8, $r17, $r26;
        java.lang.Runnable $r9, $r28;
        java.lang.Object $r13, $r18;
        java.lang.Class $r14, $r29;

        r0 := @this: android.os.Message;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ when=");

        $l1 = r0.<android.os.Message: long when>;

        $l2 = $l1 - l0;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l2, r1);

        $r4 = r0.<android.os.Message: android.os.Handler target>;

        if $r4 == null goto label6;

        $r9 = r0.<android.os.Message: java.lang.Runnable callback>;

        if $r9 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback=");

        $r28 = r0.<android.os.Message: java.lang.Runnable callback>;

        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" what=");

        $i4 = r0.<android.os.Message: int what>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

     label2:
        $i6 = r0.<android.os.Message: int arg1>;

        if $i6 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arg1=");

        $i8 = r0.<android.os.Message: int arg1>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

     label3:
        $i5 = r0.<android.os.Message: int arg2>;

        if $i5 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arg2=");

        $i7 = r0.<android.os.Message: int arg2>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

     label4:
        $r13 = r0.<android.os.Message: java.lang.Object obj>;

        if $r13 == null goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" obj=");

        $r18 = r0.<android.os.Message: java.lang.Object obj>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" target=");

        $r15 = r0.<android.os.Message: android.os.Handler target>;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        goto label7;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" barrier=");

        $i3 = r0.<android.os.Message: int arg1>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int describeContents()
    {
        android.os.Message r0;

        r0 := @this: android.os.Message;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.Message r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i5;
        android.os.Parcelable r2;
        java.lang.Runnable $r3;
        java.lang.Object $r4, $r7;
        long $l4;
        android.os.Bundle $r5;
        android.os.Messenger $r6;
        java.lang.RuntimeException $r8, $r10;
        java.lang.ClassCastException $r9;

        r0 := @this: android.os.Message;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = r0.<android.os.Message: java.lang.Runnable callback>;

        if $r3 == null goto label1;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t marshal callbacks across processes.");

        throw $r8;

     label1:
        $i1 = r0.<android.os.Message: int what>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.os.Message: int arg1>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.os.Message: int arg2>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r4 = r0.<android.os.Message: java.lang.Object obj>;

        if $r4 == null goto label5;

     label2:
        $r7 = r0.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.Parcelable) $r7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(r2, i0);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t marshal non-Parcelable objects across processes.");

        throw $r10;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label6:
        $l4 = r0.<android.os.Message: long when>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $r5 = r0.<android.os.Message: android.os.Bundle data>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r5);

        $r6 = r0.<android.os.Message: android.os.Messenger replyTo>;

        staticinvoke <android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>($r6, r1);

        $i5 = r0.<android.os.Message: int sendingUid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        return;

        catch java.lang.ClassCastException from label2 to label3 with label4;
    }

    private void readFromParcel(android.os.Parcel)
    {
        android.os.Message r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i5;
        long $l4;
        android.os.Bundle $r2;
        android.os.Messenger $r3;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        android.os.Parcelable $r6;

        r0 := @this: android.os.Message;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Message: int what> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Message: int arg1> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Message: int arg2> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label1;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r5);

        r0.<android.os.Message: java.lang.Object obj> = $r6;

     label1:
        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.os.Message: long when> = $l4;

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        r0.<android.os.Message: android.os.Bundle data> = $r2;

        $r3 = staticinvoke <android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>(r1);

        r0.<android.os.Message: android.os.Messenger replyTo> = $r3;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Message: int sendingUid> = $i5;

        return;
    }

    static void access$000(android.os.Message, android.os.Parcel)
    {
        android.os.Message r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.os.Message;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.os.Message: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.os.Message$1 $r1;

        <android.os.Message: int MAX_POOL_SIZE> = 50;

        <android.os.Message: int FLAGS_TO_CLEAR_ON_COPY_FROM> = 1;

        <android.os.Message: int FLAG_ASYNCHRONOUS> = 2;

        <android.os.Message: int FLAG_IN_USE> = 1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.os.Message: java.lang.Object sPoolSync> = $r0;

        <android.os.Message: int sPoolSize> = 0;

        <android.os.Message: boolean gCheckRecycle> = 1;

        $r1 = new android.os.Message$1;

        specialinvoke $r1.<android.os.Message$1: void <init>()>();

        <android.os.Message: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }
}
