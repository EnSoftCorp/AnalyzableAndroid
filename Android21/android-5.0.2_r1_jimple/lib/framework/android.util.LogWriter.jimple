public class android.util.LogWriter extends java.io.Writer
{
    private final int mPriority;
    private final java.lang.String mTag;
    private final int mBuffer;
    private java.lang.StringBuilder mBuilder;

    public void <init>(int, java.lang.String)
    {
        android.util.LogWriter r0;
        int i0;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: android.util.LogWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder> = $r2;

        r0.<android.util.LogWriter: int mPriority> = i0;

        r0.<android.util.LogWriter: java.lang.String mTag> = r1;

        r0.<android.util.LogWriter: int mBuffer> = 0;

        return;
    }

    public void <init>(int, java.lang.String, int)
    {
        android.util.LogWriter r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.StringBuilder $r2;

        r0 := @this: android.util.LogWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder> = $r2;

        r0.<android.util.LogWriter: int mPriority> = i0;

        r0.<android.util.LogWriter: java.lang.String mTag> = r1;

        r0.<android.util.LogWriter: int mBuffer> = i1;

        return;
    }

    public void close()
    {
        android.util.LogWriter r0;

        r0 := @this: android.util.LogWriter;

        specialinvoke r0.<android.util.LogWriter: void flushBuilder()>();

        return;
    }

    public void flush()
    {
        android.util.LogWriter r0;

        r0 := @this: android.util.LogWriter;

        specialinvoke r0.<android.util.LogWriter: void flushBuilder()>();

        return;
    }

    public void write(char[], int, int)
    {
        android.util.LogWriter r0;
        char[] r1;
        int i0, i1, i2, $i4;
        char c3;
        java.lang.StringBuilder $r2;

        r0 := @this: android.util.LogWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $i4 = i0 + i2;

        c3 = r1[$i4];

        if c3 != 10 goto label2;

        specialinvoke r0.<android.util.LogWriter: void flushBuilder()>();

        goto label3;

     label2:
        $r2 = r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void flushBuilder()
    {
        android.util.LogWriter r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r3, $r4;

        r0 := @this: android.util.LogWriter;

        $r1 = r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.util.LogWriter: int mBuffer>;

        $i2 = r0.<android.util.LogWriter: int mPriority>;

        $r3 = r0.<android.util.LogWriter: java.lang.String mTag>;

        $r2 = r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int println_native(int,int,java.lang.String,java.lang.String)>($i1, $i2, $r3, $r4);

        $r6 = r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder>;

        $r5 = r0.<android.util.LogWriter: java.lang.StringBuilder mBuilder>;

        $i4 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i4);

     label1:
        return;
    }
}
