class android.net.dhcp.DhcpRequestPacket extends android.net.dhcp.DhcpPacket
{

    void <init>(int, java.net.InetAddress, byte[], boolean)
    {
        android.net.dhcp.DhcpRequestPacket r0;
        int i0;
        java.net.InetAddress r1, $r3, $r4, $r5;
        byte[] r2;
        boolean z0;

        r0 := @this: android.net.dhcp.DhcpRequestPacket;

        i0 := @parameter0: int;

        r1 := @parameter1: java.net.InetAddress;

        r2 := @parameter2: byte[];

        z0 := @parameter3: boolean;

        $r5 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        $r4 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        $r3 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        specialinvoke r0.<android.net.dhcp.DhcpPacket: void <init>(int,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,byte[],boolean)>(i0, r1, $r5, $r4, $r3, r2, z0);

        return;
    }

    public java.lang.String toString()
    {
        android.net.dhcp.DhcpRequestPacket r0;
        java.lang.String r1, $r8, $r14;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r13;
        java.net.InetAddress $r5;
        byte[] $r11, $r12;
        int $i0;

        r0 := @this: android.net.dhcp.DhcpRequestPacket;

        r1 = specialinvoke r0.<android.net.dhcp.DhcpPacket: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" REQUEST, desired IP ");

        $r5 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mRequestedIp>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from host \'");

        $r8 = r0.<android.net.dhcp.DhcpRequestPacket: java.lang.String mHostName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', param list length ");

        $r11 = r0.<android.net.dhcp.DhcpRequestPacket: byte[] mRequestedParams>;

        if $r11 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r12 = r0.<android.net.dhcp.DhcpRequestPacket: byte[] mRequestedParams>;

        $i0 = lengthof $r12;

     label2:
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public java.nio.ByteBuffer buildPacket(int, short, short)
    {
        android.net.dhcp.DhcpRequestPacket r0;
        int i0;
        short s1, s2;
        java.nio.ByteBuffer r1;
        boolean $z0;
        java.net.InetAddress $r2, $r3;

        r0 := @this: android.net.dhcp.DhcpRequestPacket;

        i0 := @parameter0: int;

        s1 := @parameter1: short;

        s2 := @parameter2: short;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(1500);

        $r3 = <java.net.Inet4Address: java.net.InetAddress ALL>;

        $r2 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        $z0 = r0.<android.net.dhcp.DhcpRequestPacket: boolean mBroadcast>;

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void fillInPacket(int,java.net.InetAddress,java.net.InetAddress,short,short,java.nio.ByteBuffer,byte,boolean)>(i0, $r3, $r2, s1, s2, r1, 1, $z0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        return r1;
    }

    void finishPacket(java.nio.ByteBuffer)
    {
        android.net.dhcp.DhcpRequestPacket r0;
        java.nio.ByteBuffer r1;
        byte[] r2, $r3, $r4;
        java.net.InetAddress $r5, $r6;

        r0 := @this: android.net.dhcp.DhcpRequestPacket;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 = newarray (byte)[7];

        r2[0] = 1;

        $r3 = r0.<android.net.dhcp.DhcpRequestPacket: byte[] mClientMac>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r3, 0, r2, 1, 6);

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void addTlv(java.nio.ByteBuffer,byte,byte)>(r1, 53, 3);

        $r4 = r0.<android.net.dhcp.DhcpRequestPacket: byte[] mRequestedParams>;

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void addTlv(java.nio.ByteBuffer,byte,byte[])>(r1, 55, $r4);

        $r5 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mRequestedIp>;

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void addTlv(java.nio.ByteBuffer,byte,java.net.InetAddress)>(r1, 50, $r5);

        $r6 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mServerIdentifier>;

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void addTlv(java.nio.ByteBuffer,byte,java.net.InetAddress)>(r1, 54, $r6);

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void addTlv(java.nio.ByteBuffer,byte,byte[])>(r1, 61, r2);

        virtualinvoke r0.<android.net.dhcp.DhcpRequestPacket: void addTlvEnd(java.nio.ByteBuffer)>(r1);

        return;
    }

    public void doNextOp(android.net.dhcp.DhcpStateMachine)
    {
        android.net.dhcp.DhcpRequestPacket r0;
        android.net.dhcp.DhcpStateMachine r1;
        java.net.InetAddress r2, $r3, $r6, $r9, $r15;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r11, $r12;
        byte[] $r13, $r14;
        int $i1;
        boolean $z0;

        r0 := @this: android.net.dhcp.DhcpRequestPacket;

        r1 := @parameter0: android.net.dhcp.DhcpStateMachine;

        $r3 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mRequestedIp>;

        if $r3 != null goto label1;

        $r15 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mClientIp>;

        goto label2;

     label1:
        $r15 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mRequestedIp>;

     label2:
        r2 = $r15;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requested IP is ");

        $r6 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mRequestedIp>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and client IP is ");

        $r9 = r0.<android.net.dhcp.DhcpRequestPacket: java.net.InetAddress mClientIp>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("DhcpPacket", $r11);

        $z0 = r0.<android.net.dhcp.DhcpRequestPacket: boolean mBroadcast>;

        $i1 = r0.<android.net.dhcp.DhcpRequestPacket: int mTransId>;

        $r14 = r0.<android.net.dhcp.DhcpRequestPacket: byte[] mClientMac>;

        $r13 = r0.<android.net.dhcp.DhcpRequestPacket: byte[] mRequestedParams>;

        $r12 = r0.<android.net.dhcp.DhcpRequestPacket: java.lang.String mHostName>;

        interfaceinvoke r1.<android.net.dhcp.DhcpStateMachine: void onRequestReceived(boolean,int,byte[],java.net.InetAddress,byte[],java.lang.String)>($z0, $i1, $r14, r2, $r13, $r12);

        return;
    }
}
