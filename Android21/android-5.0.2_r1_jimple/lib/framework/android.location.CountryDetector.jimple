public class android.location.CountryDetector extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.location.ICountryDetector mService;
    private final java.util.HashMap mListeners;

    public void <init>(android.location.ICountryDetector)
    {
        android.location.CountryDetector r0;
        android.location.ICountryDetector r1;
        java.util.HashMap $r2;

        r0 := @this: android.location.CountryDetector;

        r1 := @parameter0: android.location.ICountryDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.CountryDetector: android.location.ICountryDetector mService> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.location.CountryDetector: java.util.HashMap mListeners> = $r2;

        return;
    }

    public android.location.Country detectCountry()
    {
        android.location.CountryDetector r0;
        android.os.RemoteException r1, $r4;
        android.location.ICountryDetector $r2;
        android.location.Country $r3;

        r0 := @this: android.location.CountryDetector;

     label1:
        $r2 = r0.<android.location.CountryDetector: android.location.ICountryDetector mService>;

        $r3 = interfaceinvoke $r2.<android.location.ICountryDetector: android.location.Country detectCountry()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "detectCountry: RemoteException", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addCountryListener(android.location.CountryListener, android.os.Looper)
    {
        android.location.CountryDetector r0;
        android.location.CountryListener r1;
        android.os.Looper r2;
        java.util.HashMap r3, $r7, $r8, $r11;
        android.location.CountryDetector$ListenerTransport r4, $r9;
        android.os.RemoteException r5, $r13;
        java.lang.Throwable r6, $r14;
        boolean $z0;
        android.location.ICountryDetector $r10;

        r0 := @this: android.location.CountryDetector;

        r1 := @parameter0: android.location.CountryListener;

        r2 := @parameter1: android.os.Looper;

        $r7 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        $z0 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label5;

        $r9 = new android.location.CountryDetector$ListenerTransport;

        specialinvoke $r9.<android.location.CountryDetector$ListenerTransport: void <init>(android.location.CountryListener,android.os.Looper)>(r1, r2);

        r4 = $r9;

     label2:
        $r10 = r0.<android.location.CountryDetector: android.location.ICountryDetector mService>;

        interfaceinvoke $r10.<android.location.ICountryDetector: void addCountryListener(android.location.ICountryListener)>(r4);

        $r11 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r5 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "addCountryListener: RemoteException", r5);

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r3;

     label8:
        throw r6;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void removeCountryListener(android.location.CountryListener)
    {
        android.location.CountryDetector r0;
        android.location.CountryListener r1;
        java.util.HashMap r2, $r6, $r7, $r9;
        android.location.CountryDetector$ListenerTransport r3;
        android.os.RemoteException r4, $r13;
        java.lang.Throwable r5, $r12;
        java.lang.Object $r8;
        android.location.ICountryDetector $r11;

        r0 := @this: android.location.CountryDetector;

        r1 := @parameter0: android.location.CountryListener;

        $r6 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.location.CountryDetector$ListenerTransport) $r8;

        if r3 == null goto label5;

     label2:
        $r9 = r0.<android.location.CountryDetector: java.util.HashMap mListeners>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r11 = r0.<android.location.CountryDetector: android.location.ICountryDetector mService>;

        interfaceinvoke $r11.<android.location.ICountryDetector: void removeCountryListener(android.location.ICountryListener)>(r3);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r4 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "removeCountryListener: RemoteException", r4);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static void <clinit>()
    {
        <android.location.CountryDetector: java.lang.String TAG> = "CountryDetector";

        return;
    }
}
