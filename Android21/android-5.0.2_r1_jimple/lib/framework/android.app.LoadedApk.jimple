public final class android.app.LoadedApk extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.app.ActivityThread mActivityThread;
    private android.content.pm.ApplicationInfo mApplicationInfo;
    final java.lang.String mPackageName;
    private final java.lang.String mAppDir;
    private final java.lang.String mResDir;
    private final java.lang.String[] mSplitAppDirs;
    private final java.lang.String[] mSplitResDirs;
    private final java.lang.String[] mOverlayDirs;
    private final java.lang.String[] mSharedLibraries;
    private final java.lang.String mDataDir;
    private final java.lang.String mLibDir;
    private final java.io.File mDataDirFile;
    private final java.lang.ClassLoader mBaseClassLoader;
    private final boolean mSecurityViolation;
    private final boolean mIncludeCode;
    private final boolean mRegisterPackage;
    private final android.view.DisplayAdjustments mDisplayAdjustments;
    android.content.res.Resources mResources;
    private java.lang.ClassLoader mClassLoader;
    private android.app.Application mApplication;
    private final android.util.ArrayMap mReceivers;
    private final android.util.ArrayMap mUnregisteredReceivers;
    private final android.util.ArrayMap mServices;
    private final android.util.ArrayMap mUnboundServices;
    int mClientCount;
    static final boolean $assertionsDisabled;

    android.app.Application getApplication()
    {
        android.app.LoadedApk r0;
        android.app.Application $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: android.app.Application mApplication>;

        return $r1;
    }

    public void <init>(android.app.ActivityThread, android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, java.lang.ClassLoader, boolean, boolean, boolean)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.content.pm.ApplicationInfo r2, r25;
        android.content.res.CompatibilityInfo r3;
        java.lang.ClassLoader r4;
        boolean z0, z1, z2, $z3, $z4;
        int i0, $i1, $i2, $i3, $i4;
        android.view.DisplayAdjustments $r5, $r21;
        android.util.ArrayMap $r6, $r7, $r8, $r9;
        java.lang.String $r10, $r11, $r12, $r16, $r18, $r19, $r22, $r23, $r24;
        java.lang.String[] $r13, $r14, $r15, $r17;
        java.io.File $r20;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        r4 := @parameter3: java.lang.ClassLoader;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.view.DisplayAdjustments;

        specialinvoke $r5.<android.view.DisplayAdjustments: void <init>()>();

        r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mServices> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices> = $r9;

        r0.<android.app.LoadedApk: int mClientCount> = 0;

        i0 = staticinvoke <android.os.Process: int myUid()>();

        r25 = staticinvoke <android.app.LoadedApk: android.content.pm.ApplicationInfo adjustNativeLibraryPaths(android.content.pm.ApplicationInfo)>(r2);

        r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread> = r1;

        r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo> = r25;

        $r11 = r25.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<android.app.LoadedApk: java.lang.String mPackageName> = $r11;

        $r10 = r25.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        r0.<android.app.LoadedApk: java.lang.String mAppDir> = $r10;

        $i1 = r25.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 != i0 goto label1;

        $r12 = r25.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        goto label2;

     label1:
        $r12 = r25.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

     label2:
        r0.<android.app.LoadedApk: java.lang.String mResDir> = $r12;

        $r13 = r25.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        r0.<android.app.LoadedApk: java.lang.String[] mSplitAppDirs> = $r13;

        $i2 = r25.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 != i0 goto label3;

        $r15 = r25.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        goto label4;

     label3:
        $r15 = r25.<android.content.pm.ApplicationInfo: java.lang.String[] splitPublicSourceDirs>;

     label4:
        r0.<android.app.LoadedApk: java.lang.String[] mSplitResDirs> = $r15;

        $r14 = r25.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

        r0.<android.app.LoadedApk: java.lang.String[] mOverlayDirs> = $r14;

        $i3 = r25.<android.content.pm.ApplicationInfo: int uid>;

        $z3 = staticinvoke <android.os.UserHandle: boolean isSameUser(int,int)>($i3, i0);

        if $z3 != 0 goto label5;

        $z4 = staticinvoke <android.os.Process: boolean isIsolated()>();

        if $z4 != 0 goto label5;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r22 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r24 = staticinvoke <android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)>($i4, $r22);

        r25.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r24;

     label5:
        $r17 = r25.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries> = $r17;

        $r16 = r25.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        r0.<android.app.LoadedApk: java.lang.String mDataDir> = $r16;

        $r19 = r0.<android.app.LoadedApk: java.lang.String mDataDir>;

        if $r19 == null goto label6;

        $r20 = new java.io.File;

        $r23 = r0.<android.app.LoadedApk: java.lang.String mDataDir>;

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r23);

        goto label7;

     label6:
        $r20 = null;

     label7:
        r0.<android.app.LoadedApk: java.io.File mDataDirFile> = $r20;

        $r18 = r25.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        r0.<android.app.LoadedApk: java.lang.String mLibDir> = $r18;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader> = r4;

        r0.<android.app.LoadedApk: boolean mSecurityViolation> = z0;

        r0.<android.app.LoadedApk: boolean mIncludeCode> = z1;

        r0.<android.app.LoadedApk: boolean mRegisterPackage> = z2;

        $r21 = r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments>;

        virtualinvoke $r21.<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>(r3);

        return;
    }

    private static android.content.pm.ApplicationInfo adjustNativeLibraryPaths(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0, r3, $r8;
        java.lang.String r1, r2, $r4, $r5, $r7, $r9;
        dalvik.system.VMRuntime $r6;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $r4 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r4 == null goto label1;

        $r5 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r5 == null goto label1;

        $r6 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        r1 = virtualinvoke $r6.<dalvik.system.VMRuntime: java.lang.String vmInstructionSet()>();

        $r7 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        r2 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r7);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r8 = new android.content.pm.ApplicationInfo;

        specialinvoke $r8.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>(r0);

        r3 = $r8;

        $r9 = r3.<android.content.pm.ApplicationInfo: java.lang.String secondaryNativeLibraryDir>;

        r3.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r9;

        return r3;

     label1:
        return r0;
    }

    void <init>(android.app.ActivityThread)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.view.DisplayAdjustments $r2;
        android.util.ArrayMap $r3, $r4, $r5, $r6;
        android.content.pm.ApplicationInfo $r7, $r8;
        java.lang.ClassLoader $r9;
        android.content.res.Resources $r10;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.view.DisplayAdjustments;

        specialinvoke $r2.<android.view.DisplayAdjustments: void <init>()>();

        r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mServices> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices> = $r6;

        r0.<android.app.LoadedApk: int mClientCount> = 0;

        r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread> = r1;

        $r7 = new android.content.pm.ApplicationInfo;

        specialinvoke $r7.<android.content.pm.ApplicationInfo: void <init>()>();

        r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo> = $r7;

        $r8 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName> = "android";

        r0.<android.app.LoadedApk: java.lang.String mPackageName> = "android";

        r0.<android.app.LoadedApk: java.lang.String mAppDir> = null;

        r0.<android.app.LoadedApk: java.lang.String mResDir> = null;

        r0.<android.app.LoadedApk: java.lang.String[] mSplitAppDirs> = null;

        r0.<android.app.LoadedApk: java.lang.String[] mSplitResDirs> = null;

        r0.<android.app.LoadedApk: java.lang.String[] mOverlayDirs> = null;

        r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries> = null;

        r0.<android.app.LoadedApk: java.lang.String mDataDir> = null;

        r0.<android.app.LoadedApk: java.io.File mDataDirFile> = null;

        r0.<android.app.LoadedApk: java.lang.String mLibDir> = null;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader> = null;

        r0.<android.app.LoadedApk: boolean mSecurityViolation> = 0;

        r0.<android.app.LoadedApk: boolean mIncludeCode> = 1;

        r0.<android.app.LoadedApk: boolean mRegisterPackage> = 0;

        $r9 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r9;

        $r10 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r0.<android.app.LoadedApk: android.content.res.Resources mResources> = $r10;

        return;
    }

    void installSystemApplicationInfo(android.content.pm.ApplicationInfo, java.lang.ClassLoader)
    {
        android.app.LoadedApk r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.ClassLoader r2;
        boolean $z0, $z1;
        java.lang.String $r3;
        java.lang.AssertionError $r4;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.ClassLoader;

        $z0 = <android.app.LoadedApk: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo> = r1;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = r2;

        return;
    }

    public java.lang.String getPackageName()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        return $r1;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo()
    {
        android.app.LoadedApk r0;
        android.content.pm.ApplicationInfo $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        return $r1;
    }

    public boolean isSecurityViolation()
    {
        android.app.LoadedApk r0;
        boolean $z0;

        r0 := @this: android.app.LoadedApk;

        $z0 = r0.<android.app.LoadedApk: boolean mSecurityViolation>;

        return $z0;
    }

    public android.content.res.CompatibilityInfo getCompatibilityInfo()
    {
        android.app.LoadedApk r0;
        android.view.DisplayAdjustments $r1;
        android.content.res.CompatibilityInfo $r2;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments>;

        $r2 = virtualinvoke $r1.<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        return $r2;
    }

    public void setCompatibilityInfo(android.content.res.CompatibilityInfo)
    {
        android.app.LoadedApk r0;
        android.content.res.CompatibilityInfo r1;
        android.view.DisplayAdjustments $r2;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.res.CompatibilityInfo;

        $r2 = r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments>;

        virtualinvoke $r2.<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>(r1);

        return;
    }

    private static java.lang.String[] getLibrariesFor(java.lang.String)
    {
        java.lang.String r0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageManager $r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.AssertionError $r5;
        android.content.pm.ApplicationInfo r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r6 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r0, 1024, $i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r5;

     label4:
        if r6 != null goto label5;

        return null;

     label5:
        $r3 = r6.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        android.app.LoadedApk r0, r1;
        java.lang.String r2, r5, r7, r8, r10, r13, $r20, $r22, $r23, $r27, $r30, $r36, $r37, $r38, $r45, $r46, $r51, r56, r58, r59, r60;
        java.lang.String[] r6, r9, r11, r12, $r26, $r39, $r43, r57;
        int i0, i1, i2, i3;
        java.lang.Throwable r15, $r52;
        boolean $z0, $z1, $z2, $z4, $z6, $z8, $z12, $z13, $z17;
        java.lang.ClassLoader $r16, $r17, $r18, $r19, $r21, $r40, $r42, $r47;
        java.util.ArrayList $r24, $r25, r54, r55;
        android.app.ActivityThread $r28, $r29, $r31, $r32, $r33, $r34, $r35;
        android.app.ApplicationLoaders $r41;
        android.app.IActivityManager $r44;
        android.os.RemoteException $r48, $r53;
        dalvik.system.VMRuntime $r49;
        android.content.pm.IPackageManager $r50;
        android.os.StrictMode$ThreadPolicy r61;

        r0 := @this: android.app.LoadedApk;

        r1 = r0;

        entermonitor r0;

     label01:
        $r16 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        if $r16 == null goto label03;

        $r47 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        exitmonitor r1;

     label02:
        return $r47;

     label03:
        $z0 = r0.<android.app.LoadedApk: boolean mIncludeCode>;

        if $z0 == 0 goto label23;

        $r20 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z1 != 0 goto label23;

        $r22 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r23 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r22, $r23);

        if $z2 != 0 goto label07;

        $r49 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        r2 = virtualinvoke $r49.<dalvik.system.VMRuntime: java.lang.String vmInstructionSet()>();

     label04:
        $r50 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r51 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        interfaceinvoke $r50.<android.content.pm.IPackageManager: boolean performDexOptIfNeeded(java.lang.String,java.lang.String)>($r51, r2);

     label05:
        goto label07;

     label06:
        $r53 := @caughtexception;

     label07:
        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r54 = $r25;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r55 = $r24;

        $z4 = r0.<android.app.LoadedApk: boolean mRegisterPackage>;

        if $z4 == 0 goto label11;

     label08:
        $r44 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r45 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        interfaceinvoke $r44.<android.app.IActivityManager: void addPackageDependency(java.lang.String)>($r45);

     label09:
        goto label11;

     label10:
        $r48 := @caughtexception;

     label11:
        $r27 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        virtualinvoke r54.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        $r26 = r0.<android.app.LoadedApk: java.lang.String[] mSplitAppDirs>;

        if $r26 == null goto label12;

        $r43 = r0.<android.app.LoadedApk: java.lang.String[] mSplitAppDirs>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r54, $r43);

     label12:
        $r30 = r0.<android.app.LoadedApk: java.lang.String mLibDir>;

        virtualinvoke r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

        $r28 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r56 = $r28.<android.app.ActivityThread: java.lang.String mInstrumentationPackageName>;

        $r29 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r5 = $r29.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir>;

        $r33 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r6 = $r33.<android.app.ActivityThread: java.lang.String[] mInstrumentationSplitAppDirs>;

        $r34 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r7 = $r34.<android.app.ActivityThread: java.lang.String mInstrumentationLibDir>;

        $r31 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r8 = $r31.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir>;

        $r32 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r9 = $r32.<android.app.ActivityThread: java.lang.String[] mInstrumentedSplitAppDirs>;

        $r35 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r10 = $r35.<android.app.ActivityThread: java.lang.String mInstrumentedLibDir>;

        r11 = null;

        $r36 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        $z6 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z6 != 0 goto label13;

        $r46 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        $z17 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z17 == 0 goto label16;

     label13:
        virtualinvoke r54.<java.util.ArrayList: void clear()>();

        virtualinvoke r54.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        if r6 == null goto label14;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r54, r6);

     label14:
        virtualinvoke r54.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        if r9 == null goto label15;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r54, r9);

     label15:
        virtualinvoke r55.<java.util.ArrayList: void clear()>();

        virtualinvoke r55.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        virtualinvoke r55.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        $z8 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z8 != 0 goto label16;

        r11 = staticinvoke <android.app.LoadedApk: java.lang.String[] getLibrariesFor(java.lang.String)>(r56);

     label16:
        $r39 = r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries>;

        if $r39 == null goto label19;

        r12 = r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries>;

        i0 = lengthof r12;

        i1 = 0;

     label17:
        if i1 >= i0 goto label19;

        r13 = r12[i1];

        $z12 = virtualinvoke r54.<java.util.ArrayList: boolean contains(java.lang.Object)>(r13);

        if $z12 != 0 goto label18;

        virtualinvoke r54.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r13);

     label18:
        i1 = i1 + 1;

        goto label17;

     label19:
        if r11 == null goto label22;

        r57 = r11;

        i2 = lengthof r57;

        i3 = 0;

     label20:
        if i3 >= i2 goto label22;

        r58 = r57[i3];

        $z13 = virtualinvoke r54.<java.util.ArrayList: boolean contains(java.lang.Object)>(r58);

        if $z13 != 0 goto label21;

        virtualinvoke r54.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r58);

     label21:
        i3 = i3 + 1;

        goto label20;

     label22:
        $r38 = <java.io.File: java.lang.String pathSeparator>;

        r59 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>($r38, r54);

        $r37 = <java.io.File: java.lang.String pathSeparator>;

        r60 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>($r37, r55);

        r61 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $r41 = staticinvoke <android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>();

        $r40 = r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader>;

        $r42 = virtualinvoke $r41.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>(r59, r60, $r40);

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r42;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r61);

        goto label25;

     label23:
        $r18 = r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader>;

        if $r18 != null goto label24;

        $r21 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r21;

        goto label25;

     label24:
        $r17 = r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader>;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r17;

     label25:
        $r19 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        exitmonitor r1;

     label26:
        return $r19;

     label27:
        $r52 := @caughtexception;

        r15 = $r52;

        exitmonitor r1;

     label28:
        throw r15;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    private void initializeJavaContextClassLoader()
    {
        android.app.LoadedApk r0;
        android.content.pm.IPackageManager r1;
        android.content.pm.PackageInfo r2;
        android.os.RemoteException r3, $r21;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6;
        java.lang.ClassLoader r4, $r9;
        java.lang.String $r5, $r6, $r11, $r12, $r17, $r18, $r22, $r27;
        int $i0;
        android.content.pm.ApplicationInfo $r7, $r10;
        java.lang.Thread $r8;
        java.lang.StringBuilder $r14, $r16, $r19, $r23, $r25, $r26, r28, r30;
        java.lang.IllegalStateException r29, r31;
        android.app.LoadedApk$WarningContextClassLoader r32;

        r0 := @this: android.app.LoadedApk;

        r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label01:
        $r5 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r2 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r5, 0, $i0);

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r3 = $r21;

        r29 = new java.lang.IllegalStateException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get package info for ");

        $r22 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; is system dying?");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r27, r3);

        throw r29;

     label04:
        if r2 != null goto label05;

        r31 = new java.lang.IllegalStateException;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get package info for ");

        $r17 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; is package not installed?");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw r31;

     label05:
        $r6 = r2.<android.content.pm.PackageInfo: java.lang.String sharedUserId>;

        if $r6 == null goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        z6 = $z5;

        $r7 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r7 == null goto label08;

        $r11 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r10 = r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r10.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z0 = $z3;

        if z6 != 0 goto label10;

        if z0 == 0 goto label11;

     label10:
        $z2 = 1;

        goto label12;

     label11:
        $z2 = 0;

     label12:
        z1 = $z2;

        if z1 == 0 goto label13;

        r32 = new android.app.LoadedApk$WarningContextClassLoader;

        $r9 = r32;

        specialinvoke r32.<android.app.LoadedApk$WarningContextClassLoader: void <init>(android.app.LoadedApk$1)>(null);

        goto label14;

     label13:
        $r9 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

     label14:
        r4 = $r9;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r4);

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    public java.lang.String getAppDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        return $r1;
    }

    public java.lang.String getLibDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mLibDir>;

        return $r1;
    }

    public java.lang.String getResDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mResDir>;

        return $r1;
    }

    public java.lang.String[] getSplitAppDirs()
    {
        android.app.LoadedApk r0;
        java.lang.String[] $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String[] mSplitAppDirs>;

        return $r1;
    }

    public java.lang.String[] getSplitResDirs()
    {
        android.app.LoadedApk r0;
        java.lang.String[] $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String[] mSplitResDirs>;

        return $r1;
    }

    public java.lang.String[] getOverlayDirs()
    {
        android.app.LoadedApk r0;
        java.lang.String[] $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String[] mOverlayDirs>;

        return $r1;
    }

    public java.lang.String getDataDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mDataDir>;

        return $r1;
    }

    public java.io.File getDataDirFile()
    {
        android.app.LoadedApk r0;
        java.io.File $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.io.File mDataDirFile>;

        return $r1;
    }

    public android.content.res.AssetManager getAssets(android.app.ActivityThread)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.content.res.Resources $r2;
        android.content.res.AssetManager $r3;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        $r2 = virtualinvoke r0.<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)>(r1);

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        return $r3;
    }

    public android.content.res.Resources getResources(android.app.ActivityThread)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.content.res.Resources $r2, $r3, $r9;
        android.content.pm.ApplicationInfo $r4;
        java.lang.String[] $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        $r2 = r0.<android.app.LoadedApk: android.content.res.Resources mResources>;

        if $r2 != null goto label1;

        $r8 = r0.<android.app.LoadedApk: java.lang.String mResDir>;

        $r7 = r0.<android.app.LoadedApk: java.lang.String[] mSplitResDirs>;

        $r6 = r0.<android.app.LoadedApk: java.lang.String[] mOverlayDirs>;

        $r4 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        $r5 = $r4.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        $r9 = virtualinvoke r1.<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.app.LoadedApk)>($r8, $r7, $r6, $r5, 0, null, r0);

        r0.<android.app.LoadedApk: android.content.res.Resources mResources> = $r9;

     label1:
        $r3 = r0.<android.app.LoadedApk: android.content.res.Resources mResources>;

        return $r3;
    }

    public android.app.Application makeApplication(boolean, android.app.Instrumentation)
    {
        android.app.LoadedApk r0;
        boolean z0, $z1, $z3, $z4;
        android.app.Instrumentation r1, $r10, $r23;
        android.app.Application r2, $r6, $r20;
        java.lang.String r3, $r8, $r17, $r28, $r30, $r37, $r39, $r41;
        java.lang.ClassLoader r4, $r16;
        android.app.ContextImpl r5;
        int i0, i1, i2;
        android.content.pm.ApplicationInfo $r7;
        android.app.ActivityThread $r9, $r11, $r12, $r15, $r22;
        java.util.ArrayList $r13;
        android.content.res.AssetManager $r14;
        java.lang.Object $r18;
        java.lang.Exception $r19, $r29, r42, r43;
        java.lang.RuntimeException $r21, $r34;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r31, $r32, $r33, $r35, $r36, $r40;
        java.lang.Class $r38;
        android.util.SparseArray r44;

        r0 := @this: android.app.LoadedApk;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.app.Instrumentation;

        $r6 = r0.<android.app.LoadedApk: android.app.Application mApplication>;

        if $r6 == null goto label01;

        $r20 = r0.<android.app.LoadedApk: android.app.Application mApplication>;

        return $r20;

     label01:
        r2 = null;

        $r7 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        r3 = $r7.<android.content.pm.ApplicationInfo: java.lang.String className>;

        if z0 != 0 goto label02;

        if r3 != null goto label03;

     label02:
        r3 = "android.app.Application";

     label03:
        r4 = virtualinvoke r0.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r8 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z1 != 0 goto label04;

        specialinvoke r0.<android.app.LoadedApk: void initializeJavaContextClassLoader()>();

     label04:
        $r9 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r5 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>($r9, r0);

        $r11 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r10 = $r11.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        r2 = virtualinvoke $r10.<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>(r4, r3, r5);

        virtualinvoke r5.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r2);

     label05:
        goto label07;

     label06:
        $r19 := @caughtexception;

        r42 = $r19;

        $r22 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r23 = $r22.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z3 = virtualinvoke $r23.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r42);

        if $z3 != 0 goto label07;

        $r21 = new java.lang.RuntimeException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate application ");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = virtualinvoke r42.<java.lang.Exception: java.lang.String toString()>();

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r42);

        throw $r21;

     label07:
        $r12 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r13 = $r12.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        r0.<android.app.LoadedApk: android.app.Application mApplication> = r2;

        if r1 == null goto label11;

     label08:
        virtualinvoke r1.<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>(r2);

     label09:
        goto label11;

     label10:
        $r29 := @caughtexception;

        r43 = $r29;

        $z4 = virtualinvoke r1.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r43);

        if $z4 != 0 goto label11;

        $r34 = new java.lang.RuntimeException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application ");

        $r38 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r41 = virtualinvoke r43.<java.lang.Exception: java.lang.String toString()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r39, r43);

        throw $r34;

     label11:
        $r15 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r14 = virtualinvoke r0.<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)>($r15);

        r44 = virtualinvoke $r14.<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers()>();

        i2 = virtualinvoke r44.<android.util.SparseArray: int size()>();

        i0 = 0;

     label12:
        if i0 >= i2 goto label15;

        i1 = virtualinvoke r44.<android.util.SparseArray: int keyAt(int)>(i0);

        if i1 == 1 goto label14;

        if i1 != 127 goto label13;

        goto label14;

     label13:
        $r16 = virtualinvoke r0.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r18 = virtualinvoke r44.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r17 = (java.lang.String) $r18;

        specialinvoke r0.<android.app.LoadedApk: void rewriteRValues(java.lang.ClassLoader,java.lang.String,int)>($r16, $r17, i1);

     label14:
        i0 = i0 + 1;

        goto label12;

     label15:
        return r2;

        catch java.lang.Exception from label03 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private void rewriteRValues(java.lang.ClassLoader, java.lang.String, int)
    {
        android.app.LoadedApk r0;
        java.lang.ClassLoader r1;
        java.lang.String r2, $r10, $r22, $r27;
        int i0;
        java.lang.Class r3, $r12;
        java.lang.IllegalAccessException r6, $r15;
        java.lang.StringBuilder $r7, $r8, $r9, $r17, $r19, $r20, $r24, $r26, $r28;
        java.lang.Class[] $r11;
        java.lang.Object[] $r13;
        java.lang.Integer $r14;
        java.lang.RuntimeException $r18;
        java.lang.reflect.InvocationTargetException $r21, r31;
        java.lang.NoSuchMethodException $r23;
        java.lang.ClassNotFoundException $r25;
        java.lang.reflect.Method r29;
        java.lang.Throwable r30;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label01:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".R");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r10);

     label02:
        goto label04;

     label03:
        $r25 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No resource references to update in package ");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LoadedApk", $r27);

        return;

     label04:
        $r11 = newarray (java.lang.Class)[1];

        $r12 = <java.lang.Integer: java.lang.Class TYPE>;

        $r11[0] = $r12;

        r29 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onResourcesLoaded", $r11);

     label05:
        goto label07;

     label06:
        $r23 := @caughtexception;

        return;

     label07:
        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13[0] = $r14;

        virtualinvoke r29.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r13);

     label08:
        return;

     label09:
        $r15 := @caughtexception;

        r6 = $r15;

        r30 = r6;

        goto label11;

     label10:
        $r21 := @caughtexception;

        r31 = $r21;

        r30 = virtualinvoke r31.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

     label11:
        $r18 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to rewrite resource references for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r22, r30);

        throw $r18;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.IllegalAccessException from label07 to label08 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
    }

    public void removeContextRegistrations(android.content.Context, java.lang.String, java.lang.String)
    {
        android.app.LoadedApk r0;
        android.content.Context r1;
        java.lang.String r2, r3, $r26, $r28, $r46, $r49;
        boolean z0;
        android.util.ArrayMap r4, $r9, $r11, $r14, $r16, r53;
        int i0, $i1, $i3, i5;
        android.app.LoadedApk$ReceiverDispatcher r5;
        android.app.IntentReceiverLeaked r6, $r33, $r45;
        java.lang.Object $r10, $r13, $r17, $r35;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r23, $r24, $r27, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r47;
        android.app.ServiceConnectionLeaked $r19, $r29, r55;
        android.content.ServiceConnection $r25;
        java.lang.StackTraceElement[] $r30, $r44;
        android.app.IServiceConnection $r31;
        android.app.IActivityManager $r32, $r48;
        android.content.BroadcastReceiver $r43;
        android.os.RemoteException $r50, $r51;
        android.content.IIntentReceiver $r52;
        android.app.LoadedApk$ServiceDispatcher r54;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 = staticinvoke <android.os.StrictMode: boolean vmRegistrationLeaksEnabled()>();

        $r9 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (android.util.ArrayMap) $r10;

        if r4 == null goto label06;

        i0 = 0;

     label01:
        $i3 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if i0 >= $i3 goto label06;

        $r35 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r5 = (android.app.LoadedApk$ReceiverDispatcher) $r35;

        $r33 = new android.app.IntentReceiverLeaked;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked IntentReceiver ");

        $r43 = virtualinvoke r5.<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("originally registered here. Are you missing a ");

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call to unregisterReceiver()?");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>($r46);

        r6 = $r33;

        $r45 = virtualinvoke r5.<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>();

        $r44 = virtualinvoke $r45.<android.app.IntentReceiverLeaked: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r6.<android.app.IntentReceiverLeaked: void setStackTrace(java.lang.StackTraceElement[])>($r44);

        $r49 = virtualinvoke r6.<android.app.IntentReceiverLeaked: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r49, r6);

        if z0 == 0 goto label02;

        staticinvoke <android.os.StrictMode: void onIntentReceiverLeaked(java.lang.Throwable)>(r6);

     label02:
        $r48 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r52 = virtualinvoke r5.<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>();

        interfaceinvoke $r48.<android.app.IActivityManager: void unregisterReceiver(android.content.IIntentReceiver)>($r52);

     label03:
        goto label05;

     label04:
        $r51 := @caughtexception;

     label05:
        i0 = i0 + 1;

        goto label01;

     label06:
        $r11 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r14 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        $r13 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r53 = (android.util.ArrayMap) $r13;

        if r53 == null goto label12;

        i5 = 0;

     label07:
        $i1 = virtualinvoke r53.<android.util.ArrayMap: int size()>();

        if i5 >= $i1 goto label12;

        $r17 = virtualinvoke r53.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r54 = (android.app.LoadedApk$ServiceDispatcher) $r17;

        $r19 = new android.app.ServiceConnectionLeaked;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked ServiceConnection ");

        $r25 = virtualinvoke r54.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was originally bound here");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>($r26);

        r55 = $r19;

        $r29 = virtualinvoke r54.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>();

        $r30 = virtualinvoke $r29.<android.app.ServiceConnectionLeaked: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r55.<android.app.ServiceConnectionLeaked: void setStackTrace(java.lang.StackTraceElement[])>($r30);

        $r28 = virtualinvoke r55.<android.app.ServiceConnectionLeaked: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r28, r55);

        if z0 == 0 goto label08;

        staticinvoke <android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)>(r55);

     label08:
        $r32 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r31 = virtualinvoke r54.<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        interfaceinvoke $r32.<android.app.IActivityManager: boolean unbindService(android.app.IServiceConnection)>($r31);

     label09:
        goto label11;

     label10:
        $r50 := @caughtexception;

     label11:
        virtualinvoke r54.<android.app.LoadedApk$ServiceDispatcher: void doForget()>();

        i5 = i5 + 1;

        goto label07;

     label12:
        $r16 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver, android.content.Context, android.os.Handler, android.app.Instrumentation, boolean)
    {
        android.app.LoadedApk r0;
        android.content.BroadcastReceiver r1;
        android.content.Context r2;
        android.os.Handler r3;
        android.app.Instrumentation r4;
        boolean z0;
        android.util.ArrayMap r5, r7, $r9, $r13, $r15, $r17;
        android.app.LoadedApk$ReceiverDispatcher r6, $r11;
        java.lang.Throwable r8, $r18;
        android.content.IIntentReceiver $r10;
        java.lang.Object $r16, $r19;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.BroadcastReceiver;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: android.app.Instrumentation;

        z0 := @parameter4: boolean;

        $r9 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        r5 = $r9;

        entermonitor $r9;

     label1:
        r6 = null;

        r7 = null;

        if z0 == 0 goto label2;

        $r17 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        $r16 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r7 = (android.util.ArrayMap) $r16;

        if r7 == null goto label2;

        $r19 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (android.app.LoadedApk$ReceiverDispatcher) $r19;

     label2:
        if r6 != null goto label4;

        $r11 = new android.app.LoadedApk$ReceiverDispatcher;

        specialinvoke $r11.<android.app.LoadedApk$ReceiverDispatcher: void <init>(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>(r1, r2, r3, r4, z0);

        r6 = $r11;

        if z0 == 0 goto label5;

        if r7 != null goto label3;

        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>()>();

        r7 = $r13;

        $r15 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r7);

     label3:
        virtualinvoke r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

        goto label5;

     label4:
        virtualinvoke r6.<android.app.LoadedApk$ReceiverDispatcher: void validate(android.content.Context,android.os.Handler)>(r2, r3);

     label5:
        r6.<android.app.LoadedApk$ReceiverDispatcher: boolean mForgotten> = 0;

        $r10 = virtualinvoke r6.<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>();

        exitmonitor r5;

     label6:
        return $r10;

     label7:
        $r18 := @caughtexception;

        r8 = $r18;

        exitmonitor r5;

     label8:
        throw r8;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context, android.content.BroadcastReceiver)
    {
        android.app.LoadedApk r0;
        android.content.Context r1;
        android.content.BroadcastReceiver r2;
        android.util.ArrayMap r3, r4, r5, $r8, $r9, $r11, $r35, $r37, $r38, $r40, r42;
        java.lang.IllegalArgumentException r6, $r13, $r27, $r34;
        java.lang.Throwable r7, $r39;
        java.lang.Object $r10, $r12, $r25, $r30, $r36;
        java.lang.StringBuilder $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r24, $r26, $r28, $r29, $r31;
        java.lang.IllegalStateException $r17;
        java.lang.String $r18, $r23, $r32;
        android.content.IIntentReceiver $r33;
        int $i0;
        boolean $z0;
        android.app.LoadedApk$ReceiverDispatcher r41, r43;
        java.lang.RuntimeException r44;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.BroadcastReceiver;

        $r8 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        r3 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.util.ArrayMap) $r10;

        if r4 == null goto label06;

        $r30 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r41 = (android.app.LoadedApk$ReceiverDispatcher) $r30;

        if r41 == null goto label06;

        virtualinvoke r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        $i0 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if $i0 != 0 goto label02;

        $r40 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label02:
        $z0 = virtualinvoke r2.<android.content.BroadcastReceiver: boolean getDebugUnregister()>();

        if $z0 == 0 goto label04;

        $r35 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        $r36 = virtualinvoke $r35.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.util.ArrayMap) $r36;

        if r5 != null goto label03;

        $r38 = new android.util.ArrayMap;

        specialinvoke $r38.<android.util.ArrayMap: void <init>()>();

        r5 = $r38;

        $r37 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label03:
        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Originally unregistered here:");

        r6 = $r34;

        virtualinvoke r6.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        virtualinvoke r41.<android.app.LoadedApk$ReceiverDispatcher: void setUnregisterLocation(java.lang.RuntimeException)>(r6);

        virtualinvoke r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r41);

     label04:
        r41.<android.app.LoadedApk$ReceiverDispatcher: boolean mForgotten> = 1;

        $r33 = virtualinvoke r41.<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>();

        exitmonitor r3;

     label05:
        return $r33;

     label06:
        $r11 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r42 = (android.util.ArrayMap) $r12;

        if r42 == null goto label07;

        $r25 = virtualinvoke r42.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r43 = (android.app.LoadedApk$ReceiverDispatcher) $r25;

        if r43 == null goto label07;

        r44 = virtualinvoke r43.<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>();

        $r27 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistering Receiver ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was already unregistered");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r44);

        throw $r27;

     label07:
        if r1 != null goto label08;

        $r17 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Receiver ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Context that is no longer in use: ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label08:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver not registered: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label09:
        $r39 := @caughtexception;

        r7 = $r39;

        exitmonitor r3;

     label10:
        throw r7;

        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.lang.Throwable from label06 to label10 with label09;
    }

    public final android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)
    {
        android.app.LoadedApk r0;
        android.content.ServiceConnection r1;
        android.content.Context r2;
        android.os.Handler r3;
        int i0;
        android.util.ArrayMap r4, r6, $r8, $r9, $r14, $r15;
        android.app.LoadedApk$ServiceDispatcher r5, $r12;
        java.lang.Throwable r7, $r18;
        java.lang.Object $r10, $r16;
        android.app.IServiceConnection $r11;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.ServiceConnection;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        $r8 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        r4 = $r8;

        entermonitor $r8;

     label1:
        r5 = null;

        $r9 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.util.ArrayMap) $r10;

        if r6 == null goto label2;

        $r16 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.app.LoadedApk$ServiceDispatcher) $r16;

     label2:
        if r5 != null goto label4;

        $r12 = new android.app.LoadedApk$ServiceDispatcher;

        specialinvoke $r12.<android.app.LoadedApk$ServiceDispatcher: void <init>(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>(r1, r2, r3, i0);

        r5 = $r12;

        if r6 != null goto label3;

        $r15 = new android.util.ArrayMap;

        specialinvoke $r15.<android.util.ArrayMap: void <init>()>();

        r6 = $r15;

        $r14 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);

     label3:
        virtualinvoke r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        goto label5;

     label4:
        virtualinvoke r5.<android.app.LoadedApk$ServiceDispatcher: void validate(android.content.Context,android.os.Handler)>(r2, r3);

     label5:
        $r11 = virtualinvoke r5.<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        exitmonitor r4;

     label6:
        return $r11;

     label7:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r4;

     label8:
        throw r7;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public final android.app.IServiceConnection forgetServiceDispatcher(android.content.Context, android.content.ServiceConnection)
    {
        android.app.LoadedApk r0;
        android.content.Context r1;
        android.content.ServiceConnection r2;
        android.util.ArrayMap r3, r4, r5, $r8, $r9, $r11, $r36, $r37, $r38, $r40, r42;
        java.lang.IllegalArgumentException r6, $r13, $r27, $r35;
        java.lang.Throwable r7, $r39;
        java.lang.Object $r10, $r12, $r25, $r30, $r34;
        java.lang.StringBuilder $r14, $r15, $r16, $r19, $r20, $r21, $r22, $r24, $r26, $r28, $r29, $r31;
        java.lang.IllegalStateException $r17;
        java.lang.String $r18, $r23, $r32;
        int $i0, $i1, $i2;
        android.app.IServiceConnection $r33;
        android.app.LoadedApk$ServiceDispatcher r41, r43;
        java.lang.RuntimeException r44;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ServiceConnection;

        $r8 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        r3 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.util.ArrayMap) $r10;

        if r4 == null goto label06;

        $r30 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r41 = (android.app.LoadedApk$ServiceDispatcher) $r30;

        if r41 == null goto label06;

        virtualinvoke r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        virtualinvoke r41.<android.app.LoadedApk$ServiceDispatcher: void doForget()>();

        $i1 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if $i1 != 0 goto label02;

        $r40 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label02:
        $i2 = virtualinvoke r41.<android.app.LoadedApk$ServiceDispatcher: int getFlags()>();

        $i0 = $i2 & 2;

        if $i0 == 0 goto label04;

        $r36 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        $r34 = virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.util.ArrayMap) $r34;

        if r5 != null goto label03;

        $r37 = new android.util.ArrayMap;

        specialinvoke $r37.<android.util.ArrayMap: void <init>()>();

        r5 = $r37;

        $r38 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label03:
        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Originally unbound here:");

        r6 = $r35;

        virtualinvoke r6.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        virtualinvoke r41.<android.app.LoadedApk$ServiceDispatcher: void setUnbindLocation(java.lang.RuntimeException)>(r6);

        virtualinvoke r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r41);

     label04:
        $r33 = virtualinvoke r41.<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        exitmonitor r3;

     label05:
        return $r33;

     label06:
        $r11 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r42 = (android.util.ArrayMap) $r12;

        if r42 == null goto label07;

        $r25 = virtualinvoke r42.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r43 = (android.app.LoadedApk$ServiceDispatcher) $r25;

        if r43 == null goto label07;

        r44 = virtualinvoke r43.<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>();

        $r27 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Service ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was already unbound");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r44);

        throw $r27;

     label07:
        if r1 != null goto label08;

        $r17 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Service ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Context that is no longer in use: ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label08:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service not registered: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label09:
        $r39 := @caughtexception;

        r7 = $r39;

        exitmonitor r3;

     label10:
        throw r7;

        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.lang.Throwable from label06 to label10 with label09;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <android.app.LoadedApk: java.lang.String TAG> = "LoadedApk";

        $r0 = class "android/app/LoadedApk";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <android.app.LoadedApk: boolean $assertionsDisabled> = $z1;

        return;
    }
}
