public final class android.provider.DocumentsContract extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final java.lang.String PROVIDER_INTERFACE;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String EXTRA_SHOW_ADVANCED;
    public static final java.lang.String EXTRA_ORIENTATION;
    public static final java.lang.String ACTION_MANAGE_ROOT;
    public static final java.lang.String ACTION_MANAGE_DOCUMENT;
    private static final int THUMBNAIL_BUFFER_SIZE;
    public static final java.lang.String EXTRA_LOADING;
    public static final java.lang.String EXTRA_INFO;
    public static final java.lang.String EXTRA_ERROR;
    public static final java.lang.String METHOD_CREATE_DOCUMENT;
    public static final java.lang.String METHOD_RENAME_DOCUMENT;
    public static final java.lang.String METHOD_DELETE_DOCUMENT;
    public static final java.lang.String EXTRA_URI;
    private static final java.lang.String PATH_ROOT;
    private static final java.lang.String PATH_RECENT;
    private static final java.lang.String PATH_DOCUMENT;
    private static final java.lang.String PATH_CHILDREN;
    private static final java.lang.String PATH_SEARCH;
    private static final java.lang.String PATH_TREE;
    private static final java.lang.String PARAM_QUERY;
    private static final java.lang.String PARAM_MANAGE;

    private void <init>()
    {
        android.provider.DocumentsContract r0;

        r0 := @this: android.provider.DocumentsContract;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri buildRootsUri(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri$Builder $r1, $r2, $r3, $r4;
        android.net.Uri $r5;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.Uri$Builder;

        specialinvoke $r1.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public static android.net.Uri buildRootUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6;
        android.net.Uri $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static android.net.Uri buildRecentDocumentsUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6, $r7;
        android.net.Uri $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("recent");

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;
    }

    public static android.net.Uri buildTreeDocumentUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6;
        android.net.Uri $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("tree");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static android.net.Uri buildDocumentUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6;
        android.net.Uri $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("document");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static android.net.Uri buildDocumentUriUsingTree(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0, $r11;
        java.lang.String r1, $r4, $r7;
        android.net.Uri$Builder $r2, $r3, $r5, $r6, $r8, $r9, $r10;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $r5 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("tree");

        $r7 = staticinvoke <android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>(r0);

        $r8 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("document");

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r11;
    }

    public static android.net.Uri buildDocumentUriMaybeUsingTree(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0, $r3, $r4;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.provider.DocumentsContract: boolean isTreeUri(android.net.Uri)>(r0);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)>(r0, r1);

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $r3 = staticinvoke <android.provider.DocumentsContract: android.net.Uri buildDocumentUri(java.lang.String,java.lang.String)>($r2, r1);

        return $r3;
    }

    public static android.net.Uri buildChildDocumentsUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6, $r7;
        android.net.Uri $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("document");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("children");

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;
    }

    public static android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0, $r12;
        java.lang.String r1, $r4, $r7;
        android.net.Uri$Builder $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $r5 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("tree");

        $r7 = staticinvoke <android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>(r0);

        $r8 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("document");

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("children");

        $r12 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r12;
    }

    public static android.net.Uri buildSearchDocumentsUri(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        android.net.Uri$Builder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        android.net.Uri $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new android.net.Uri$Builder;

        specialinvoke $r3.<android.net.Uri$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("search");

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("query", r2);

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r10;
    }

    public static boolean isDocumentUri(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.util.List r2;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r7, $r8, $r10;
        java.lang.Object $r4, $r6, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 2 goto label1;

        $r8 = "document";

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label1;

        $r10 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z4 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentsProvider(android.content.Context,java.lang.String)>(r0, $r10);

        return $z4;

     label1:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != 4 goto label2;

        $r3 = "tree";

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = "document";

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(2);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z2 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentsProvider(android.content.Context,java.lang.String)>(r0, $r7);

        return $z2;

     label2:
        return 0;
    }

    public static boolean isTreeUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        int $i0;
        java.lang.String $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r2 = "tree";

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static boolean isDocumentsProvider(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r10;
        android.content.Intent r2, $r6;
        java.util.List r3;
        java.util.Iterator r4;
        android.content.pm.ResolveInfo r5;
        android.content.pm.PackageManager $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        android.content.pm.ProviderInfo $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.DOCUMENTS_PROVIDER");

        r2 = $r6;

        $r7 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>(r2, 0);

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.ResolveInfo) $r8;

        $r9 = r5.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo>;

        $r10 = $r9.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public static java.lang.String getRootId(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7, $r10;
        java.lang.Object $r8, $r9;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r7 = "root";

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = (java.lang.String) $r9;

        return $r10;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URI: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static java.lang.String getDocumentId(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7, $r9, $r11, $r14, $r16;
        java.lang.Object $r8, $r10, $r12, $r13, $r15;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r14 = "document";

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label1;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r16 = (java.lang.String) $r15;

        return $r16;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 < 4 goto label2;

        $r7 = "tree";

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = "document";

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(3);

        $r11 = (java.lang.String) $r12;

        return $r11;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URI: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static java.lang.String getTreeDocumentId(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7, $r10;
        java.lang.Object $r8, $r9;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r7 = "tree";

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = (java.lang.String) $r9;

        return $r10;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URI: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static java.lang.String getSearchDocumentsQuery(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("query");

        return $r1;
    }

    public static android.net.Uri setManageMode(android.net.Uri)
    {
        android.net.Uri r0, $r3;
        android.net.Uri$Builder $r1, $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("manage", "true");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r3;
    }

    public static boolean isManageMode(android.net.Uri)
    {
        android.net.Uri r0;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        $z0 = virtualinvoke r0.<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>("manage", 0);

        return $z0;
    }

    public static android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver, android.net.Uri, android.graphics.Point, android.os.CancellationSignal)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.graphics.Point r2;
        android.os.CancellationSignal r3;
        android.content.ContentProviderClient r4;
        android.graphics.Bitmap r5;
        java.lang.Throwable r6, $r15;
        java.lang.String $r7, $r13;
        java.lang.Exception $r8, r16;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.graphics.Point;

        r3 := @parameter3: android.os.CancellationSignal;

        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r7);

     label1:
        r5 = staticinvoke <android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentProviderClient,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>(r4, r1, r2, r3);

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return r5;

     label3:
        $r8 := @caughtexception;

        r16 = $r8;

        $z0 = r16 instanceof android.os.OperationCanceledException;

        if $z0 != 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load thumbnail for ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Documents", $r13);

     label4:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return null;

     label5:
        $r15 := @caughtexception;

        r6 = $r15;

     label6:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        throw r6;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.graphics.Bitmap getDocumentThumbnail(android.content.ContentProviderClient, android.net.Uri, android.graphics.Point, android.os.CancellationSignal) throws android.os.RemoteException, java.io.IOException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.graphics.Point r2;
        android.os.CancellationSignal r3;
        android.os.Bundle r4, $r11, r21;
        android.content.res.AssetFileDescriptor r5;
        java.io.FileDescriptor r6;
        long l0;
        java.io.BufferedInputStream r7, $r18;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.system.ErrnoException r8, $r14, $r15;
        java.lang.Throwable r9, $r16;
        android.graphics.Matrix r10, $r13;
        android.graphics.BitmapFactory$Options $r12, r19;
        float $f0, $f1, $f2;
        java.io.FileInputStream $r17;
        android.graphics.Bitmap r20;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.graphics.Point;

        r3 := @parameter3: android.os.CancellationSignal;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r4 = $r11;

        virtualinvoke r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.content.extra.SIZE", r2);

        r5 = null;

     label01:
        r5 = virtualinvoke r0.<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r1, "image/*", r4, r3);

        r6 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        l0 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        r7 = null;

     label02:
        $i6 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>(r6, l0, $i6);

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

        $r18 = new java.io.BufferedInputStream;

        $r17 = new java.io.FileInputStream;

        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r6);

        specialinvoke $r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r17, 131072);

        r7 = $r18;

        virtualinvoke r7.<java.io.BufferedInputStream: void mark(int)>(131072);

     label05:
        $r12 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r12.<android.graphics.BitmapFactory$Options: void <init>()>();

        r19 = $r12;

        r19.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        if r7 == null goto label06;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r7, null, r19);

        goto label07;

     label06:
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r19);

     label07:
        $i7 = r19.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i8 = r2.<android.graphics.Point: int x>;

        i1 = $i7 / $i8;

        $i9 = r19.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i10 = r2.<android.graphics.Point: int y>;

        i2 = $i9 / $i10;

        r19.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        r19.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i11;

        if r7 == null goto label08;

        virtualinvoke r7.<java.io.BufferedInputStream: void reset()>();

        r20 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r7, null, r19);

        goto label12;

     label08:
        $i12 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>(r6, l0, $i12);

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        r8 = $r15;

        virtualinvoke r8.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

     label11:
        r20 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r19);

     label12:
        r21 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>();

        if r21 == null goto label13;

        $i15 = virtualinvoke r21.<android.os.Bundle: int getInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 0);

        goto label14;

     label13:
        $i15 = 0;

     label14:
        i3 = $i15;

        if i3 == 0 goto label15;

        i5 = virtualinvoke r20.<android.graphics.Bitmap: int getWidth()>();

        i4 = virtualinvoke r20.<android.graphics.Bitmap: int getHeight()>();

        $r13 = new android.graphics.Matrix;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        r10 = $r13;

        $f2 = (float) i3;

        $i13 = i5 / 2;

        $f1 = (float) $i13;

        $i14 = i4 / 2;

        $f0 = (float) $i14;

        virtualinvoke r10.<android.graphics.Matrix: void setRotate(float,float,float)>($f2, $f1, $f0);

        r20 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r20, 0, 0, i5, i4, r10, 0);

     label15:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        goto label18;

     label16:
        $r16 := @caughtexception;

        r9 = $r16;

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        throw r9;

     label18:
        return r20;

        catch android.system.ErrnoException from label02 to label03 with label04;
        catch android.system.ErrnoException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static android.net.Uri createDocument(android.content.ContentResolver, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r5;
        java.lang.String r2, r3, $r7;
        android.content.ContentProviderClient r4;
        java.lang.Throwable r6, $r9;
        java.lang.Exception $r8, r10;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r7);

     label1:
        r5 = staticinvoke <android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentProviderClient,android.net.Uri,java.lang.String,java.lang.String)>(r4, r1, r2, r3);

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return r5;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to create document", r10);

     label4:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return null;

     label5:
        $r9 := @caughtexception;

        r6 = $r9;

     label6:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        throw r6;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.net.Uri createDocument(android.content.ContentProviderClient, android.net.Uri, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1, $r8;
        java.lang.String r2, r3;
        android.os.Bundle r4, r5, $r6;
        android.os.Parcelable $r7;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r4 = $r6;

        virtualinvoke r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("uri", r1);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("mime_type", r2);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_display_name", r3);

        r5 = virtualinvoke r0.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("android:createDocument", null, r4);

        $r7 = virtualinvoke r5.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("uri");

        $r8 = (android.net.Uri) $r7;

        return $r8;
    }

    public static android.net.Uri renameDocument(android.content.ContentResolver, android.net.Uri, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r4;
        java.lang.String r2, $r6;
        android.content.ContentProviderClient r3;
        java.lang.Throwable r5, $r8;
        java.lang.Exception $r7, r9;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        $r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r6);

     label1:
        r4 = staticinvoke <android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentProviderClient,android.net.Uri,java.lang.String)>(r3, r1, r2);

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r3);

        return r4;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to rename document", r9);

     label4:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r3);

        return null;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r3);

        throw r5;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.net.Uri renameDocument(android.content.ContentProviderClient, android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1, r5, $r8;
        java.lang.String r2;
        android.os.Bundle r3, r4, $r6;
        android.os.Parcelable $r7;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("uri", r1);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_display_name", r2);

        r4 = virtualinvoke r0.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("android:renameDocument", null, r3);

        $r7 = virtualinvoke r4.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("uri");

        r5 = (android.net.Uri) $r7;

        if r5 == null goto label1;

        $r8 = r5;

        goto label2;

     label1:
        $r8 = r1;

     label2:
        return $r8;
    }

    public static boolean deleteDocument(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.ContentProviderClient r2;
        boolean z0, z1;
        java.lang.Throwable r3, $r5;
        java.lang.String $r4;
        java.lang.Exception $r6, r7;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r4);

     label1:
        staticinvoke <android.provider.DocumentsContract: void deleteDocument(android.content.ContentProviderClient,android.net.Uri)>(r2, r1);

        z0 = 1;

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r2);

        return z0;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to delete document", r7);

        z1 = 0;

     label4:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r2);

        return z1;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r2);

        throw r3;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void deleteDocument(android.content.ContentProviderClient, android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.os.Bundle r2, $r3;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("uri", r1);

        virtualinvoke r0.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("android:deleteDocument", null, r2);

        return;
    }

    public static android.content.res.AssetFileDescriptor openImageThumbnail(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.File r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Bundle r2, $r7, $r10, $r12;
        android.media.ExifInterface r3, $r5;
        long[] r4;
        java.lang.String $r6;
        int $i0;
        android.content.res.AssetFileDescriptor $r8, $r9;
        long $l1, $l2;
        java.io.IOException $r11;

        r0 := @parameter0: java.io.File;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r0, 268435456);

        r2 = null;

     label1:
        $r5 = new android.media.ExifInterface;

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r5.<android.media.ExifInterface: void <init>(java.lang.String)>($r6);

        r3 = $r5;

        $i0 = virtualinvoke r3.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", -1);

        lookupswitch($i0)
        {
            case 3: goto label3;
            case 6: goto label2;
            case 8: goto label4;
            default: goto label5;
        };

     label2:
        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>(int)>(1);

        r2 = $r10;

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 90);

        goto label5;

     label3:
        $r12 = new android.os.Bundle;

        specialinvoke $r12.<android.os.Bundle: void <init>(int)>(1);

        r2 = $r12;

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 180);

        goto label5;

     label4:
        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>(int)>(1);

        r2 = $r7;

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 270);

     label5:
        r4 = virtualinvoke r3.<android.media.ExifInterface: long[] getThumbnailRange()>();

        if r4 == null goto label7;

        $r9 = new android.content.res.AssetFileDescriptor;

        $l2 = r4[0];

        $l1 = r4[1];

        specialinvoke $r9.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>(r1, $l2, $l1, r2);

     label6:
        return $r9;

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

     label9:
        $r8 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r8.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>(r1, 0L, -1L, r2);

        return $r8;

        catch java.io.IOException from label1 to label6 with label8;
    }

    public static void <clinit>()
    {
        <android.provider.DocumentsContract: java.lang.String PARAM_MANAGE> = "manage";

        <android.provider.DocumentsContract: java.lang.String PARAM_QUERY> = "query";

        <android.provider.DocumentsContract: java.lang.String PATH_TREE> = "tree";

        <android.provider.DocumentsContract: java.lang.String PATH_SEARCH> = "search";

        <android.provider.DocumentsContract: java.lang.String PATH_CHILDREN> = "children";

        <android.provider.DocumentsContract: java.lang.String PATH_DOCUMENT> = "document";

        <android.provider.DocumentsContract: java.lang.String PATH_RECENT> = "recent";

        <android.provider.DocumentsContract: java.lang.String PATH_ROOT> = "root";

        <android.provider.DocumentsContract: java.lang.String EXTRA_URI> = "uri";

        <android.provider.DocumentsContract: java.lang.String METHOD_DELETE_DOCUMENT> = "android:deleteDocument";

        <android.provider.DocumentsContract: java.lang.String METHOD_RENAME_DOCUMENT> = "android:renameDocument";

        <android.provider.DocumentsContract: java.lang.String METHOD_CREATE_DOCUMENT> = "android:createDocument";

        <android.provider.DocumentsContract: java.lang.String EXTRA_ERROR> = "error";

        <android.provider.DocumentsContract: java.lang.String EXTRA_INFO> = "info";

        <android.provider.DocumentsContract: java.lang.String EXTRA_LOADING> = "loading";

        <android.provider.DocumentsContract: int THUMBNAIL_BUFFER_SIZE> = 131072;

        <android.provider.DocumentsContract: java.lang.String ACTION_MANAGE_DOCUMENT> = "android.provider.action.MANAGE_DOCUMENT";

        <android.provider.DocumentsContract: java.lang.String ACTION_MANAGE_ROOT> = "android.provider.action.MANAGE_ROOT";

        <android.provider.DocumentsContract: java.lang.String EXTRA_ORIENTATION> = "android.content.extra.ORIENTATION";

        <android.provider.DocumentsContract: java.lang.String EXTRA_SHOW_ADVANCED> = "android.content.extra.SHOW_ADVANCED";

        <android.provider.DocumentsContract: java.lang.String EXTRA_PACKAGE_NAME> = "android.content.extra.PACKAGE_NAME";

        <android.provider.DocumentsContract: java.lang.String PROVIDER_INTERFACE> = "android.content.action.DOCUMENTS_PROVIDER";

        <android.provider.DocumentsContract: java.lang.String TAG> = "Documents";

        return;
    }
}
